/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_ddpd_AB_xx.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2212_12_11(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C152059 = 0 * ae;
    const double C152058 = ae * be;
    const double C152057 = 0 * be;
    const double C152056 = 0 * be;
    const double C152055 = ae + be;
    const double C152054 = 0 * be;
    const double C152053 = xA - xB;
    const double C152154 = 0 * be;
    const double C152267 = p + q;
    const double C152266 = p * q;
    const double C152272 = xP - xQ;
    const double C152271 = bs[2];
    const double C152277 = bs[3];
    const double C152288 = bs[4];
    const double C152309 = bs[5];
    const double C152345 = bs[6];
    const double C152401 = bs[7];
    const double C152477 = bs[8];
    const double C152559 = yP - yQ;
    const double C152632 = zP - zQ;
    const double C144 = bs[0];
    const double C153494 = ce + de;
    const double C153493 = ce * de;
    const double C153492 = xC - xD;
    const double C153516 = yC - yD;
    const double C153532 = zC - zD;
    const double C153620 = yA - yB;
    const double C153632 = zA - zB;
    const double C152118 = 2 * C152058;
    const double C152115 = -2 * C152057;
    const double C152114 = -2 * C152056;
    const double C152066 = C152059 / C152055;
    const double C152063 = C152057 / C152055;
    const double C152061 = 2 * C152055;
    const double C152060 = std::pow(C152055, 2);
    const double C152065 = C152058 * C152053;
    const double C152064 = C152053 * C152057;
    const double C152062 = C152053 * C152056;
    const double C153458 = C152053 * be;
    const double C153457 = C152053 * ae;
    const double C153456 = std::pow(C152053, 2);
    const double C152155 = C152154 / C152055;
    const double C152268 = 2 * C152266;
    const double C152280 = C152272 * ae;
    const double C152279 = C152272 * be;
    const double C152276 = std::pow(C152272, 2);
    const double C152575 = std::pow(C152559, 2);
    const double C152648 = std::pow(C152632, 2);
    const double C153496 = 2 * C153494;
    const double C153506 = std::pow(C153494, 2);
    const double C153498 = C153492 * de;
    const double C153497 = C153492 * ce;
    const double C153495 = std::pow(C153492, 2);
    const double C153517 = std::pow(C153516, 2);
    const double C153569 = C153516 * de;
    const double C153568 = C153516 * ce;
    const double C153533 = std::pow(C153532, 2);
    const double C153597 = C153532 * de;
    const double C153596 = C153532 * ce;
    const double C153621 = std::pow(C153620, 2);
    const double C153676 = C153620 * be;
    const double C153674 = C153620 * ae;
    const double C153633 = std::pow(C153632, 2);
    const double C153716 = C153632 * be;
    const double C153714 = C153632 * ae;
    const double C152122 = ae * C152115;
    const double C152121 = ae * C152114;
    const double C153470 = std::pow(C152061, -1);
    const double C153834 = std::pow(C152061, -2);
    const double C152067 = 2 * C152060;
    const double C152113 = C152060 * C152061;
    const double C152159 = 4 * C152060;
    const double C152069 = C152064 / C152055;
    const double C152068 = C152062 / C152055;
    const double C153827 = std::pow(C153457, 2);
    const double C153459 = C153456 * C152058;
    const double C152270 = C152268 / C152267;
    const double C168 =
        ((std::pow(xP - xQ, 2) * bs[2] * std::pow(C152268 / C152267, 2) -
          (bs[1] * C152268) / C152267) *
         C152058) /
        C152060;
    const double C145 = -(C152272 * bs[1] * C152268) / C152267;
    const double C307 = -(C152559 * bs[1] * C152268) / C152267;
    const double C480 = -(C152632 * bs[1] * C152268) / C152267;
    const double C152283 = C152277 * C152280;
    const double C152294 = C152288 * C152280;
    const double C152317 = C152309 * C152280;
    const double C152357 = C152345 * C152280;
    const double C152417 = C152401 * C152280;
    const double C152497 = C152477 * C152280;
    const double C153 = (-(bs[1] * C152280 * C152268) / C152267) / C152055;
    const double C152282 = C152277 * C152279;
    const double C152291 = C152288 * C152279;
    const double C152313 = C152309 * C152279;
    const double C152353 = C152345 * C152279;
    const double C152413 = C152401 * C152279;
    const double C152493 = C152477 * C152279;
    const double C152 = (-(bs[1] * C152279 * C152268) / C152267) / C152055;
    const double C152290 = C152276 * C152288;
    const double C152312 = C152276 * C152309;
    const double C152352 = C152276 * C152345;
    const double C152412 = C152276 * C152401;
    const double C152492 = C152276 * C152477;
    const double C153507 = std::pow(C153496, -1);
    const double C153846 = std::pow(C153496, -2);
    const double C153511 = 2 * C153506;
    const double C153844 = 4 * C153506;
    const double C153499 = C153495 * C153493;
    const double C153518 = C153517 * C153493;
    const double C153534 = C153533 * C153493;
    const double C153622 = C153621 * C152058;
    const double C153858 = std::pow(C153674, 2);
    const double C153634 = C153633 * C152058;
    const double C153860 = std::pow(C153714, 2);
    const double C152126 = C152053 * C152122;
    const double C152076 = C152057 / C152067;
    const double C152073 = C152056 / C152067;
    const double C152072 = C152054 / C152067;
    const double C152127 = C152122 / C152113;
    const double C152125 = C152121 / C152113;
    const double C153837 = 4 * C152113;
    const double C152161 = C152055 * C152159;
    const double C152074 = 0 - C152069;
    const double C152071 = 0 - C152068;
    const double C153460 = C153459 / C152055;
    const double C152273 = std::pow(C152270, 2);
    const double C152278 = -C152270;
    const double C152289 = std::pow(C152270, 4);
    const double C152346 = std::pow(C152270, 6);
    const double C152478 = std::pow(C152270, 8);
    const double C153500 = C153499 / C153494;
    const double C153519 = C153518 / C153494;
    const double C153535 = C153534 / C153494;
    const double C153623 = C153622 / C152055;
    const double C153635 = C153634 / C152055;
    const double C152130 = C152126 / C152060;
    const double C152079 = C152074 * ae;
    const double C152078 = C152071 * ae;
    const double C153461 = -C153460;
    const double C152275 = C152271 * C152273;
    const double C169 = (ae * C152273 * C152271 * C152272 * be +
                         be * C152273 * C152271 * C152272 * ae +
                         C152272 *
                             (C152271 * C152273 + std::pow(C152272, 2) * bs[3] *
                                                      std::pow(-C152270, 3)) *
                             C152058) /
                        C152060;
    const double C154 = (C152272 * C152273 * C152271 * C152279) / C152055 -
                        (be * bs[1] * C152268) / (C152267 * C152055);
    const double C155 = (C152272 * C152273 * C152271 * C152280) / C152055 -
                        (ae * bs[1] * C152268) / (C152267 * C152055);
    const double C323 = (C152559 * C152273 * C152271 * C152279) / C152055;
    const double C324 = (C152559 * C152273 * C152271 * C152280) / C152055;
    const double C496 = (C152632 * C152273 * C152271 * C152279) / C152055;
    const double C497 = (C152632 * C152273 * C152271 * C152280) / C152055;
    const double C152281 = std::pow(C152278, 3);
    const double C152310 = std::pow(C152278, 5);
    const double C152402 = std::pow(C152278, 7);
    const double C152298 = C152289 * C152294;
    const double C152297 = C152289 * C152291;
    const double C152296 = C152290 * C152289;
    const double C152308 = C152288 * C152289;
    const double C152364 = C152346 * C152357;
    const double C152361 = C152346 * C152353;
    const double C152360 = C152352 * C152346;
    const double C152400 = C152345 * C152346;
    const double C152506 = C152478 * C152497;
    const double C152503 = C152478 * C152493;
    const double C152502 = C152492 * C152478;
    const double C153501 = -C153500;
    const double C153520 = -C153519;
    const double C153536 = -C153535;
    const double C153624 = -C153623;
    const double C153636 = -C153635;
    const double C152083 = C152079 / C152055;
    const double C152082 = C152078 / C152055;
    const double C153462 = std::exp(C153461);
    const double C146 = C152275 * C152276 - (bs[1] * C152268) / C152267;
    const double C306 = C152559 * C152272 * C152275;
    const double C308 = C152275 * C152575 - (bs[1] * C152268) / C152267;
    const double C479 = C152632 * C152272 * C152275;
    const double C481 = C152275 * C152648 - (bs[1] * C152268) / C152267;
    const double C945 = C152632 * C152559 * C152275;
    const double C152285 = C152281 * C152283;
    const double C152284 = C152281 * C152282;
    const double C152287 = C152277 * C152281;
    const double C343 =
        (C152559 * (C152275 + C152276 * C152277 * C152281) * C152058) / C152060;
    const double C516 =
        (C152632 * (C152275 + C152276 * C152277 * C152281) * C152058) / C152060;
    const double C152323 = C152310 * C152317;
    const double C152320 = C152310 * C152313;
    const double C152319 = C152312 * C152310;
    const double C152344 = C152309 * C152310;
    const double C152425 = C152402 * C152417;
    const double C152422 = C152402 * C152413;
    const double C152421 = C152412 * C152402;
    const double C152476 = C152401 * C152402;
    const double C152301 = C152272 * C152298;
    const double C152307 = be * C152298;
    const double C153126 = C152559 * C152298;
    const double C152300 = C152272 * C152297;
    const double C152306 = ae * C152297;
    const double C153124 = C152559 * C152297;
    const double C152318 = C152308 * ae;
    const double C152316 = C152308 * C152276;
    const double C152315 = C152272 * C152308;
    const double C152314 = C152308 * be;
    const double C153340 = C152308 * C152575;
    const double C153368 = C152559 * C152308;
    const double C153376 = C152308 * C152648;
    const double C153419 = C152632 * C152308;
    const double C152370 = C152272 * C152364;
    const double C152399 = be * C152364;
    const double C152582 = C152364 * C152575;
    const double C152596 = C152559 * C152364;
    const double C152655 = C152364 * C152648;
    const double C152669 = C152632 * C152364;
    const double C152367 = C152272 * C152361;
    const double C152398 = ae * C152361;
    const double C152581 = C152361 * C152575;
    const double C152595 = C152559 * C152361;
    const double C152654 = C152361 * C152648;
    const double C152668 = C152632 * C152361;
    const double C152418 = C152400 * ae;
    const double C152416 = C152400 * C152276;
    const double C152415 = C152272 * C152400;
    const double C152414 = C152400 * be;
    const double C153397 = C152400 * C152575;
    const double C153438 = C152559 * C152400;
    const double C153447 = C152400 * C152648;
    const double C152512 = C152272 * C152506;
    const double C152509 = C152272 * C152503;
    const double C153502 = std::exp(C153501);
    const double C153521 = std::exp(C153520);
    const double C153537 = std::exp(C153536);
    const double C153625 = std::exp(C153624);
    const double C153637 = std::exp(C153636);
    const double C152087 = C152083 - C152073;
    const double C152086 = C152082 - C152072;
    const double C152070 = C152065 * C153462;
    const double C153464 = C153462 * C153457;
    const double C153463 = C153462 / C152061;
    const double C153472 = C153470 * C153462;
    const double C153830 = C153462 * C153458;
    const double C153885 = C153834 * C153462;
    const double C153879 = C153462 * C153827;
    const double C157 = (C152273 * C152271 * C152280 +
                         C152272 * (C152272 * C152285 + C152275 * ae) +
                         C152272 * C152275 * ae) /
                        C152055;
    const double C322 =
        (C152559 * (C152272 * C152285 + C152275 * ae)) / C152055;
    const double C326 =
        (C152273 * C152271 * C152280 + C152285 * C152575) / C152055;
    const double C495 =
        (C152632 * (C152272 * C152285 + C152275 * ae)) / C152055;
    const double C499 =
        (C152273 * C152271 * C152280 + C152285 * C152648) / C152055;
    const double C952 = (C152632 * C152559 * C152285) / C152055;
    const double C1197 =
        (2 * C152559 * C152285 + C152559 * (C152285 + C152298 * C152575)) /
        C152055;
    const double C1339 =
        (C152559 * C152285 + C152559 * C152298 * C152648) / C152055;
    const double C1770 = (C152632 * (C152285 + C152298 * C152575)) / C152055;
    const double C2122 =
        (2 * C152632 * C152285 + C152632 * (C152285 + C152298 * C152648)) /
        C152055;
    const double C170 =
        ((C152275 + C152276 * C152277 * C152281) * C152058 +
         ae * (C152272 * C152284 + C152275 * be) +
         be * (C152272 * C152285 + C152275 * ae) +
         C152272 *
             (ae * C152284 + be * C152285 +
              C152272 *
                  (C152277 * C152281 + C152276 * bs[4] * std::pow(C152270, 4)) *
                  C152058)) /
        C152060;
    const double C156 = (C152273 * C152271 * C152279 +
                         C152272 * (C152272 * C152284 + C152275 * be) +
                         C152272 * C152275 * be) /
                        C152055;
    const double C321 =
        (C152559 * (C152272 * C152284 + C152275 * be)) / C152055;
    const double C325 =
        (C152273 * C152271 * C152279 + C152284 * C152575) / C152055;
    const double C494 =
        (C152632 * (C152272 * C152284 + C152275 * be)) / C152055;
    const double C498 =
        (C152273 * C152271 * C152279 + C152284 * C152648) / C152055;
    const double C951 = (C152632 * C152559 * C152284) / C152055;
    const double C1196 =
        (2 * C152559 * C152284 + C152559 * (C152284 + C152297 * C152575)) /
        C152055;
    const double C1338 =
        (C152559 * C152284 + C152559 * C152297 * C152648) / C152055;
    const double C1769 = (C152632 * (C152284 + C152297 * C152575)) / C152055;
    const double C2121 =
        (2 * C152632 * C152284 + C152632 * (C152284 + C152297 * C152648)) /
        C152055;
    const double C152295 = C152287 * ae;
    const double C152293 = C152272 * C152287;
    const double C152292 = C152287 * be;
    const double C152299 = C152287 + C152296;
    const double C153356 = C152559 * C152287;
    const double C147 =
        2 * C152272 * C152275 + C152272 * (C152275 + C152287 * C152276);
    const double C305 = C152559 * (C152275 + C152287 * C152276);
    const double C478 = C152632 * (C152275 + C152287 * C152276);
    const double C1187 =
        2 * C152559 * C152275 + C152559 * (C152275 + C152287 * C152575);
    const double C1329 = C152559 * C152275 + C152559 * C152287 * C152648;
    const double C1760 = C152632 * (C152275 + C152287 * C152575);
    const double C2112 =
        2 * C152632 * C152275 + C152632 * (C152275 + C152287 * C152648);
    const double C2913 = 3 * (C152275 + C152287 * C152575) +
                         C152559 * (2 * C152559 * C152287 +
                                    C152559 * (C152287 + C152308 * C152575));
    const double C3279 =
        C152275 + C152287 * C152575 + (C152287 + C152308 * C152575) * C152648;
    const double C4063 = C152632 * (2 * C152559 * C152287 +
                                    C152559 * (C152287 + C152308 * C152575));
    const double C7514 = 3 * (C152275 + C152287 * C152648) +
                         C152632 * (2 * C152632 * C152287 +
                                    C152632 * (C152287 + C152308 * C152648));
    const double C28348 = C153462 * C343;
    const double C31233 = C153462 * C516;
    const double C152327 = C152272 * C152323;
    const double C152343 = be * C152323;
    const double C152561 = C152559 * C152323;
    const double C152634 = C152632 * C152323;
    const double C153095 = C152323 * C152575;
    const double C153161 = C152323 * C152648;
    const double C2918 = (3 * (C152285 + C152298 * C152575) +
                          C152559 * (2 * C152559 * C152298 +
                                     C152559 * (C152298 + C152323 * C152575))) /
                         C152055;
    const double C3284 = (C152285 + C152298 * C152575 +
                          (C152298 + C152323 * C152575) * C152648) /
                         C152055;
    const double C4068 = (C152632 * (2 * C152559 * C152298 +
                                     C152559 * (C152298 + C152323 * C152575))) /
                         C152055;
    const double C7519 = (3 * (C152285 + C152298 * C152648) +
                          C152632 * (2 * C152632 * C152298 +
                                     C152632 * (C152298 + C152323 * C152648))) /
                         C152055;
    const double C152326 = C152272 * C152320;
    const double C152342 = ae * C152320;
    const double C152560 = C152559 * C152320;
    const double C152633 = C152632 * C152320;
    const double C153092 = C152320 * C152575;
    const double C153158 = C152320 * C152648;
    const double C2917 = (3 * (C152284 + C152297 * C152575) +
                          C152559 * (2 * C152559 * C152297 +
                                     C152559 * (C152297 + C152320 * C152575))) /
                         C152055;
    const double C3283 = (C152284 + C152297 * C152575 +
                          (C152297 + C152320 * C152575) * C152648) /
                         C152055;
    const double C4067 = (C152632 * (2 * C152559 * C152297 +
                                     C152559 * (C152297 + C152320 * C152575))) /
                         C152055;
    const double C7518 = (3 * (C152284 + C152297 * C152648) +
                          C152632 * (2 * C152632 * C152297 +
                                     C152632 * (C152297 + C152320 * C152648))) /
                         C152055;
    const double C152325 = C152308 + C152319;
    const double C152358 = C152344 * ae;
    const double C152356 = C152344 * C152276;
    const double C152355 = C152272 * C152344;
    const double C152354 = C152344 * be;
    const double C152366 = C152344 + C152360;
    const double C153380 = C152344 * C152575;
    const double C153396 = C152559 * C152344;
    const double C153420 = C152344 * C152648;
    const double C153446 = C152632 * C152344;
    const double C152431 = C152272 * C152425;
    const double C152475 = be * C152425;
    const double C152613 = C152425 * C152575;
    const double C152686 = C152425 * C152648;
    const double C152711 = C152559 * C152425;
    const double C152737 = C152632 * C152425;
    const double C152428 = C152272 * C152422;
    const double C152474 = ae * C152422;
    const double C152612 = C152422 * C152575;
    const double C152685 = C152422 * C152648;
    const double C152710 = C152559 * C152422;
    const double C152736 = C152632 * C152422;
    const double C152427 = C152400 + C152421;
    const double C152498 = C152476 * ae;
    const double C152496 = C152476 * C152276;
    const double C152495 = C152272 * C152476;
    const double C152494 = C152476 * be;
    const double C152508 = C152476 + C152502;
    const double C152311 = C152306 + C152307;
    const double C152322 = C152287 + C152316;
    const double C152324 = C152315 * ae;
    const double C152321 = C152315 * be;
    const double C152348 = 2 * C152315;
    const double C153354 = C152559 * C152315;
    const double C153341 = C152287 + C153340;
    const double C153379 = 2 * C153368;
    const double C153377 = C152287 + C153376;
    const double C153421 = 2 * C153419;
    const double C152585 = C152323 + C152582;
    const double C152601 = be * C152596;
    const double C152763 = C152632 * C152596;
    const double C152790 = 2 * C152596;
    const double C153221 = C152596 * C152648;
    const double C152658 = C152323 + C152655;
    const double C152674 = be * C152669;
    const double C152844 = 2 * C152669;
    const double C152411 = C152398 + C152399;
    const double C152584 = C152320 + C152581;
    const double C152600 = ae * C152595;
    const double C152762 = C152632 * C152595;
    const double C152788 = 2 * C152595;
    const double C153218 = C152595 * C152648;
    const double C152657 = C152320 + C152654;
    const double C152673 = ae * C152668;
    const double C152842 = 2 * C152668;
    const double C152424 = C152344 + C152416;
    const double C152426 = C152415 * ae;
    const double C152423 = C152415 * be;
    const double C152482 = 2 * C152415;
    const double C153386 = C152415 * C152575;
    const double C153427 = C152415 * C152648;
    const double C153433 = C152559 * C152415;
    const double C153399 = C152344 + C153397;
    const double C153440 = C153438 * C152648;
    const double C153449 = C152344 + C153447;
    const double C153503 = C153502 * C153497;
    const double C153508 = C153507 * C153502;
    const double C153841 = C153502 * C153498;
    const double C153838 = C153502 / C153496;
    const double C1095 = C153846 * C153502;
    const double C153570 = C153521 * C153568;
    const double C153573 = C153507 * C153521;
    const double C153850 = C153521 * C153569;
    const double C153845 = C153521 / C153496;
    const double C300 = C153846 * C153521;
    const double C153598 = C153537 * C153596;
    const double C153601 = C153507 * C153537;
    const double C153854 = C153537 * C153597;
    const double C153847 = C153537 / C153496;
    const double C475 = C153846 * C153537;
    const double C153675 = C153625 / C152061;
    const double C153677 = C153625 * C153674;
    const double C153684 = C153470 * C153625;
    const double C153865 = C153625 * C153676;
    const double C153898 = C153834 * C153625;
    const double C153896 = C153625 * C153858;
    const double C153715 = C153637 / C152061;
    const double C153717 = C153637 * C153714;
    const double C153724 = C153470 * C153637;
    const double C153872 = C153637 * C153716;
    const double C153901 = C153834 * C153637;
    const double C153899 = C153637 * C153860;
    const double C152092 = C152087 / C152061;
    const double C152091 = C152053 * C152087;
    const double C152116 = 2 * C152087;
    const double C152090 = C152086 + C152063;
    const double C152077 = C152070 / C152060;
    const double C152075 = 2 * C152070;
    const double C152117 = -4 * C152070;
    const double C153465 = C153464 * C153458;
    const double C153471 = C153464 / C152067;
    const double C153831 = C153470 * C153464;
    const double C153829 = C153464 / C152055;
    const double C2683 = (C153462 * std::pow(C153458, 2)) / C152060 + C153463;
    const double C153473 = C153472 * C153458;
    const double C153862 = C153472 / C152159;
    const double C153835 = C153457 * C153472;
    const double C153833 = 2 * C153472;
    const double C125 = C153472 / C153837;
    const double C83598 = C153472 / C152061;
    const double C153881 = C153830 / C152055;
    const double C2684 = (-2 * C153470 * C153830) / C152055;
    const double C153912 = C153879 / C152060;
    const double C152304 = C152301 + C152295;
    const double C309 = C152272 * C152275 + C152293 * C152575;
    const double C482 = C152272 * C152275 + C152293 * C152648;
    const double C946 = C152632 * C152559 * C152293;
    const double C1186 =
        2 * C152559 * C152293 + C152559 * (C152293 + C152315 * C152575);
    const double C1328 = C152559 * C152293 + C152559 * C152315 * C152648;
    const double C1759 = C152632 * (C152293 + C152315 * C152575);
    const double C2111 =
        2 * C152632 * C152293 + C152632 * (C152293 + C152315 * C152648);
    const double C152303 = C152300 + C152292;
    const double C152302 = C152299 * C152058;
    const double C6184 = 2 * C152632 * C153356 +
                         C152632 * (C153356 + C152559 * C152308 * C152648);
    const double C9037 =
        3 * (C153356 + C153368 * C152648) +
        C152632 * (2 * C152632 * C153368 +
                   C152632 * (C153368 + C152559 * C152344 * C152648));
    const double C152330 = C152327 + C152318;
    const double C152564 = be * C152561;
    const double C153168 = 2 * C152561;
    const double C6196 =
        (2 * C152632 * C153126 + C152632 * (C153126 + C152561 * C152648)) /
        C152055;
    const double C9043 = (3 * (C153126 + C152561 * C152648) +
                          C152632 * (2 * C152632 * C152561 +
                                     C152632 * (C152561 + C152596 * C152648))) /
                         C152055;
    const double C152637 = be * C152634;
    const double C153228 = 2 * C152634;
    const double C153096 = C152298 + C153095;
    const double C153162 = C152298 + C153161;
    const double C152329 = C152326 + C152314;
    const double C152351 = C152342 + C152343;
    const double C152563 = ae * C152560;
    const double C153164 = 2 * C152560;
    const double C6195 =
        (2 * C152632 * C153124 + C152632 * (C153124 + C152560 * C152648)) /
        C152055;
    const double C9042 = (3 * (C153124 + C152560 * C152648) +
                          C152632 * (2 * C152632 * C152560 +
                                     C152632 * (C152560 + C152595 * C152648))) /
                         C152055;
    const double C152636 = ae * C152633;
    const double C153224 = 2 * C152633;
    const double C153093 = C152297 + C153092;
    const double C153159 = C152297 + C153158;
    const double C152328 = C152325 * C152058;
    const double C152375 = C152370 + C152358;
    const double C152363 = C152308 + C152356;
    const double C152365 = C152355 * ae;
    const double C152362 = C152355 * be;
    const double C152405 = 2 * C152355;
    const double C153337 = C152355 * C152575;
    const double C153366 = C152559 * C152355;
    const double C153373 = C152355 * C152648;
    const double C153426 = C152632 * C152355;
    const double C2914 = 3 * (C152293 + C152315 * C152575) +
                         C152559 * (2 * C152559 * C152315 +
                                    C152559 * (C152315 + C152355 * C152575));
    const double C3280 =
        C152293 + C152315 * C152575 + (C152315 + C152355 * C152575) * C152648;
    const double C4064 = C152632 * (2 * C152559 * C152315 +
                                    C152559 * (C152315 + C152355 * C152575));
    const double C7515 = 3 * (C152293 + C152315 * C152648) +
                         C152632 * (2 * C152632 * C152315 +
                                    C152632 * (C152315 + C152355 * C152648));
    const double C152373 = C152367 + C152354;
    const double C152372 = C152366 * C152058;
    const double C153381 = C152308 + C153380;
    const double C153398 = 2 * C153396;
    const double C153416 = C153396 * C152648;
    const double C153437 = C152632 * C153396;
    const double C153422 = C152308 + C153420;
    const double C153448 = 2 * C153446;
    const double C152436 = C152431 + C152418;
    const double C152618 = C152364 + C152613;
    const double C152691 = C152364 + C152686;
    const double C152718 = be * C152711;
    const double C152774 = C152632 * C152711;
    const double C152811 = C152711 * C152648;
    const double C152744 = be * C152737;
    const double C152434 = C152428 + C152414;
    const double C152491 = C152474 + C152475;
    const double C152617 = C152361 + C152612;
    const double C152690 = C152361 + C152685;
    const double C152717 = ae * C152710;
    const double C152773 = C152632 * C152710;
    const double C152810 = C152710 * C152648;
    const double C152743 = ae * C152736;
    const double C152433 = C152427 * C152058;
    const double C152517 = C152512 + C152498;
    const double C152505 = C152400 + C152496;
    const double C152507 = C152495 * ae;
    const double C152504 = C152495 * be;
    const double C152515 = C152509 + C152494;
    const double C152514 = C152508 * C152058;
    const double C148 = 3 * (C152275 + C152287 * C152276) +
                        C152272 * (2 * C152293 + C152272 * C152322);
    const double C304 = C152559 * (2 * C152293 + C152272 * C152322);
    const double C310 = C152275 + C152287 * C152276 + C152322 * C152575;
    const double C477 = C152632 * (2 * C152293 + C152272 * C152322);
    const double C483 = C152275 + C152287 * C152276 + C152322 * C152648;
    const double C947 = C152632 * C152559 * C152322;
    const double C6183 = 2 * C152632 * C153354 +
                         C152632 * (C153354 + C152559 * C152355 * C152648);
    const double C4529 =
        4 * (2 * C152559 * C152287 + C152559 * C153341) +
        C152559 *
            (3 * C153341 + C152559 * (2 * C152559 * C152308 +
                                      C152559 * (C152308 + C152344 * C152575)));
    const double C4783 =
        2 * C152559 * C152287 + C152559 * C153341 +
        (2 * C152559 * C152308 + C152559 * (C152308 + C152344 * C152575)) *
            C152648;
    const double C5563 =
        C152632 *
        (3 * C153341 + C152559 * (2 * C152559 * C152308 +
                                  C152559 * (C152308 + C152344 * C152575)));
    const double C6181 =
        2 * C152632 * C153341 +
        C152632 * (C153341 + (C152308 + C152344 * C152575) * C152648);
    const double C10380 =
        4 * (2 * C152632 * C152287 + C152632 * C153377) +
        C152632 *
            (3 * C153377 + C152632 * (2 * C152632 * C152308 +
                                      C152632 * (C152308 + C152344 * C152648)));
    const double C152588 = be * C152585;
    const double C153169 = C152559 * C152585;
    const double C153192 = 3 * C152585;
    const double C152766 = be * C152763;
    const double C153250 = 2 * C152763;
    const double C153222 = C152561 + C153221;
    const double C152661 = be * C152658;
    const double C153229 = C152632 * C152658;
    const double C153258 = 3 * C152658;
    const double C152587 = ae * C152584;
    const double C153165 = C152559 * C152584;
    const double C153188 = 3 * C152584;
    const double C152604 = C152600 + C152601;
    const double C152765 = ae * C152762;
    const double C153246 = 2 * C152762;
    const double C153219 = C152560 + C153218;
    const double C152660 = ae * C152657;
    const double C153225 = C152632 * C152657;
    const double C153254 = 3 * C152657;
    const double C152677 = C152673 + C152674;
    const double C152432 = C152424 * ae;
    const double C152430 = C152272 * C152424;
    const double C152429 = C152424 * be;
    const double C152483 = 3 * C152424;
    const double C153334 = C152424 * C152575;
    const double C153364 = C152559 * C152424;
    const double C153370 = C152424 * C152648;
    const double C153387 = C152355 + C153386;
    const double C153429 = C152355 + C153427;
    const double C153434 = C153433 * C152648;
    const double C153400 = C152559 * C153399;
    const double C153413 = C153399 * C152648;
    const double C153441 = C153396 + C153440;
    const double C153450 = C152632 * C153449;
    const double C153842 = C153503 / C153511;
    const double C153840 = C153503 / C153494;
    const double C153839 = C153503 * C153498;
    const double C1094 = (2 * C153507 * C153503) / C153494;
    const double C153843 = C153508 * C153498;
    const double C133 = C153508 / C153844;
    const double C650 = C153508 / C153496;
    const double C153888 = C153841 / C153494;
    const double C1093 = (C153502 * std::pow(C153497, 2)) / C153506 + C153838;
    const double C153852 = C153570 / C153511;
    const double C153851 = C153570 * C153569;
    const double C153848 = C153570 / C153494;
    const double C299 = (2 * C153507 * C153570) / C153494;
    const double C153853 = C153573 * C153569;
    const double C1181 = C153573 / C153844;
    const double C1469 = C153573 / C153496;
    const double C153890 = C153850 / C153494;
    const double C298 = (C153521 * std::pow(C153568, 2)) / C153506 + C153845;
    const double C153856 = C153598 / C153511;
    const double C153855 = C153598 * C153597;
    const double C153849 = C153598 / C153494;
    const double C474 = (2 * C153507 * C153598) / C153494;
    const double C153857 = C153601 * C153597;
    const double C2107 = C153601 / C153844;
    const double C2414 = C153601 / C153496;
    const double C153893 = C153854 / C153494;
    const double C473 = (C153537 * std::pow(C153596, 2)) / C153506 + C153847;
    const double C23989 = (C153625 * std::pow(C153676, 2)) / C152060 + C153675;
    const double C153678 = C153677 * C153676;
    const double C153683 = C153677 / C152067;
    const double C153863 = C153677 / C152055;
    const double C153859 = C153470 * C153677;
    const double C153685 = C153684 * C153676;
    const double C153871 = C153684 / C152159;
    const double C153869 = C153674 * C153684;
    const double C153868 = 2 * C153684;
    const double C28211 = C153684 / C153837;
    const double C83601 = C153684 / C152061;
    const double C153903 = C153865 / C152055;
    const double C23990 = (-2 * C153470 * C153865) / C152055;
    const double C153923 = C153896 / C152060;
    const double C47696 = (C153637 * std::pow(C153716, 2)) / C152060 + C153715;
    const double C153718 = C153717 * C153716;
    const double C153723 = C153717 / C152067;
    const double C153864 = C153717 / C152055;
    const double C153861 = C153470 * C153717;
    const double C153725 = C153724 * C153716;
    const double C153878 = C153724 / C152159;
    const double C153876 = C153714 * C153724;
    const double C153875 = 2 * C153724;
    const double C55782 = C153724 / C153837;
    const double C116209 = C153724 / C152061;
    const double C153908 = C153872 / C152055;
    const double C47697 = (-2 * C153470 * C153872) / C152055;
    const double C153925 = C153899 / C152060;
    const double C152096 = C152091 + 0;
    const double C152133 = C152130 + C152116;
    const double C152095 = C152090 / C152061;
    const double C152081 = C152066 - C152077;
    const double C152080 = C152053 * C152075;
    const double C2693 =
        ((-C152075 / C152055) / C152061 - (0 * be) / C152055) / C152061 -
        (0 * be) / C152055;
    const double C28212 = -C152075 / C152055;
    const double C74288 = (-C152075 / C152055) / C152061 - (0 * be) / C152055;
    const double C152123 = C152117 / C152055;
    const double C153466 = C153465 / C152060;
    const double C153882 = 2 * C153831;
    const double C35099 = C153829 * C343;
    const double C39373 = C153829 * C516;
    const double C2933 = C2683 * C343;
    const double C7534 = C2683 * C516;
    const double C153474 = C153473 / C152055;
    const double C153886 = C153835 / C152067;
    const double C153913 = C153829 - C153881;
    const double C74280 = -C153881;
    const double C153933 = C153912 + C153463;
    const double C159 =
        (2 * (C152272 * C152285 + C152275 * ae) +
         C152272 * (C152285 + C152272 * C152304 + C152293 * ae) +
         (C152275 + C152287 * C152276) * ae) /
        C152055;
    const double C320 =
        (C152559 * (C152285 + C152272 * C152304 + C152293 * ae)) / C152055;
    const double C328 =
        (C152272 * C152285 + C152275 * ae + C152304 * C152575) / C152055;
    const double C493 =
        (C152632 * (C152285 + C152272 * C152304 + C152293 * ae)) / C152055;
    const double C501 =
        (C152272 * C152285 + C152275 * ae + C152304 * C152648) / C152055;
    const double C954 = (C152632 * C152559 * C152304) / C152055;
    const double C158 =
        (2 * (C152272 * C152284 + C152275 * be) +
         C152272 * (C152284 + C152272 * C152303 + C152293 * be) +
         (C152275 + C152287 * C152276) * be) /
        C152055;
    const double C319 =
        (C152559 * (C152284 + C152272 * C152303 + C152293 * be)) / C152055;
    const double C327 =
        (C152272 * C152284 + C152275 * be + C152303 * C152575) / C152055;
    const double C492 =
        (C152632 * (C152284 + C152272 * C152303 + C152293 * be)) / C152055;
    const double C500 =
        (C152272 * C152284 + C152275 * be + C152303 * C152648) / C152055;
    const double C953 = (C152632 * C152559 * C152303) / C152055;
    const double C171 =
        (2 * (ae * C152284 + be * C152285 + C152272 * C152302) +
         ae * (C152284 + C152272 * C152303 + C152293 * be) +
         be * (C152285 + C152272 * C152304 + C152293 * ae) +
         C152272 * (C152302 + ae * C152303 + be * C152304 +
                    C152272 * (ae * C152297 + be * C152298 +
                               C152272 *
                                   (C152288 * C152289 +
                                    C152276 * bs[5] * std::pow(C152278, 5)) *
                                   C152058))) /
        C152060;
    const double C342 = (ae * C152559 * C152284 + be * C152559 * C152285 +
                         C152272 * C152559 * C152302) /
                        C152060;
    const double C344 = ((C152275 + C152276 * C152277 * C152281) * C152058 +
                         C152302 * std::pow(C152559, 2)) /
                        C152060;
    const double C515 = (ae * C152632 * C152284 + be * C152632 * C152285 +
                         C152272 * C152632 * C152302) /
                        C152060;
    const double C517 = ((C152275 + C152276 * C152277 * C152281) * C152058 +
                         C152302 * std::pow(C152632, 2)) /
                        C152060;
    const double C963 = (C152632 * C152559 * C152302) / C152060;
    const double C152333 = C152272 * C152330;
    const double C152349 = 2 * C152330;
    const double C152341 = be * C152330;
    const double C153122 = C152559 * C152330;
    const double C1195 =
        (2 * C152559 * C152304 + C152559 * (C152304 + C152330 * C152575)) /
        C152055;
    const double C1337 =
        (C152559 * C152304 + C152559 * C152330 * C152648) / C152055;
    const double C1768 = (C152632 * (C152304 + C152330 * C152575)) / C152055;
    const double C2120 =
        (2 * C152632 * C152304 + C152632 * (C152304 + C152330 * C152648)) /
        C152055;
    const double C4535 =
        (4 * (2 * C152559 * C152298 + C152559 * C153096) +
         C152559 *
             (3 * C153096 + C152559 * (2 * C152561 + C152559 * C152585))) /
        C152055;
    const double C4789 = (2 * C152559 * C152298 + C152559 * C153096 +
                          (2 * C152561 + C152559 * C152585) * C152648) /
                         C152055;
    const double C5569 =
        (C152632 *
         (3 * C153096 + C152559 * (2 * C152561 + C152559 * C152585))) /
        C152055;
    const double C6190 =
        (2 * C152632 * C153096 + C152632 * (C153096 + C152585 * C152648)) /
        C152055;
    const double C10386 =
        (4 * (2 * C152632 * C152298 + C152632 * C153162) +
         C152632 *
             (3 * C153162 + C152632 * (2 * C152634 + C152632 * C152658))) /
        C152055;
    const double C152332 = C152272 * C152329;
    const double C152347 = 2 * C152329;
    const double C152340 = ae * C152329;
    const double C153120 = C152559 * C152329;
    const double C1194 =
        (2 * C152559 * C152303 + C152559 * (C152303 + C152329 * C152575)) /
        C152055;
    const double C1336 =
        (C152559 * C152303 + C152559 * C152329 * C152648) / C152055;
    const double C1767 = (C152632 * (C152303 + C152329 * C152575)) / C152055;
    const double C2119 =
        (2 * C152632 * C152303 + C152632 * (C152303 + C152329 * C152648)) /
        C152055;
    const double C152566 = C152563 + C152564;
    const double C152639 = C152636 + C152637;
    const double C4534 =
        (4 * (2 * C152559 * C152297 + C152559 * C153093) +
         C152559 *
             (3 * C153093 + C152559 * (2 * C152560 + C152559 * C152584))) /
        C152055;
    const double C4788 = (2 * C152559 * C152297 + C152559 * C153093 +
                          (2 * C152560 + C152559 * C152584) * C152648) /
                         C152055;
    const double C5568 =
        (C152632 *
         (3 * C153093 + C152559 * (2 * C152560 + C152559 * C152584))) /
        C152055;
    const double C6189 =
        (2 * C152632 * C153093 + C152632 * (C153093 + C152584 * C152648)) /
        C152055;
    const double C10385 =
        (4 * (2 * C152632 * C152297 + C152632 * C153159) +
         C152632 *
             (3 * C153159 + C152632 * (2 * C152633 + C152632 * C152657))) /
        C152055;
    const double C152331 = C152272 * C152328;
    const double C152569 = C152559 * C152328;
    const double C152642 = C152632 * C152328;
    const double C345 = (ae * (C152284 + C152297 * C152575) +
                         be * (C152285 + C152298 * C152575) +
                         C152272 * (C152302 + C152328 * C152575)) /
                        C152060;
    const double C518 = (ae * (C152284 + C152297 * C152648) +
                         be * (C152285 + C152298 * C152648) +
                         C152272 * (C152302 + C152328 * C152648)) /
                        C152060;
    const double C1202 =
        (2 * C152559 * C152302 + C152559 * (C152302 + C152328 * C152575)) /
        C152060;
    const double C1775 = (C152632 * (C152302 + C152328 * C152575)) / C152060;
    const double C2127 =
        (2 * C152632 * C152302 + C152632 * (C152302 + C152328 * C152648)) /
        C152060;
    const double C152378 = C152272 * C152375;
    const double C152408 = 2 * C152375;
    const double C152397 = be * C152375;
    const double C152594 = C152559 * C152375;
    const double C152667 = C152632 * C152375;
    const double C153089 = C152375 * C152575;
    const double C153155 = C152375 * C152648;
    const double C2920 = (3 * (C152304 + C152330 * C152575) +
                          C152559 * (2 * C152559 * C152330 +
                                     C152559 * (C152330 + C152375 * C152575))) /
                         C152055;
    const double C3286 = (C152304 + C152330 * C152575 +
                          (C152330 + C152375 * C152575) * C152648) /
                         C152055;
    const double C4070 = (C152632 * (2 * C152559 * C152330 +
                                     C152559 * (C152330 + C152375 * C152575))) /
                         C152055;
    const double C7521 = (3 * (C152304 + C152330 * C152648) +
                          C152632 * (2 * C152632 * C152330 +
                                     C152632 * (C152330 + C152375 * C152648))) /
                         C152055;
    const double C152371 = C152363 * ae;
    const double C152369 = C152272 * C152363;
    const double C152368 = C152363 * be;
    const double C152406 = 3 * C152363;
    const double C153352 = C152559 * C152363;
    const double C1185 =
        2 * C152559 * C152322 + C152559 * (C152322 + C152363 * C152575);
    const double C1327 = C152559 * C152322 + C152559 * C152363 * C152648;
    const double C1758 = C152632 * (C152322 + C152363 * C152575);
    const double C2110 =
        2 * C152632 * C152322 + C152632 * (C152322 + C152363 * C152648);
    const double C2915 = 3 * (C152322 + C152363 * C152575) +
                         C152559 * (2 * C152559 * C152363 +
                                    C152559 * (C152363 + C152424 * C152575));
    const double C3281 =
        C152322 + C152363 * C152575 + (C152363 + C152424 * C152575) * C152648;
    const double C4065 = C152632 * (2 * C152559 * C152363 +
                                    C152559 * (C152363 + C152424 * C152575));
    const double C7516 = 3 * (C152322 + C152363 * C152648) +
                         C152632 * (2 * C152632 * C152363 +
                                    C152632 * (C152363 + C152424 * C152648));
    const double C153338 = C152315 + C153337;
    const double C153385 = 2 * C153366;
    const double C9036 =
        3 * (C153354 + C153366 * C152648) +
        C152632 * (2 * C152632 * C153366 +
                   C152632 * (C153366 + C152559 * C152415 * C152648));
    const double C153374 = C152315 + C153373;
    const double C153428 = 2 * C153426;
    const double C152377 = C152272 * C152373;
    const double C152404 = 2 * C152373;
    const double C152396 = ae * C152373;
    const double C152593 = C152559 * C152373;
    const double C152666 = C152632 * C152373;
    const double C153086 = C152373 * C152575;
    const double C153152 = C152373 * C152648;
    const double C2919 = (3 * (C152303 + C152329 * C152575) +
                          C152559 * (2 * C152559 * C152329 +
                                     C152559 * (C152329 + C152373 * C152575))) /
                         C152055;
    const double C3285 = (C152303 + C152329 * C152575 +
                          (C152329 + C152373 * C152575) * C152648) /
                         C152055;
    const double C4069 = (C152632 * (2 * C152559 * C152329 +
                                     C152559 * (C152329 + C152373 * C152575))) /
                         C152055;
    const double C7520 = (3 * (C152303 + C152329 * C152648) +
                          C152632 * (2 * C152632 * C152329 +
                                     C152632 * (C152329 + C152373 * C152648))) /
                         C152055;
    const double C152376 = C152272 * C152372;
    const double C152562 = C152559 * C152372;
    const double C152578 = C152372 * C152575;
    const double C152635 = C152632 * C152372;
    const double C152651 = C152372 * C152648;
    const double C346 =
        (C152302 + C152328 * C152575 + ae * (C152303 + C152329 * C152575) +
         be * (C152304 + C152330 * C152575) +
         C152272 * (ae * (C152297 + C152320 * C152575) +
                    be * (C152298 + C152323 * C152575) +
                    C152272 * (C152328 + C152372 * C152575))) /
        C152060;
    const double C519 =
        (C152302 + C152328 * C152648 + ae * (C152303 + C152329 * C152648) +
         be * (C152304 + C152330 * C152648) +
         C152272 * (ae * (C152297 + C152320 * C152648) +
                    be * (C152298 + C152323 * C152648) +
                    C152272 * (C152328 + C152372 * C152648))) /
        C152060;
    const double C153382 = C152559 * C153381;
    const double C153395 = 3 * C153381;
    const double C31221 = 3 * (C153341 + C153381 * C152648) +
                          C152632 * (2 * C152632 * C153381 +
                                     C152632 * (C153381 + C153399 * C152648));
    const double C153417 = C153368 + C153416;
    const double C153439 = 2 * C153437;
    const double C153423 = C152632 * C153422;
    const double C153445 = 3 * C153422;
    const double C152441 = C152272 * C152436;
    const double C152487 = 2 * C152436;
    const double C152473 = be * C152436;
    const double C152611 = C152436 * C152575;
    const double C152684 = C152436 * C152648;
    const double C152709 = C152559 * C152436;
    const double C152735 = C152632 * C152436;
    const double C152623 = be * C152618;
    const double C152791 = C152559 * C152618;
    const double C152829 = C152632 * C152618;
    const double C153215 = C152618 * C152648;
    const double C31224 =
        (3 * (C153096 + C152585 * C152648) +
         C152632 * (2 * C152632 * C152585 +
                    C152632 * (C152585 + C152618 * C152648))) /
        C152055;
    const double C152696 = be * C152691;
    const double C152845 = C152632 * C152691;
    const double C152779 = be * C152774;
    const double C152814 = C152596 + C152811;
    const double C152438 = C152272 * C152434;
    const double C152481 = 2 * C152434;
    const double C152472 = ae * C152434;
    const double C152610 = C152434 * C152575;
    const double C152683 = C152434 * C152648;
    const double C152708 = C152559 * C152434;
    const double C152734 = C152632 * C152434;
    const double C152622 = ae * C152617;
    const double C152789 = C152559 * C152617;
    const double C152828 = C152632 * C152617;
    const double C153212 = C152617 * C152648;
    const double C31223 =
        (3 * (C153093 + C152584 * C152648) +
         C152632 * (2 * C152632 * C152584 +
                    C152632 * (C152584 + C152617 * C152648))) /
        C152055;
    const double C152695 = ae * C152690;
    const double C152843 = C152632 * C152690;
    const double C152722 = C152717 + C152718;
    const double C152778 = ae * C152773;
    const double C152813 = C152595 + C152810;
    const double C152748 = C152743 + C152744;
    const double C152437 = C152272 * C152433;
    const double C152583 = C152433 * C152575;
    const double C152597 = C152559 * C152433;
    const double C152656 = C152433 * C152648;
    const double C152670 = C152632 * C152433;
    const double C152522 = C152272 * C152517;
    const double C152513 = C152505 * ae;
    const double C152511 = C152272 * C152505;
    const double C152510 = C152505 * be;
    const double C152519 = C152272 * C152515;
    const double C152518 = C152272 * C152514;
    const double C152614 = C152514 * C152575;
    const double C152687 = C152514 * C152648;
    const double C152712 = C152559 * C152514;
    const double C152738 = C152632 * C152514;
    const double C153170 = C153168 + C153169;
    const double C153230 = C153228 + C153229;
    const double C152590 = C152587 + C152588;
    const double C153166 = C153164 + C153165;
    const double C152768 = C152765 + C152766;
    const double C152663 = C152660 + C152661;
    const double C153226 = C153224 + C153225;
    const double C152435 = C152405 + C152430;
    const double C153335 = C152363 + C153334;
    const double C153371 = C152363 + C153370;
    const double C153388 = C152559 * C153387;
    const double C153430 = C152632 * C153429;
    const double C153435 = C153366 + C153434;
    const double C153401 = C153398 + C153400;
    const double C153414 = C153381 + C153413;
    const double C153442 = C152632 * C153441;
    const double C153451 = C153448 + C153450;
    const double C153887 = C153839 / C153506;
    const double C153889 = C153843 / C153494;
    const double C301 = -C153888;
    const double C153891 = C153851 / C153506;
    const double C153892 = C153853 / C153494;
    const double C1091 = -C153890;
    const double C153894 = C153855 / C153506;
    const double C153895 = C153857 / C153494;
    const double C1898 = -C153893;
    const double C153679 = C153678 / C152060;
    const double C153897 = 2 * C153859;
    const double C153686 = C153685 / C152055;
    const double C153906 = C153869 / C152067;
    const double C153927 = C153863 - C153903;
    const double C70498 = -C153903;
    const double C153936 = C153923 + C153675;
    const double C153719 = C153718 / C152060;
    const double C153900 = 2 * C153861;
    const double C153726 = C153725 / C152055;
    const double C153911 = C153876 / C152067;
    const double C153930 = C153864 - C153908;
    const double C98536 = -C153908;
    const double C153937 = C153925 + C153715;
    const double C152099 = C152096 * be;
    const double C152136 = C152133 * be;
    const double C35102 = C152081 * C322;
    const double C35100 = C152081 * C321;
    const double C39376 = C152081 * C495;
    const double C39374 = C152081 * C494;
    const double C152085 = C152053 * C152081;
    const double C152120 = 2 * C152081;
    const double C152153 = C152081 / C152061;
    const double C152084 = C152080 / C152055;
    const double C28367 = C28212 * C322;
    const double C28365 = C28212 * C321;
    const double C28359 = C28212 * C2918;
    const double C28357 = C28212 * C2917;
    const double C28355 = C28212 * C1197;
    const double C28353 = C28212 * C1196;
    const double C28351 = C28212 * C326;
    const double C28349 = C28212 * C325;
    const double C28347 = C28212 * C324;
    const double C28345 = C28212 * C323;
    const double C29015 = C28212 * C952;
    const double C29013 = C28212 * C951;
    const double C29011 = C28212 * C1770;
    const double C29009 = C28212 * C1769;
    const double C29007 = C28212 * C4068;
    const double C29005 = C28212 * C4067;
    const double C29413 = C28212 * C3284;
    const double C29411 = C28212 * C3283;
    const double C29409 = C28212 * C1339;
    const double C29407 = C28212 * C1338;
    const double C31252 = C28212 * C495;
    const double C31250 = C28212 * C494;
    const double C31248 = C28212 * C2122;
    const double C31246 = C28212 * C2121;
    const double C31244 = C28212 * C6196;
    const double C31242 = C28212 * C6195;
    const double C31236 = C28212 * C499;
    const double C31234 = C28212 * C498;
    const double C31232 = C28212 * C497;
    const double C31230 = C28212 * C496;
    const double C32685 = C28212 * C9043;
    const double C32683 = C28212 * C9042;
    const double C34031 = C28212 * C7519;
    const double C34029 = C28212 * C7518;
    const double C74491 = C74288 * C322;
    const double C74489 = C74288 * C321;
    const double C78785 = C74288 * C495;
    const double C78783 = C74288 * C494;
    const double C153467 = C153463 - C153466;
    const double C153914 = C153882 / C152055;
    const double C153475 = C153471 - C153474;
    const double C153934 = C153913 / C152061;
    const double C74488 = C74280 * C343;
    const double C78782 = C74280 * C516;
    const double C24220 = C153933 * C343;
    const double C48139 = C153933 * C516;
    const double C2940 = C2693 * C320;
    const double C28679 = C28212 * C320;
    const double C35134 = C152081 * C320;
    const double C74523 = C74288 * C320;
    const double C28371 = C28212 * C328;
    const double C35110 = C152081 * C328;
    const double C74499 = C74288 * C328;
    const double C7541 = C2693 * C493;
    const double C31772 = C28212 * C493;
    const double C39392 = C152081 * C493;
    const double C78818 = C74288 * C493;
    const double C31256 = C28212 * C501;
    const double C39380 = C152081 * C501;
    const double C78793 = C74288 * C501;
    const double C29019 = C28212 * C954;
    const double C36116 = C152081 * C954;
    const double C75505 = C74288 * C954;
    const double C2938 = C2693 * C319;
    const double C28677 = C28212 * C319;
    const double C35132 = C152081 * C319;
    const double C74521 = C74288 * C319;
    const double C28369 = C28212 * C327;
    const double C35108 = C152081 * C327;
    const double C74497 = C74288 * C327;
    const double C7539 = C2693 * C492;
    const double C31770 = C28212 * C492;
    const double C39390 = C152081 * C492;
    const double C78816 = C74288 * C492;
    const double C31254 = C28212 * C500;
    const double C39378 = C152081 * C500;
    const double C78791 = C74288 * C500;
    const double C29017 = C28212 * C953;
    const double C36114 = C152081 * C953;
    const double C75503 = C74288 * C953;
    const double C2969 = C2683 * C342;
    const double C2937 = C2684 * C342;
    const double C24256 = C153933 * C342;
    const double C28368 = C153462 * C342;
    const double C35131 = C153829 * C342;
    const double C35103 = C153472 * C342;
    const double C74520 = C74280 * C342;
    const double C74492 = C153472 * C342;
    const double C2945 = C2683 * C344;
    const double C24232 = C153933 * C344;
    const double C28352 = C153462 * C344;
    const double C35107 = C153829 * C344;
    const double C74496 = C74280 * C344;
    const double C7570 = C2683 * C515;
    const double C7538 = C2684 * C515;
    const double C31253 = C153462 * C515;
    const double C39389 = C153829 * C515;
    const double C39377 = C153472 * C515;
    const double C48175 = C153933 * C515;
    const double C78815 = C74280 * C515;
    const double C78786 = C153472 * C515;
    const double C7546 = C2683 * C517;
    const double C31237 = C153462 * C517;
    const double C39385 = C153829 * C517;
    const double C48151 = C153933 * C517;
    const double C78790 = C74280 * C517;
    const double C4103 = C2683 * C963;
    const double C25358 = C153933 * C963;
    const double C29016 = C153462 * C963;
    const double C36121 = C153829 * C963;
    const double C75510 = C74280 * C963;
    const double C152336 = C152298 + C152333;
    const double C28375 = C28212 * C1195;
    const double C35118 = C152081 * C1195;
    const double C74507 = C74288 * C1195;
    const double C30974 = C28212 * C1337;
    const double C36724 = C152081 * C1337;
    const double C76113 = C74288 * C1337;
    const double C29023 = C28212 * C1768;
    const double C36108 = C152081 * C1768;
    const double C75497 = C74288 * C1768;
    const double C31260 = C28212 * C2120;
    const double C43026 = C152081 * C2120;
    const double C78806 = C74288 * C2120;
    const double C28363 = C28212 * C4535;
    const double C29417 = C28212 * C4789;
    const double C29003 = C28212 * C5569;
    const double C31240 = C28212 * C6190;
    const double C56038 = C28212 * C10386;
    const double C152335 = C152297 + C152332;
    const double C152350 = C152328 + C152340;
    const double C28373 = C28212 * C1194;
    const double C35116 = C152081 * C1194;
    const double C74505 = C74288 * C1194;
    const double C30972 = C28212 * C1336;
    const double C36722 = C152081 * C1336;
    const double C76111 = C74288 * C1336;
    const double C29021 = C28212 * C1767;
    const double C36106 = C152081 * C1767;
    const double C75495 = C74288 * C1767;
    const double C31258 = C28212 * C2119;
    const double C43024 = C152081 * C2119;
    const double C78804 = C74288 * C2119;
    const double C28361 = C28212 * C4534;
    const double C29415 = C28212 * C4788;
    const double C29001 = C28212 * C5568;
    const double C31238 = C28212 * C6189;
    const double C56036 = C28212 * C10385;
    const double C152334 = C152311 + C152331;
    const double C341 =
        (C152559 * C152302 + ae * C152559 * C152303 + be * C152559 * C152304 +
         C152272 * (ae * C152559 * C152297 + be * C152559 * C152298 +
                    C152272 * C152569)) /
        C152060;
    const double C964 =
        (ae * C152632 * C152559 * C152297 + be * C152632 * C152559 * C152298 +
         C152272 * C152632 * C152569) /
        C152060;
    const double C1344 = (C152559 * C152302 + C152569 * C152648) / C152060;
    const double C514 =
        (C152632 * C152302 + ae * C152632 * C152303 + be * C152632 * C152304 +
         C152272 * (ae * C152632 * C152297 + be * C152632 * C152298 +
                    C152272 * C152642)) /
        C152060;
    const double C2981 = C2683 * C345;
    const double C2949 = C2684 * C345;
    const double C24268 = C153933 * C345;
    const double C28372 = C153462 * C345;
    const double C35139 = C153829 * C345;
    const double C35111 = C153472 * C345;
    const double C74528 = C74280 * C345;
    const double C74500 = C153472 * C345;
    const double C7582 = C2683 * C518;
    const double C7550 = C2684 * C518;
    const double C31257 = C153462 * C518;
    const double C39397 = C153829 * C518;
    const double C39381 = C153472 * C518;
    const double C48187 = C153933 * C518;
    const double C78823 = C74280 * C518;
    const double C78794 = C153472 * C518;
    const double C2965 = C2683 * C1202;
    const double C24252 = C153933 * C1202;
    const double C28356 = C153462 * C1202;
    const double C35115 = C153829 * C1202;
    const double C74504 = C74280 * C1202;
    const double C4091 = C2683 * C1775;
    const double C25346 = C153933 * C1775;
    const double C29012 = C153462 * C1775;
    const double C36113 = C153829 * C1775;
    const double C75502 = C74280 * C1775;
    const double C7566 = C2683 * C2127;
    const double C31249 = C153462 * C2127;
    const double C43023 = C153829 * C2127;
    const double C48171 = C153933 * C2127;
    const double C78811 = C74280 * C2127;
    const double C152381 = C152323 + C152378;
    const double C152599 = be * C152594;
    const double C153176 = 2 * C152594;
    const double C6194 =
        (2 * C152632 * C153122 + C152632 * (C153122 + C152594 * C152648)) /
        C152055;
    const double C152672 = be * C152667;
    const double C153236 = 2 * C152667;
    const double C153090 = C152330 + C153089;
    const double C153156 = C152330 + C153155;
    const double C28379 = C28212 * C2920;
    const double C35122 = C152081 * C2920;
    const double C74511 = C74288 * C2920;
    const double C30980 = C28212 * C3286;
    const double C36732 = C152081 * C3286;
    const double C76121 = C74288 * C3286;
    const double C29027 = C28212 * C4070;
    const double C36100 = C152081 * C4070;
    const double C75489 = C74288 * C4070;
    const double C56042 = C28212 * C7521;
    const double C62311 = C152081 * C7521;
    const double C82477 = C74288 * C7521;
    const double C152374 = C152348 + C152369;
    const double C6182 = 2 * C152632 * C153352 +
                         C152632 * (C153352 + C152559 * C152424 * C152648);
    const double C9035 =
        3 * (C153352 + C153364 * C152648) +
        C152632 * (2 * C152632 * C153364 +
                   C152632 * (C153364 + C152559 * C152505 * C152648));
    const double C4528 =
        4 * (2 * C152559 * C152315 + C152559 * C153338) +
        C152559 *
            (3 * C153338 + C152559 * (2 * C152559 * C152355 +
                                      C152559 * (C152355 + C152415 * C152575)));
    const double C4782 =
        2 * C152559 * C152315 + C152559 * C153338 +
        (2 * C152559 * C152355 + C152559 * (C152355 + C152415 * C152575)) *
            C152648;
    const double C5562 =
        C152632 *
        (3 * C153338 + C152559 * (2 * C152559 * C152355 +
                                  C152559 * (C152355 + C152415 * C152575)));
    const double C6180 =
        2 * C152632 * C153338 +
        C152632 * (C153338 + (C152355 + C152415 * C152575) * C152648);
    const double C31222 =
        3 * (C153338 + C153387 * C152648) +
        C152632 *
            (2 * C152632 * C153387 +
             C152632 * (C153387 + (C152415 + C152495 * C152575) * C152648));
    const double C10379 =
        4 * (2 * C152632 * C152315 + C152632 * C153374) +
        C152632 *
            (3 * C153374 + C152632 * (2 * C152632 * C152355 +
                                      C152632 * (C152355 + C152415 * C152648)));
    const double C152380 = C152320 + C152377;
    const double C152410 = C152372 + C152396;
    const double C152598 = ae * C152593;
    const double C153172 = 2 * C152593;
    const double C6193 =
        (2 * C152632 * C153120 + C152632 * (C153120 + C152593 * C152648)) /
        C152055;
    const double C152671 = ae * C152666;
    const double C153232 = 2 * C152666;
    const double C153087 = C152329 + C153086;
    const double C153153 = C152329 + C153152;
    const double C28377 = C28212 * C2919;
    const double C35120 = C152081 * C2919;
    const double C74509 = C74288 * C2919;
    const double C30978 = C28212 * C3285;
    const double C36730 = C152081 * C3285;
    const double C76119 = C74288 * C3285;
    const double C29025 = C28212 * C4069;
    const double C36098 = C152081 * C4069;
    const double C75487 = C74288 * C4069;
    const double C56040 = C28212 * C7520;
    const double C62309 = C152081 * C7520;
    const double C82475 = C74288 * C7520;
    const double C152379 = C152351 + C152376;
    const double C152565 = C152272 * C152562;
    const double C152760 = C152632 * C152562;
    const double C152803 = 2 * C152562;
    const double C965 =
        (C152632 * C152569 + ae * C152632 * C152559 * C152329 +
         be * C152632 * C152559 * C152330 +
         C152272 * (ae * C152632 * C152560 + be * C152632 * C152561 +
                    C152272 * C152632 * C152562)) /
        C152060;
    const double C1343 = (ae * (C152559 * C152297 + C152560 * C152648) +
                          be * (C152559 * C152298 + C152561 * C152648) +
                          C152272 * (C152569 + C152562 * C152648)) /
                         C152060;
    const double C6202 =
        (2 * C152632 * C152569 + C152632 * (C152569 + C152562 * C152648)) /
        C152060;
    const double C152579 = C152328 + C152578;
    const double C152638 = C152272 * C152635;
    const double C152857 = 2 * C152635;
    const double C152652 = C152328 + C152651;
    const double C2985 = C2684 * C346;
    const double C2953 = C153885 * C346;
    const double C3529 = C2683 * C346;
    const double C24240 = C153885 * C346;
    const double C24800 = C153933 * C346;
    const double C28684 = C153462 * C346;
    const double C35143 = C153472 * C346;
    const double C35615 = C153829 * C346;
    const double C74532 = C153472 * C346;
    const double C75004 = C74280 * C346;
    const double C83850 = C83598 * C346;
    const double C7586 = C2684 * C519;
    const double C7554 = C153885 * C519;
    const double C8112 = C2683 * C519;
    const double C31777 = C153462 * C519;
    const double C39401 = C153472 * C519;
    const double C48159 = C153885 * C519;
    const double C48717 = C153933 * C519;
    const double C59376 = C153829 * C519;
    const double C78827 = C153472 * C519;
    const double C79514 = C74280 * C519;
    const double C88524 = C83598 * C519;
    const double C153383 = C153379 + C153382;
    const double C34021 =
        4 * (2 * C152632 * C153368 + C152632 * C153417) +
        C152632 *
            (3 * C153417 +
             C152632 * (2 * C152632 * C153396 +
                        C152632 * (C153396 + C152559 * C152400 * C152648)));
    const double C153424 = C153421 + C153423;
    const double C152446 = C152364 + C152441;
    const double C152616 = C152375 + C152611;
    const double C152689 = C152375 + C152684;
    const double C152716 = be * C152709;
    const double C152772 = C152632 * C152709;
    const double C153243 = C152709 * C152648;
    const double C9041 = (3 * (C153122 + C152594 * C152648) +
                          C152632 * (2 * C152632 * C152594 +
                                     C152632 * (C152594 + C152709 * C152648))) /
                         C152055;
    const double C152742 = be * C152735;
    const double C152795 = C152790 + C152791;
    const double C152832 = be * C152829;
    const double C153216 = C152585 + C153215;
    const double C32691 = C28212 * C31224;
    const double C152849 = C152844 + C152845;
    const double C152817 = be * C152814;
    const double C153251 = C152632 * C152814;
    const double C34025 =
        (4 * (2 * C152632 * C152561 + C152632 * C153222) +
         C152632 *
             (3 * C153222 + C152632 * (2 * C152763 + C152632 * C152814))) /
        C152055;
    const double C152444 = C152361 + C152438;
    const double C152490 = C152433 + C152472;
    const double C152615 = C152373 + C152610;
    const double C152688 = C152373 + C152683;
    const double C152715 = ae * C152708;
    const double C152771 = C152632 * C152708;
    const double C153240 = C152708 * C152648;
    const double C9040 = (3 * (C153120 + C152593 * C152648) +
                          C152632 * (2 * C152632 * C152593 +
                                     C152632 * (C152593 + C152708 * C152648))) /
                         C152055;
    const double C152741 = ae * C152734;
    const double C152626 = C152622 + C152623;
    const double C152794 = C152788 + C152789;
    const double C152831 = ae * C152828;
    const double C153213 = C152584 + C153212;
    const double C32689 = C28212 * C31223;
    const double C152699 = C152695 + C152696;
    const double C152848 = C152842 + C152843;
    const double C152782 = C152778 + C152779;
    const double C152816 = ae * C152813;
    const double C153247 = C152632 * C152813;
    const double C34024 =
        (4 * (2 * C152632 * C152560 + C152632 * C153219) +
         C152632 *
             (3 * C153219 + C152632 * (2 * C152762 + C152632 * C152813))) /
        C152055;
    const double C152443 = C152411 + C152437;
    const double C152586 = C152372 + C152583;
    const double C152602 = C152272 * C152597;
    const double C152764 = C152632 * C152597;
    const double C152792 = 2 * C152597;
    const double C152822 = C152597 * C152648;
    const double C152659 = C152372 + C152656;
    const double C152675 = C152272 * C152670;
    const double C152846 = 2 * C152670;
    const double C152527 = C152425 + C152522;
    const double C152516 = C152482 + C152511;
    const double C152525 = C152422 + C152519;
    const double C152524 = C152491 + C152518;
    const double C152619 = C152433 + C152614;
    const double C152692 = C152433 + C152687;
    const double C152719 = C152272 * C152712;
    const double C152775 = C152632 * C152712;
    const double C152812 = C152712 * C152648;
    const double C152745 = C152272 * C152738;
    const double C152442 = C152435 * ae;
    const double C152440 = C152272 * C152435;
    const double C152439 = C152435 * be;
    const double C152484 = 4 * C152435;
    const double C153362 = C152559 * C152435;
    const double C4527 =
        4 * (2 * C152559 * C152363 + C152559 * C153335) +
        C152559 *
            (3 * C153335 + C152559 * (2 * C152559 * C152424 +
                                      C152559 * (C152424 + C152505 * C152575)));
    const double C4781 =
        2 * C152559 * C152363 + C152559 * C153335 +
        (2 * C152559 * C152424 + C152559 * (C152424 + C152505 * C152575)) *
            C152648;
    const double C5561 =
        C152632 *
        (3 * C153335 + C152559 * (2 * C152559 * C152424 +
                                  C152559 * (C152424 + C152505 * C152575)));
    const double C6179 =
        2 * C152632 * C153335 +
        C152632 * (C153335 + (C152424 + C152505 * C152575) * C152648);
    const double C10378 =
        4 * (2 * C152632 * C152363 + C152632 * C153371) +
        C152632 *
            (3 * C153371 + C152632 * (2 * C152632 * C152424 +
                                      C152632 * (C152424 + C152505 * C152648)));
    const double C153389 = C153385 + C153388;
    const double C153431 = C153428 + C153430;
    const double C56476 =
        4 * (2 * C152632 * C153366 + C152632 * C153435) +
        C152632 *
            (3 * C153435 +
             C152632 * (2 * C152632 * C153433 +
                        C152632 * (C153433 + C152559 * C152495 * C152648)));
    const double C153402 = C152559 * C153401;
    const double C34020 =
        4 * (2 * C152632 * C153381 + C152632 * C153414) +
        C152632 *
            (3 * C153414 +
             C152632 * (2 * C152632 * C153399 +
                        C152632 * (C153399 +
                                   (C152400 + C152476 * C152575) * C152648)));
    const double C153443 = C153439 + C153442;
    const double C153452 = C152632 * C153451;
    const double C153917 = C153838 - C153887;
    const double C153918 = C153842 - C153889;
    const double C153919 = C153845 - C153891;
    const double C153920 = C153852 - C153892;
    const double C153921 = C153847 - C153894;
    const double C153922 = C153856 - C153895;
    const double C153680 = C153675 - C153679;
    const double C153924 = C153897 / C152055;
    const double C153687 = C153683 - C153686;
    const double C153938 = C153927 / C152061;
    const double C153720 = C153715 - C153719;
    const double C153926 = C153900 / C152055;
    const double C153727 = C153723 - C153726;
    const double C153940 = C153930 / C152061;
    const double C152101 = C152099 / C152055;
    const double C152139 = C152136 / C152055;
    const double C152089 = C152085 + C153472;
    const double C152156 = C152153 - C152155;
    const double C23996 = C152153 + (0 * ae) / C152055;
    const double C152088 = C153462 - C152084;
    const double C83878 = C153467 * C345;
    const double C83866 = C153467 * C342;
    const double C83862 = C153467 * C1202;
    const double C83842 = C153467 * C344;
    const double C83830 = C153467 * C343;
    const double C84410 = C153467 * C346;
    const double C84968 = C153467 * C963;
    const double C84956 = C153467 * C1775;
    const double C88548 = C153467 * C518;
    const double C88536 = C153467 * C515;
    const double C88532 = C153467 * C517;
    const double C88512 = C153467 * C516;
    const double C92174 = C153467 * C2127;
    const double C117111 = C153467 * C519;
    const double C153828 = C153467 * C153457;
    const double C153884 = C153833 + C153467;
    const double C24272 = C153914 * C346;
    const double C24236 = C153914 * C345;
    const double C24224 = C153914 * C342;
    const double C48191 = C153914 * C519;
    const double C48155 = C153914 * C518;
    const double C48143 = C153914 * C515;
    const double C83882 = C153475 * C346;
    const double C83846 = C153475 * C345;
    const double C83834 = C153475 * C342;
    const double C88552 = C153475 * C519;
    const double C88528 = C153475 * C518;
    const double C88516 = C153475 * C515;
    const double C153836 = C153475 / C152061;
    const double C153832 = C153475 * C153457;
    const double C11269 = C153934 - (C153467 * C153458) / C152055;
    const double C152338 = C152336 + C152324;
    const double C152337 = C152335 + C152321;
    const double C152359 = C152350 + C152341;
    const double C2973 = C2684 * C341;
    const double C2941 = C153885 * C341;
    const double C3517 = C2683 * C341;
    const double C24260 = C153914 * C341;
    const double C24228 = C153885 * C341;
    const double C24788 = C153933 * C341;
    const double C28680 = C153462 * C341;
    const double C35135 = C153472 * C341;
    const double C35607 = C153829 * C341;
    const double C74524 = C153472 * C341;
    const double C74996 = C74280 * C341;
    const double C83870 = C153475 * C341;
    const double C83838 = C83598 * C341;
    const double C84398 = C153467 * C341;
    const double C4107 = C2683 * C964;
    const double C4099 = C2684 * C964;
    const double C25362 = C153933 * C964;
    const double C25354 = C153914 * C964;
    const double C29020 = C153462 * C964;
    const double C36125 = C153829 * C964;
    const double C36117 = C153472 * C964;
    const double C75514 = C74280 * C964;
    const double C75506 = C153472 * C964;
    const double C84972 = C153467 * C964;
    const double C84964 = C153475 * C964;
    const double C4797 = C2683 * C1344;
    const double C26028 = C153933 * C1344;
    const double C29410 = C153462 * C1344;
    const double C36721 = C153829 * C1344;
    const double C76110 = C74280 * C1344;
    const double C85638 = C153467 * C1344;
    const double C7574 = C2684 * C514;
    const double C7542 = C153885 * C514;
    const double C8100 = C2683 * C514;
    const double C31773 = C153462 * C514;
    const double C39393 = C153472 * C514;
    const double C40065 = C153829 * C514;
    const double C48179 = C153914 * C514;
    const double C48147 = C153885 * C514;
    const double C48705 = C153933 * C514;
    const double C78819 = C153472 * C514;
    const double C79506 = C74280 * C514;
    const double C88540 = C153475 * C514;
    const double C88520 = C83598 * C514;
    const double C89218 = C153467 * C514;
    const double C152384 = C152381 + C152365;
    const double C31264 = C28212 * C6194;
    const double C41253 = C152081 * C6194;
    const double C78798 = C74288 * C6194;
    const double C149 = 4 * (2 * C152293 + C152272 * C152322) +
                        C152272 * (3 * C152322 + C152272 * C152374);
    const double C303 = C152559 * (3 * C152322 + C152272 * C152374);
    const double C311 = 2 * C152293 + C152272 * C152322 + C152374 * C152575;
    const double C476 = C152632 * (3 * C152322 + C152272 * C152374);
    const double C484 = 2 * C152293 + C152272 * C152322 + C152374 * C152648;
    const double C948 = C152632 * C152559 * C152374;
    const double C1184 =
        2 * C152559 * C152374 + C152559 * (C152374 + C152435 * C152575);
    const double C1326 = C152559 * C152374 + C152559 * C152435 * C152648;
    const double C1757 = C152632 * (C152374 + C152435 * C152575);
    const double C2109 =
        2 * C152632 * C152374 + C152632 * (C152374 + C152435 * C152648);
    const double C152383 = C152380 + C152362;
    const double C152420 = C152410 + C152397;
    const double C152603 = C152562 + C152598;
    const double C31262 = C28212 * C6193;
    const double C41251 = C152081 * C6193;
    const double C78796 = C74288 * C6193;
    const double C152676 = C152635 + C152671;
    const double C152382 = C152272 * C152379;
    const double C152393 = 2 * C152379;
    const double C152567 = C152566 + C152565;
    const double C4111 = C2684 * C965;
    const double C4095 = C153885 * C965;
    const double C19655 = C2683 * C965;
    const double C25366 = C153914 * C965;
    const double C25350 = C153885 * C965;
    const double C31522 = C153462 * C965;
    const double C36129 = C153472 * C965;
    const double C39747 = C153829 * C965;
    const double C75518 = C153472 * C965;
    const double C79188 = C74280 * C965;
    const double C84976 = C153475 * C965;
    const double C84960 = C83598 * C965;
    const double C88907 = C153467 * C965;
    const double C126345 = C153933 * C965;
    const double C4801 = C2684 * C1343;
    const double C8436 = C2683 * C1343;
    const double C26032 = C153914 * C1343;
    const double C30975 = C153462 * C1343;
    const double C36725 = C153472 * C1343;
    const double C39405 = C153829 * C1343;
    const double C49037 = C153933 * C1343;
    const double C76114 = C153472 * C1343;
    const double C78464 = C74280 * C1343;
    const double C85642 = C153475 * C1343;
    const double C88560 = C153467 * C1343;
    const double C9051 = C2683 * C6202;
    const double C31245 = C153462 * C6202;
    const double C41250 = C153829 * C6202;
    const double C49640 = C153933 * C6202;
    const double C78803 = C74280 * C6202;
    const double C90409 = C153467 * C6202;
    const double C1201 =
        (ae *
             (2 * C152559 * C152297 + C152559 * (C152297 + C152320 * C152575)) +
         be *
             (2 * C152559 * C152298 + C152559 * (C152298 + C152323 * C152575)) +
         C152272 * (2 * C152569 + C152559 * C152579)) /
        C152060;
    const double C1774 = (ae * C152632 * (C152297 + C152320 * C152575) +
                          be * C152632 * (C152298 + C152323 * C152575) +
                          C152272 * C152632 * C152579) /
                         C152060;
    const double C2925 = (3 * (C152302 + C152328 * C152575) +
                          C152559 * (2 * C152569 + C152559 * C152579)) /
                         C152060;
    const double C3291 =
        (C152302 + C152328 * C152575 + C152579 * C152648) / C152060;
    const double C4075 =
        (C152632 * (2 * C152569 + C152559 * C152579)) / C152060;
    const double C152640 = C152639 + C152638;
    const double C2126 =
        (ae *
             (2 * C152632 * C152297 + C152632 * (C152297 + C152320 * C152648)) +
         be *
             (2 * C152632 * C152298 + C152632 * (C152298 + C152323 * C152648)) +
         C152272 * (2 * C152642 + C152632 * C152652)) /
        C152060;
    const double C7526 = (3 * (C152302 + C152328 * C152648) +
                          C152632 * (2 * C152642 + C152632 * C152652)) /
                         C152060;
    const double C28336 =
        5 * (3 * C153341 + C152559 * C153383) +
        C152559 *
            (4 * C153383 +
             C152559 * (3 * C153381 +
                        C152559 * (2 * C152559 * C152344 +
                                   C152559 * (C152344 + C152400 * C152575))));
    const double C28546 =
        3 * C153341 + C152559 * C153383 +
        (3 * C153381 + C152559 * (2 * C152559 * C152344 +
                                  C152559 * (C152344 + C152400 * C152575))) *
            C152648;
    const double C28992 =
        C152632 *
        (4 * C153383 +
         C152559 * (3 * C153381 +
                    C152559 * (2 * C152559 * C152344 +
                               C152559 * (C152344 + C152400 * C152575))));
    const double C30183 =
        2 * C152632 * C153383 + C152632 * (C153383 + C153401 * C152648);
    const double C32676 =
        3 * (C153383 + C153401 * C152648) +
        C152632 *
            (2 * C152632 * C153401 +
             C152632 * (C153401 + (2 * C152559 * C152400 +
                                   C152559 * (C152400 + C152476 * C152575)) *
                                      C152648));
    const double C56027 =
        5 * (3 * C153377 + C152632 * C153424) +
        C152632 *
            (4 * C153424 +
             C152632 * (3 * C153422 +
                        C152632 * (2 * C152632 * C152344 +
                                   C152632 * (C152344 + C152400 * C152648))));
    const double C152449 = C152446 + C152426;
    const double C152621 = be * C152616;
    const double C153177 = C152559 * C152616;
    const double C4533 =
        (4 * (2 * C152559 * C152330 + C152559 * C153090) +
         C152559 *
             (3 * C153090 + C152559 * (2 * C152594 + C152559 * C152616))) /
        C152055;
    const double C4787 = (2 * C152559 * C152330 + C152559 * C153090 +
                          (2 * C152594 + C152559 * C152616) * C152648) /
                         C152055;
    const double C5567 =
        (C152632 *
         (3 * C153090 + C152559 * (2 * C152594 + C152559 * C152616))) /
        C152055;
    const double C6188 =
        (2 * C152632 * C153090 + C152632 * (C153090 + C152616 * C152648)) /
        C152055;
    const double C31226 =
        (3 * (C153090 + C152616 * C152648) +
         C152632 *
             (2 * C152632 * C152616 +
              C152632 * (C152616 + (C152436 + C152517 * C152575) * C152648))) /
        C152055;
    const double C152694 = be * C152689;
    const double C153237 = C152632 * C152689;
    const double C10384 =
        (4 * (2 * C152632 * C152330 + C152632 * C153156) +
         C152632 *
             (3 * C153156 + C152632 * (2 * C152667 + C152632 * C152689))) /
        C152055;
    const double C152777 = be * C152772;
    const double C153244 = C152594 + C153243;
    const double C56483 = C28212 * C9041;
    const double C60556 = C152081 * C9041;
    const double C80705 = C74288 * C9041;
    const double C152798 = be * C152795;
    const double C153193 = C152559 * C152795;
    const double C28339 =
        (5 * (3 * C153096 + C152559 * C153170) +
         C152559 *
             (4 * C153170 + C152559 * (3 * C152585 + C152559 * C152795))) /
        C152055;
    const double C28549 = (3 * C153096 + C152559 * C153170 +
                           (3 * C152585 + C152559 * C152795) * C152648) /
                          C152055;
    const double C28995 =
        (C152632 *
         (4 * C153170 + C152559 * (3 * C152585 + C152559 * C152795))) /
        C152055;
    const double C30187 =
        (2 * C152632 * C153170 + C152632 * (C153170 + C152795 * C152648)) /
        C152055;
    const double C32678 =
        (3 * (C153170 + C152795 * C152648) +
         C152632 *
             (2 * C152632 * C152795 +
              C152632 * (C152795 + (2 * C152711 +
                                    C152559 * (C152425 + C152506 * C152575)) *
                                       C152648))) /
        C152055;
    const double C34023 =
        (4 * (2 * C152632 * C152585 + C152632 * C153216) +
         C152632 *
             (3 * C153216 +
              C152632 * (2 * C152829 +
                         C152632 * (C152618 + (C152425 + C152506 * C152575) *
                                                  C152648)))) /
        C152055;
    const double C152852 = be * C152849;
    const double C153259 = C152632 * C152849;
    const double C56030 =
        (5 * (3 * C153162 + C152632 * C153230) +
         C152632 *
             (4 * C153230 + C152632 * (3 * C152658 + C152632 * C152849))) /
        C152055;
    const double C153252 = C153250 + C153251;
    const double C56820 = C28212 * C34025;
    const double C152448 = C152444 + C152423;
    const double C152501 = C152490 + C152473;
    const double C152620 = ae * C152615;
    const double C153173 = C152559 * C152615;
    const double C4532 =
        (4 * (2 * C152559 * C152329 + C152559 * C153087) +
         C152559 *
             (3 * C153087 + C152559 * (2 * C152593 + C152559 * C152615))) /
        C152055;
    const double C4786 = (2 * C152559 * C152329 + C152559 * C153087 +
                          (2 * C152593 + C152559 * C152615) * C152648) /
                         C152055;
    const double C5566 =
        (C152632 *
         (3 * C153087 + C152559 * (2 * C152593 + C152559 * C152615))) /
        C152055;
    const double C6187 =
        (2 * C152632 * C153087 + C152632 * (C153087 + C152615 * C152648)) /
        C152055;
    const double C31225 =
        (3 * (C153087 + C152615 * C152648) +
         C152632 *
             (2 * C152632 * C152615 +
              C152632 * (C152615 + (C152434 + C152515 * C152575) * C152648))) /
        C152055;
    const double C152693 = ae * C152688;
    const double C153233 = C152632 * C152688;
    const double C10383 =
        (4 * (2 * C152632 * C152329 + C152632 * C153153) +
         C152632 *
             (3 * C153153 + C152632 * (2 * C152666 + C152632 * C152688))) /
        C152055;
    const double C152721 = C152597 + C152715;
    const double C152776 = ae * C152771;
    const double C153241 = C152593 + C153240;
    const double C56481 = C28212 * C9040;
    const double C60554 = C152081 * C9040;
    const double C80703 = C74288 * C9040;
    const double C152747 = C152670 + C152741;
    const double C152797 = ae * C152794;
    const double C153189 = C152559 * C152794;
    const double C28338 =
        (5 * (3 * C153093 + C152559 * C153166) +
         C152559 *
             (4 * C153166 + C152559 * (3 * C152584 + C152559 * C152794))) /
        C152055;
    const double C28548 = (3 * C153093 + C152559 * C153166 +
                           (3 * C152584 + C152559 * C152794) * C152648) /
                          C152055;
    const double C28994 =
        (C152632 *
         (4 * C153166 + C152559 * (3 * C152584 + C152559 * C152794))) /
        C152055;
    const double C30186 =
        (2 * C152632 * C153166 + C152632 * (C153166 + C152794 * C152648)) /
        C152055;
    const double C32677 =
        (3 * (C153166 + C152794 * C152648) +
         C152632 *
             (2 * C152632 * C152794 +
              C152632 * (C152794 + (2 * C152710 +
                                    C152559 * (C152422 + C152503 * C152575)) *
                                       C152648))) /
        C152055;
    const double C152834 = C152831 + C152832;
    const double C34022 =
        (4 * (2 * C152632 * C152584 + C152632 * C153213) +
         C152632 *
             (3 * C153213 +
              C152632 * (2 * C152828 +
                         C152632 * (C152617 + (C152422 + C152503 * C152575) *
                                                  C152648)))) /
        C152055;
    const double C152851 = ae * C152848;
    const double C153255 = C152632 * C152848;
    const double C56029 =
        (5 * (3 * C153159 + C152632 * C153226) +
         C152632 *
             (4 * C153226 + C152632 * (3 * C152657 + C152632 * C152848))) /
        C152055;
    const double C152819 = C152816 + C152817;
    const double C153248 = C153246 + C153247;
    const double C56818 = C28212 * C34024;
    const double C152447 = C152272 * C152443;
    const double C152469 = 2 * C152443;
    const double C152589 = C152272 * C152586;
    const double C152804 = C152559 * C152586;
    const double C152837 = C152632 * C152586;
    const double C152867 = 3 * C152586;
    const double C3292 =
        (ae * (C152297 + C152320 * C152575 + C152584 * C152648) +
         be * (C152298 + C152323 * C152575 + C152585 * C152648) +
         C152272 * (C152579 + C152586 * C152648)) /
        C152060;
    const double C6199 =
        (2 * C152632 * C152579 + C152632 * (C152579 + C152586 * C152648)) /
        C152060;
    const double C152606 = C152604 + C152602;
    const double C152767 = C152272 * C152764;
    const double C152904 = 2 * C152764;
    const double C152823 = C152562 + C152822;
    const double C152662 = C152272 * C152659;
    const double C152858 = C152632 * C152659;
    const double C152900 = 3 * C152659;
    const double C152679 = C152677 + C152675;
    const double C152532 = C152527 + C152507;
    const double C152523 = C152516 * ae;
    const double C152521 = C152272 * C152516;
    const double C152520 = C152516 * be;
    const double C2916 = 3 * (C152374 + C152435 * C152575) +
                         C152559 * (2 * C152559 * C152435 +
                                    C152559 * (C152435 + C152516 * C152575));
    const double C3282 =
        C152374 + C152435 * C152575 + (C152435 + C152516 * C152575) * C152648;
    const double C4066 = C152632 * (2 * C152559 * C152435 +
                                    C152559 * (C152435 + C152516 * C152575));
    const double C7517 = 3 * (C152374 + C152435 * C152648) +
                         C152632 * (2 * C152632 * C152435 +
                                    C152632 * (C152435 + C152516 * C152648));
    const double C152529 = C152525 + C152504;
    const double C152528 = C152272 * C152524;
    const double C152624 = C152272 * C152619;
    const double C152793 = C152559 * C152619;
    const double C152830 = C152632 * C152619;
    const double C152874 = C152619 * C152648;
    const double C3293 =
        (C152579 + C152586 * C152648 +
         ae * (C152329 + C152373 * C152575 + C152615 * C152648) +
         be * (C152330 + C152375 * C152575 + C152616 * C152648) +
         C152272 * (ae * (C152584 + C152617 * C152648) +
                    be * (C152585 + C152618 * C152648) +
                    C152272 * (C152586 + C152619 * C152648))) /
        C152060;
    const double C152697 = C152272 * C152692;
    const double C152847 = C152632 * C152692;
    const double C152725 = C152722 + C152719;
    const double C152780 = C152272 * C152775;
    const double C152815 = C152597 + C152812;
    const double C152751 = C152748 + C152745;
    const double C152445 = C152406 + C152440;
    const double C8428 = 2 * C152632 * C153362 +
                         C152632 * (C153362 + C152559 * C152516 * C152648);
    const double C28337 =
        5 * (3 * C153338 + C152559 * C153389) +
        C152559 *
            (4 * C153389 +
             C152559 * (3 * C153387 +
                        C152559 * (2 * C152559 * C152415 +
                                   C152559 * (C152415 + C152495 * C152575))));
    const double C28547 =
        3 * C153338 + C152559 * C153389 +
        (3 * C153387 + C152559 * (2 * C152559 * C152415 +
                                  C152559 * (C152415 + C152495 * C152575))) *
            C152648;
    const double C28993 =
        C152632 *
        (4 * C153389 +
         C152559 * (3 * C153387 +
                    C152559 * (2 * C152559 * C152415 +
                               C152559 * (C152415 + C152495 * C152575))));
    const double C32073 =
        2 * C152632 * C153389 +
        C152632 * (C153389 + (2 * C152559 * C152415 +
                              C152559 * (C152415 + C152495 * C152575)) *
                                 C152648);
    const double C56028 =
        5 * (3 * C153374 + C152632 * C153431) +
        C152632 *
            (4 * C153431 +
             C152632 * (3 * C153429 +
                        C152632 * (2 * C152632 * C152415 +
                                   C152632 * (C152415 + C152495 * C152648))));
    const double C153403 = C153395 + C153402;
    const double C56813 =
        5 * (3 * C153417 + C152632 * C153443) +
        C152632 *
            (4 * C153443 +
             C152632 * (3 * C153441 +
                        C152632 * (2 * C152632 * C153438 +
                                   C152632 * (C153438 +
                                              C152559 * C152476 * C152648))));
    const double C153453 = C153445 + C153452;
    const double C130 =
        (C153917 * C153497) / C153494 + (C153840 - C153888) / C153496;
    const double C131 =
        (C153918 * C153497) / C153494 + (2 * C153508 + C153917) / C153496;
    const double C132 = (C153497 * C153508) / C153511 + C153918 / C153496;
    const double C1178 =
        (C153919 * C153568) / C153494 + (C153848 - C153890) / C153496;
    const double C1179 =
        (C153920 * C153568) / C153494 + (2 * C153573 + C153919) / C153496;
    const double C1180 = (C153568 * C153573) / C153511 + C153920 / C153496;
    const double C2104 =
        (C153921 * C153596) / C153494 + (C153849 - C153893) / C153496;
    const double C2105 =
        (C153922 * C153596) / C153494 + (2 * C153601 + C153921) / C153496;
    const double C2106 = (C153596 * C153601) / C153511 + C153922 / C153496;
    const double C153866 = C153680 * C153674;
    const double C153905 = C153868 + C153680;
    const double C153870 = C153687 / C152061;
    const double C153867 = C153687 * C153674;
    const double C34893 = C153938 - (C153680 * C153676) / C152055;
    const double C153873 = C153720 * C153714;
    const double C153910 = C153875 + C153720;
    const double C153877 = C153727 / C152061;
    const double C153874 = C153727 * C153714;
    const double C63414 = C153940 - (C153720 * C153716) / C152055;
    const double C152104 = C152095 - C152101;
    const double C152143 = C152125 - C152139;
    const double C152094 = C152089 * be;
    const double C83837 = C152156 * C320;
    const double C83835 = C152156 * C319;
    const double C88519 = C152156 * C493;
    const double C88517 = C152156 * C492;
    const double C152160 = 2 * C152156;
    const double C142 =
        (C152156 / C152061 + (0 * ae) / C152055) / C152061 - (0 * be) / C152055;
    const double C11281 = C152156 / C152061 - (0 * be) / C152055;
    const double C70506 = C152156 / C152061 + (0 * ae) / C152055;
    const double C24227 = C23996 * C320;
    const double C24225 = C23996 * C319;
    const double C48146 = C23996 * C493;
    const double C48144 = C23996 * C492;
    const double C152093 = C152088 * ae;
    const double C152124 = C152088 * C152118;
    const double C2689 =
        ((-C152056 / C152055) / C152061 - (C152074 * be) / C152055) / C152061 -
        ((C152053 * ((-C152063) / C152061 - (C152088 * be) / C152055) +
          C74280) *
         be) /
            C152055 +
        (-C152075 / C152055) / C152061 - (0 * be) / C152055;
    const double C2691 =
        ((-C152063) / C152061 - (C152088 * be) / C152055) / C152061 -
        ((C152053 * ((-C152075 / C152055) / C152061 - (0 * be) / C152055) +
          C153472) *
         be) /
            C152055;
    const double C74286 = (-C152063) / C152061 - (C152088 * be) / C152055;
    const double C153880 = C153828 / C152055;
    const double C153915 = C153884 / C152061;
    const double C153916 = C153886 + C153836;
    const double C11271 = C153836 - C153473 / C152067;
    const double C153883 = C153832 / C152055;
    const double C11529 = C11269 * C345;
    const double C11513 = C11269 * C342;
    const double C11509 = C11269 * C344;
    const double C11481 = C11269 * C343;
    const double C11981 = C11269 * C341;
    const double C12477 = C11269 * C964;
    const double C12473 = C11269 * C963;
    const double C12841 = C11269 * C1202;
    const double C13063 = C11269 * C1344;
    const double C13737 = C11269 * C1775;
    const double C15497 = C11269 * C518;
    const double C15481 = C11269 * C515;
    const double C15477 = C11269 * C517;
    const double C15449 = C11269 * C516;
    const double C15949 = C11269 * C514;
    const double C17917 = C11269 * C2127;
    const double C161 =
        (3 * (C152285 + C152272 * C152304 + C152293 * ae) +
         C152272 * (2 * C152304 + C152272 * C152338 + C152322 * ae) +
         (2 * C152293 + C152272 * C152322) * ae) /
        C152055;
    const double C318 =
        (C152559 * (2 * C152304 + C152272 * C152338 + C152322 * ae)) / C152055;
    const double C330 =
        (C152285 + C152272 * C152304 + C152293 * ae + C152338 * C152575) /
        C152055;
    const double C491 =
        (C152632 * (2 * C152304 + C152272 * C152338 + C152322 * ae)) / C152055;
    const double C503 =
        (C152285 + C152272 * C152304 + C152293 * ae + C152338 * C152648) /
        C152055;
    const double C956 = (C152632 * C152559 * C152338) / C152055;
    const double C172 =
        (3 * (C152302 + ae * C152303 + be * C152304 + C152272 * C152334) +
         ae * (2 * C152303 + C152272 * C152337 + C152322 * be) +
         be * (2 * C152304 + C152272 * C152338 + C152322 * ae) +
         C152272 * (2 * C152334 + ae * C152337 + be * C152338 +
                    C152272 * (C152328 + ae * C152329 + be * C152330 +
                               C152272 * (ae * C152320 + be * C152323 +
                                          C152272 *
                                              (C152309 * C152310 +
                                               C152276 * bs[6] *
                                                   std::pow(C152270, 6)) *
                                              C152058)))) /
        C152060;
    const double C160 =
        (3 * (C152284 + C152272 * C152303 + C152293 * be) +
         C152272 * (2 * C152303 + C152272 * C152337 + C152322 * be) +
         (2 * C152293 + C152272 * C152322) * be) /
        C152055;
    const double C317 =
        (C152559 * (2 * C152303 + C152272 * C152337 + C152322 * be)) / C152055;
    const double C329 =
        (C152284 + C152272 * C152303 + C152293 * be + C152337 * C152575) /
        C152055;
    const double C490 =
        (C152632 * (2 * C152303 + C152272 * C152337 + C152322 * be)) / C152055;
    const double C502 =
        (C152284 + C152272 * C152303 + C152293 * be + C152337 * C152648) /
        C152055;
    const double C955 = (C152632 * C152559 * C152337) / C152055;
    const double C152387 = C152272 * C152384;
    const double C152407 = 3 * C152384;
    const double C152395 = be * C152384;
    const double C153118 = C152559 * C152384;
    const double C1193 =
        (2 * C152559 * C152338 + C152559 * (C152338 + C152384 * C152575)) /
        C152055;
    const double C1335 =
        (C152559 * C152338 + C152559 * C152384 * C152648) / C152055;
    const double C1766 = (C152632 * (C152338 + C152384 * C152575)) / C152055;
    const double C2118 =
        (2 * C152632 * C152338 + C152632 * (C152338 + C152384 * C152648)) /
        C152055;
    const double C152386 = C152272 * C152383;
    const double C152403 = 3 * C152383;
    const double C152394 = ae * C152383;
    const double C347 =
        (2 * (ae * (C152297 + C152320 * C152575) +
              be * (C152298 + C152323 * C152575) + C152272 * C152579) +
         ae * (C152337 + C152383 * C152575) +
         be * (C152338 + C152384 * C152575) +
         C152272 * (C152579 + ae * (C152329 + C152373 * C152575) +
                    be * (C152330 + C152375 * C152575) +
                    C152272 * (ae * (C152320 + C152361 * C152575) +
                               be * (C152323 + C152364 * C152575) +
                               C152272 * (C152372 + C152433 * C152575)))) /
        C152060;
    const double C520 =
        (2 * (ae * (C152297 + C152320 * C152648) +
              be * (C152298 + C152323 * C152648) + C152272 * C152652) +
         ae * (C152337 + C152383 * C152648) +
         be * (C152338 + C152384 * C152648) +
         C152272 * (C152652 + ae * (C152329 + C152373 * C152648) +
                    be * (C152330 + C152375 * C152648) +
                    C152272 * (ae * (C152320 + C152361 * C152648) +
                               be * (C152323 + C152364 * C152648) +
                               C152272 * (C152372 + C152433 * C152648)))) /
        C152060;
    const double C966 =
        (2 * (ae * C152632 * C152560 + be * C152632 * C152561 +
              C152272 * C152760) +
         ae * C152632 * C152559 * C152383 + be * C152632 * C152559 * C152384 +
         C152272 * (C152760 + ae * C152632 * C152593 + be * C152632 * C152594 +
                    C152272 * (ae * C152632 * C152595 + be * C152632 * C152596 +
                               C152272 * C152632 * C152597))) /
        C152060;
    const double C153116 = C152559 * C152383;
    const double C1192 =
        (2 * C152559 * C152337 + C152559 * (C152337 + C152383 * C152575)) /
        C152055;
    const double C1334 =
        (C152559 * C152337 + C152559 * C152383 * C152648) / C152055;
    const double C1765 = (C152632 * (C152337 + C152383 * C152575)) / C152055;
    const double C2117 =
        (2 * C152632 * C152337 + C152632 * (C152337 + C152383 * C152648)) /
        C152055;
    const double C152605 = C152603 + C152599;
    const double C152678 = C152676 + C152672;
    const double C152385 = C152359 + C152382;
    const double C340 =
        (2 * (ae * C152559 * C152297 + be * C152559 * C152298 +
              C152272 * C152569) +
         ae * C152559 * C152337 + be * C152559 * C152338 +
         C152272 * (C152569 + ae * C152559 * C152329 + be * C152559 * C152330 +
                    C152272 * C152567)) /
        C152060;
    const double C2993 = C2683 * C1201;
    const double C2961 = C2684 * C1201;
    const double C24280 = C153933 * C1201;
    const double C24248 = C153914 * C1201;
    const double C28376 = C153462 * C1201;
    const double C35147 = C153829 * C1201;
    const double C35119 = C153472 * C1201;
    const double C74536 = C74280 * C1201;
    const double C74508 = C153472 * C1201;
    const double C83890 = C153467 * C1201;
    const double C83858 = C153475 * C1201;
    const double C4119 = C2683 * C1774;
    const double C4087 = C2684 * C1774;
    const double C25374 = C153933 * C1774;
    const double C25342 = C153914 * C1774;
    const double C29024 = C153462 * C1774;
    const double C36133 = C153829 * C1774;
    const double C36109 = C153472 * C1774;
    const double C75522 = C74280 * C1774;
    const double C75498 = C153472 * C1774;
    const double C84984 = C153467 * C1774;
    const double C84952 = C153475 * C1774;
    const double C4544 = C2683 * C2925;
    const double C25787 = C153933 * C2925;
    const double C28360 = C153462 * C2925;
    const double C35127 = C153829 * C2925;
    const double C74516 = C74280 * C2925;
    const double C85397 = C153467 * C2925;
    const double C4809 = C2683 * C3291;
    const double C26040 = C153933 * C3291;
    const double C29414 = C153462 * C3291;
    const double C36729 = C153829 * C3291;
    const double C76118 = C74280 * C3291;
    const double C85650 = C153467 * C3291;
    const double C5578 = C2683 * C4075;
    const double C26797 = C153933 * C4075;
    const double C29008 = C153462 * C4075;
    const double C36105 = C153829 * C4075;
    const double C75494 = C74280 * C4075;
    const double C86407 = C153467 * C4075;
    const double C513 =
        (2 * (ae * C152632 * C152297 + be * C152632 * C152298 +
              C152272 * C152642) +
         ae * C152632 * C152337 + be * C152632 * C152338 +
         C152272 * (C152642 + ae * C152632 * C152329 + be * C152632 * C152330 +
                    C152272 * C152640)) /
        C152060;
    const double C7594 = C2683 * C2126;
    const double C7562 = C2684 * C2126;
    const double C31261 = C153462 * C2126;
    const double C43027 = C153472 * C2126;
    const double C48199 = C153933 * C2126;
    const double C48167 = C153914 * C2126;
    const double C58752 = C153829 * C2126;
    const double C78831 = C74280 * C2126;
    const double C78807 = C153472 * C2126;
    const double C92178 = C153475 * C2126;
    const double C116651 = C153467 * C2126;
    const double C10395 = C2683 * C7526;
    const double C34032 = C153462 * C7526;
    const double C50972 = C153933 * C7526;
    const double C62308 = C153829 * C7526;
    const double C82474 = C74280 * C7526;
    const double C119313 = C153467 * C7526;
    const double C152452 = C152272 * C152449;
    const double C152486 = 3 * C152449;
    const double C152471 = be * C152449;
    const double C152707 = C152559 * C152449;
    const double C152733 = C152632 * C152449;
    const double C153083 = C152449 * C152575;
    const double C153149 = C152449 * C152648;
    const double C2922 = (3 * (C152338 + C152384 * C152575) +
                          C152559 * (2 * C152559 * C152384 +
                                     C152559 * (C152384 + C152449 * C152575))) /
                         C152055;
    const double C3288 = (C152338 + C152384 * C152575 +
                          (C152384 + C152449 * C152575) * C152648) /
                         C152055;
    const double C4072 = (C152632 * (2 * C152559 * C152384 +
                                     C152559 * (C152384 + C152449 * C152575))) /
                         C152055;
    const double C7523 = (3 * (C152338 + C152384 * C152648) +
                          C152632 * (2 * C152632 * C152384 +
                                     C152632 * (C152384 + C152449 * C152648))) /
                         C152055;
    const double C153178 = C153176 + C153177;
    const double C28383 = C28212 * C4533;
    const double C36514 = C152081 * C4533;
    const double C75903 = C74288 * C4533;
    const double C30986 = C28212 * C4787;
    const double C36740 = C152081 * C4787;
    const double C76129 = C74288 * C4787;
    const double C29031 = C28212 * C5567;
    const double C37414 = C152081 * C5567;
    const double C76803 = C74288 * C5567;
    const double C31268 = C28212 * C6188;
    const double C41262 = C152081 * C6188;
    const double C80713 = C74288 * C6188;
    const double C153238 = C153236 + C153237;
    const double C56046 = C28212 * C10384;
    const double C66172 = C152081 * C10384;
    const double C110188 = C74288 * C10384;
    const double C56478 =
        (4 * (2 * C152632 * C152594 + C152632 * C153244) +
         C152632 *
             (3 * C153244 +
              C152632 * (2 * C152772 +
                         C152632 * (C152709 + C152559 * C152517 * C152648)))) /
        C152055;
    const double C153194 = C153192 + C153193;
    const double C29275 = C28212 * C28339;
    const double C29421 = C28212 * C28549;
    const double C29851 = C28212 * C28995;
    const double C32695 = C28212 * C30187;
    const double C153260 = C153258 + C153259;
    const double C57563 = C28212 * C56030;
    const double C56815 =
        (5 * (3 * C153222 + C152632 * C153252) +
         C152632 *
             (4 * C153252 +
              C152632 * (3 * C152814 +
                         C152632 * (2 * C152774 +
                                    C152632 * (C152711 + C152559 * C152506 *
                                                             C152648))))) /
        C152055;
    const double C152451 = C152272 * C152448;
    const double C152480 = 3 * C152448;
    const double C152470 = ae * C152448;
    const double C152706 = C152559 * C152448;
    const double C152732 = C152632 * C152448;
    const double C153080 = C152448 * C152575;
    const double C153146 = C152448 * C152648;
    const double C2921 = (3 * (C152337 + C152383 * C152575) +
                          C152559 * (2 * C152559 * C152383 +
                                     C152559 * (C152383 + C152448 * C152575))) /
                         C152055;
    const double C3287 = (C152337 + C152383 * C152575 +
                          (C152383 + C152448 * C152575) * C152648) /
                         C152055;
    const double C4071 = (C152632 * (2 * C152559 * C152383 +
                                     C152559 * (C152383 + C152448 * C152575))) /
                         C152055;
    const double C7522 = (3 * (C152337 + C152383 * C152648) +
                          C152632 * (2 * C152632 * C152383 +
                                     C152632 * (C152383 + C152448 * C152648))) /
                         C152055;
    const double C152625 = C152586 + C152620;
    const double C153174 = C153172 + C153173;
    const double C28381 = C28212 * C4532;
    const double C36512 = C152081 * C4532;
    const double C75901 = C74288 * C4532;
    const double C30984 = C28212 * C4786;
    const double C36738 = C152081 * C4786;
    const double C76127 = C74288 * C4786;
    const double C29029 = C28212 * C5566;
    const double C37412 = C152081 * C5566;
    const double C76801 = C74288 * C5566;
    const double C31266 = C28212 * C6187;
    const double C41260 = C152081 * C6187;
    const double C80711 = C74288 * C6187;
    const double C152698 = C152659 + C152693;
    const double C153234 = C153232 + C153233;
    const double C56044 = C28212 * C10383;
    const double C66170 = C152081 * C10383;
    const double C110186 = C74288 * C10383;
    const double C152724 = C152721 + C152716;
    const double C152781 = C152764 + C152776;
    const double C56477 =
        (4 * (2 * C152632 * C152593 + C152632 * C153241) +
         C152632 *
             (3 * C153241 +
              C152632 * (2 * C152771 +
                         C152632 * (C152708 + C152559 * C152515 * C152648)))) /
        C152055;
    const double C152750 = C152747 + C152742;
    const double C152800 = C152797 + C152798;
    const double C153190 = C153188 + C153189;
    const double C29273 = C28212 * C28338;
    const double C29419 = C28212 * C28548;
    const double C29849 = C28212 * C28994;
    const double C32693 = C28212 * C30186;
    const double C152854 = C152851 + C152852;
    const double C153256 = C153254 + C153255;
    const double C57561 = C28212 * C56029;
    const double C56814 =
        (5 * (3 * C153219 + C152632 * C153248) +
         C152632 *
             (4 * C153248 +
              C152632 * (3 * C152813 +
                         C152632 * (2 * C152773 +
                                    C152632 * (C152710 + C152559 * C152503 *
                                                             C152648))))) /
        C152055;
    const double C152450 = C152420 + C152447;
    const double C152591 = C152590 + C152589;
    const double C152805 = C152803 + C152804;
    const double C1773 =
        (C152632 * C152579 + ae * C152632 * (C152329 + C152373 * C152575) +
         be * C152632 * (C152330 + C152375 * C152575) +
         C152272 * (ae * C152632 * C152584 + be * C152632 * C152585 +
                    C152272 * C152837)) /
        C152060;
    const double C4813 = C2684 * C3292;
    const double C26044 = C153914 * C3292;
    const double C30981 = C153462 * C3292;
    const double C36733 = C153472 * C3292;
    const double C39413 = C153829 * C3292;
    const double C76122 = C153472 * C3292;
    const double C78472 = C74280 * C3292;
    const double C85654 = C153475 * C3292;
    const double C31241 = C153462 * C6199;
    const double C41259 = C153829 * C6199;
    const double C80710 = C74280 * C6199;
    const double C152607 = C152272 * C152606;
    const double C152705 = 2 * C152606;
    const double C152769 = C152768 + C152767;
    const double C1342 =
        (C152569 + C152562 * C152648 +
         ae * (C152559 * C152329 + C152593 * C152648) +
         be * (C152559 * C152330 + C152594 * C152648) +
         C152272 * (ae * (C152560 + C152595 * C152648) +
                    be * (C152561 + C152596 * C152648) + C152272 * C152823)) /
        C152060;
    const double C6201 =
        (ae *
             (2 * C152632 * C152560 + C152632 * (C152560 + C152595 * C152648)) +
         be *
             (2 * C152632 * C152561 + C152632 * (C152561 + C152596 * C152648)) +
         C152272 * (2 * C152760 + C152632 * C152823)) /
        C152060;
    const double C9046 = (3 * (C152569 + C152562 * C152648) +
                          C152632 * (2 * C152760 + C152632 * C152823)) /
                         C152060;
    const double C152664 = C152663 + C152662;
    const double C152859 = C152857 + C152858;
    const double C152680 = C152272 * C152679;
    const double C152731 = 2 * C152679;
    const double C152537 = C152272 * C152532;
    const double C152526 = C152483 + C152521;
    const double C152535 = C152272 * C152529;
    const double C152534 = C152501 + C152528;
    const double C152628 = C152626 + C152624;
    const double C152796 = C152792 + C152793;
    const double C152833 = C152272 * C152830;
    const double C152875 = C152586 + C152874;
    const double C4817 = C153885 * C3293;
    const double C26048 = C153885 * C3293;
    const double C31535 = C153462 * C3293;
    const double C39417 = C153472 * C3293;
    const double C78476 = C153472 * C3293;
    const double C85658 = C83598 * C3293;
    const double C152701 = C152699 + C152697;
    const double C152850 = C152846 + C152847;
    const double C152726 = C152272 * C152725;
    const double C152784 = C152782 + C152780;
    const double C152818 = C152272 * C152815;
    const double C152905 = C152632 * C152815;
    const double C6200 =
        (2 * C152760 + C152632 * C152823 +
         ae *
             (2 * C152632 * C152593 + C152632 * (C152593 + C152708 * C152648)) +
         be *
             (2 * C152632 * C152594 + C152632 * (C152594 + C152709 * C152648)) +
         C152272 * (ae * (2 * C152762 + C152632 * C152813) +
                    be * (2 * C152763 + C152632 * C152814) +
                    C152272 * (2 * C152764 + C152632 * C152815))) /
        C152060;
    const double C152752 = C152272 * C152751;
    const double C150 = 5 * (3 * C152322 + C152272 * C152374) +
                        C152272 * (4 * C152374 + C152272 * C152445);
    const double C312 = 3 * C152322 + C152272 * C152374 + C152445 * C152575;
    const double C313 = C152559 * (4 * C152374 + C152272 * C152445);
    const double C485 = 3 * C152322 + C152272 * C152374 + C152445 * C152648;
    const double C486 = C152632 * (4 * C152374 + C152272 * C152445);
    const double C949 = C152632 * C152559 * C152445;
    const double C29268 =
        6 * (4 * C153383 + C152559 * C153403) +
        C152559 *
            (5 * C153403 +
             C152559 * (4 * C153401 +
                        C152559 * (3 * C153399 +
                                   C152559 * (2 * C152559 * C152400 +
                                              C152559 * (C152400 +
                                                         C152476 * C152575)))));
    const double C29402 =
        4 * C153383 + C152559 * C153403 +
        (4 * C153401 +
         C152559 * (3 * C153399 +
                    C152559 * (2 * C152559 * C152400 +
                               C152559 * (C152400 + C152476 * C152575)))) *
            C152648;
    const double C29844 =
        C152632 *
        (5 * C153403 +
         C152559 *
             (4 * C153401 +
              C152559 * (3 * C153399 +
                         C152559 * (2 * C152559 * C152400 +
                                    C152559 * (C152400 + C152476 * C152575)))));
    const double C30182 =
        2 * C152632 * C153403 +
        C152632 *
            (C153403 + (3 * C153399 +
                        C152559 * (2 * C152559 * C152400 +
                                   C152559 * (C152400 + C152476 * C152575))) *
                           C152648);
    const double C57556 =
        6 * (4 * C153424 + C152632 * C153453) +
        C152632 *
            (5 * C153453 +
             C152632 * (4 * C153451 +
                        C152632 * (3 * C153449 +
                                   C152632 * (2 * C152632 * C152400 +
                                              C152632 * (C152400 +
                                                         C152476 * C152648)))));
    const double C153902 = C153866 / C152055;
    const double C153928 = C153905 / C152061;
    const double C153929 = C153906 + C153870;
    const double C34895 = C153870 - C153685 / C152067;
    const double C153904 = C153867 / C152055;
    const double C153907 = C153873 / C152055;
    const double C153931 = C153910 / C152061;
    const double C153932 = C153911 + C153877;
    const double C63416 = C153877 - C153725 / C152067;
    const double C153909 = C153874 / C152055;
    const double C152098 = C152094 / C152055;
    const double C152097 = C152093 / C152055;
    const double C152129 = C152124 / C152067;
    const double C152128 = C152053 * C152124;
    const double C143 =
        (-C152124 / C152055) / (4 * C152060 * std::pow(C152061, 2));
    const double C2694 = (-C152124 / C152055) / C152159;
    const double C11282 = (-C152124 / C152055) / (4 * C152113);
    const double C23997 = (-C152124 / C152055) / C152159;
    const double C28213 = -C152124 / C152055;
    const double C34900 = (-C152124 / C152055) / C152061;
    const double C70507 = (-C152124 / C152055) / (4 * C152113);
    const double C74289 = (-C152124 / C152055) / C152061;
    const double C83607 = (-C152124 / C152055) / C152159;
    const double C2992 = C2689 * C1195;
    const double C2990 = C2689 * C1194;
    const double C2980 = C2689 * C328;
    const double C2978 = C2689 * C327;
    const double C2968 = C2689 * C322;
    const double C2966 = C2689 * C321;
    const double C2964 = C2689 * C1197;
    const double C2962 = C2689 * C1196;
    const double C2944 = C2689 * C326;
    const double C2942 = C2689 * C325;
    const double C2932 = C2689 * C324;
    const double C2930 = C2689 * C323;
    const double C3516 = C2689 * C320;
    const double C3514 = C2689 * C319;
    const double C4118 = C2689 * C1768;
    const double C4116 = C2689 * C1767;
    const double C4106 = C2689 * C954;
    const double C4104 = C2689 * C953;
    const double C4102 = C2689 * C952;
    const double C4100 = C2689 * C951;
    const double C4090 = C2689 * C1770;
    const double C4088 = C2689 * C1769;
    const double C4543 = C2689 * C2918;
    const double C4541 = C2689 * C2917;
    const double C4808 = C2689 * C3284;
    const double C4806 = C2689 * C3283;
    const double C4796 = C2689 * C1339;
    const double C4794 = C2689 * C1338;
    const double C5577 = C2689 * C4068;
    const double C5575 = C2689 * C4067;
    const double C7593 = C2689 * C2120;
    const double C7591 = C2689 * C2119;
    const double C7581 = C2689 * C501;
    const double C7579 = C2689 * C500;
    const double C7569 = C2689 * C495;
    const double C7567 = C2689 * C494;
    const double C7565 = C2689 * C2122;
    const double C7563 = C2689 * C2121;
    const double C7545 = C2689 * C499;
    const double C7543 = C2689 * C498;
    const double C7533 = C2689 * C497;
    const double C7531 = C2689 * C496;
    const double C8099 = C2689 * C493;
    const double C8097 = C2689 * C492;
    const double C8435 = C2689 * C1337;
    const double C8433 = C2689 * C1336;
    const double C9050 = C2689 * C6196;
    const double C9048 = C2689 * C6195;
    const double C10394 = C2689 * C7519;
    const double C10392 = C2689 * C7518;
    const double C2972 = C2691 * C320;
    const double C2970 = C2691 * C319;
    const double C2960 = C2691 * C1195;
    const double C2958 = C2691 * C1194;
    const double C2948 = C2691 * C328;
    const double C2946 = C2691 * C327;
    const double C2936 = C2691 * C322;
    const double C2934 = C2691 * C321;
    const double C4098 = C2691 * C954;
    const double C4096 = C2691 * C953;
    const double C4086 = C2691 * C1768;
    const double C4084 = C2691 * C1767;
    const double C4547 = C2691 * C2920;
    const double C4545 = C2691 * C2919;
    const double C4812 = C2691 * C3286;
    const double C4810 = C2691 * C3285;
    const double C4800 = C2691 * C1337;
    const double C4798 = C2691 * C1336;
    const double C5581 = C2691 * C4070;
    const double C5579 = C2691 * C4069;
    const double C7573 = C2691 * C493;
    const double C7571 = C2691 * C492;
    const double C7561 = C2691 * C2120;
    const double C7559 = C2691 * C2119;
    const double C7549 = C2691 * C501;
    const double C7547 = C2691 * C500;
    const double C7537 = C2691 * C495;
    const double C7535 = C2691 * C494;
    const double C9054 = C2691 * C6194;
    const double C9052 = C2691 * C6193;
    const double C10398 = C2691 * C7521;
    const double C10396 = C2691 * C7520;
    const double C74543 = C74286 * C2920;
    const double C74541 = C74286 * C2919;
    const double C74535 = C74286 * C1195;
    const double C74533 = C74286 * C1194;
    const double C74527 = C74286 * C328;
    const double C74525 = C74286 * C327;
    const double C74519 = C74286 * C322;
    const double C74517 = C74286 * C321;
    const double C74515 = C74286 * C2918;
    const double C74513 = C74286 * C2917;
    const double C74503 = C74286 * C1197;
    const double C74501 = C74286 * C1196;
    const double C74495 = C74286 * C326;
    const double C74493 = C74286 * C325;
    const double C74487 = C74286 * C324;
    const double C74485 = C74286 * C323;
    const double C74995 = C74286 * C320;
    const double C74993 = C74286 * C319;
    const double C75529 = C74286 * C4070;
    const double C75527 = C74286 * C4069;
    const double C75521 = C74286 * C1768;
    const double C75519 = C74286 * C1767;
    const double C75513 = C74286 * C954;
    const double C75511 = C74286 * C953;
    const double C75509 = C74286 * C952;
    const double C75507 = C74286 * C951;
    const double C75501 = C74286 * C1770;
    const double C75499 = C74286 * C1769;
    const double C75493 = C74286 * C4068;
    const double C75491 = C74286 * C4067;
    const double C75899 = C74286 * C4535;
    const double C75897 = C74286 * C4534;
    const double C76125 = C74286 * C4789;
    const double C76123 = C74286 * C4788;
    const double C76117 = C74286 * C3284;
    const double C76115 = C74286 * C3283;
    const double C76109 = C74286 * C1339;
    const double C76107 = C74286 * C1338;
    const double C76799 = C74286 * C5569;
    const double C76797 = C74286 * C5568;
    const double C78471 = C74286 * C3286;
    const double C78469 = C74286 * C3285;
    const double C78463 = C74286 * C1337;
    const double C78461 = C74286 * C1336;
    const double C78838 = C74286 * C6194;
    const double C78836 = C74286 * C6193;
    const double C78830 = C74286 * C2120;
    const double C78828 = C74286 * C2119;
    const double C78822 = C74286 * C501;
    const double C78820 = C74286 * C500;
    const double C78814 = C74286 * C495;
    const double C78812 = C74286 * C494;
    const double C78810 = C74286 * C2122;
    const double C78808 = C74286 * C2121;
    const double C78802 = C74286 * C6196;
    const double C78800 = C74286 * C6195;
    const double C78789 = C74286 * C499;
    const double C78787 = C74286 * C498;
    const double C78781 = C74286 * C497;
    const double C78779 = C74286 * C496;
    const double C79505 = C74286 * C493;
    const double C79503 = C74286 * C492;
    const double C80709 = C74286 * C6190;
    const double C80707 = C74286 * C6189;
    const double C80701 = C74286 * C9043;
    const double C80699 = C74286 * C9042;
    const double C82473 = C74286 * C7519;
    const double C82471 = C74286 * C7518;
    const double C107826 = C74286 * C7521;
    const double C107824 = C74286 * C7520;
    const double C110184 = C74286 * C10386;
    const double C110182 = C74286 * C10385;
    const double C153942 = C153880 + C153934;
    const double C11270 = C153915 - (C153475 * C153458) / C152055;
    const double C70726 = C153916 * C346;
    const double C70714 = C153916 * C341;
    const double C71690 = C153916 * C965;
    const double C98950 = C153916 * C519;
    const double C98938 = C153916 * C514;
    const double C124 = C153916 / C152061 - C153473 / C152161;
    const double C11501 = C11271 * C346;
    const double C11489 = C11271 * C341;
    const double C12465 = C11271 * C965;
    const double C15469 = C11271 * C519;
    const double C15457 = C11271 * C514;
    const double C153935 = C153883 + C153915;
    const double C2976 = C2693 * C318;
    const double C3520 = C2691 * C318;
    const double C11492 = C11281 * C318;
    const double C24263 = C23996 * C318;
    const double C35610 = C152081 * C318;
    const double C70717 = C70506 * C318;
    const double C74999 = C74288 * C318;
    const double C83873 = C152156 * C318;
    const double C2984 = C2691 * C330;
    const double C2952 = C2693 * C330;
    const double C3528 = C2689 * C330;
    const double C24239 = C23996 * C330;
    const double C28683 = C28212 * C330;
    const double C35142 = C152081 * C330;
    const double C74531 = C74288 * C330;
    const double C75003 = C74286 * C330;
    const double C83849 = C152156 * C330;
    const double C7577 = C2693 * C491;
    const double C8103 = C2691 * C491;
    const double C15460 = C11281 * C491;
    const double C40068 = C152081 * C491;
    const double C48182 = C23996 * C491;
    const double C79509 = C74288 * C491;
    const double C88543 = C152156 * C491;
    const double C98941 = C70506 * C491;
    const double C7585 = C2691 * C503;
    const double C7553 = C2693 * C503;
    const double C8111 = C2689 * C503;
    const double C31776 = C28212 * C503;
    const double C39400 = C152081 * C503;
    const double C48158 = C23996 * C503;
    const double C78826 = C74288 * C503;
    const double C79513 = C74286 * C503;
    const double C88523 = C152156 * C503;
    const double C4110 = C2691 * C956;
    const double C4094 = C2693 * C956;
    const double C19654 = C2689 * C956;
    const double C25349 = C23996 * C956;
    const double C31521 = C28212 * C956;
    const double C36128 = C152081 * C956;
    const double C75517 = C74288 * C956;
    const double C79187 = C74286 * C956;
    const double C84959 = C152156 * C956;
    const double C2974 = C2693 * C317;
    const double C3518 = C2691 * C317;
    const double C11490 = C11281 * C317;
    const double C24261 = C23996 * C317;
    const double C35608 = C152081 * C317;
    const double C70715 = C70506 * C317;
    const double C74997 = C74288 * C317;
    const double C83871 = C152156 * C317;
    const double C2982 = C2691 * C329;
    const double C2950 = C2693 * C329;
    const double C3526 = C2689 * C329;
    const double C24237 = C23996 * C329;
    const double C28681 = C28212 * C329;
    const double C35140 = C152081 * C329;
    const double C74529 = C74288 * C329;
    const double C75001 = C74286 * C329;
    const double C83847 = C152156 * C329;
    const double C7575 = C2693 * C490;
    const double C8101 = C2691 * C490;
    const double C15458 = C11281 * C490;
    const double C40066 = C152081 * C490;
    const double C48180 = C23996 * C490;
    const double C79507 = C74288 * C490;
    const double C88541 = C152156 * C490;
    const double C98939 = C70506 * C490;
    const double C7583 = C2691 * C502;
    const double C7551 = C2693 * C502;
    const double C8109 = C2689 * C502;
    const double C31774 = C28212 * C502;
    const double C39398 = C152081 * C502;
    const double C48156 = C23996 * C502;
    const double C78824 = C74288 * C502;
    const double C79511 = C74286 * C502;
    const double C88521 = C152156 * C502;
    const double C4108 = C2691 * C955;
    const double C4092 = C2693 * C955;
    const double C19652 = C2689 * C955;
    const double C25347 = C23996 * C955;
    const double C31519 = C28212 * C955;
    const double C36126 = C152081 * C955;
    const double C75515 = C74288 * C955;
    const double C79185 = C74286 * C955;
    const double C84957 = C152156 * C955;
    const double C152389 = C152349 + C152387;
    const double C2996 = C2691 * C1193;
    const double C2956 = C2693 * C1193;
    const double C24243 = C23996 * C1193;
    const double C28687 = C28212 * C1193;
    const double C35150 = C152081 * C1193;
    const double C74539 = C74288 * C1193;
    const double C75011 = C74286 * C1193;
    const double C83853 = C152156 * C1193;
    const double C4804 = C2693 * C1335;
    const double C8439 = C2691 * C1335;
    const double C26035 = C23996 * C1335;
    const double C31525 = C28212 * C1335;
    const double C39408 = C152081 * C1335;
    const double C78467 = C74288 * C1335;
    const double C79195 = C74286 * C1335;
    const double C85645 = C152156 * C1335;
    const double C4122 = C2691 * C1766;
    const double C4082 = C2693 * C1766;
    const double C25337 = C23996 * C1766;
    const double C31530 = C28212 * C1766;
    const double C36136 = C152081 * C1766;
    const double C75525 = C74288 * C1766;
    const double C84947 = C152156 * C1766;
    const double C94231 = C74286 * C1766;
    const double C7597 = C2691 * C2118;
    const double C7557 = C2693 * C2118;
    const double C48162 = C23996 * C2118;
    const double C56303 = C28212 * C2118;
    const double C58755 = C152081 * C2118;
    const double C78834 = C74288 * C2118;
    const double C92181 = C152156 * C2118;
    const double C108229 = C74286 * C2118;
    const double C152388 = C152347 + C152386;
    const double C152409 = C152393 + C152394;
    const double C2989 = C153885 * C347;
    const double C3533 = C2684 * C347;
    const double C11537 = C11271 * C347;
    const double C11497 = C153862 * C347;
    const double C24276 = C153885 * C347;
    const double C24804 = C153914 * C347;
    const double C35619 = C153472 * C347;
    const double C70762 = C153916 * C347;
    const double C70722 = C153862 * C347;
    const double C75008 = C153472 * C347;
    const double C83886 = C83598 * C347;
    const double C84414 = C153475 * C347;
    const double C7590 = C153885 * C520;
    const double C8116 = C2684 * C520;
    const double C15505 = C11271 * C520;
    const double C15465 = C153862 * C520;
    const double C48195 = C153885 * C520;
    const double C48721 = C153914 * C520;
    const double C59380 = C153472 * C520;
    const double C79518 = C153472 * C520;
    const double C88556 = C83598 * C520;
    const double C98986 = C153916 * C520;
    const double C98946 = C153862 * C520;
    const double C117115 = C153475 * C520;
    const double C4115 = C153885 * C966;
    const double C12485 = C11271 * C966;
    const double C12461 = C153862 * C966;
    const double C19659 = C2684 * C966;
    const double C25370 = C153885 * C966;
    const double C39751 = C153472 * C966;
    const double C71710 = C153916 * C966;
    const double C71686 = C153862 * C966;
    const double C79192 = C153472 * C966;
    const double C84980 = C83598 * C966;
    const double C88911 = C153475 * C966;
    const double C126349 = C153914 * C966;
    const double C2994 = C2691 * C1192;
    const double C2954 = C2693 * C1192;
    const double C24241 = C23996 * C1192;
    const double C28685 = C28212 * C1192;
    const double C35148 = C152081 * C1192;
    const double C74537 = C74288 * C1192;
    const double C75009 = C74286 * C1192;
    const double C83851 = C152156 * C1192;
    const double C4802 = C2693 * C1334;
    const double C8437 = C2691 * C1334;
    const double C26033 = C23996 * C1334;
    const double C31523 = C28212 * C1334;
    const double C39406 = C152081 * C1334;
    const double C78465 = C74288 * C1334;
    const double C79193 = C74286 * C1334;
    const double C85643 = C152156 * C1334;
    const double C4120 = C2691 * C1765;
    const double C4080 = C2693 * C1765;
    const double C25335 = C23996 * C1765;
    const double C31528 = C28212 * C1765;
    const double C36134 = C152081 * C1765;
    const double C75523 = C74288 * C1765;
    const double C84945 = C152156 * C1765;
    const double C94229 = C74286 * C1765;
    const double C7595 = C2691 * C2117;
    const double C7555 = C2693 * C2117;
    const double C48160 = C23996 * C2117;
    const double C56301 = C28212 * C2117;
    const double C58753 = C152081 * C2117;
    const double C78832 = C74288 * C2117;
    const double C92179 = C152156 * C2117;
    const double C108227 = C74286 * C2117;
    const double C2977 = C153885 * C340;
    const double C3521 = C2684 * C340;
    const double C11521 = C11271 * C340;
    const double C11493 = C153862 * C340;
    const double C24264 = C153885 * C340;
    const double C24792 = C153914 * C340;
    const double C35611 = C153472 * C340;
    const double C70746 = C153916 * C340;
    const double C70718 = C153862 * C340;
    const double C75000 = C153472 * C340;
    const double C83874 = C83598 * C340;
    const double C84402 = C153475 * C340;
    const double C7578 = C153885 * C513;
    const double C8104 = C2684 * C513;
    const double C15489 = C11271 * C513;
    const double C15461 = C153862 * C513;
    const double C40069 = C153472 * C513;
    const double C48183 = C153885 * C513;
    const double C48709 = C153914 * C513;
    const double C79510 = C153472 * C513;
    const double C88544 = C83598 * C513;
    const double C89222 = C153475 * C513;
    const double C98970 = C153916 * C513;
    const double C98942 = C153862 * C513;
    const double C152455 = C152408 + C152452;
    const double C152714 = be * C152707;
    const double C6192 =
        (2 * C152632 * C153118 + C152632 * (C153118 + C152707 * C152648)) /
        C152055;
    const double C9039 =
        (3 * (C153118 + C152707 * C152648) +
         C152632 * (2 * C152632 * C152707 +
                    C152632 * (C152707 + C152559 * C152532 * C152648))) /
        C152055;
    const double C152740 = be * C152733;
    const double C153084 = C152384 + C153083;
    const double C153150 = C152384 + C153149;
    const double C4551 = C2693 * C2922;
    const double C25794 = C23996 * C2922;
    const double C28691 = C28212 * C2922;
    const double C35158 = C152081 * C2922;
    const double C74547 = C74288 * C2922;
    const double C85404 = C152156 * C2922;
    const double C4816 = C2693 * C3288;
    const double C26047 = C23996 * C3288;
    const double C31534 = C28212 * C3288;
    const double C39416 = C152081 * C3288;
    const double C78475 = C74288 * C3288;
    const double C85657 = C152156 * C3288;
    const double C5585 = C2693 * C4072;
    const double C26804 = C23996 * C4072;
    const double C36144 = C152081 * C4072;
    const double C44739 = C28212 * C4072;
    const double C75533 = C74288 * C4072;
    const double C86414 = C152156 * C4072;
    const double C10402 = C2693 * C7523;
    const double C50979 = C23996 * C7523;
    const double C56307 = C28212 * C7523;
    const double C63814 = C152081 * C7523;
    const double C107830 = C74288 * C7523;
    const double C119320 = C152156 * C7523;
    const double C28341 =
        (5 * (3 * C153090 + C152559 * C153178) +
         C152559 * (4 * C153178 +
                    C152559 * (3 * C152616 +
                               C152559 * (2 * C152709 +
                                          C152559 * (C152436 +
                                                     C152517 * C152575))))) /
        C152055;
    const double C28551 =
        (3 * C153090 + C152559 * C153178 +
         (3 * C152616 +
          C152559 * (2 * C152709 + C152559 * (C152436 + C152517 * C152575))) *
             C152648) /
        C152055;
    const double C28997 =
        (C152632 *
         (4 * C153178 +
          C152559 * (3 * C152616 +
                     C152559 * (2 * C152709 +
                                C152559 * (C152436 + C152517 * C152575))))) /
        C152055;
    const double C32075 =
        (2 * C152632 * C153178 +
         C152632 * (C153178 +
                    (2 * C152709 + C152559 * (C152436 + C152517 * C152575)) *
                        C152648)) /
        C152055;
    const double C56032 =
        (5 * (3 * C153156 + C152632 * C153238) +
         C152632 * (4 * C153238 +
                    C152632 * (3 * C152689 +
                               C152632 * (2 * C152735 +
                                          C152632 * (C152436 +
                                                     C152517 * C152648))))) /
        C152055;
    const double C29270 =
        (6 * (4 * C153170 + C152559 * C153194) +
         C152559 *
             (5 * C153194 +
              C152559 *
                  (4 * C152795 +
                   C152559 * (3 * C152618 +
                              C152559 * (2 * C152711 +
                                         C152559 * (C152425 +
                                                    C152506 * C152575)))))) /
        C152055;
    const double C29404 =
        (4 * C153170 + C152559 * C153194 +
         (4 * C152795 +
          C152559 * (3 * C152618 +
                     C152559 * (2 * C152711 +
                                C152559 * (C152425 + C152506 * C152575)))) *
             C152648) /
        C152055;
    const double C29846 =
        (C152632 *
         (5 * C153194 +
          C152559 * (4 * C152795 +
                     C152559 * (3 * C152618 +
                                C152559 * (2 * C152711 +
                                           C152559 * (C152425 +
                                                      C152506 * C152575)))))) /
        C152055;
    const double C30185 =
        (2 * C152632 * C153194 +
         C152632 *
             (C153194 + (3 * C152618 +
                         C152559 * (2 * C152711 +
                                    C152559 * (C152425 + C152506 * C152575))) *
                            C152648)) /
        C152055;
    const double C57558 =
        (6 * (4 * C153230 + C152632 * C153260) +
         C152632 *
             (5 * C153260 +
              C152632 *
                  (4 * C152849 +
                   C152632 * (3 * C152691 +
                              C152632 * (2 * C152737 +
                                         C152632 * (C152425 +
                                                    C152506 * C152648)))))) /
        C152055;
    const double C152454 = C152404 + C152451;
    const double C152489 = C152469 + C152470;
    const double C152713 = ae * C152706;
    const double C6191 =
        (2 * C152632 * C153116 + C152632 * (C153116 + C152706 * C152648)) /
        C152055;
    const double C9038 =
        (3 * (C153116 + C152706 * C152648) +
         C152632 * (2 * C152632 * C152706 +
                    C152632 * (C152706 + C152559 * C152529 * C152648))) /
        C152055;
    const double C152739 = ae * C152732;
    const double C153081 = C152383 + C153080;
    const double C153147 = C152383 + C153146;
    const double C4549 = C2693 * C2921;
    const double C25792 = C23996 * C2921;
    const double C28689 = C28212 * C2921;
    const double C35156 = C152081 * C2921;
    const double C74545 = C74288 * C2921;
    const double C85402 = C152156 * C2921;
    const double C4814 = C2693 * C3287;
    const double C26045 = C23996 * C3287;
    const double C31532 = C28212 * C3287;
    const double C39414 = C152081 * C3287;
    const double C78473 = C74288 * C3287;
    const double C85655 = C152156 * C3287;
    const double C5583 = C2693 * C4071;
    const double C26802 = C23996 * C4071;
    const double C36142 = C152081 * C4071;
    const double C44737 = C28212 * C4071;
    const double C75531 = C74288 * C4071;
    const double C86412 = C152156 * C4071;
    const double C10400 = C2693 * C7522;
    const double C50977 = C23996 * C7522;
    const double C56305 = C28212 * C7522;
    const double C63812 = C152081 * C7522;
    const double C107828 = C74288 * C7522;
    const double C119318 = C152156 * C7522;
    const double C152627 = C152625 + C152621;
    const double C28340 =
        (5 * (3 * C153087 + C152559 * C153174) +
         C152559 * (4 * C153174 +
                    C152559 * (3 * C152615 +
                               C152559 * (2 * C152708 +
                                          C152559 * (C152434 +
                                                     C152515 * C152575))))) /
        C152055;
    const double C28550 =
        (3 * C153087 + C152559 * C153174 +
         (3 * C152615 +
          C152559 * (2 * C152708 + C152559 * (C152434 + C152515 * C152575))) *
             C152648) /
        C152055;
    const double C28996 =
        (C152632 *
         (4 * C153174 +
          C152559 * (3 * C152615 +
                     C152559 * (2 * C152708 +
                                C152559 * (C152434 + C152515 * C152575))))) /
        C152055;
    const double C32074 =
        (2 * C152632 * C153174 +
         C152632 * (C153174 +
                    (2 * C152708 + C152559 * (C152434 + C152515 * C152575)) *
                        C152648)) /
        C152055;
    const double C152700 = C152698 + C152694;
    const double C56031 =
        (5 * (3 * C153153 + C152632 * C153234) +
         C152632 * (4 * C153234 +
                    C152632 * (3 * C152688 +
                               C152632 * (2 * C152734 +
                                          C152632 * (C152434 +
                                                     C152515 * C152648))))) /
        C152055;
    const double C152783 = C152781 + C152777;
    const double C29269 =
        (6 * (4 * C153166 + C152559 * C153190) +
         C152559 *
             (5 * C153190 +
              C152559 *
                  (4 * C152794 +
                   C152559 * (3 * C152617 +
                              C152559 * (2 * C152710 +
                                         C152559 * (C152422 +
                                                    C152503 * C152575)))))) /
        C152055;
    const double C29403 =
        (4 * C153166 + C152559 * C153190 +
         (4 * C152794 +
          C152559 * (3 * C152617 +
                     C152559 * (2 * C152710 +
                                C152559 * (C152422 + C152503 * C152575)))) *
             C152648) /
        C152055;
    const double C29845 =
        (C152632 *
         (5 * C153190 +
          C152559 * (4 * C152794 +
                     C152559 * (3 * C152617 +
                                C152559 * (2 * C152710 +
                                           C152559 * (C152422 +
                                                      C152503 * C152575)))))) /
        C152055;
    const double C30184 =
        (2 * C152632 * C153190 +
         C152632 *
             (C153190 + (3 * C152617 +
                         C152559 * (2 * C152710 +
                                    C152559 * (C152422 + C152503 * C152575))) *
                            C152648)) /
        C152055;
    const double C57557 =
        (6 * (4 * C153226 + C152632 * C153256) +
         C152632 *
             (5 * C153256 +
              C152632 *
                  (4 * C152848 +
                   C152632 * (3 * C152690 +
                              C152632 * (2 * C152736 +
                                         C152632 * (C152422 +
                                                    C152503 * C152648)))))) /
        C152055;
    const double C152453 = C152272 * C152450;
    const double C152466 = 3 * C152450;
    const double C1200 =
        (2 * C152569 + C152559 * C152579 +
         ae *
             (2 * C152559 * C152329 + C152559 * (C152329 + C152373 * C152575)) +
         be *
             (2 * C152559 * C152330 + C152559 * (C152330 + C152375 * C152575)) +
         C152272 *
             (ae * (2 * C152560 + C152559 * C152584) +
              be * (2 * C152561 + C152559 * C152585) + C152272 * C152805)) /
        C152060;
    const double C2926 = (ae * (3 * (C152297 + C152320 * C152575) +
                                C152559 * (2 * C152560 + C152559 * C152584)) +
                          be * (3 * (C152298 + C152323 * C152575) +
                                C152559 * (2 * C152561 + C152559 * C152585)) +
                          C152272 * (3 * C152579 + C152559 * C152805)) /
                         C152060;
    const double C4076 = (ae * C152632 * (2 * C152560 + C152559 * C152584) +
                          be * C152632 * (2 * C152561 + C152559 * C152585) +
                          C152272 * C152632 * C152805) /
                         C152060;
    const double C4538 = (4 * (2 * C152569 + C152559 * C152579) +
                          C152559 * (3 * C152579 + C152559 * C152805)) /
                         C152060;
    const double C4792 =
        (2 * C152569 + C152559 * C152579 + C152805 * C152648) / C152060;
    const double C5572 =
        (C152632 * (3 * C152579 + C152559 * C152805)) / C152060;
    const double C4123 = C2684 * C1773;
    const double C4083 = C153885 * C1773;
    const double C13745 = C11271 * C1773;
    const double C25378 = C153914 * C1773;
    const double C25338 = C153885 * C1773;
    const double C31531 = C153462 * C1773;
    const double C36137 = C153472 * C1773;
    const double C39755 = C153829 * C1773;
    const double C72970 = C153916 * C1773;
    const double C75526 = C153472 * C1773;
    const double C84988 = C153475 * C1773;
    const double C84948 = C83598 * C1773;
    const double C94232 = C74280 * C1773;
    const double C152608 = C152605 + C152607;
    const double C4805 = C153885 * C1342;
    const double C8440 = C2684 * C1342;
    const double C13071 = C11271 * C1342;
    const double C26036 = C153885 * C1342;
    const double C31526 = C153462 * C1342;
    const double C39409 = C153472 * C1342;
    const double C49041 = C153914 * C1342;
    const double C59072 = C153829 * C1342;
    const double C72296 = C153916 * C1342;
    const double C78468 = C153472 * C1342;
    const double C79196 = C74280 * C1342;
    const double C85646 = C83598 * C1342;
    const double C88564 = C153475 * C1342;
    const double C9055 = C2684 * C6201;
    const double C31265 = C153462 * C6201;
    const double C41254 = C153472 * C6201;
    const double C49644 = C153914 * C6201;
    const double C58760 = C153829 * C6201;
    const double C78839 = C74280 * C6201;
    const double C78799 = C153472 * C6201;
    const double C90413 = C153475 * C6201;
    const double C32686 = C153462 * C9046;
    const double C60553 = C153829 * C9046;
    const double C80702 = C74280 * C9046;
    const double C2125 =
        (2 * C152642 + C152632 * C152652 +
         ae *
             (2 * C152632 * C152329 + C152632 * (C152329 + C152373 * C152648)) +
         be *
             (2 * C152632 * C152330 + C152632 * (C152330 + C152375 * C152648)) +
         C152272 *
             (ae * (2 * C152633 + C152632 * C152657) +
              be * (2 * C152634 + C152632 * C152658) + C152272 * C152859)) /
        C152060;
    const double C7527 = (ae * (3 * (C152297 + C152320 * C152648) +
                                C152632 * (2 * C152633 + C152632 * C152657)) +
                          be * (3 * (C152298 + C152323 * C152648) +
                                C152632 * (2 * C152634 + C152632 * C152658)) +
                          C152272 * (3 * C152652 + C152632 * C152859)) /
                         C152060;
    const double C10389 = (4 * (2 * C152642 + C152632 * C152652) +
                           C152632 * (3 * C152652 + C152632 * C152859)) /
                          C152060;
    const double C152681 = C152678 + C152680;
    const double C152540 = C152487 + C152537;
    const double C152533 = C152526 * ae;
    const double C152531 = C152272 * C152526;
    const double C152530 = C152526 * be;
    const double C1183 =
        2 * C152559 * C152445 + C152559 * (C152445 + C152526 * C152575);
    const double C1325 = C152559 * C152445 + C152559 * C152526 * C152648;
    const double C1756 = C152632 * (C152445 + C152526 * C152575);
    const double C2108 =
        2 * C152632 * C152445 + C152632 * (C152445 + C152526 * C152648);
    const double C152539 = C152481 + C152535;
    const double C152538 = C152272 * C152534;
    const double C152629 = C152272 * C152628;
    const double C152799 = C152272 * C152796;
    const double C152868 = C152559 * C152796;
    const double C152880 = C152632 * C152796;
    const double C2927 =
        (3 * C152579 + C152559 * C152805 +
         ae * (3 * (C152329 + C152373 * C152575) +
               C152559 * (2 * C152593 + C152559 * C152615)) +
         be * (3 * (C152330 + C152375 * C152575) +
               C152559 * (2 * C152594 + C152559 * C152616)) +
         C152272 * (ae * (3 * C152584 + C152559 * C152794) +
                    be * (3 * C152585 + C152559 * C152795) +
                    C152272 * (3 * C152586 + C152559 * C152796))) /
        C152060;
    const double C4077 =
        (C152632 * C152805 + ae * C152632 * (2 * C152593 + C152559 * C152615) +
         be * C152632 * (2 * C152594 + C152559 * C152616) +
         C152272 * (ae * C152632 * C152794 + be * C152632 * C152795 +
                    C152272 * C152632 * C152796)) /
        C152060;
    const double C4790 =
        (C152805 + C152796 * C152648 +
         ae * (2 * C152593 + C152559 * C152615 +
               (2 * C152708 + C152559 * (C152434 + C152515 * C152575)) *
                   C152648) +
         be * (2 * C152594 + C152559 * C152616 +
               (2 * C152709 + C152559 * (C152436 + C152517 * C152575)) *
                   C152648) +
         C152272 *
             (ae * (C152794 +
                    (2 * C152710 + C152559 * (C152422 + C152503 * C152575)) *
                        C152648) +
              be * (C152795 +
                    (2 * C152711 + C152559 * (C152425 + C152506 * C152575)) *
                        C152648) +
              C152272 * (C152796 +
                         (2 * C152712 +
                          C152559 * (C152514 +
                                     (C152477 * C152478 +
                                      C152276 * bs[9] * std::pow(C152278, 9)) *
                                         C152058 * C152575)) *
                             C152648))) /
        C152060;
    const double C4791 =
        (ae * (2 * C152560 + C152559 * C152584 + C152794 * C152648) +
         be * (2 * C152561 + C152559 * C152585 + C152795 * C152648) +
         C152272 * (C152805 + C152796 * C152648)) /
        C152060;
    const double C28999 =
        (ae * C152632 *
             (4 * C152794 +
              C152559 * (3 * C152617 +
                         C152559 * (2 * C152710 +
                                    C152559 * (C152422 + C152503 * C152575)))) +
         be * C152632 *
             (4 * C152795 +
              C152559 * (3 * C152618 +
                         C152559 * (2 * C152711 +
                                    C152559 * (C152425 + C152506 * C152575)))) +
         C152272 * C152632 *
             (4 * C152796 +
              C152559 *
                  (3 * C152619 +
                   C152559 * (2 * C152712 +
                              C152559 * (C152514 + (C152477 * C152478 +
                                                    C152276 * bs[9] *
                                                        std::pow(C152278, 9)) *
                                                       C152058 * C152575))))) /
        C152060;
    const double C30189 =
        (2 * C152632 * C152805 + C152632 * (C152805 + C152796 * C152648)) /
        C152060;
    const double C152835 = C152834 + C152833;
    const double C3294 =
        (2 * (ae * (C152584 + C152617 * C152648) +
              be * (C152585 + C152618 * C152648) + C152272 * C152875) +
         ae * (C152383 + C152448 * C152575 +
               (C152448 + C152529 * C152575) * C152648) +
         be * (C152384 + C152449 * C152575 +
               (C152449 + C152532 * C152575) * C152648) +
         C152272 *
             (C152875 +
              ae * (C152615 + (C152434 + C152515 * C152575) * C152648) +
              be * (C152616 + (C152436 + C152517 * C152575) * C152648) +
              C152272 *
                  (ae * (C152617 + (C152422 + C152503 * C152575) * C152648) +
                   be * (C152618 + (C152425 + C152506 * C152575) * C152648) +
                   C152272 * (C152619 + (C152514 + (C152477 * C152478 +
                                                    C152276 * bs[9] *
                                                        std::pow(C152278, 9)) *
                                                       C152058 * C152575) *
                                            C152648)))) /
        C152060;
    const double C6197 =
        (2 * C152837 + C152632 * C152875 +
         ae * (2 * C152632 * C152615 +
               C152632 * (C152615 + (C152434 + C152515 * C152575) * C152648)) +
         be * (2 * C152632 * C152616 +
               C152632 * (C152616 + (C152436 + C152517 * C152575) * C152648)) +
         C152272 *
             (ae * (2 * C152828 +
                    C152632 *
                        (C152617 + (C152422 + C152503 * C152575) * C152648)) +
              be * (2 * C152829 +
                    C152632 *
                        (C152618 + (C152425 + C152506 * C152575) * C152648)) +
              C152272 *
                  (2 * C152830 +
                   C152632 * (C152619 + (C152514 + (C152477 * C152478 +
                                                    C152276 * bs[9] *
                                                        std::pow(C152278, 9)) *
                                                       C152058 * C152575) *
                                            C152648)))) /
        C152060;
    const double C6198 =
        (ae *
             (2 * C152632 * C152584 + C152632 * (C152584 + C152617 * C152648)) +
         be *
             (2 * C152632 * C152585 + C152632 * (C152585 + C152618 * C152648)) +
         C152272 * (2 * C152837 + C152632 * C152875)) /
        C152060;
    const double C31227 = (3 * (C152579 + C152586 * C152648) +
                           C152632 * (2 * C152837 + C152632 * C152875)) /
                          C152060;
    const double C31228 =
        (ae * (3 * (C152584 + C152617 * C152648) +
               C152632 * (2 * C152828 +
                          C152632 * (C152617 + (C152422 + C152503 * C152575) *
                                                   C152648))) +
         be * (3 * (C152585 + C152618 * C152648) +
               C152632 * (2 * C152829 +
                          C152632 * (C152618 + (C152425 + C152506 * C152575) *
                                                   C152648))) +
         C152272 *
             (3 * C152875 +
              C152632 *
                  (2 * C152830 +
                   C152632 * (C152619 + (C152514 + (C152477 * C152478 +
                                                    C152276 * bs[9] *
                                                        std::pow(C152278, 9)) *
                                                       C152058 * C152575) *
                                            C152648)))) /
        C152060;
    const double C34026 =
        (4 * (2 * C152837 + C152632 * C152875) +
         C152632 *
             (3 * C152875 +
              C152632 *
                  (2 * C152830 +
                   C152632 * (C152619 + (C152514 + (C152477 * C152478 +
                                                    C152276 * bs[9] *
                                                        std::pow(C152278, 9)) *
                                                       C152058 * C152575) *
                                            C152648)))) /
        C152060;
    const double C152702 = C152272 * C152701;
    const double C152853 = C152272 * C152850;
    const double C152901 = C152632 * C152850;
    const double C7528 =
        (3 * C152652 + C152632 * C152859 +
         ae * (3 * (C152329 + C152373 * C152648) +
               C152632 * (2 * C152666 + C152632 * C152688)) +
         be * (3 * (C152330 + C152375 * C152648) +
               C152632 * (2 * C152667 + C152632 * C152689)) +
         C152272 * (ae * (3 * C152657 + C152632 * C152848) +
                    be * (3 * C152658 + C152632 * C152849) +
                    C152272 * (3 * C152659 + C152632 * C152850))) /
        C152060;
    const double C152727 = C152724 + C152726;
    const double C152785 = C152272 * C152784;
    const double C152820 = C152819 + C152818;
    const double C152906 = C152904 + C152905;
    const double C9059 = C153885 * C6200;
    const double C49648 = C153885 * C6200;
    const double C58764 = C153472 * C6200;
    const double C67560 = C153462 * C6200;
    const double C78843 = C153472 * C6200;
    const double C90417 = C83598 * C6200;
    const double C152753 = C152750 + C152752;
    const double C153943 = C153902 + C153938;
    const double C34894 = C153928 - (C153687 * C153676) / C152055;
    const double C28210 = C153929 / C152061 - C153685 / C152161;
    const double C153939 = C153904 + C153928;
    const double C153944 = C153907 + C153940;
    const double C63415 = C153931 - (C153727 * C153716) / C152055;
    const double C55781 = C153932 / C152061 - C153725 / C152161;
    const double C153941 = C153909 + C153931;
    const double C152100 = C152097 - C152076;
    const double C152132 = C152128 / C152067;
    const double C152131 = C152128 / C152055;
    const double C2999 = C2694 * C1184;
    const double C2987 = C2694 * C311;
    const double C2975 = C2694 * C304;
    const double C2955 = C2694 * C1185;
    const double C2951 = C2694 * C310;
    const double C2939 = C2694 * C305;
    const double C3535 = C2694 * C312;
    const double C3523 = C2694 * C303;
    const double C4125 = C2694 * C1757;
    const double C4113 = C2694 * C948;
    const double C4093 = C2694 * C947;
    const double C4081 = C2694 * C1758;
    const double C4550 = C2694 * C2915;
    const double C4815 = C2694 * C3281;
    const double C4803 = C2694 * C1327;
    const double C5584 = C2694 * C4065;
    const double C7600 = C2694 * C2109;
    const double C7588 = C2694 * C484;
    const double C7576 = C2694 * C477;
    const double C7556 = C2694 * C2110;
    const double C7552 = C2694 * C483;
    const double C7540 = C2694 * C478;
    const double C8118 = C2694 * C485;
    const double C8106 = C2694 * C476;
    const double C8442 = C2694 * C1326;
    const double C9057 = C2694 * C6182;
    const double C10401 = C2694 * C7516;
    const double C19661 = C2694 * C949;
    const double C11539 = C11282 * C312;
    const double C11523 = C11282 * C303;
    const double C11495 = C11282 * C311;
    const double C11491 = C11282 * C304;
    const double C11991 = C11282 * C313;
    const double C12487 = C11282 * C949;
    const double C12459 = C11282 * C948;
    const double C12851 = C11282 * C1184;
    const double C13073 = C11282 * C1326;
    const double C13747 = C11282 * C1757;
    const double C15507 = C11282 * C485;
    const double C15491 = C11282 * C476;
    const double C15463 = C11282 * C484;
    const double C15459 = C11282 * C477;
    const double C15959 = C11282 * C486;
    const double C17927 = C11282 * C2109;
    const double C24286 = C23997 * C1184;
    const double C24274 = C23997 * C311;
    const double C24262 = C23997 * C304;
    const double C24242 = C23997 * C1185;
    const double C24238 = C23997 * C310;
    const double C24226 = C23997 * C305;
    const double C24806 = C23997 * C312;
    const double C24794 = C23997 * C303;
    const double C25380 = C23997 * C1757;
    const double C25368 = C23997 * C948;
    const double C25348 = C23997 * C947;
    const double C25336 = C23997 * C1758;
    const double C25793 = C23997 * C2915;
    const double C26046 = C23997 * C3281;
    const double C26034 = C23997 * C1327;
    const double C26803 = C23997 * C4065;
    const double C48205 = C23997 * C2109;
    const double C48193 = C23997 * C484;
    const double C48181 = C23997 * C477;
    const double C48161 = C23997 * C2110;
    const double C48157 = C23997 * C483;
    const double C48145 = C23997 * C478;
    const double C48723 = C23997 * C485;
    const double C48711 = C23997 * C476;
    const double C49043 = C23997 * C1326;
    const double C49646 = C23997 * C6182;
    const double C50978 = C23997 * C7516;
    const double C126351 = C23997 * C949;
    const double C28382 = C28213 * C4528;
    const double C28378 = C28213 * C2914;
    const double C28374 = C28213 * C1186;
    const double C28370 = C28213 * C309;
    const double C28366 = C28213 * C306;
    const double C28362 = C28213 * C4529;
    const double C28358 = C28213 * C2913;
    const double C28354 = C28213 * C1187;
    const double C28350 = C28213 * C308;
    const double C28346 = C28213 * C307;
    const double C28690 = C28213 * C2915;
    const double C28686 = C28213 * C1185;
    const double C28682 = C28213 * C310;
    const double C28678 = C28213 * C305;
    const double C29030 = C28213 * C5562;
    const double C29026 = C28213 * C4064;
    const double C29022 = C28213 * C1759;
    const double C29018 = C28213 * C946;
    const double C29014 = C28213 * C945;
    const double C29010 = C28213 * C1760;
    const double C29006 = C28213 * C4063;
    const double C29002 = C28213 * C5563;
    const double C29274 = C28213 * C28336;
    const double C29420 = C28213 * C28546;
    const double C29416 = C28213 * C4783;
    const double C29412 = C28213 * C3279;
    const double C29408 = C28213 * C1329;
    const double C29850 = C28213 * C28992;
    const double C30985 = C28213 * C4782;
    const double C30979 = C28213 * C3280;
    const double C30973 = C28213 * C1328;
    const double C31267 = C28213 * C6180;
    const double C31263 = C28213 * C6183;
    const double C31259 = C28213 * C2111;
    const double C31255 = C28213 * C482;
    const double C31251 = C28213 * C479;
    const double C31247 = C28213 * C2112;
    const double C31243 = C28213 * C6184;
    const double C31239 = C28213 * C6181;
    const double C31235 = C28213 * C481;
    const double C31231 = C28213 * C480;
    const double C31533 = C28213 * C3281;
    const double C31529 = C28213 * C1758;
    const double C31524 = C28213 * C1327;
    const double C31520 = C28213 * C947;
    const double C31775 = C28213 * C483;
    const double C31771 = C28213 * C478;
    const double C32694 = C28213 * C30183;
    const double C32690 = C28213 * C31221;
    const double C32684 = C28213 * C9037;
    const double C34030 = C28213 * C7514;
    const double C44738 = C28213 * C4065;
    const double C56045 = C28213 * C10379;
    const double C56041 = C28213 * C7515;
    const double C56037 = C28213 * C10380;
    const double C56306 = C28213 * C7516;
    const double C56302 = C28213 * C2110;
    const double C56482 = C28213 * C9036;
    const double C56819 = C28213 * C34021;
    const double C57562 = C28213 * C56027;
    const double C67558 = C28213 * C6182;
    const double C35157 = C34900 * C2915;
    const double C35149 = C34900 * C1185;
    const double C35141 = C34900 * C310;
    const double C35133 = C34900 * C305;
    const double C35121 = C34900 * C2914;
    const double C35117 = C34900 * C1186;
    const double C35109 = C34900 * C309;
    const double C35101 = C34900 * C306;
    const double C35625 = C34900 * C1184;
    const double C35617 = C34900 * C311;
    const double C35609 = C34900 * C304;
    const double C36143 = C34900 * C4065;
    const double C36135 = C34900 * C1758;
    const double C36127 = C34900 * C947;
    const double C36115 = C34900 * C946;
    const double C36107 = C34900 * C1759;
    const double C36099 = C34900 * C4064;
    const double C36513 = C34900 * C4528;
    const double C36739 = C34900 * C4782;
    const double C36731 = C34900 * C3280;
    const double C36723 = C34900 * C1328;
    const double C37413 = C34900 * C5562;
    const double C39415 = C34900 * C3281;
    const double C39407 = C34900 * C1327;
    const double C39399 = C34900 * C483;
    const double C39391 = C34900 * C478;
    const double C39379 = C34900 * C482;
    const double C39375 = C34900 * C479;
    const double C39757 = C34900 * C1757;
    const double C39749 = C34900 * C948;
    const double C40067 = C34900 * C477;
    const double C41261 = C34900 * C6180;
    const double C41252 = C34900 * C6183;
    const double C43025 = C34900 * C2111;
    const double C58762 = C34900 * C6182;
    const double C58754 = C34900 * C2110;
    const double C59074 = C34900 * C1326;
    const double C59378 = C34900 * C484;
    const double C60555 = C34900 * C9036;
    const double C62310 = C34900 * C7515;
    const double C63813 = C34900 * C7516;
    const double C64216 = C34900 * C2109;
    const double C66171 = C34900 * C10379;
    const double C70764 = C70507 * C312;
    const double C70748 = C70507 * C303;
    const double C70720 = C70507 * C311;
    const double C70716 = C70507 * C304;
    const double C71216 = C70507 * C313;
    const double C71712 = C70507 * C949;
    const double C71684 = C70507 * C948;
    const double C72076 = C70507 * C1184;
    const double C72298 = C70507 * C1326;
    const double C72972 = C70507 * C1757;
    const double C98988 = C70507 * C485;
    const double C98972 = C70507 * C476;
    const double C98944 = C70507 * C484;
    const double C98940 = C70507 * C477;
    const double C99440 = C70507 * C486;
    const double C101408 = C70507 * C2109;
    const double C74546 = C74289 * C2915;
    const double C74538 = C74289 * C1185;
    const double C74530 = C74289 * C310;
    const double C74522 = C74289 * C305;
    const double C74510 = C74289 * C2914;
    const double C74506 = C74289 * C1186;
    const double C74498 = C74289 * C309;
    const double C74490 = C74289 * C306;
    const double C75014 = C74289 * C1184;
    const double C75006 = C74289 * C311;
    const double C74998 = C74289 * C304;
    const double C75532 = C74289 * C4065;
    const double C75524 = C74289 * C1758;
    const double C75516 = C74289 * C947;
    const double C75504 = C74289 * C946;
    const double C75496 = C74289 * C1759;
    const double C75488 = C74289 * C4064;
    const double C75902 = C74289 * C4528;
    const double C76128 = C74289 * C4782;
    const double C76120 = C74289 * C3280;
    const double C76112 = C74289 * C1328;
    const double C76802 = C74289 * C5562;
    const double C78474 = C74289 * C3281;
    const double C78466 = C74289 * C1327;
    const double C78841 = C74289 * C6182;
    const double C78833 = C74289 * C2110;
    const double C78825 = C74289 * C483;
    const double C78817 = C74289 * C478;
    const double C78805 = C74289 * C2111;
    const double C78797 = C74289 * C6183;
    const double C78792 = C74289 * C482;
    const double C78784 = C74289 * C479;
    const double C79198 = C74289 * C1326;
    const double C79190 = C74289 * C948;
    const double C79516 = C74289 * C484;
    const double C79508 = C74289 * C477;
    const double C80712 = C74289 * C6180;
    const double C80704 = C74289 * C9036;
    const double C82476 = C74289 * C7515;
    const double C94234 = C74289 * C1757;
    const double C107829 = C74289 * C7516;
    const double C108232 = C74289 * C2109;
    const double C110187 = C74289 * C10379;
    const double C83896 = C83607 * C1184;
    const double C83884 = C83607 * C311;
    const double C83872 = C83607 * C304;
    const double C83852 = C83607 * C1185;
    const double C83848 = C83607 * C310;
    const double C83836 = C83607 * C305;
    const double C84416 = C83607 * C312;
    const double C84404 = C83607 * C303;
    const double C84990 = C83607 * C1757;
    const double C84978 = C83607 * C948;
    const double C84958 = C83607 * C947;
    const double C84946 = C83607 * C1758;
    const double C85403 = C83607 * C2915;
    const double C85656 = C83607 * C3281;
    const double C85644 = C83607 * C1327;
    const double C86413 = C83607 * C4065;
    const double C88566 = C83607 * C1326;
    const double C88554 = C83607 * C484;
    const double C88542 = C83607 * C477;
    const double C88522 = C83607 * C483;
    const double C88518 = C83607 * C478;
    const double C88913 = C83607 * C949;
    const double C89224 = C83607 * C476;
    const double C90415 = C83607 * C6182;
    const double C92180 = C83607 * C2110;
    const double C116657 = C83607 * C2109;
    const double C117117 = C83607 * C485;
    const double C119319 = C83607 * C7516;
    const double C70754 = C153942 * C345;
    const double C70738 = C153942 * C342;
    const double C70734 = C153942 * C344;
    const double C70706 = C153942 * C343;
    const double C71206 = C153942 * C341;
    const double C71702 = C153942 * C964;
    const double C71698 = C153942 * C963;
    const double C72066 = C153942 * C1202;
    const double C72288 = C153942 * C1344;
    const double C72962 = C153942 * C1775;
    const double C98978 = C153942 * C518;
    const double C98962 = C153942 * C515;
    const double C98958 = C153942 * C517;
    const double C98930 = C153942 * C516;
    const double C99430 = C153942 * C514;
    const double C101398 = C153942 * C2127;
    const double C121 =
        (C153933 + 2 * C153467) / C152061 - (C153942 * C153458) / C152055;
    const double C11533 = C11270 * C346;
    const double C11517 = C11270 * C341;
    const double C11505 = C11270 * C345;
    const double C11485 = C11270 * C342;
    const double C11985 = C11270 * C340;
    const double C12481 = C11270 * C965;
    const double C12469 = C11270 * C964;
    const double C12845 = C11270 * C1201;
    const double C13067 = C11270 * C1343;
    const double C13741 = C11270 * C1774;
    const double C15501 = C11270 * C519;
    const double C15485 = C11270 * C514;
    const double C15473 = C11270 * C518;
    const double C15453 = C11270 * C515;
    const double C15953 = C11270 * C513;
    const double C17921 = C11270 * C2126;
    const double C70758 = C153935 * C346;
    const double C70742 = C153935 * C341;
    const double C70730 = C153935 * C345;
    const double C70710 = C153935 * C342;
    const double C71210 = C153935 * C340;
    const double C71706 = C153935 * C965;
    const double C71694 = C153935 * C964;
    const double C72070 = C153935 * C1201;
    const double C72292 = C153935 * C1343;
    const double C72966 = C153935 * C1774;
    const double C98982 = C153935 * C519;
    const double C98966 = C153935 * C514;
    const double C98954 = C153935 * C518;
    const double C98934 = C153935 * C515;
    const double C99434 = C153935 * C513;
    const double C101402 = C153935 * C2126;
    const double C122 = (C153914 + 2 * C153475 + C153942) / C152061 -
                        (C153935 * C153458) / C152055;
    const double C123 = (C153885 + C153472 / C152055 + C153935) / C152061 -
                        (C153916 * C153458) / C152055;
    const double C152391 = C152389 + C152371;
    const double C152390 = C152388 + C152368;
    const double C152419 = C152409 + C152395;
    const double C152458 = C152455 + C152432;
    const double C9058 = C2693 * C6192;
    const double C49647 = C23996 * C6192;
    const double C58763 = C152081 * C6192;
    const double C67559 = C28212 * C6192;
    const double C78842 = C74288 * C6192;
    const double C90416 = C152156 * C6192;
    const double C4531 =
        (4 * (2 * C152559 * C152384 + C152559 * C153084) +
         C152559 * (3 * C153084 +
                    C152559 * (2 * C152707 +
                               C152559 * (C152449 + C152532 * C152575)))) /
        C152055;
    const double C4785 =
        (2 * C152559 * C152384 + C152559 * C153084 +
         (2 * C152707 + C152559 * (C152449 + C152532 * C152575)) * C152648) /
        C152055;
    const double C5565 =
        (C152632 *
         (3 * C153084 +
          C152559 * (2 * C152707 + C152559 * (C152449 + C152532 * C152575)))) /
        C152055;
    const double C6186 =
        (2 * C152632 * C153084 +
         C152632 * (C153084 + (C152449 + C152532 * C152575) * C152648)) /
        C152055;
    const double C10382 =
        (4 * (2 * C152632 * C152384 + C152632 * C153150) +
         C152632 * (3 * C153150 +
                    C152632 * (2 * C152733 +
                               C152632 * (C152449 + C152532 * C152648)))) /
        C152055;
    const double C152457 = C152454 + C152429;
    const double C152500 = C152489 + C152471;
    const double C152720 = C152705 + C152713;
    const double C9056 = C2693 * C6191;
    const double C49645 = C23996 * C6191;
    const double C58761 = C152081 * C6191;
    const double C67557 = C28212 * C6191;
    const double C78840 = C74288 * C6191;
    const double C90414 = C152156 * C6191;
    const double C152746 = C152731 + C152739;
    const double C4530 =
        (4 * (2 * C152559 * C152383 + C152559 * C153081) +
         C152559 * (3 * C153081 +
                    C152559 * (2 * C152706 +
                               C152559 * (C152448 + C152529 * C152575)))) /
        C152055;
    const double C4784 =
        (2 * C152559 * C152383 + C152559 * C153081 +
         (2 * C152706 + C152559 * (C152448 + C152529 * C152575)) * C152648) /
        C152055;
    const double C5564 =
        (C152632 *
         (3 * C153081 +
          C152559 * (2 * C152706 + C152559 * (C152448 + C152529 * C152575)))) /
        C152055;
    const double C6185 =
        (2 * C152632 * C153081 +
         C152632 * (C153081 + (C152448 + C152529 * C152575) * C152648)) /
        C152055;
    const double C10381 =
        (4 * (2 * C152632 * C152383 + C152632 * C153147) +
         C152632 * (3 * C153147 +
                    C152632 * (2 * C152732 +
                               C152632 * (C152448 + C152529 * C152648)))) /
        C152055;
    const double C2997 = C2684 * C1200;
    const double C2957 = C153885 * C1200;
    const double C12849 = C11271 * C1200;
    const double C24284 = C153914 * C1200;
    const double C24244 = C153885 * C1200;
    const double C28688 = C153462 * C1200;
    const double C35151 = C153472 * C1200;
    const double C35623 = C153829 * C1200;
    const double C72074 = C153916 * C1200;
    const double C74540 = C153472 * C1200;
    const double C75012 = C74280 * C1200;
    const double C83894 = C153475 * C1200;
    const double C83854 = C83598 * C1200;
    const double C4548 = C2684 * C2926;
    const double C25791 = C153914 * C2926;
    const double C28380 = C153462 * C2926;
    const double C35155 = C153829 * C2926;
    const double C35123 = C153472 * C2926;
    const double C74544 = C74280 * C2926;
    const double C74512 = C153472 * C2926;
    const double C85401 = C153475 * C2926;
    const double C5582 = C2684 * C4076;
    const double C26801 = C153914 * C4076;
    const double C29028 = C153462 * C4076;
    const double C36141 = C153829 * C4076;
    const double C36101 = C153472 * C4076;
    const double C75530 = C74280 * C4076;
    const double C75490 = C153472 * C4076;
    const double C86411 = C153475 * C4076;
    const double C28364 = C153462 * C4538;
    const double C36511 = C153829 * C4538;
    const double C75900 = C74280 * C4538;
    const double C29418 = C153462 * C4792;
    const double C36737 = C153829 * C4792;
    const double C76126 = C74280 * C4792;
    const double C29004 = C153462 * C5572;
    const double C37411 = C153829 * C5572;
    const double C76800 = C74280 * C5572;
    const double C7598 = C2684 * C2125;
    const double C7558 = C153885 * C2125;
    const double C17925 = C11271 * C2125;
    const double C48203 = C153914 * C2125;
    const double C48163 = C153885 * C2125;
    const double C56304 = C153462 * C2125;
    const double C58756 = C153472 * C2125;
    const double C64214 = C153829 * C2125;
    const double C78835 = C153472 * C2125;
    const double C92182 = C83598 * C2125;
    const double C101406 = C153916 * C2125;
    const double C108230 = C74280 * C2125;
    const double C116655 = C153475 * C2125;
    const double C10399 = C2684 * C7527;
    const double C50976 = C153914 * C7527;
    const double C56043 = C153462 * C7527;
    const double C62312 = C153472 * C7527;
    const double C63811 = C153829 * C7527;
    const double C82478 = C153472 * C7527;
    const double C107827 = C74280 * C7527;
    const double C119317 = C153475 * C7527;
    const double C56039 = C153462 * C10389;
    const double C66169 = C153829 * C10389;
    const double C110185 = C74280 * C10389;
    const double C152543 = C152540 + C152513;
    const double C152536 = C152484 + C152531;
    const double C152542 = C152539 + C152510;
    const double C152630 = C152627 + C152629;
    const double C152801 = C152800 + C152799;
    const double C152869 = C152867 + C152868;
    const double C4078 =
        (2 * (ae * C152632 * C152794 + be * C152632 * C152795 +
              C152272 * C152880) +
         ae * C152632 *
             (2 * C152706 + C152559 * (C152448 + C152529 * C152575)) +
         be * C152632 *
             (2 * C152707 + C152559 * (C152449 + C152532 * C152575)) +
         C152272 *
             (C152880 +
              ae * C152632 *
                  (2 * C152708 + C152559 * (C152434 + C152515 * C152575)) +
              be * C152632 *
                  (2 * C152709 + C152559 * (C152436 + C152517 * C152575)) +
              C152272 *
                  (ae * C152632 *
                       (2 * C152710 + C152559 * (C152422 + C152503 * C152575)) +
                   be * C152632 *
                       (2 * C152711 + C152559 * (C152425 + C152506 * C152575)) +
                   C152272 * C152632 *
                       (2 * C152712 +
                        C152559 * (C152514 +
                                   (C152477 * C152478 +
                                    C152276 * bs[9] * std::pow(C152278, 9)) *
                                       C152058 * C152575))))) /
        C152060;
    const double C32076 =
        (ae * (2 * C152632 * C152794 +
               C152632 * (C152794 + (2 * C152710 +
                                     C152559 * (C152422 + C152503 * C152575)) *
                                        C152648)) +
         be * (2 * C152632 * C152795 +
               C152632 * (C152795 + (2 * C152711 +
                                     C152559 * (C152425 + C152506 * C152575)) *
                                        C152648)) +
         C152272 *
             (2 * C152880 +
              C152632 * (C152796 +
                         (2 * C152712 +
                          C152559 * (C152514 +
                                     (C152477 * C152478 +
                                      C152276 * bs[9] * std::pow(C152278, 9)) *
                                         C152058 * C152575)) *
                             C152648))) /
        C152060;
    const double C32679 =
        (3 * (C152805 + C152796 * C152648) +
         C152632 *
             (2 * C152880 +
              C152632 * (C152796 +
                         (2 * C152712 +
                          C152559 * (C152514 +
                                     (C152477 * C152478 +
                                      C152276 * bs[9] * std::pow(C152278, 9)) *
                                         C152058 * C152575)) *
                             C152648))) /
        C152060;
    const double C4552 = C153885 * C2927;
    const double C25795 = C153885 * C2927;
    const double C28692 = C153462 * C2927;
    const double C35159 = C153472 * C2927;
    const double C74548 = C153472 * C2927;
    const double C85405 = C83598 * C2927;
    const double C5586 = C153885 * C4077;
    const double C26805 = C153885 * C4077;
    const double C36145 = C153472 * C4077;
    const double C44740 = C153462 * C4077;
    const double C75534 = C153472 * C4077;
    const double C86415 = C83598 * C4077;
    const double C30987 = C153462 * C4791;
    const double C36741 = C153472 * C4791;
    const double C76130 = C153472 * C4791;
    const double C32696 = C153462 * C30189;
    const double C1772 =
        (2 * (ae * C152632 * C152584 + be * C152632 * C152585 +
              C152272 * C152837) +
         ae * C152632 * (C152383 + C152448 * C152575) +
         be * C152632 * (C152384 + C152449 * C152575) +
         C152272 * (C152837 + ae * C152632 * C152615 + be * C152632 * C152616 +
                    C152272 * C152835)) /
        C152060;
    const double C31269 = C153462 * C6198;
    const double C41263 = C153472 * C6198;
    const double C80714 = C153472 * C6198;
    const double C32692 = C153462 * C31227;
    const double C152703 = C152700 + C152702;
    const double C152855 = C152854 + C152853;
    const double C152902 = C152900 + C152901;
    const double C10403 = C153885 * C7528;
    const double C50980 = C153885 * C7528;
    const double C56308 = C153462 * C7528;
    const double C63815 = C153472 * C7528;
    const double C107831 = C153472 * C7528;
    const double C119321 = C83598 * C7528;
    const double C152728 = C152272 * C152727;
    const double C152786 = C152783 + C152785;
    const double C1341 =
        (2 * (ae * (C152560 + C152595 * C152648) +
              be * (C152561 + C152596 * C152648) + C152272 * C152823) +
         ae * (C152559 * C152383 + C152706 * C152648) +
         be * (C152559 * C152384 + C152707 * C152648) +
         C152272 * (C152823 + ae * (C152593 + C152708 * C152648) +
                    be * (C152594 + C152709 * C152648) + C152272 * C152820)) /
        C152060;
    const double C8431 =
        (2 * (ae * (2 * C152762 + C152632 * C152813) +
              be * (2 * C152763 + C152632 * C152814) + C152272 * C152906) +
         ae * (2 * C152632 * C152706 +
               C152632 * (C152706 + C152559 * C152529 * C152648)) +
         be * (2 * C152632 * C152707 +
               C152632 * (C152707 + C152559 * C152532 * C152648)) +
         C152272 *
             (C152906 +
              ae * (2 * C152771 +
                    C152632 * (C152708 + C152559 * C152515 * C152648)) +
              be * (2 * C152772 +
                    C152632 * (C152709 + C152559 * C152517 * C152648)) +
              C152272 *
                  (ae * (2 * C152773 +
                         C152632 * (C152710 + C152559 * C152503 * C152648)) +
                   be * (2 * C152774 +
                         C152632 * (C152711 + C152559 * C152506 * C152648)) +
                   C152272 *
                       (2 * C152775 +
                        C152632 * (C152712 + C152559 *
                                                 (C152477 * C152478 +
                                                  C152276 * bs[9] *
                                                      std::pow(C152278, 9)) *
                                                 C152058 * C152648))))) /
        C152060;
    const double C9044 =
        (3 * C152823 + C152632 * C152906 +
         ae * (3 * (C152593 + C152708 * C152648) +
               C152632 * (2 * C152771 +
                          C152632 * (C152708 + C152559 * C152515 * C152648))) +
         be * (3 * (C152594 + C152709 * C152648) +
               C152632 * (2 * C152772 +
                          C152632 * (C152709 + C152559 * C152517 * C152648))) +
         C152272 *
             (ae * (3 * C152813 +
                    C152632 *
                        (2 * C152773 +
                         C152632 * (C152710 + C152559 * C152503 * C152648))) +
              be * (3 * C152814 +
                    C152632 *
                        (2 * C152774 +
                         C152632 * (C152711 + C152559 * C152506 * C152648))) +
              C152272 * (3 * C152815 +
                         C152632 * (2 * C152775 +
                                    C152632 * (C152712 +
                                               C152559 *
                                                   (C152477 * C152478 +
                                                    C152276 * bs[9] *
                                                        std::pow(C152278, 9)) *
                                                   C152058 * C152648))))) /
        C152060;
    const double C9045 = (ae * (3 * (C152560 + C152595 * C152648) +
                                C152632 * (2 * C152762 + C152632 * C152813)) +
                          be * (3 * (C152561 + C152596 * C152648) +
                                C152632 * (2 * C152763 + C152632 * C152814)) +
                          C152272 * (3 * C152823 + C152632 * C152906)) /
                         C152060;
    const double C34027 = (4 * (2 * C152760 + C152632 * C152823) +
                           C152632 * (3 * C152823 + C152632 * C152906)) /
                          C152060;
    const double C56479 =
        (ae * (4 * (2 * C152762 + C152632 * C152813) +
               C152632 * (3 * C152813 +
                          C152632 * (2 * C152773 +
                                     C152632 * (C152710 + C152559 * C152503 *
                                                              C152648)))) +
         be * (4 * (2 * C152763 + C152632 * C152814) +
               C152632 * (3 * C152814 +
                          C152632 * (2 * C152774 +
                                     C152632 * (C152711 + C152559 * C152506 *
                                                              C152648)))) +
         C152272 *
             (4 * C152906 +
              C152632 * (3 * C152815 +
                         C152632 * (2 * C152775 +
                                    C152632 * (C152712 +
                                               C152559 *
                                                   (C152477 * C152478 +
                                                    C152276 * bs[9] *
                                                        std::pow(C152278, 9)) *
                                                   C152058 * C152648))))) /
        C152060;
    const double C56816 =
        (5 * (3 * C152823 + C152632 * C152906) +
         C152632 *
             (4 * C152906 +
              C152632 * (3 * C152815 +
                         C152632 * (2 * C152775 +
                                    C152632 * (C152712 +
                                               C152559 *
                                                   (C152477 * C152478 +
                                                    C152276 * bs[9] *
                                                        std::pow(C152278, 9)) *
                                                   C152058 * C152648))))) /
        C152060;
    const double C152754 = C152272 * C152753;
    const double C28207 =
        (C153936 + 2 * C153680) / C152061 - (C153943 * C153676) / C152055;
    const double C28208 = (C153924 + 2 * C153687 + C153943) / C152061 -
                          (C153939 * C153676) / C152055;
    const double C28209 = (C153898 + C153684 / C152055 + C153939) / C152061 -
                          (C153929 * C153676) / C152055;
    const double C55778 =
        (C153937 + 2 * C153720) / C152061 - (C153944 * C153716) / C152055;
    const double C55779 = (C153926 + 2 * C153727 + C153944) / C152061 -
                          (C153941 * C153716) / C152055;
    const double C55780 = (C153901 + C153724 / C152055 + C153941) / C152061 -
                          (C153932 * C153716) / C152055;
    const double C35154 = C152100 * C2920;
    const double C35152 = C152100 * C2919;
    const double C35146 = C152100 * C1195;
    const double C35144 = C152100 * C1194;
    const double C35138 = C152100 * C328;
    const double C35136 = C152100 * C327;
    const double C35130 = C152100 * C322;
    const double C35128 = C152100 * C321;
    const double C35126 = C152100 * C2918;
    const double C35124 = C152100 * C2917;
    const double C35114 = C152100 * C1197;
    const double C35112 = C152100 * C1196;
    const double C35106 = C152100 * C326;
    const double C35104 = C152100 * C325;
    const double C35098 = C152100 * C324;
    const double C35096 = C152100 * C323;
    const double C35622 = C152100 * C1193;
    const double C35620 = C152100 * C1192;
    const double C35614 = C152100 * C330;
    const double C35612 = C152100 * C329;
    const double C35606 = C152100 * C320;
    const double C35604 = C152100 * C319;
    const double C36140 = C152100 * C4070;
    const double C36138 = C152100 * C4069;
    const double C36132 = C152100 * C1768;
    const double C36130 = C152100 * C1767;
    const double C36124 = C152100 * C954;
    const double C36122 = C152100 * C953;
    const double C36120 = C152100 * C952;
    const double C36118 = C152100 * C951;
    const double C36112 = C152100 * C1770;
    const double C36110 = C152100 * C1769;
    const double C36104 = C152100 * C4068;
    const double C36102 = C152100 * C4067;
    const double C36510 = C152100 * C4535;
    const double C36508 = C152100 * C4534;
    const double C36736 = C152100 * C4789;
    const double C36734 = C152100 * C4788;
    const double C36728 = C152100 * C3284;
    const double C36726 = C152100 * C3283;
    const double C36720 = C152100 * C1339;
    const double C36718 = C152100 * C1338;
    const double C37410 = C152100 * C5569;
    const double C37408 = C152100 * C5568;
    const double C39412 = C152100 * C3286;
    const double C39410 = C152100 * C3285;
    const double C39404 = C152100 * C1337;
    const double C39402 = C152100 * C1336;
    const double C39396 = C152100 * C501;
    const double C39394 = C152100 * C500;
    const double C39388 = C152100 * C495;
    const double C39386 = C152100 * C494;
    const double C39384 = C152100 * C499;
    const double C39382 = C152100 * C498;
    const double C39372 = C152100 * C497;
    const double C39370 = C152100 * C496;
    const double C39754 = C152100 * C1766;
    const double C39752 = C152100 * C1765;
    const double C39746 = C152100 * C956;
    const double C39744 = C152100 * C955;
    const double C40064 = C152100 * C493;
    const double C40062 = C152100 * C492;
    const double C41258 = C152100 * C6190;
    const double C41256 = C152100 * C6189;
    const double C41249 = C152100 * C6196;
    const double C41247 = C152100 * C6195;
    const double C43022 = C152100 * C2122;
    const double C43020 = C152100 * C2121;
    const double C58759 = C152100 * C6194;
    const double C58757 = C152100 * C6193;
    const double C58751 = C152100 * C2120;
    const double C58749 = C152100 * C2119;
    const double C59071 = C152100 * C1335;
    const double C59069 = C152100 * C1334;
    const double C59375 = C152100 * C503;
    const double C59373 = C152100 * C502;
    const double C60552 = C152100 * C9043;
    const double C60550 = C152100 * C9042;
    const double C62307 = C152100 * C7519;
    const double C62305 = C152100 * C7518;
    const double C63810 = C152100 * C7521;
    const double C63808 = C152100 * C7520;
    const double C64213 = C152100 * C2118;
    const double C64211 = C152100 * C2117;
    const double C66168 = C152100 * C10386;
    const double C66166 = C152100 * C10385;
    const double C152103 = C152100 / C152061;
    const double C152102 = C152053 * C152100;
    const double C152119 = 2 * C152100;
    const double C152135 = C152120 - C152132;
    const double C152134 = C152123 - C152131;
    const double C3013 = C2974 - C2975;
    const double C3008 = C2954 - C2955;
    const double C3007 = C2950 - C2951;
    const double C3004 = C2938 - C2939;
    const double C4131 = C4092 - C4093;
    const double C4128 = C4080 - C4081;
    const double C4556 = C4549 - C4550;
    const double C4823 = C4814 - C4815;
    const double C4820 = C4802 - C4803;
    const double C5590 = C5583 - C5584;
    const double C7614 = C7575 - C7576;
    const double C7609 = C7555 - C7556;
    const double C7608 = C7551 - C7552;
    const double C7605 = C7539 - C7540;
    const double C10407 = C10400 - C10401;
    const double C11545 = C11490 - C11491;
    const double C15513 = C15458 - C15459;
    const double C24300 = C24261 - C24262;
    const double C24295 = C24241 - C24242;
    const double C24294 = C24237 - C24238;
    const double C24291 = C24225 - C24226;
    const double C25386 = C25347 - C25348;
    const double C25383 = C25335 - C25336;
    const double C25799 = C25792 - C25793;
    const double C26054 = C26045 - C26046;
    const double C26051 = C26033 - C26034;
    const double C26809 = C26802 - C26803;
    const double C48219 = C48180 - C48181;
    const double C48214 = C48160 - C48161;
    const double C48213 = C48156 - C48157;
    const double C48210 = C48144 - C48145;
    const double C50984 = C50977 - C50978;
    const double C28394 = C28381 - C28382;
    const double C28393 = C28377 - C28378;
    const double C28392 = C28373 - C28374;
    const double C28391 = C28369 - C28370;
    const double C28390 = C28365 - C28366;
    const double C28389 = C28361 - C28362;
    const double C28388 = C28357 - C28358;
    const double C28387 = C28353 - C28354;
    const double C28386 = C28349 - C28350;
    const double C28385 = C28345 - C28346;
    const double C28696 = C28689 - C28690;
    const double C28695 = C28685 - C28686;
    const double C28694 = C28681 - C28682;
    const double C28693 = C28677 - C28678;
    const double C29040 = C29029 - C29030;
    const double C29039 = C29025 - C29026;
    const double C29038 = C29021 - C29022;
    const double C29037 = C29017 - C29018;
    const double C29036 = C29013 - C29014;
    const double C29035 = C29009 - C29010;
    const double C29034 = C29005 - C29006;
    const double C29033 = C29001 - C29002;
    const double C29277 = C29273 - C29274;
    const double C29426 = C29419 - C29420;
    const double C29425 = C29415 - C29416;
    const double C29424 = C29411 - C29412;
    const double C29423 = C29407 - C29408;
    const double C29853 = C29849 - C29850;
    const double C30991 = C30984 - C30985;
    const double C30990 = C30978 - C30979;
    const double C30989 = C30972 - C30973;
    const double C31279 = C31266 - C31267;
    const double C31278 = C31262 - C31263;
    const double C31277 = C31258 - C31259;
    const double C31276 = C31254 - C31255;
    const double C31275 = C31250 - C31251;
    const double C31274 = C31246 - C31247;
    const double C31273 = C31242 - C31243;
    const double C31272 = C31238 - C31239;
    const double C31271 = C31234 - C31235;
    const double C31270 = C31230 - C31231;
    const double C31539 = C31532 - C31533;
    const double C31538 = C31528 - C31529;
    const double C31537 = C31523 - C31524;
    const double C31536 = C31519 - C31520;
    const double C31779 = C31774 - C31775;
    const double C31778 = C31770 - C31771;
    const double C32699 = C32693 - C32694;
    const double C32698 = C32689 - C32690;
    const double C32697 = C32683 - C32684;
    const double C34033 = C34029 - C34030;
    const double C44741 = C44737 - C44738;
    const double C56050 = C56044 - C56045;
    const double C56049 = C56040 - C56041;
    const double C56048 = C56036 - C56037;
    const double C56310 = C56305 - C56306;
    const double C56309 = C56301 - C56302;
    const double C56485 = C56481 - C56482;
    const double C56822 = C56818 - C56819;
    const double C57565 = C57561 - C57562;
    const double C35175 = C35156 - C35157;
    const double C35173 = C35148 - C35149;
    const double C35171 = C35140 - C35141;
    const double C35169 = C35132 - C35133;
    const double C35166 = C35120 - C35121;
    const double C35165 = C35116 - C35117;
    const double C35163 = C35108 - C35109;
    const double C35161 = C35100 - C35101;
    const double C35629 = C35608 - C35609;
    const double C36157 = C36142 - C36143;
    const double C36155 = C36134 - C36135;
    const double C36153 = C36126 - C36127;
    const double C36150 = C36114 - C36115;
    const double C36148 = C36106 - C36107;
    const double C36146 = C36098 - C36099;
    const double C36519 = C36512 - C36513;
    const double C36747 = C36738 - C36739;
    const double C36745 = C36730 - C36731;
    const double C36743 = C36722 - C36723;
    const double C37419 = C37412 - C37413;
    const double C39429 = C39414 - C39415;
    const double C39427 = C39406 - C39407;
    const double C39425 = C39398 - C39399;
    const double C39423 = C39390 - C39391;
    const double C39420 = C39378 - C39379;
    const double C39419 = C39374 - C39375;
    const double C40071 = C40066 - C40067;
    const double C41267 = C41260 - C41261;
    const double C41265 = C41251 - C41252;
    const double C43029 = C43024 - C43025;
    const double C58768 = C58753 - C58754;
    const double C60559 = C60554 - C60555;
    const double C62314 = C62309 - C62310;
    const double C63818 = C63812 - C63813;
    const double C66175 = C66170 - C66171;
    const double C70770 = C70715 - C70716;
    const double C98994 = C98939 - C98940;
    const double C74564 = C74545 - C74546;
    const double C74562 = C74537 - C74538;
    const double C74560 = C74529 - C74530;
    const double C74558 = C74521 - C74522;
    const double C74555 = C74509 - C74510;
    const double C74554 = C74505 - C74506;
    const double C74552 = C74497 - C74498;
    const double C74550 = C74489 - C74490;
    const double C75018 = C74997 - C74998;
    const double C75546 = C75531 - C75532;
    const double C75544 = C75523 - C75524;
    const double C75542 = C75515 - C75516;
    const double C75539 = C75503 - C75504;
    const double C75537 = C75495 - C75496;
    const double C75535 = C75487 - C75488;
    const double C75908 = C75901 - C75902;
    const double C76136 = C76127 - C76128;
    const double C76134 = C76119 - C76120;
    const double C76132 = C76111 - C76112;
    const double C76808 = C76801 - C76802;
    const double C78480 = C78473 - C78474;
    const double C78478 = C78465 - C78466;
    const double C78858 = C78832 - C78833;
    const double C78856 = C78824 - C78825;
    const double C78854 = C78816 - C78817;
    const double C78851 = C78804 - C78805;
    const double C78849 = C78796 - C78797;
    const double C78848 = C78791 - C78792;
    const double C78846 = C78783 - C78784;
    const double C79520 = C79507 - C79508;
    const double C80719 = C80711 - C80712;
    const double C80717 = C80703 - C80704;
    const double C82480 = C82475 - C82476;
    const double C107834 = C107828 - C107829;
    const double C110191 = C110186 - C110187;
    const double C83910 = C83871 - C83872;
    const double C83905 = C83851 - C83852;
    const double C83904 = C83847 - C83848;
    const double C83901 = C83835 - C83836;
    const double C84996 = C84957 - C84958;
    const double C84993 = C84945 - C84946;
    const double C85409 = C85402 - C85403;
    const double C85664 = C85655 - C85656;
    const double C85661 = C85643 - C85644;
    const double C86419 = C86412 - C86413;
    const double C88577 = C88541 - C88542;
    const double C88572 = C88521 - C88522;
    const double C88571 = C88517 - C88518;
    const double C92185 = C92179 - C92180;
    const double C119325 = C119318 - C119319;
    const double C163 =
        (4 * (2 * C152304 + C152272 * C152338 + C152322 * ae) +
         C152272 * (3 * C152338 + C152272 * C152391 + C152374 * ae) +
         (3 * C152322 + C152272 * C152374) * ae) /
        C152055;
    const double C316 =
        (C152559 * (3 * C152338 + C152272 * C152391 + C152374 * ae)) / C152055;
    const double C332 =
        (2 * C152304 + C152272 * C152338 + C152322 * ae + C152391 * C152575) /
        C152055;
    const double C489 =
        (C152632 * (3 * C152338 + C152272 * C152391 + C152374 * ae)) / C152055;
    const double C505 =
        (2 * C152304 + C152272 * C152338 + C152322 * ae + C152391 * C152648) /
        C152055;
    const double C958 = (C152632 * C152559 * C152391) / C152055;
    const double C173 =
        (4 * (2 * C152334 + ae * C152337 + be * C152338 + C152272 * C152385) +
         ae * (3 * C152337 + C152272 * C152390 + C152374 * be) +
         be * (3 * C152338 + C152272 * C152391 + C152374 * ae) +
         C152272 *
             (3 * C152385 + ae * C152390 + be * C152391 +
              C152272 * (2 * C152379 + ae * C152383 + be * C152384 +
                         C152272 * (C152372 + ae * C152373 + be * C152375 +
                                    C152272 * (ae * C152361 + be * C152364 +
                                               C152272 *
                                                   (C152345 * C152346 +
                                                    C152276 * bs[7] *
                                                        std::pow(C152278, 7)) *
                                                   C152058))))) /
        C152060;
    const double C339 =
        (3 * (C152559 * C152328 + ae * C152559 * C152329 +
              be * C152559 * C152330 + C152272 * C152567) +
         ae * C152559 * C152390 + be * C152559 * C152391 +
         C152272 *
             (2 * C152567 + ae * C152559 * C152383 + be * C152559 * C152384 +
              C152272 *
                  (C152562 + ae * C152559 * C152373 + be * C152559 * C152375 +
                   C152272 * (ae * C152559 * C152361 + be * C152559 * C152364 +
                              C152272 * C152559 * C152433)))) /
        C152060;
    const double C512 =
        (3 * (C152632 * C152328 + ae * C152632 * C152329 +
              be * C152632 * C152330 + C152272 * C152640) +
         ae * C152632 * C152390 + be * C152632 * C152391 +
         C152272 *
             (2 * C152640 + ae * C152632 * C152383 + be * C152632 * C152384 +
              C152272 *
                  (C152635 + ae * C152632 * C152373 + be * C152632 * C152375 +
                   C152272 * (ae * C152632 * C152361 + be * C152632 * C152364 +
                              C152272 * C152632 * C152433)))) /
        C152060;
    const double C162 =
        (4 * (2 * C152303 + C152272 * C152337 + C152322 * be) +
         C152272 * (3 * C152337 + C152272 * C152390 + C152374 * be) +
         (3 * C152322 + C152272 * C152374) * be) /
        C152055;
    const double C315 =
        (C152559 * (3 * C152337 + C152272 * C152390 + C152374 * be)) / C152055;
    const double C331 =
        (2 * C152303 + C152272 * C152337 + C152322 * be + C152390 * C152575) /
        C152055;
    const double C488 =
        (C152632 * (3 * C152337 + C152272 * C152390 + C152374 * be)) / C152055;
    const double C504 =
        (2 * C152303 + C152272 * C152337 + C152322 * be + C152390 * C152648) /
        C152055;
    const double C957 = (C152632 * C152559 * C152390) / C152055;
    const double C152456 = C152419 + C152453;
    const double C152460 = C152272 * C152458;
    const double C152485 = 4 * C152458;
    const double C152468 = be * C152458;
    const double C153138 = C152559 * C152458;
    const double C1191 =
        (2 * C152559 * C152391 + C152559 * (C152391 + C152458 * C152575)) /
        C152055;
    const double C1333 =
        (C152559 * C152391 + C152559 * C152458 * C152648) / C152055;
    const double C1764 = (C152632 * (C152391 + C152458 * C152575)) / C152055;
    const double C2116 =
        (2 * C152632 * C152391 + C152632 * (C152391 + C152458 * C152648)) /
        C152055;
    const double C152459 = C152272 * C152457;
    const double C152479 = 4 * C152457;
    const double C152467 = ae * C152457;
    const double C348 =
        (3 * (C152579 + ae * (C152329 + C152373 * C152575) +
              be * (C152330 + C152375 * C152575) + C152272 * C152591) +
         ae * (C152390 + C152457 * C152575) +
         be * (C152391 + C152458 * C152575) +
         C152272 * (2 * C152591 + ae * (C152383 + C152448 * C152575) +
                    be * (C152384 + C152449 * C152575) +
                    C152272 * (C152586 + ae * (C152373 + C152434 * C152575) +
                               be * (C152375 + C152436 * C152575) +
                               C152272 * (ae * (C152361 + C152422 * C152575) +
                                          be * (C152364 + C152425 * C152575) +
                                          C152272 * (C152433 +
                                                     C152514 * C152575))))) /
        C152060;
    const double C521 =
        (3 * (C152652 + ae * (C152329 + C152373 * C152648) +
              be * (C152330 + C152375 * C152648) + C152272 * C152664) +
         ae * (C152390 + C152457 * C152648) +
         be * (C152391 + C152458 * C152648) +
         C152272 * (2 * C152664 + ae * (C152383 + C152448 * C152648) +
                    be * (C152384 + C152449 * C152648) +
                    C152272 * (C152659 + ae * (C152373 + C152434 * C152648) +
                               be * (C152375 + C152436 * C152648) +
                               C152272 * (ae * (C152361 + C152422 * C152648) +
                                          be * (C152364 + C152425 * C152648) +
                                          C152272 * (C152433 +
                                                     C152514 * C152648))))) /
        C152060;
    const double C967 =
        (3 * (C152760 + ae * C152632 * C152593 + be * C152632 * C152594 +
              C152272 * C152769) +
         ae * C152632 * C152559 * C152457 + be * C152632 * C152559 * C152458 +
         C152272 *
             (2 * C152769 + ae * C152632 * C152706 + be * C152632 * C152707 +
              C152272 *
                  (C152764 + ae * C152632 * C152708 + be * C152632 * C152709 +
                   C152272 * (ae * C152632 * C152710 + be * C152632 * C152711 +
                              C152272 * C152632 * C152712)))) /
        C152060;
    const double C153136 = C152559 * C152457;
    const double C1190 =
        (2 * C152559 * C152390 + C152559 * (C152390 + C152457 * C152575)) /
        C152055;
    const double C1332 =
        (C152559 * C152390 + C152559 * C152457 * C152648) / C152055;
    const double C1763 = (C152632 * (C152390 + C152457 * C152575)) / C152055;
    const double C2115 =
        (2 * C152632 * C152390 + C152632 * (C152390 + C152457 * C152648)) /
        C152055;
    const double C152541 = C152500 + C152538;
    const double C152723 = C152720 + C152714;
    const double C9063 = C9056 - C9057;
    const double C49652 = C49645 - C49646;
    const double C58770 = C58761 - C58762;
    const double C67561 = C67557 - C67558;
    const double C78860 = C78840 - C78841;
    const double C90422 = C90414 - C90415;
    const double C152749 = C152746 + C152740;
    const double C152546 = C152272 * C152543;
    const double C2924 = (3 * (C152391 + C152458 * C152575) +
                          C152559 * (2 * C152559 * C152458 +
                                     C152559 * (C152458 + C152543 * C152575))) /
                         C152055;
    const double C3290 = (C152391 + C152458 * C152575 +
                          (C152458 + C152543 * C152575) * C152648) /
                         C152055;
    const double C4074 = (C152632 * (2 * C152559 * C152458 +
                                     C152559 * (C152458 + C152543 * C152575))) /
                         C152055;
    const double C7525 = (3 * (C152391 + C152458 * C152648) +
                          C152632 * (2 * C152632 * C152458 +
                                     C152632 * (C152458 + C152543 * C152648))) /
                         C152055;
    const double C151 = 6 * (4 * C152374 + C152272 * C152445) +
                        C152272 * (5 * C152445 + C152272 * C152536);
    const double C314 = 4 * C152374 + C152272 * C152445 + C152536 * C152575;
    const double C487 = 4 * C152374 + C152272 * C152445 + C152536 * C152648;
    const double C651 = C152559 * (5 * C152445 + C152272 * C152536);
    const double C779 = C152632 * (5 * C152445 + C152272 * C152536);
    const double C950 = C152632 * C152559 * C152536;
    const double C152545 = C152272 * C152542;
    const double C1340 =
        (3 * (C152562 + C152597 * C152648 + ae * (C152593 + C152708 * C152648) +
              be * (C152594 + C152709 * C152648) + C152272 * C152820) +
         ae * (C152559 * C152457 + C152559 * C152542 * C152648) +
         be * (C152559 * C152458 + C152559 * C152543 * C152648) +
         C152272 *
             (2 * C152820 + ae * (C152706 + C152559 * C152529 * C152648) +
              be * (C152707 + C152559 * C152532 * C152648) +
              C152272 *
                  (C152815 + ae * (C152708 + C152559 * C152515 * C152648) +
                   be * (C152709 + C152559 * C152517 * C152648) +
                   C152272 *
                       (ae * (C152710 + C152559 * C152503 * C152648) +
                        be * (C152711 + C152559 * C152506 * C152648) +
                        C152272 * (C152712 + C152559 *
                                                 (C152477 * C152478 +
                                                  C152276 * bs[9] *
                                                      std::pow(C152278, 9)) *
                                                 C152058 * C152648))))) /
        C152060;
    const double C1771 =
        (3 * (C152632 * C152586 + ae * C152632 * C152615 +
              be * C152632 * C152616 + C152272 * C152835) +
         ae * C152632 * (C152457 + C152542 * C152575) +
         be * C152632 * (C152458 + C152543 * C152575) +
         C152272 *
             (2 * C152835 + ae * C152632 * (C152448 + C152529 * C152575) +
              be * C152632 * (C152449 + C152532 * C152575) +
              C152272 *
                  (C152830 + ae * C152632 * (C152434 + C152515 * C152575) +
                   be * C152632 * (C152436 + C152517 * C152575) +
                   C152272 * (ae * C152632 * (C152422 + C152503 * C152575) +
                              be * C152632 * (C152425 + C152506 * C152575) +
                              C152272 * C152632 *
                                  (C152514 +
                                   (C152477 * C152478 +
                                    C152276 * bs[9] * std::pow(C152278, 9)) *
                                       C152058 * C152575))))) /
        C152060;
    const double C2923 = (3 * (C152390 + C152457 * C152575) +
                          C152559 * (2 * C152559 * C152457 +
                                     C152559 * (C152457 + C152542 * C152575))) /
                         C152055;
    const double C3289 = (C152390 + C152457 * C152575 +
                          (C152457 + C152542 * C152575) * C152648) /
                         C152055;
    const double C4073 = (C152632 * (2 * C152559 * C152457 +
                                     C152559 * (C152457 + C152542 * C152575))) /
                         C152055;
    const double C7524 = (3 * (C152390 + C152457 * C152648) +
                          C152632 * (2 * C152632 * C152457 +
                                     C152632 * (C152457 + C152542 * C152648))) /
                         C152055;
    const double C1198 =
        (3 * (2 * C152562 + C152559 * C152586 +
              ae * (2 * C152593 + C152559 * C152615) +
              be * (2 * C152594 + C152559 * C152616) + C152272 * C152801) +
         ae *
             (2 * C152559 * C152457 + C152559 * (C152457 + C152542 * C152575)) +
         be *
             (2 * C152559 * C152458 + C152559 * (C152458 + C152543 * C152575)) +
         C152272 *
             (2 * C152801 +
              ae * (2 * C152706 + C152559 * (C152448 + C152529 * C152575)) +
              be * (2 * C152707 + C152559 * (C152449 + C152532 * C152575)) +
              C152272 *
                  (C152796 +
                   ae *
                       (2 * C152708 + C152559 * (C152434 + C152515 * C152575)) +
                   be *
                       (2 * C152709 + C152559 * (C152436 + C152517 * C152575)) +
                   C152272 *
                       (ae * (2 * C152710 +
                              C152559 * (C152422 + C152503 * C152575)) +
                        be * (2 * C152711 +
                              C152559 * (C152425 + C152506 * C152575)) +
                        C152272 *
                            (2 * C152712 +
                             C152559 * (C152514 + (C152477 * C152478 +
                                                   C152276 * bs[9] *
                                                       std::pow(C152278, 9)) *
                                                      C152058 * C152575)))))) /
        C152060;
    const double C1199 =
        (2 * (ae * (2 * C152560 + C152559 * C152584) +
              be * (2 * C152561 + C152559 * C152585) + C152272 * C152805) +
         ae *
             (2 * C152559 * C152383 + C152559 * (C152383 + C152448 * C152575)) +
         be *
             (2 * C152559 * C152384 + C152559 * (C152384 + C152449 * C152575)) +
         C152272 *
             (C152805 + ae * (2 * C152593 + C152559 * C152615) +
              be * (2 * C152594 + C152559 * C152616) + C152272 * C152801)) /
        C152060;
    const double C2928 =
        (2 * (ae * (3 * C152584 + C152559 * C152794) +
              be * (3 * C152585 + C152559 * C152795) + C152272 * C152869) +
         ae * (3 * (C152383 + C152448 * C152575) +
               C152559 *
                   (2 * C152706 + C152559 * (C152448 + C152529 * C152575))) +
         be * (3 * (C152384 + C152449 * C152575) +
               C152559 *
                   (2 * C152707 + C152559 * (C152449 + C152532 * C152575))) +
         C152272 *
             (C152869 +
              ae * (3 * C152615 +
                    C152559 * (2 * C152708 +
                               C152559 * (C152434 + C152515 * C152575))) +
              be * (3 * C152616 +
                    C152559 * (2 * C152709 +
                               C152559 * (C152436 + C152517 * C152575))) +
              C152272 *
                  (ae * (3 * C152617 +
                         C152559 * (2 * C152710 +
                                    C152559 * (C152422 + C152503 * C152575))) +
                   be * (3 * C152618 +
                         C152559 * (2 * C152711 +
                                    C152559 * (C152425 + C152506 * C152575))) +
                   C152272 *
                       (3 * C152619 +
                        C152559 *
                            (2 * C152712 +
                             C152559 * (C152514 + (C152477 * C152478 +
                                                   C152276 * bs[9] *
                                                       std::pow(C152278, 9)) *
                                                      C152058 * C152575)))))) /
        C152060;
    const double C4536 =
        (4 * C152805 + C152559 * C152869 +
         ae *
             (4 * (2 * C152593 + C152559 * C152615) +
              C152559 * (3 * C152615 +
                         C152559 * (2 * C152708 +
                                    C152559 * (C152434 + C152515 * C152575)))) +
         be *
             (4 * (2 * C152594 + C152559 * C152616) +
              C152559 * (3 * C152616 +
                         C152559 * (2 * C152709 +
                                    C152559 * (C152436 + C152517 * C152575)))) +
         C152272 *
             (ae * (4 * C152794 +
                    C152559 *
                        (3 * C152617 +
                         C152559 * (2 * C152710 +
                                    C152559 * (C152422 + C152503 * C152575)))) +
              be * (4 * C152795 +
                    C152559 *
                        (3 * C152618 +
                         C152559 * (2 * C152711 +
                                    C152559 * (C152425 + C152506 * C152575)))) +
              C152272 *
                  (4 * C152796 +
                   C152559 *
                       (3 * C152619 +
                        C152559 *
                            (2 * C152712 +
                             C152559 * (C152514 + (C152477 * C152478 +
                                                   C152276 * bs[9] *
                                                       std::pow(C152278, 9)) *
                                                      C152058 * C152575)))))) /
        C152060;
    const double C4537 = (ae * (4 * (2 * C152560 + C152559 * C152584) +
                                C152559 * (3 * C152584 + C152559 * C152794)) +
                          be * (4 * (2 * C152561 + C152559 * C152585) +
                                C152559 * (3 * C152585 + C152559 * C152795)) +
                          C152272 * (4 * C152805 + C152559 * C152869)) /
                         C152060;
    const double C5570 =
        (C152632 * C152869 +
         ae * C152632 *
             (3 * C152615 +
              C152559 *
                  (2 * C152708 + C152559 * (C152434 + C152515 * C152575))) +
         be * C152632 *
             (3 * C152616 +
              C152559 *
                  (2 * C152709 + C152559 * (C152436 + C152517 * C152575))) +
         C152272 *
             (ae * C152632 *
                  (3 * C152617 +
                   C152559 * (2 * C152710 +
                              C152559 * (C152422 + C152503 * C152575))) +
              be * C152632 *
                  (3 * C152618 +
                   C152559 * (2 * C152711 +
                              C152559 * (C152425 + C152506 * C152575))) +
              C152272 * C152632 *
                  (3 * C152619 +
                   C152559 * (2 * C152712 +
                              C152559 * (C152514 + (C152477 * C152478 +
                                                    C152276 * bs[9] *
                                                        std::pow(C152278, 9)) *
                                                       C152058 * C152575))))) /
        C152060;
    const double C5571 = (ae * C152632 * (3 * C152584 + C152559 * C152794) +
                          be * C152632 * (3 * C152585 + C152559 * C152795) +
                          C152272 * C152632 * C152869) /
                         C152060;
    const double C28342 = (5 * (3 * C152579 + C152559 * C152805) +
                           C152559 * (4 * C152805 + C152559 * C152869)) /
                          C152060;
    const double C28343 =
        (ae * (5 * (3 * C152584 + C152559 * C152794) +
               C152559 *
                   (4 * C152794 +
                    C152559 * (3 * C152617 +
                               C152559 * (2 * C152710 +
                                          C152559 * (C152422 +
                                                     C152503 * C152575))))) +
         be * (5 * (3 * C152585 + C152559 * C152795) +
               C152559 *
                   (4 * C152795 +
                    C152559 * (3 * C152618 +
                               C152559 * (2 * C152711 +
                                          C152559 * (C152425 +
                                                     C152506 * C152575))))) +
         C152272 *
             (5 * C152869 +
              C152559 *
                  (4 * C152796 +
                   C152559 *
                       (3 * C152619 +
                        C152559 *
                            (2 * C152712 +
                             C152559 * (C152514 + (C152477 * C152478 +
                                                   C152276 * bs[9] *
                                                       std::pow(C152278, 9)) *
                                                      C152058 * C152575)))))) /
        C152060;
    const double C28552 =
        (3 * C152579 + C152559 * C152805 + C152869 * C152648) / C152060;
    const double C28553 =
        (ae * (3 * C152584 + C152559 * C152794 +
               (3 * C152617 +
                C152559 *
                    (2 * C152710 + C152559 * (C152422 + C152503 * C152575))) *
                   C152648) +
         be * (3 * C152585 + C152559 * C152795 +
               (3 * C152618 +
                C152559 *
                    (2 * C152711 + C152559 * (C152425 + C152506 * C152575))) *
                   C152648) +
         C152272 *
             (C152869 +
              (3 * C152619 +
               C152559 * (2 * C152712 +
                          C152559 * (C152514 +
                                     (C152477 * C152478 +
                                      C152276 * bs[9] * std::pow(C152278, 9)) *
                                         C152058 * C152575))) *
                  C152648)) /
        C152060;
    const double C28998 =
        (C152632 * (4 * C152805 + C152559 * C152869)) / C152060;
    const double C29271 =
        (6 * (4 * C152805 + C152559 * C152869) +
         C152559 *
             (5 * C152869 +
              C152559 *
                  (4 * C152796 +
                   C152559 *
                       (3 * C152619 +
                        C152559 *
                            (2 * C152712 +
                             C152559 * (C152514 + (C152477 * C152478 +
                                                   C152276 * bs[9] *
                                                       std::pow(C152278, 9)) *
                                                      C152058 * C152575)))))) /
        C152060;
    const double C29405 =
        (4 * C152805 + C152559 * C152869 +
         (4 * C152796 +
          C152559 *
              (3 * C152619 +
               C152559 * (2 * C152712 +
                          C152559 * (C152514 +
                                     (C152477 * C152478 +
                                      C152276 * bs[9] * std::pow(C152278, 9)) *
                                         C152058 * C152575)))) *
             C152648) /
        C152060;
    const double C29847 =
        (C152632 *
         (5 * C152869 +
          C152559 *
              (4 * C152796 +
               C152559 * (3 * C152619 +
                          C152559 * (2 * C152712 +
                                     C152559 * (C152514 +
                                                (C152477 * C152478 +
                                                 C152276 * bs[9] *
                                                     std::pow(C152278, 9)) *
                                                    C152058 * C152575)))))) /
        C152060;
    const double C30188 =
        (2 * C152632 * C152869 +
         C152632 *
             (C152869 +
              (3 * C152619 +
               C152559 * (2 * C152712 +
                          C152559 * (C152514 +
                                     (C152477 * C152478 +
                                      C152276 * bs[9] * std::pow(C152278, 9)) *
                                         C152058 * C152575))) *
                  C152648)) /
        C152060;
    const double C4127 = C153885 * C1772;
    const double C13749 = C153862 * C1772;
    const double C25382 = C153885 * C1772;
    const double C39759 = C153472 * C1772;
    const double C72974 = C153862 * C1772;
    const double C84992 = C83598 * C1772;
    const double C94236 = C153472 * C1772;
    const double C2123 =
        (3 * (2 * C152635 + C152632 * C152659 +
              ae * (2 * C152666 + C152632 * C152688) +
              be * (2 * C152667 + C152632 * C152689) + C152272 * C152855) +
         ae *
             (2 * C152632 * C152457 + C152632 * (C152457 + C152542 * C152648)) +
         be *
             (2 * C152632 * C152458 + C152632 * (C152458 + C152543 * C152648)) +
         C152272 *
             (2 * C152855 +
              ae * (2 * C152732 + C152632 * (C152448 + C152529 * C152648)) +
              be * (2 * C152733 + C152632 * (C152449 + C152532 * C152648)) +
              C152272 *
                  (C152850 +
                   ae *
                       (2 * C152734 + C152632 * (C152434 + C152515 * C152648)) +
                   be *
                       (2 * C152735 + C152632 * (C152436 + C152517 * C152648)) +
                   C152272 *
                       (ae * (2 * C152736 +
                              C152632 * (C152422 + C152503 * C152648)) +
                        be * (2 * C152737 +
                              C152632 * (C152425 + C152506 * C152648)) +
                        C152272 *
                            (2 * C152738 +
                             C152632 * (C152514 + (C152477 * C152478 +
                                                   C152276 * bs[9] *
                                                       std::pow(C152278, 9)) *
                                                      C152058 * C152648)))))) /
        C152060;
    const double C2124 =
        (2 * (ae * (2 * C152633 + C152632 * C152657) +
              be * (2 * C152634 + C152632 * C152658) + C152272 * C152859) +
         ae *
             (2 * C152632 * C152383 + C152632 * (C152383 + C152448 * C152648)) +
         be *
             (2 * C152632 * C152384 + C152632 * (C152384 + C152449 * C152648)) +
         C152272 *
             (C152859 + ae * (2 * C152666 + C152632 * C152688) +
              be * (2 * C152667 + C152632 * C152689) + C152272 * C152855)) /
        C152060;
    const double C7529 =
        (2 * (ae * (3 * C152657 + C152632 * C152848) +
              be * (3 * C152658 + C152632 * C152849) + C152272 * C152902) +
         ae * (3 * (C152383 + C152448 * C152648) +
               C152632 *
                   (2 * C152732 + C152632 * (C152448 + C152529 * C152648))) +
         be * (3 * (C152384 + C152449 * C152648) +
               C152632 *
                   (2 * C152733 + C152632 * (C152449 + C152532 * C152648))) +
         C152272 *
             (C152902 +
              ae * (3 * C152688 +
                    C152632 * (2 * C152734 +
                               C152632 * (C152434 + C152515 * C152648))) +
              be * (3 * C152689 +
                    C152632 * (2 * C152735 +
                               C152632 * (C152436 + C152517 * C152648))) +
              C152272 *
                  (ae * (3 * C152690 +
                         C152632 * (2 * C152736 +
                                    C152632 * (C152422 + C152503 * C152648))) +
                   be * (3 * C152691 +
                         C152632 * (2 * C152737 +
                                    C152632 * (C152425 + C152506 * C152648))) +
                   C152272 *
                       (3 * C152692 +
                        C152632 *
                            (2 * C152738 +
                             C152632 * (C152514 + (C152477 * C152478 +
                                                   C152276 * bs[9] *
                                                       std::pow(C152278, 9)) *
                                                      C152058 * C152648)))))) /
        C152060;
    const double C10387 =
        (4 * C152859 + C152632 * C152902 +
         ae *
             (4 * (2 * C152666 + C152632 * C152688) +
              C152632 * (3 * C152688 +
                         C152632 * (2 * C152734 +
                                    C152632 * (C152434 + C152515 * C152648)))) +
         be *
             (4 * (2 * C152667 + C152632 * C152689) +
              C152632 * (3 * C152689 +
                         C152632 * (2 * C152735 +
                                    C152632 * (C152436 + C152517 * C152648)))) +
         C152272 *
             (ae * (4 * C152848 +
                    C152632 *
                        (3 * C152690 +
                         C152632 * (2 * C152736 +
                                    C152632 * (C152422 + C152503 * C152648)))) +
              be * (4 * C152849 +
                    C152632 *
                        (3 * C152691 +
                         C152632 * (2 * C152737 +
                                    C152632 * (C152425 + C152506 * C152648)))) +
              C152272 *
                  (4 * C152850 +
                   C152632 *
                       (3 * C152692 +
                        C152632 *
                            (2 * C152738 +
                             C152632 * (C152514 + (C152477 * C152478 +
                                                   C152276 * bs[9] *
                                                       std::pow(C152278, 9)) *
                                                      C152058 * C152648)))))) /
        C152060;
    const double C10388 = (ae * (4 * (2 * C152633 + C152632 * C152657) +
                                 C152632 * (3 * C152657 + C152632 * C152848)) +
                           be * (4 * (2 * C152634 + C152632 * C152658) +
                                 C152632 * (3 * C152658 + C152632 * C152849)) +
                           C152272 * (4 * C152859 + C152632 * C152902)) /
                          C152060;
    const double C56033 = (5 * (3 * C152652 + C152632 * C152859) +
                           C152632 * (4 * C152859 + C152632 * C152902)) /
                          C152060;
    const double C56034 =
        (ae * (5 * (3 * C152657 + C152632 * C152848) +
               C152632 *
                   (4 * C152848 +
                    C152632 * (3 * C152690 +
                               C152632 * (2 * C152736 +
                                          C152632 * (C152422 +
                                                     C152503 * C152648))))) +
         be * (5 * (3 * C152658 + C152632 * C152849) +
               C152632 *
                   (4 * C152849 +
                    C152632 * (3 * C152691 +
                               C152632 * (2 * C152737 +
                                          C152632 * (C152425 +
                                                     C152506 * C152648))))) +
         C152272 *
             (5 * C152902 +
              C152632 *
                  (4 * C152850 +
                   C152632 *
                       (3 * C152692 +
                        C152632 *
                            (2 * C152738 +
                             C152632 * (C152514 + (C152477 * C152478 +
                                                   C152276 * bs[9] *
                                                       std::pow(C152278, 9)) *
                                                      C152058 * C152648)))))) /
        C152060;
    const double C57559 =
        (6 * (4 * C152859 + C152632 * C152902) +
         C152632 *
             (5 * C152902 +
              C152632 *
                  (4 * C152850 +
                   C152632 *
                       (3 * C152692 +
                        C152632 *
                            (2 * C152738 +
                             C152632 * (C152514 + (C152477 * C152478 +
                                                   C152276 * bs[9] *
                                                       std::pow(C152278, 9)) *
                                                      C152058 * C152648)))))) /
        C152060;
    const double C8444 = C153885 * C1341;
    const double C13075 = C153862 * C1341;
    const double C49045 = C153885 * C1341;
    const double C59076 = C153472 * C1341;
    const double C72300 = C153862 * C1341;
    const double C79200 = C153472 * C1341;
    const double C88568 = C83598 * C1341;
    const double C56484 = C153462 * C9045;
    const double C60557 = C153472 * C9045;
    const double C80706 = C153472 * C9045;
    const double C56821 = C153462 * C34027;
    const double C152106 = C152103 - C152098;
    const double C23994 = C152103 + (C152089 * ae) / C152055;
    const double C152105 = C152102 + C153829;
    const double C152138 = C152135 * be;
    const double C152137 = C152134 * ae;
    const double C2690 =
        (-(be * C152115) / C152060) / C152061 -
        ((2 * ((-C152063) / C152061 - (C152088 * be) / C152055) -
          (C152053 * C152134 * be) / C152055) *
         be) /
            C152055 -
        C152129;
    const double C2692 =
        (-(C152134 * be) / C152055) / C152061 -
        ((2 * ((-C152075 / C152055) / C152061 - (0 * be) / C152055) - C152132) *
         be) /
            C152055;
    const double C74287 = -(C152134 * be) / C152055;
    const double C3031 = C3013 - C2976;
    const double C3026 = C3008 - C2956;
    const double C3025 = C3007 - C2952;
    const double C3022 = C3004 - C2940;
    const double C4143 = C4131 - C4094;
    const double C4140 = C4128 - C4082;
    const double C4560 = C4556 - C4551;
    const double C4829 = C4823 - C4816;
    const double C4826 = C4820 - C4804;
    const double C5594 = C5590 - C5585;
    const double C7632 = C7614 - C7577;
    const double C7627 = C7609 - C7557;
    const double C7626 = C7608 - C7553;
    const double C7623 = C7605 - C7541;
    const double C10410 = C10407 - C10402;
    const double C11561 = C11545 - C11492;
    const double C15529 = C15513 - C15460;
    const double C24318 = C24300 - C24263;
    const double C24313 = C24295 - C24243;
    const double C24312 = C24294 - C24239;
    const double C24309 = C24291 - C24227;
    const double C25398 = C25386 - C25349;
    const double C25395 = C25383 - C25337;
    const double C25803 = C25799 - C25794;
    const double C26060 = C26054 - C26047;
    const double C26057 = C26051 - C26035;
    const double C26813 = C26809 - C26804;
    const double C48237 = C48219 - C48182;
    const double C48232 = C48214 - C48162;
    const double C48231 = C48213 - C48158;
    const double C48228 = C48210 - C48146;
    const double C50987 = C50984 - C50979;
    const double C28404 = C28394 - C28383;
    const double C28403 = C28393 - C28379;
    const double C28402 = C28392 - C28375;
    const double C28401 = C28391 - C28371;
    const double C28400 = C28390 - C28367;
    const double C28399 = C28389 - C28363;
    const double C28398 = C28388 - C28359;
    const double C28397 = C28387 - C28355;
    const double C28396 = C28386 - C28351;
    const double C28395 = C28385 - C28347;
    const double C28700 = C28696 - C28691;
    const double C28699 = C28695 - C28687;
    const double C28698 = C28694 - C28683;
    const double C28697 = C28693 - C28679;
    const double C29048 = C29040 - C29031;
    const double C29047 = C29039 - C29027;
    const double C29046 = C29038 - C29023;
    const double C29045 = C29037 - C29019;
    const double C29044 = C29036 - C29015;
    const double C29043 = C29035 - C29011;
    const double C29042 = C29034 - C29007;
    const double C29041 = C29033 - C29003;
    const double C29278 = C29277 - C29275;
    const double C29430 = C29426 - C29421;
    const double C29429 = C29425 - C29417;
    const double C29428 = C29424 - C29413;
    const double C29427 = C29423 - C29409;
    const double C29854 = C29853 - C29851;
    const double C30996 = C30991 - C30986;
    const double C30995 = C30990 - C30980;
    const double C30994 = C30989 - C30974;
    const double C31289 = C31279 - C31268;
    const double C31288 = C31278 - C31264;
    const double C31287 = C31277 - C31260;
    const double C31286 = C31276 - C31256;
    const double C31285 = C31275 - C31252;
    const double C31284 = C31274 - C31248;
    const double C31283 = C31273 - C31244;
    const double C31282 = C31272 - C31240;
    const double C31281 = C31271 - C31236;
    const double C31280 = C31270 - C31232;
    const double C31543 = C31539 - C31534;
    const double C31542 = C31538 - C31530;
    const double C31541 = C31537 - C31525;
    const double C31540 = C31536 - C31521;
    const double C31781 = C31779 - C31776;
    const double C31780 = C31778 - C31772;
    const double C32702 = C32699 - C32695;
    const double C32701 = C32698 - C32691;
    const double C32700 = C32697 - C32685;
    const double C34034 = C34033 - C34031;
    const double C44742 = C44741 - C44739;
    const double C56053 = C56050 - C56046;
    const double C56052 = C56049 - C56042;
    const double C56051 = C56048 - C56038;
    const double C56312 = C56310 - C56307;
    const double C56311 = C56309 - C56303;
    const double C56486 = C56485 - C56483;
    const double C56823 = C56822 - C56820;
    const double C57566 = C57565 - C57563;
    const double C35191 = C35175 - C35158;
    const double C35189 = C35173 - C35150;
    const double C35187 = C35171 - C35142;
    const double C35185 = C35169 - C35134;
    const double C35182 = C35166 - C35122;
    const double C35181 = C35165 - C35118;
    const double C35179 = C35163 - C35110;
    const double C35177 = C35161 - C35102;
    const double C35635 = C35629 - C35610;
    const double C36169 = C36157 - C36144;
    const double C36167 = C36155 - C36136;
    const double C36165 = C36153 - C36128;
    const double C36162 = C36150 - C36116;
    const double C36160 = C36148 - C36108;
    const double C36158 = C36146 - C36100;
    const double C36521 = C36519 - C36514;
    const double C36753 = C36747 - C36740;
    const double C36751 = C36745 - C36732;
    const double C36749 = C36743 - C36724;
    const double C37421 = C37419 - C37414;
    const double C39441 = C39429 - C39416;
    const double C39439 = C39427 - C39408;
    const double C39437 = C39425 - C39400;
    const double C39435 = C39423 - C39392;
    const double C39432 = C39420 - C39380;
    const double C39431 = C39419 - C39376;
    const double C40073 = C40071 - C40068;
    const double C41271 = C41267 - C41262;
    const double C41269 = C41265 - C41253;
    const double C43031 = C43029 - C43026;
    const double C58772 = C58768 - C58755;
    const double C60561 = C60559 - C60556;
    const double C62316 = C62314 - C62311;
    const double C63820 = C63818 - C63814;
    const double C66177 = C66175 - C66172;
    const double C70786 = C70770 - C70717;
    const double C99010 = C98994 - C98941;
    const double C74580 = C74564 - C74547;
    const double C74578 = C74562 - C74539;
    const double C74576 = C74560 - C74531;
    const double C74574 = C74558 - C74523;
    const double C74571 = C74555 - C74511;
    const double C74570 = C74554 - C74507;
    const double C74568 = C74552 - C74499;
    const double C74566 = C74550 - C74491;
    const double C75024 = C75018 - C74999;
    const double C75558 = C75546 - C75533;
    const double C75556 = C75544 - C75525;
    const double C75554 = C75542 - C75517;
    const double C75551 = C75539 - C75505;
    const double C75549 = C75537 - C75497;
    const double C75547 = C75535 - C75489;
    const double C75910 = C75908 - C75903;
    const double C76142 = C76136 - C76129;
    const double C76140 = C76134 - C76121;
    const double C76138 = C76132 - C76113;
    const double C76810 = C76808 - C76803;
    const double C78484 = C78480 - C78475;
    const double C78482 = C78478 - C78467;
    const double C78874 = C78858 - C78834;
    const double C78872 = C78856 - C78826;
    const double C78870 = C78854 - C78818;
    const double C78867 = C78851 - C78806;
    const double C78865 = C78849 - C78798;
    const double C78864 = C78848 - C78793;
    const double C78862 = C78846 - C78785;
    const double C79524 = C79520 - C79509;
    const double C80723 = C80719 - C80713;
    const double C80721 = C80717 - C80705;
    const double C82482 = C82480 - C82477;
    const double C107836 = C107834 - C107830;
    const double C110193 = C110191 - C110188;
    const double C83928 = C83910 - C83873;
    const double C83923 = C83905 - C83853;
    const double C83922 = C83904 - C83849;
    const double C83919 = C83901 - C83837;
    const double C85008 = C84996 - C84959;
    const double C85005 = C84993 - C84947;
    const double C85413 = C85409 - C85404;
    const double C85670 = C85664 - C85657;
    const double C85667 = C85661 - C85645;
    const double C86423 = C86419 - C86414;
    const double C88592 = C88577 - C88543;
    const double C88587 = C88572 - C88523;
    const double C88586 = C88571 - C88519;
    const double C92188 = C92185 - C92181;
    const double C119328 = C119325 - C119320;
    const double C3524 = C2693 * C316;
    const double C11524 = C11281 * C316;
    const double C24795 = C23996 * C316;
    const double C70749 = C70506 * C316;
    const double C84405 = C152156 * C316;
    const double C2988 = C2693 * C332;
    const double C3532 = C2691 * C332;
    const double C11496 = C11281 * C332;
    const double C24275 = C23996 * C332;
    const double C35618 = C152081 * C332;
    const double C70721 = C70506 * C332;
    const double C75007 = C74288 * C332;
    const double C83885 = C152156 * C332;
    const double C8107 = C2693 * C489;
    const double C15492 = C11281 * C489;
    const double C48712 = C23996 * C489;
    const double C89225 = C152156 * C489;
    const double C98973 = C70506 * C489;
    const double C7589 = C2693 * C505;
    const double C8115 = C2691 * C505;
    const double C15464 = C11281 * C505;
    const double C48194 = C23996 * C505;
    const double C59379 = C152081 * C505;
    const double C79517 = C74288 * C505;
    const double C88555 = C152156 * C505;
    const double C98945 = C70506 * C505;
    const double C4114 = C2693 * C958;
    const double C12460 = C11281 * C958;
    const double C19658 = C2691 * C958;
    const double C25369 = C23996 * C958;
    const double C39750 = C152081 * C958;
    const double C71685 = C70506 * C958;
    const double C79191 = C74288 * C958;
    const double C84979 = C152156 * C958;
    const double C3525 = C153885 * C339;
    const double C11525 = C153862 * C339;
    const double C11989 = C11271 * C339;
    const double C24796 = C153885 * C339;
    const double C70750 = C153862 * C339;
    const double C71214 = C153916 * C339;
    const double C84406 = C83598 * C339;
    const double C8108 = C153885 * C512;
    const double C15493 = C153862 * C512;
    const double C15957 = C11271 * C512;
    const double C48713 = C153885 * C512;
    const double C89226 = C83598 * C512;
    const double C98974 = C153862 * C512;
    const double C99438 = C153916 * C512;
    const double C3522 = C2693 * C315;
    const double C11522 = C11281 * C315;
    const double C24793 = C23996 * C315;
    const double C70747 = C70506 * C315;
    const double C84403 = C152156 * C315;
    const double C2986 = C2693 * C331;
    const double C3530 = C2691 * C331;
    const double C11494 = C11281 * C331;
    const double C24273 = C23996 * C331;
    const double C35616 = C152081 * C331;
    const double C70719 = C70506 * C331;
    const double C75005 = C74288 * C331;
    const double C83883 = C152156 * C331;
    const double C8105 = C2693 * C488;
    const double C15490 = C11281 * C488;
    const double C48710 = C23996 * C488;
    const double C89223 = C152156 * C488;
    const double C98971 = C70506 * C488;
    const double C7587 = C2693 * C504;
    const double C8113 = C2691 * C504;
    const double C15462 = C11281 * C504;
    const double C48192 = C23996 * C504;
    const double C59377 = C152081 * C504;
    const double C79515 = C74288 * C504;
    const double C88553 = C152156 * C504;
    const double C98943 = C70506 * C504;
    const double C4112 = C2693 * C957;
    const double C12458 = C11281 * C957;
    const double C19656 = C2691 * C957;
    const double C25367 = C23996 * C957;
    const double C39748 = C152081 * C957;
    const double C71683 = C70506 * C957;
    const double C79189 = C74288 * C957;
    const double C84977 = C152156 * C957;
    const double C152462 = C152407 + C152460;
    const double C8430 = (2 * C152632 * C153138 +
                          C152632 * (C153138 + C152559 * C152543 * C152648)) /
                         C152055;
    const double C3000 = C2693 * C1191;
    const double C12852 = C11281 * C1191;
    const double C24287 = C23996 * C1191;
    const double C35626 = C152081 * C1191;
    const double C72077 = C70506 * C1191;
    const double C75015 = C74288 * C1191;
    const double C83897 = C152156 * C1191;
    const double C8443 = C2693 * C1333;
    const double C13074 = C11281 * C1333;
    const double C49044 = C23996 * C1333;
    const double C59075 = C152081 * C1333;
    const double C72299 = C70506 * C1333;
    const double C79199 = C74288 * C1333;
    const double C88567 = C152156 * C1333;
    const double C4126 = C2693 * C1764;
    const double C13748 = C11281 * C1764;
    const double C25381 = C23996 * C1764;
    const double C39758 = C152081 * C1764;
    const double C72973 = C70506 * C1764;
    const double C84991 = C152156 * C1764;
    const double C94235 = C74288 * C1764;
    const double C7601 = C2693 * C2116;
    const double C17928 = C11281 * C2116;
    const double C48206 = C23996 * C2116;
    const double C64217 = C152081 * C2116;
    const double C101409 = C70506 * C2116;
    const double C108233 = C74288 * C2116;
    const double C116658 = C152156 * C2116;
    const double C152461 = C152403 + C152459;
    const double C152488 = C152466 + C152467;
    const double C3537 = C153885 * C348;
    const double C11541 = C153862 * C348;
    const double C24808 = C153885 * C348;
    const double C70766 = C153862 * C348;
    const double C84418 = C83598 * C348;
    const double C8120 = C153885 * C521;
    const double C15509 = C153862 * C521;
    const double C48725 = C153885 * C521;
    const double C98990 = C153862 * C521;
    const double C117119 = C83598 * C521;
    const double C12489 = C153862 * C967;
    const double C19663 = C153885 * C967;
    const double C71714 = C153862 * C967;
    const double C88915 = C83598 * C967;
    const double C126353 = C153885 * C967;
    const double C8429 = (2 * C152632 * C153136 +
                          C152632 * (C153136 + C152559 * C152542 * C152648)) /
                         C152055;
    const double C2998 = C2693 * C1190;
    const double C12850 = C11281 * C1190;
    const double C24285 = C23996 * C1190;
    const double C35624 = C152081 * C1190;
    const double C72075 = C70506 * C1190;
    const double C75013 = C74288 * C1190;
    const double C83895 = C152156 * C1190;
    const double C8441 = C2693 * C1332;
    const double C13072 = C11281 * C1332;
    const double C49042 = C23996 * C1332;
    const double C59073 = C152081 * C1332;
    const double C72297 = C70506 * C1332;
    const double C79197 = C74288 * C1332;
    const double C88565 = C152156 * C1332;
    const double C4124 = C2693 * C1763;
    const double C13746 = C11281 * C1763;
    const double C25379 = C23996 * C1763;
    const double C39756 = C152081 * C1763;
    const double C72971 = C70506 * C1763;
    const double C84989 = C152156 * C1763;
    const double C94233 = C74288 * C1763;
    const double C7599 = C2693 * C2115;
    const double C17926 = C11281 * C2115;
    const double C48204 = C23996 * C2115;
    const double C64215 = C152081 * C2115;
    const double C101407 = C70506 * C2115;
    const double C108231 = C74288 * C2115;
    const double C116656 = C152156 * C2115;
    const double C152544 = C152272 * C152541;
    const double C152729 = C152723 + C152728;
    const double C9067 = C9063 - C9058;
    const double C49656 = C49652 - C49647;
    const double C58774 = C58770 - C58763;
    const double C67562 = C67561 - C67559;
    const double C78876 = C78860 - C78842;
    const double C90425 = C90422 - C90416;
    const double C152755 = C152749 + C152754;
    const double C152549 = C152486 + C152546;
    const double C152548 = C152480 + C152545;
    const double C3001 = C153885 * C1199;
    const double C12853 = C153862 * C1199;
    const double C24288 = C153885 * C1199;
    const double C35627 = C153472 * C1199;
    const double C72078 = C153862 * C1199;
    const double C75016 = C153472 * C1199;
    const double C83898 = C83598 * C1199;
    const double C28384 = C153462 * C4537;
    const double C36515 = C153472 * C4537;
    const double C75904 = C153472 * C4537;
    const double C29032 = C153462 * C5571;
    const double C37415 = C153472 * C5571;
    const double C76804 = C153472 * C5571;
    const double C29276 = C153462 * C28342;
    const double C29422 = C153462 * C28552;
    const double C29852 = C153462 * C28998;
    const double C7602 = C153885 * C2124;
    const double C17929 = C153862 * C2124;
    const double C48207 = C153885 * C2124;
    const double C64218 = C153472 * C2124;
    const double C101410 = C153862 * C2124;
    const double C108234 = C153472 * C2124;
    const double C116659 = C83598 * C2124;
    const double C56047 = C153462 * C10388;
    const double C66173 = C153472 * C10388;
    const double C110189 = C153472 * C10388;
    const double C57564 = C153462 * C56033;
    const double C83893 = C152106 * C1193;
    const double C83891 = C152106 * C1192;
    const double C83881 = C152106 * C330;
    const double C83879 = C152106 * C329;
    const double C83869 = C152106 * C320;
    const double C83867 = C152106 * C319;
    const double C83857 = C152106 * C1195;
    const double C83855 = C152106 * C1194;
    const double C83845 = C152106 * C328;
    const double C83843 = C152106 * C327;
    const double C83833 = C152106 * C322;
    const double C83831 = C152106 * C321;
    const double C84413 = C152106 * C332;
    const double C84411 = C152106 * C331;
    const double C84401 = C152106 * C318;
    const double C84399 = C152106 * C317;
    const double C84987 = C152106 * C1766;
    const double C84985 = C152106 * C1765;
    const double C84975 = C152106 * C956;
    const double C84973 = C152106 * C955;
    const double C84963 = C152106 * C954;
    const double C84961 = C152106 * C953;
    const double C84951 = C152106 * C1768;
    const double C84949 = C152106 * C1767;
    const double C85400 = C152106 * C2920;
    const double C85398 = C152106 * C2919;
    const double C85653 = C152106 * C3286;
    const double C85651 = C152106 * C3285;
    const double C85641 = C152106 * C1337;
    const double C85639 = C152106 * C1336;
    const double C86410 = C152106 * C4070;
    const double C86408 = C152106 * C4069;
    const double C88563 = C152106 * C1335;
    const double C88561 = C152106 * C1334;
    const double C88551 = C152106 * C503;
    const double C88549 = C152106 * C502;
    const double C88539 = C152106 * C493;
    const double C88537 = C152106 * C492;
    const double C88527 = C152106 * C501;
    const double C88525 = C152106 * C500;
    const double C88515 = C152106 * C495;
    const double C88513 = C152106 * C494;
    const double C88910 = C152106 * C958;
    const double C88908 = C152106 * C957;
    const double C89221 = C152106 * C491;
    const double C89219 = C152106 * C490;
    const double C90412 = C152106 * C6194;
    const double C90410 = C152106 * C6193;
    const double C92177 = C152106 * C2120;
    const double C92175 = C152106 * C2119;
    const double C116654 = C152106 * C2118;
    const double C116652 = C152106 * C2117;
    const double C117114 = C152106 * C505;
    const double C117112 = C152106 * C504;
    const double C119316 = C152106 * C7521;
    const double C119314 = C152106 * C7520;
    const double C140 =
        (C152106 / C152061 + ((C152053 * C152156 + C83598) * ae) / C152055) /
            C152061 -
        ((C152053 * (C152156 / C152061 + (0 * ae) / C152055) + C153862) * be) /
            C152055;
    const double C11279 =
        C152106 / C152061 - ((C152053 * C152156 + C83598) * be) / C152055;
    const double C70504 =
        C152106 / C152061 + ((C152053 * C152156 + C83598) * ae) / C152055;
    const double C24283 = C23994 * C1193;
    const double C24281 = C23994 * C1192;
    const double C24271 = C23994 * C330;
    const double C24269 = C23994 * C329;
    const double C24259 = C23994 * C320;
    const double C24257 = C23994 * C319;
    const double C24247 = C23994 * C1195;
    const double C24245 = C23994 * C1194;
    const double C24235 = C23994 * C328;
    const double C24233 = C23994 * C327;
    const double C24223 = C23994 * C322;
    const double C24221 = C23994 * C321;
    const double C24803 = C23994 * C332;
    const double C24801 = C23994 * C331;
    const double C24791 = C23994 * C318;
    const double C24789 = C23994 * C317;
    const double C25377 = C23994 * C1766;
    const double C25375 = C23994 * C1765;
    const double C25365 = C23994 * C956;
    const double C25363 = C23994 * C955;
    const double C25353 = C23994 * C954;
    const double C25351 = C23994 * C953;
    const double C25341 = C23994 * C1768;
    const double C25339 = C23994 * C1767;
    const double C25790 = C23994 * C2920;
    const double C25788 = C23994 * C2919;
    const double C26043 = C23994 * C3286;
    const double C26041 = C23994 * C3285;
    const double C26031 = C23994 * C1337;
    const double C26029 = C23994 * C1336;
    const double C26800 = C23994 * C4070;
    const double C26798 = C23994 * C4069;
    const double C48202 = C23994 * C2118;
    const double C48200 = C23994 * C2117;
    const double C48190 = C23994 * C503;
    const double C48188 = C23994 * C502;
    const double C48178 = C23994 * C493;
    const double C48176 = C23994 * C492;
    const double C48166 = C23994 * C2120;
    const double C48164 = C23994 * C2119;
    const double C48154 = C23994 * C501;
    const double C48152 = C23994 * C500;
    const double C48142 = C23994 * C495;
    const double C48140 = C23994 * C494;
    const double C48720 = C23994 * C505;
    const double C48718 = C23994 * C504;
    const double C48708 = C23994 * C491;
    const double C48706 = C23994 * C490;
    const double C49040 = C23994 * C1335;
    const double C49038 = C23994 * C1334;
    const double C49643 = C23994 * C6194;
    const double C49641 = C23994 * C6193;
    const double C50975 = C23994 * C7521;
    const double C50973 = C23994 * C7520;
    const double C126348 = C23994 * C958;
    const double C126346 = C23994 * C957;
    const double C152107 = C152105 * be;
    const double C23992 = C152092 + (C152105 * ae) / C152055 + C152081;
    const double C152142 = C152138 / C152055;
    const double C152141 = C152137 / C152067;
    const double C152140 = C152053 * C152137;
    const double C34898 = C152137 / C152055;
    const double C2991 = C2690 * C1186;
    const double C2979 = C2690 * C309;
    const double C2967 = C2690 * C306;
    const double C2963 = C2690 * C1187;
    const double C2943 = C2690 * C308;
    const double C2931 = C2690 * C307;
    const double C3527 = C2690 * C310;
    const double C3515 = C2690 * C305;
    const double C4117 = C2690 * C1759;
    const double C4105 = C2690 * C946;
    const double C4101 = C2690 * C945;
    const double C4089 = C2690 * C1760;
    const double C4542 = C2690 * C2913;
    const double C4807 = C2690 * C3279;
    const double C4795 = C2690 * C1329;
    const double C5576 = C2690 * C4063;
    const double C7592 = C2690 * C2111;
    const double C7580 = C2690 * C482;
    const double C7568 = C2690 * C479;
    const double C7564 = C2690 * C2112;
    const double C7544 = C2690 * C481;
    const double C7532 = C2690 * C480;
    const double C8110 = C2690 * C483;
    const double C8098 = C2690 * C478;
    const double C8434 = C2690 * C1328;
    const double C9049 = C2690 * C6184;
    const double C10393 = C2690 * C7514;
    const double C19653 = C2690 * C947;
    const double C2995 = C2692 * C1185;
    const double C2983 = C2692 * C310;
    const double C2971 = C2692 * C305;
    const double C2959 = C2692 * C1186;
    const double C2947 = C2692 * C309;
    const double C2935 = C2692 * C306;
    const double C3531 = C2692 * C311;
    const double C3519 = C2692 * C304;
    const double C4121 = C2692 * C1758;
    const double C4109 = C2692 * C947;
    const double C4097 = C2692 * C946;
    const double C4085 = C2692 * C1759;
    const double C4546 = C2692 * C2914;
    const double C4811 = C2692 * C3280;
    const double C4799 = C2692 * C1328;
    const double C5580 = C2692 * C4064;
    const double C7596 = C2692 * C2110;
    const double C7584 = C2692 * C483;
    const double C7572 = C2692 * C478;
    const double C7560 = C2692 * C2111;
    const double C7548 = C2692 * C482;
    const double C7536 = C2692 * C479;
    const double C8114 = C2692 * C484;
    const double C8102 = C2692 * C477;
    const double C8438 = C2692 * C1327;
    const double C9053 = C2692 * C6183;
    const double C10397 = C2692 * C7515;
    const double C19657 = C2692 * C948;
    const double C74542 = C74287 * C2914;
    const double C74534 = C74287 * C1186;
    const double C74526 = C74287 * C309;
    const double C74518 = C74287 * C306;
    const double C74514 = C74287 * C2913;
    const double C74502 = C74287 * C1187;
    const double C74494 = C74287 * C308;
    const double C74486 = C74287 * C307;
    const double C75010 = C74287 * C1185;
    const double C75002 = C74287 * C310;
    const double C74994 = C74287 * C305;
    const double C75528 = C74287 * C4064;
    const double C75520 = C74287 * C1759;
    const double C75512 = C74287 * C946;
    const double C75508 = C74287 * C945;
    const double C75500 = C74287 * C1760;
    const double C75492 = C74287 * C4063;
    const double C75898 = C74287 * C4529;
    const double C76124 = C74287 * C4783;
    const double C76116 = C74287 * C3279;
    const double C76108 = C74287 * C1329;
    const double C76798 = C74287 * C5563;
    const double C78470 = C74287 * C3280;
    const double C78462 = C74287 * C1328;
    const double C78837 = C74287 * C6183;
    const double C78829 = C74287 * C2111;
    const double C78821 = C74287 * C482;
    const double C78813 = C74287 * C479;
    const double C78809 = C74287 * C2112;
    const double C78801 = C74287 * C6184;
    const double C78788 = C74287 * C481;
    const double C78780 = C74287 * C480;
    const double C79194 = C74287 * C1327;
    const double C79186 = C74287 * C947;
    const double C79512 = C74287 * C483;
    const double C79504 = C74287 * C478;
    const double C80708 = C74287 * C6181;
    const double C80700 = C74287 * C9037;
    const double C82472 = C74287 * C7514;
    const double C94230 = C74287 * C1758;
    const double C107825 = C74287 * C7515;
    const double C108228 = C74287 * C2110;
    const double C110183 = C74287 * C10380;
    const double C3049 = C3031 + C2977;
    const double C3044 = C3026 + C2957;
    const double C3043 = C3025 + C2953;
    const double C3040 = C3022 + C2941;
    const double C4155 = C4143 + C4095;
    const double C4152 = C4140 + C4083;
    const double C4563 = C4560 + C4552;
    const double C4835 = C4829 + C4817;
    const double C4832 = C4826 + C4805;
    const double C5597 = C5594 + C5586;
    const double C7650 = C7632 + C7578;
    const double C7645 = C7627 + C7558;
    const double C7644 = C7626 + C7554;
    const double C7641 = C7623 + C7542;
    const double C10413 = C10410 + C10403;
    const double C11577 = C11561 + C11493;
    const double C15545 = C15529 + C15461;
    const double C24336 = C24318 + C24264;
    const double C24331 = C24313 + C24244;
    const double C24330 = C24312 + C24240;
    const double C24327 = C24309 + C24228;
    const double C25410 = C25398 + C25350;
    const double C25407 = C25395 + C25338;
    const double C25806 = C25803 + C25795;
    const double C26066 = C26060 + C26048;
    const double C26063 = C26057 + C26036;
    const double C26816 = C26813 + C26805;
    const double C48255 = C48237 + C48183;
    const double C48250 = C48232 + C48163;
    const double C48249 = C48231 + C48159;
    const double C48246 = C48228 + C48147;
    const double C50990 = C50987 + C50980;
    const double C28413 = C28403 + C28380;
    const double C28412 = C28402 + C28376;
    const double C28411 = C28401 + C28372;
    const double C28410 = C28400 + C28368;
    const double C28409 = C28399 + C28364;
    const double C28408 = C28398 + C28360;
    const double C28407 = C28397 + C28356;
    const double C28406 = C28396 + C28352;
    const double C28405 = C28395 + C28348;
    const double C28704 = C28700 + C28692;
    const double C28703 = C28699 + C28688;
    const double C28702 = C28698 + C28684;
    const double C28701 = C28697 + C28680;
    const double C29055 = C29047 + C29028;
    const double C29054 = C29046 + C29024;
    const double C29053 = C29045 + C29020;
    const double C29052 = C29044 + C29016;
    const double C29051 = C29043 + C29012;
    const double C29050 = C29042 + C29008;
    const double C29049 = C29041 + C29004;
    const double C29433 = C29429 + C29418;
    const double C29432 = C29428 + C29414;
    const double C29431 = C29427 + C29410;
    const double C30999 = C30996 + C30987;
    const double C30998 = C30995 + C30981;
    const double C30997 = C30994 + C30975;
    const double C31299 = C31289 + C31269;
    const double C31298 = C31288 + C31265;
    const double C31297 = C31287 + C31261;
    const double C31296 = C31286 + C31257;
    const double C31295 = C31285 + C31253;
    const double C31294 = C31284 + C31249;
    const double C31293 = C31283 + C31245;
    const double C31292 = C31282 + C31241;
    const double C31291 = C31281 + C31237;
    const double C31290 = C31280 + C31233;
    const double C31547 = C31543 + C31535;
    const double C31546 = C31542 + C31531;
    const double C31545 = C31541 + C31526;
    const double C31544 = C31540 + C31522;
    const double C31783 = C31781 + C31777;
    const double C31782 = C31780 + C31773;
    const double C32705 = C32702 + C32696;
    const double C32704 = C32701 + C32692;
    const double C32703 = C32700 + C32686;
    const double C34035 = C34034 + C34032;
    const double C44743 = C44742 + C44740;
    const double C56055 = C56052 + C56043;
    const double C56054 = C56051 + C56039;
    const double C56314 = C56312 + C56308;
    const double C56313 = C56311 + C56304;
    const double C56487 = C56486 + C56484;
    const double C56824 = C56823 + C56821;
    const double C35207 = C35191 + C35159;
    const double C35205 = C35189 + C35151;
    const double C35203 = C35187 + C35143;
    const double C35201 = C35185 + C35135;
    const double C35198 = C35182 + C35123;
    const double C35197 = C35181 + C35119;
    const double C35195 = C35179 + C35111;
    const double C35193 = C35177 + C35103;
    const double C35641 = C35635 + C35611;
    const double C36181 = C36169 + C36145;
    const double C36179 = C36167 + C36137;
    const double C36177 = C36165 + C36129;
    const double C36174 = C36162 + C36117;
    const double C36172 = C36160 + C36109;
    const double C36170 = C36158 + C36101;
    const double C36759 = C36753 + C36741;
    const double C36757 = C36751 + C36733;
    const double C36755 = C36749 + C36725;
    const double C39453 = C39441 + C39417;
    const double C39451 = C39439 + C39409;
    const double C39449 = C39437 + C39401;
    const double C39447 = C39435 + C39393;
    const double C39444 = C39432 + C39381;
    const double C39443 = C39431 + C39377;
    const double C40075 = C40073 + C40069;
    const double C41275 = C41271 + C41263;
    const double C41273 = C41269 + C41254;
    const double C43033 = C43031 + C43027;
    const double C58776 = C58772 + C58756;
    const double C60563 = C60561 + C60557;
    const double C62318 = C62316 + C62312;
    const double C63822 = C63820 + C63815;
    const double C70802 = C70786 + C70718;
    const double C99026 = C99010 + C98942;
    const double C74596 = C74580 + C74548;
    const double C74594 = C74578 + C74540;
    const double C74592 = C74576 + C74532;
    const double C74590 = C74574 + C74524;
    const double C74587 = C74571 + C74512;
    const double C74586 = C74570 + C74508;
    const double C74584 = C74568 + C74500;
    const double C74582 = C74566 + C74492;
    const double C75030 = C75024 + C75000;
    const double C75570 = C75558 + C75534;
    const double C75568 = C75556 + C75526;
    const double C75566 = C75554 + C75518;
    const double C75563 = C75551 + C75506;
    const double C75561 = C75549 + C75498;
    const double C75559 = C75547 + C75490;
    const double C76148 = C76142 + C76130;
    const double C76146 = C76140 + C76122;
    const double C76144 = C76138 + C76114;
    const double C78488 = C78484 + C78476;
    const double C78486 = C78482 + C78468;
    const double C78890 = C78874 + C78835;
    const double C78888 = C78872 + C78827;
    const double C78886 = C78870 + C78819;
    const double C78883 = C78867 + C78807;
    const double C78881 = C78865 + C78799;
    const double C78880 = C78864 + C78794;
    const double C78878 = C78862 + C78786;
    const double C79528 = C79524 + C79510;
    const double C80727 = C80723 + C80714;
    const double C80725 = C80721 + C80706;
    const double C82484 = C82482 + C82478;
    const double C107838 = C107836 + C107831;
    const double C83946 = C83928 + C83874;
    const double C83941 = C83923 + C83854;
    const double C83940 = C83922 + C83850;
    const double C83937 = C83919 + C83838;
    const double C85020 = C85008 + C84960;
    const double C85017 = C85005 + C84948;
    const double C85416 = C85413 + C85405;
    const double C85676 = C85670 + C85658;
    const double C85673 = C85667 + C85646;
    const double C86426 = C86423 + C86415;
    const double C88607 = C88592 + C88544;
    const double C88602 = C88587 + C88524;
    const double C88601 = C88586 + C88520;
    const double C92191 = C92188 + C92182;
    const double C119331 = C119328 + C119321;
    const double C3540 = C3522 - C3523;
    const double C11553 = C11522 - C11523;
    const double C24811 = C24793 - C24794;
    const double C70778 = C70747 - C70748;
    const double C84421 = C84403 - C84404;
    const double C3016 = C2986 - C2987;
    const double C11546 = C11494 - C11495;
    const double C24303 = C24273 - C24274;
    const double C35631 = C35616 - C35617;
    const double C70771 = C70719 - C70720;
    const double C75020 = C75005 - C75006;
    const double C83913 = C83883 - C83884;
    const double C8123 = C8105 - C8106;
    const double C15521 = C15490 - C15491;
    const double C48728 = C48710 - C48711;
    const double C89229 = C89223 - C89224;
    const double C99002 = C98971 - C98972;
    const double C7617 = C7587 - C7588;
    const double C15514 = C15462 - C15463;
    const double C48222 = C48192 - C48193;
    const double C59382 = C59377 - C59378;
    const double C79522 = C79515 - C79516;
    const double C88580 = C88553 - C88554;
    const double C98995 = C98943 - C98944;
    const double C4136 = C4112 - C4113;
    const double C12490 = C12458 - C12459;
    const double C25391 = C25367 - C25368;
    const double C39761 = C39748 - C39749;
    const double C71715 = C71683 - C71684;
    const double C79202 = C79189 - C79190;
    const double C85001 = C84977 - C84978;
    const double C152464 = C152462 + C152442;
    const double C152463 = C152461 + C152439;
    const double C152499 = C152488 + C152468;
    const double C3019 = C2998 - C2999;
    const double C12857 = C12850 - C12851;
    const double C24306 = C24285 - C24286;
    const double C35633 = C35624 - C35625;
    const double C72082 = C72075 - C72076;
    const double C75022 = C75013 - C75014;
    const double C83916 = C83895 - C83896;
    const double C8447 = C8441 - C8442;
    const double C13079 = C13072 - C13073;
    const double C49048 = C49042 - C49043;
    const double C59078 = C59073 - C59074;
    const double C72304 = C72297 - C72298;
    const double C79204 = C79197 - C79198;
    const double C88583 = C88565 - C88566;
    const double C4139 = C4124 - C4125;
    const double C13753 = C13746 - C13747;
    const double C25394 = C25379 - C25380;
    const double C39763 = C39756 - C39757;
    const double C72978 = C72971 - C72972;
    const double C85004 = C84989 - C84990;
    const double C94238 = C94233 - C94234;
    const double C7620 = C7599 - C7600;
    const double C17933 = C17926 - C17927;
    const double C48225 = C48204 - C48205;
    const double C64220 = C64215 - C64216;
    const double C101414 = C101407 - C101408;
    const double C108236 = C108231 - C108232;
    const double C116664 = C116656 - C116657;
    const double C9070 = C9067 + C9059;
    const double C49659 = C49656 + C49648;
    const double C58778 = C58774 + C58764;
    const double C67563 = C67562 + C67560;
    const double C78892 = C78876 + C78843;
    const double C90428 = C90425 + C90417;
    const double C152551 = C152549 + C152523;
    const double C152550 = C152548 + C152520;
    const double C28414 = C28404 + C28384;
    const double C36523 = C36521 + C36515;
    const double C75912 = C75910 + C75904;
    const double C29056 = C29048 + C29032;
    const double C37423 = C37421 + C37415;
    const double C76812 = C76810 + C76804;
    const double C29279 = C29278 + C29276;
    const double C29434 = C29430 + C29422;
    const double C29855 = C29854 + C29852;
    const double C56056 = C56053 + C56047;
    const double C66179 = C66177 + C66173;
    const double C110195 = C110193 + C110189;
    const double C57567 = C57566 + C57564;
    const double C11536 = C11279 * C332;
    const double C11534 = C11279 * C331;
    const double C11520 = C11279 * C318;
    const double C11518 = C11279 * C317;
    const double C11500 = C11279 * C330;
    const double C11498 = C11279 * C329;
    const double C11488 = C11279 * C320;
    const double C11486 = C11279 * C319;
    const double C11988 = C11279 * C316;
    const double C11986 = C11279 * C315;
    const double C12484 = C11279 * C958;
    const double C12482 = C11279 * C957;
    const double C12464 = C11279 * C956;
    const double C12462 = C11279 * C955;
    const double C12848 = C11279 * C1193;
    const double C12846 = C11279 * C1192;
    const double C13070 = C11279 * C1335;
    const double C13068 = C11279 * C1334;
    const double C13744 = C11279 * C1766;
    const double C13742 = C11279 * C1765;
    const double C15504 = C11279 * C505;
    const double C15502 = C11279 * C504;
    const double C15488 = C11279 * C491;
    const double C15486 = C11279 * C490;
    const double C15468 = C11279 * C503;
    const double C15466 = C11279 * C502;
    const double C15456 = C11279 * C493;
    const double C15454 = C11279 * C492;
    const double C15956 = C11279 * C489;
    const double C15954 = C11279 * C488;
    const double C17924 = C11279 * C2118;
    const double C17922 = C11279 * C2117;
    const double C70761 = C70504 * C332;
    const double C70759 = C70504 * C331;
    const double C70745 = C70504 * C318;
    const double C70743 = C70504 * C317;
    const double C70725 = C70504 * C330;
    const double C70723 = C70504 * C329;
    const double C70713 = C70504 * C320;
    const double C70711 = C70504 * C319;
    const double C71213 = C70504 * C316;
    const double C71211 = C70504 * C315;
    const double C71709 = C70504 * C958;
    const double C71707 = C70504 * C957;
    const double C71689 = C70504 * C956;
    const double C71687 = C70504 * C955;
    const double C72073 = C70504 * C1193;
    const double C72071 = C70504 * C1192;
    const double C72295 = C70504 * C1335;
    const double C72293 = C70504 * C1334;
    const double C72969 = C70504 * C1766;
    const double C72967 = C70504 * C1765;
    const double C98985 = C70504 * C505;
    const double C98983 = C70504 * C504;
    const double C98969 = C70504 * C491;
    const double C98967 = C70504 * C490;
    const double C98949 = C70504 * C503;
    const double C98947 = C70504 * C502;
    const double C98937 = C70504 * C493;
    const double C98935 = C70504 * C492;
    const double C99437 = C70504 * C489;
    const double C99435 = C70504 * C488;
    const double C101405 = C70504 * C2118;
    const double C101403 = C70504 * C2117;
    const double C152108 = C152107 / C152055;
    const double C24279 = C23992 * C1195;
    const double C24277 = C23992 * C1194;
    const double C24267 = C23992 * C328;
    const double C24265 = C23992 * C327;
    const double C24255 = C23992 * C322;
    const double C24253 = C23992 * C321;
    const double C24251 = C23992 * C1197;
    const double C24249 = C23992 * C1196;
    const double C24231 = C23992 * C326;
    const double C24229 = C23992 * C325;
    const double C24219 = C23992 * C324;
    const double C24217 = C23992 * C323;
    const double C24799 = C23992 * C330;
    const double C24797 = C23992 * C329;
    const double C24787 = C23992 * C320;
    const double C24785 = C23992 * C319;
    const double C25373 = C23992 * C1768;
    const double C25371 = C23992 * C1767;
    const double C25361 = C23992 * C954;
    const double C25359 = C23992 * C953;
    const double C25357 = C23992 * C952;
    const double C25355 = C23992 * C951;
    const double C25345 = C23992 * C1770;
    const double C25343 = C23992 * C1769;
    const double C25786 = C23992 * C2918;
    const double C25784 = C23992 * C2917;
    const double C26039 = C23992 * C3284;
    const double C26037 = C23992 * C3283;
    const double C26027 = C23992 * C1339;
    const double C26025 = C23992 * C1338;
    const double C26796 = C23992 * C4068;
    const double C26794 = C23992 * C4067;
    const double C48198 = C23992 * C2120;
    const double C48196 = C23992 * C2119;
    const double C48186 = C23992 * C501;
    const double C48184 = C23992 * C500;
    const double C48174 = C23992 * C495;
    const double C48172 = C23992 * C494;
    const double C48170 = C23992 * C2122;
    const double C48168 = C23992 * C2121;
    const double C48150 = C23992 * C499;
    const double C48148 = C23992 * C498;
    const double C48138 = C23992 * C497;
    const double C48136 = C23992 * C496;
    const double C48716 = C23992 * C503;
    const double C48714 = C23992 * C502;
    const double C48704 = C23992 * C493;
    const double C48702 = C23992 * C492;
    const double C49036 = C23992 * C1337;
    const double C49034 = C23992 * C1336;
    const double C49639 = C23992 * C6196;
    const double C49637 = C23992 * C6195;
    const double C50971 = C23992 * C7519;
    const double C50969 = C23992 * C7518;
    const double C126344 = C23992 * C956;
    const double C126342 = C23992 * C955;
    const double C152145 = C152141 - C152142;
    const double C23995 = C152141 + (C152135 * ae) / C152055;
    const double C152144 = C152140 / C152055;
    const double C35153 = C34898 * C2914;
    const double C35145 = C34898 * C1186;
    const double C35137 = C34898 * C309;
    const double C35129 = C34898 * C306;
    const double C35125 = C34898 * C2913;
    const double C35113 = C34898 * C1187;
    const double C35105 = C34898 * C308;
    const double C35097 = C34898 * C307;
    const double C35621 = C34898 * C1185;
    const double C35613 = C34898 * C310;
    const double C35605 = C34898 * C305;
    const double C36139 = C34898 * C4064;
    const double C36131 = C34898 * C1759;
    const double C36123 = C34898 * C946;
    const double C36119 = C34898 * C945;
    const double C36111 = C34898 * C1760;
    const double C36103 = C34898 * C4063;
    const double C36509 = C34898 * C4529;
    const double C36735 = C34898 * C4783;
    const double C36727 = C34898 * C3279;
    const double C36719 = C34898 * C1329;
    const double C37409 = C34898 * C5563;
    const double C39411 = C34898 * C3280;
    const double C39403 = C34898 * C1328;
    const double C39395 = C34898 * C482;
    const double C39387 = C34898 * C479;
    const double C39383 = C34898 * C481;
    const double C39371 = C34898 * C480;
    const double C39753 = C34898 * C1758;
    const double C39745 = C34898 * C947;
    const double C40063 = C34898 * C478;
    const double C41257 = C34898 * C6181;
    const double C41248 = C34898 * C6184;
    const double C43021 = C34898 * C2112;
    const double C58758 = C34898 * C6183;
    const double C58750 = C34898 * C2111;
    const double C59070 = C34898 * C1327;
    const double C59374 = C34898 * C483;
    const double C60551 = C34898 * C9037;
    const double C62306 = C34898 * C7514;
    const double C63809 = C34898 * C7515;
    const double C64212 = C34898 * C2110;
    const double C66167 = C34898 * C10380;
    const double C3017 = C2990 - C2991;
    const double C3014 = C2978 - C2979;
    const double C3011 = C2966 - C2967;
    const double C3010 = C2962 - C2963;
    const double C3005 = C2942 - C2943;
    const double C3002 = C2930 - C2931;
    const double C3541 = C3526 - C3527;
    const double C3538 = C3514 - C3515;
    const double C4137 = C4116 - C4117;
    const double C4134 = C4104 - C4105;
    const double C4133 = C4100 - C4101;
    const double C4130 = C4088 - C4089;
    const double C4554 = C4541 - C4542;
    const double C4821 = C4806 - C4807;
    const double C4818 = C4794 - C4795;
    const double C5588 = C5575 - C5576;
    const double C7618 = C7591 - C7592;
    const double C7615 = C7579 - C7580;
    const double C7612 = C7567 - C7568;
    const double C7611 = C7563 - C7564;
    const double C7606 = C7543 - C7544;
    const double C7603 = C7531 - C7532;
    const double C8124 = C8109 - C8110;
    const double C8121 = C8097 - C8098;
    const double C8445 = C8433 - C8434;
    const double C9061 = C9048 - C9049;
    const double C10405 = C10392 - C10393;
    const double C19664 = C19652 - C19653;
    const double C3018 = C2994 - C2995;
    const double C3015 = C2982 - C2983;
    const double C3012 = C2970 - C2971;
    const double C3009 = C2958 - C2959;
    const double C3006 = C2946 - C2947;
    const double C3003 = C2934 - C2935;
    const double C3542 = C3530 - C3531;
    const double C3539 = C3518 - C3519;
    const double C4138 = C4120 - C4121;
    const double C4135 = C4108 - C4109;
    const double C4132 = C4096 - C4097;
    const double C4129 = C4084 - C4085;
    const double C4555 = C4545 - C4546;
    const double C4822 = C4810 - C4811;
    const double C4819 = C4798 - C4799;
    const double C5589 = C5579 - C5580;
    const double C7619 = C7595 - C7596;
    const double C7616 = C7583 - C7584;
    const double C7613 = C7571 - C7572;
    const double C7610 = C7559 - C7560;
    const double C7607 = C7547 - C7548;
    const double C7604 = C7535 - C7536;
    const double C8125 = C8113 - C8114;
    const double C8122 = C8101 - C8102;
    const double C8446 = C8437 - C8438;
    const double C9062 = C9052 - C9053;
    const double C10406 = C10396 - C10397;
    const double C19665 = C19656 - C19657;
    const double C74563 = C74541 - C74542;
    const double C74561 = C74533 - C74534;
    const double C74559 = C74525 - C74526;
    const double C74557 = C74517 - C74518;
    const double C74556 = C74513 - C74514;
    const double C74553 = C74501 - C74502;
    const double C74551 = C74493 - C74494;
    const double C74549 = C74485 - C74486;
    const double C75021 = C75009 - C75010;
    const double C75019 = C75001 - C75002;
    const double C75017 = C74993 - C74994;
    const double C75545 = C75527 - C75528;
    const double C75543 = C75519 - C75520;
    const double C75541 = C75511 - C75512;
    const double C75540 = C75507 - C75508;
    const double C75538 = C75499 - C75500;
    const double C75536 = C75491 - C75492;
    const double C75907 = C75897 - C75898;
    const double C76135 = C76123 - C76124;
    const double C76133 = C76115 - C76116;
    const double C76131 = C76107 - C76108;
    const double C76807 = C76797 - C76798;
    const double C78479 = C78469 - C78470;
    const double C78477 = C78461 - C78462;
    const double C78859 = C78836 - C78837;
    const double C78857 = C78828 - C78829;
    const double C78855 = C78820 - C78821;
    const double C78853 = C78812 - C78813;
    const double C78852 = C78808 - C78809;
    const double C78850 = C78800 - C78801;
    const double C78847 = C78787 - C78788;
    const double C78845 = C78779 - C78780;
    const double C79203 = C79193 - C79194;
    const double C79201 = C79185 - C79186;
    const double C79521 = C79511 - C79512;
    const double C79519 = C79503 - C79504;
    const double C80718 = C80707 - C80708;
    const double C80716 = C80699 - C80700;
    const double C82479 = C82471 - C82472;
    const double C94237 = C94229 - C94230;
    const double C107833 = C107824 - C107825;
    const double C108235 = C108227 - C108228;
    const double C110190 = C110182 - C110183;
    const double C28423 = C28413 * C153637;
    const double C44338 = C28413 * C153864;
    const double C130869 = C28413 * C98536;
    const double C28422 = C28412 * C153637;
    const double C30982 = C28412 * C153937;
    const double C44336 = C28412 * C153864;
    const double C52096 = C28412 * C47696;
    const double C130867 = C28412 * C98536;
    const double C148438 = C28412 * C153720;
    const double C28421 = C28411 * C153637;
    const double C30976 = C28411 * C153937;
    const double C44334 = C28411 * C153864;
    const double C52093 = C28411 * C47696;
    const double C67162 = C28411 * C63414;
    const double C130865 = C28411 * C98536;
    const double C134411 = C28411 * C153944;
    const double C148435 = C28411 * C153720;
    const double C28420 = C28410 * C153637;
    const double C30970 = C28410 * C153937;
    const double C44332 = C28410 * C153864;
    const double C52090 = C28410 * C47696;
    const double C67158 = C28410 * C63414;
    const double C130863 = C28410 * C98536;
    const double C134407 = C28410 * C153944;
    const double C148432 = C28410 * C153720;
    const double C28419 = C28409 * C153637;
    const double C45535 = C28409 * C153864;
    const double C132059 = C28409 * C98536;
    const double C28418 = C28408 * C153637;
    const double C32455 = C28408 * C153937;
    const double C44331 = C28408 * C153864;
    const double C53430 = C28408 * C47696;
    const double C130862 = C28408 * C98536;
    const double C149772 = C28408 * C153720;
    const double C28417 = C28407 * C153637;
    const double C30969 = C28407 * C153937;
    const double C44328 = C28407 * C153864;
    const double C52089 = C28407 * C47696;
    const double C68349 = C28407 * C63414;
    const double C130859 = C28407 * C98536;
    const double C135591 = C28407 * C153944;
    const double C148431 = C28407 * C153720;
    const double C28416 = C28406 * C153637;
    const double C30964 = C28406 * C153937;
    const double C44326 = C28406 * C153864;
    const double C52084 = C28406 * C47696;
    const double C67157 = C28406 * C63414;
    const double C130857 = C28406 * C98536;
    const double C134406 = C28406 * C153944;
    const double C148426 = C28406 * C153720;
    const double C28415 = C28405 * C153637;
    const double C30961 = C28405 * C153937;
    const double C44324 = C28405 * C153864;
    const double C52081 = C28405 * C47696;
    const double C67150 = C28405 * C63414;
    const double C130855 = C28405 * C98536;
    const double C134399 = C28405 * C153944;
    const double C148423 = C28405 * C153720;
    const double C28708 = C28704 * C153637;
    const double C28707 = C28703 * C153637;
    const double C44736 = C28703 * C153864;
    const double C131267 = C28703 * C98536;
    const double C28706 = C28702 * C153637;
    const double C31527 = C28702 * C153937;
    const double C44734 = C28702 * C153864;
    const double C52542 = C28702 * C47696;
    const double C131265 = C28702 * C98536;
    const double C148884 = C28702 * C153720;
    const double C28705 = C28701 * C153637;
    const double C31518 = C28701 * C153937;
    const double C44732 = C28701 * C153864;
    const double C52539 = C28701 * C47696;
    const double C67554 = C28701 * C63414;
    const double C131263 = C28701 * C98536;
    const double C134803 = C28701 * C153944;
    const double C148881 = C28701 * C153720;
    const double C29063 = C29055 * C153637;
    const double C30983 = C29055 * C153926;
    const double C44337 = C29055 * C153724;
    const double C45207 = C29055 * C153864;
    const double C52097 = C29055 * C47697;
    const double C130868 = C29055 * C153724;
    const double C131731 = C29055 * C98536;
    const double C148439 = C29055 * C153727;
    const double C29062 = C29054 * C153637;
    const double C30977 = C29054 * C153926;
    const double C32087 = C29054 * C153937;
    const double C44335 = C29054 * C153724;
    const double C45205 = C29054 * C153864;
    const double C52094 = C29054 * C47697;
    const double C53062 = C29054 * C47696;
    const double C67163 = C29054 * C63415;
    const double C130866 = C29054 * C153724;
    const double C131729 = C29054 * C98536;
    const double C134412 = C29054 * C153941;
    const double C148436 = C29054 * C153727;
    const double C149404 = C29054 * C153720;
    const double C29061 = C29053 * C153637;
    const double C30971 = C29053 * C153926;
    const double C32084 = C29053 * C153937;
    const double C44333 = C29053 * C153724;
    const double C45203 = C29053 * C153864;
    const double C52091 = C29053 * C47697;
    const double C53059 = C29053 * C47696;
    const double C67159 = C29053 * C63415;
    const double C68021 = C29053 * C63414;
    const double C130864 = C29053 * C153724;
    const double C131727 = C29053 * C98536;
    const double C134408 = C29053 * C153941;
    const double C135263 = C29053 * C153944;
    const double C148433 = C29053 * C153727;
    const double C149401 = C29053 * C153720;
    const double C29060 = C29052 * C153637;
    const double C30962 = C29052 * C153926;
    const double C32083 = C29052 * C153937;
    const double C44325 = C29052 * C153724;
    const double C45202 = C29052 * C153864;
    const double C52082 = C29052 * C47697;
    const double C53058 = C29052 * C47696;
    const double C67151 = C29052 * C63415;
    const double C68020 = C29052 * C63414;
    const double C130856 = C29052 * C153724;
    const double C131726 = C29052 * C98536;
    const double C134400 = C29052 * C153941;
    const double C135262 = C29052 * C153944;
    const double C148424 = C29052 * C153727;
    const double C149400 = C29052 * C153720;
    const double C29059 = C29051 * C153637;
    const double C30965 = C29051 * C153926;
    const double C32080 = C29051 * C153937;
    const double C44327 = C29051 * C153724;
    const double C45200 = C29051 * C153864;
    const double C52085 = C29051 * C47697;
    const double C53055 = C29051 * C47696;
    const double C67156 = C29051 * C63415;
    const double C69197 = C29051 * C63414;
    const double C130858 = C29051 * C153724;
    const double C131724 = C29051 * C98536;
    const double C134405 = C29051 * C153941;
    const double C136439 = C29051 * C153944;
    const double C148427 = C29051 * C153727;
    const double C149397 = C29051 * C153720;
    const double C29058 = C29050 * C153637;
    const double C30968 = C29050 * C153926;
    const double C33435 = C29050 * C153937;
    const double C44329 = C29050 * C153724;
    const double C45198 = C29050 * C153864;
    const double C52088 = C29050 * C47697;
    const double C54385 = C29050 * C47696;
    const double C68350 = C29050 * C63415;
    const double C130860 = C29050 * C153724;
    const double C131722 = C29050 * C98536;
    const double C135592 = C29050 * C153941;
    const double C148430 = C29050 * C153727;
    const double C150727 = C29050 * C153720;
    const double C29057 = C29049 * C153637;
    const double C32456 = C29049 * C153926;
    const double C44330 = C29049 * C153724;
    const double C46385 = C29049 * C153864;
    const double C53431 = C29049 * C47697;
    const double C130861 = C29049 * C153724;
    const double C132909 = C29049 * C98536;
    const double C149773 = C29049 * C153727;
    const double C29437 = C29433 * C153637;
    const double C30967 = C29433 * C153901;
    const double C33436 = C29433 * C153926;
    const double C45197 = C29433 * C153724;
    const double C45735 = C29433 * C153864;
    const double C52087 = C29433 * C153901;
    const double C54386 = C29433 * C47697;
    const double C68351 = C29433 * C63416;
    const double C131721 = C29433 * C153724;
    const double C132259 = C29433 * C98536;
    const double C135593 = C29433 * C153932;
    const double C148429 = C29433 * C116209;
    const double C150728 = C29433 * C153727;
    const double C29436 = C29432 * C153637;
    const double C30966 = C29432 * C153901;
    const double C32079 = C29432 * C153926;
    const double C32687 = C29432 * C153937;
    const double C45199 = C29432 * C153724;
    const double C45733 = C29432 * C153864;
    const double C52086 = C29432 * C153901;
    const double C53054 = C29432 * C47697;
    const double C53655 = C29432 * C47696;
    const double C67155 = C29432 * C63416;
    const double C69198 = C29432 * C63415;
    const double C131723 = C29432 * C153724;
    const double C132257 = C29432 * C98536;
    const double C134404 = C29432 * C153932;
    const double C136440 = C29432 * C153941;
    const double C148428 = C29432 * C116209;
    const double C149396 = C29432 * C153727;
    const double C149997 = C29432 * C153720;
    const double C29435 = C29431 * C153637;
    const double C30963 = C29431 * C153901;
    const double C32082 = C29431 * C153926;
    const double C32681 = C29431 * C153937;
    const double C45201 = C29431 * C153724;
    const double C45731 = C29431 * C153864;
    const double C52083 = C29431 * C153901;
    const double C53057 = C29431 * C47697;
    const double C53652 = C29431 * C47696;
    const double C67152 = C29431 * C63416;
    const double C68019 = C29431 * C63415;
    const double C68547 = C29431 * C63414;
    const double C131725 = C29431 * C153724;
    const double C132255 = C29431 * C98536;
    const double C134401 = C29431 * C153932;
    const double C135261 = C29431 * C153941;
    const double C135789 = C29431 * C153944;
    const double C148425 = C29431 * C116209;
    const double C149399 = C29431 * C153727;
    const double C149994 = C29431 * C153720;
    const double C31002 = C30999 * C153901;
    const double C45208 = C30999 * C153724;
    const double C52098 = C30999 * C153901;
    const double C131732 = C30999 * C153724;
    const double C148440 = C30999 * C116209;
    const double C31001 = C30998 * C153901;
    const double C32088 = C30998 * C153926;
    const double C45206 = C30998 * C153724;
    const double C52095 = C30998 * C153901;
    const double C53063 = C30998 * C47697;
    const double C67164 = C30998 * C63416;
    const double C131730 = C30998 * C153724;
    const double C134413 = C30998 * C153932;
    const double C148437 = C30998 * C116209;
    const double C149405 = C30998 * C153727;
    const double C31000 = C30997 * C153901;
    const double C32085 = C30997 * C153926;
    const double C45204 = C30997 * C153724;
    const double C52092 = C30997 * C153901;
    const double C53060 = C30997 * C47697;
    const double C67160 = C30997 * C63416;
    const double C68022 = C30997 * C63415;
    const double C131728 = C30997 * C153724;
    const double C134409 = C30997 * C153932;
    const double C135264 = C30997 * C153941;
    const double C148434 = C30997 * C116209;
    const double C149402 = C30997 * C153727;
    const double C32089 = C31299 * C153901;
    const double C53064 = C31299 * C153901;
    const double C67165 = C31299 * C153878;
    const double C134414 = C31299 * C153878;
    const double C149406 = C31299 * C116209;
    const double C32086 = C31298 * C153901;
    const double C53061 = C31298 * C153901;
    const double C67161 = C31298 * C153878;
    const double C68023 = C31298 * C63416;
    const double C134410 = C31298 * C153878;
    const double C135265 = C31298 * C153932;
    const double C149403 = C31298 * C116209;
    const double C32081 = C31293 * C153901;
    const double C32682 = C31293 * C153926;
    const double C45732 = C31293 * C153724;
    const double C53056 = C31293 * C153901;
    const double C53653 = C31293 * C47697;
    const double C67153 = C31293 * C153878;
    const double C68018 = C31293 * C63416;
    const double C68548 = C31293 * C63415;
    const double C132256 = C31293 * C153724;
    const double C134402 = C31293 * C153878;
    const double C135260 = C31293 * C153932;
    const double C135790 = C31293 * C153941;
    const double C149398 = C31293 * C116209;
    const double C149995 = C31293 * C153727;
    const double C32078 = C31292 * C153901;
    const double C32688 = C31292 * C153926;
    const double C45734 = C31292 * C153724;
    const double C53053 = C31292 * C153901;
    const double C53656 = C31292 * C47697;
    const double C67154 = C31292 * C153878;
    const double C69199 = C31292 * C63416;
    const double C132258 = C31292 * C153724;
    const double C134403 = C31292 * C153878;
    const double C136441 = C31292 * C153932;
    const double C149395 = C31292 * C116209;
    const double C149998 = C31292 * C153727;
    const double C31551 = C31547 * C153901;
    const double C52544 = C31547 * C153901;
    const double C148886 = C31547 * C116209;
    const double C31550 = C31546 * C153926;
    const double C44735 = C31546 * C153724;
    const double C52543 = C31546 * C47697;
    const double C131266 = C31546 * C153724;
    const double C148885 = C31546 * C153727;
    const double C31549 = C31545 * C153901;
    const double C52541 = C31545 * C153901;
    const double C67556 = C31545 * C63416;
    const double C134805 = C31545 * C153932;
    const double C148883 = C31545 * C116209;
    const double C31548 = C31544 * C153926;
    const double C44733 = C31544 * C153724;
    const double C52540 = C31544 * C47697;
    const double C67555 = C31544 * C63415;
    const double C131264 = C31544 * C153724;
    const double C134804 = C31544 * C153941;
    const double C148882 = C31544 * C153727;
    const double C33437 = C32705 * C153901;
    const double C45736 = C32705 * C153724;
    const double C54387 = C32705 * C153901;
    const double C68352 = C32705 * C153878;
    const double C132260 = C32705 * C153724;
    const double C135594 = C32705 * C153878;
    const double C150729 = C32705 * C116209;
    const double C32707 = C32704 * C153901;
    const double C53657 = C32704 * C153901;
    const double C69200 = C32704 * C153878;
    const double C136442 = C32704 * C153878;
    const double C149999 = C32704 * C116209;
    const double C32706 = C32703 * C153901;
    const double C53654 = C32703 * C153901;
    const double C68017 = C32703 * C153878;
    const double C68549 = C32703 * C63416;
    const double C135259 = C32703 * C153878;
    const double C135791 = C32703 * C153932;
    const double C149996 = C32703 * C116209;
    const double C44744 = C44743 * C153724;
    const double C131268 = C44743 * C153724;
    const double C68024 = C56487 * C153878;
    const double C135266 = C56487 * C153878;
    const double C68550 = C56824 * C153878;
    const double C135792 = C56824 * C153878;
    const double C3546 = C3540 - C3524;
    const double C11569 = C11553 - C11524;
    const double C24817 = C24811 - C24795;
    const double C70794 = C70778 - C70749;
    const double C84427 = C84421 - C84405;
    const double C3034 = C3016 - C2988;
    const double C11562 = C11546 - C11496;
    const double C24321 = C24303 - C24275;
    const double C35637 = C35631 - C35618;
    const double C70787 = C70771 - C70721;
    const double C75026 = C75020 - C75007;
    const double C83931 = C83913 - C83885;
    const double C8129 = C8123 - C8107;
    const double C15537 = C15521 - C15492;
    const double C48734 = C48728 - C48712;
    const double C89232 = C89229 - C89225;
    const double C99018 = C99002 - C98973;
    const double C7635 = C7617 - C7589;
    const double C15530 = C15514 - C15464;
    const double C48240 = C48222 - C48194;
    const double C59384 = C59382 - C59379;
    const double C79526 = C79522 - C79517;
    const double C88595 = C88580 - C88555;
    const double C99011 = C98995 - C98945;
    const double C4148 = C4136 - C4114;
    const double C12498 = C12490 - C12460;
    const double C25403 = C25391 - C25369;
    const double C39765 = C39761 - C39750;
    const double C71723 = C71715 - C71685;
    const double C79206 = C79202 - C79191;
    const double C85013 = C85001 - C84979;
    const double C165 =
        (5 * (3 * C152338 + C152272 * C152391 + C152374 * ae) +
         C152272 * (4 * C152391 + C152272 * C152464 + C152445 * ae) +
         (4 * C152374 + C152272 * C152445) * ae) /
        C152055;
    const double C334 =
        (3 * C152338 + C152272 * C152391 + C152374 * ae + C152464 * C152575) /
        C152055;
    const double C336 =
        (C152559 * (4 * C152391 + C152272 * C152464 + C152445 * ae)) / C152055;
    const double C507 =
        (3 * C152338 + C152272 * C152391 + C152374 * ae + C152464 * C152648) /
        C152055;
    const double C509 =
        (C152632 * (4 * C152391 + C152272 * C152464 + C152445 * ae)) / C152055;
    const double C960 = (C152632 * C152559 * C152464) / C152055;
    const double C174 =
        (5 * (3 * C152385 + ae * C152390 + be * C152391 + C152272 * C152456) +
         ae * (4 * C152390 + C152272 * C152463 + C152445 * be) +
         be * (4 * C152391 + C152272 * C152464 + C152445 * ae) +
         C152272 *
             (4 * C152456 + ae * C152463 + be * C152464 +
              C152272 *
                  (3 * C152450 + ae * C152457 + be * C152458 +
                   C152272 *
                       (2 * C152443 + ae * C152448 + be * C152449 +
                        C152272 * (C152433 + ae * C152434 + be * C152436 +
                                   C152272 * (ae * C152422 + be * C152425 +
                                              C152272 *
                                                  (C152401 * C152402 +
                                                   C152276 * bs[8] *
                                                       std::pow(C152270, 8)) *
                                                  C152058)))))) /
        C152060;
    const double C349 =
        (4 * (2 * C152567 + ae * C152559 * C152383 + be * C152559 * C152384 +
              C152272 * C152608) +
         ae * C152559 * C152463 + be * C152559 * C152464 +
         C152272 *
             (3 * C152608 + ae * C152559 * C152457 + be * C152559 * C152458 +
              C152272 *
                  (2 * C152606 + ae * C152559 * C152448 +
                   be * C152559 * C152449 +
                   C152272 * (C152597 + ae * C152559 * C152434 +
                              be * C152559 * C152436 +
                              C152272 * (ae * C152559 * C152422 +
                                         be * C152559 * C152425 +
                                         C152272 * C152559 * C152514))))) /
        C152060;
    const double C522 =
        (4 * (2 * C152640 + ae * C152632 * C152383 + be * C152632 * C152384 +
              C152272 * C152681) +
         ae * C152632 * C152463 + be * C152632 * C152464 +
         C152272 *
             (3 * C152681 + ae * C152632 * C152457 + be * C152632 * C152458 +
              C152272 *
                  (2 * C152679 + ae * C152632 * C152448 +
                   be * C152632 * C152449 +
                   C152272 * (C152670 + ae * C152632 * C152434 +
                              be * C152632 * C152436 +
                              C152272 * (ae * C152632 * C152422 +
                                         be * C152632 * C152425 +
                                         C152272 * C152632 * C152514))))) /
        C152060;
    const double C164 =
        (5 * (3 * C152337 + C152272 * C152390 + C152374 * be) +
         C152272 * (4 * C152390 + C152272 * C152463 + C152445 * be) +
         (4 * C152374 + C152272 * C152445) * be) /
        C152055;
    const double C333 =
        (3 * C152337 + C152272 * C152390 + C152374 * be + C152463 * C152575) /
        C152055;
    const double C335 =
        (C152559 * (4 * C152390 + C152272 * C152463 + C152445 * be)) / C152055;
    const double C506 =
        (3 * C152337 + C152272 * C152390 + C152374 * be + C152463 * C152648) /
        C152055;
    const double C508 =
        (C152632 * (4 * C152390 + C152272 * C152463 + C152445 * be)) / C152055;
    const double C959 = (C152632 * C152559 * C152463) / C152055;
    const double C152547 = C152499 + C152544;
    const double C3037 = C3019 - C3000;
    const double C12861 = C12857 - C12852;
    const double C24324 = C24306 - C24287;
    const double C35639 = C35633 - C35626;
    const double C72086 = C72082 - C72077;
    const double C75028 = C75022 - C75015;
    const double C83934 = C83916 - C83897;
    const double C8450 = C8447 - C8443;
    const double C13083 = C13079 - C13074;
    const double C49051 = C49048 - C49044;
    const double C59080 = C59078 - C59075;
    const double C72308 = C72304 - C72299;
    const double C79208 = C79204 - C79199;
    const double C88598 = C88583 - C88567;
    const double C4151 = C4139 - C4126;
    const double C13757 = C13753 - C13748;
    const double C25406 = C25394 - C25381;
    const double C39767 = C39763 - C39758;
    const double C72982 = C72978 - C72973;
    const double C85016 = C85004 - C84991;
    const double C94240 = C94238 - C94235;
    const double C7638 = C7620 - C7601;
    const double C17937 = C17933 - C17928;
    const double C48243 = C48225 - C48206;
    const double C64222 = C64220 - C64217;
    const double C101418 = C101414 - C101409;
    const double C108238 = C108236 - C108233;
    const double C116668 = C116664 - C116658;
    const double C67564 = C67563 * C153878;
    const double C134806 = C67563 * C153878;
    const double C152553 = C152272 * C152551;
    const double C1189 =
        (2 * C152559 * C152464 + C152559 * (C152464 + C152551 * C152575)) /
        C152055;
    const double C1331 =
        (C152559 * C152464 + C152559 * C152551 * C152648) / C152055;
    const double C1762 = (C152632 * (C152464 + C152551 * C152575)) / C152055;
    const double C2114 =
        (2 * C152632 * C152464 + C152632 * (C152464 + C152551 * C152648)) /
        C152055;
    const double C152552 = C152272 * C152550;
    const double C350 =
        (4 * (2 * C152591 + ae * (C152383 + C152448 * C152575) +
              be * (C152384 + C152449 * C152575) + C152272 * C152630) +
         ae * (C152463 + C152550 * C152575) +
         be * (C152464 + C152551 * C152575) +
         C152272 *
             (3 * C152630 + ae * (C152457 + C152542 * C152575) +
              be * (C152458 + C152543 * C152575) +
              C152272 *
                  (2 * C152628 + ae * (C152448 + C152529 * C152575) +
                   be * (C152449 + C152532 * C152575) +
                   C152272 *
                       (C152619 + ae * (C152434 + C152515 * C152575) +
                        be * (C152436 + C152517 * C152575) +
                        C152272 *
                            (ae * (C152422 + C152503 * C152575) +
                             be * (C152425 + C152506 * C152575) +
                             C152272 * (C152514 + (C152477 * C152478 +
                                                   C152276 * bs[9] *
                                                       std::pow(C152278, 9)) *
                                                      C152058 * C152575)))))) /
        C152060;
    const double C523 =
        (4 * (2 * C152664 + ae * (C152383 + C152448 * C152648) +
              be * (C152384 + C152449 * C152648) + C152272 * C152703) +
         ae * (C152463 + C152550 * C152648) +
         be * (C152464 + C152551 * C152648) +
         C152272 *
             (3 * C152703 + ae * (C152457 + C152542 * C152648) +
              be * (C152458 + C152543 * C152648) +
              C152272 *
                  (2 * C152701 + ae * (C152448 + C152529 * C152648) +
                   be * (C152449 + C152532 * C152648) +
                   C152272 *
                       (C152692 + ae * (C152434 + C152515 * C152648) +
                        be * (C152436 + C152517 * C152648) +
                        C152272 *
                            (ae * (C152422 + C152503 * C152648) +
                             be * (C152425 + C152506 * C152648) +
                             C152272 * (C152514 + (C152477 * C152478 +
                                                   C152276 * bs[9] *
                                                       std::pow(C152278, 9)) *
                                                      C152058 * C152648)))))) /
        C152060;
    const double C968 =
        (4 * (2 * C152769 + ae * C152632 * C152706 + be * C152632 * C152707 +
              C152272 * C152786) +
         ae * C152632 * C152559 * C152550 + be * C152632 * C152559 * C152551 +
         C152272 *
             (3 * C152786 + ae * C152632 * C152559 * C152542 +
              be * C152632 * C152559 * C152543 +
              C152272 *
                  (2 * C152784 + ae * C152632 * C152559 * C152529 +
                   be * C152632 * C152559 * C152532 +
                   C152272 * (C152775 + ae * C152632 * C152559 * C152515 +
                              be * C152632 * C152559 * C152517 +
                              C152272 * (ae * C152632 * C152559 * C152503 +
                                         be * C152632 * C152559 * C152506 +
                                         C152272 * C152632 * C152559 *
                                             (C152477 * C152478 +
                                              C152276 * bs[9] *
                                                  std::pow(C152278, 9)) *
                                             C152058))))) /
        C152060;
    const double C1188 =
        (2 * C152559 * C152463 + C152559 * (C152463 + C152550 * C152575)) /
        C152055;
    const double C1330 =
        (C152559 * C152463 + C152559 * C152550 * C152648) / C152055;
    const double C1761 = (C152632 * (C152463 + C152550 * C152575)) / C152055;
    const double C2113 =
        (2 * C152632 * C152463 + C152632 * (C152463 + C152550 * C152648)) /
        C152055;
    const double C28424 = C28414 * C153637;
    const double C29064 = C29056 * C153637;
    const double C44339 = C29056 * C153724;
    const double C130870 = C29056 * C153724;
    const double C29280 = C29279 * C153637;
    const double C29438 = C29434 * C153637;
    const double C32457 = C29434 * C153901;
    const double C46386 = C29434 * C153724;
    const double C53432 = C29434 * C153901;
    const double C132910 = C29434 * C153724;
    const double C149774 = C29434 * C116209;
    const double C29856 = C29855 * C153637;
    const double C45536 = C29855 * C153724;
    const double C132060 = C29855 * C153724;
    const double C152109 = C152092 - C152108;
    const double C83892 = C152145 * C1185;
    const double C83880 = C152145 * C310;
    const double C83868 = C152145 * C305;
    const double C83856 = C152145 * C1186;
    const double C83844 = C152145 * C309;
    const double C83832 = C152145 * C306;
    const double C84412 = C152145 * C311;
    const double C84400 = C152145 * C304;
    const double C84986 = C152145 * C1758;
    const double C84974 = C152145 * C947;
    const double C84962 = C152145 * C946;
    const double C84950 = C152145 * C1759;
    const double C85399 = C152145 * C2914;
    const double C85652 = C152145 * C3280;
    const double C85640 = C152145 * C1328;
    const double C86409 = C152145 * C4064;
    const double C88562 = C152145 * C1327;
    const double C88550 = C152145 * C483;
    const double C88538 = C152145 * C478;
    const double C88526 = C152145 * C482;
    const double C88514 = C152145 * C479;
    const double C88909 = C152145 * C948;
    const double C89220 = C152145 * C477;
    const double C90411 = C152145 * C6183;
    const double C92176 = C152145 * C2111;
    const double C116653 = C152145 * C2110;
    const double C117113 = C152145 * C484;
    const double C119315 = C152145 * C7515;
    const double C141 =
        (C152145 / C152061 + ((C152160 - C152128 / C152161) * ae) / C152055) /
            C152061 -
        ((2 * (C152156 / C152061 + (0 * ae) / C152055) -
          C152128 / (C152055 * 4 * C152113)) *
         be) /
            C152055;
    const double C11280 =
        C152145 / C152061 - ((C152160 - C152128 / C152161) * be) / C152055;
    const double C70505 =
        C152145 / C152061 + ((C152160 - C152128 / C152161) * ae) / C152055;
    const double C24282 = C23995 * C1185;
    const double C24270 = C23995 * C310;
    const double C24258 = C23995 * C305;
    const double C24246 = C23995 * C1186;
    const double C24234 = C23995 * C309;
    const double C24222 = C23995 * C306;
    const double C24802 = C23995 * C311;
    const double C24790 = C23995 * C304;
    const double C25376 = C23995 * C1758;
    const double C25364 = C23995 * C947;
    const double C25352 = C23995 * C946;
    const double C25340 = C23995 * C1759;
    const double C25789 = C23995 * C2914;
    const double C26042 = C23995 * C3280;
    const double C26030 = C23995 * C1328;
    const double C26799 = C23995 * C4064;
    const double C48201 = C23995 * C2110;
    const double C48189 = C23995 * C483;
    const double C48177 = C23995 * C478;
    const double C48165 = C23995 * C2111;
    const double C48153 = C23995 * C482;
    const double C48141 = C23995 * C479;
    const double C48719 = C23995 * C484;
    const double C48707 = C23995 * C477;
    const double C49039 = C23995 * C1327;
    const double C49642 = C23995 * C6183;
    const double C50974 = C23995 * C7515;
    const double C126347 = C23995 * C948;
    const double C152146 = C152144 + C152119;
    const double C35174 = C35152 - C35153;
    const double C35172 = C35144 - C35145;
    const double C35170 = C35136 - C35137;
    const double C35168 = C35128 - C35129;
    const double C35167 = C35124 - C35125;
    const double C35164 = C35112 - C35113;
    const double C35162 = C35104 - C35105;
    const double C35160 = C35096 - C35097;
    const double C35632 = C35620 - C35621;
    const double C35630 = C35612 - C35613;
    const double C35628 = C35604 - C35605;
    const double C36156 = C36138 - C36139;
    const double C36154 = C36130 - C36131;
    const double C36152 = C36122 - C36123;
    const double C36151 = C36118 - C36119;
    const double C36149 = C36110 - C36111;
    const double C36147 = C36102 - C36103;
    const double C36518 = C36508 - C36509;
    const double C36746 = C36734 - C36735;
    const double C36744 = C36726 - C36727;
    const double C36742 = C36718 - C36719;
    const double C37418 = C37408 - C37409;
    const double C39428 = C39410 - C39411;
    const double C39426 = C39402 - C39403;
    const double C39424 = C39394 - C39395;
    const double C39422 = C39386 - C39387;
    const double C39421 = C39382 - C39383;
    const double C39418 = C39370 - C39371;
    const double C39762 = C39752 - C39753;
    const double C39760 = C39744 - C39745;
    const double C40070 = C40062 - C40063;
    const double C41266 = C41256 - C41257;
    const double C41264 = C41247 - C41248;
    const double C43028 = C43020 - C43021;
    const double C58769 = C58757 - C58758;
    const double C58767 = C58749 - C58750;
    const double C59077 = C59069 - C59070;
    const double C59381 = C59373 - C59374;
    const double C60558 = C60550 - C60551;
    const double C62313 = C62305 - C62306;
    const double C63817 = C63808 - C63809;
    const double C64219 = C64211 - C64212;
    const double C66174 = C66166 - C66167;
    const double C3035 = C3017 - C2992;
    const double C3032 = C3014 - C2980;
    const double C3029 = C3011 - C2968;
    const double C3028 = C3010 - C2964;
    const double C3023 = C3005 - C2944;
    const double C3020 = C3002 - C2932;
    const double C3547 = C3541 - C3528;
    const double C3544 = C3538 - C3516;
    const double C4149 = C4137 - C4118;
    const double C4146 = C4134 - C4106;
    const double C4145 = C4133 - C4102;
    const double C4142 = C4130 - C4090;
    const double C4558 = C4554 - C4543;
    const double C4827 = C4821 - C4808;
    const double C4824 = C4818 - C4796;
    const double C5592 = C5588 - C5577;
    const double C7636 = C7618 - C7593;
    const double C7633 = C7615 - C7581;
    const double C7630 = C7612 - C7569;
    const double C7629 = C7611 - C7565;
    const double C7624 = C7606 - C7545;
    const double C7621 = C7603 - C7533;
    const double C8130 = C8124 - C8111;
    const double C8127 = C8121 - C8099;
    const double C8448 = C8445 - C8435;
    const double C9065 = C9061 - C9050;
    const double C10408 = C10405 - C10394;
    const double C19667 = C19664 - C19654;
    const double C3036 = C3018 - C2996;
    const double C3033 = C3015 - C2984;
    const double C3030 = C3012 - C2972;
    const double C3027 = C3009 - C2960;
    const double C3024 = C3006 - C2948;
    const double C3021 = C3003 - C2936;
    const double C3548 = C3542 - C3532;
    const double C3545 = C3539 - C3520;
    const double C4150 = C4138 - C4122;
    const double C4147 = C4135 - C4110;
    const double C4144 = C4132 - C4098;
    const double C4141 = C4129 - C4086;
    const double C4559 = C4555 - C4547;
    const double C4828 = C4822 - C4812;
    const double C4825 = C4819 - C4800;
    const double C5593 = C5589 - C5581;
    const double C7637 = C7619 - C7597;
    const double C7634 = C7616 - C7585;
    const double C7631 = C7613 - C7573;
    const double C7628 = C7610 - C7561;
    const double C7625 = C7607 - C7549;
    const double C7622 = C7604 - C7537;
    const double C8131 = C8125 - C8115;
    const double C8128 = C8122 - C8103;
    const double C8449 = C8446 - C8439;
    const double C9066 = C9062 - C9054;
    const double C10409 = C10406 - C10398;
    const double C19668 = C19665 - C19658;
    const double C74579 = C74563 - C74543;
    const double C74577 = C74561 - C74535;
    const double C74575 = C74559 - C74527;
    const double C74573 = C74557 - C74519;
    const double C74572 = C74556 - C74515;
    const double C74569 = C74553 - C74503;
    const double C74567 = C74551 - C74495;
    const double C74565 = C74549 - C74487;
    const double C75027 = C75021 - C75011;
    const double C75025 = C75019 - C75003;
    const double C75023 = C75017 - C74995;
    const double C75557 = C75545 - C75529;
    const double C75555 = C75543 - C75521;
    const double C75553 = C75541 - C75513;
    const double C75552 = C75540 - C75509;
    const double C75550 = C75538 - C75501;
    const double C75548 = C75536 - C75493;
    const double C75909 = C75907 - C75899;
    const double C76141 = C76135 - C76125;
    const double C76139 = C76133 - C76117;
    const double C76137 = C76131 - C76109;
    const double C76809 = C76807 - C76799;
    const double C78483 = C78479 - C78471;
    const double C78481 = C78477 - C78463;
    const double C78875 = C78859 - C78838;
    const double C78873 = C78857 - C78830;
    const double C78871 = C78855 - C78822;
    const double C78869 = C78853 - C78814;
    const double C78868 = C78852 - C78810;
    const double C78866 = C78850 - C78802;
    const double C78863 = C78847 - C78789;
    const double C78861 = C78845 - C78781;
    const double C79207 = C79203 - C79195;
    const double C79205 = C79201 - C79187;
    const double C79525 = C79521 - C79513;
    const double C79523 = C79519 - C79505;
    const double C80722 = C80718 - C80709;
    const double C80720 = C80716 - C80701;
    const double C82481 = C82479 - C82473;
    const double C94239 = C94237 - C94231;
    const double C107835 = C107833 - C107826;
    const double C108237 = C108235 - C108229;
    const double C110192 = C110190 - C110184;
    const double C44342 = C44337 + C44336;
    const double C130873 = C130868 + C130867;
    const double C30992 = C30977 + C30976;
    const double C44343 = C44335 + C44334;
    const double C52100 = C52094 + C52093;
    const double C130874 = C130866 + C130865;
    const double C148442 = C148436 + C148435;
    const double C30988 = C30964 + C30965;
    const double C44340 = C44326 + C44327;
    const double C52099 = C52084 + C52085;
    const double C130871 = C130857 + C130858;
    const double C148441 = C148426 + C148427;
    const double C32454 = C30968 + C30969;
    const double C44341 = C44328 + C44329;
    const double C45534 = C44329 + C44328;
    const double C53429 = C52088 + C52089;
    const double C130872 = C130859 + C130860;
    const double C132058 = C130860 + C130859;
    const double C149771 = C148430 + C148431;
    const double C45533 = C44330 + C44331;
    const double C132057 = C130861 + C130862;
    const double C46383 = C45197 + C45198;
    const double C132907 = C131721 + C131722;
    const double C33434 = C32079 + C32080;
    const double C46384 = C45199 + C45200;
    const double C54384 = C53054 + C53055;
    const double C132908 = C131723 + C131724;
    const double C150726 = C149396 + C149397;
    const double C3552 = C3546 + C3525;
    const double C11585 = C11569 + C11525;
    const double C24823 = C24817 + C24796;
    const double C70810 = C70794 + C70750;
    const double C84433 = C84427 + C84406;
    const double C3052 = C3034 + C2989;
    const double C11578 = C11562 + C11497;
    const double C24339 = C24321 + C24276;
    const double C35643 = C35637 + C35619;
    const double C70803 = C70787 + C70722;
    const double C75032 = C75026 + C75008;
    const double C83949 = C83931 + C83886;
    const double C8135 = C8129 + C8108;
    const double C15553 = C15537 + C15493;
    const double C48740 = C48734 + C48713;
    const double C89235 = C89232 + C89226;
    const double C99034 = C99018 + C98974;
    const double C7653 = C7635 + C7590;
    const double C15546 = C15530 + C15465;
    const double C48258 = C48240 + C48195;
    const double C59386 = C59384 + C59380;
    const double C79530 = C79526 + C79518;
    const double C88610 = C88595 + C88556;
    const double C99027 = C99011 + C98946;
    const double C4160 = C4148 + C4115;
    const double C12506 = C12498 + C12461;
    const double C25415 = C25403 + C25370;
    const double C39769 = C39765 + C39751;
    const double C71731 = C71723 + C71686;
    const double C79210 = C79206 + C79192;
    const double C85025 = C85013 + C84980;
    const double C3536 = C2693 * C334;
    const double C11540 = C11281 * C334;
    const double C24807 = C23996 * C334;
    const double C70765 = C70506 * C334;
    const double C84417 = C152156 * C334;
    const double C11992 = C11281 * C336;
    const double C71217 = C70506 * C336;
    const double C8119 = C2693 * C507;
    const double C15508 = C11281 * C507;
    const double C48724 = C23996 * C507;
    const double C98989 = C70506 * C507;
    const double C117118 = C152156 * C507;
    const double C15960 = C11281 * C509;
    const double C99441 = C70506 * C509;
    const double C12488 = C11281 * C960;
    const double C19662 = C2693 * C960;
    const double C71713 = C70506 * C960;
    const double C88914 = C152156 * C960;
    const double C126352 = C23996 * C960;
    const double C11993 = C153862 * C349;
    const double C71218 = C153862 * C349;
    const double C15961 = C153862 * C522;
    const double C99442 = C153862 * C522;
    const double C3534 = C2693 * C333;
    const double C11538 = C11281 * C333;
    const double C24805 = C23996 * C333;
    const double C70763 = C70506 * C333;
    const double C84415 = C152156 * C333;
    const double C11990 = C11281 * C335;
    const double C71215 = C70506 * C335;
    const double C8117 = C2693 * C506;
    const double C15506 = C11281 * C506;
    const double C48722 = C23996 * C506;
    const double C98987 = C70506 * C506;
    const double C117116 = C152156 * C506;
    const double C15958 = C11281 * C508;
    const double C99439 = C70506 * C508;
    const double C12486 = C11281 * C959;
    const double C19660 = C2693 * C959;
    const double C71711 = C70506 * C959;
    const double C88912 = C152156 * C959;
    const double C126350 = C23996 * C959;
    const double C3055 = C3037 + C3001;
    const double C12865 = C12861 + C12853;
    const double C24342 = C24324 + C24288;
    const double C35645 = C35639 + C35627;
    const double C72090 = C72086 + C72078;
    const double C75034 = C75028 + C75016;
    const double C83952 = C83934 + C83898;
    const double C8453 = C8450 + C8444;
    const double C13087 = C13083 + C13075;
    const double C49054 = C49051 + C49045;
    const double C59082 = C59080 + C59076;
    const double C72312 = C72308 + C72300;
    const double C79212 = C79208 + C79200;
    const double C88613 = C88598 + C88568;
    const double C4163 = C4151 + C4127;
    const double C13761 = C13757 + C13749;
    const double C25418 = C25406 + C25382;
    const double C39771 = C39767 + C39759;
    const double C72986 = C72982 + C72974;
    const double C85028 = C85016 + C84992;
    const double C94242 = C94240 + C94236;
    const double C7656 = C7638 + C7602;
    const double C17941 = C17937 + C17929;
    const double C48261 = C48243 + C48207;
    const double C64224 = C64222 + C64218;
    const double C101422 = C101418 + C101410;
    const double C108240 = C108238 + C108234;
    const double C116671 = C116668 + C116659;
    const double C152555 = C152485 + C152553;
    const double C152554 = C152479 + C152552;
    const double C152110 = C152109 + C152081;
    const double C83915 = C83891 - C83892;
    const double C83912 = C83879 - C83880;
    const double C83909 = C83867 - C83868;
    const double C83906 = C83855 - C83856;
    const double C83903 = C83843 - C83844;
    const double C83900 = C83831 - C83832;
    const double C84423 = C84411 - C84412;
    const double C84420 = C84399 - C84400;
    const double C85003 = C84985 - C84986;
    const double C85000 = C84973 - C84974;
    const double C84997 = C84961 - C84962;
    const double C84994 = C84949 - C84950;
    const double C85408 = C85398 - C85399;
    const double C85663 = C85651 - C85652;
    const double C85660 = C85639 - C85640;
    const double C86418 = C86408 - C86409;
    const double C88582 = C88561 - C88562;
    const double C88579 = C88549 - C88550;
    const double C88576 = C88537 - C88538;
    const double C88573 = C88525 - C88526;
    const double C88570 = C88513 - C88514;
    const double C88917 = C88908 - C88909;
    const double C89228 = C89219 - C89220;
    const double C90421 = C90410 - C90411;
    const double C92184 = C92175 - C92176;
    const double C116663 = C116652 - C116653;
    const double C117121 = C117112 - C117113;
    const double C119324 = C119314 - C119315;
    const double C11535 = C11280 * C311;
    const double C11519 = C11280 * C304;
    const double C11499 = C11280 * C310;
    const double C11487 = C11280 * C305;
    const double C11987 = C11280 * C303;
    const double C12483 = C11280 * C948;
    const double C12463 = C11280 * C947;
    const double C12847 = C11280 * C1185;
    const double C13069 = C11280 * C1327;
    const double C13743 = C11280 * C1758;
    const double C15503 = C11280 * C484;
    const double C15487 = C11280 * C477;
    const double C15467 = C11280 * C483;
    const double C15455 = C11280 * C478;
    const double C15955 = C11280 * C476;
    const double C17923 = C11280 * C2110;
    const double C70760 = C70505 * C311;
    const double C70744 = C70505 * C304;
    const double C70724 = C70505 * C310;
    const double C70712 = C70505 * C305;
    const double C71212 = C70505 * C303;
    const double C71708 = C70505 * C948;
    const double C71688 = C70505 * C947;
    const double C72072 = C70505 * C1185;
    const double C72294 = C70505 * C1327;
    const double C72968 = C70505 * C1758;
    const double C98984 = C70505 * C484;
    const double C98968 = C70505 * C477;
    const double C98948 = C70505 * C483;
    const double C98936 = C70505 * C478;
    const double C99436 = C70505 * C476;
    const double C101404 = C70505 * C2110;
    const double C24305 = C24281 - C24282;
    const double C24302 = C24269 - C24270;
    const double C24299 = C24257 - C24258;
    const double C24296 = C24245 - C24246;
    const double C24293 = C24233 - C24234;
    const double C24290 = C24221 - C24222;
    const double C24813 = C24801 - C24802;
    const double C24810 = C24789 - C24790;
    const double C25393 = C25375 - C25376;
    const double C25390 = C25363 - C25364;
    const double C25387 = C25351 - C25352;
    const double C25384 = C25339 - C25340;
    const double C25798 = C25788 - C25789;
    const double C26053 = C26041 - C26042;
    const double C26050 = C26029 - C26030;
    const double C26808 = C26798 - C26799;
    const double C48224 = C48200 - C48201;
    const double C48221 = C48188 - C48189;
    const double C48218 = C48176 - C48177;
    const double C48215 = C48164 - C48165;
    const double C48212 = C48152 - C48153;
    const double C48209 = C48140 - C48141;
    const double C48730 = C48718 - C48719;
    const double C48727 = C48706 - C48707;
    const double C49047 = C49038 - C49039;
    const double C49651 = C49641 - C49642;
    const double C50983 = C50973 - C50974;
    const double C126355 = C126346 - C126347;
    const double C152147 = C152146 * be;
    const double C23993 = C152127 + (C152146 * ae) / C152055 - C152129;
    const double C35190 = C35174 - C35154;
    const double C35188 = C35172 - C35146;
    const double C35186 = C35170 - C35138;
    const double C35184 = C35168 - C35130;
    const double C35183 = C35167 - C35126;
    const double C35180 = C35164 - C35114;
    const double C35178 = C35162 - C35106;
    const double C35176 = C35160 - C35098;
    const double C35638 = C35632 - C35622;
    const double C35636 = C35630 - C35614;
    const double C35634 = C35628 - C35606;
    const double C36168 = C36156 - C36140;
    const double C36166 = C36154 - C36132;
    const double C36164 = C36152 - C36124;
    const double C36163 = C36151 - C36120;
    const double C36161 = C36149 - C36112;
    const double C36159 = C36147 - C36104;
    const double C36520 = C36518 - C36510;
    const double C36752 = C36746 - C36736;
    const double C36750 = C36744 - C36728;
    const double C36748 = C36742 - C36720;
    const double C37420 = C37418 - C37410;
    const double C39440 = C39428 - C39412;
    const double C39438 = C39426 - C39404;
    const double C39436 = C39424 - C39396;
    const double C39434 = C39422 - C39388;
    const double C39433 = C39421 - C39384;
    const double C39430 = C39418 - C39372;
    const double C39766 = C39762 - C39754;
    const double C39764 = C39760 - C39746;
    const double C40072 = C40070 - C40064;
    const double C41270 = C41266 - C41258;
    const double C41268 = C41264 - C41249;
    const double C43030 = C43028 - C43022;
    const double C58773 = C58769 - C58759;
    const double C58771 = C58767 - C58751;
    const double C59079 = C59077 - C59071;
    const double C59383 = C59381 - C59375;
    const double C60560 = C60558 - C60552;
    const double C62315 = C62313 - C62307;
    const double C63819 = C63817 - C63810;
    const double C64221 = C64219 - C64213;
    const double C66176 = C66174 - C66168;
    const double C3053 = C3035 + C2993;
    const double C3050 = C3032 + C2981;
    const double C3047 = C3029 + C2969;
    const double C3046 = C3028 + C2965;
    const double C3041 = C3023 + C2945;
    const double C3038 = C3020 + C2933;
    const double C3553 = C3547 + C3529;
    const double C3550 = C3544 + C3517;
    const double C4161 = C4149 + C4119;
    const double C4158 = C4146 + C4107;
    const double C4157 = C4145 + C4103;
    const double C4154 = C4142 + C4091;
    const double C4561 = C4558 + C4544;
    const double C4833 = C4827 + C4809;
    const double C4830 = C4824 + C4797;
    const double C5595 = C5592 + C5578;
    const double C7654 = C7636 + C7594;
    const double C7651 = C7633 + C7582;
    const double C7648 = C7630 + C7570;
    const double C7647 = C7629 + C7566;
    const double C7642 = C7624 + C7546;
    const double C7639 = C7621 + C7534;
    const double C8136 = C8130 + C8112;
    const double C8133 = C8127 + C8100;
    const double C8451 = C8448 + C8436;
    const double C9068 = C9065 + C9051;
    const double C10411 = C10408 + C10395;
    const double C19670 = C19667 + C19655;
    const double C3054 = C3036 + C2997;
    const double C3051 = C3033 + C2985;
    const double C3048 = C3030 + C2973;
    const double C3045 = C3027 + C2961;
    const double C3042 = C3024 + C2949;
    const double C3039 = C3021 + C2937;
    const double C3554 = C3548 + C3533;
    const double C3551 = C3545 + C3521;
    const double C4162 = C4150 + C4123;
    const double C4159 = C4147 + C4111;
    const double C4156 = C4144 + C4099;
    const double C4153 = C4141 + C4087;
    const double C4562 = C4559 + C4548;
    const double C4834 = C4828 + C4813;
    const double C4831 = C4825 + C4801;
    const double C5596 = C5593 + C5582;
    const double C7655 = C7637 + C7598;
    const double C7652 = C7634 + C7586;
    const double C7649 = C7631 + C7574;
    const double C7646 = C7628 + C7562;
    const double C7643 = C7625 + C7550;
    const double C7640 = C7622 + C7538;
    const double C8137 = C8131 + C8116;
    const double C8134 = C8128 + C8104;
    const double C8452 = C8449 + C8440;
    const double C9069 = C9066 + C9055;
    const double C10412 = C10409 + C10399;
    const double C19671 = C19668 + C19659;
    const double C74595 = C74579 + C74544;
    const double C74593 = C74577 + C74536;
    const double C74591 = C74575 + C74528;
    const double C74589 = C74573 + C74520;
    const double C74588 = C74572 + C74516;
    const double C74585 = C74569 + C74504;
    const double C74583 = C74567 + C74496;
    const double C74581 = C74565 + C74488;
    const double C75033 = C75027 + C75012;
    const double C75031 = C75025 + C75004;
    const double C75029 = C75023 + C74996;
    const double C75569 = C75557 + C75530;
    const double C75567 = C75555 + C75522;
    const double C75565 = C75553 + C75514;
    const double C75564 = C75552 + C75510;
    const double C75562 = C75550 + C75502;
    const double C75560 = C75548 + C75494;
    const double C75911 = C75909 + C75900;
    const double C76147 = C76141 + C76126;
    const double C76145 = C76139 + C76118;
    const double C76143 = C76137 + C76110;
    const double C76811 = C76809 + C76800;
    const double C78487 = C78483 + C78472;
    const double C78485 = C78481 + C78464;
    const double C78891 = C78875 + C78839;
    const double C78889 = C78873 + C78831;
    const double C78887 = C78871 + C78823;
    const double C78885 = C78869 + C78815;
    const double C78884 = C78868 + C78811;
    const double C78882 = C78866 + C78803;
    const double C78879 = C78863 + C78790;
    const double C78877 = C78861 + C78782;
    const double C79211 = C79207 + C79196;
    const double C79209 = C79205 + C79188;
    const double C79529 = C79525 + C79514;
    const double C79527 = C79523 + C79506;
    const double C80726 = C80722 + C80710;
    const double C80724 = C80720 + C80702;
    const double C82483 = C82481 + C82474;
    const double C94241 = C94239 + C94232;
    const double C107837 = C107835 + C107827;
    const double C108239 = C108237 + C108230;
    const double C110194 = C110192 + C110185;
    const double C31003 = C31001 + C30992;
    const double C52102 = C52095 + C52100;
    const double C148444 = C148437 + C148442;
    const double C30993 = C30988 + C30966;
    const double C52101 = C52099 + C52086;
    const double C148443 = C148441 + C148428;
    const double C32458 = C30967 + C32454;
    const double C53433 = C52087 + C53429;
    const double C149775 = C148429 + C149771;
    const double C33438 = C32078 + C33434;
    const double C54388 = C53053 + C54384;
    const double C150730 = C149395 + C150726;
    const double C3543 = C3534 - C3535;
    const double C11557 = C11538 - C11539;
    const double C24814 = C24805 - C24806;
    const double C70782 = C70763 - C70764;
    const double C84424 = C84415 - C84416;
    const double C11997 = C11990 - C11991;
    const double C71222 = C71215 - C71216;
    const double C8126 = C8117 - C8118;
    const double C15525 = C15506 - C15507;
    const double C48731 = C48722 - C48723;
    const double C99006 = C98987 - C98988;
    const double C117122 = C117116 - C117117;
    const double C15965 = C15958 - C15959;
    const double C99446 = C99439 - C99440;
    const double C12497 = C12486 - C12487;
    const double C19666 = C19660 - C19661;
    const double C71722 = C71711 - C71712;
    const double C88918 = C88912 - C88913;
    const double C126356 = C126350 - C126351;
    const double C152557 = C152555 + C152533;
    const double C152556 = C152554 + C152530;
    const double C83889 = C152110 * C1195;
    const double C83887 = C152110 * C1194;
    const double C83877 = C152110 * C328;
    const double C83875 = C152110 * C327;
    const double C83865 = C152110 * C322;
    const double C83863 = C152110 * C321;
    const double C83861 = C152110 * C1197;
    const double C83859 = C152110 * C1196;
    const double C83841 = C152110 * C326;
    const double C83839 = C152110 * C325;
    const double C83829 = C152110 * C324;
    const double C83827 = C152110 * C323;
    const double C84409 = C152110 * C330;
    const double C84407 = C152110 * C329;
    const double C84397 = C152110 * C320;
    const double C84395 = C152110 * C319;
    const double C84983 = C152110 * C1768;
    const double C84981 = C152110 * C1767;
    const double C84971 = C152110 * C954;
    const double C84969 = C152110 * C953;
    const double C84967 = C152110 * C952;
    const double C84965 = C152110 * C951;
    const double C84955 = C152110 * C1770;
    const double C84953 = C152110 * C1769;
    const double C85396 = C152110 * C2918;
    const double C85394 = C152110 * C2917;
    const double C85649 = C152110 * C3284;
    const double C85647 = C152110 * C3283;
    const double C85637 = C152110 * C1339;
    const double C85635 = C152110 * C1338;
    const double C86406 = C152110 * C4068;
    const double C86404 = C152110 * C4067;
    const double C88559 = C152110 * C1337;
    const double C88557 = C152110 * C1336;
    const double C88547 = C152110 * C501;
    const double C88545 = C152110 * C500;
    const double C88535 = C152110 * C495;
    const double C88533 = C152110 * C494;
    const double C88531 = C152110 * C499;
    const double C88529 = C152110 * C498;
    const double C88511 = C152110 * C497;
    const double C88509 = C152110 * C496;
    const double C88906 = C152110 * C956;
    const double C88904 = C152110 * C955;
    const double C89217 = C152110 * C493;
    const double C89215 = C152110 * C492;
    const double C90408 = C152110 * C6196;
    const double C90406 = C152110 * C6195;
    const double C92173 = C152110 * C2122;
    const double C92171 = C152110 * C2121;
    const double C116650 = C152110 * C2120;
    const double C116648 = C152110 * C2119;
    const double C117110 = C152110 * C503;
    const double C117108 = C152110 * C502;
    const double C119312 = C152110 * C7519;
    const double C119310 = C152110 * C7518;
    const double C134 =
        (((((0 - (C152053 * C152054) / C152055) * ae) / C152055 -
           (0 * be) / C152067 + (2 * C152056) / C152055) /
              C152061 -
          ((C152053 * C152090 + 0) * be) / C152055 + C152073 - C152083) /
             C152061 +
         ((C152053 * C152104 + 0) * ae) / C152055) /
            C152061 -
        ((C152053 * (C152104 / C152061 +
                     ((C152053 * C152110 + C153467) * ae) / C152055 + C152106) +
          C153942) *
         be) /
            C152055 +
        C152110 / C152061 + ((C152053 * C152106 + C153475) * ae) / C152055 +
        2 * (C152081 / C152061 - (0 * be) / C152055);
    const double C136 =
        (C152104 / C152061 + ((C152053 * C152110 + C153467) * ae) / C152055 +
         C152106) /
            C152061 -
        ((C152053 *
              (C152110 / C152061 +
               ((C152053 * C152106 + C153475) * ae) / C152055 + 2 * C152156) +
          C153935) *
         be) /
            C152055 +
        2 * (C152106 / C152061 + ((C152053 * C152156 + C83598) * ae) / C152055);
    const double C138 =
        (C152110 / C152061 + ((C152053 * C152106 + C153475) * ae) / C152055 +
         C152160) /
            C152061 -
        ((C152053 * (C152106 / C152061 +
                     ((C152053 * C152156 + C83598) * ae) / C152055) +
          C153916) *
         be) /
            C152055 +
        3 * (C152156 / C152061 + (0 * ae) / C152055);
    const double C11275 = C152104 / C152061 -
                          ((C152053 * C152110 + C153467) * be) / C152055 +
                          C152106;
    const double C11277 = C152110 / C152061 -
                          ((C152053 * C152106 + C153475) * be) / C152055 +
                          C152160;
    const double C70500 = C152104 / C152061 +
                          ((C152053 * C152110 + C153467) * ae) / C152055 +
                          C152106;
    const double C70502 = C152110 / C152061 +
                          ((C152053 * C152106 + C153475) * ae) / C152055 +
                          C152160;
    const double C83933 = C83915 - C83893;
    const double C83930 = C83912 - C83881;
    const double C83927 = C83909 - C83869;
    const double C83924 = C83906 - C83857;
    const double C83921 = C83903 - C83845;
    const double C83918 = C83900 - C83833;
    const double C84429 = C84423 - C84413;
    const double C84426 = C84420 - C84401;
    const double C85015 = C85003 - C84987;
    const double C85012 = C85000 - C84975;
    const double C85009 = C84997 - C84963;
    const double C85006 = C84994 - C84951;
    const double C85412 = C85408 - C85400;
    const double C85669 = C85663 - C85653;
    const double C85666 = C85660 - C85641;
    const double C86422 = C86418 - C86410;
    const double C88597 = C88582 - C88563;
    const double C88594 = C88579 - C88551;
    const double C88591 = C88576 - C88539;
    const double C88588 = C88573 - C88527;
    const double C88585 = C88570 - C88515;
    const double C88920 = C88917 - C88910;
    const double C89231 = C89228 - C89221;
    const double C90424 = C90421 - C90412;
    const double C92187 = C92184 - C92177;
    const double C116667 = C116663 - C116654;
    const double C117124 = C117121 - C117114;
    const double C119327 = C119324 - C119316;
    const double C11556 = C11534 - C11535;
    const double C11552 = C11518 - C11519;
    const double C11547 = C11498 - C11499;
    const double C11544 = C11486 - C11487;
    const double C11996 = C11986 - C11987;
    const double C12496 = C12482 - C12483;
    const double C12491 = C12462 - C12463;
    const double C12856 = C12846 - C12847;
    const double C13078 = C13068 - C13069;
    const double C13752 = C13742 - C13743;
    const double C15524 = C15502 - C15503;
    const double C15520 = C15486 - C15487;
    const double C15515 = C15466 - C15467;
    const double C15512 = C15454 - C15455;
    const double C15964 = C15954 - C15955;
    const double C17932 = C17922 - C17923;
    const double C70781 = C70759 - C70760;
    const double C70777 = C70743 - C70744;
    const double C70772 = C70723 - C70724;
    const double C70769 = C70711 - C70712;
    const double C71221 = C71211 - C71212;
    const double C71721 = C71707 - C71708;
    const double C71716 = C71687 - C71688;
    const double C72081 = C72071 - C72072;
    const double C72303 = C72293 - C72294;
    const double C72977 = C72967 - C72968;
    const double C99005 = C98983 - C98984;
    const double C99001 = C98967 - C98968;
    const double C98996 = C98947 - C98948;
    const double C98993 = C98935 - C98936;
    const double C99445 = C99435 - C99436;
    const double C101413 = C101403 - C101404;
    const double C24323 = C24305 - C24283;
    const double C24320 = C24302 - C24271;
    const double C24317 = C24299 - C24259;
    const double C24314 = C24296 - C24247;
    const double C24311 = C24293 - C24235;
    const double C24308 = C24290 - C24223;
    const double C24819 = C24813 - C24803;
    const double C24816 = C24810 - C24791;
    const double C25405 = C25393 - C25377;
    const double C25402 = C25390 - C25365;
    const double C25399 = C25387 - C25353;
    const double C25396 = C25384 - C25341;
    const double C25802 = C25798 - C25790;
    const double C26059 = C26053 - C26043;
    const double C26056 = C26050 - C26031;
    const double C26812 = C26808 - C26800;
    const double C48242 = C48224 - C48202;
    const double C48239 = C48221 - C48190;
    const double C48236 = C48218 - C48178;
    const double C48233 = C48215 - C48166;
    const double C48230 = C48212 - C48154;
    const double C48227 = C48209 - C48142;
    const double C48736 = C48730 - C48720;
    const double C48733 = C48727 - C48708;
    const double C49050 = C49047 - C49040;
    const double C49655 = C49651 - C49643;
    const double C50986 = C50983 - C50975;
    const double C126358 = C126355 - C126348;
    const double C152148 = C152147 / C152055;
    const double C24278 = C23993 * C1186;
    const double C24266 = C23993 * C309;
    const double C24254 = C23993 * C306;
    const double C24250 = C23993 * C1187;
    const double C24230 = C23993 * C308;
    const double C24218 = C23993 * C307;
    const double C24798 = C23993 * C310;
    const double C24786 = C23993 * C305;
    const double C25372 = C23993 * C1759;
    const double C25360 = C23993 * C946;
    const double C25356 = C23993 * C945;
    const double C25344 = C23993 * C1760;
    const double C25785 = C23993 * C2913;
    const double C26038 = C23993 * C3279;
    const double C26026 = C23993 * C1329;
    const double C26795 = C23993 * C4063;
    const double C48197 = C23993 * C2111;
    const double C48185 = C23993 * C482;
    const double C48173 = C23993 * C479;
    const double C48169 = C23993 * C2112;
    const double C48149 = C23993 * C481;
    const double C48137 = C23993 * C480;
    const double C48715 = C23993 * C483;
    const double C48703 = C23993 * C478;
    const double C49035 = C23993 * C1328;
    const double C49638 = C23993 * C6184;
    const double C50970 = C23993 * C7514;
    const double C126343 = C23993 * C947;
    const double C35206 = C35190 + C35155;
    const double C35204 = C35188 + C35147;
    const double C35202 = C35186 + C35139;
    const double C35200 = C35184 + C35131;
    const double C35199 = C35183 + C35127;
    const double C35196 = C35180 + C35115;
    const double C35194 = C35178 + C35107;
    const double C35192 = C35176 + C35099;
    const double C35644 = C35638 + C35623;
    const double C35642 = C35636 + C35615;
    const double C35640 = C35634 + C35607;
    const double C36180 = C36168 + C36141;
    const double C36178 = C36166 + C36133;
    const double C36176 = C36164 + C36125;
    const double C36175 = C36163 + C36121;
    const double C36173 = C36161 + C36113;
    const double C36171 = C36159 + C36105;
    const double C36522 = C36520 + C36511;
    const double C36758 = C36752 + C36737;
    const double C36756 = C36750 + C36729;
    const double C36754 = C36748 + C36721;
    const double C37422 = C37420 + C37411;
    const double C39452 = C39440 + C39413;
    const double C39450 = C39438 + C39405;
    const double C39448 = C39436 + C39397;
    const double C39446 = C39434 + C39389;
    const double C39445 = C39433 + C39385;
    const double C39442 = C39430 + C39373;
    const double C39770 = C39766 + C39755;
    const double C39768 = C39764 + C39747;
    const double C40074 = C40072 + C40065;
    const double C41274 = C41270 + C41259;
    const double C41272 = C41268 + C41250;
    const double C43032 = C43030 + C43023;
    const double C58777 = C58773 + C58760;
    const double C58775 = C58771 + C58752;
    const double C59081 = C59079 + C59072;
    const double C59385 = C59383 + C59376;
    const double C60562 = C60560 + C60553;
    const double C62317 = C62315 + C62308;
    const double C63821 = C63819 + C63811;
    const double C64223 = C64221 + C64214;
    const double C66178 = C66176 + C66169;
    const double C3057 = C3051 + C3050;
    const double C4540 = C3045 + C3046;
    const double C3056 = C3041 + C3042;
    const double C20352 = C4159 + C4158;
    const double C20351 = C4158 + C4159;
    const double C20350 = C4156 + C4157;
    const double C20349 = C4157 + C4156;
    const double C5574 = C4153 + C4154;
    const double C22099 = C4154 + C4153;
    const double C9060 = C4831 + C4830;
    const double C21131 = C4830 + C4831;
    const double C7658 = C7652 + C7651;
    const double C10391 = C7646 + C7647;
    const double C7657 = C7642 + C7643;
    const double C74599 = C74594 + C74593;
    const double C74600 = C74592 + C74591;
    const double C75895 = C74587 + C74588;
    const double C74598 = C74585 + C74586;
    const double C75896 = C74586 + C74585;
    const double C74597 = C74583 + C74584;
    const double C93644 = C75568 + C75567;
    const double C94919 = C75567 + C75568;
    const double C79922 = C75566 + C75565;
    const double C79920 = C75565 + C75566;
    const double C79919 = C75563 + C75564;
    const double C79917 = C75564 + C75563;
    const double C76796 = C75561 + C75562;
    const double C81694 = C75562 + C75561;
    const double C76795 = C75559 + C75560;
    const double C96665 = C75560 + C75559;
    const double C80715 = C76146 + C76145;
    const double C81695 = C76145 + C76146;
    const double C78795 = C76143 + C76144;
    const double C79918 = C76144 + C76143;
    const double C78844 = C78486 + C78485;
    const double C79921 = C78485 + C78486;
    const double C107832 = C78890 + C78889;
    const double C78894 = C78888 + C78887;
    const double C82470 = C78883 + C78884;
    const double C107823 = C78884 + C78883;
    const double C80698 = C78882 + C78881;
    const double C80697 = C78881 + C78882;
    const double C78893 = C78879 + C78880;
    const double C110181 = C82484 + C82483;
    const double C3549 = C3543 - C3536;
    const double C11573 = C11557 - C11540;
    const double C24820 = C24814 - C24807;
    const double C70798 = C70782 - C70765;
    const double C84430 = C84424 - C84417;
    const double C12001 = C11997 - C11992;
    const double C71226 = C71222 - C71217;
    const double C8132 = C8126 - C8119;
    const double C15541 = C15525 - C15508;
    const double C48737 = C48731 - C48724;
    const double C99022 = C99006 - C98989;
    const double C117125 = C117122 - C117118;
    const double C15969 = C15965 - C15960;
    const double C99450 = C99446 - C99441;
    const double C12505 = C12497 - C12488;
    const double C19669 = C19666 - C19662;
    const double C71730 = C71722 - C71713;
    const double C88921 = C88918 - C88914;
    const double C126359 = C126356 - C126352;
    const double C167 =
        (6 * (4 * C152391 + C152272 * C152464 + C152445 * ae) +
         C152272 * (5 * C152464 + C152272 * C152557 + C152536 * ae) +
         (5 * C152445 + C152272 * C152536) * ae) /
        C152055;
    const double C338 =
        (4 * C152391 + C152272 * C152464 + C152445 * ae + C152557 * C152575) /
        C152055;
    const double C511 =
        (4 * C152391 + C152272 * C152464 + C152445 * ae + C152557 * C152648) /
        C152055;
    const double C653 =
        (C152559 * (5 * C152464 + C152272 * C152557 + C152536 * ae)) / C152055;
    const double C781 =
        (C152632 * (5 * C152464 + C152272 * C152557 + C152536 * ae)) / C152055;
    const double C962 = (C152632 * C152559 * C152557) / C152055;
    const double C175 =
        (6 * (4 * C152456 + ae * C152463 + be * C152464 + C152272 * C152547) +
         ae * (5 * C152463 + C152272 * C152556 + C152536 * be) +
         be * (5 * C152464 + C152272 * C152557 + C152536 * ae) +
         C152272 *
             (5 * C152547 + ae * C152556 + be * C152557 +
              C152272 *
                  (4 * C152541 + ae * C152550 + be * C152551 +
                   C152272 *
                       (3 * C152534 + ae * C152542 + be * C152543 +
                        C152272 *
                            (2 * C152524 + ae * C152529 + be * C152532 +
                             C152272 *
                                 (C152514 + ae * C152515 + be * C152517 +
                                  C152272 * (ae * C152503 + be * C152506 +
                                             C152272 *
                                                 (C152477 * C152478 +
                                                  C152276 * bs[9] *
                                                      std::pow(C152278, 9)) *
                                                 C152058))))))) /
        C152060;
    const double C654 =
        (5 * (3 * C152608 + ae * C152559 * C152457 + be * C152559 * C152458 +
              C152272 * C152729) +
         ae * C152559 * C152556 + be * C152559 * C152557 +
         C152272 *
             (4 * C152729 + ae * C152559 * C152550 + be * C152559 * C152551 +
              C152272 *
                  (3 * C152727 + ae * C152559 * C152542 +
                   be * C152559 * C152543 +
                   C152272 *
                       (2 * C152725 + ae * C152559 * C152529 +
                        be * C152559 * C152532 +
                        C152272 * (C152712 + ae * C152559 * C152515 +
                                   be * C152559 * C152517 +
                                   C152272 * (ae * C152559 * C152503 +
                                              be * C152559 * C152506 +
                                              C152272 * C152559 *
                                                  (C152477 * C152478 +
                                                   C152276 * bs[9] *
                                                       std::pow(C152278, 9)) *
                                                  C152058)))))) /
        C152060;
    const double C782 =
        (5 * (3 * C152681 + ae * C152632 * C152457 + be * C152632 * C152458 +
              C152272 * C152755) +
         ae * C152632 * C152556 + be * C152632 * C152557 +
         C152272 *
             (4 * C152755 + ae * C152632 * C152550 + be * C152632 * C152551 +
              C152272 *
                  (3 * C152753 + ae * C152632 * C152542 +
                   be * C152632 * C152543 +
                   C152272 *
                       (2 * C152751 + ae * C152632 * C152529 +
                        be * C152632 * C152532 +
                        C152272 * (C152738 + ae * C152632 * C152515 +
                                   be * C152632 * C152517 +
                                   C152272 * (ae * C152632 * C152503 +
                                              be * C152632 * C152506 +
                                              C152272 * C152632 *
                                                  (C152477 * C152478 +
                                                   C152276 * bs[9] *
                                                       std::pow(C152278, 9)) *
                                                  C152058)))))) /
        C152060;
    const double C166 =
        (6 * (4 * C152390 + C152272 * C152463 + C152445 * be) +
         C152272 * (5 * C152463 + C152272 * C152556 + C152536 * be) +
         (5 * C152445 + C152272 * C152536) * be) /
        C152055;
    const double C337 =
        (4 * C152390 + C152272 * C152463 + C152445 * be + C152556 * C152575) /
        C152055;
    const double C510 =
        (4 * C152390 + C152272 * C152463 + C152445 * be + C152556 * C152648) /
        C152055;
    const double C652 =
        (C152559 * (5 * C152463 + C152272 * C152556 + C152536 * be)) / C152055;
    const double C780 =
        (C152632 * (5 * C152463 + C152272 * C152556 + C152536 * be)) / C152055;
    const double C961 = (C152632 * C152559 * C152556) / C152055;
    const double C11528 = C11275 * C328;
    const double C11526 = C11275 * C327;
    const double C11512 = C11275 * C322;
    const double C11510 = C11275 * C321;
    const double C11508 = C11275 * C326;
    const double C11506 = C11275 * C325;
    const double C11480 = C11275 * C324;
    const double C11478 = C11275 * C323;
    const double C11980 = C11275 * C320;
    const double C11978 = C11275 * C319;
    const double C12476 = C11275 * C954;
    const double C12474 = C11275 * C953;
    const double C12472 = C11275 * C952;
    const double C12470 = C11275 * C951;
    const double C12840 = C11275 * C1197;
    const double C12838 = C11275 * C1196;
    const double C13062 = C11275 * C1339;
    const double C13060 = C11275 * C1338;
    const double C13736 = C11275 * C1770;
    const double C13734 = C11275 * C1769;
    const double C15496 = C11275 * C501;
    const double C15494 = C11275 * C500;
    const double C15480 = C11275 * C495;
    const double C15478 = C11275 * C494;
    const double C15476 = C11275 * C499;
    const double C15474 = C11275 * C498;
    const double C15448 = C11275 * C497;
    const double C15446 = C11275 * C496;
    const double C15948 = C11275 * C493;
    const double C15946 = C11275 * C492;
    const double C17916 = C11275 * C2122;
    const double C17914 = C11275 * C2121;
    const double C11532 = C11277 * C330;
    const double C11530 = C11277 * C329;
    const double C11516 = C11277 * C320;
    const double C11514 = C11277 * C319;
    const double C11504 = C11277 * C328;
    const double C11502 = C11277 * C327;
    const double C11484 = C11277 * C322;
    const double C11482 = C11277 * C321;
    const double C11984 = C11277 * C318;
    const double C11982 = C11277 * C317;
    const double C12480 = C11277 * C956;
    const double C12478 = C11277 * C955;
    const double C12468 = C11277 * C954;
    const double C12466 = C11277 * C953;
    const double C12844 = C11277 * C1195;
    const double C12842 = C11277 * C1194;
    const double C13066 = C11277 * C1337;
    const double C13064 = C11277 * C1336;
    const double C13740 = C11277 * C1768;
    const double C13738 = C11277 * C1767;
    const double C15500 = C11277 * C503;
    const double C15498 = C11277 * C502;
    const double C15484 = C11277 * C493;
    const double C15482 = C11277 * C492;
    const double C15472 = C11277 * C501;
    const double C15470 = C11277 * C500;
    const double C15452 = C11277 * C495;
    const double C15450 = C11277 * C494;
    const double C15952 = C11277 * C491;
    const double C15950 = C11277 * C490;
    const double C17920 = C11277 * C2120;
    const double C17918 = C11277 * C2119;
    const double C70753 = C70500 * C328;
    const double C70751 = C70500 * C327;
    const double C70737 = C70500 * C322;
    const double C70735 = C70500 * C321;
    const double C70733 = C70500 * C326;
    const double C70731 = C70500 * C325;
    const double C70705 = C70500 * C324;
    const double C70703 = C70500 * C323;
    const double C71205 = C70500 * C320;
    const double C71203 = C70500 * C319;
    const double C71701 = C70500 * C954;
    const double C71699 = C70500 * C953;
    const double C71697 = C70500 * C952;
    const double C71695 = C70500 * C951;
    const double C72065 = C70500 * C1197;
    const double C72063 = C70500 * C1196;
    const double C72287 = C70500 * C1339;
    const double C72285 = C70500 * C1338;
    const double C72961 = C70500 * C1770;
    const double C72959 = C70500 * C1769;
    const double C98977 = C70500 * C501;
    const double C98975 = C70500 * C500;
    const double C98961 = C70500 * C495;
    const double C98959 = C70500 * C494;
    const double C98957 = C70500 * C499;
    const double C98955 = C70500 * C498;
    const double C98929 = C70500 * C497;
    const double C98927 = C70500 * C496;
    const double C99429 = C70500 * C493;
    const double C99427 = C70500 * C492;
    const double C101397 = C70500 * C2122;
    const double C101395 = C70500 * C2121;
    const double C70757 = C70502 * C330;
    const double C70755 = C70502 * C329;
    const double C70741 = C70502 * C320;
    const double C70739 = C70502 * C319;
    const double C70729 = C70502 * C328;
    const double C70727 = C70502 * C327;
    const double C70709 = C70502 * C322;
    const double C70707 = C70502 * C321;
    const double C71209 = C70502 * C318;
    const double C71207 = C70502 * C317;
    const double C71705 = C70502 * C956;
    const double C71703 = C70502 * C955;
    const double C71693 = C70502 * C954;
    const double C71691 = C70502 * C953;
    const double C72069 = C70502 * C1195;
    const double C72067 = C70502 * C1194;
    const double C72291 = C70502 * C1337;
    const double C72289 = C70502 * C1336;
    const double C72965 = C70502 * C1768;
    const double C72963 = C70502 * C1767;
    const double C98981 = C70502 * C503;
    const double C98979 = C70502 * C502;
    const double C98965 = C70502 * C493;
    const double C98963 = C70502 * C492;
    const double C98953 = C70502 * C501;
    const double C98951 = C70502 * C500;
    const double C98933 = C70502 * C495;
    const double C98931 = C70502 * C494;
    const double C99433 = C70502 * C491;
    const double C99431 = C70502 * C490;
    const double C101401 = C70502 * C2120;
    const double C101399 = C70502 * C2119;
    const double C83951 = C83933 + C83894;
    const double C83948 = C83930 + C83882;
    const double C83945 = C83927 + C83870;
    const double C83942 = C83924 + C83858;
    const double C83939 = C83921 + C83846;
    const double C83936 = C83918 + C83834;
    const double C84435 = C84429 + C84414;
    const double C84432 = C84426 + C84402;
    const double C85027 = C85015 + C84988;
    const double C85024 = C85012 + C84976;
    const double C85021 = C85009 + C84964;
    const double C85018 = C85006 + C84952;
    const double C85415 = C85412 + C85401;
    const double C85675 = C85669 + C85654;
    const double C85672 = C85666 + C85642;
    const double C86425 = C86422 + C86411;
    const double C88612 = C88597 + C88564;
    const double C88609 = C88594 + C88552;
    const double C88606 = C88591 + C88540;
    const double C88603 = C88588 + C88528;
    const double C88600 = C88585 + C88516;
    const double C88923 = C88920 + C88911;
    const double C89234 = C89231 + C89222;
    const double C90427 = C90424 + C90413;
    const double C92190 = C92187 + C92178;
    const double C116670 = C116667 + C116655;
    const double C117127 = C117124 + C117115;
    const double C119330 = C119327 + C119317;
    const double C11572 = C11556 - C11536;
    const double C11568 = C11552 - C11520;
    const double C11563 = C11547 - C11500;
    const double C11560 = C11544 - C11488;
    const double C12000 = C11996 - C11988;
    const double C12504 = C12496 - C12484;
    const double C12499 = C12491 - C12464;
    const double C12860 = C12856 - C12848;
    const double C13082 = C13078 - C13070;
    const double C13756 = C13752 - C13744;
    const double C15540 = C15524 - C15504;
    const double C15536 = C15520 - C15488;
    const double C15531 = C15515 - C15468;
    const double C15528 = C15512 - C15456;
    const double C15968 = C15964 - C15956;
    const double C17936 = C17932 - C17924;
    const double C70797 = C70781 - C70761;
    const double C70793 = C70777 - C70745;
    const double C70788 = C70772 - C70725;
    const double C70785 = C70769 - C70713;
    const double C71225 = C71221 - C71213;
    const double C71729 = C71721 - C71709;
    const double C71724 = C71716 - C71689;
    const double C72085 = C72081 - C72073;
    const double C72307 = C72303 - C72295;
    const double C72981 = C72977 - C72969;
    const double C99021 = C99005 - C98985;
    const double C99017 = C99001 - C98969;
    const double C99012 = C98996 - C98949;
    const double C99009 = C98993 - C98937;
    const double C99449 = C99445 - C99437;
    const double C101417 = C101413 - C101405;
    const double C24341 = C24323 + C24284;
    const double C24338 = C24320 + C24272;
    const double C24335 = C24317 + C24260;
    const double C24332 = C24314 + C24248;
    const double C24329 = C24311 + C24236;
    const double C24326 = C24308 + C24224;
    const double C24825 = C24819 + C24804;
    const double C24822 = C24816 + C24792;
    const double C25417 = C25405 + C25378;
    const double C25414 = C25402 + C25366;
    const double C25411 = C25399 + C25354;
    const double C25408 = C25396 + C25342;
    const double C25805 = C25802 + C25791;
    const double C26065 = C26059 + C26044;
    const double C26062 = C26056 + C26032;
    const double C26815 = C26812 + C26801;
    const double C48260 = C48242 + C48203;
    const double C48257 = C48239 + C48191;
    const double C48254 = C48236 + C48179;
    const double C48251 = C48233 + C48167;
    const double C48248 = C48230 + C48155;
    const double C48245 = C48227 + C48143;
    const double C48742 = C48736 + C48721;
    const double C48739 = C48733 + C48709;
    const double C49053 = C49050 + C49041;
    const double C49658 = C49655 + C49644;
    const double C50989 = C50986 + C50976;
    const double C126361 = C126358 + C126349;
    const double C152149 = C152127 - C152148;
    const double C24304 = C24277 - C24278;
    const double C24301 = C24265 - C24266;
    const double C24298 = C24253 - C24254;
    const double C24297 = C24249 - C24250;
    const double C24292 = C24229 - C24230;
    const double C24289 = C24217 - C24218;
    const double C24812 = C24797 - C24798;
    const double C24809 = C24785 - C24786;
    const double C25392 = C25371 - C25372;
    const double C25389 = C25359 - C25360;
    const double C25388 = C25355 - C25356;
    const double C25385 = C25343 - C25344;
    const double C25797 = C25784 - C25785;
    const double C26052 = C26037 - C26038;
    const double C26049 = C26025 - C26026;
    const double C26807 = C26794 - C26795;
    const double C48223 = C48196 - C48197;
    const double C48220 = C48184 - C48185;
    const double C48217 = C48172 - C48173;
    const double C48216 = C48168 - C48169;
    const double C48211 = C48148 - C48149;
    const double C48208 = C48136 - C48137;
    const double C48729 = C48714 - C48715;
    const double C48726 = C48702 - C48703;
    const double C49046 = C49034 - C49035;
    const double C49650 = C49637 - C49638;
    const double C50982 = C50969 - C50970;
    const double C126354 = C126342 - C126343;
    const double C35210 = C35205 + C35204;
    const double C35211 = C35203 + C35202;
    const double C36506 = C35198 + C35199;
    const double C35209 = C35196 + C35197;
    const double C36507 = C35197 + C35196;
    const double C35208 = C35194 + C35195;
    const double C39074 = C36179 + C36178;
    const double C40465 = C36178 + C36179;
    const double C40466 = C36177 + C36176;
    const double C40464 = C36176 + C36177;
    const double C40463 = C36174 + C36175;
    const double C40462 = C36175 + C36174;
    const double C37407 = C36172 + C36173;
    const double C39073 = C36173 + C36172;
    const double C37406 = C36170 + C36171;
    const double C42244 = C36171 + C36170;
    const double C41255 = C36756 + C36757;
    const double C41244 = C36757 + C36756;
    const double C41246 = C36754 + C36755;
    const double C41245 = C36755 + C36754;
    const double C58765 = C39451 + C39450;
    const double C59773 = C39450 + C39451;
    const double C58766 = C39449 + C39448;
    const double C58748 = C39445 + C39444;
    const double C60549 = C41272 + C41273;
    const double C60548 = C41273 + C41272;
    const double C62304 = C43033 + C43032;
    const double C63807 = C43032 + C43033;
    const double C63816 = C58776 + C58775;
    const double C66165 = C62318 + C62317;
    const double C3059 = C3052 + C3057;
    const double C4553 = C3044 + C4540;
    const double C3058 = C3056 + C3043;
    const double C20356 = C4160 + C20352;
    const double C20355 = C20351 + C4160;
    const double C20354 = C4155 + C20350;
    const double C20353 = C20349 + C4155;
    const double C5587 = C4152 + C5574;
    const double C22100 = C22099 + C4152;
    const double C9064 = C4832 + C9060;
    const double C21132 = C21131 + C4832;
    const double C7660 = C7653 + C7658;
    const double C10404 = C7645 + C10391;
    const double C7659 = C7657 + C7644;
    const double C74603 = C74599 * C153637;
    const double C74604 = C74600 * C153637;
    const double C93645 = C74600 * C153864;
    const double C102556 = C74600 * C98536;
    const double C75905 = C75895 * C153637;
    const double C74602 = C74598 * C153637;
    const double C75906 = C75896 * C153637;
    const double C95405 = C75896 * C153864;
    const double C104300 = C75896 * C98536;
    const double C74601 = C74597 * C153637;
    const double C93642 = C74597 * C153864;
    const double C102553 = C74597 * C98536;
    const double C93647 = C93644 * C153724;
    const double C102555 = C93644 * C153724;
    const double C76806 = C76796 * C153637;
    const double C96664 = C76796 * C153864;
    const double C105559 = C76796 * C98536;
    const double C93643 = C81694 * C153724;
    const double C102554 = C81694 * C153724;
    const double C76805 = C76795 * C153637;
    const double C95404 = C76795 * C153724;
    const double C104299 = C76795 * C153724;
    const double C96663 = C80715 * C153724;
    const double C105558 = C80715 * C153724;
    const double C3555 = C3549 + C3537;
    const double C11589 = C11573 + C11541;
    const double C24826 = C24820 + C24808;
    const double C70814 = C70798 + C70766;
    const double C84436 = C84430 + C84418;
    const double C12005 = C12001 + C11993;
    const double C71230 = C71226 + C71218;
    const double C8138 = C8132 + C8120;
    const double C15557 = C15541 + C15509;
    const double C48743 = C48737 + C48725;
    const double C99038 = C99022 + C98990;
    const double C117128 = C117125 + C117119;
    const double C15973 = C15969 + C15961;
    const double C99454 = C99450 + C99442;
    const double C12513 = C12505 + C12489;
    const double C19672 = C19669 + C19663;
    const double C71738 = C71730 + C71714;
    const double C88924 = C88921 + C88915;
    const double C126362 = C126359 + C126353;
    const double C11588 = C11572 + C11537;
    const double C11584 = C11568 + C11521;
    const double C11579 = C11563 + C11501;
    const double C11576 = C11560 + C11489;
    const double C12004 = C12000 + C11989;
    const double C12512 = C12504 + C12485;
    const double C12507 = C12499 + C12465;
    const double C12864 = C12860 + C12849;
    const double C13086 = C13082 + C13071;
    const double C13760 = C13756 + C13745;
    const double C15556 = C15540 + C15505;
    const double C15552 = C15536 + C15489;
    const double C15547 = C15531 + C15469;
    const double C15544 = C15528 + C15457;
    const double C15972 = C15968 + C15957;
    const double C17940 = C17936 + C17925;
    const double C70813 = C70797 + C70762;
    const double C70809 = C70793 + C70746;
    const double C70804 = C70788 + C70726;
    const double C70801 = C70785 + C70714;
    const double C71229 = C71225 + C71214;
    const double C71737 = C71729 + C71710;
    const double C71732 = C71724 + C71690;
    const double C72089 = C72085 + C72074;
    const double C72311 = C72307 + C72296;
    const double C72985 = C72981 + C72970;
    const double C99037 = C99021 + C98986;
    const double C99033 = C99017 + C98970;
    const double C99028 = C99012 + C98950;
    const double C99025 = C99009 + C98938;
    const double C99453 = C99449 + C99438;
    const double C101421 = C101417 + C101406;
    const double C152150 = C152149 - C152129;
    const double C24322 = C24304 - C24279;
    const double C24319 = C24301 - C24267;
    const double C24316 = C24298 - C24255;
    const double C24315 = C24297 - C24251;
    const double C24310 = C24292 - C24231;
    const double C24307 = C24289 - C24219;
    const double C24818 = C24812 - C24799;
    const double C24815 = C24809 - C24787;
    const double C25404 = C25392 - C25373;
    const double C25401 = C25389 - C25361;
    const double C25400 = C25388 - C25357;
    const double C25397 = C25385 - C25345;
    const double C25801 = C25797 - C25786;
    const double C26058 = C26052 - C26039;
    const double C26055 = C26049 - C26027;
    const double C26811 = C26807 - C26796;
    const double C48241 = C48223 - C48198;
    const double C48238 = C48220 - C48186;
    const double C48235 = C48217 - C48174;
    const double C48234 = C48216 - C48170;
    const double C48229 = C48211 - C48150;
    const double C48226 = C48208 - C48138;
    const double C48735 = C48729 - C48716;
    const double C48732 = C48726 - C48704;
    const double C49049 = C49046 - C49036;
    const double C49654 = C49650 - C49639;
    const double C50985 = C50982 - C50971;
    const double C126357 = C126354 - C126344;
    const double C35214 = C35210 * C153637;
    const double C35215 = C35211 * C153637;
    const double C39075 = C35211 * C153864;
    const double C138094 = C35211 * C98536;
    const double C36516 = C36506 * C153637;
    const double C35213 = C35209 * C153637;
    const double C36517 = C36507 * C153637;
    const double C40952 = C36507 * C153864;
    const double C139838 = C36507 * C98536;
    const double C35212 = C35208 * C153637;
    const double C39072 = C35208 * C153864;
    const double C138091 = C35208 * C98536;
    const double C39077 = C39074 * C153724;
    const double C138093 = C39074 * C153724;
    const double C37417 = C37407 * C153637;
    const double C42243 = C37407 * C153864;
    const double C141097 = C37407 * C98536;
    const double C39076 = C39073 * C153724;
    const double C138092 = C39073 * C153724;
    const double C37416 = C37406 * C153637;
    const double C40951 = C37406 * C153724;
    const double C139837 = C37406 * C153724;
    const double C42242 = C41244 * C153724;
    const double C141096 = C41244 * C153724;
    const double C3061 = C3059 * C153637;
    const double C4557 = C4553 * C153637;
    const double C3060 = C3058 * C153637;
    const double C5591 = C5587 * C153637;
    const double C93648 = C93647 + C93645;
    const double C102558 = C102555 + C102556;
    const double C93646 = C93642 + C93643;
    const double C102557 = C102553 + C102554;
    const double C95406 = C95404 + C95405;
    const double C104301 = C104299 + C104300;
    const double C96666 = C96663 + C96664;
    const double C105560 = C105558 + C105559;
    const double C83888 = C152150 * C1186;
    const double C83876 = C152150 * C309;
    const double C83864 = C152150 * C306;
    const double C83860 = C152150 * C1187;
    const double C83840 = C152150 * C308;
    const double C83828 = C152150 * C307;
    const double C84408 = C152150 * C310;
    const double C84396 = C152150 * C305;
    const double C84982 = C152150 * C1759;
    const double C84970 = C152150 * C946;
    const double C84966 = C152150 * C945;
    const double C84954 = C152150 * C1760;
    const double C85395 = C152150 * C2913;
    const double C85648 = C152150 * C3279;
    const double C85636 = C152150 * C1329;
    const double C86405 = C152150 * C4063;
    const double C88558 = C152150 * C1328;
    const double C88546 = C152150 * C482;
    const double C88534 = C152150 * C479;
    const double C88530 = C152150 * C481;
    const double C88510 = C152150 * C480;
    const double C88905 = C152150 * C947;
    const double C89216 = C152150 * C478;
    const double C90407 = C152150 * C6184;
    const double C92172 = C152150 * C2112;
    const double C116649 = C152150 * C2111;
    const double C117109 = C152150 * C483;
    const double C119311 = C152150 * C7514;
    const double C135 =
        (((ae * -2 * C152054) / C152113 -
          (((C152053 * C152121) / C152060 + 2 * C152090) * be) / C152055 -
          C152122 / C152060) /
             C152061 +
         ((C152053 * C152143 + 2 * C152104) * ae) / C152055) /
            C152061 -
        ((C152053 *
              (C152143 / C152061 +
               ((C152053 * C152150 + 2 * C152110) * ae) / C152055 + C152145) +
          2 * (C152104 / C152061 +
               ((C152053 * C152110 + C153467) * ae) / C152055 + C152106)) *
         be) /
            C152055 +
        C152150 / C152061 + ((C152053 * C152145 + 2 * C152106) * ae) / C152055 +
        (-2 * C152124) / (C152055 * 4 * C152060);
    const double C137 =
        (C152143 / C152061 +
         ((C152053 * C152150 + 2 * C152110) * ae) / C152055 + C152145) /
            C152061 -
        ((C152053 * (C152150 / C152061 +
                     ((C152053 * C152145 + 2 * C152106) * ae) / C152055 +
                     (-2 * C152124) / C152161) +
          2 * (C152110 / C152061 +
               ((C152053 * C152106 + C153475) * ae) / C152055 + C152160)) *
         be) /
            C152055 +
        2 * (C152145 / C152061 +
             ((C152160 - C152128 / C152161) * ae) / C152055);
    const double C139 =
        (C152150 / C152061 +
         ((C152053 * C152145 + 2 * C152106) * ae) / C152055 +
         (-2 * C152124) / C152161) /
            C152061 -
        ((C152053 * (C152145 / C152061 +
                     ((C152160 - C152128 / C152161) * ae) / C152055) +
          2 * (C152106 / C152061 +
               ((C152053 * C152156 + C83598) * ae) / C152055)) *
         be) /
            C152055 +
        (-3 * C152124) / (C152055 * 4 * C152113);
    const double C11276 = C152143 / C152061 -
                          ((C152053 * C152150 + 2 * C152110) * be) / C152055 +
                          C152145;
    const double C11278 = C152150 / C152061 -
                          ((C152053 * C152145 + 2 * C152106) * be) / C152055 +
                          (-2 * C152124) / C152161;
    const double C70501 = C152143 / C152061 +
                          ((C152053 * C152150 + 2 * C152110) * ae) / C152055 +
                          C152145;
    const double C70503 = C152150 / C152061 +
                          ((C152053 * C152145 + 2 * C152106) * ae) / C152055 +
                          (-2 * C152124) / C152161;
    const double C24340 = C24322 + C24280;
    const double C24337 = C24319 + C24268;
    const double C24334 = C24316 + C24256;
    const double C24333 = C24315 + C24252;
    const double C24328 = C24310 + C24232;
    const double C24325 = C24307 + C24220;
    const double C24824 = C24818 + C24800;
    const double C24821 = C24815 + C24788;
    const double C25416 = C25404 + C25374;
    const double C25413 = C25401 + C25362;
    const double C25412 = C25400 + C25358;
    const double C25409 = C25397 + C25346;
    const double C25804 = C25801 + C25787;
    const double C26064 = C26058 + C26040;
    const double C26061 = C26055 + C26028;
    const double C26814 = C26811 + C26797;
    const double C48259 = C48241 + C48199;
    const double C48256 = C48238 + C48187;
    const double C48253 = C48235 + C48175;
    const double C48252 = C48234 + C48171;
    const double C48247 = C48229 + C48151;
    const double C48244 = C48226 + C48139;
    const double C48741 = C48735 + C48717;
    const double C48738 = C48732 + C48705;
    const double C49052 = C49049 + C49037;
    const double C49657 = C49654 + C49640;
    const double C50988 = C50985 + C50972;
    const double C126360 = C126357 + C126345;
    const double C39079 = C39077 + C39075;
    const double C138096 = C138093 + C138094;
    const double C39078 = C39072 + C39076;
    const double C138095 = C138091 + C138092;
    const double C40953 = C40951 + C40952;
    const double C139839 = C139837 + C139838;
    const double C42245 = C42242 + C42243;
    const double C141098 = C141096 + C141097;
    const double C83914 = C83887 - C83888;
    const double C83911 = C83875 - C83876;
    const double C83908 = C83863 - C83864;
    const double C83907 = C83859 - C83860;
    const double C83902 = C83839 - C83840;
    const double C83899 = C83827 - C83828;
    const double C84422 = C84407 - C84408;
    const double C84419 = C84395 - C84396;
    const double C85002 = C84981 - C84982;
    const double C84999 = C84969 - C84970;
    const double C84998 = C84965 - C84966;
    const double C84995 = C84953 - C84954;
    const double C85407 = C85394 - C85395;
    const double C85662 = C85647 - C85648;
    const double C85659 = C85635 - C85636;
    const double C86417 = C86404 - C86405;
    const double C88581 = C88557 - C88558;
    const double C88578 = C88545 - C88546;
    const double C88575 = C88533 - C88534;
    const double C88574 = C88529 - C88530;
    const double C88569 = C88509 - C88510;
    const double C88916 = C88904 - C88905;
    const double C89227 = C89215 - C89216;
    const double C90420 = C90406 - C90407;
    const double C92183 = C92171 - C92172;
    const double C116662 = C116648 - C116649;
    const double C117120 = C117108 - C117109;
    const double C119323 = C119310 - C119311;
    const double C11527 = C11276 * C309;
    const double C11511 = C11276 * C306;
    const double C11507 = C11276 * C308;
    const double C11479 = C11276 * C307;
    const double C11979 = C11276 * C305;
    const double C12475 = C11276 * C946;
    const double C12471 = C11276 * C945;
    const double C12839 = C11276 * C1187;
    const double C13061 = C11276 * C1329;
    const double C13735 = C11276 * C1760;
    const double C15495 = C11276 * C482;
    const double C15479 = C11276 * C479;
    const double C15475 = C11276 * C481;
    const double C15447 = C11276 * C480;
    const double C15947 = C11276 * C478;
    const double C17915 = C11276 * C2112;
    const double C11531 = C11278 * C310;
    const double C11515 = C11278 * C305;
    const double C11503 = C11278 * C309;
    const double C11483 = C11278 * C306;
    const double C11983 = C11278 * C304;
    const double C12479 = C11278 * C947;
    const double C12467 = C11278 * C946;
    const double C12843 = C11278 * C1186;
    const double C13065 = C11278 * C1328;
    const double C13739 = C11278 * C1759;
    const double C15499 = C11278 * C483;
    const double C15483 = C11278 * C478;
    const double C15471 = C11278 * C482;
    const double C15451 = C11278 * C479;
    const double C15951 = C11278 * C477;
    const double C17919 = C11278 * C2111;
    const double C70752 = C70501 * C309;
    const double C70736 = C70501 * C306;
    const double C70732 = C70501 * C308;
    const double C70704 = C70501 * C307;
    const double C71204 = C70501 * C305;
    const double C71700 = C70501 * C946;
    const double C71696 = C70501 * C945;
    const double C72064 = C70501 * C1187;
    const double C72286 = C70501 * C1329;
    const double C72960 = C70501 * C1760;
    const double C98976 = C70501 * C482;
    const double C98960 = C70501 * C479;
    const double C98956 = C70501 * C481;
    const double C98928 = C70501 * C480;
    const double C99428 = C70501 * C478;
    const double C101396 = C70501 * C2112;
    const double C70756 = C70503 * C310;
    const double C70740 = C70503 * C305;
    const double C70728 = C70503 * C309;
    const double C70708 = C70503 * C306;
    const double C71208 = C70503 * C304;
    const double C71704 = C70503 * C947;
    const double C71692 = C70503 * C946;
    const double C72068 = C70503 * C1186;
    const double C72290 = C70503 * C1328;
    const double C72964 = C70503 * C1759;
    const double C98980 = C70503 * C483;
    const double C98964 = C70503 * C478;
    const double C98952 = C70503 * C482;
    const double C98932 = C70503 * C479;
    const double C99432 = C70503 * C477;
    const double C101400 = C70503 * C2111;
    const double C24344 = C24338 + C24337;
    const double C25783 = C24332 + C24333;
    const double C24343 = C24328 + C24329;
    const double C127042 = C25414 + C25413;
    const double C127041 = C25413 + C25414;
    const double C127040 = C25411 + C25412;
    const double C127039 = C25412 + C25411;
    const double C26793 = C25408 + C25409;
    const double C128789 = C25409 + C25408;
    const double C49649 = C26062 + C26061;
    const double C127821 = C26061 + C26062;
    const double C48263 = C48257 + C48256;
    const double C50968 = C48251 + C48252;
    const double C48262 = C48247 + C48248;
    const double C83932 = C83914 - C83889;
    const double C83929 = C83911 - C83877;
    const double C83926 = C83908 - C83865;
    const double C83925 = C83907 - C83861;
    const double C83920 = C83902 - C83841;
    const double C83917 = C83899 - C83829;
    const double C84428 = C84422 - C84409;
    const double C84425 = C84419 - C84397;
    const double C85014 = C85002 - C84983;
    const double C85011 = C84999 - C84971;
    const double C85010 = C84998 - C84967;
    const double C85007 = C84995 - C84955;
    const double C85411 = C85407 - C85396;
    const double C85668 = C85662 - C85649;
    const double C85665 = C85659 - C85637;
    const double C86421 = C86417 - C86406;
    const double C88596 = C88581 - C88559;
    const double C88593 = C88578 - C88547;
    const double C88590 = C88575 - C88535;
    const double C88589 = C88574 - C88531;
    const double C88584 = C88569 - C88511;
    const double C88919 = C88916 - C88906;
    const double C89230 = C89227 - C89217;
    const double C90423 = C90420 - C90408;
    const double C92186 = C92183 - C92173;
    const double C116666 = C116662 - C116650;
    const double C117123 = C117120 - C117110;
    const double C119326 = C119323 - C119312;
    const double C11554 = C11526 - C11527;
    const double C11550 = C11510 - C11511;
    const double C11549 = C11506 - C11507;
    const double C11542 = C11478 - C11479;
    const double C11994 = C11978 - C11979;
    const double C12494 = C12474 - C12475;
    const double C12493 = C12470 - C12471;
    const double C12854 = C12838 - C12839;
    const double C13076 = C13060 - C13061;
    const double C13750 = C13734 - C13735;
    const double C15522 = C15494 - C15495;
    const double C15518 = C15478 - C15479;
    const double C15517 = C15474 - C15475;
    const double C15510 = C15446 - C15447;
    const double C15962 = C15946 - C15947;
    const double C17930 = C17914 - C17915;
    const double C11555 = C11530 - C11531;
    const double C11551 = C11514 - C11515;
    const double C11548 = C11502 - C11503;
    const double C11543 = C11482 - C11483;
    const double C11995 = C11982 - C11983;
    const double C12495 = C12478 - C12479;
    const double C12492 = C12466 - C12467;
    const double C12855 = C12842 - C12843;
    const double C13077 = C13064 - C13065;
    const double C13751 = C13738 - C13739;
    const double C15523 = C15498 - C15499;
    const double C15519 = C15482 - C15483;
    const double C15516 = C15470 - C15471;
    const double C15511 = C15450 - C15451;
    const double C15963 = C15950 - C15951;
    const double C17931 = C17918 - C17919;
    const double C70779 = C70751 - C70752;
    const double C70775 = C70735 - C70736;
    const double C70774 = C70731 - C70732;
    const double C70767 = C70703 - C70704;
    const double C71219 = C71203 - C71204;
    const double C71719 = C71699 - C71700;
    const double C71718 = C71695 - C71696;
    const double C72079 = C72063 - C72064;
    const double C72301 = C72285 - C72286;
    const double C72975 = C72959 - C72960;
    const double C99003 = C98975 - C98976;
    const double C98999 = C98959 - C98960;
    const double C98998 = C98955 - C98956;
    const double C98991 = C98927 - C98928;
    const double C99443 = C99427 - C99428;
    const double C101411 = C101395 - C101396;
    const double C70780 = C70755 - C70756;
    const double C70776 = C70739 - C70740;
    const double C70773 = C70727 - C70728;
    const double C70768 = C70707 - C70708;
    const double C71220 = C71207 - C71208;
    const double C71720 = C71703 - C71704;
    const double C71717 = C71691 - C71692;
    const double C72080 = C72067 - C72068;
    const double C72302 = C72289 - C72290;
    const double C72976 = C72963 - C72964;
    const double C99004 = C98979 - C98980;
    const double C99000 = C98963 - C98964;
    const double C98997 = C98951 - C98952;
    const double C98992 = C98931 - C98932;
    const double C99444 = C99431 - C99432;
    const double C101412 = C101399 - C101400;
    const double C24346 = C24339 + C24344;
    const double C25796 = C24331 + C25783;
    const double C24345 = C24343 + C24330;
    const double C127046 = C25415 + C127042;
    const double C127045 = C127041 + C25415;
    const double C127044 = C25410 + C127040;
    const double C127043 = C127039 + C25410;
    const double C26806 = C25407 + C26793;
    const double C128790 = C128789 + C25407;
    const double C49653 = C26063 + C49649;
    const double C127822 = C127821 + C26063;
    const double C48265 = C48258 + C48263;
    const double C50981 = C48250 + C50968;
    const double C48264 = C48262 + C48249;
    const double C83950 = C83932 + C83890;
    const double C83947 = C83929 + C83878;
    const double C83944 = C83926 + C83866;
    const double C83943 = C83925 + C83862;
    const double C83938 = C83920 + C83842;
    const double C83935 = C83917 + C83830;
    const double C84434 = C84428 + C84410;
    const double C84431 = C84425 + C84398;
    const double C85026 = C85014 + C84984;
    const double C85023 = C85011 + C84972;
    const double C85022 = C85010 + C84968;
    const double C85019 = C85007 + C84956;
    const double C85414 = C85411 + C85397;
    const double C85674 = C85668 + C85650;
    const double C85671 = C85665 + C85638;
    const double C86424 = C86421 + C86407;
    const double C88611 = C88596 + C88560;
    const double C88608 = C88593 + C88548;
    const double C88605 = C88590 + C88536;
    const double C88604 = C88589 + C88532;
    const double C88599 = C88584 + C88512;
    const double C88922 = C88919 + C88907;
    const double C89233 = C89230 + C89218;
    const double C90426 = C90423 + C90409;
    const double C92189 = C92186 + C92174;
    const double C116669 = C116666 + C116651;
    const double C117126 = C117123 + C117111;
    const double C119329 = C119326 + C119313;
    const double C11570 = C11554 - C11528;
    const double C11566 = C11550 - C11512;
    const double C11565 = C11549 - C11508;
    const double C11558 = C11542 - C11480;
    const double C11998 = C11994 - C11980;
    const double C12502 = C12494 - C12476;
    const double C12501 = C12493 - C12472;
    const double C12858 = C12854 - C12840;
    const double C13080 = C13076 - C13062;
    const double C13754 = C13750 - C13736;
    const double C15538 = C15522 - C15496;
    const double C15534 = C15518 - C15480;
    const double C15533 = C15517 - C15476;
    const double C15526 = C15510 - C15448;
    const double C15966 = C15962 - C15948;
    const double C17934 = C17930 - C17916;
    const double C11571 = C11555 - C11532;
    const double C11567 = C11551 - C11516;
    const double C11564 = C11548 - C11504;
    const double C11559 = C11543 - C11484;
    const double C11999 = C11995 - C11984;
    const double C12503 = C12495 - C12480;
    const double C12500 = C12492 - C12468;
    const double C12859 = C12855 - C12844;
    const double C13081 = C13077 - C13066;
    const double C13755 = C13751 - C13740;
    const double C15539 = C15523 - C15500;
    const double C15535 = C15519 - C15484;
    const double C15532 = C15516 - C15472;
    const double C15527 = C15511 - C15452;
    const double C15967 = C15963 - C15952;
    const double C17935 = C17931 - C17920;
    const double C70795 = C70779 - C70753;
    const double C70791 = C70775 - C70737;
    const double C70790 = C70774 - C70733;
    const double C70783 = C70767 - C70705;
    const double C71223 = C71219 - C71205;
    const double C71727 = C71719 - C71701;
    const double C71726 = C71718 - C71697;
    const double C72083 = C72079 - C72065;
    const double C72305 = C72301 - C72287;
    const double C72979 = C72975 - C72961;
    const double C99019 = C99003 - C98977;
    const double C99015 = C98999 - C98961;
    const double C99014 = C98998 - C98957;
    const double C99007 = C98991 - C98929;
    const double C99447 = C99443 - C99429;
    const double C101415 = C101411 - C101397;
    const double C70796 = C70780 - C70757;
    const double C70792 = C70776 - C70741;
    const double C70789 = C70773 - C70729;
    const double C70784 = C70768 - C70709;
    const double C71224 = C71220 - C71209;
    const double C71728 = C71720 - C71705;
    const double C71725 = C71717 - C71693;
    const double C72084 = C72080 - C72069;
    const double C72306 = C72302 - C72291;
    const double C72980 = C72976 - C72965;
    const double C99020 = C99004 - C98981;
    const double C99016 = C99000 - C98965;
    const double C99013 = C98997 - C98953;
    const double C99008 = C98992 - C98933;
    const double C99448 = C99444 - C99433;
    const double C101416 = C101412 - C101401;
    const double C24348 = C24346 * C153637;
    const double C25800 = C25796 * C153637;
    const double C24347 = C24345 * C153637;
    const double C26810 = C26806 * C153637;
    const double C83954 = C83948 + C83947;
    const double C85393 = C83942 + C83943;
    const double C83953 = C83938 + C83939;
    const double C89625 = C85024 + C85023;
    const double C89624 = C85023 + C85024;
    const double C89623 = C85021 + C85022;
    const double C89622 = C85022 + C85021;
    const double C86403 = C85018 + C85019;
    const double C91395 = C85019 + C85018;
    const double C90405 = C85671 + C85672;
    const double C90404 = C85672 + C85671;
    const double C116660 = C88609 + C88608;
    const double C116647 = C88604 + C88603;
    const double C119309 = C92190 + C92189;
    const double C11586 = C11570 + C11529;
    const double C11582 = C11566 + C11513;
    const double C11581 = C11565 + C11509;
    const double C11574 = C11558 + C11481;
    const double C12002 = C11998 + C11981;
    const double C12510 = C12502 + C12477;
    const double C12509 = C12501 + C12473;
    const double C12862 = C12858 + C12841;
    const double C13084 = C13080 + C13063;
    const double C13758 = C13754 + C13737;
    const double C15554 = C15538 + C15497;
    const double C15550 = C15534 + C15481;
    const double C15549 = C15533 + C15477;
    const double C15542 = C15526 + C15449;
    const double C15970 = C15966 + C15949;
    const double C17938 = C17934 + C17917;
    const double C11587 = C11571 + C11533;
    const double C11583 = C11567 + C11517;
    const double C11580 = C11564 + C11505;
    const double C11575 = C11559 + C11485;
    const double C12003 = C11999 + C11985;
    const double C12511 = C12503 + C12481;
    const double C12508 = C12500 + C12469;
    const double C12863 = C12859 + C12845;
    const double C13085 = C13081 + C13067;
    const double C13759 = C13755 + C13741;
    const double C15555 = C15539 + C15501;
    const double C15551 = C15535 + C15485;
    const double C15548 = C15532 + C15473;
    const double C15543 = C15527 + C15453;
    const double C15971 = C15967 + C15953;
    const double C17939 = C17935 + C17921;
    const double C70811 = C70795 + C70754;
    const double C70807 = C70791 + C70738;
    const double C70806 = C70790 + C70734;
    const double C70799 = C70783 + C70706;
    const double C71227 = C71223 + C71206;
    const double C71735 = C71727 + C71702;
    const double C71734 = C71726 + C71698;
    const double C72087 = C72083 + C72066;
    const double C72309 = C72305 + C72288;
    const double C72983 = C72979 + C72962;
    const double C99035 = C99019 + C98978;
    const double C99031 = C99015 + C98962;
    const double C99030 = C99014 + C98958;
    const double C99023 = C99007 + C98930;
    const double C99451 = C99447 + C99430;
    const double C101419 = C101415 + C101398;
    const double C70812 = C70796 + C70758;
    const double C70808 = C70792 + C70742;
    const double C70805 = C70789 + C70730;
    const double C70800 = C70784 + C70710;
    const double C71228 = C71224 + C71210;
    const double C71736 = C71728 + C71706;
    const double C71733 = C71725 + C71694;
    const double C72088 = C72084 + C72070;
    const double C72310 = C72306 + C72292;
    const double C72984 = C72980 + C72966;
    const double C99036 = C99020 + C98982;
    const double C99032 = C99016 + C98966;
    const double C99029 = C99013 + C98954;
    const double C99024 = C99008 + C98934;
    const double C99452 = C99448 + C99434;
    const double C101420 = C101416 + C101402;
    const double C83956 = C83949 + C83954;
    const double C85406 = C83941 + C85393;
    const double C83955 = C83953 + C83940;
    const double C89629 = C85025 + C89625;
    const double C89628 = C89624 + C85025;
    const double C89627 = C85020 + C89623;
    const double C89626 = C89622 + C85020;
    const double C86416 = C85017 + C86403;
    const double C91396 = C91395 + C85017;
    const double C90419 = C90405 + C85673;
    const double C90418 = C85673 + C90404;
    const double C116665 = C88610 + C116660;
    const double C116661 = C116647 + C88602;
    const double C119322 = C92191 + C119309;
    const double C83958 = C83956 * C153637;
    const double C85410 = C85406 * C153637;
    const double C83957 = C83955 * C153637;
    const double C86420 = C86416 * C153637;
    d2ee[0] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153637 * C153680 +
            (C83935 + C83936 + C83937) * C153637 * C153687 + C83957 * C83601) *
               C153537 * C153848 -
           ((C83941 + C83942 + C83943) * C153637 * C83601 +
            (C83940 + C83939 + C83938) * C153637 * C153687 +
            (C83937 + C83936 + C83935) * C153637 * C153680) *
               C153537 * C153573) *
              C153917 +
          (((C83944 + C83945 + C83946) * C153637 * C153680 +
            (C83947 + C83948 + C83949) * C153637 * C153687 +
            (C83950 + C83951 + C83952) * C153637 * C83601) *
               C153537 * C153573 -
           (C83958 * C83601 + (C83946 + C83945 + C83944) * C153637 * C153687 +
            (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
             C152106 * C156 - C152145 * C146 - C152106 * C157 + C153475 * C170 +
             C152110 * C154 - C152150 * C145 - C152110 * C155 +
             C153467 * C169) *
                C153637 * C153680) *
               C153537 * C153848) *
              C153918 +
          (((C152110 * C156 - C152150 * C146 - C152110 * C157 + C153467 * C170 +
             C152106 * C158 - C152145 * C147 - C152106 * C159 + C153475 * C171 +
             C152156 * C160 - C83607 * C148 - C152156 * C161 + C83598 * C172) *
                C153637 * C153680 +
            (C84431 + C84432 + C84433) * C153637 * C153687 +
            (C84434 + C84435 + C84436) * C153637 * C83601) *
               C153537 * C153848 -
           ((C152156 * C1188 - C83607 * C1183 - C152156 * C1189 +
             C83598 * C1198 + C152106 * C1190 - C152145 * C1184 -
             C152106 * C1191 + C153475 * C1199 + C152110 * C1192 -
             C152150 * C1185 - C152110 * C1193 + C153467 * C1200) *
                C153637 * C83601 +
            (C84436 + C84435 + C84434) * C153637 * C153687 +
            (C84433 + C84432 + C84431) * C153637 * C153680) *
               C153537 * C153573) *
              C650)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
              C153467 * C168 + C152106 * C154 - C152145 * C145 -
              C152106 * C155 + C153475 * C169 + C152156 * C156 - C83607 * C146 -
              C152156 * C157 + C83598 * C170) *
                 C153637 * C153680 +
             (C83935 + C83936 + C83937) * C153637 * C153687 + C83957 * C83601) *
                C153849 -
            ((C85017 + C85018 + C85019) * C153637 * C83601 +
             (C85020 + C85021 + C85022) * C153637 * C153687 +
             (C152156 * C492 - C83607 * C478 - C152156 * C493 + C83598 * C514 +
              C152106 * C494 - C152145 * C479 - C152106 * C495 +
              C153475 * C515 + C152110 * C496 - C152150 * C480 -
              C152110 * C497 + C153467 * C516) *
                 C153637 * C153680) *
                C153601) *
               C153848 +
           (((C85022 + C85021 + C85020) * C153637 * C153680 +
             (C85019 + C85018 + C85017) * C153637 * C153687 +
             (C152110 * C4067 - C152150 * C4063 - C152110 * C4068 +
              C153467 * C4075 + C152106 * C4069 - C152145 * C4064 -
              C152106 * C4070 + C153475 * C4076 + C152156 * C4071 -
              C83607 * C4065 - C152156 * C4072 + C83598 * C4077) *
                 C153637 * C83601) *
                C153601 -
            ((C83941 + C83942 + C83943) * C153637 * C83601 +
             (C83940 + C83939 + C83938) * C153637 * C153687 +
             (C83937 + C83936 + C83935) * C153637 * C153680) *
                C153849) *
               C153573) *
              C301 +
          ((((C152110 * C494 - C152150 * C479 - C152110 * C495 +
              C153467 * C515 + C152106 * C492 - C152145 * C478 -
              C152106 * C493 + C153475 * C514 + C152156 * C490 - C83607 * C477 -
              C152156 * C491 + C83598 * C513) *
                 C153637 * C153680 +
             (C85023 + C85024 + C85025) * C153637 * C153687 +
             (C85026 + C85027 + C85028) * C153637 * C83601) *
                C153601 -
            (C83958 * C83601 + (C83946 + C83945 + C83944) * C153637 * C153687 +
             (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
              C152106 * C156 - C152145 * C146 - C152106 * C157 +
              C153475 * C170 + C152110 * C154 - C152150 * C145 -
              C152110 * C155 + C153467 * C169) *
                 C153637 * C153680) *
                C153849) *
               C153848 +
           (((C83944 + C83945 + C83946) * C153637 * C153680 +
             (C83947 + C83948 + C83949) * C153637 * C153687 +
             (C83950 + C83951 + C83952) * C153637 * C83601) *
                C153849 -
            ((C152156 * C4073 - C83607 * C4066 - C152156 * C4074 +
              C83598 * C4078 + C152106 * C4071 - C152145 * C4065 -
              C152106 * C4072 + C153475 * C4077 + C152110 * C4069 -
              C152150 * C4064 - C152110 * C4070 + C153467 * C4076) *
                 C153637 * C83601 +
             (C85028 + C85027 + C85026) * C153637 * C153687 +
             (C85025 + C85024 + C85023) * C153637 * C153680) *
                C153601) *
               C153573) *
              C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153637 * C153680 +
            (C83935 + C83936 + C83937) * C153637 * C153687 + C83957 * C83601) *
               C153537 * C298 -
           ((C83941 + C83942 + C83943) * C153637 * C83601 +
            (C83940 + C83939 + C83938) * C153637 * C153687 +
            (C83937 + C83936 + C83935) * C153637 * C153680) *
               C153537 * C299 +
           (C83957 * C153680 + (C83943 + C83942 + C83941) * C153637 * C153687 +
            (C152110 * C2917 - C152150 * C2913 - C152110 * C2918 +
             C153467 * C2925 + C152106 * C2919 - C152145 * C2914 -
             C152106 * C2920 + C153475 * C2926 + C152156 * C2921 -
             C83607 * C2915 - C152156 * C2922 + C83598 * C2927) *
                C153637 * C83601) *
               C153537 * C300) *
              C301 +
          (((C83944 + C83945 + C83946) * C153637 * C153680 +
            (C83947 + C83948 + C83949) * C153637 * C153687 +
            (C83950 + C83951 + C83952) * C153637 * C83601) *
               C153537 * C299 -
           (C83958 * C83601 + (C83946 + C83945 + C83944) * C153637 * C153687 +
            (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
             C152106 * C156 - C152145 * C146 - C152106 * C157 + C153475 * C170 +
             C152110 * C154 - C152150 * C145 - C152110 * C155 +
             C153467 * C169) *
                C153637 * C153680) *
               C153537 * C298 -
           ((C152156 * C2923 - C83607 * C2916 - C152156 * C2924 +
             C83598 * C2928 + C152106 * C2921 - C152145 * C2915 -
             C152106 * C2922 + C153475 * C2927 + C152110 * C2919 -
             C152150 * C2914 - C152110 * C2920 + C153467 * C2926) *
                C153637 * C83601 +
            (C83952 + C83951 + C83950) * C153637 * C153687 + C83958 * C153680) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
            C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
            C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
               C153637 * C153680 +
           (C152110 * C323 - C152150 * C307 - C152110 * C324 + C153467 * C343 +
            C152106 * C321 - C152145 * C306 - C152106 * C322 + C153475 * C342 +
            C152156 * C319 - C83607 * C305 - C152156 * C320 + C83598 * C341) *
               C153637 * C153687 +
           (C152110 * C325 - C152150 * C308 - C152110 * C326 + C153467 * C344 +
            C152106 * C327 - C152145 * C309 - C152106 * C328 + C153475 * C345 +
            C152156 * C329 - C83607 * C310 - C152156 * C330 + C83598 * C346) *
               C153637 * C83601) *
              C153537 * C153521 * C130 -
          ((C152156 * C331 - C83607 * C311 - C152156 * C332 + C83598 * C347 +
            C152106 * C329 - C152145 * C310 - C152106 * C330 + C153475 * C346 +
            C152110 * C327 - C152150 * C309 - C152110 * C328 + C153467 * C345) *
               C153637 * C83601 +
           (C152156 * C317 - C83607 * C304 - C152156 * C318 + C83598 * C340 +
            C152106 * C319 - C152145 * C305 - C152106 * C320 + C153475 * C341 +
            C152110 * C321 - C152150 * C306 - C152110 * C322 + C153467 * C342) *
               C153637 * C153687 +
           (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
            C152106 * C156 - C152145 * C146 - C152106 * C157 + C153475 * C170 +
            C152110 * C154 - C152150 * C145 - C152110 * C155 + C153467 * C169) *
               C153637 * C153680) *
              C153537 * C153521 * C131 +
          ((C152110 * C156 - C152150 * C146 - C152110 * C157 + C153467 * C170 +
            C152106 * C158 - C152145 * C147 - C152106 * C159 + C153475 * C171 +
            C152156 * C160 - C83607 * C148 - C152156 * C161 + C83598 * C172) *
               C153637 * C153680 +
           (C152110 * C319 - C152150 * C305 - C152110 * C320 + C153467 * C341 +
            C152106 * C317 - C152145 * C304 - C152106 * C318 + C153475 * C340 +
            C152156 * C315 - C83607 * C303 - C152156 * C316 + C83598 * C339) *
               C153637 * C153687 +
           (C152110 * C329 - C152150 * C310 - C152110 * C330 + C153467 * C346 +
            C152106 * C331 - C152145 * C311 - C152106 * C332 + C153475 * C347 +
            C152156 * C333 - C83607 * C312 - C152156 * C334 + C83598 * C348) *
               C153637 * C83601) *
              C153537 * C153521 * C132 -
          ((C152156 * C337 - C83607 * C314 - C152156 * C338 + C83598 * C350 +
            C152106 * C333 - C152145 * C312 - C152106 * C334 + C153475 * C348 +
            C152110 * C331 - C152150 * C311 - C152110 * C332 + C153467 * C347) *
               C153637 * C83601 +
           (C152156 * C335 - C83607 * C313 - C152156 * C336 + C83598 * C349 +
            C152106 * C315 - C152145 * C303 - C152106 * C316 + C153475 * C339 +
            C152110 * C317 - C152150 * C304 - C152110 * C318 + C153467 * C340) *
               C153637 * C153687 +
           (C152156 * C162 - C83607 * C149 - C152156 * C163 + C83598 * C173 +
            C152106 * C160 - C152145 * C148 - C152106 * C161 + C153475 * C172 +
            C152110 * C158 - C152150 * C147 - C152110 * C159 + C153467 * C171) *
               C153637 * C153680) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153637 * C153680 +
            (C83935 + C83936 + C83937) * C153637 * C153687 + C83957 * C83601) *
               C473 -
           ((C152156 * C1765 - C83607 * C1758 - C152156 * C1766 +
             C83598 * C1773 + C152106 * C1767 - C152145 * C1759 -
             C152106 * C1768 + C153475 * C1774 + C152110 * C1769 -
             C152150 * C1760 - C152110 * C1770 + C153467 * C1775) *
                C153637 * C83601 +
            (C152156 * C955 - C83607 * C947 - C152156 * C956 + C83598 * C965 +
             C152106 * C953 - C152145 * C946 - C152106 * C954 + C153475 * C964 +
             C152110 * C951 - C152150 * C945 - C152110 * C952 +
             C153467 * C963) *
                C153637 * C153687 +
            (C152156 * C492 - C83607 * C478 - C152156 * C493 + C83598 * C514 +
             C152106 * C494 - C152145 * C479 - C152106 * C495 + C153475 * C515 +
             C152110 * C496 - C152150 * C480 - C152110 * C497 +
             C153467 * C516) *
                C153637 * C153680) *
               C474 +
           ((C152110 * C498 - C152150 * C481 - C152110 * C499 + C153467 * C517 +
             C152106 * C500 - C152145 * C482 - C152106 * C501 + C153475 * C518 +
             C152156 * C502 - C83607 * C483 - C152156 * C503 + C83598 * C519) *
                C153637 * C153680 +
            (C152110 * C1338 - C152150 * C1329 - C152110 * C1339 +
             C153467 * C1344 + C152106 * C1336 - C152145 * C1328 -
             C152106 * C1337 + C153475 * C1343 + C152156 * C1334 -
             C83607 * C1327 - C152156 * C1335 + C83598 * C1342) *
                C153637 * C153687 +
            (C152110 * C3283 - C152150 * C3279 - C152110 * C3284 +
             C153467 * C3291 + C152106 * C3285 - C152145 * C3280 -
             C152106 * C3286 + C153475 * C3292 + C152156 * C3287 -
             C83607 * C3281 - C152156 * C3288 + C83598 * C3293) *
                C153637 * C83601) *
               C475) *
              C153521 * C301 +
          (((C152110 * C494 - C152150 * C479 - C152110 * C495 + C153467 * C515 +
             C152106 * C492 - C152145 * C478 - C152106 * C493 + C153475 * C514 +
             C152156 * C490 - C83607 * C477 - C152156 * C491 + C83598 * C513) *
                C153637 * C153680 +
            (C152110 * C953 - C152150 * C946 - C152110 * C954 + C153467 * C964 +
             C152106 * C955 - C152145 * C947 - C152106 * C956 + C153475 * C965 +
             C152156 * C957 - C83607 * C948 - C152156 * C958 + C83598 * C966) *
                C153637 * C153687 +
            (C152110 * C1767 - C152150 * C1759 - C152110 * C1768 +
             C153467 * C1774 + C152106 * C1765 - C152145 * C1758 -
             C152106 * C1766 + C153475 * C1773 + C152156 * C1763 -
             C83607 * C1757 - C152156 * C1764 + C83598 * C1772) *
                C153637 * C83601) *
               C474 -
           (C83958 * C83601 + (C83946 + C83945 + C83944) * C153637 * C153687 +
            (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
             C152106 * C156 - C152145 * C146 - C152106 * C157 + C153475 * C170 +
             C152110 * C154 - C152150 * C145 - C152110 * C155 +
             C153467 * C169) *
                C153637 * C153680) *
               C473 -
           ((C152156 * C3289 - C83607 * C3282 - C152156 * C3290 +
             C83598 * C3294 + C152106 * C3287 - C152145 * C3281 -
             C152106 * C3288 + C153475 * C3293 + C152110 * C3285 -
             C152150 * C3280 - C152110 * C3286 + C153467 * C3292) *
                C153637 * C83601 +
            (C152156 * C1332 - C83607 * C1326 - C152156 * C1333 +
             C83598 * C1341 + C152106 * C1334 - C152145 * C1327 -
             C152106 * C1335 + C153475 * C1342 + C152110 * C1336 -
             C152150 * C1328 - C152110 * C1337 + C153467 * C1343) *
                C153637 * C153687 +
            (C152156 * C504 - C83607 * C484 - C152156 * C505 + C83598 * C520 +
             C152106 * C502 - C152145 * C483 - C152106 * C503 + C153475 * C519 +
             C152110 * C500 - C152150 * C482 - C152110 * C501 +
             C153467 * C518) *
                C153637 * C153680) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153637 * C153680 +
            (C83935 + C83936 + C83937) * C153637 * C153687 + C83957 * C83601) *
               C153849 -
           ((C152156 * C1765 - C83607 * C1758 - C152156 * C1766 +
             C83598 * C1773 + C152106 * C1767 - C152145 * C1759 -
             C152106 * C1768 + C153475 * C1774 + C152110 * C1769 -
             C152150 * C1760 - C152110 * C1770 + C153467 * C1775) *
                C153637 * C83601 +
            (C152156 * C955 - C83607 * C947 - C152156 * C956 + C83598 * C965 +
             C152106 * C953 - C152145 * C946 - C152106 * C954 + C153475 * C964 +
             C152110 * C951 - C152150 * C945 - C152110 * C952 +
             C153467 * C963) *
                C153637 * C153687 +
            (C152156 * C492 - C83607 * C478 - C152156 * C493 + C83598 * C514 +
             C152106 * C494 - C152145 * C479 - C152106 * C495 + C153475 * C515 +
             C152110 * C496 - C152150 * C480 - C152110 * C497 +
             C153467 * C516) *
                C153637 * C153680) *
               C153601) *
              C153521 * C153917 +
          (((C152110 * C494 - C152150 * C479 - C152110 * C495 + C153467 * C515 +
             C152106 * C492 - C152145 * C478 - C152106 * C493 + C153475 * C514 +
             C152156 * C490 - C83607 * C477 - C152156 * C491 + C83598 * C513) *
                C153637 * C153680 +
            (C152110 * C953 - C152150 * C946 - C152110 * C954 + C153467 * C964 +
             C152106 * C955 - C152145 * C947 - C152106 * C956 + C153475 * C965 +
             C152156 * C957 - C83607 * C948 - C152156 * C958 + C83598 * C966) *
                C153637 * C153687 +
            (C152110 * C1767 - C152150 * C1759 - C152110 * C1768 +
             C153467 * C1774 + C152106 * C1765 - C152145 * C1758 -
             C152106 * C1766 + C153475 * C1773 + C152156 * C1763 -
             C83607 * C1757 - C152156 * C1764 + C83598 * C1772) *
                C153637 * C83601) *
               C153601 -
           (C83958 * C83601 + (C83946 + C83945 + C83944) * C153637 * C153687 +
            (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
             C152106 * C156 - C152145 * C146 - C152106 * C157 + C153475 * C170 +
             C152110 * C154 - C152150 * C145 - C152110 * C155 +
             C153467 * C169) *
                C153637 * C153680) *
               C153849) *
              C153521 * C153918 +
          (((C152110 * C156 - C152150 * C146 - C152110 * C157 + C153467 * C170 +
             C152106 * C158 - C152145 * C147 - C152106 * C159 + C153475 * C171 +
             C152156 * C160 - C83607 * C148 - C152156 * C161 + C83598 * C172) *
                C153637 * C153680 +
            (C84431 + C84432 + C84433) * C153637 * C153687 +
            (C84434 + C84435 + C84436) * C153637 * C83601) *
               C153849 -
           ((C152156 * C1761 - C83607 * C1756 - C152156 * C1762 +
             C83598 * C1771 + C152106 * C1763 - C152145 * C1757 -
             C152106 * C1764 + C153475 * C1772 + C152110 * C1765 -
             C152150 * C1758 - C152110 * C1766 + C153467 * C1773) *
                C153637 * C83601 +
            (C152156 * C959 - C83607 * C949 - C152156 * C960 + C83598 * C967 +
             C152106 * C957 - C152145 * C948 - C152106 * C958 + C153475 * C966 +
             C152110 * C955 - C152150 * C947 - C152110 * C956 +
             C153467 * C965) *
                C153637 * C153687 +
            (C152156 * C488 - C83607 * C476 - C152156 * C489 + C83598 * C512 +
             C152106 * C490 - C152145 * C477 - C152106 * C491 + C153475 * C513 +
             C152110 * C492 - C152150 * C478 - C152110 * C493 +
             C153467 * C514) *
                C153637 * C153680) *
               C153601) *
              C153521 * C650)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
            C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
            C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
               C153637 * C153680 +
           (C152110 * C323 - C152150 * C307 - C152110 * C324 + C153467 * C343 +
            C152106 * C321 - C152145 * C306 - C152106 * C322 + C153475 * C342 +
            C152156 * C319 - C83607 * C305 - C152156 * C320 + C83598 * C341) *
               C153637 * C153687 +
           (C152110 * C325 - C152150 * C308 - C152110 * C326 + C153467 * C344 +
            C152106 * C327 - C152145 * C309 - C152106 * C328 + C153475 * C345 +
            C152156 * C329 - C83607 * C310 - C152156 * C330 + C83598 * C346) *
               C153637 * C83601) *
              C153537 * C153521 * C130 -
          ((C152156 * C331 - C83607 * C311 - C152156 * C332 + C83598 * C347 +
            C152106 * C329 - C152145 * C310 - C152106 * C330 + C153475 * C346 +
            C152110 * C327 - C152150 * C309 - C152110 * C328 + C153467 * C345) *
               C153637 * C83601 +
           (C152156 * C317 - C83607 * C304 - C152156 * C318 + C83598 * C340 +
            C152106 * C319 - C152145 * C305 - C152106 * C320 + C153475 * C341 +
            C152110 * C321 - C152150 * C306 - C152110 * C322 + C153467 * C342) *
               C153637 * C153687 +
           (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
            C152106 * C156 - C152145 * C146 - C152106 * C157 + C153475 * C170 +
            C152110 * C154 - C152150 * C145 - C152110 * C155 + C153467 * C169) *
               C153637 * C153680) *
              C153537 * C153521 * C131 +
          ((C152110 * C156 - C152150 * C146 - C152110 * C157 + C153467 * C170 +
            C152106 * C158 - C152145 * C147 - C152106 * C159 + C153475 * C171 +
            C152156 * C160 - C83607 * C148 - C152156 * C161 + C83598 * C172) *
               C153637 * C153680 +
           (C152110 * C319 - C152150 * C305 - C152110 * C320 + C153467 * C341 +
            C152106 * C317 - C152145 * C304 - C152106 * C318 + C153475 * C340 +
            C152156 * C315 - C83607 * C303 - C152156 * C316 + C83598 * C339) *
               C153637 * C153687 +
           (C152110 * C329 - C152150 * C310 - C152110 * C330 + C153467 * C346 +
            C152106 * C331 - C152145 * C311 - C152106 * C332 + C153475 * C347 +
            C152156 * C333 - C83607 * C312 - C152156 * C334 + C83598 * C348) *
               C153637 * C83601) *
              C153537 * C153521 * C132 -
          ((C152156 * C337 - C83607 * C314 - C152156 * C338 + C83598 * C350 +
            C152106 * C333 - C152145 * C312 - C152106 * C334 + C153475 * C348 +
            C152110 * C331 - C152150 * C311 - C152110 * C332 + C153467 * C347) *
               C153637 * C83601 +
           (C152156 * C335 - C83607 * C313 - C152156 * C336 + C83598 * C349 +
            C152106 * C315 - C152145 * C303 - C152106 * C316 + C153475 * C339 +
            C152110 * C317 - C152150 * C304 - C152110 * C318 + C153467 * C340) *
               C153637 * C153687 +
           (C152156 * C162 - C83607 * C149 - C152156 * C163 + C83598 * C173 +
            C152106 * C160 - C152145 * C148 - C152106 * C161 + C153475 * C172 +
            C152110 * C158 - C152150 * C147 - C152110 * C159 + C153467 * C171) *
               C153637 * C153680) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153637 * C153680 +
            (C83935 + C83936 + C83937) * C153637 * C153687 + C83957 * C83601) *
               C153537 * C298 -
           ((C83941 + C83942 + C83943) * C153637 * C83601 +
            (C83940 + C83939 + C83938) * C153637 * C153687 +
            (C83937 + C83936 + C83935) * C153637 * C153680) *
               C153537 * C299 +
           (C83957 * C153680 + (C83943 + C83942 + C83941) * C153637 * C153687 +
            (C152110 * C2917 - C152150 * C2913 - C152110 * C2918 +
             C153467 * C2925 + C152106 * C2919 - C152145 * C2914 -
             C152106 * C2920 + C153475 * C2926 + C152156 * C2921 -
             C83607 * C2915 - C152156 * C2922 + C83598 * C2927) *
                C153637 * C83601) *
               C153537 * C300) *
              C301 +
          (((C83944 + C83945 + C83946) * C153637 * C153680 +
            (C83947 + C83948 + C83949) * C153637 * C153687 +
            (C83950 + C83951 + C83952) * C153637 * C83601) *
               C153537 * C299 -
           (C83958 * C83601 + (C83946 + C83945 + C83944) * C153637 * C153687 +
            (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
             C152106 * C156 - C152145 * C146 - C152106 * C157 + C153475 * C170 +
             C152110 * C154 - C152150 * C145 - C152110 * C155 +
             C153467 * C169) *
                C153637 * C153680) *
               C153537 * C298 -
           ((C152156 * C2923 - C83607 * C2916 - C152156 * C2924 +
             C83598 * C2928 + C152106 * C2921 - C152145 * C2915 -
             C152106 * C2922 + C153475 * C2927 + C152110 * C2919 -
             C152150 * C2914 - C152110 * C2920 + C153467 * C2926) *
                C153637 * C83601 +
            (C83952 + C83951 + C83950) * C153637 * C153687 + C83958 * C153680) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153637 * C153680 +
            (C83935 + C83936 + C83937) * C153637 * C153687 + C83957 * C83601) *
               C153537 * C153919 -
           (C85410 * C83601 + (C83940 + C83939 + C83938) * C153637 * C153687 +
            (C83937 + C83936 + C83935) * C153637 * C153680) *
               C153537 * C153920 +
           (C83957 * C153680 + (C83943 + C83942 + C83941) * C153637 * C153687 +
            (C85414 + C85415 + C85416) * C153637 * C83601) *
               C153537 * C1469) *
              C153840 +
          (((C83944 + C83945 + C83946) * C153637 * C153680 +
            (C83947 + C83948 + C83949) * C153637 * C153687 +
            (C83950 + C83951 + C83952) * C153637 * C83601) *
               C153537 * C153920 -
           (C83958 * C83601 + (C83946 + C83945 + C83944) * C153637 * C153687 +
            (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
             C152106 * C156 - C152145 * C146 - C152106 * C157 + C153475 * C170 +
             C152110 * C154 - C152150 * C145 - C152110 * C155 +
             C153467 * C169) *
                C153637 * C153680) *
               C153537 * C153919 -
           ((C152156 * C2923 - C83607 * C2916 - C152156 * C2924 +
             C83598 * C2928 + C152106 * C2921 - C152145 * C2915 -
             C152106 * C2922 + C153475 * C2927 + C152110 * C2919 -
             C152150 * C2914 - C152110 * C2920 + C153467 * C2926) *
                C153637 * C83601 +
            (C83952 + C83951 + C83950) * C153637 * C153687 + C83958 * C153680) *
               C153537 * C1469) *
              C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153637 * C153680 +
            (C83935 + C83936 + C83937) * C153637 * C153687 + C83957 * C83601) *
               C153849 -
           (C86420 * C83601 + (C85020 + C85021 + C85022) * C153637 * C153687 +
            (C152156 * C492 - C83607 * C478 - C152156 * C493 + C83598 * C514 +
             C152106 * C494 - C152145 * C479 - C152106 * C495 + C153475 * C515 +
             C152110 * C496 - C152150 * C480 - C152110 * C497 +
             C153467 * C516) *
                C153637 * C153680) *
               C153601) *
              C153919 +
          (((C85022 + C85021 + C85020) * C153637 * C153680 +
            (C85019 + C85018 + C85017) * C153637 * C153687 +
            (C86424 + C86425 + C86426) * C153637 * C83601) *
               C153601 -
           (C85410 * C83601 + (C83940 + C83939 + C83938) * C153637 * C153687 +
            (C83937 + C83936 + C83935) * C153637 * C153680) *
               C153849) *
              C153920 +
          ((C83957 * C153680 + (C83943 + C83942 + C83941) * C153637 * C153687 +
            (C85414 + C85415 + C85416) * C153637 * C83601) *
               C153849 -
           ((C152156 * C5564 - C83607 * C5561 - C152156 * C5565 +
             C83598 * C5570 + C152106 * C5566 - C152145 * C5562 -
             C152106 * C5567 + C153475 * C5571 + C152110 * C5568 -
             C152150 * C5563 - C152110 * C5569 + C153467 * C5572) *
                C153637 * C83601 +
            (C86426 + C86425 + C86424) * C153637 * C153687 + C86420 * C153680) *
               C153601) *
              C1469) *
         C153502) /
        (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
            C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
            C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
               C153637 * C153680 +
           (C83935 + C83936 + C83937) * C153637 * C153687 + C83957 * C83601) *
              C153537 * C1178 -
          (C85410 * C83601 + (C83940 + C83939 + C83938) * C153637 * C153687 +
           (C83937 + C83936 + C83935) * C153637 * C153680) *
              C153537 * C1179 +
          (C83957 * C153680 + (C83943 + C83942 + C83941) * C153637 * C153687 +
           (C85414 + C85415 + C85416) * C153637 * C83601) *
              C153537 * C1180 -
          ((C152156 * C4530 - C83607 * C4527 - C152156 * C4531 +
            C83598 * C4536 + C152106 * C4532 - C152145 * C4528 -
            C152106 * C4533 + C153475 * C4537 + C152110 * C4534 -
            C152150 * C4529 - C152110 * C4535 + C153467 * C4538) *
               C153637 * C83601 +
           (C85416 + C85415 + C85414) * C153637 * C153687 + C85410 * C153680) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153637 * C153680 +
            (C83935 + C83936 + C83937) * C153637 * C153687 + C83957 * C83601) *
               C153537 * C1091 -
           ((C83941 + C83942 + C83943) * C153637 * C83601 +
            (C83940 + C83939 + C83938) * C153637 * C153687 +
            (C83937 + C83936 + C83935) * C153637 * C153680) *
               C153537 * C153573) *
              C1093 +
          (((C83944 + C83945 + C83946) * C153637 * C153680 +
            (C83947 + C83948 + C83949) * C153637 * C153687 +
            (C83950 + C83951 + C83952) * C153637 * C83601) *
               C153537 * C153573 -
           (C83958 * C83601 + (C83946 + C83945 + C83944) * C153637 * C153687 +
            (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
             C152106 * C156 - C152145 * C146 - C152106 * C157 + C153475 * C170 +
             C152110 * C154 - C152150 * C145 - C152110 * C155 +
             C153467 * C169) *
                C153637 * C153680) *
               C153537 * C1091) *
              C1094 +
          (((C152110 * C156 - C152150 * C146 - C152110 * C157 + C153467 * C170 +
             C152106 * C158 - C152145 * C147 - C152106 * C159 + C153475 * C171 +
             C152156 * C160 - C83607 * C148 - C152156 * C161 + C83598 * C172) *
                C153637 * C153680 +
            (C84431 + C84432 + C84433) * C153637 * C153687 +
            (C84434 + C84435 + C84436) * C153637 * C83601) *
               C153537 * C1091 -
           ((C152156 * C1188 - C83607 * C1183 - C152156 * C1189 +
             C83598 * C1198 + C152106 * C1190 - C152145 * C1184 -
             C152106 * C1191 + C153475 * C1199 + C152110 * C1192 -
             C152150 * C1185 - C152110 * C1193 + C153467 * C1200) *
                C153637 * C83601 +
            (C84436 + C84435 + C84434) * C153637 * C153687 +
            (C84433 + C84432 + C84431) * C153637 * C153680) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153637 * C153680 +
            (C83935 + C83936 + C83937) * C153637 * C153687 + C83957 * C83601) *
               C473 -
           ((C85017 + C85018 + C85019) * C153637 * C83601 +
            (C85020 + C85021 + C85022) * C153637 * C153687 +
            (C152156 * C492 - C83607 * C478 - C152156 * C493 + C83598 * C514 +
             C152106 * C494 - C152145 * C479 - C152106 * C495 + C153475 * C515 +
             C152110 * C496 - C152150 * C480 - C152110 * C497 +
             C153467 * C516) *
                C153637 * C153680) *
               C474 +
           ((C152110 * C498 - C152150 * C481 - C152110 * C499 + C153467 * C517 +
             C152106 * C500 - C152145 * C482 - C152106 * C501 + C153475 * C518 +
             C152156 * C502 - C83607 * C483 - C152156 * C503 + C83598 * C519) *
                C153637 * C153680 +
            (C85671 + C85672 + C85673) * C153637 * C153687 +
            (C85674 + C85675 + C85676) * C153637 * C83601) *
               C475) *
              C1091 +
          (((C85022 + C85021 + C85020) * C153637 * C153680 +
            (C85019 + C85018 + C85017) * C153637 * C153687 +
            (C152110 * C4067 - C152150 * C4063 - C152110 * C4068 +
             C153467 * C4075 + C152106 * C4069 - C152145 * C4064 -
             C152106 * C4070 + C153475 * C4076 + C152156 * C4071 -
             C83607 * C4065 - C152156 * C4072 + C83598 * C4077) *
                C153637 * C83601) *
               C474 -
           (C85410 * C83601 + (C83940 + C83939 + C83938) * C153637 * C153687 +
            (C83937 + C83936 + C83935) * C153637 * C153680) *
               C473 -
           ((C152156 * C4784 - C83607 * C4781 - C152156 * C4785 +
             C83598 * C4790 + C152106 * C4786 - C152145 * C4782 -
             C152106 * C4787 + C153475 * C4791 + C152110 * C4788 -
             C152150 * C4783 - C152110 * C4789 + C153467 * C4792) *
                C153637 * C83601 +
            (C85676 + C85675 + C85674) * C153637 * C153687 +
            (C85673 + C85672 + C85671) * C153637 * C153680) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
              C153467 * C168 + C152106 * C154 - C152145 * C145 -
              C152106 * C155 + C153475 * C169 + C152156 * C156 - C83607 * C146 -
              C152156 * C157 + C83598 * C170) *
                 C153637 * C153680 +
             (C83935 + C83936 + C83937) * C153637 * C153687 + C83957 * C83601) *
                C153849 -
            ((C85017 + C85018 + C85019) * C153637 * C83601 +
             (C85020 + C85021 + C85022) * C153637 * C153687 +
             (C152156 * C492 - C83607 * C478 - C152156 * C493 + C83598 * C514 +
              C152106 * C494 - C152145 * C479 - C152106 * C495 +
              C153475 * C515 + C152110 * C496 - C152150 * C480 -
              C152110 * C497 + C153467 * C516) *
                 C153637 * C153680) *
                C153601) *
               C1091 +
           (((C85022 + C85021 + C85020) * C153637 * C153680 +
             (C85019 + C85018 + C85017) * C153637 * C153687 +
             (C152110 * C4067 - C152150 * C4063 - C152110 * C4068 +
              C153467 * C4075 + C152106 * C4069 - C152145 * C4064 -
              C152106 * C4070 + C153475 * C4076 + C152156 * C4071 -
              C83607 * C4065 - C152156 * C4072 + C83598 * C4077) *
                 C153637 * C83601) *
                C153601 -
            (C85410 * C83601 + (C83940 + C83939 + C83938) * C153637 * C153687 +
             (C83937 + C83936 + C83935) * C153637 * C153680) *
                C153849) *
               C153573) *
              C153840 +
          ((((C152110 * C494 - C152150 * C479 - C152110 * C495 +
              C153467 * C515 + C152106 * C492 - C152145 * C478 -
              C152106 * C493 + C153475 * C514 + C152156 * C490 - C83607 * C477 -
              C152156 * C491 + C83598 * C513) *
                 C153637 * C153680 +
             (C85023 + C85024 + C85025) * C153637 * C153687 +
             (C85026 + C85027 + C85028) * C153637 * C83601) *
                C153601 -
            (C83958 * C83601 + (C83946 + C83945 + C83944) * C153637 * C153687 +
             (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
              C152106 * C156 - C152145 * C146 - C152106 * C157 +
              C153475 * C170 + C152110 * C154 - C152150 * C145 -
              C152110 * C155 + C153467 * C169) *
                 C153637 * C153680) *
                C153849) *
               C1091 +
           (((C83944 + C83945 + C83946) * C153637 * C153680 +
             (C83947 + C83948 + C83949) * C153637 * C153687 +
             (C83950 + C83951 + C83952) * C153637 * C83601) *
                C153849 -
            ((C152156 * C4073 - C83607 * C4066 - C152156 * C4074 +
              C83598 * C4078 + C152106 * C4071 - C152145 * C4065 -
              C152106 * C4072 + C153475 * C4077 + C152110 * C4069 -
              C152150 * C4064 - C152110 * C4070 + C153467 * C4076) *
                 C153637 * C83601 +
             (C85028 + C85027 + C85026) * C153637 * C153687 +
             (C85025 + C85024 + C85023) * C153637 * C153680) *
                C153601) *
               C153573) *
              C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153637 * C153680 +
            (C83935 + C83936 + C83937) * C153637 * C153687 + C83957 * C83601) *
               C153537 * C1091 -
           ((C83941 + C83942 + C83943) * C153637 * C83601 +
            (C83940 + C83939 + C83938) * C153637 * C153687 +
            (C83937 + C83936 + C83935) * C153637 * C153680) *
               C153537 * C153573) *
              C1093 +
          (((C83944 + C83945 + C83946) * C153637 * C153680 +
            (C83947 + C83948 + C83949) * C153637 * C153687 +
            (C83950 + C83951 + C83952) * C153637 * C83601) *
               C153537 * C153573 -
           (C83958 * C83601 + (C83946 + C83945 + C83944) * C153637 * C153687 +
            (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
             C152106 * C156 - C152145 * C146 - C152106 * C157 + C153475 * C170 +
             C152110 * C154 - C152150 * C145 - C152110 * C155 +
             C153467 * C169) *
                C153637 * C153680) *
               C153537 * C1091) *
              C1094 +
          (((C152110 * C156 - C152150 * C146 - C152110 * C157 + C153467 * C170 +
             C152106 * C158 - C152145 * C147 - C152106 * C159 + C153475 * C171 +
             C152156 * C160 - C83607 * C148 - C152156 * C161 + C83598 * C172) *
                C153637 * C153680 +
            (C84431 + C84432 + C84433) * C153637 * C153687 +
            (C84434 + C84435 + C84436) * C153637 * C83601) *
               C153537 * C1091 -
           ((C152156 * C1188 - C83607 * C1183 - C152156 * C1189 +
             C83598 * C1198 + C152106 * C1190 - C152145 * C1184 -
             C152106 * C1191 + C153475 * C1199 + C152110 * C1192 -
             C152150 * C1185 - C152110 * C1193 + C153467 * C1200) *
                C153637 * C83601 +
            (C84436 + C84435 + C84434) * C153637 * C153687 +
            (C84433 + C84432 + C84431) * C153637 * C153680) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
            C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
            C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
               C153637 * C153680 +
           (C83935 + C83936 + C83937) * C153637 * C153687 + C83957 * C83601) *
              C153537 * C1178 -
          (C85410 * C83601 + (C83940 + C83939 + C83938) * C153637 * C153687 +
           (C83937 + C83936 + C83935) * C153637 * C153680) *
              C153537 * C1179 +
          (C83957 * C153680 + (C83943 + C83942 + C83941) * C153637 * C153687 +
           (C85414 + C85415 + C85416) * C153637 * C83601) *
              C153537 * C1180 -
          ((C152156 * C4530 - C83607 * C4527 - C152156 * C4531 +
            C83598 * C4536 + C152106 * C4532 - C152145 * C4528 -
            C152106 * C4533 + C153475 * C4537 + C152110 * C4534 -
            C152150 * C4529 - C152110 * C4535 + C153467 * C4538) *
               C153637 * C83601 +
           (C85416 + C85415 + C85414) * C153637 * C153687 + C85410 * C153680) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
              C153467 * C168 + C152106 * C154 - C152145 * C145 -
              C152106 * C155 + C153475 * C169 + C152156 * C156 - C83607 * C146 -
              C152156 * C157 + C83598 * C170) *
                 C153637 * C153680 +
             (C83935 + C83936 + C83937) * C153637 * C153687 + C83957 * C83601) *
                C1898 -
            (C86420 * C83601 + (C85020 + C85021 + C85022) * C153637 * C153687 +
             (C152156 * C492 - C83607 * C478 - C152156 * C493 + C83598 * C514 +
              C152106 * C494 - C152145 * C479 - C152106 * C495 +
              C153475 * C515 + C152110 * C496 - C152150 * C480 -
              C152110 * C497 + C153467 * C516) *
                 C153637 * C153680) *
                C153601) *
               C153848 +
           (((C85022 + C85021 + C85020) * C153637 * C153680 +
             (C85019 + C85018 + C85017) * C153637 * C153687 +
             (C86424 + C86425 + C86426) * C153637 * C83601) *
                C153601 -
            (C85410 * C83601 + (C83940 + C83939 + C83938) * C153637 * C153687 +
             (C83937 + C83936 + C83935) * C153637 * C153680) *
                C1898) *
               C153573) *
              C153840 +
          ((((C152110 * C494 - C152150 * C479 - C152110 * C495 +
              C153467 * C515 + C152106 * C492 - C152145 * C478 -
              C152106 * C493 + C153475 * C514 + C152156 * C490 - C83607 * C477 -
              C152156 * C491 + C83598 * C513) *
                 C153637 * C153680 +
             (C85023 + C85024 + C85025) * C153637 * C153687 +
             (C85026 + C85027 + C85028) * C153637 * C83601) *
                C153601 -
            (C83958 * C83601 + (C83946 + C83945 + C83944) * C153637 * C153687 +
             (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
              C152106 * C156 - C152145 * C146 - C152106 * C157 +
              C153475 * C170 + C152110 * C154 - C152150 * C145 -
              C152110 * C155 + C153467 * C169) *
                 C153637 * C153680) *
                C1898) *
               C153848 +
           (((C83944 + C83945 + C83946) * C153637 * C153680 +
             (C83947 + C83948 + C83949) * C153637 * C153687 +
             (C83950 + C83951 + C83952) * C153637 * C83601) *
                C1898 -
            ((C152156 * C4073 - C83607 * C4066 - C152156 * C4074 +
              C83598 * C4078 + C152106 * C4071 - C152145 * C4065 -
              C152106 * C4072 + C153475 * C4077 + C152110 * C4069 -
              C152150 * C4064 - C152110 * C4070 + C153467 * C4076) *
                 C153637 * C83601 +
             (C85028 + C85027 + C85026) * C153637 * C153687 +
             (C85025 + C85024 + C85023) * C153637 * C153680) *
                C153601) *
               C153573) *
              C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153637 * C153680 +
            (C83935 + C83936 + C83937) * C153637 * C153687 + C83957 * C83601) *
               C153921 -
           (C86420 * C83601 + (C85020 + C85021 + C85022) * C153637 * C153687 +
            (C152156 * C492 - C83607 * C478 - C152156 * C493 + C83598 * C514 +
             C152106 * C494 - C152145 * C479 - C152106 * C495 + C153475 * C515 +
             C152110 * C496 - C152150 * C480 - C152110 * C497 +
             C153467 * C516) *
                C153637 * C153680) *
               C153922 +
           ((C152110 * C498 - C152150 * C481 - C152110 * C499 + C153467 * C517 +
             C152106 * C500 - C152145 * C482 - C152106 * C501 + C153475 * C518 +
             C152156 * C502 - C83607 * C483 - C152156 * C503 + C83598 * C519) *
                C153637 * C153680 +
            (C85671 + C85672 + C85673) * C153637 * C153687 +
            (C85674 + C85675 + C85676) * C153637 * C83601) *
               C2414) *
              C153848 +
          (((C85022 + C85021 + C85020) * C153637 * C153680 +
            (C85019 + C85018 + C85017) * C153637 * C153687 +
            (C86424 + C86425 + C86426) * C153637 * C83601) *
               C153922 -
           (C85410 * C83601 + (C83940 + C83939 + C83938) * C153637 * C153687 +
            (C83937 + C83936 + C83935) * C153637 * C153680) *
               C153921 -
           ((C152156 * C4784 - C83607 * C4781 - C152156 * C4785 +
             C83598 * C4790 + C152106 * C4786 - C152145 * C4782 -
             C152106 * C4787 + C153475 * C4791 + C152110 * C4788 -
             C152150 * C4783 - C152110 * C4789 + C153467 * C4792) *
                C153637 * C83601 +
            (C85676 + C85675 + C85674) * C153637 * C153687 +
            (C85673 + C85672 + C85671) * C153637 * C153680) *
               C2414) *
              C153573) *
         C153502) /
        (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153637 * C153680 +
            (C83935 + C83936 + C83937) * C153637 * C153687 + C83957 * C83601) *
               C1898 -
           (C86420 * C83601 + (C85020 + C85021 + C85022) * C153637 * C153687 +
            (C152156 * C492 - C83607 * C478 - C152156 * C493 + C83598 * C514 +
             C152106 * C494 - C152145 * C479 - C152106 * C495 + C153475 * C515 +
             C152110 * C496 - C152150 * C480 - C152110 * C497 +
             C153467 * C516) *
                C153637 * C153680) *
               C153601) *
              C298 +
          (((C85022 + C85021 + C85020) * C153637 * C153680 +
            (C85019 + C85018 + C85017) * C153637 * C153687 +
            (C86424 + C86425 + C86426) * C153637 * C83601) *
               C153601 -
           (C85410 * C83601 + (C83940 + C83939 + C83938) * C153637 * C153687 +
            (C83937 + C83936 + C83935) * C153637 * C153680) *
               C1898) *
              C299 +
          ((C83957 * C153680 + (C83943 + C83942 + C83941) * C153637 * C153687 +
            (C85414 + C85415 + C85416) * C153637 * C83601) *
               C1898 -
           ((C152156 * C5564 - C83607 * C5561 - C152156 * C5565 +
             C83598 * C5570 + C152106 * C5566 - C152145 * C5562 -
             C152106 * C5567 + C153475 * C5571 + C152110 * C5568 -
             C152150 * C5563 - C152110 * C5569 + C153467 * C5572) *
                C153637 * C83601 +
            (C86426 + C86425 + C86424) * C153637 * C153687 + C86420 * C153680) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153637 * C153680 +
            (C83935 + C83936 + C83937) * C153637 * C153687 + C83957 * C83601) *
               C1898 -
           (C86420 * C83601 + (C85020 + C85021 + C85022) * C153637 * C153687 +
            (C152156 * C492 - C83607 * C478 - C152156 * C493 + C83598 * C514 +
             C152106 * C494 - C152145 * C479 - C152106 * C495 + C153475 * C515 +
             C152110 * C496 - C152150 * C480 - C152110 * C497 +
             C153467 * C516) *
                C153637 * C153680) *
               C153601) *
              C153521 * C1093 +
          (((C152110 * C494 - C152150 * C479 - C152110 * C495 + C153467 * C515 +
             C152106 * C492 - C152145 * C478 - C152106 * C493 + C153475 * C514 +
             C152156 * C490 - C83607 * C477 - C152156 * C491 + C83598 * C513) *
                C153637 * C153680 +
            (C85023 + C85024 + C85025) * C153637 * C153687 +
            (C85026 + C85027 + C85028) * C153637 * C83601) *
               C153601 -
           (C83958 * C83601 + (C83946 + C83945 + C83944) * C153637 * C153687 +
            (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
             C152106 * C156 - C152145 * C146 - C152106 * C157 + C153475 * C170 +
             C152110 * C154 - C152150 * C145 - C152110 * C155 +
             C153467 * C169) *
                C153637 * C153680) *
               C1898) *
              C153521 * C1094 +
          (((C152110 * C156 - C152150 * C146 - C152110 * C157 + C153467 * C170 +
             C152106 * C158 - C152145 * C147 - C152106 * C159 + C153475 * C171 +
             C152156 * C160 - C83607 * C148 - C152156 * C161 + C83598 * C172) *
                C153637 * C153680 +
            (C84431 + C84432 + C84433) * C153637 * C153687 +
            (C84434 + C84435 + C84436) * C153637 * C83601) *
               C1898 -
           ((C152156 * C1761 - C83607 * C1756 - C152156 * C1762 +
             C83598 * C1771 + C152106 * C1763 - C152145 * C1757 -
             C152106 * C1764 + C153475 * C1772 + C152110 * C1765 -
             C152150 * C1758 - C152110 * C1766 + C153467 * C1773) *
                C153637 * C83601 +
            (C152156 * C959 - C83607 * C949 - C152156 * C960 + C83598 * C967 +
             C152106 * C957 - C152145 * C948 - C152106 * C958 + C153475 * C966 +
             C152110 * C955 - C152150 * C947 - C152110 * C956 +
             C153467 * C965) *
                C153637 * C153687 +
            (C152156 * C488 - C83607 * C476 - C152156 * C489 + C83598 * C512 +
             C152106 * C490 - C152145 * C477 - C152106 * C491 + C153475 * C513 +
             C152110 * C492 - C152150 * C478 - C152110 * C493 +
             C153467 * C514) *
                C153637 * C153680) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
            C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
            C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
               C153637 * C153680 +
           (C83935 + C83936 + C83937) * C153637 * C153687 + C83957 * C83601) *
              C2104 -
          (C86420 * C83601 + (C85020 + C85021 + C85022) * C153637 * C153687 +
           (C152156 * C492 - C83607 * C478 - C152156 * C493 + C83598 * C514 +
            C152106 * C494 - C152145 * C479 - C152106 * C495 + C153475 * C515 +
            C152110 * C496 - C152150 * C480 - C152110 * C497 + C153467 * C516) *
               C153637 * C153680) *
              C2105 +
          ((C152110 * C498 - C152150 * C481 - C152110 * C499 + C153467 * C517 +
            C152106 * C500 - C152145 * C482 - C152106 * C501 + C153475 * C518 +
            C152156 * C502 - C83607 * C483 - C152156 * C503 + C83598 * C519) *
               C153637 * C153680 +
           (C85671 + C85672 + C85673) * C153637 * C153687 +
           (C85674 + C85675 + C85676) * C153637 * C83601) *
              C2106 -
          ((C152156 * C6185 - C83607 * C6179 - C152156 * C6186 +
            C83598 * C6197 + C152106 * C6187 - C152145 * C6180 -
            C152106 * C6188 + C153475 * C6198 + C152110 * C6189 -
            C152150 * C6181 - C152110 * C6190 + C153467 * C6199) *
               C153637 * C83601 +
           (C152156 * C6191 - C83607 * C6182 - C152156 * C6192 +
            C83598 * C6200 + C152106 * C6193 - C152145 * C6183 -
            C152106 * C6194 + C153475 * C6201 + C152110 * C6195 -
            C152150 * C6184 - C152110 * C6196 + C153467 * C6202) *
               C153637 * C153687 +
           (C152156 * C2117 - C83607 * C2110 - C152156 * C2118 +
            C83598 * C2125 + C152106 * C2119 - C152145 * C2111 -
            C152106 * C2120 + C153475 * C2126 + C152110 * C2121 -
            C152150 * C2112 - C152110 * C2122 + C153467 * C2127) *
               C153637 * C153680) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153637 * C153680 +
            (C83935 + C83936 + C83937) * C153637 * C153687 + C83957 * C83601) *
               C153921 -
           (C86420 * C83601 + (C85020 + C85021 + C85022) * C153637 * C153687 +
            (C152156 * C492 - C83607 * C478 - C152156 * C493 + C83598 * C514 +
             C152106 * C494 - C152145 * C479 - C152106 * C495 + C153475 * C515 +
             C152110 * C496 - C152150 * C480 - C152110 * C497 +
             C153467 * C516) *
                C153637 * C153680) *
               C153922 +
           ((C152110 * C498 - C152150 * C481 - C152110 * C499 + C153467 * C517 +
             C152106 * C500 - C152145 * C482 - C152106 * C501 + C153475 * C518 +
             C152156 * C502 - C83607 * C483 - C152156 * C503 + C83598 * C519) *
                C153637 * C153680 +
            (C85671 + C85672 + C85673) * C153637 * C153687 +
            (C85674 + C85675 + C85676) * C153637 * C83601) *
               C2414) *
              C153521 * C153840 +
          (((C152110 * C494 - C152150 * C479 - C152110 * C495 + C153467 * C515 +
             C152106 * C492 - C152145 * C478 - C152106 * C493 + C153475 * C514 +
             C152156 * C490 - C83607 * C477 - C152156 * C491 + C83598 * C513) *
                C153637 * C153680 +
            (C85023 + C85024 + C85025) * C153637 * C153687 +
            (C85026 + C85027 + C85028) * C153637 * C83601) *
               C153922 -
           (C83958 * C83601 + (C83946 + C83945 + C83944) * C153637 * C153687 +
            (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
             C152106 * C156 - C152145 * C146 - C152106 * C157 + C153475 * C170 +
             C152110 * C154 - C152150 * C145 - C152110 * C155 +
             C153467 * C169) *
                C153637 * C153680) *
               C153921 -
           ((C152156 * C3289 - C83607 * C3282 - C152156 * C3290 +
             C83598 * C3294 + C152106 * C3287 - C152145 * C3281 -
             C152106 * C3288 + C153475 * C3293 + C152110 * C3285 -
             C152150 * C3280 - C152110 * C3286 + C153467 * C3292) *
                C153637 * C83601 +
            (C152156 * C1332 - C83607 * C1326 - C152156 * C1333 +
             C83598 * C1341 + C152106 * C1334 - C152145 * C1327 -
             C152106 * C1335 + C153475 * C1342 + C152110 * C1336 -
             C152150 * C1328 - C152110 * C1337 + C153467 * C1343) *
                C153637 * C153687 +
            (C152156 * C504 - C83607 * C484 - C152156 * C505 + C83598 * C520 +
             C152106 * C502 - C152145 * C483 - C152106 * C503 + C153475 * C519 +
             C152110 * C500 - C152150 * C482 - C152110 * C501 +
             C153467 * C518) *
                C153637 * C153680) *
               C2414) *
              C153521 * C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153637 * C153680 +
            (C83935 + C83936 + C83937) * C153637 * C153687 + C83957 * C83601) *
               C1898 -
           (C86420 * C83601 + (C85020 + C85021 + C85022) * C153637 * C153687 +
            (C152156 * C492 - C83607 * C478 - C152156 * C493 + C83598 * C514 +
             C152106 * C494 - C152145 * C479 - C152106 * C495 + C153475 * C515 +
             C152110 * C496 - C152150 * C480 - C152110 * C497 +
             C153467 * C516) *
                C153637 * C153680) *
               C153601) *
              C153521 * C1093 +
          (((C152110 * C494 - C152150 * C479 - C152110 * C495 + C153467 * C515 +
             C152106 * C492 - C152145 * C478 - C152106 * C493 + C153475 * C514 +
             C152156 * C490 - C83607 * C477 - C152156 * C491 + C83598 * C513) *
                C153637 * C153680 +
            (C85023 + C85024 + C85025) * C153637 * C153687 +
            (C85026 + C85027 + C85028) * C153637 * C83601) *
               C153601 -
           (C83958 * C83601 + (C83946 + C83945 + C83944) * C153637 * C153687 +
            (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
             C152106 * C156 - C152145 * C146 - C152106 * C157 + C153475 * C170 +
             C152110 * C154 - C152150 * C145 - C152110 * C155 +
             C153467 * C169) *
                C153637 * C153680) *
               C1898) *
              C153521 * C1094 +
          (((C152110 * C156 - C152150 * C146 - C152110 * C157 + C153467 * C170 +
             C152106 * C158 - C152145 * C147 - C152106 * C159 + C153475 * C171 +
             C152156 * C160 - C83607 * C148 - C152156 * C161 + C83598 * C172) *
                C153637 * C153680 +
            (C84431 + C84432 + C84433) * C153637 * C153687 +
            (C84434 + C84435 + C84436) * C153637 * C83601) *
               C1898 -
           ((C152156 * C1761 - C83607 * C1756 - C152156 * C1762 +
             C83598 * C1771 + C152106 * C1763 - C152145 * C1757 -
             C152106 * C1764 + C153475 * C1772 + C152110 * C1765 -
             C152150 * C1758 - C152110 * C1766 + C153467 * C1773) *
                C153637 * C83601 +
            (C152156 * C959 - C83607 * C949 - C152156 * C960 + C83598 * C967 +
             C152106 * C957 - C152145 * C948 - C152106 * C958 + C153475 * C966 +
             C152110 * C955 - C152150 * C947 - C152110 * C956 +
             C153467 * C965) *
                C153637 * C153687 +
            (C152156 * C488 - C83607 * C476 - C152156 * C489 + C83598 * C512 +
             C152106 * C490 - C152145 * C477 - C152106 * C491 + C153475 * C513 +
             C152110 * C492 - C152150 * C478 - C152110 * C493 +
             C153467 * C514) *
                C153637 * C153680) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153637 * C153680 +
            (C83935 + C83936 + C83937) * C153637 * C153687 + C83957 * C83601) *
               C1898 -
           (C86420 * C83601 + (C85020 + C85021 + C85022) * C153637 * C153687 +
            (C152156 * C492 - C83607 * C478 - C152156 * C493 + C83598 * C514 +
             C152106 * C494 - C152145 * C479 - C152106 * C495 + C153475 * C515 +
             C152110 * C496 - C152150 * C480 - C152110 * C497 +
             C153467 * C516) *
                C153637 * C153680) *
               C153601) *
              C298 +
          (((C85022 + C85021 + C85020) * C153637 * C153680 +
            (C85019 + C85018 + C85017) * C153637 * C153687 +
            (C86424 + C86425 + C86426) * C153637 * C83601) *
               C153601 -
           (C85410 * C83601 + (C83940 + C83939 + C83938) * C153637 * C153687 +
            (C83937 + C83936 + C83935) * C153637 * C153680) *
               C1898) *
              C299 +
          ((C83957 * C153680 + (C83943 + C83942 + C83941) * C153637 * C153687 +
            (C85414 + C85415 + C85416) * C153637 * C83601) *
               C1898 -
           ((C152156 * C5564 - C83607 * C5561 - C152156 * C5565 +
             C83598 * C5570 + C152106 * C5566 - C152145 * C5562 -
             C152106 * C5567 + C153475 * C5571 + C152110 * C5568 -
             C152150 * C5563 - C152110 * C5569 + C153467 * C5572) *
                C153637 * C83601 +
            (C86426 + C86425 + C86424) * C153637 * C153687 + C86420 * C153680) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153864 +
             (C78877 + C78878) * C153724) *
                C153680 +
            ((C74581 + C74582) * C153864 + C79917 * C153724) * C153687 +
            C93646 * C83601) *
               C153537 * C153848 -
           ((C76795 * C153724 + C75896 * C153864) * C83601 +
            (C76796 * C153724 + (C74584 + C74583) * C153864) * C153687 +
            (C79919 * C153724 + (C74582 + C74581) * C153864) * C153680) *
               C153537 * C153573) *
              C153917 +
          ((((C74589 + C74590) * C153864 + C79920 * C153724) * C153680 +
            ((C74591 + C74592) * C153864 + (C75567 + C75568) * C153724) *
                C153687 +
            ((C74593 + C74594) * C153864 + (C75569 + C75570) * C153724) *
                C83601) *
               C153537 * C153573 -
           (C93648 * C83601 +
            (C79922 * C153724 + (C74590 + C74589) * C153864) * C153687 +
            ((C78886 + C78885) * C153724 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153864) *
                C153680) *
               C153537 * C153848) *
              C153918 +
          ((((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
              C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                 C153864 +
             (C79527 + C79528) * C153724) *
                C153680 +
            ((C75029 + C75030) * C153864 + (C79209 + C79210) * C153724) *
                C153687 +
            ((C75031 + C75032) * C153864 + (C94241 + C94242) * C153724) *
                C83601) *
               C153537 * C153848 -
           (((C74288 * C4073 - C74289 * C4066 - C74288 * C4074 +
              C153472 * C4078 + C74286 * C4071 - C74287 * C4065 -
              C74286 * C4072 + C74280 * C4077) *
                 C153724 +
             (C75034 + C75033) * C153864) *
                C83601 +
            ((C94242 + C94241) * C153724 + (C75032 + C75031) * C153864) *
                C153687 +
            ((C79210 + C79209) * C153724 + (C75030 + C75029) * C153864) *
                C153680) *
               C153537 * C153573) *
              C650)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
               C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                  C153864 +
              (C78877 + C78878) * C153724) *
                 C153680 +
             ((C74581 + C74582) * C153864 + C79917 * C153724) * C153687 +
             C93646 * C83601) *
                C153849 -
            ((C80715 * C153724 + C76796 * C153864) * C83601 +
             (C79918 * C153724 + C79919 * C153864) * C153687 +
             ((C78880 + C78879) * C153724 + (C78878 + C78877) * C153864) *
                 C153680) *
                C153601) *
               C153848 +
           (((C79917 * C153864 + C78795 * C153724) * C153680 +
             (C81694 * C153864 + C81695 * C153724) * C153687 +
             ((C75560 + C75559) * C153864 + (C76147 + C76148) * C153724) *
                 C83601) *
                C153601 -
            ((C76795 * C153724 + C75896 * C153864) * C83601 +
             (C76796 * C153724 + (C74584 + C74583) * C153864) * C153687 +
             (C79919 * C153724 + (C74582 + C74581) * C153864) * C153680) *
                C153849) *
               C153573) *
              C301 +
          (((((C78885 + C78886) * C153864 + (C78887 + C78888) * C153724) *
                 C153680 +
             (C79920 * C153864 + C79921 * C153724) * C153687 +
             (C94919 * C153864 + (C78487 + C78488) * C153724) * C83601) *
                C153601 -
            (C93648 * C83601 +
             (C79922 * C153724 + (C74590 + C74589) * C153864) * C153687 +
             ((C78886 + C78885) * C153724 +
              (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
               C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                  C153864) *
                 C153680) *
                C153849) *
               C153848 +
           ((((C74589 + C74590) * C153864 + C79920 * C153724) * C153680 +
             ((C74591 + C74592) * C153864 + C94919 * C153724) * C153687 +
             ((C74593 + C74594) * C153864 + (C75569 + C75570) * C153724) *
                 C83601) *
                C153849 -
            (((C74288 * C4784 - C74289 * C4781 - C74288 * C4785 +
               C153472 * C4790 + C74286 * C4786 - C74287 * C4782 -
               C74286 * C4787 + C74280 * C4791) *
                  C153724 +
              (C75570 + C75569) * C153864) *
                 C83601 +
             ((C78488 + C78487) * C153724 + C93644 * C153864) * C153687 +
             (C78844 * C153724 + C79922 * C153864) * C153680) *
                C153601) *
               C153573) *
              C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153864 +
             (C78877 + C78878) * C153724) *
                C153680 +
            ((C74581 + C74582) * C153864 + C79917 * C153724) * C153687 +
            C93646 * C83601) *
               C153537 * C298 -
           ((C76795 * C153724 + C75896 * C153864) * C83601 +
            (C76796 * C153724 + (C74584 + C74583) * C153864) * C153687 +
            (C79919 * C153724 + (C74582 + C74581) * C153864) * C153680) *
               C153537 * C299 +
           (C93646 * C153680 +
            (C74598 * C153864 + (C75560 + C75559) * C153724) * C153687 +
            ((C74588 + C74587) * C153864 + (C76811 + C76812) * C153724) *
                C83601) *
               C153537 * C300) *
              C301 +
          ((((C74589 + C74590) * C153864 + C79920 * C153724) * C153680 +
            ((C74591 + C74592) * C153864 + (C75567 + C75568) * C153724) *
                C153687 +
            ((C74593 + C74594) * C153864 + (C75569 + C75570) * C153724) *
                C83601) *
               C153537 * C299 -
           (C93648 * C83601 +
            (C79922 * C153724 + (C74590 + C74589) * C153864) * C153687 +
            ((C78886 + C78885) * C153724 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153864) *
                C153680) *
               C153537 * C298 -
           (((C74288 * C5564 - C74289 * C5561 - C74288 * C5565 +
              C153472 * C5570 + C74286 * C5566 - C74287 * C5562 -
              C74286 * C5567 + C74280 * C5571) *
                 C153724 +
             (C74596 + C74595) * C153864) *
                C83601 +
            ((C75570 + C75569) * C153724 + C74599 * C153864) * C153687 +
            C93648 * C153680) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153864 +
            (C78877 + C78878) * C153724) *
               C153680 +
           ((C74581 + C74582) * C153864 + C79917 * C153724) * C153687 +
           (C74597 * C153864 + C81694 * C153724) * C83601) *
              C153537 * C153521 * C130 -
          (((C75568 + C75567) * C153724 + C74600 * C153864) * C83601 +
           (C79922 * C153724 + (C74590 + C74589) * C153864) * C153687 +
           ((C78886 + C78885) * C153724 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153864) *
               C153680) *
              C153537 * C153521 * C131 +
          (((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
             C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                C153864 +
            (C79527 + C79528) * C153724) *
               C153680 +
           ((C75029 + C75030) * C153864 + (C79209 + C79210) * C153724) *
               C153687 +
           ((C75031 + C75032) * C153864 +
            (C74286 * C1765 - C74287 * C1758 - C74286 * C1766 + C74280 * C1773 +
             C74288 * C1763 - C74289 * C1757 - C74288 * C1764 +
             C153472 * C1772) *
                C153724) *
               C83601) *
              C153537 * C153521 * C132 -
          (((C74288 * C1761 - C74289 * C1756 - C74288 * C1762 +
             C153472 * C1771 + C74286 * C1763 - C74287 * C1757 -
             C74286 * C1764 + C74280 * C1772) *
                C153724 +
            (C74288 * C333 - C74289 * C312 - C74288 * C334 + C153472 * C348 +
             C74286 * C331 - C74287 * C311 - C74286 * C332 + C74280 * C347) *
                C153864) *
               C83601 +
           ((C74288 * C959 - C74289 * C949 - C74288 * C960 + C153472 * C967 +
             C74286 * C957 - C74287 * C948 - C74286 * C958 + C74280 * C966) *
                C153724 +
            (C74288 * C315 - C74289 * C303 - C74288 * C316 + C153472 * C339 +
             C74286 * C317 - C74287 * C304 - C74286 * C318 + C74280 * C340) *
                C153864) *
               C153687 +
           ((C74288 * C488 - C74289 * C476 - C74288 * C489 + C153472 * C512 +
             C74286 * C490 - C74287 * C477 - C74286 * C491 + C74280 * C513) *
                C153724 +
            (C74288 * C160 - C74289 * C148 - C74288 * C161 + C153472 * C172 +
             C74286 * C158 - C74287 * C147 - C74286 * C159 + C74280 * C171) *
                C153864) *
               C153680) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153864 +
             (C78877 + C78878) * C153724) *
                C153680 +
            ((C74581 + C74582) * C153864 + C79917 * C153724) * C153687 +
            C93646 * C83601) *
               C473 -
           ((C80715 * C153724 + C76796 * C153864) * C83601 +
            (C79918 * C153724 + C79919 * C153864) * C153687 +
            ((C78880 + C78879) * C153724 + (C78878 + C78877) * C153864) *
                C153680) *
               C474 +
           ((C78893 * C153864 + (C78884 + C78883) * C153724) * C153680 +
            (C78795 * C153864 + C80698 * C153724) * C153687 +
            (C81695 * C153864 + (C80726 + C80727) * C153724) * C83601) *
               C475) *
              C153521 * C301 +
          ((((C78885 + C78886) * C153864 + (C78887 + C78888) * C153724) *
                C153680 +
            (C79920 * C153864 + C79921 * C153724) * C153687 +
            ((C75567 + C75568) * C153864 + (C78487 + C78488) * C153724) *
                C83601) *
               C474 -
           (C93648 * C83601 +
            (C79922 * C153724 + (C74590 + C74589) * C153864) * C153687 +
            ((C78886 + C78885) * C153724 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153864) *
                C153680) *
               C473 -
           (((C74288 * C6185 - C74289 * C6179 - C74288 * C6186 +
              C153472 * C6197 + C74286 * C6187 - C74287 * C6180 -
              C74286 * C6188 + C74280 * C6198) *
                 C153724 +
             (C78488 + C78487) * C153864) *
                C83601 +
            ((C78892 + C78891) * C153724 + C78844 * C153864) * C153687 +
            ((C78890 + C78889) * C153724 + C78894 * C153864) * C153680) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153864 +
             (C78877 + C78878) * C153724) *
                C153680 +
            ((C74581 + C74582) * C153864 + C79917 * C153724) * C153687 +
            C93646 * C83601) *
               C153849 -
           ((C80715 * C153724 + C76796 * C153864) * C83601 +
            (C79918 * C153724 + C79919 * C153864) * C153687 +
            ((C78880 + C78879) * C153724 + (C78878 + C78877) * C153864) *
                C153680) *
               C153601) *
              C153521 * C153917 +
          ((((C78885 + C78886) * C153864 + (C78887 + C78888) * C153724) *
                C153680 +
            (C79920 * C153864 + C79921 * C153724) * C153687 +
            ((C75567 + C75568) * C153864 + (C78487 + C78488) * C153724) *
                C83601) *
               C153601 -
           (C93648 * C83601 +
            (C79922 * C153724 + (C74590 + C74589) * C153864) * C153687 +
            ((C78886 + C78885) * C153724 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153864) *
                C153680) *
               C153849) *
              C153521 * C153918 +
          ((((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
              C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                 C153864 +
             (C79527 + C79528) * C153724) *
                C153680 +
            ((C75029 + C75030) * C153864 + (C79209 + C79210) * C153724) *
                C153687 +
            ((C75031 + C75032) * C153864 + (C94241 + C94242) * C153724) *
                C83601) *
               C153849 -
           (((C74288 * C3289 - C74289 * C3282 - C74288 * C3290 +
              C153472 * C3294 + C74286 * C3287 - C74287 * C3281 -
              C74286 * C3288 + C74280 * C3293) *
                 C153724 +
             (C94242 + C94241) * C153864) *
                C83601 +
            ((C79212 + C79211) * C153724 + (C79210 + C79209) * C153864) *
                C153687 +
            ((C79530 + C79529) * C153724 + (C79528 + C79527) * C153864) *
                C153680) *
               C153601) *
              C153521 * C650)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153864 +
            (C78877 + C78878) * C153724) *
               C153680 +
           ((C74581 + C74582) * C153864 + C79917 * C153724) * C153687 +
           (C74597 * C153864 + C81694 * C153724) * C83601) *
              C153537 * C153521 * C130 -
          (((C75568 + C75567) * C153724 + C74600 * C153864) * C83601 +
           (C79922 * C153724 + (C74590 + C74589) * C153864) * C153687 +
           ((C78886 + C78885) * C153724 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153864) *
               C153680) *
              C153537 * C153521 * C131 +
          (((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
             C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                C153864 +
            (C79527 + C79528) * C153724) *
               C153680 +
           ((C75029 + C75030) * C153864 + (C79209 + C79210) * C153724) *
               C153687 +
           ((C75031 + C75032) * C153864 +
            (C74286 * C1765 - C74287 * C1758 - C74286 * C1766 + C74280 * C1773 +
             C74288 * C1763 - C74289 * C1757 - C74288 * C1764 +
             C153472 * C1772) *
                C153724) *
               C83601) *
              C153537 * C153521 * C132 -
          (((C74288 * C1761 - C74289 * C1756 - C74288 * C1762 +
             C153472 * C1771 + C74286 * C1763 - C74287 * C1757 -
             C74286 * C1764 + C74280 * C1772) *
                C153724 +
            (C74288 * C333 - C74289 * C312 - C74288 * C334 + C153472 * C348 +
             C74286 * C331 - C74287 * C311 - C74286 * C332 + C74280 * C347) *
                C153864) *
               C83601 +
           ((C74288 * C959 - C74289 * C949 - C74288 * C960 + C153472 * C967 +
             C74286 * C957 - C74287 * C948 - C74286 * C958 + C74280 * C966) *
                C153724 +
            (C74288 * C315 - C74289 * C303 - C74288 * C316 + C153472 * C339 +
             C74286 * C317 - C74287 * C304 - C74286 * C318 + C74280 * C340) *
                C153864) *
               C153687 +
           ((C74288 * C488 - C74289 * C476 - C74288 * C489 + C153472 * C512 +
             C74286 * C490 - C74287 * C477 - C74286 * C491 + C74280 * C513) *
                C153724 +
            (C74288 * C160 - C74289 * C148 - C74288 * C161 + C153472 * C172 +
             C74286 * C158 - C74287 * C147 - C74286 * C159 + C74280 * C171) *
                C153864) *
               C153680) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153864 +
             (C78877 + C78878) * C153724) *
                C153680 +
            ((C74581 + C74582) * C153864 + C79917 * C153724) * C153687 +
            C93646 * C83601) *
               C153537 * C298 -
           ((C76795 * C153724 + C75896 * C153864) * C83601 +
            (C76796 * C153724 + (C74584 + C74583) * C153864) * C153687 +
            (C79919 * C153724 + (C74582 + C74581) * C153864) * C153680) *
               C153537 * C299 +
           (C93646 * C153680 +
            (C74598 * C153864 + (C75560 + C75559) * C153724) * C153687 +
            ((C74588 + C74587) * C153864 + (C76811 + C76812) * C153724) *
                C83601) *
               C153537 * C300) *
              C301 +
          ((((C74589 + C74590) * C153864 + C79920 * C153724) * C153680 +
            ((C74591 + C74592) * C153864 + (C75567 + C75568) * C153724) *
                C153687 +
            ((C74593 + C74594) * C153864 + (C75569 + C75570) * C153724) *
                C83601) *
               C153537 * C299 -
           (C93648 * C83601 +
            (C79922 * C153724 + (C74590 + C74589) * C153864) * C153687 +
            ((C78886 + C78885) * C153724 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153864) *
                C153680) *
               C153537 * C298 -
           (((C74288 * C5564 - C74289 * C5561 - C74288 * C5565 +
              C153472 * C5570 + C74286 * C5566 - C74287 * C5562 -
              C74286 * C5567 + C74280 * C5571) *
                 C153724 +
             (C74596 + C74595) * C153864) *
                C83601 +
            ((C75570 + C75569) * C153724 + C74599 * C153864) * C153687 +
            C93648 * C153680) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153864 +
             (C78877 + C78878) * C153724) *
                C153680 +
            ((C74581 + C74582) * C153864 + C79917 * C153724) * C153687 +
            C93646 * C83601) *
               C153537 * C153919 -
           (C95406 * C83601 +
            (C76796 * C153724 + (C74584 + C74583) * C153864) * C153687 +
            (C79919 * C153724 + (C74582 + C74581) * C153864) * C153680) *
               C153537 * C153920 +
           (C93646 * C153680 +
            (C74598 * C153864 + (C75560 + C75559) * C153724) * C153687 +
            ((C74588 + C74587) * C153864 + (C76811 + C76812) * C153724) *
                C83601) *
               C153537 * C1469) *
              C153840 +
          ((((C74589 + C74590) * C153864 + C79920 * C153724) * C153680 +
            ((C74591 + C74592) * C153864 + C94919 * C153724) * C153687 +
            ((C74593 + C74594) * C153864 + (C75569 + C75570) * C153724) *
                C83601) *
               C153537 * C153920 -
           (C93648 * C83601 +
            (C79922 * C153724 + (C74590 + C74589) * C153864) * C153687 +
            ((C78886 + C78885) * C153724 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153864) *
                C153680) *
               C153537 * C153919 -
           (((C74288 * C5564 - C74289 * C5561 - C74288 * C5565 +
              C153472 * C5570 + C74286 * C5566 - C74287 * C5562 -
              C74286 * C5567 + C74280 * C5571) *
                 C153724 +
             (C74596 + C74595) * C153864) *
                C83601 +
            ((C75570 + C75569) * C153724 + C74599 * C153864) * C153687 +
            C93648 * C153680) *
               C153537 * C1469) *
              C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153864 +
             (C78877 + C78878) * C153724) *
                C153680 +
            ((C74581 + C74582) * C153864 + C79917 * C153724) * C153687 +
            C93646 * C83601) *
               C153849 -
           (C96666 * C83601 + (C79918 * C153724 + C79919 * C153864) * C153687 +
            ((C78880 + C78879) * C153724 + (C78878 + C78877) * C153864) *
                C153680) *
               C153601) *
              C153919 +
          (((C79917 * C153864 + C78795 * C153724) * C153680 +
            (C81694 * C153864 + C81695 * C153724) * C153687 +
            (C96665 * C153864 + (C76147 + C76148) * C153724) * C83601) *
               C153601 -
           (C95406 * C83601 +
            (C76796 * C153724 + (C74584 + C74583) * C153864) * C153687 +
            (C79919 * C153724 + (C74582 + C74581) * C153864) * C153680) *
               C153849) *
              C153920 +
          ((C93646 * C153680 + (C74598 * C153864 + C96665 * C153724) * C153687 +
            ((C74588 + C74587) * C153864 + (C76811 + C76812) * C153724) *
                C83601) *
               C153849 -
           (((C74288 * C28550 - C74289 * C28547 - C74288 * C28551 +
              C153472 * C28553 + C74286 * C28548 - C74287 * C28546 -
              C74286 * C28549 + C74280 * C28552) *
                 C153724 +
             (C76812 + C76811) * C153864) *
                C83601 +
            ((C76148 + C76147) * C153724 + C76795 * C153864) * C153687 +
            C96666 * C153680) *
               C153601) *
              C1469) *
         C153502) /
        (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153864 +
            (C78877 + C78878) * C153724) *
               C153680 +
           ((C74581 + C74582) * C153864 + C79917 * C153724) * C153687 +
           C93646 * C83601) *
              C153537 * C1178 -
          (C95406 * C83601 +
           (C76796 * C153724 + (C74584 + C74583) * C153864) * C153687 +
           (C79919 * C153724 + (C74582 + C74581) * C153864) * C153680) *
              C153537 * C1179 +
          (C93646 * C153680 +
           (C74598 * C153864 + (C75560 + C75559) * C153724) * C153687 +
           ((C74588 + C74587) * C153864 + (C76811 + C76812) * C153724) *
               C83601) *
              C153537 * C1180 -
          (((C74288 * C28996 - C74289 * C28993 - C74288 * C28997 +
             C153472 * C28999 + C74286 * C28994 - C74287 * C28992 -
             C74286 * C28995 + C74280 * C28998) *
                C153724 +
            (C75912 + C75911) * C153864) *
               C83601 +
           ((C76812 + C76811) * C153724 + C75895 * C153864) * C153687 +
           C95406 * C153680) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153864 +
             (C78877 + C78878) * C153724) *
                C153680 +
            ((C74581 + C74582) * C153864 + C79917 * C153724) * C153687 +
            C93646 * C83601) *
               C153537 * C1091 -
           ((C76795 * C153724 + C75896 * C153864) * C83601 +
            (C76796 * C153724 + (C74584 + C74583) * C153864) * C153687 +
            (C79919 * C153724 + (C74582 + C74581) * C153864) * C153680) *
               C153537 * C153573) *
              C1093 +
          ((((C74589 + C74590) * C153864 + C79920 * C153724) * C153680 +
            ((C74591 + C74592) * C153864 + C94919 * C153724) * C153687 +
            ((C74593 + C74594) * C153864 + (C75569 + C75570) * C153724) *
                C83601) *
               C153537 * C153573 -
           (C93648 * C83601 +
            (C79922 * C153724 + (C74590 + C74589) * C153864) * C153687 +
            ((C78886 + C78885) * C153724 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153864) *
                C153680) *
               C153537 * C1091) *
              C1094 +
          ((((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
              C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                 C153864 +
             (C79527 + C79528) * C153724) *
                C153680 +
            ((C75029 + C75030) * C153864 + (C79209 + C79210) * C153724) *
                C153687 +
            ((C75031 + C75032) * C153864 + (C94241 + C94242) * C153724) *
                C83601) *
               C153537 * C1091 -
           (((C74288 * C4073 - C74289 * C4066 - C74288 * C4074 +
              C153472 * C4078 + C74286 * C4071 - C74287 * C4065 -
              C74286 * C4072 + C74280 * C4077) *
                 C153724 +
             (C75034 + C75033) * C153864) *
                C83601 +
            ((C94242 + C94241) * C153724 + (C75032 + C75031) * C153864) *
                C153687 +
            ((C79210 + C79209) * C153724 + (C75030 + C75029) * C153864) *
                C153680) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153864 +
             (C78877 + C78878) * C153724) *
                C153680 +
            ((C74581 + C74582) * C153864 + C79917 * C153724) * C153687 +
            C93646 * C83601) *
               C473 -
           ((C80715 * C153724 + C76796 * C153864) * C83601 +
            (C79918 * C153724 + C79919 * C153864) * C153687 +
            ((C78880 + C78879) * C153724 + (C78878 + C78877) * C153864) *
                C153680) *
               C474 +
           ((C78893 * C153864 + (C78884 + C78883) * C153724) * C153680 +
            (C78795 * C153864 + C80698 * C153724) * C153687 +
            (C81695 * C153864 + (C80726 + C80727) * C153724) * C83601) *
               C475) *
              C1091 +
          (((C79917 * C153864 + C78795 * C153724) * C153680 +
            (C81694 * C153864 + C81695 * C153724) * C153687 +
            ((C75560 + C75559) * C153864 + (C76147 + C76148) * C153724) *
                C83601) *
               C474 -
           (C95406 * C83601 +
            (C76796 * C153724 + (C74584 + C74583) * C153864) * C153687 +
            (C79919 * C153724 + (C74582 + C74581) * C153864) * C153680) *
               C473 -
           (((C74288 * C32074 - C74289 * C32073 - C74288 * C32075 +
              C153472 * C32076 + C74286 * C30186 - C74287 * C30183 -
              C74286 * C30187 + C74280 * C30189) *
                 C153724 +
             (C76148 + C76147) * C153864) *
                C83601 +
            ((C80727 + C80726) * C153724 + C80715 * C153864) * C153687 +
            (C80697 * C153724 + C79918 * C153864) * C153680) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
               C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                  C153864 +
              (C78877 + C78878) * C153724) *
                 C153680 +
             ((C74581 + C74582) * C153864 + C79917 * C153724) * C153687 +
             C93646 * C83601) *
                C153849 -
            ((C80715 * C153724 + C76796 * C153864) * C83601 +
             (C79918 * C153724 + C79919 * C153864) * C153687 +
             ((C78880 + C78879) * C153724 + (C78878 + C78877) * C153864) *
                 C153680) *
                C153601) *
               C1091 +
           (((C79917 * C153864 + C78795 * C153724) * C153680 +
             (C81694 * C153864 + C81695 * C153724) * C153687 +
             ((C75560 + C75559) * C153864 + (C76147 + C76148) * C153724) *
                 C83601) *
                C153601 -
            (C95406 * C83601 +
             (C76796 * C153724 + (C74584 + C74583) * C153864) * C153687 +
             (C79919 * C153724 + (C74582 + C74581) * C153864) * C153680) *
                C153849) *
               C153573) *
              C153840 +
          (((((C78885 + C78886) * C153864 + (C78887 + C78888) * C153724) *
                 C153680 +
             (C79920 * C153864 + C79921 * C153724) * C153687 +
             (C94919 * C153864 + (C78487 + C78488) * C153724) * C83601) *
                C153601 -
            (C93648 * C83601 +
             (C79922 * C153724 + (C74590 + C74589) * C153864) * C153687 +
             ((C78886 + C78885) * C153724 +
              (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
               C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                  C153864) *
                 C153680) *
                C153849) *
               C1091 +
           ((((C74589 + C74590) * C153864 + C79920 * C153724) * C153680 +
             ((C74591 + C74592) * C153864 + C94919 * C153724) * C153687 +
             ((C74593 + C74594) * C153864 + (C75569 + C75570) * C153724) *
                 C83601) *
                C153849 -
            (((C74288 * C4784 - C74289 * C4781 - C74288 * C4785 +
               C153472 * C4790 + C74286 * C4786 - C74287 * C4782 -
               C74286 * C4787 + C74280 * C4791) *
                  C153724 +
              (C75570 + C75569) * C153864) *
                 C83601 +
             ((C78488 + C78487) * C153724 + C93644 * C153864) * C153687 +
             (C78844 * C153724 + C79922 * C153864) * C153680) *
                C153601) *
               C153573) *
              C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153864 +
             (C78877 + C78878) * C153724) *
                C153680 +
            ((C74581 + C74582) * C153864 + C79917 * C153724) * C153687 +
            C93646 * C83601) *
               C153537 * C1091 -
           ((C76795 * C153724 + C75896 * C153864) * C83601 +
            (C76796 * C153724 + (C74584 + C74583) * C153864) * C153687 +
            (C79919 * C153724 + (C74582 + C74581) * C153864) * C153680) *
               C153537 * C153573) *
              C1093 +
          ((((C74589 + C74590) * C153864 + C79920 * C153724) * C153680 +
            ((C74591 + C74592) * C153864 + C94919 * C153724) * C153687 +
            ((C74593 + C74594) * C153864 + (C75569 + C75570) * C153724) *
                C83601) *
               C153537 * C153573 -
           (C93648 * C83601 +
            (C79922 * C153724 + (C74590 + C74589) * C153864) * C153687 +
            ((C78886 + C78885) * C153724 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153864) *
                C153680) *
               C153537 * C1091) *
              C1094 +
          ((((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
              C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                 C153864 +
             (C79527 + C79528) * C153724) *
                C153680 +
            ((C75029 + C75030) * C153864 + (C79209 + C79210) * C153724) *
                C153687 +
            ((C75031 + C75032) * C153864 + (C94241 + C94242) * C153724) *
                C83601) *
               C153537 * C1091 -
           (((C74288 * C4073 - C74289 * C4066 - C74288 * C4074 +
              C153472 * C4078 + C74286 * C4071 - C74287 * C4065 -
              C74286 * C4072 + C74280 * C4077) *
                 C153724 +
             (C75034 + C75033) * C153864) *
                C83601 +
            ((C94242 + C94241) * C153724 + (C75032 + C75031) * C153864) *
                C153687 +
            ((C79210 + C79209) * C153724 + (C75030 + C75029) * C153864) *
                C153680) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153864 +
            (C78877 + C78878) * C153724) *
               C153680 +
           ((C74581 + C74582) * C153864 + C79917 * C153724) * C153687 +
           C93646 * C83601) *
              C153537 * C1178 -
          (C95406 * C83601 +
           (C76796 * C153724 + (C74584 + C74583) * C153864) * C153687 +
           (C79919 * C153724 + (C74582 + C74581) * C153864) * C153680) *
              C153537 * C1179 +
          (C93646 * C153680 +
           (C74598 * C153864 + (C75560 + C75559) * C153724) * C153687 +
           ((C74588 + C74587) * C153864 + (C76811 + C76812) * C153724) *
               C83601) *
              C153537 * C1180 -
          (((C74288 * C28996 - C74289 * C28993 - C74288 * C28997 +
             C153472 * C28999 + C74286 * C28994 - C74287 * C28992 -
             C74286 * C28995 + C74280 * C28998) *
                C153724 +
            (C75912 + C75911) * C153864) *
               C83601 +
           ((C76812 + C76811) * C153724 + C75895 * C153864) * C153687 +
           C95406 * C153680) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
               C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                  C153864 +
              (C78877 + C78878) * C153724) *
                 C153680 +
             ((C74581 + C74582) * C153864 + C79917 * C153724) * C153687 +
             C93646 * C83601) *
                C1898 -
            (C96666 * C83601 + (C79918 * C153724 + C79919 * C153864) * C153687 +
             ((C78880 + C78879) * C153724 + (C78878 + C78877) * C153864) *
                 C153680) *
                C153601) *
               C153848 +
           (((C79917 * C153864 + C78795 * C153724) * C153680 +
             (C81694 * C153864 + C81695 * C153724) * C153687 +
             (C96665 * C153864 + (C76147 + C76148) * C153724) * C83601) *
                C153601 -
            (C95406 * C83601 +
             (C76796 * C153724 + (C74584 + C74583) * C153864) * C153687 +
             (C79919 * C153724 + (C74582 + C74581) * C153864) * C153680) *
                C1898) *
               C153573) *
              C153840 +
          (((((C78885 + C78886) * C153864 + (C78887 + C78888) * C153724) *
                 C153680 +
             (C79920 * C153864 + C79921 * C153724) * C153687 +
             (C94919 * C153864 + (C78487 + C78488) * C153724) * C83601) *
                C153601 -
            (C93648 * C83601 +
             (C79922 * C153724 + (C74590 + C74589) * C153864) * C153687 +
             ((C78886 + C78885) * C153724 +
              (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
               C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                  C153864) *
                 C153680) *
                C1898) *
               C153848 +
           ((((C74589 + C74590) * C153864 + C79920 * C153724) * C153680 +
             ((C74591 + C74592) * C153864 + C94919 * C153724) * C153687 +
             ((C74593 + C74594) * C153864 + (C75569 + C75570) * C153724) *
                 C83601) *
                C1898 -
            (((C74288 * C4784 - C74289 * C4781 - C74288 * C4785 +
               C153472 * C4790 + C74286 * C4786 - C74287 * C4782 -
               C74286 * C4787 + C74280 * C4791) *
                  C153724 +
              (C75570 + C75569) * C153864) *
                 C83601 +
             ((C78488 + C78487) * C153724 + C93644 * C153864) * C153687 +
             (C78844 * C153724 + C79922 * C153864) * C153680) *
                C153601) *
               C153573) *
              C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153864 +
             (C78877 + C78878) * C153724) *
                C153680 +
            ((C74581 + C74582) * C153864 + C79917 * C153724) * C153687 +
            C93646 * C83601) *
               C153921 -
           (C96666 * C83601 + (C79918 * C153724 + C79919 * C153864) * C153687 +
            ((C78880 + C78879) * C153724 + (C78878 + C78877) * C153864) *
                C153680) *
               C153922 +
           ((C78893 * C153864 + (C78884 + C78883) * C153724) * C153680 +
            (C78795 * C153864 + C80698 * C153724) * C153687 +
            (C81695 * C153864 + (C80726 + C80727) * C153724) * C83601) *
               C2414) *
              C153848 +
          (((C79917 * C153864 + C78795 * C153724) * C153680 +
            (C81694 * C153864 + C81695 * C153724) * C153687 +
            (C96665 * C153864 + (C76147 + C76148) * C153724) * C83601) *
               C153922 -
           (C95406 * C83601 +
            (C76796 * C153724 + (C74584 + C74583) * C153864) * C153687 +
            (C79919 * C153724 + (C74582 + C74581) * C153864) * C153680) *
               C153921 -
           (((C74288 * C32074 - C74289 * C32073 - C74288 * C32075 +
              C153472 * C32076 + C74286 * C30186 - C74287 * C30183 -
              C74286 * C30187 + C74280 * C30189) *
                 C153724 +
             (C76148 + C76147) * C153864) *
                C83601 +
            ((C80727 + C80726) * C153724 + C80715 * C153864) * C153687 +
            (C80697 * C153724 + C79918 * C153864) * C153680) *
               C2414) *
              C153573) *
         C153502) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153864 +
             (C78877 + C78878) * C153724) *
                C153680 +
            ((C74581 + C74582) * C153864 + C79917 * C153724) * C153687 +
            C93646 * C83601) *
               C1898 -
           (C96666 * C83601 + (C79918 * C153724 + C79919 * C153864) * C153687 +
            ((C78880 + C78879) * C153724 + (C78878 + C78877) * C153864) *
                C153680) *
               C153601) *
              C298 +
          (((C79917 * C153864 + C78795 * C153724) * C153680 +
            (C81694 * C153864 + C81695 * C153724) * C153687 +
            (C96665 * C153864 + (C76147 + C76148) * C153724) * C83601) *
               C153601 -
           (C95406 * C83601 +
            (C76796 * C153724 + (C74584 + C74583) * C153864) * C153687 +
            (C79919 * C153724 + (C74582 + C74581) * C153864) * C153680) *
               C1898) *
              C299 +
          ((C93646 * C153680 + (C74598 * C153864 + C96665 * C153724) * C153687 +
            ((C74588 + C74587) * C153864 + (C76811 + C76812) * C153724) *
                C83601) *
               C1898 -
           (((C74288 * C28550 - C74289 * C28547 - C74288 * C28551 +
              C153472 * C28553 + C74286 * C28548 - C74287 * C28546 -
              C74286 * C28549 + C74280 * C28552) *
                 C153724 +
             (C76812 + C76811) * C153864) *
                C83601 +
            ((C76148 + C76147) * C153724 + C76795 * C153864) * C153687 +
            C96666 * C153680) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153864 +
             (C78877 + C78878) * C153724) *
                C153680 +
            ((C74581 + C74582) * C153864 + C79917 * C153724) * C153687 +
            C93646 * C83601) *
               C1898 -
           (C96666 * C83601 + (C79918 * C153724 + C79919 * C153864) * C153687 +
            ((C78880 + C78879) * C153724 + (C78878 + C78877) * C153864) *
                C153680) *
               C153601) *
              C153521 * C1093 +
          ((((C78885 + C78886) * C153864 + (C78887 + C78888) * C153724) *
                C153680 +
            (C79920 * C153864 + C79921 * C153724) * C153687 +
            (C94919 * C153864 + (C78487 + C78488) * C153724) * C83601) *
               C153601 -
           (C93648 * C83601 +
            (C79922 * C153724 + (C74590 + C74589) * C153864) * C153687 +
            ((C78886 + C78885) * C153724 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153864) *
                C153680) *
               C1898) *
              C153521 * C1094 +
          ((((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
              C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                 C153864 +
             (C79527 + C79528) * C153724) *
                C153680 +
            ((C75029 + C75030) * C153864 + (C79209 + C79210) * C153724) *
                C153687 +
            ((C75031 + C75032) * C153864 + (C94241 + C94242) * C153724) *
                C83601) *
               C1898 -
           (((C74288 * C3289 - C74289 * C3282 - C74288 * C3290 +
              C153472 * C3294 + C74286 * C3287 - C74287 * C3281 -
              C74286 * C3288 + C74280 * C3293) *
                 C153724 +
             (C94242 + C94241) * C153864) *
                C83601 +
            ((C79212 + C79211) * C153724 + (C79210 + C79209) * C153864) *
                C153687 +
            ((C79530 + C79529) * C153724 + (C79528 + C79527) * C153864) *
                C153680) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153864 +
            (C78877 + C78878) * C153724) *
               C153680 +
           ((C74581 + C74582) * C153864 + C79917 * C153724) * C153687 +
           C93646 * C83601) *
              C2104 -
          (C96666 * C83601 + (C79918 * C153724 + C79919 * C153864) * C153687 +
           ((C78880 + C78879) * C153724 + (C78878 + C78877) * C153864) *
               C153680) *
              C2105 +
          ((C78893 * C153864 + (C78884 + C78883) * C153724) * C153680 +
           (C78795 * C153864 + C80698 * C153724) * C153687 +
           (C81695 * C153864 + (C80726 + C80727) * C153724) * C83601) *
              C2106 -
          (((C74288 * C31225 - C74289 * C31222 - C74288 * C31226 +
             C153472 * C31228 + C74286 * C31223 - C74287 * C31221 -
             C74286 * C31224 + C74280 * C31227) *
                C153724 +
            (C80727 + C80726) * C153864) *
               C83601 +
           ((C80725 + C80724) * C153724 + C80697 * C153864) * C153687 +
           ((C82484 + C82483) * C153724 + C82470 * C153864) * C153680) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153864 +
             (C78877 + C78878) * C153724) *
                C153680 +
            ((C74581 + C74582) * C153864 + C79917 * C153724) * C153687 +
            C93646 * C83601) *
               C153921 -
           (C96666 * C83601 + (C79918 * C153724 + C79919 * C153864) * C153687 +
            ((C78880 + C78879) * C153724 + (C78878 + C78877) * C153864) *
                C153680) *
               C153922 +
           ((C78893 * C153864 + (C78884 + C78883) * C153724) * C153680 +
            (C78795 * C153864 + C80698 * C153724) * C153687 +
            (C81695 * C153864 + (C80726 + C80727) * C153724) * C83601) *
               C2414) *
              C153521 * C153840 +
          ((((C78885 + C78886) * C153864 + (C78887 + C78888) * C153724) *
                C153680 +
            (C79920 * C153864 + C79921 * C153724) * C153687 +
            (C94919 * C153864 + (C78487 + C78488) * C153724) * C83601) *
               C153922 -
           (C93648 * C83601 +
            (C79922 * C153724 + (C74590 + C74589) * C153864) * C153687 +
            ((C78886 + C78885) * C153724 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153864) *
                C153680) *
               C153921 -
           (((C74288 * C6185 - C74289 * C6179 - C74288 * C6186 +
              C153472 * C6197 + C74286 * C6187 - C74287 * C6180 -
              C74286 * C6188 + C74280 * C6198) *
                 C153724 +
             (C78488 + C78487) * C153864) *
                C83601 +
            ((C78892 + C78891) * C153724 + C78844 * C153864) * C153687 +
            ((C78890 + C78889) * C153724 + C78894 * C153864) * C153680) *
               C2414) *
              C153521 * C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153864 +
             (C78877 + C78878) * C153724) *
                C153680 +
            ((C74581 + C74582) * C153864 + C79917 * C153724) * C153687 +
            C93646 * C83601) *
               C1898 -
           (C96666 * C83601 + (C79918 * C153724 + C79919 * C153864) * C153687 +
            ((C78880 + C78879) * C153724 + (C78878 + C78877) * C153864) *
                C153680) *
               C153601) *
              C153521 * C1093 +
          ((((C78885 + C78886) * C153864 + (C78887 + C78888) * C153724) *
                C153680 +
            (C79920 * C153864 + C79921 * C153724) * C153687 +
            (C94919 * C153864 + (C78487 + C78488) * C153724) * C83601) *
               C153601 -
           (C93648 * C83601 +
            (C79922 * C153724 + (C74590 + C74589) * C153864) * C153687 +
            ((C78886 + C78885) * C153724 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153864) *
                C153680) *
               C1898) *
              C153521 * C1094 +
          ((((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
              C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                 C153864 +
             (C79527 + C79528) * C153724) *
                C153680 +
            ((C75029 + C75030) * C153864 + (C79209 + C79210) * C153724) *
                C153687 +
            ((C75031 + C75032) * C153864 + (C94241 + C94242) * C153724) *
                C83601) *
               C1898 -
           (((C74288 * C3289 - C74289 * C3282 - C74288 * C3290 +
              C153472 * C3294 + C74286 * C3287 - C74287 * C3281 -
              C74286 * C3288 + C74280 * C3293) *
                 C153724 +
             (C94242 + C94241) * C153864) *
                C83601 +
            ((C79212 + C79211) * C153724 + (C79210 + C79209) * C153864) *
                C153687 +
            ((C79530 + C79529) * C153724 + (C79528 + C79527) * C153864) *
                C153680) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153864 +
             (C78877 + C78878) * C153724) *
                C153680 +
            ((C74581 + C74582) * C153864 + C79917 * C153724) * C153687 +
            C93646 * C83601) *
               C1898 -
           (C96666 * C83601 + (C79918 * C153724 + C79919 * C153864) * C153687 +
            ((C78880 + C78879) * C153724 + (C78878 + C78877) * C153864) *
                C153680) *
               C153601) *
              C298 +
          (((C79917 * C153864 + C78795 * C153724) * C153680 +
            (C81694 * C153864 + C81695 * C153724) * C153687 +
            (C96665 * C153864 + (C76147 + C76148) * C153724) * C83601) *
               C153601 -
           (C95406 * C83601 +
            (C76796 * C153724 + (C74584 + C74583) * C153864) * C153687 +
            (C79919 * C153724 + (C74582 + C74581) * C153864) * C153680) *
               C1898) *
              C299 +
          ((C93646 * C153680 + (C74598 * C153864 + C96665 * C153724) * C153687 +
            ((C74588 + C74587) * C153864 + (C76811 + C76812) * C153724) *
                C83601) *
               C1898 -
           (((C74288 * C28550 - C74289 * C28547 - C74288 * C28551 +
              C153472 * C28553 + C74286 * C28548 - C74287 * C28546 -
              C74286 * C28549 + C74280 * C28552) *
                 C153724 +
             (C76812 + C76811) * C153864) *
                C83601 +
            ((C76148 + C76147) * C153724 + C76795 * C153864) * C153687 +
            C96666 * C153680) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153637 * C153943 +
            (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
            C74602 * C153871) *
               C153537 * C153848 -
           ((C74587 + C74588) * C153637 * C153871 +
            (C74586 + C74585) * C153637 * C153929 +
            (C74584 + C74583) * C153637 * C153939 +
            (C74582 + C74581) * C153637 * C153943) *
               C153537 * C153573) *
              C153917 +
          (((C74589 + C74590) * C153637 * C153943 +
            (C74591 + C74592) * C153637 * C153939 +
            (C74593 + C74594) * C153637 * C153929 +
            (C74595 + C74596) * C153637 * C153871) *
               C153537 * C153573 -
           (C74603 * C153871 + C74604 * C153929 +
            (C74590 + C74589) * C153637 * C153939 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153637 * C153943) *
               C153537 * C153848) *
              C153918 +
          (((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
             C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                C153637 * C153943 +
            (C75029 + C75030) * C153637 * C153939 +
            (C75031 + C75032) * C153637 * C153929 +
            (C75033 + C75034) * C153637 * C153871) *
               C153537 * C153848 -
           ((C74288 * C2923 - C74289 * C2916 - C74288 * C2924 +
             C153472 * C2928 + C74286 * C2921 - C74287 * C2915 -
             C74286 * C2922 + C74280 * C2927) *
                C153637 * C153871 +
            (C75034 + C75033) * C153637 * C153929 +
            (C75032 + C75031) * C153637 * C153939 +
            (C75030 + C75029) * C153637 * C153943) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C153637 * C70498 +
            (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
               C153537 * C153848 -
           ((C70803 + C70804 + C70805 + C70806) * C153637 * C153684 +
            (C70802 + C70801 + C70800 + C70799) * C153637 * C70498) *
               C153537 * C153573) *
              C153917 +
          (((C70807 + C70808 + C70809 + C70810) * C153637 * C70498 +
            (C70811 + C70812 + C70813 + C70814) * C153637 * C153684) *
               C153537 * C153573 -
           ((C70810 + C70809 + C70808 + C70807) * C153637 * C153684 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C153637 * C70498) *
               C153537 * C153848) *
              C153918 +
          (((C70500 * C156 - C70501 * C146 - C70500 * C157 + C153942 * C170 +
             C70502 * C158 - C70503 * C147 - C70502 * C159 + C153935 * C171 +
             C70504 * C160 - C70505 * C148 - C70504 * C161 + C153916 * C172 +
             C70506 * C162 - C70507 * C149 - C70506 * C163 + C153862 * C173) *
                C153637 * C70498 +
            (C71227 + C71228 + C71229 + C71230) * C153637 * C153684) *
               C153537 * C153848 -
           ((C70506 * C337 - C70507 * C314 - C70506 * C338 + C153862 * C350 +
             C70504 * C333 - C70505 * C312 - C70504 * C334 + C153916 * C348 +
             C70502 * C331 - C70503 * C311 - C70502 * C332 + C153935 * C347 +
             C70500 * C329 - C70501 * C310 - C70500 * C330 + C153942 * C346) *
                C153637 * C153684 +
            (C71230 + C71229 + C71228 + C71227) * C153637 * C70498) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153937 +
             (C78877 + C78878) * C153926 + C78893 * C153901) *
                C70498 +
            ((C74581 + C74582) * C153937 + (C75564 + C75563) * C153926 +
             C78795 * C153901) *
                C153684) *
               C153537 * C153848 -
           (((C76146 + C76145) * C153901 + C76796 * C153926 +
             (C74584 + C74583) * C153937) *
                C153684 +
            ((C76144 + C76143) * C153901 + (C75563 + C75564) * C153926 +
             (C74582 + C74581) * C153937) *
                C70498) *
               C153537 * C153573) *
              C153917 +
          ((((C74589 + C74590) * C153937 + (C75565 + C75566) * C153926 +
             (C78485 + C78486) * C153901) *
                C70498 +
            ((C74591 + C74592) * C153937 + (C75567 + C75568) * C153926 +
             (C78487 + C78488) * C153901) *
                C153684) *
               C153537 * C153573 -
           ((C78844 * C153901 + (C75566 + C75565) * C153926 +
             (C74590 + C74589) * C153937) *
                C153684 +
            (C78894 * C153901 + (C78886 + C78885) * C153926 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153937) *
                C70498) *
               C153537 * C153848) *
              C153918 +
          ((((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
              C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                 C153937 +
             (C74286 * C492 - C74287 * C478 - C74286 * C493 + C74280 * C514 +
              C74288 * C490 - C74289 * C477 - C74288 * C491 + C153472 * C513) *
                 C153926 +
             (C74286 * C502 - C74287 * C483 - C74286 * C503 + C74280 * C519 +
              C74288 * C504 - C74289 * C484 - C74288 * C505 + C153472 * C520) *
                 C153901) *
                C70498 +
            ((C75029 + C75030) * C153937 + (C79209 + C79210) * C153926 +
             (C79211 + C79212) * C153901) *
                C153684) *
               C153537 * C153848 -
           (((C74288 * C3289 - C74289 * C3282 - C74288 * C3290 +
              C153472 * C3294 + C74286 * C3287 - C74287 * C3281 -
              C74286 * C3288 + C74280 * C3293) *
                 C153901 +
             (C74288 * C1763 - C74289 * C1757 - C74288 * C1764 +
              C153472 * C1772 + C74286 * C1765 - C74287 * C1758 -
              C74286 * C1766 + C74280 * C1773) *
                 C153926 +
             (C75032 + C75031) * C153937) *
                C153684 +
            ((C79212 + C79211) * C153901 + (C79210 + C79209) * C153926 +
             (C75030 + C75029) * C153937) *
                C70498) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153637 * C153943 +
             (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
             C74602 * C153871) *
                C153849 -
            ((C75559 + C75560) * C153637 * C153871 +
             (C75561 + C75562) * C153637 * C153929 +
             (C75563 + C75564) * C153637 * C153939 +
             (C74288 * C494 - C74289 * C479 - C74288 * C495 + C153472 * C515 +
              C74286 * C496 - C74287 * C480 - C74286 * C497 + C74280 * C516) *
                 C153637 * C153943) *
                C153601) *
               C153848 +
           (((C75564 + C75563) * C153637 * C153943 +
             (C75562 + C75561) * C153637 * C153939 +
             (C75560 + C75559) * C153637 * C153929 +
             (C74286 * C5568 - C74287 * C5563 - C74286 * C5569 +
              C74280 * C5572 + C74288 * C5566 - C74289 * C5562 -
              C74288 * C5567 + C153472 * C5571) *
                 C153637 * C153871) *
                C153601 -
            ((C74587 + C74588) * C153637 * C153871 +
             (C74586 + C74585) * C153637 * C153929 +
             (C74584 + C74583) * C153637 * C153939 +
             (C74582 + C74581) * C153637 * C153943) *
                C153849) *
               C153573) *
              C301 +
          ((((C74286 * C494 - C74287 * C479 - C74286 * C495 + C74280 * C515 +
              C74288 * C492 - C74289 * C478 - C74288 * C493 + C153472 * C514) *
                 C153637 * C153943 +
             (C75565 + C75566) * C153637 * C153939 +
             (C75567 + C75568) * C153637 * C153929 +
             (C75569 + C75570) * C153637 * C153871) *
                C153601 -
            (C74603 * C153871 + C74604 * C153929 +
             (C74590 + C74589) * C153637 * C153939 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153637 * C153943) *
                C153849) *
               C153848 +
           (((C74589 + C74590) * C153637 * C153943 +
             (C74591 + C74592) * C153637 * C153939 +
             (C74593 + C74594) * C153637 * C153929 +
             (C74595 + C74596) * C153637 * C153871) *
                C153849 -
            ((C74288 * C5564 - C74289 * C5561 - C74288 * C5565 +
              C153472 * C5570 + C74286 * C5566 - C74287 * C5562 -
              C74286 * C5567 + C74280 * C5571) *
                 C153637 * C153871 +
             (C75570 + C75569) * C153637 * C153929 +
             (C75568 + C75567) * C153637 * C153939 +
             (C75566 + C75565) * C153637 * C153943) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
              C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
              C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
              C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                 C153637 * C70498 +
             (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
                C153849 -
            ((C71731 + C71732 + C71733 + C71734) * C153637 * C153684 +
             (C70506 * C490 - C70507 * C477 - C70506 * C491 + C153862 * C513 +
              C70504 * C492 - C70505 * C478 - C70504 * C493 + C153916 * C514 +
              C70502 * C494 - C70503 * C479 - C70502 * C495 + C153935 * C515 +
              C70500 * C496 - C70501 * C480 - C70500 * C497 + C153942 * C516) *
                 C153637 * C70498) *
                C153601) *
               C153848 +
           (((C71734 + C71733 + C71732 + C71731) * C153637 * C70498 +
             (C70500 * C1769 - C70501 * C1760 - C70500 * C1770 +
              C153942 * C1775 + C70502 * C1767 - C70503 * C1759 -
              C70502 * C1768 + C153935 * C1774 + C70504 * C1765 -
              C70505 * C1758 - C70504 * C1766 + C153916 * C1773 +
              C70506 * C1763 - C70507 * C1757 - C70506 * C1764 +
              C153862 * C1772) *
                 C153637 * C153684) *
                C153601 -
            ((C70803 + C70804 + C70805 + C70806) * C153637 * C153684 +
             (C70802 + C70801 + C70800 + C70799) * C153637 * C70498) *
                C153849) *
               C153573) *
              C301 +
          ((((C70500 * C494 - C70501 * C479 - C70500 * C495 + C153942 * C515 +
              C70502 * C492 - C70503 * C478 - C70502 * C493 + C153935 * C514 +
              C70504 * C490 - C70505 * C477 - C70504 * C491 + C153916 * C513 +
              C70506 * C488 - C70507 * C476 - C70506 * C489 + C153862 * C512) *
                 C153637 * C70498 +
             (C71735 + C71736 + C71737 + C71738) * C153637 * C153684) *
                C153601 -
            ((C70810 + C70809 + C70808 + C70807) * C153637 * C153684 +
             (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
              C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
              C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
              C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                 C153637 * C70498) *
                C153849) *
               C153848 +
           (((C70807 + C70808 + C70809 + C70810) * C153637 * C70498 +
             (C70811 + C70812 + C70813 + C70814) * C153637 * C153684) *
                C153849 -
            ((C70506 * C1761 - C70507 * C1756 - C70506 * C1762 +
              C153862 * C1771 + C70504 * C1763 - C70505 * C1757 -
              C70504 * C1764 + C153916 * C1772 + C70502 * C1765 -
              C70503 * C1758 - C70502 * C1766 + C153935 * C1773 +
              C70500 * C1767 - C70501 * C1759 - C70500 * C1768 +
              C153942 * C1774) *
                 C153637 * C153684 +
             (C71738 + C71737 + C71736 + C71735) * C153637 * C70498) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
               C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                  C153937 +
              (C78877 + C78878) * C153926 + C78893 * C153901) *
                 C70498 +
             ((C74581 + C74582) * C153937 + C79917 * C153926 +
              C78795 * C153901) *
                 C153684) *
                C153849 -
            (((C78881 + C78882) * C153901 + C79918 * C153926 +
              C79919 * C153937) *
                 C153684 +
             ((C78883 + C78884) * C153901 + (C78880 + C78879) * C153926 +
              (C78878 + C78877) * C153937) *
                 C70498) *
                C153601) *
               C153848 +
           (((C79917 * C153937 + C78795 * C153926 +
              (C78882 + C78881) * C153901) *
                 C70498 +
             ((C75562 + C75561) * C153937 + (C76145 + C76146) * C153926 +
              (C74286 * C6189 - C74287 * C6181 - C74286 * C6190 +
               C74280 * C6199 + C74288 * C6187 - C74289 * C6180 -
               C74288 * C6188 + C153472 * C6198) *
                  C153901) *
                 C153684) *
                C153601 -
            (((C76146 + C76145) * C153901 + C76796 * C153926 +
              (C74584 + C74583) * C153937) *
                 C153684 +
             (C79918 * C153901 + C79919 * C153926 +
              (C74582 + C74581) * C153937) *
                 C70498) *
                C153849) *
               C153573) *
              C301 +
          (((((C78885 + C78886) * C153937 + (C78887 + C78888) * C153926 +
              (C78889 + C78890) * C153901) *
                 C70498 +
             (C79920 * C153937 + C79921 * C153926 +
              (C78891 + C78892) * C153901) *
                 C153684) *
                C153601 -
            ((C78844 * C153901 + C79922 * C153926 +
              (C74590 + C74589) * C153937) *
                 C153684 +
             (C78894 * C153901 + (C78886 + C78885) * C153926 +
              (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
               C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                  C153937) *
                 C70498) *
                C153849) *
               C153848 +
           ((((C74589 + C74590) * C153937 + C79920 * C153926 +
              C79921 * C153901) *
                 C70498 +
             ((C74591 + C74592) * C153937 + (C75567 + C75568) * C153926 +
              (C78487 + C78488) * C153901) *
                 C153684) *
                C153849 -
            (((C74288 * C6185 - C74289 * C6179 - C74288 * C6186 +
               C153472 * C6197 + C74286 * C6187 - C74287 * C6180 -
               C74286 * C6188 + C74280 * C6198) *
                  C153901 +
              (C78488 + C78487) * C153926 + (C75568 + C75567) * C153937) *
                 C153684 +
             ((C78892 + C78891) * C153901 + C78844 * C153926 +
              C79922 * C153937) *
                 C70498) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
                C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
                C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
                C70506 * C158 - C70507 * C147 - C70506 * C159 +
                C153862 * C171) *
                   C153637 * C70498 +
               (C70500 * C323 - C70501 * C307 - C70500 * C324 + C153942 * C343 +
                C70502 * C321 - C70503 * C306 - C70502 * C322 + C153935 * C342 +
                C70504 * C319 - C70505 * C305 - C70504 * C320 + C153916 * C341 +
                C70506 * C317 - C70507 * C304 - C70506 * C318 +
                C153862 * C340) *
                   C153637 * C153684) *
                  C153537 * C153521 * C130 -
              ((C70506 * C315 - C70507 * C303 - C70506 * C316 + C153862 * C339 +
                C70504 * C317 - C70505 * C304 - C70504 * C318 + C153916 * C340 +
                C70502 * C319 - C70503 * C305 - C70502 * C320 + C153935 * C341 +
                C70500 * C321 - C70501 * C306 - C70500 * C322 +
                C153942 * C342) *
                   C153637 * C153684 +
               (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
                C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
                C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
                C70500 * C154 - C70501 * C145 - C70500 * C155 +
                C153942 * C169) *
                   C153637 * C70498) *
                  C153537 * C153521 * C131 +
              ((C70500 * C156 - C70501 * C146 - C70500 * C157 + C153942 * C170 +
                C70502 * C158 - C70503 * C147 - C70502 * C159 + C153935 * C171 +
                C70504 * C160 - C70505 * C148 - C70504 * C161 + C153916 * C172 +
                C70506 * C162 - C70507 * C149 - C70506 * C163 +
                C153862 * C173) *
                   C153637 * C70498 +
               (C70500 * C319 - C70501 * C305 - C70500 * C320 + C153942 * C341 +
                C70502 * C317 - C70503 * C304 - C70502 * C318 + C153935 * C340 +
                C70504 * C315 - C70505 * C303 - C70504 * C316 + C153916 * C339 +
                C70506 * C335 - C70507 * C313 - C70506 * C336 +
                C153862 * C349) *
                   C153637 * C153684) *
                  C153537 * C153521 * C132 -
              ((C70506 * C652 - C70507 * C651 - C70506 * C653 + C153862 * C654 +
                C70504 * C335 - C70505 * C313 - C70504 * C336 + C153916 * C349 +
                C70502 * C315 - C70503 * C303 - C70502 * C316 + C153935 * C339 +
                C70500 * C317 - C70501 * C304 - C70500 * C318 +
                C153942 * C340) *
                   C153637 * C153684 +
               (C70506 * C164 - C70507 * C150 - C70506 * C165 + C153862 * C174 +
                C70504 * C162 - C70505 * C149 - C70504 * C163 + C153916 * C173 +
                C70502 * C160 - C70503 * C148 - C70502 * C161 + C153935 * C172 +
                C70500 * C158 - C70501 * C147 - C70500 * C159 +
                C153942 * C171) *
                   C153637 * C70498) *
                  C153537 * C153521 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C70500 * C152 - C70501 * C144 - C70500 * C153 +
                 C153942 * C168 + C70502 * C154 - C70503 * C145 -
                 C70502 * C155 + C153935 * C169 + C70504 * C156 -
                 C70505 * C146 - C70504 * C157 + C153916 * C170 +
                 C70506 * C158 - C70507 * C147 - C70506 * C159 +
                 C153862 * C171) *
                    C153637 * C70498 +
                (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
                   C153537 * C298 -
               ((C70803 + C70804 + C70805 + C70806) * C153637 * C153684 +
                (C70802 + C70801 + C70800 + C70799) * C153637 * C70498) *
                   C153537 * C299 +
               ((C70806 + C70805 + C70804 + C70803) * C153637 * C70498 +
                (C70500 * C1196 - C70501 * C1187 - C70500 * C1197 +
                 C153942 * C1202 + C70502 * C1194 - C70503 * C1186 -
                 C70502 * C1195 + C153935 * C1201 + C70504 * C1192 -
                 C70505 * C1185 - C70504 * C1193 + C153916 * C1200 +
                 C70506 * C1190 - C70507 * C1184 - C70506 * C1191 +
                 C153862 * C1199) *
                    C153637 * C153684) *
                   C153537 * C300) *
                  C301 +
              (((C70807 + C70808 + C70809 + C70810) * C153637 * C70498 +
                (C70811 + C70812 + C70813 + C70814) * C153637 * C153684) *
                   C153537 * C299 -
               ((C70810 + C70809 + C70808 + C70807) * C153637 * C153684 +
                (C70506 * C160 - C70507 * C148 - C70506 * C161 +
                 C153862 * C172 + C70504 * C158 - C70505 * C147 -
                 C70504 * C159 + C153916 * C171 + C70502 * C156 -
                 C70503 * C146 - C70502 * C157 + C153935 * C170 +
                 C70500 * C154 - C70501 * C145 - C70500 * C155 +
                 C153942 * C169) *
                    C153637 * C70498) *
                   C153537 * C298 -
               ((C70506 * C1188 - C70507 * C1183 - C70506 * C1189 +
                 C153862 * C1198 + C70504 * C1190 - C70505 * C1184 -
                 C70504 * C1191 + C153916 * C1199 + C70502 * C1192 -
                 C70503 * C1185 - C70502 * C1193 + C153935 * C1200 +
                 C70500 * C1194 - C70501 * C1186 - C70500 * C1195 +
                 C153942 * C1201) *
                    C153637 * C153684 +
                (C70814 + C70813 + C70812 + C70811) * C153637 * C70498) *
                   C153537 * C300) *
                  C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C153637 * C70498 +
            (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
               C473 -
           ((C70506 * C957 - C70507 * C948 - C70506 * C958 + C153862 * C966 +
             C70504 * C955 - C70505 * C947 - C70504 * C956 + C153916 * C965 +
             C70502 * C953 - C70503 * C946 - C70502 * C954 + C153935 * C964 +
             C70500 * C951 - C70501 * C945 - C70500 * C952 + C153942 * C963) *
                C153637 * C153684 +
            (C70506 * C490 - C70507 * C477 - C70506 * C491 + C153862 * C513 +
             C70504 * C492 - C70505 * C478 - C70504 * C493 + C153916 * C514 +
             C70502 * C494 - C70503 * C479 - C70502 * C495 + C153935 * C515 +
             C70500 * C496 - C70501 * C480 - C70500 * C497 + C153942 * C516) *
                C153637 * C70498) *
               C474 +
           ((C70500 * C498 - C70501 * C481 - C70500 * C499 + C153942 * C517 +
             C70502 * C500 - C70503 * C482 - C70502 * C501 + C153935 * C518 +
             C70504 * C502 - C70505 * C483 - C70504 * C503 + C153916 * C519 +
             C70506 * C504 - C70507 * C484 - C70506 * C505 + C153862 * C520) *
                C153637 * C70498 +
            (C70500 * C1338 - C70501 * C1329 - C70500 * C1339 +
             C153942 * C1344 + C70502 * C1336 - C70503 * C1328 -
             C70502 * C1337 + C153935 * C1343 + C70504 * C1334 -
             C70505 * C1327 - C70504 * C1335 + C153916 * C1342 +
             C70506 * C1332 - C70507 * C1326 - C70506 * C1333 +
             C153862 * C1341) *
                C153637 * C153684) *
               C475) *
              C153521 * C301 +
          (((C70500 * C494 - C70501 * C479 - C70500 * C495 + C153942 * C515 +
             C70502 * C492 - C70503 * C478 - C70502 * C493 + C153935 * C514 +
             C70504 * C490 - C70505 * C477 - C70504 * C491 + C153916 * C513 +
             C70506 * C488 - C70507 * C476 - C70506 * C489 + C153862 * C512) *
                C153637 * C70498 +
            (C70500 * C953 - C70501 * C946 - C70500 * C954 + C153942 * C964 +
             C70502 * C955 - C70503 * C947 - C70502 * C956 + C153935 * C965 +
             C70504 * C957 - C70505 * C948 - C70504 * C958 + C153916 * C966 +
             C70506 * C959 - C70507 * C949 - C70506 * C960 + C153862 * C967) *
                C153637 * C153684) *
               C474 -
           ((C70810 + C70809 + C70808 + C70807) * C153637 * C153684 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C153637 * C70498) *
               C473 -
           ((C70506 * C1330 - C70507 * C1325 - C70506 * C1331 +
             C153862 * C1340 + C70504 * C1332 - C70505 * C1326 -
             C70504 * C1333 + C153916 * C1341 + C70502 * C1334 -
             C70503 * C1327 - C70502 * C1335 + C153935 * C1342 +
             C70500 * C1336 - C70501 * C1328 - C70500 * C1337 +
             C153942 * C1343) *
                C153637 * C153684 +
            (C70506 * C506 - C70507 * C485 - C70506 * C507 + C153862 * C521 +
             C70504 * C504 - C70505 * C484 - C70504 * C505 + C153916 * C520 +
             C70502 * C502 - C70503 * C483 - C70502 * C503 + C153935 * C519 +
             C70500 * C500 - C70501 * C482 - C70500 * C501 + C153942 * C518) *
                C153637 * C70498) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
            C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
               C153637 * C153943 +
           (C74286 * C323 - C74287 * C307 - C74286 * C324 + C74280 * C343 +
            C74288 * C321 - C74289 * C306 - C74288 * C322 + C153472 * C342) *
               C153637 * C153939 +
           (C74286 * C325 - C74287 * C308 - C74286 * C326 + C74280 * C344 +
            C74288 * C327 - C74289 * C309 - C74288 * C328 + C153472 * C345) *
               C153637 * C153929 +
           (C74286 * C1196 - C74287 * C1187 - C74286 * C1197 + C74280 * C1202 +
            C74288 * C1194 - C74289 * C1186 - C74288 * C1195 +
            C153472 * C1201) *
               C153637 * C153871) *
              C153537 * C153521 * C130 -
          ((C74288 * C1192 - C74289 * C1185 - C74288 * C1193 + C153472 * C1200 +
            C74286 * C1194 - C74287 * C1186 - C74286 * C1195 + C74280 * C1201) *
               C153637 * C153871 +
           (C74288 * C329 - C74289 * C310 - C74288 * C330 + C153472 * C346 +
            C74286 * C327 - C74287 * C309 - C74286 * C328 + C74280 * C345) *
               C153637 * C153929 +
           (C74288 * C319 - C74289 * C305 - C74288 * C320 + C153472 * C341 +
            C74286 * C321 - C74287 * C306 - C74286 * C322 + C74280 * C342) *
               C153637 * C153939 +
           (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
            C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
               C153637 * C153943) *
              C153537 * C153521 * C131 +
          ((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
            C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
               C153637 * C153943 +
           (C74286 * C319 - C74287 * C305 - C74286 * C320 + C74280 * C341 +
            C74288 * C317 - C74289 * C304 - C74288 * C318 + C153472 * C340) *
               C153637 * C153939 +
           (C74286 * C329 - C74287 * C310 - C74286 * C330 + C74280 * C346 +
            C74288 * C331 - C74289 * C311 - C74288 * C332 + C153472 * C347) *
               C153637 * C153929 +
           (C74286 * C1192 - C74287 * C1185 - C74286 * C1193 + C74280 * C1200 +
            C74288 * C1190 - C74289 * C1184 - C74288 * C1191 +
            C153472 * C1199) *
               C153637 * C153871) *
              C153537 * C153521 * C132 -
          ((C74288 * C1188 - C74289 * C1183 - C74288 * C1189 + C153472 * C1198 +
            C74286 * C1190 - C74287 * C1184 - C74286 * C1191 + C74280 * C1199) *
               C153637 * C153871 +
           (C74288 * C333 - C74289 * C312 - C74288 * C334 + C153472 * C348 +
            C74286 * C331 - C74287 * C311 - C74286 * C332 + C74280 * C347) *
               C153637 * C153929 +
           (C74288 * C315 - C74289 * C303 - C74288 * C316 + C153472 * C339 +
            C74286 * C317 - C74287 * C304 - C74286 * C318 + C74280 * C340) *
               C153637 * C153939 +
           (C74288 * C160 - C74289 * C148 - C74288 * C161 + C153472 * C172 +
            C74286 * C158 - C74287 * C147 - C74286 * C159 + C74280 * C171) *
               C153637 * C153943) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153637 * C153943 +
            (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
            C74602 * C153871) *
               C153537 * C298 -
           ((C74587 + C74588) * C153637 * C153871 +
            (C74586 + C74585) * C153637 * C153929 +
            (C74584 + C74583) * C153637 * C153939 +
            (C74582 + C74581) * C153637 * C153943) *
               C153537 * C299 +
           (C74601 * C153943 + C74602 * C153939 +
            (C74588 + C74587) * C153637 * C153929 +
            (C74286 * C4534 - C74287 * C4529 - C74286 * C4535 + C74280 * C4538 +
             C74288 * C4532 - C74289 * C4528 - C74288 * C4533 +
             C153472 * C4537) *
                C153637 * C153871) *
               C153537 * C300) *
              C301 +
          (((C74589 + C74590) * C153637 * C153943 +
            (C74591 + C74592) * C153637 * C153939 +
            (C74593 + C74594) * C153637 * C153929 +
            (C74595 + C74596) * C153637 * C153871) *
               C153537 * C299 -
           (C74603 * C153871 + C74604 * C153929 +
            (C74590 + C74589) * C153637 * C153939 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153637 * C153943) *
               C153537 * C298 -
           ((C74288 * C4530 - C74289 * C4527 - C74288 * C4531 +
             C153472 * C4536 + C74286 * C4532 - C74287 * C4528 -
             C74286 * C4533 + C74280 * C4537) *
                C153637 * C153871 +
            (C74596 + C74595) * C153637 * C153929 + C74603 * C153939 +
            C74604 * C153943) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153637 * C153943 +
            (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
            C74602 * C153871) *
               C473 -
           ((C74288 * C4069 - C74289 * C4064 - C74288 * C4070 +
             C153472 * C4076 + C74286 * C4067 - C74287 * C4063 -
             C74286 * C4068 + C74280 * C4075) *
                C153637 * C153871 +
            (C74288 * C1767 - C74289 * C1759 - C74288 * C1768 +
             C153472 * C1774 + C74286 * C1769 - C74287 * C1760 -
             C74286 * C1770 + C74280 * C1775) *
                C153637 * C153929 +
            (C74288 * C953 - C74289 * C946 - C74288 * C954 + C153472 * C964 +
             C74286 * C951 - C74287 * C945 - C74286 * C952 + C74280 * C963) *
                C153637 * C153939 +
            (C74288 * C494 - C74289 * C479 - C74288 * C495 + C153472 * C515 +
             C74286 * C496 - C74287 * C480 - C74286 * C497 + C74280 * C516) *
                C153637 * C153943) *
               C474 +
           ((C74286 * C498 - C74287 * C481 - C74286 * C499 + C74280 * C517 +
             C74288 * C500 - C74289 * C482 - C74288 * C501 + C153472 * C518) *
                C153637 * C153943 +
            (C74286 * C1338 - C74287 * C1329 - C74286 * C1339 + C74280 * C1344 +
             C74288 * C1336 - C74289 * C1328 - C74288 * C1337 +
             C153472 * C1343) *
                C153637 * C153939 +
            (C74286 * C3283 - C74287 * C3279 - C74286 * C3284 + C74280 * C3291 +
             C74288 * C3285 - C74289 * C3280 - C74288 * C3286 +
             C153472 * C3292) *
                C153637 * C153929 +
            (C74286 * C4788 - C74287 * C4783 - C74286 * C4789 + C74280 * C4792 +
             C74288 * C4786 - C74289 * C4782 - C74288 * C4787 +
             C153472 * C4791) *
                C153637 * C153871) *
               C475) *
              C153521 * C301 +
          (((C74286 * C494 - C74287 * C479 - C74286 * C495 + C74280 * C515 +
             C74288 * C492 - C74289 * C478 - C74288 * C493 + C153472 * C514) *
                C153637 * C153943 +
            (C74286 * C953 - C74287 * C946 - C74286 * C954 + C74280 * C964 +
             C74288 * C955 - C74289 * C947 - C74288 * C956 + C153472 * C965) *
                C153637 * C153939 +
            (C74286 * C1767 - C74287 * C1759 - C74286 * C1768 + C74280 * C1774 +
             C74288 * C1765 - C74289 * C1758 - C74288 * C1766 +
             C153472 * C1773) *
                C153637 * C153929 +
            (C74286 * C4069 - C74287 * C4064 - C74286 * C4070 + C74280 * C4076 +
             C74288 * C4071 - C74289 * C4065 - C74288 * C4072 +
             C153472 * C4077) *
                C153637 * C153871) *
               C474 -
           (C74603 * C153871 + C74604 * C153929 +
            (C74590 + C74589) * C153637 * C153939 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153637 * C153943) *
               C473 -
           ((C74288 * C4784 - C74289 * C4781 - C74288 * C4785 +
             C153472 * C4790 + C74286 * C4786 - C74287 * C4782 -
             C74286 * C4787 + C74280 * C4791) *
                C153637 * C153871 +
            (C74288 * C3287 - C74289 * C3281 - C74288 * C3288 +
             C153472 * C3293 + C74286 * C3285 - C74287 * C3280 -
             C74286 * C3286 + C74280 * C3292) *
                C153637 * C153929 +
            (C74288 * C1334 - C74289 * C1327 - C74288 * C1335 +
             C153472 * C1342 + C74286 * C1336 - C74287 * C1328 -
             C74286 * C1337 + C74280 * C1343) *
                C153637 * C153939 +
            (C74288 * C502 - C74289 * C483 - C74288 * C503 + C153472 * C519 +
             C74286 * C500 - C74287 * C482 - C74286 * C501 + C74280 * C518) *
                C153637 * C153943) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153937 +
            (C74286 * C496 - C74287 * C480 - C74286 * C497 + C74280 * C516 +
             C74288 * C494 - C74289 * C479 - C74288 * C495 + C153472 * C515) *
                C153926 +
            (C74286 * C498 - C74287 * C481 - C74286 * C499 + C74280 * C517 +
             C74288 * C500 - C74289 * C482 - C74288 * C501 + C153472 * C518) *
                C153901) *
               C70498 +
           ((C74581 + C74582) * C153937 + (C75564 + C75563) * C153926 +
            (C76143 + C76144) * C153901) *
               C153684) *
              C153537 * C153521 * C130 -
          (((C74288 * C1334 - C74289 * C1327 - C74288 * C1335 +
             C153472 * C1342 + C74286 * C1336 - C74287 * C1328 -
             C74286 * C1337 + C74280 * C1343) *
                C153901 +
            (C75566 + C75565) * C153926 + (C74590 + C74589) * C153937) *
               C153684 +
           ((C74288 * C502 - C74289 * C483 - C74288 * C503 + C153472 * C519 +
             C74286 * C500 - C74287 * C482 - C74286 * C501 + C74280 * C518) *
                C153901 +
            (C74288 * C492 - C74289 * C478 - C74288 * C493 + C153472 * C514 +
             C74286 * C494 - C74287 * C479 - C74286 * C495 + C74280 * C515) *
                C153926 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153937) *
               C70498) *
              C153537 * C153521 * C131 +
          (((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
             C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                C153937 +
            (C74286 * C492 - C74287 * C478 - C74286 * C493 + C74280 * C514 +
             C74288 * C490 - C74289 * C477 - C74288 * C491 + C153472 * C513) *
                C153926 +
            (C74286 * C502 - C74287 * C483 - C74286 * C503 + C74280 * C519 +
             C74288 * C504 - C74289 * C484 - C74288 * C505 + C153472 * C520) *
                C153901) *
               C70498 +
           ((C75029 + C75030) * C153937 +
            (C74286 * C955 - C74287 * C947 - C74286 * C956 + C74280 * C965 +
             C74288 * C957 - C74289 * C948 - C74288 * C958 + C153472 * C966) *
                C153926 +
            (C74286 * C1334 - C74287 * C1327 - C74286 * C1335 + C74280 * C1342 +
             C74288 * C1332 - C74289 * C1326 - C74288 * C1333 +
             C153472 * C1341) *
                C153901) *
               C153684) *
              C153537 * C153521 * C132 -
          (((C74288 * C1330 - C74289 * C1325 - C74288 * C1331 +
             C153472 * C1340 + C74286 * C1332 - C74287 * C1326 -
             C74286 * C1333 + C74280 * C1341) *
                C153901 +
            (C74288 * C959 - C74289 * C949 - C74288 * C960 + C153472 * C967 +
             C74286 * C957 - C74287 * C948 - C74286 * C958 + C74280 * C966) *
                C153926 +
            (C74288 * C315 - C74289 * C303 - C74288 * C316 + C153472 * C339 +
             C74286 * C317 - C74287 * C304 - C74286 * C318 + C74280 * C340) *
                C153937) *
               C153684 +
           ((C74288 * C506 - C74289 * C485 - C74288 * C507 + C153472 * C521 +
             C74286 * C504 - C74287 * C484 - C74286 * C505 + C74280 * C520) *
                C153901 +
            (C74288 * C488 - C74289 * C476 - C74288 * C489 + C153472 * C512 +
             C74286 * C490 - C74287 * C477 - C74286 * C491 + C74280 * C513) *
                C153926 +
            (C74288 * C160 - C74289 * C148 - C74288 * C161 + C153472 * C172 +
             C74286 * C158 - C74287 * C147 - C74286 * C159 + C74280 * C171) *
                C153937) *
               C70498) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153937 +
             (C74286 * C496 - C74287 * C480 - C74286 * C497 + C74280 * C516 +
              C74288 * C494 - C74289 * C479 - C74288 * C495 + C153472 * C515) *
                 C153926 +
             (C74286 * C498 - C74287 * C481 - C74286 * C499 + C74280 * C517 +
              C74288 * C500 - C74289 * C482 - C74288 * C501 + C153472 * C518) *
                 C153901) *
                C70498 +
            ((C74581 + C74582) * C153937 + (C75564 + C75563) * C153926 +
             (C76143 + C76144) * C153901) *
                C153684) *
               C153537 * C298 -
           (((C76146 + C76145) * C153901 + C76796 * C153926 +
             (C74584 + C74583) * C153937) *
                C153684 +
            ((C76144 + C76143) * C153901 + (C75563 + C75564) * C153926 +
             (C74582 + C74581) * C153937) *
                C70498) *
               C153537 * C299 +
           ((C74597 * C153937 + (C75562 + C75561) * C153926 +
             (C76145 + C76146) * C153901) *
                C70498 +
            (C74598 * C153937 + (C75560 + C75559) * C153926 +
             (C76147 + C76148) * C153901) *
                C153684) *
               C153537 * C300) *
              C301 +
          ((((C74589 + C74590) * C153937 + (C75565 + C75566) * C153926 +
             (C78485 + C78486) * C153901) *
                C70498 +
            ((C74591 + C74592) * C153937 + (C75567 + C75568) * C153926 +
             (C78487 + C78488) * C153901) *
                C153684) *
               C153537 * C299 -
           (((C78486 + C78485) * C153901 + (C75566 + C75565) * C153926 +
             (C74590 + C74589) * C153937) *
                C153684 +
            ((C74288 * C502 - C74289 * C483 - C74288 * C503 + C153472 * C519 +
              C74286 * C500 - C74287 * C482 - C74286 * C501 + C74280 * C518) *
                 C153901 +
             (C74288 * C492 - C74289 * C478 - C74288 * C493 + C153472 * C514 +
              C74286 * C494 - C74287 * C479 - C74286 * C495 + C74280 * C515) *
                 C153926 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153937) *
                C70498) *
               C153537 * C298 -
           (((C74288 * C4784 - C74289 * C4781 - C74288 * C4785 +
              C153472 * C4790 + C74286 * C4786 - C74287 * C4782 -
              C74286 * C4787 + C74280 * C4791) *
                 C153901 +
             (C75570 + C75569) * C153926 + C74599 * C153937) *
                C153684 +
            ((C78488 + C78487) * C153901 + (C75568 + C75567) * C153926 +
             C74600 * C153937) *
                C70498) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153937 +
             (C78877 + C78878) * C153926 + C78893 * C153901) *
                C70498 +
            ((C74581 + C74582) * C153937 + (C75564 + C75563) * C153926 +
             C78795 * C153901) *
                C153684) *
               C473 -
           (((C78881 + C78882) * C153901 + (C76144 + C76143) * C153926 +
             (C75563 + C75564) * C153937) *
                C153684 +
            ((C78883 + C78884) * C153901 + (C78880 + C78879) * C153926 +
             (C78878 + C78877) * C153937) *
                C70498) *
               C474 +
           ((C78893 * C153937 + (C78884 + C78883) * C153926 +
             (C74286 * C7518 - C74287 * C7514 - C74286 * C7519 +
              C74280 * C7526 + C74288 * C7520 - C74289 * C7515 -
              C74288 * C7521 + C153472 * C7527) *
                 C153901) *
                C70498 +
            (C78795 * C153937 + (C78882 + C78881) * C153926 +
             (C74286 * C9042 - C74287 * C9037 - C74286 * C9043 +
              C74280 * C9046 + C74288 * C9040 - C74289 * C9036 -
              C74288 * C9041 + C153472 * C9045) *
                 C153901) *
                C153684) *
               C475) *
              C153521 * C301 +
          ((((C78885 + C78886) * C153937 + (C78887 + C78888) * C153926 +
             (C78889 + C78890) * C153901) *
                C70498 +
            ((C75565 + C75566) * C153937 + (C78485 + C78486) * C153926 +
             (C78891 + C78892) * C153901) *
                C153684) *
               C474 -
           ((C78844 * C153901 + (C75566 + C75565) * C153926 +
             (C74590 + C74589) * C153937) *
                C153684 +
            (C78894 * C153901 + (C78886 + C78885) * C153926 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153937) *
                C70498) *
               C473 -
           (((C74288 * C9038 - C74289 * C9035 - C74288 * C9039 +
              C153472 * C9044 + C74286 * C9040 - C74287 * C9036 -
              C74286 * C9041 + C74280 * C9045) *
                 C153901 +
             (C78892 + C78891) * C153926 + C78844 * C153937) *
                C153684 +
            ((C74288 * C7522 - C74289 * C7516 - C74288 * C7523 +
              C153472 * C7528 + C74286 * C7520 - C74287 * C7515 -
              C74286 * C7521 + C74280 * C7527) *
                 C153901 +
             (C78890 + C78889) * C153926 + C78894 * C153937) *
                C70498) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153637 * C153943 +
            (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
            C74602 * C153871) *
               C153849 -
           ((C74288 * C4069 - C74289 * C4064 - C74288 * C4070 +
             C153472 * C4076 + C74286 * C4067 - C74287 * C4063 -
             C74286 * C4068 + C74280 * C4075) *
                C153637 * C153871 +
            (C74288 * C1767 - C74289 * C1759 - C74288 * C1768 +
             C153472 * C1774 + C74286 * C1769 - C74287 * C1760 -
             C74286 * C1770 + C74280 * C1775) *
                C153637 * C153929 +
            (C74288 * C953 - C74289 * C946 - C74288 * C954 + C153472 * C964 +
             C74286 * C951 - C74287 * C945 - C74286 * C952 + C74280 * C963) *
                C153637 * C153939 +
            (C74288 * C494 - C74289 * C479 - C74288 * C495 + C153472 * C515 +
             C74286 * C496 - C74287 * C480 - C74286 * C497 + C74280 * C516) *
                C153637 * C153943) *
               C153601) *
              C153521 * C153917 +
          (((C74286 * C494 - C74287 * C479 - C74286 * C495 + C74280 * C515 +
             C74288 * C492 - C74289 * C478 - C74288 * C493 + C153472 * C514) *
                C153637 * C153943 +
            (C74286 * C953 - C74287 * C946 - C74286 * C954 + C74280 * C964 +
             C74288 * C955 - C74289 * C947 - C74288 * C956 + C153472 * C965) *
                C153637 * C153939 +
            (C74286 * C1767 - C74287 * C1759 - C74286 * C1768 + C74280 * C1774 +
             C74288 * C1765 - C74289 * C1758 - C74288 * C1766 +
             C153472 * C1773) *
                C153637 * C153929 +
            (C74286 * C4069 - C74287 * C4064 - C74286 * C4070 + C74280 * C4076 +
             C74288 * C4071 - C74289 * C4065 - C74288 * C4072 +
             C153472 * C4077) *
                C153637 * C153871) *
               C153601 -
           (C74603 * C153871 + C74604 * C153929 +
            (C74590 + C74589) * C153637 * C153939 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153637 * C153943) *
               C153849) *
              C153521 * C153918 +
          (((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
             C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                C153637 * C153943 +
            (C75029 + C75030) * C153637 * C153939 +
            (C75031 + C75032) * C153637 * C153929 +
            (C75033 + C75034) * C153637 * C153871) *
               C153849 -
           ((C74288 * C4073 - C74289 * C4066 - C74288 * C4074 +
             C153472 * C4078 + C74286 * C4071 - C74287 * C4065 -
             C74286 * C4072 + C74280 * C4077) *
                C153637 * C153871 +
            (C74288 * C1763 - C74289 * C1757 - C74288 * C1764 +
             C153472 * C1772 + C74286 * C1765 - C74287 * C1758 -
             C74286 * C1766 + C74280 * C1773) *
                C153637 * C153929 +
            (C74288 * C957 - C74289 * C948 - C74288 * C958 + C153472 * C966 +
             C74286 * C955 - C74287 * C947 - C74286 * C956 + C74280 * C965) *
                C153637 * C153939 +
            (C74288 * C490 - C74289 * C477 - C74288 * C491 + C153472 * C513 +
             C74286 * C492 - C74287 * C478 - C74286 * C493 + C74280 * C514) *
                C153637 * C153943) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C153637 * C70498 +
            (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
               C153849 -
           ((C70506 * C957 - C70507 * C948 - C70506 * C958 + C153862 * C966 +
             C70504 * C955 - C70505 * C947 - C70504 * C956 + C153916 * C965 +
             C70502 * C953 - C70503 * C946 - C70502 * C954 + C153935 * C964 +
             C70500 * C951 - C70501 * C945 - C70500 * C952 + C153942 * C963) *
                C153637 * C153684 +
            (C70506 * C490 - C70507 * C477 - C70506 * C491 + C153862 * C513 +
             C70504 * C492 - C70505 * C478 - C70504 * C493 + C153916 * C514 +
             C70502 * C494 - C70503 * C479 - C70502 * C495 + C153935 * C515 +
             C70500 * C496 - C70501 * C480 - C70500 * C497 + C153942 * C516) *
                C153637 * C70498) *
               C153601) *
              C153521 * C153917 +
          (((C70500 * C494 - C70501 * C479 - C70500 * C495 + C153942 * C515 +
             C70502 * C492 - C70503 * C478 - C70502 * C493 + C153935 * C514 +
             C70504 * C490 - C70505 * C477 - C70504 * C491 + C153916 * C513 +
             C70506 * C488 - C70507 * C476 - C70506 * C489 + C153862 * C512) *
                C153637 * C70498 +
            (C70500 * C953 - C70501 * C946 - C70500 * C954 + C153942 * C964 +
             C70502 * C955 - C70503 * C947 - C70502 * C956 + C153935 * C965 +
             C70504 * C957 - C70505 * C948 - C70504 * C958 + C153916 * C966 +
             C70506 * C959 - C70507 * C949 - C70506 * C960 + C153862 * C967) *
                C153637 * C153684) *
               C153601 -
           ((C70810 + C70809 + C70808 + C70807) * C153637 * C153684 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C153637 * C70498) *
               C153849) *
              C153521 * C153918 +
          (((C70500 * C156 - C70501 * C146 - C70500 * C157 + C153942 * C170 +
             C70502 * C158 - C70503 * C147 - C70502 * C159 + C153935 * C171 +
             C70504 * C160 - C70505 * C148 - C70504 * C161 + C153916 * C172 +
             C70506 * C162 - C70507 * C149 - C70506 * C163 + C153862 * C173) *
                C153637 * C70498 +
            (C71227 + C71228 + C71229 + C71230) * C153637 * C153684) *
               C153849 -
           ((C70506 * C961 - C70507 * C950 - C70506 * C962 + C153862 * C968 +
             C70504 * C959 - C70505 * C949 - C70504 * C960 + C153916 * C967 +
             C70502 * C957 - C70503 * C948 - C70502 * C958 + C153935 * C966 +
             C70500 * C955 - C70501 * C947 - C70500 * C956 + C153942 * C965) *
                C153637 * C153684 +
            (C70506 * C508 - C70507 * C486 - C70506 * C509 + C153862 * C522 +
             C70504 * C488 - C70505 * C476 - C70504 * C489 + C153916 * C512 +
             C70502 * C490 - C70503 * C477 - C70502 * C491 + C153935 * C513 +
             C70500 * C492 - C70501 * C478 - C70500 * C493 + C153942 * C514) *
                C153637 * C70498) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153937 +
             (C78877 + C78878) * C153926 + C78893 * C153901) *
                C70498 +
            ((C74581 + C74582) * C153937 + (C75564 + C75563) * C153926 +
             C78795 * C153901) *
                C153684) *
               C153849 -
           (((C78881 + C78882) * C153901 + (C76144 + C76143) * C153926 +
             (C75563 + C75564) * C153937) *
                C153684 +
            ((C78883 + C78884) * C153901 + (C78880 + C78879) * C153926 +
             (C78878 + C78877) * C153937) *
                C70498) *
               C153601) *
              C153521 * C153917 +
          ((((C78885 + C78886) * C153937 + (C78887 + C78888) * C153926 +
             (C78889 + C78890) * C153901) *
                C70498 +
            ((C75565 + C75566) * C153937 + (C78485 + C78486) * C153926 +
             (C78891 + C78892) * C153901) *
                C153684) *
               C153601 -
           ((C78844 * C153901 + (C75566 + C75565) * C153926 +
             (C74590 + C74589) * C153937) *
                C153684 +
            (C78894 * C153901 + (C78886 + C78885) * C153926 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153937) *
                C70498) *
               C153849) *
              C153521 * C153918 +
          ((((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
              C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                 C153937 +
             (C79527 + C79528) * C153926 + (C79529 + C79530) * C153901) *
                C70498 +
            ((C75029 + C75030) * C153937 + (C79209 + C79210) * C153926 +
             (C79211 + C79212) * C153901) *
                C153684) *
               C153849 -
           (((C74288 * C8429 - C74289 * C8428 - C74288 * C8430 +
              C153472 * C8431 + C74286 * C6191 - C74287 * C6182 -
              C74286 * C6192 + C74280 * C6200) *
                 C153901 +
             (C79212 + C79211) * C153926 + (C79210 + C79209) * C153937) *
                C153684 +
            ((C74288 * C2115 - C74289 * C2109 - C74288 * C2116 +
              C153472 * C2124 + C74286 * C2117 - C74287 * C2110 -
              C74286 * C2118 + C74280 * C2125) *
                 C153901 +
             (C79530 + C79529) * C153926 + (C79528 + C79527) * C153937) *
                C70498) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C153637 * C70498 +
            (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
               C153537 * C298 -
           ((C70803 + C70804 + C70805 + C70806) * C153637 * C153684 +
            (C70802 + C70801 + C70800 + C70799) * C153637 * C70498) *
               C153537 * C299 +
           ((C70806 + C70805 + C70804 + C70803) * C153637 * C70498 +
            (C70500 * C1196 - C70501 * C1187 - C70500 * C1197 +
             C153942 * C1202 + C70502 * C1194 - C70503 * C1186 -
             C70502 * C1195 + C153935 * C1201 + C70504 * C1192 -
             C70505 * C1185 - C70504 * C1193 + C153916 * C1200 +
             C70506 * C1190 - C70507 * C1184 - C70506 * C1191 +
             C153862 * C1199) *
                C153637 * C153684) *
               C153537 * C300) *
              C301 +
          (((C70807 + C70808 + C70809 + C70810) * C153637 * C70498 +
            (C70811 + C70812 + C70813 + C70814) * C153637 * C153684) *
               C153537 * C299 -
           ((C70810 + C70809 + C70808 + C70807) * C153637 * C153684 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C153637 * C70498) *
               C153537 * C298 -
           ((C70506 * C1188 - C70507 * C1183 - C70506 * C1189 +
             C153862 * C1198 + C70504 * C1190 - C70505 * C1184 -
             C70504 * C1191 + C153916 * C1199 + C70502 * C1192 -
             C70503 * C1185 - C70502 * C1193 + C153935 * C1200 +
             C70500 * C1194 - C70501 * C1186 - C70500 * C1195 +
             C153942 * C1201) *
                C153637 * C153684 +
            (C70814 + C70813 + C70812 + C70811) * C153637 * C70498) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
            C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
            C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
            C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
               C153637 * C70498 +
           (C70500 * C323 - C70501 * C307 - C70500 * C324 + C153942 * C343 +
            C70502 * C321 - C70503 * C306 - C70502 * C322 + C153935 * C342 +
            C70504 * C319 - C70505 * C305 - C70504 * C320 + C153916 * C341 +
            C70506 * C317 - C70507 * C304 - C70506 * C318 + C153862 * C340) *
               C153637 * C153684) *
              C153537 * C153521 * C130 -
          ((C70506 * C315 - C70507 * C303 - C70506 * C316 + C153862 * C339 +
            C70504 * C317 - C70505 * C304 - C70504 * C318 + C153916 * C340 +
            C70502 * C319 - C70503 * C305 - C70502 * C320 + C153935 * C341 +
            C70500 * C321 - C70501 * C306 - C70500 * C322 + C153942 * C342) *
               C153637 * C153684 +
           (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
            C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
            C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
            C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
               C153637 * C70498) *
              C153537 * C153521 * C131 +
          ((C70500 * C156 - C70501 * C146 - C70500 * C157 + C153942 * C170 +
            C70502 * C158 - C70503 * C147 - C70502 * C159 + C153935 * C171 +
            C70504 * C160 - C70505 * C148 - C70504 * C161 + C153916 * C172 +
            C70506 * C162 - C70507 * C149 - C70506 * C163 + C153862 * C173) *
               C153637 * C70498 +
           (C70500 * C319 - C70501 * C305 - C70500 * C320 + C153942 * C341 +
            C70502 * C317 - C70503 * C304 - C70502 * C318 + C153935 * C340 +
            C70504 * C315 - C70505 * C303 - C70504 * C316 + C153916 * C339 +
            C70506 * C335 - C70507 * C313 - C70506 * C336 + C153862 * C349) *
               C153637 * C153684) *
              C153537 * C153521 * C132 -
          ((C70506 * C652 - C70507 * C651 - C70506 * C653 + C153862 * C654 +
            C70504 * C335 - C70505 * C313 - C70504 * C336 + C153916 * C349 +
            C70502 * C315 - C70503 * C303 - C70502 * C316 + C153935 * C339 +
            C70500 * C317 - C70501 * C304 - C70500 * C318 + C153942 * C340) *
               C153637 * C153684 +
           (C70506 * C164 - C70507 * C150 - C70506 * C165 + C153862 * C174 +
            C70504 * C162 - C70505 * C149 - C70504 * C163 + C153916 * C173 +
            C70502 * C160 - C70503 * C148 - C70502 * C161 + C153935 * C172 +
            C70500 * C158 - C70501 * C147 - C70500 * C159 + C153942 * C171) *
               C153637 * C70498) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
            C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
               C153637 * C153943 +
           (C74286 * C323 - C74287 * C307 - C74286 * C324 + C74280 * C343 +
            C74288 * C321 - C74289 * C306 - C74288 * C322 + C153472 * C342) *
               C153637 * C153939 +
           (C74286 * C325 - C74287 * C308 - C74286 * C326 + C74280 * C344 +
            C74288 * C327 - C74289 * C309 - C74288 * C328 + C153472 * C345) *
               C153637 * C153929 +
           (C74286 * C1196 - C74287 * C1187 - C74286 * C1197 + C74280 * C1202 +
            C74288 * C1194 - C74289 * C1186 - C74288 * C1195 +
            C153472 * C1201) *
               C153637 * C153871) *
              C153537 * C153521 * C130 -
          ((C74288 * C1192 - C74289 * C1185 - C74288 * C1193 + C153472 * C1200 +
            C74286 * C1194 - C74287 * C1186 - C74286 * C1195 + C74280 * C1201) *
               C153637 * C153871 +
           (C74288 * C329 - C74289 * C310 - C74288 * C330 + C153472 * C346 +
            C74286 * C327 - C74287 * C309 - C74286 * C328 + C74280 * C345) *
               C153637 * C153929 +
           (C74288 * C319 - C74289 * C305 - C74288 * C320 + C153472 * C341 +
            C74286 * C321 - C74287 * C306 - C74286 * C322 + C74280 * C342) *
               C153637 * C153939 +
           (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
            C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
               C153637 * C153943) *
              C153537 * C153521 * C131 +
          ((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
            C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
               C153637 * C153943 +
           (C74286 * C319 - C74287 * C305 - C74286 * C320 + C74280 * C341 +
            C74288 * C317 - C74289 * C304 - C74288 * C318 + C153472 * C340) *
               C153637 * C153939 +
           (C74286 * C329 - C74287 * C310 - C74286 * C330 + C74280 * C346 +
            C74288 * C331 - C74289 * C311 - C74288 * C332 + C153472 * C347) *
               C153637 * C153929 +
           (C74286 * C1192 - C74287 * C1185 - C74286 * C1193 + C74280 * C1200 +
            C74288 * C1190 - C74289 * C1184 - C74288 * C1191 +
            C153472 * C1199) *
               C153637 * C153871) *
              C153537 * C153521 * C132 -
          ((C74288 * C1188 - C74289 * C1183 - C74288 * C1189 + C153472 * C1198 +
            C74286 * C1190 - C74287 * C1184 - C74286 * C1191 + C74280 * C1199) *
               C153637 * C153871 +
           (C74288 * C333 - C74289 * C312 - C74288 * C334 + C153472 * C348 +
            C74286 * C331 - C74287 * C311 - C74286 * C332 + C74280 * C347) *
               C153637 * C153929 +
           (C74288 * C315 - C74289 * C303 - C74288 * C316 + C153472 * C339 +
            C74286 * C317 - C74287 * C304 - C74286 * C318 + C74280 * C340) *
               C153637 * C153939 +
           (C74288 * C160 - C74289 * C148 - C74288 * C161 + C153472 * C172 +
            C74286 * C158 - C74287 * C147 - C74286 * C159 + C74280 * C171) *
               C153637 * C153943) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153637 * C153943 +
            (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
            C74602 * C153871) *
               C153537 * C298 -
           ((C74587 + C74588) * C153637 * C153871 +
            (C74586 + C74585) * C153637 * C153929 +
            (C74584 + C74583) * C153637 * C153939 +
            (C74582 + C74581) * C153637 * C153943) *
               C153537 * C299 +
           (C74601 * C153943 + C74602 * C153939 +
            (C74588 + C74587) * C153637 * C153929 +
            (C74286 * C4534 - C74287 * C4529 - C74286 * C4535 + C74280 * C4538 +
             C74288 * C4532 - C74289 * C4528 - C74288 * C4533 +
             C153472 * C4537) *
                C153637 * C153871) *
               C153537 * C300) *
              C301 +
          (((C74589 + C74590) * C153637 * C153943 +
            (C74591 + C74592) * C153637 * C153939 +
            (C74593 + C74594) * C153637 * C153929 +
            (C74595 + C74596) * C153637 * C153871) *
               C153537 * C299 -
           (C74603 * C153871 + C74604 * C153929 +
            (C74590 + C74589) * C153637 * C153939 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153637 * C153943) *
               C153537 * C298 -
           ((C74288 * C4530 - C74289 * C4527 - C74288 * C4531 +
             C153472 * C4536 + C74286 * C4532 - C74287 * C4528 -
             C74286 * C4533 + C74280 * C4537) *
                C153637 * C153871 +
            (C74596 + C74595) * C153637 * C153929 + C74603 * C153939 +
            C74604 * C153943) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153937 +
            (C74286 * C496 - C74287 * C480 - C74286 * C497 + C74280 * C516 +
             C74288 * C494 - C74289 * C479 - C74288 * C495 + C153472 * C515) *
                C153926 +
            (C74286 * C498 - C74287 * C481 - C74286 * C499 + C74280 * C517 +
             C74288 * C500 - C74289 * C482 - C74288 * C501 + C153472 * C518) *
                C153901) *
               C70498 +
           ((C74581 + C74582) * C153937 + (C75564 + C75563) * C153926 +
            (C76143 + C76144) * C153901) *
               C153684) *
              C153537 * C153521 * C130 -
          (((C74288 * C1334 - C74289 * C1327 - C74288 * C1335 +
             C153472 * C1342 + C74286 * C1336 - C74287 * C1328 -
             C74286 * C1337 + C74280 * C1343) *
                C153901 +
            (C75566 + C75565) * C153926 + (C74590 + C74589) * C153937) *
               C153684 +
           ((C74288 * C502 - C74289 * C483 - C74288 * C503 + C153472 * C519 +
             C74286 * C500 - C74287 * C482 - C74286 * C501 + C74280 * C518) *
                C153901 +
            (C74288 * C492 - C74289 * C478 - C74288 * C493 + C153472 * C514 +
             C74286 * C494 - C74287 * C479 - C74286 * C495 + C74280 * C515) *
                C153926 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153937) *
               C70498) *
              C153537 * C153521 * C131 +
          (((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
             C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                C153937 +
            (C74286 * C492 - C74287 * C478 - C74286 * C493 + C74280 * C514 +
             C74288 * C490 - C74289 * C477 - C74288 * C491 + C153472 * C513) *
                C153926 +
            (C74286 * C502 - C74287 * C483 - C74286 * C503 + C74280 * C519 +
             C74288 * C504 - C74289 * C484 - C74288 * C505 + C153472 * C520) *
                C153901) *
               C70498 +
           ((C75029 + C75030) * C153937 +
            (C74286 * C955 - C74287 * C947 - C74286 * C956 + C74280 * C965 +
             C74288 * C957 - C74289 * C948 - C74288 * C958 + C153472 * C966) *
                C153926 +
            (C74286 * C1334 - C74287 * C1327 - C74286 * C1335 + C74280 * C1342 +
             C74288 * C1332 - C74289 * C1326 - C74288 * C1333 +
             C153472 * C1341) *
                C153901) *
               C153684) *
              C153537 * C153521 * C132 -
          (((C74288 * C1330 - C74289 * C1325 - C74288 * C1331 +
             C153472 * C1340 + C74286 * C1332 - C74287 * C1326 -
             C74286 * C1333 + C74280 * C1341) *
                C153901 +
            (C74288 * C959 - C74289 * C949 - C74288 * C960 + C153472 * C967 +
             C74286 * C957 - C74287 * C948 - C74286 * C958 + C74280 * C966) *
                C153926 +
            (C74288 * C315 - C74289 * C303 - C74288 * C316 + C153472 * C339 +
             C74286 * C317 - C74287 * C304 - C74286 * C318 + C74280 * C340) *
                C153937) *
               C153684 +
           ((C74288 * C506 - C74289 * C485 - C74288 * C507 + C153472 * C521 +
             C74286 * C504 - C74287 * C484 - C74286 * C505 + C74280 * C520) *
                C153901 +
            (C74288 * C488 - C74289 * C476 - C74288 * C489 + C153472 * C512 +
             C74286 * C490 - C74287 * C477 - C74286 * C491 + C74280 * C513) *
                C153926 +
            (C74288 * C160 - C74289 * C148 - C74288 * C161 + C153472 * C172 +
             C74286 * C158 - C74287 * C147 - C74286 * C159 + C74280 * C171) *
                C153937) *
               C70498) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153937 +
             (C74286 * C496 - C74287 * C480 - C74286 * C497 + C74280 * C516 +
              C74288 * C494 - C74289 * C479 - C74288 * C495 + C153472 * C515) *
                 C153926 +
             (C74286 * C498 - C74287 * C481 - C74286 * C499 + C74280 * C517 +
              C74288 * C500 - C74289 * C482 - C74288 * C501 + C153472 * C518) *
                 C153901) *
                C70498 +
            ((C74581 + C74582) * C153937 + (C75564 + C75563) * C153926 +
             (C76143 + C76144) * C153901) *
                C153684) *
               C153537 * C298 -
           (((C76146 + C76145) * C153901 + C76796 * C153926 +
             (C74584 + C74583) * C153937) *
                C153684 +
            ((C76144 + C76143) * C153901 + (C75563 + C75564) * C153926 +
             (C74582 + C74581) * C153937) *
                C70498) *
               C153537 * C299 +
           ((C74597 * C153937 + (C75562 + C75561) * C153926 +
             (C76145 + C76146) * C153901) *
                C70498 +
            (C74598 * C153937 + (C75560 + C75559) * C153926 +
             (C76147 + C76148) * C153901) *
                C153684) *
               C153537 * C300) *
              C301 +
          ((((C74589 + C74590) * C153937 + (C75565 + C75566) * C153926 +
             (C78485 + C78486) * C153901) *
                C70498 +
            ((C74591 + C74592) * C153937 + (C75567 + C75568) * C153926 +
             (C78487 + C78488) * C153901) *
                C153684) *
               C153537 * C299 -
           (((C78486 + C78485) * C153901 + (C75566 + C75565) * C153926 +
             (C74590 + C74589) * C153937) *
                C153684 +
            ((C74288 * C502 - C74289 * C483 - C74288 * C503 + C153472 * C519 +
              C74286 * C500 - C74287 * C482 - C74286 * C501 + C74280 * C518) *
                 C153901 +
             (C74288 * C492 - C74289 * C478 - C74288 * C493 + C153472 * C514 +
              C74286 * C494 - C74287 * C479 - C74286 * C495 + C74280 * C515) *
                 C153926 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153937) *
                C70498) *
               C153537 * C298 -
           (((C74288 * C4784 - C74289 * C4781 - C74288 * C4785 +
              C153472 * C4790 + C74286 * C4786 - C74287 * C4782 -
              C74286 * C4787 + C74280 * C4791) *
                 C153901 +
             (C75570 + C75569) * C153926 + C74599 * C153937) *
                C153684 +
            ((C78488 + C78487) * C153901 + (C75568 + C75567) * C153926 +
             C74600 * C153937) *
                C70498) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153637 * C153943 +
            (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
            C74602 * C153871) *
               C153537 * C153919 -
           (C75905 * C153871 + C75906 * C153929 +
            (C74584 + C74583) * C153637 * C153939 +
            (C74582 + C74581) * C153637 * C153943) *
               C153537 * C153920 +
           (C74601 * C153943 + C74602 * C153939 +
            (C74588 + C74587) * C153637 * C153929 +
            (C75911 + C75912) * C153637 * C153871) *
               C153537 * C1469) *
              C153840 +
          (((C74589 + C74590) * C153637 * C153943 +
            (C74591 + C74592) * C153637 * C153939 +
            (C74593 + C74594) * C153637 * C153929 +
            (C74595 + C74596) * C153637 * C153871) *
               C153537 * C153920 -
           (C74603 * C153871 + C74604 * C153929 +
            (C74590 + C74589) * C153637 * C153939 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153637 * C153943) *
               C153537 * C153919 -
           ((C74288 * C4530 - C74289 * C4527 - C74288 * C4531 +
             C153472 * C4536 + C74286 * C4532 - C74287 * C4528 -
             C74286 * C4533 + C74280 * C4537) *
                C153637 * C153871 +
            (C74596 + C74595) * C153637 * C153929 + C74603 * C153939 +
            C74604 * C153943) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C153637 * C70498 +
            (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
               C153537 * C153919 -
           ((C70803 + C70804 + C70805 + C70806) * C153637 * C153684 +
            (C70802 + C70801 + C70800 + C70799) * C153637 * C70498) *
               C153537 * C153920 +
           ((C70806 + C70805 + C70804 + C70803) * C153637 * C70498 +
            (C72087 + C72088 + C72089 + C72090) * C153637 * C153684) *
               C153537 * C1469) *
              C153840 +
          (((C70807 + C70808 + C70809 + C70810) * C153637 * C70498 +
            (C70811 + C70812 + C70813 + C70814) * C153637 * C153684) *
               C153537 * C153920 -
           ((C70810 + C70809 + C70808 + C70807) * C153637 * C153684 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C153637 * C70498) *
               C153537 * C153919 -
           ((C70506 * C1188 - C70507 * C1183 - C70506 * C1189 +
             C153862 * C1198 + C70504 * C1190 - C70505 * C1184 -
             C70504 * C1191 + C153916 * C1199 + C70502 * C1192 -
             C70503 * C1185 - C70502 * C1193 + C153935 * C1200 +
             C70500 * C1194 - C70501 * C1186 - C70500 * C1195 +
             C153942 * C1201) *
                C153637 * C153684 +
            (C70814 + C70813 + C70812 + C70811) * C153637 * C70498) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153937 +
             (C78877 + C78878) * C153926 + C78893 * C153901) *
                C70498 +
            ((C74581 + C74582) * C153937 + C79917 * C153926 +
             C78795 * C153901) *
                C153684) *
               C153537 * C153919 -
           ((C80715 * C153901 + C76796 * C153926 +
             (C74584 + C74583) * C153937) *
                C153684 +
            (C79918 * C153901 + C79919 * C153926 +
             (C74582 + C74581) * C153937) *
                C70498) *
               C153537 * C153920 +
           ((C74597 * C153937 + (C75562 + C75561) * C153926 +
             (C76145 + C76146) * C153901) *
                C70498 +
            (C74598 * C153937 + (C75560 + C75559) * C153926 +
             (C76147 + C76148) * C153901) *
                C153684) *
               C153537 * C1469) *
              C153840 +
          ((((C74589 + C74590) * C153937 + C79920 * C153926 +
             C79921 * C153901) *
                C70498 +
            ((C74591 + C74592) * C153937 + (C75567 + C75568) * C153926 +
             (C78487 + C78488) * C153901) *
                C153684) *
               C153537 * C153920 -
           ((C78844 * C153901 + C79922 * C153926 +
             (C74590 + C74589) * C153937) *
                C153684 +
            (C78894 * C153901 + (C78886 + C78885) * C153926 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153937) *
                C70498) *
               C153537 * C153919 -
           (((C74288 * C4784 - C74289 * C4781 - C74288 * C4785 +
              C153472 * C4790 + C74286 * C4786 - C74287 * C4782 -
              C74286 * C4787 + C74280 * C4791) *
                 C153901 +
             (C75570 + C75569) * C153926 + C74599 * C153937) *
                C153684 +
            ((C78488 + C78487) * C153901 + (C75568 + C75567) * C153926 +
             C74600 * C153937) *
                C70498) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153637 * C153943 +
            (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
            C74602 * C153871) *
               C153849 -
           (C76805 * C153871 + C76806 * C153929 +
            (C75563 + C75564) * C153637 * C153939 +
            (C74288 * C494 - C74289 * C479 - C74288 * C495 + C153472 * C515 +
             C74286 * C496 - C74287 * C480 - C74286 * C497 + C74280 * C516) *
                C153637 * C153943) *
               C153601) *
              C153919 +
          (((C75564 + C75563) * C153637 * C153943 +
            (C75562 + C75561) * C153637 * C153939 +
            (C75560 + C75559) * C153637 * C153929 +
            (C76811 + C76812) * C153637 * C153871) *
               C153601 -
           (C75905 * C153871 + C75906 * C153929 +
            (C74584 + C74583) * C153637 * C153939 +
            (C74582 + C74581) * C153637 * C153943) *
               C153849) *
              C153920 +
          ((C74601 * C153943 + C74602 * C153939 +
            (C74588 + C74587) * C153637 * C153929 +
            (C75911 + C75912) * C153637 * C153871) *
               C153849 -
           ((C74288 * C28996 - C74289 * C28993 - C74288 * C28997 +
             C153472 * C28999 + C74286 * C28994 - C74287 * C28992 -
             C74286 * C28995 + C74280 * C28998) *
                C153637 * C153871 +
            (C76812 + C76811) * C153637 * C153929 + C76805 * C153939 +
            C76806 * C153943) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C153637 * C70498 +
            (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
               C153849 -
           ((C71731 + C71732 + C71733 + C71734) * C153637 * C153684 +
            (C70506 * C490 - C70507 * C477 - C70506 * C491 + C153862 * C513 +
             C70504 * C492 - C70505 * C478 - C70504 * C493 + C153916 * C514 +
             C70502 * C494 - C70503 * C479 - C70502 * C495 + C153935 * C515 +
             C70500 * C496 - C70501 * C480 - C70500 * C497 + C153942 * C516) *
                C153637 * C70498) *
               C153601) *
              C153919 +
          (((C71734 + C71733 + C71732 + C71731) * C153637 * C70498 +
            (C72983 + C72984 + C72985 + C72986) * C153637 * C153684) *
               C153601 -
           ((C70803 + C70804 + C70805 + C70806) * C153637 * C153684 +
            (C70802 + C70801 + C70800 + C70799) * C153637 * C70498) *
               C153849) *
              C153920 +
          (((C70806 + C70805 + C70804 + C70803) * C153637 * C70498 +
            (C72087 + C72088 + C72089 + C72090) * C153637 * C153684) *
               C153849 -
           ((C70506 * C4073 - C70507 * C4066 - C70506 * C4074 +
             C153862 * C4078 + C70504 * C4071 - C70505 * C4065 -
             C70504 * C4072 + C153916 * C4077 + C70502 * C4069 -
             C70503 * C4064 - C70502 * C4070 + C153935 * C4076 +
             C70500 * C4067 - C70501 * C4063 - C70500 * C4068 +
             C153942 * C4075) *
                C153637 * C153684 +
            (C72986 + C72985 + C72984 + C72983) * C153637 * C70498) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153937 +
             (C78877 + C78878) * C153926 + C78893 * C153901) *
                C70498 +
            ((C74581 + C74582) * C153937 + C79917 * C153926 +
             C78795 * C153901) *
                C153684) *
               C153849 -
           ((C80697 * C153901 + C79918 * C153926 + C79919 * C153937) * C153684 +
            ((C78883 + C78884) * C153901 + (C78880 + C78879) * C153926 +
             (C78878 + C78877) * C153937) *
                C70498) *
               C153601) *
              C153919 +
          (((C79917 * C153937 + C78795 * C153926 + C80698 * C153901) * C70498 +
            (C81694 * C153937 + C81695 * C153926 +
             (C80726 + C80727) * C153901) *
                C153684) *
               C153601 -
           ((C80715 * C153901 + C76796 * C153926 +
             (C74584 + C74583) * C153937) *
                C153684 +
            (C79918 * C153901 + C79919 * C153926 +
             (C74582 + C74581) * C153937) *
                C70498) *
               C153849) *
              C153920 +
          (((C74597 * C153937 + C81694 * C153926 + C81695 * C153901) * C70498 +
            (C74598 * C153937 + (C75560 + C75559) * C153926 +
             (C76147 + C76148) * C153901) *
                C153684) *
               C153849 -
           (((C74288 * C32074 - C74289 * C32073 - C74288 * C32075 +
              C153472 * C32076 + C74286 * C30186 - C74287 * C30183 -
              C74286 * C30187 + C74280 * C30189) *
                 C153901 +
             (C76148 + C76147) * C153926 + C76795 * C153937) *
                C153684 +
            ((C80727 + C80726) * C153901 + C80715 * C153926 +
             C76796 * C153937) *
                C70498) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C70500 * C152 - C70501 * C144 - C70500 * C153 +
                 C153942 * C168 + C70502 * C154 - C70503 * C145 -
                 C70502 * C155 + C153935 * C169 + C70504 * C156 -
                 C70505 * C146 - C70504 * C157 + C153916 * C170 +
                 C70506 * C158 - C70507 * C147 - C70506 * C159 +
                 C153862 * C171) *
                    C153637 * C70498 +
                (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
                   C153537 * C1091 -
               ((C70803 + C70804 + C70805 + C70806) * C153637 * C153684 +
                (C70802 + C70801 + C70800 + C70799) * C153637 * C70498) *
                   C153537 * C153573) *
                  C1093 +
              (((C70807 + C70808 + C70809 + C70810) * C153637 * C70498 +
                (C70811 + C70812 + C70813 + C70814) * C153637 * C153684) *
                   C153537 * C153573 -
               ((C70810 + C70809 + C70808 + C70807) * C153637 * C153684 +
                (C70506 * C160 - C70507 * C148 - C70506 * C161 +
                 C153862 * C172 + C70504 * C158 - C70505 * C147 -
                 C70504 * C159 + C153916 * C171 + C70502 * C156 -
                 C70503 * C146 - C70502 * C157 + C153935 * C170 +
                 C70500 * C154 - C70501 * C145 - C70500 * C155 +
                 C153942 * C169) *
                    C153637 * C70498) *
                   C153537 * C1091) *
                  C1094 +
              (((C70500 * C156 - C70501 * C146 - C70500 * C157 +
                 C153942 * C170 + C70502 * C158 - C70503 * C147 -
                 C70502 * C159 + C153935 * C171 + C70504 * C160 -
                 C70505 * C148 - C70504 * C161 + C153916 * C172 +
                 C70506 * C162 - C70507 * C149 - C70506 * C163 +
                 C153862 * C173) *
                    C153637 * C70498 +
                (C71227 + C71228 + C71229 + C71230) * C153637 * C153684) *
                   C153537 * C1091 -
               ((C70506 * C337 - C70507 * C314 - C70506 * C338 +
                 C153862 * C350 + C70504 * C333 - C70505 * C312 -
                 C70504 * C334 + C153916 * C348 + C70502 * C331 -
                 C70503 * C311 - C70502 * C332 + C153935 * C347 +
                 C70500 * C329 - C70501 * C310 - C70500 * C330 +
                 C153942 * C346) *
                    C153637 * C153684 +
                (C71230 + C71229 + C71228 + C71227) * C153637 * C70498) *
                   C153537 * C153573) *
                  C1095) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
                C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
                C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
                C70506 * C158 - C70507 * C147 - C70506 * C159 +
                C153862 * C171) *
                   C153637 * C70498 +
               (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
                  C153537 * C1178 -
              ((C70803 + C70804 + C70805 + C70806) * C153637 * C153684 +
               (C70802 + C70801 + C70800 + C70799) * C153637 * C70498) *
                  C153537 * C1179 +
              ((C70806 + C70805 + C70804 + C70803) * C153637 * C70498 +
               (C72087 + C72088 + C72089 + C72090) * C153637 * C153684) *
                  C153537 * C1180 -
              ((C70506 * C2923 - C70507 * C2916 - C70506 * C2924 +
                C153862 * C2928 + C70504 * C2921 - C70505 * C2915 -
                C70504 * C2922 + C153916 * C2927 + C70502 * C2919 -
                C70503 * C2914 - C70502 * C2920 + C153935 * C2926 +
                C70500 * C2917 - C70501 * C2913 - C70500 * C2918 +
                C153942 * C2925) *
                   C153637 * C153684 +
               (C72090 + C72089 + C72088 + C72087) * C153637 * C70498) *
                  C153537 * C1181) *
             C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C153637 * C70498 +
            (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
               C473 -
           ((C71731 + C71732 + C71733 + C71734) * C153637 * C153684 +
            (C70506 * C490 - C70507 * C477 - C70506 * C491 + C153862 * C513 +
             C70504 * C492 - C70505 * C478 - C70504 * C493 + C153916 * C514 +
             C70502 * C494 - C70503 * C479 - C70502 * C495 + C153935 * C515 +
             C70500 * C496 - C70501 * C480 - C70500 * C497 + C153942 * C516) *
                C153637 * C70498) *
               C474 +
           ((C70500 * C498 - C70501 * C481 - C70500 * C499 + C153942 * C517 +
             C70502 * C500 - C70503 * C482 - C70502 * C501 + C153935 * C518 +
             C70504 * C502 - C70505 * C483 - C70504 * C503 + C153916 * C519 +
             C70506 * C504 - C70507 * C484 - C70506 * C505 + C153862 * C520) *
                C153637 * C70498 +
            (C72309 + C72310 + C72311 + C72312) * C153637 * C153684) *
               C475) *
              C1091 +
          (((C71734 + C71733 + C71732 + C71731) * C153637 * C70498 +
            (C70500 * C1769 - C70501 * C1760 - C70500 * C1770 +
             C153942 * C1775 + C70502 * C1767 - C70503 * C1759 -
             C70502 * C1768 + C153935 * C1774 + C70504 * C1765 -
             C70505 * C1758 - C70504 * C1766 + C153916 * C1773 +
             C70506 * C1763 - C70507 * C1757 - C70506 * C1764 +
             C153862 * C1772) *
                C153637 * C153684) *
               C474 -
           ((C70803 + C70804 + C70805 + C70806) * C153637 * C153684 +
            (C70802 + C70801 + C70800 + C70799) * C153637 * C70498) *
               C473 -
           ((C70506 * C3289 - C70507 * C3282 - C70506 * C3290 +
             C153862 * C3294 + C70504 * C3287 - C70505 * C3281 -
             C70504 * C3288 + C153916 * C3293 + C70502 * C3285 -
             C70503 * C3280 - C70502 * C3286 + C153935 * C3292 +
             C70500 * C3283 - C70501 * C3279 - C70500 * C3284 +
             C153942 * C3291) *
                C153637 * C153684 +
            (C72312 + C72311 + C72310 + C72309) * C153637 * C70498) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153637 * C153943 +
            (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
            C74602 * C153871) *
               C153537 * C1091 -
           ((C74587 + C74588) * C153637 * C153871 +
            (C74586 + C74585) * C153637 * C153929 +
            (C74584 + C74583) * C153637 * C153939 +
            (C74582 + C74581) * C153637 * C153943) *
               C153537 * C153573) *
              C1093 +
          (((C74589 + C74590) * C153637 * C153943 +
            (C74591 + C74592) * C153637 * C153939 +
            (C74593 + C74594) * C153637 * C153929 +
            (C74595 + C74596) * C153637 * C153871) *
               C153537 * C153573 -
           (C74603 * C153871 + C74604 * C153929 +
            (C74590 + C74589) * C153637 * C153939 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153637 * C153943) *
               C153537 * C1091) *
              C1094 +
          (((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
             C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                C153637 * C153943 +
            (C75029 + C75030) * C153637 * C153939 +
            (C75031 + C75032) * C153637 * C153929 +
            (C75033 + C75034) * C153637 * C153871) *
               C153537 * C1091 -
           ((C74288 * C2923 - C74289 * C2916 - C74288 * C2924 +
             C153472 * C2928 + C74286 * C2921 - C74287 * C2915 -
             C74286 * C2922 + C74280 * C2927) *
                C153637 * C153871 +
            (C75034 + C75033) * C153637 * C153929 +
            (C75032 + C75031) * C153637 * C153939 +
            (C75030 + C75029) * C153637 * C153943) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
            C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
               C153637 * C153943 +
           (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
           C74602 * C153871) *
              C153537 * C1178 -
          (C75905 * C153871 + C75906 * C153929 +
           (C74584 + C74583) * C153637 * C153939 +
           (C74582 + C74581) * C153637 * C153943) *
              C153537 * C1179 +
          (C74601 * C153943 + C74602 * C153939 +
           (C74588 + C74587) * C153637 * C153929 +
           (C75911 + C75912) * C153637 * C153871) *
              C153537 * C1180 -
          ((C74288 * C28340 - C74289 * C28337 - C74288 * C28341 +
            C153472 * C28343 + C74286 * C28338 - C74287 * C28336 -
            C74286 * C28339 + C74280 * C28342) *
               C153637 * C153871 +
           (C75912 + C75911) * C153637 * C153929 + C75905 * C153939 +
           C75906 * C153943) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153637 * C153943 +
            (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
            C74602 * C153871) *
               C473 -
           ((C75559 + C75560) * C153637 * C153871 +
            (C75561 + C75562) * C153637 * C153929 +
            (C75563 + C75564) * C153637 * C153939 +
            (C74288 * C494 - C74289 * C479 - C74288 * C495 + C153472 * C515 +
             C74286 * C496 - C74287 * C480 - C74286 * C497 + C74280 * C516) *
                C153637 * C153943) *
               C474 +
           ((C74286 * C498 - C74287 * C481 - C74286 * C499 + C74280 * C517 +
             C74288 * C500 - C74289 * C482 - C74288 * C501 + C153472 * C518) *
                C153637 * C153943 +
            (C76143 + C76144) * C153637 * C153939 +
            (C76145 + C76146) * C153637 * C153929 +
            (C76147 + C76148) * C153637 * C153871) *
               C475) *
              C1091 +
          (((C75564 + C75563) * C153637 * C153943 +
            (C75562 + C75561) * C153637 * C153939 +
            (C75560 + C75559) * C153637 * C153929 +
            (C74286 * C5568 - C74287 * C5563 - C74286 * C5569 + C74280 * C5572 +
             C74288 * C5566 - C74289 * C5562 - C74288 * C5567 +
             C153472 * C5571) *
                C153637 * C153871) *
               C474 -
           (C75905 * C153871 + C75906 * C153929 +
            (C74584 + C74583) * C153637 * C153939 +
            (C74582 + C74581) * C153637 * C153943) *
               C473 -
           ((C74288 * C28550 - C74289 * C28547 - C74288 * C28551 +
             C153472 * C28553 + C74286 * C28548 - C74287 * C28546 -
             C74286 * C28549 + C74280 * C28552) *
                C153637 * C153871 +
            (C76148 + C76147) * C153637 * C153929 +
            (C76146 + C76145) * C153637 * C153939 +
            (C76144 + C76143) * C153637 * C153943) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153937 +
             (C78877 + C78878) * C153926 + C78893 * C153901) *
                C70498 +
            ((C74581 + C74582) * C153937 + C79917 * C153926 +
             C78795 * C153901) *
                C153684) *
               C153537 * C1091 -
           (((C76146 + C76145) * C153901 + C76796 * C153926 +
             (C74584 + C74583) * C153937) *
                C153684 +
            (C79918 * C153901 + C79919 * C153926 +
             (C74582 + C74581) * C153937) *
                C70498) *
               C153537 * C153573) *
              C1093 +
          ((((C74589 + C74590) * C153937 + C79920 * C153926 +
             C79921 * C153901) *
                C70498 +
            ((C74591 + C74592) * C153937 + (C75567 + C75568) * C153926 +
             (C78487 + C78488) * C153901) *
                C153684) *
               C153537 * C153573 -
           ((C78844 * C153901 + C79922 * C153926 +
             (C74590 + C74589) * C153937) *
                C153684 +
            (C78894 * C153901 + (C78886 + C78885) * C153926 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153937) *
                C70498) *
               C153537 * C1091) *
              C1094 +
          ((((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
              C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                 C153937 +
             (C79527 + C79528) * C153926 + (C79529 + C79530) * C153901) *
                C70498 +
            ((C75029 + C75030) * C153937 + (C79209 + C79210) * C153926 +
             (C79211 + C79212) * C153901) *
                C153684) *
               C153537 * C1091 -
           (((C74288 * C3289 - C74289 * C3282 - C74288 * C3290 +
              C153472 * C3294 + C74286 * C3287 - C74287 * C3281 -
              C74286 * C3288 + C74280 * C3293) *
                 C153901 +
             (C74288 * C1763 - C74289 * C1757 - C74288 * C1764 +
              C153472 * C1772 + C74286 * C1765 - C74287 * C1758 -
              C74286 * C1766 + C74280 * C1773) *
                 C153926 +
             (C75032 + C75031) * C153937) *
                C153684 +
            ((C79212 + C79211) * C153901 + (C79210 + C79209) * C153926 +
             (C75030 + C75029) * C153937) *
                C70498) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153937 +
            (C78877 + C78878) * C153926 + C78893 * C153901) *
               C70498 +
           ((C74581 + C74582) * C153937 + C79917 * C153926 + C78795 * C153901) *
               C153684) *
              C153537 * C1178 -
          (((C76146 + C76145) * C153901 + C76796 * C153926 +
            (C74584 + C74583) * C153937) *
               C153684 +
           (C79918 * C153901 + C79919 * C153926 + (C74582 + C74581) * C153937) *
               C70498) *
              C153537 * C1179 +
          ((C74597 * C153937 + (C75562 + C75561) * C153926 +
            (C76145 + C76146) * C153901) *
               C70498 +
           (C74598 * C153937 + (C75560 + C75559) * C153926 +
            (C76147 + C76148) * C153901) *
               C153684) *
              C153537 * C1180 -
          (((C74288 * C28550 - C74289 * C28547 - C74288 * C28551 +
             C153472 * C28553 + C74286 * C28548 - C74287 * C28546 -
             C74286 * C28549 + C74280 * C28552) *
                C153901 +
            (C76812 + C76811) * C153926 + C75895 * C153937) *
               C153684 +
           ((C76148 + C76147) * C153901 + C76795 * C153926 + C75896 * C153937) *
               C70498) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153937 +
             (C78877 + C78878) * C153926 + C78893 * C153901) *
                C70498 +
            ((C74581 + C74582) * C153937 + C79917 * C153926 +
             C78795 * C153901) *
                C153684) *
               C473 -
           ((C80697 * C153901 + C79918 * C153926 + C79919 * C153937) * C153684 +
            ((C78883 + C78884) * C153901 + (C78880 + C78879) * C153926 +
             (C78878 + C78877) * C153937) *
                C70498) *
               C474 +
           ((C78893 * C153937 + (C78884 + C78883) * C153926 +
             (C74286 * C7518 - C74287 * C7514 - C74286 * C7519 +
              C74280 * C7526 + C74288 * C7520 - C74289 * C7515 -
              C74288 * C7521 + C153472 * C7527) *
                 C153901) *
                C70498 +
            (C78795 * C153937 + C80698 * C153926 +
             (C80724 + C80725) * C153901) *
                C153684) *
               C475) *
              C1091 +
          (((C79917 * C153937 + C78795 * C153926 + C80698 * C153901) * C70498 +
            ((C75562 + C75561) * C153937 + (C76145 + C76146) * C153926 +
             (C80726 + C80727) * C153901) *
                C153684) *
               C474 -
           ((C80715 * C153901 + C76796 * C153926 +
             (C74584 + C74583) * C153937) *
                C153684 +
            (C79918 * C153901 + C79919 * C153926 +
             (C74582 + C74581) * C153937) *
                C70498) *
               C473 -
           (((C74288 * C31225 - C74289 * C31222 - C74288 * C31226 +
              C153472 * C31228 + C74286 * C31223 - C74287 * C31221 -
              C74286 * C31224 + C74280 * C31227) *
                 C153901 +
             (C80727 + C80726) * C153926 + C80715 * C153937) *
                C153684 +
            ((C80725 + C80724) * C153901 + C80697 * C153926 +
             C79918 * C153937) *
                C70498) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153637 * C153943 +
             (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
             C74602 * C153871) *
                C153849 -
            ((C75559 + C75560) * C153637 * C153871 +
             (C75561 + C75562) * C153637 * C153929 +
             (C75563 + C75564) * C153637 * C153939 +
             (C74288 * C494 - C74289 * C479 - C74288 * C495 + C153472 * C515 +
              C74286 * C496 - C74287 * C480 - C74286 * C497 + C74280 * C516) *
                 C153637 * C153943) *
                C153601) *
               C1091 +
           (((C75564 + C75563) * C153637 * C153943 +
             (C75562 + C75561) * C153637 * C153939 +
             (C75560 + C75559) * C153637 * C153929 +
             (C74286 * C5568 - C74287 * C5563 - C74286 * C5569 +
              C74280 * C5572 + C74288 * C5566 - C74289 * C5562 -
              C74288 * C5567 + C153472 * C5571) *
                 C153637 * C153871) *
                C153601 -
            (C75905 * C153871 + C75906 * C153929 +
             (C74584 + C74583) * C153637 * C153939 +
             (C74582 + C74581) * C153637 * C153943) *
                C153849) *
               C153573) *
              C153840 +
          ((((C74286 * C494 - C74287 * C479 - C74286 * C495 + C74280 * C515 +
              C74288 * C492 - C74289 * C478 - C74288 * C493 + C153472 * C514) *
                 C153637 * C153943 +
             (C75565 + C75566) * C153637 * C153939 +
             (C75567 + C75568) * C153637 * C153929 +
             (C75569 + C75570) * C153637 * C153871) *
                C153601 -
            (C74603 * C153871 + C74604 * C153929 +
             (C74590 + C74589) * C153637 * C153939 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153637 * C153943) *
                C153849) *
               C1091 +
           (((C74589 + C74590) * C153637 * C153943 +
             (C74591 + C74592) * C153637 * C153939 +
             (C74593 + C74594) * C153637 * C153929 +
             (C74595 + C74596) * C153637 * C153871) *
                C153849 -
            ((C74288 * C5564 - C74289 * C5561 - C74288 * C5565 +
              C153472 * C5570 + C74286 * C5566 - C74287 * C5562 -
              C74286 * C5567 + C74280 * C5571) *
                 C153637 * C153871 +
             (C75570 + C75569) * C153637 * C153929 +
             (C75568 + C75567) * C153637 * C153939 +
             (C75566 + C75565) * C153637 * C153943) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
              C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
              C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
              C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                 C153637 * C70498 +
             (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
                C153849 -
            ((C71731 + C71732 + C71733 + C71734) * C153637 * C153684 +
             (C70506 * C490 - C70507 * C477 - C70506 * C491 + C153862 * C513 +
              C70504 * C492 - C70505 * C478 - C70504 * C493 + C153916 * C514 +
              C70502 * C494 - C70503 * C479 - C70502 * C495 + C153935 * C515 +
              C70500 * C496 - C70501 * C480 - C70500 * C497 + C153942 * C516) *
                 C153637 * C70498) *
                C153601) *
               C1091 +
           (((C71734 + C71733 + C71732 + C71731) * C153637 * C70498 +
             (C70500 * C1769 - C70501 * C1760 - C70500 * C1770 +
              C153942 * C1775 + C70502 * C1767 - C70503 * C1759 -
              C70502 * C1768 + C153935 * C1774 + C70504 * C1765 -
              C70505 * C1758 - C70504 * C1766 + C153916 * C1773 +
              C70506 * C1763 - C70507 * C1757 - C70506 * C1764 +
              C153862 * C1772) *
                 C153637 * C153684) *
                C153601 -
            ((C70803 + C70804 + C70805 + C70806) * C153637 * C153684 +
             (C70802 + C70801 + C70800 + C70799) * C153637 * C70498) *
                C153849) *
               C153573) *
              C153840 +
          ((((C70500 * C494 - C70501 * C479 - C70500 * C495 + C153942 * C515 +
              C70502 * C492 - C70503 * C478 - C70502 * C493 + C153935 * C514 +
              C70504 * C490 - C70505 * C477 - C70504 * C491 + C153916 * C513 +
              C70506 * C488 - C70507 * C476 - C70506 * C489 + C153862 * C512) *
                 C153637 * C70498 +
             (C71735 + C71736 + C71737 + C71738) * C153637 * C153684) *
                C153601 -
            ((C70810 + C70809 + C70808 + C70807) * C153637 * C153684 +
             (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
              C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
              C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
              C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                 C153637 * C70498) *
                C153849) *
               C1091 +
           (((C70807 + C70808 + C70809 + C70810) * C153637 * C70498 +
             (C70811 + C70812 + C70813 + C70814) * C153637 * C153684) *
                C153849 -
            ((C70506 * C1761 - C70507 * C1756 - C70506 * C1762 +
              C153862 * C1771 + C70504 * C1763 - C70505 * C1757 -
              C70504 * C1764 + C153916 * C1772 + C70502 * C1765 -
              C70503 * C1758 - C70502 * C1766 + C153935 * C1773 +
              C70500 * C1767 - C70501 * C1759 - C70500 * C1768 +
              C153942 * C1774) *
                 C153637 * C153684 +
             (C71738 + C71737 + C71736 + C71735) * C153637 * C70498) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
               C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                  C153937 +
              (C78877 + C78878) * C153926 + C78893 * C153901) *
                 C70498 +
             ((C74581 + C74582) * C153937 + C79917 * C153926 +
              C78795 * C153901) *
                 C153684) *
                C153849 -
            ((C80697 * C153901 + C79918 * C153926 + C79919 * C153937) *
                 C153684 +
             ((C78883 + C78884) * C153901 + (C78880 + C78879) * C153926 +
              (C78878 + C78877) * C153937) *
                 C70498) *
                C153601) *
               C1091 +
           (((C79917 * C153937 + C78795 * C153926 + C80698 * C153901) * C70498 +
             ((C75562 + C75561) * C153937 + (C76145 + C76146) * C153926 +
              (C80726 + C80727) * C153901) *
                 C153684) *
                C153601 -
            ((C80715 * C153901 + C76796 * C153926 +
              (C74584 + C74583) * C153937) *
                 C153684 +
             (C79918 * C153901 + C79919 * C153926 +
              (C74582 + C74581) * C153937) *
                 C70498) *
                C153849) *
               C153573) *
              C153840 +
          (((((C78885 + C78886) * C153937 + (C78887 + C78888) * C153926 +
              (C78889 + C78890) * C153901) *
                 C70498 +
             (C79920 * C153937 + C79921 * C153926 +
              (C78891 + C78892) * C153901) *
                 C153684) *
                C153601 -
            ((C78844 * C153901 + C79922 * C153926 +
              (C74590 + C74589) * C153937) *
                 C153684 +
             (C78894 * C153901 + (C78886 + C78885) * C153926 +
              (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
               C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                  C153937) *
                 C70498) *
                C153849) *
               C1091 +
           ((((C74589 + C74590) * C153937 + C79920 * C153926 +
              C79921 * C153901) *
                 C70498 +
             ((C74591 + C74592) * C153937 + (C75567 + C75568) * C153926 +
              (C78487 + C78488) * C153901) *
                 C153684) *
                C153849 -
            (((C74288 * C6185 - C74289 * C6179 - C74288 * C6186 +
               C153472 * C6197 + C74286 * C6187 - C74287 * C6180 -
               C74286 * C6188 + C74280 * C6198) *
                  C153901 +
              (C78488 + C78487) * C153926 + (C75568 + C75567) * C153937) *
                 C153684 +
             ((C78892 + C78891) * C153901 + C78844 * C153926 +
              C79922 * C153937) *
                 C70498) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
            C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
            C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
            C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
               C153637 * C70498 +
           (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
              C153537 * C1178 -
          ((C70803 + C70804 + C70805 + C70806) * C153637 * C153684 +
           (C70802 + C70801 + C70800 + C70799) * C153637 * C70498) *
              C153537 * C1179 +
          ((C70806 + C70805 + C70804 + C70803) * C153637 * C70498 +
           (C72087 + C72088 + C72089 + C72090) * C153637 * C153684) *
              C153537 * C1180 -
          ((C70506 * C2923 - C70507 * C2916 - C70506 * C2924 + C153862 * C2928 +
            C70504 * C2921 - C70505 * C2915 - C70504 * C2922 + C153916 * C2927 +
            C70502 * C2919 - C70503 * C2914 - C70502 * C2920 + C153935 * C2926 +
            C70500 * C2917 - C70501 * C2913 - C70500 * C2918 +
            C153942 * C2925) *
               C153637 * C153684 +
           (C72090 + C72089 + C72088 + C72087) * C153637 * C70498) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C153637 * C70498 +
            (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
               C153537 * C1091 -
           ((C70803 + C70804 + C70805 + C70806) * C153637 * C153684 +
            (C70802 + C70801 + C70800 + C70799) * C153637 * C70498) *
               C153537 * C153573) *
              C1093 +
          (((C70807 + C70808 + C70809 + C70810) * C153637 * C70498 +
            (C70811 + C70812 + C70813 + C70814) * C153637 * C153684) *
               C153537 * C153573 -
           ((C70810 + C70809 + C70808 + C70807) * C153637 * C153684 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C153637 * C70498) *
               C153537 * C1091) *
              C1094 +
          (((C70500 * C156 - C70501 * C146 - C70500 * C157 + C153942 * C170 +
             C70502 * C158 - C70503 * C147 - C70502 * C159 + C153935 * C171 +
             C70504 * C160 - C70505 * C148 - C70504 * C161 + C153916 * C172 +
             C70506 * C162 - C70507 * C149 - C70506 * C163 + C153862 * C173) *
                C153637 * C70498 +
            (C71227 + C71228 + C71229 + C71230) * C153637 * C153684) *
               C153537 * C1091 -
           ((C70506 * C337 - C70507 * C314 - C70506 * C338 + C153862 * C350 +
             C70504 * C333 - C70505 * C312 - C70504 * C334 + C153916 * C348 +
             C70502 * C331 - C70503 * C311 - C70502 * C332 + C153935 * C347 +
             C70500 * C329 - C70501 * C310 - C70500 * C330 + C153942 * C346) *
                C153637 * C153684 +
            (C71230 + C71229 + C71228 + C71227) * C153637 * C70498) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153637 * C153943 +
            (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
            C74602 * C153871) *
               C153537 * C1091 -
           ((C74587 + C74588) * C153637 * C153871 +
            (C74586 + C74585) * C153637 * C153929 +
            (C74584 + C74583) * C153637 * C153939 +
            (C74582 + C74581) * C153637 * C153943) *
               C153537 * C153573) *
              C1093 +
          (((C74589 + C74590) * C153637 * C153943 +
            (C74591 + C74592) * C153637 * C153939 +
            (C74593 + C74594) * C153637 * C153929 +
            (C74595 + C74596) * C153637 * C153871) *
               C153537 * C153573 -
           (C74603 * C153871 + C74604 * C153929 +
            (C74590 + C74589) * C153637 * C153939 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153637 * C153943) *
               C153537 * C1091) *
              C1094 +
          (((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
             C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                C153637 * C153943 +
            (C75029 + C75030) * C153637 * C153939 +
            (C75031 + C75032) * C153637 * C153929 +
            (C75033 + C75034) * C153637 * C153871) *
               C153537 * C1091 -
           ((C74288 * C2923 - C74289 * C2916 - C74288 * C2924 +
             C153472 * C2928 + C74286 * C2921 - C74287 * C2915 -
             C74286 * C2922 + C74280 * C2927) *
                C153637 * C153871 +
            (C75034 + C75033) * C153637 * C153929 +
            (C75032 + C75031) * C153637 * C153939 +
            (C75030 + C75029) * C153637 * C153943) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
            C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
               C153637 * C153943 +
           (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
           C74602 * C153871) *
              C153537 * C1178 -
          (C75905 * C153871 + C75906 * C153929 +
           (C74584 + C74583) * C153637 * C153939 +
           (C74582 + C74581) * C153637 * C153943) *
              C153537 * C1179 +
          (C74601 * C153943 + C74602 * C153939 +
           (C74588 + C74587) * C153637 * C153929 +
           (C75911 + C75912) * C153637 * C153871) *
              C153537 * C1180 -
          ((C74288 * C28340 - C74289 * C28337 - C74288 * C28341 +
            C153472 * C28343 + C74286 * C28338 - C74287 * C28336 -
            C74286 * C28339 + C74280 * C28342) *
               C153637 * C153871 +
           (C75912 + C75911) * C153637 * C153929 + C75905 * C153939 +
           C75906 * C153943) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153937 +
             (C78877 + C78878) * C153926 + C78893 * C153901) *
                C70498 +
            ((C74581 + C74582) * C153937 + C79917 * C153926 +
             C78795 * C153901) *
                C153684) *
               C153537 * C1091 -
           (((C76146 + C76145) * C153901 + C76796 * C153926 +
             (C74584 + C74583) * C153937) *
                C153684 +
            (C79918 * C153901 + C79919 * C153926 +
             (C74582 + C74581) * C153937) *
                C70498) *
               C153537 * C153573) *
              C1093 +
          ((((C74589 + C74590) * C153937 + C79920 * C153926 +
             C79921 * C153901) *
                C70498 +
            ((C74591 + C74592) * C153937 + (C75567 + C75568) * C153926 +
             (C78487 + C78488) * C153901) *
                C153684) *
               C153537 * C153573 -
           ((C78844 * C153901 + C79922 * C153926 +
             (C74590 + C74589) * C153937) *
                C153684 +
            (C78894 * C153901 + (C78886 + C78885) * C153926 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153937) *
                C70498) *
               C153537 * C1091) *
              C1094 +
          ((((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
              C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                 C153937 +
             (C79527 + C79528) * C153926 + (C79529 + C79530) * C153901) *
                C70498 +
            ((C75029 + C75030) * C153937 + (C79209 + C79210) * C153926 +
             (C79211 + C79212) * C153901) *
                C153684) *
               C153537 * C1091 -
           (((C74288 * C3289 - C74289 * C3282 - C74288 * C3290 +
              C153472 * C3294 + C74286 * C3287 - C74287 * C3281 -
              C74286 * C3288 + C74280 * C3293) *
                 C153901 +
             (C74288 * C1763 - C74289 * C1757 - C74288 * C1764 +
              C153472 * C1772 + C74286 * C1765 - C74287 * C1758 -
              C74286 * C1766 + C74280 * C1773) *
                 C153926 +
             (C75032 + C75031) * C153937) *
                C153684 +
            ((C79212 + C79211) * C153901 + (C79210 + C79209) * C153926 +
             (C75030 + C75029) * C153937) *
                C70498) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153937 +
            (C78877 + C78878) * C153926 + C78893 * C153901) *
               C70498 +
           ((C74581 + C74582) * C153937 + C79917 * C153926 + C78795 * C153901) *
               C153684) *
              C153537 * C1178 -
          (((C76146 + C76145) * C153901 + C76796 * C153926 +
            (C74584 + C74583) * C153937) *
               C153684 +
           (C79918 * C153901 + C79919 * C153926 + (C74582 + C74581) * C153937) *
               C70498) *
              C153537 * C1179 +
          ((C74597 * C153937 + (C75562 + C75561) * C153926 +
            (C76145 + C76146) * C153901) *
               C70498 +
           (C74598 * C153937 + (C75560 + C75559) * C153926 +
            (C76147 + C76148) * C153901) *
               C153684) *
              C153537 * C1180 -
          (((C74288 * C28550 - C74289 * C28547 - C74288 * C28551 +
             C153472 * C28553 + C74286 * C28548 - C74287 * C28546 -
             C74286 * C28549 + C74280 * C28552) *
                C153901 +
            (C76812 + C76811) * C153926 + C75895 * C153937) *
               C153684 +
           ((C76148 + C76147) * C153901 + C76795 * C153926 + C75896 * C153937) *
               C70498) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153637 * C153943 +
             (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
             C74602 * C153871) *
                C1898 -
            (C76805 * C153871 + C76806 * C153929 +
             (C75563 + C75564) * C153637 * C153939 +
             (C74288 * C494 - C74289 * C479 - C74288 * C495 + C153472 * C515 +
              C74286 * C496 - C74287 * C480 - C74286 * C497 + C74280 * C516) *
                 C153637 * C153943) *
                C153601) *
               C153848 +
           (((C75564 + C75563) * C153637 * C153943 +
             (C75562 + C75561) * C153637 * C153939 +
             (C75560 + C75559) * C153637 * C153929 +
             (C76811 + C76812) * C153637 * C153871) *
                C153601 -
            (C75905 * C153871 + C75906 * C153929 +
             (C74584 + C74583) * C153637 * C153939 +
             (C74582 + C74581) * C153637 * C153943) *
                C1898) *
               C153573) *
              C153840 +
          ((((C74286 * C494 - C74287 * C479 - C74286 * C495 + C74280 * C515 +
              C74288 * C492 - C74289 * C478 - C74288 * C493 + C153472 * C514) *
                 C153637 * C153943 +
             (C75565 + C75566) * C153637 * C153939 +
             (C75567 + C75568) * C153637 * C153929 +
             (C75569 + C75570) * C153637 * C153871) *
                C153601 -
            (C74603 * C153871 + C74604 * C153929 +
             (C74590 + C74589) * C153637 * C153939 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153637 * C153943) *
                C1898) *
               C153848 +
           (((C74589 + C74590) * C153637 * C153943 +
             (C74591 + C74592) * C153637 * C153939 +
             (C74593 + C74594) * C153637 * C153929 +
             (C74595 + C74596) * C153637 * C153871) *
                C1898 -
            ((C74288 * C5564 - C74289 * C5561 - C74288 * C5565 +
              C153472 * C5570 + C74286 * C5566 - C74287 * C5562 -
              C74286 * C5567 + C74280 * C5571) *
                 C153637 * C153871 +
             (C75570 + C75569) * C153637 * C153929 +
             (C75568 + C75567) * C153637 * C153939 +
             (C75566 + C75565) * C153637 * C153943) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
              C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
              C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
              C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                 C153637 * C70498 +
             (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
                C1898 -
            ((C71731 + C71732 + C71733 + C71734) * C153637 * C153684 +
             (C70506 * C490 - C70507 * C477 - C70506 * C491 + C153862 * C513 +
              C70504 * C492 - C70505 * C478 - C70504 * C493 + C153916 * C514 +
              C70502 * C494 - C70503 * C479 - C70502 * C495 + C153935 * C515 +
              C70500 * C496 - C70501 * C480 - C70500 * C497 + C153942 * C516) *
                 C153637 * C70498) *
                C153601) *
               C153848 +
           (((C71734 + C71733 + C71732 + C71731) * C153637 * C70498 +
             (C72983 + C72984 + C72985 + C72986) * C153637 * C153684) *
                C153601 -
            ((C70803 + C70804 + C70805 + C70806) * C153637 * C153684 +
             (C70802 + C70801 + C70800 + C70799) * C153637 * C70498) *
                C1898) *
               C153573) *
              C153840 +
          ((((C70500 * C494 - C70501 * C479 - C70500 * C495 + C153942 * C515 +
              C70502 * C492 - C70503 * C478 - C70502 * C493 + C153935 * C514 +
              C70504 * C490 - C70505 * C477 - C70504 * C491 + C153916 * C513 +
              C70506 * C488 - C70507 * C476 - C70506 * C489 + C153862 * C512) *
                 C153637 * C70498 +
             (C71735 + C71736 + C71737 + C71738) * C153637 * C153684) *
                C153601 -
            ((C70810 + C70809 + C70808 + C70807) * C153637 * C153684 +
             (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
              C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
              C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
              C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                 C153637 * C70498) *
                C1898) *
               C153848 +
           (((C70807 + C70808 + C70809 + C70810) * C153637 * C70498 +
             (C70811 + C70812 + C70813 + C70814) * C153637 * C153684) *
                C1898 -
            ((C70506 * C1761 - C70507 * C1756 - C70506 * C1762 +
              C153862 * C1771 + C70504 * C1763 - C70505 * C1757 -
              C70504 * C1764 + C153916 * C1772 + C70502 * C1765 -
              C70503 * C1758 - C70502 * C1766 + C153935 * C1773 +
              C70500 * C1767 - C70501 * C1759 - C70500 * C1768 +
              C153942 * C1774) *
                 C153637 * C153684 +
             (C71738 + C71737 + C71736 + C71735) * C153637 * C70498) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
               C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                  C153937 +
              (C78877 + C78878) * C153926 + C78893 * C153901) *
                 C70498 +
             ((C74581 + C74582) * C153937 + C79917 * C153926 +
              C78795 * C153901) *
                 C153684) *
                C1898 -
            ((C80697 * C153901 + C79918 * C153926 + C79919 * C153937) *
                 C153684 +
             (C82470 * C153901 + (C78880 + C78879) * C153926 +
              (C78878 + C78877) * C153937) *
                 C70498) *
                C153601) *
               C153848 +
           (((C79917 * C153937 + C78795 * C153926 + C80698 * C153901) * C70498 +
             (C81694 * C153937 + C81695 * C153926 +
              (C80726 + C80727) * C153901) *
                 C153684) *
                C153601 -
            ((C80715 * C153901 + C76796 * C153926 +
              (C74584 + C74583) * C153937) *
                 C153684 +
             (C79918 * C153901 + C79919 * C153926 +
              (C74582 + C74581) * C153937) *
                 C70498) *
                C1898) *
               C153573) *
              C153840 +
          (((((C78885 + C78886) * C153937 + (C78887 + C78888) * C153926 +
              (C78889 + C78890) * C153901) *
                 C70498 +
             (C79920 * C153937 + C79921 * C153926 +
              (C78891 + C78892) * C153901) *
                 C153684) *
                C153601 -
            ((C78844 * C153901 + C79922 * C153926 +
              (C74590 + C74589) * C153937) *
                 C153684 +
             (C78894 * C153901 + (C78886 + C78885) * C153926 +
              (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
               C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                  C153937) *
                 C70498) *
                C1898) *
               C153848 +
           ((((C74589 + C74590) * C153937 + C79920 * C153926 +
              C79921 * C153901) *
                 C70498 +
             ((C74591 + C74592) * C153937 + (C75567 + C75568) * C153926 +
              (C78487 + C78488) * C153901) *
                 C153684) *
                C1898 -
            (((C74288 * C6185 - C74289 * C6179 - C74288 * C6186 +
               C153472 * C6197 + C74286 * C6187 - C74287 * C6180 -
               C74286 * C6188 + C74280 * C6198) *
                  C153901 +
              (C78488 + C78487) * C153926 + (C75568 + C75567) * C153937) *
                 C153684 +
             ((C78892 + C78891) * C153901 + C78844 * C153926 +
              C79922 * C153937) *
                 C70498) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153637 * C153943 +
            (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
            C74602 * C153871) *
               C153921 -
           (C76805 * C153871 + C76806 * C153929 +
            (C75563 + C75564) * C153637 * C153939 +
            (C74288 * C494 - C74289 * C479 - C74288 * C495 + C153472 * C515 +
             C74286 * C496 - C74287 * C480 - C74286 * C497 + C74280 * C516) *
                C153637 * C153943) *
               C153922 +
           ((C74286 * C498 - C74287 * C481 - C74286 * C499 + C74280 * C517 +
             C74288 * C500 - C74289 * C482 - C74288 * C501 + C153472 * C518) *
                C153637 * C153943 +
            (C76143 + C76144) * C153637 * C153939 +
            (C76145 + C76146) * C153637 * C153929 +
            (C76147 + C76148) * C153637 * C153871) *
               C2414) *
              C153848 +
          (((C75564 + C75563) * C153637 * C153943 +
            (C75562 + C75561) * C153637 * C153939 +
            (C75560 + C75559) * C153637 * C153929 +
            (C76811 + C76812) * C153637 * C153871) *
               C153922 -
           (C75905 * C153871 + C75906 * C153929 +
            (C74584 + C74583) * C153637 * C153939 +
            (C74582 + C74581) * C153637 * C153943) *
               C153921 -
           ((C74288 * C28550 - C74289 * C28547 - C74288 * C28551 +
             C153472 * C28553 + C74286 * C28548 - C74287 * C28546 -
             C74286 * C28549 + C74280 * C28552) *
                C153637 * C153871 +
            (C76148 + C76147) * C153637 * C153929 +
            (C76146 + C76145) * C153637 * C153939 +
            (C76144 + C76143) * C153637 * C153943) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C153637 * C70498 +
            (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
               C153921 -
           ((C71731 + C71732 + C71733 + C71734) * C153637 * C153684 +
            (C70506 * C490 - C70507 * C477 - C70506 * C491 + C153862 * C513 +
             C70504 * C492 - C70505 * C478 - C70504 * C493 + C153916 * C514 +
             C70502 * C494 - C70503 * C479 - C70502 * C495 + C153935 * C515 +
             C70500 * C496 - C70501 * C480 - C70500 * C497 + C153942 * C516) *
                C153637 * C70498) *
               C153922 +
           ((C70500 * C498 - C70501 * C481 - C70500 * C499 + C153942 * C517 +
             C70502 * C500 - C70503 * C482 - C70502 * C501 + C153935 * C518 +
             C70504 * C502 - C70505 * C483 - C70504 * C503 + C153916 * C519 +
             C70506 * C504 - C70507 * C484 - C70506 * C505 + C153862 * C520) *
                C153637 * C70498 +
            (C72309 + C72310 + C72311 + C72312) * C153637 * C153684) *
               C2414) *
              C153848 +
          (((C71734 + C71733 + C71732 + C71731) * C153637 * C70498 +
            (C72983 + C72984 + C72985 + C72986) * C153637 * C153684) *
               C153922 -
           ((C70803 + C70804 + C70805 + C70806) * C153637 * C153684 +
            (C70802 + C70801 + C70800 + C70799) * C153637 * C70498) *
               C153921 -
           ((C70506 * C3289 - C70507 * C3282 - C70506 * C3290 +
             C153862 * C3294 + C70504 * C3287 - C70505 * C3281 -
             C70504 * C3288 + C153916 * C3293 + C70502 * C3285 -
             C70503 * C3280 - C70502 * C3286 + C153935 * C3292 +
             C70500 * C3283 - C70501 * C3279 - C70500 * C3284 +
             C153942 * C3291) *
                C153637 * C153684 +
            (C72312 + C72311 + C72310 + C72309) * C153637 * C70498) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153937 +
             (C78877 + C78878) * C153926 + C78893 * C153901) *
                C70498 +
            ((C74581 + C74582) * C153937 + C79917 * C153926 +
             C78795 * C153901) *
                C153684) *
               C153921 -
           ((C80697 * C153901 + C79918 * C153926 + C79919 * C153937) * C153684 +
            (C82470 * C153901 + (C78880 + C78879) * C153926 +
             (C78878 + C78877) * C153937) *
                C70498) *
               C153922 +
           ((C78893 * C153937 + (C78884 + C78883) * C153926 +
             (C82483 + C82484) * C153901) *
                C70498 +
            (C78795 * C153937 + C80698 * C153926 +
             (C80724 + C80725) * C153901) *
                C153684) *
               C2414) *
              C153848 +
          (((C79917 * C153937 + C78795 * C153926 + C80698 * C153901) * C70498 +
            (C81694 * C153937 + C81695 * C153926 +
             (C80726 + C80727) * C153901) *
                C153684) *
               C153922 -
           ((C80715 * C153901 + C76796 * C153926 +
             (C74584 + C74583) * C153937) *
                C153684 +
            (C79918 * C153901 + C79919 * C153926 +
             (C74582 + C74581) * C153937) *
                C70498) *
               C153921 -
           (((C74288 * C31225 - C74289 * C31222 - C74288 * C31226 +
              C153472 * C31228 + C74286 * C31223 - C74287 * C31221 -
              C74286 * C31224 + C74280 * C31227) *
                 C153901 +
             (C80727 + C80726) * C153926 + C80715 * C153937) *
                C153684 +
            ((C80725 + C80724) * C153901 + C80697 * C153926 +
             C79918 * C153937) *
                C70498) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C70500 * C152 - C70501 * C144 - C70500 * C153 +
                 C153942 * C168 + C70502 * C154 - C70503 * C145 -
                 C70502 * C155 + C153935 * C169 + C70504 * C156 -
                 C70505 * C146 - C70504 * C157 + C153916 * C170 +
                 C70506 * C158 - C70507 * C147 - C70506 * C159 +
                 C153862 * C171) *
                    C153637 * C70498 +
                (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
                   C1898 -
               ((C71731 + C71732 + C71733 + C71734) * C153637 * C153684 +
                (C70506 * C490 - C70507 * C477 - C70506 * C491 +
                 C153862 * C513 + C70504 * C492 - C70505 * C478 -
                 C70504 * C493 + C153916 * C514 + C70502 * C494 -
                 C70503 * C479 - C70502 * C495 + C153935 * C515 +
                 C70500 * C496 - C70501 * C480 - C70500 * C497 +
                 C153942 * C516) *
                    C153637 * C70498) *
                   C153601) *
                  C153521 * C1093 +
              (((C70500 * C494 - C70501 * C479 - C70500 * C495 +
                 C153942 * C515 + C70502 * C492 - C70503 * C478 -
                 C70502 * C493 + C153935 * C514 + C70504 * C490 -
                 C70505 * C477 - C70504 * C491 + C153916 * C513 +
                 C70506 * C488 - C70507 * C476 - C70506 * C489 +
                 C153862 * C512) *
                    C153637 * C70498 +
                (C71735 + C71736 + C71737 + C71738) * C153637 * C153684) *
                   C153601 -
               ((C70810 + C70809 + C70808 + C70807) * C153637 * C153684 +
                (C70506 * C160 - C70507 * C148 - C70506 * C161 +
                 C153862 * C172 + C70504 * C158 - C70505 * C147 -
                 C70504 * C159 + C153916 * C171 + C70502 * C156 -
                 C70503 * C146 - C70502 * C157 + C153935 * C170 +
                 C70500 * C154 - C70501 * C145 - C70500 * C155 +
                 C153942 * C169) *
                    C153637 * C70498) *
                   C1898) *
                  C153521 * C1094 +
              (((C70500 * C156 - C70501 * C146 - C70500 * C157 +
                 C153942 * C170 + C70502 * C158 - C70503 * C147 -
                 C70502 * C159 + C153935 * C171 + C70504 * C160 -
                 C70505 * C148 - C70504 * C161 + C153916 * C172 +
                 C70506 * C162 - C70507 * C149 - C70506 * C163 +
                 C153862 * C173) *
                    C153637 * C70498 +
                (C71227 + C71228 + C71229 + C71230) * C153637 * C153684) *
                   C1898 -
               ((C70506 * C961 - C70507 * C950 - C70506 * C962 +
                 C153862 * C968 + C70504 * C959 - C70505 * C949 -
                 C70504 * C960 + C153916 * C967 + C70502 * C957 -
                 C70503 * C948 - C70502 * C958 + C153935 * C966 +
                 C70500 * C955 - C70501 * C947 - C70500 * C956 +
                 C153942 * C965) *
                    C153637 * C153684 +
                (C70506 * C508 - C70507 * C486 - C70506 * C509 +
                 C153862 * C522 + C70504 * C488 - C70505 * C476 -
                 C70504 * C489 + C153916 * C512 + C70502 * C490 -
                 C70503 * C477 - C70502 * C491 + C153935 * C513 +
                 C70500 * C492 - C70501 * C478 - C70500 * C493 +
                 C153942 * C514) *
                    C153637 * C70498) *
                   C153601) *
                  C153521 * C1095) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C70500 * C152 - C70501 * C144 - C70500 * C153 +
                 C153942 * C168 + C70502 * C154 - C70503 * C145 -
                 C70502 * C155 + C153935 * C169 + C70504 * C156 -
                 C70505 * C146 - C70504 * C157 + C153916 * C170 +
                 C70506 * C158 - C70507 * C147 - C70506 * C159 +
                 C153862 * C171) *
                    C153637 * C70498 +
                (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
                   C1898 -
               ((C71731 + C71732 + C71733 + C71734) * C153637 * C153684 +
                (C70506 * C490 - C70507 * C477 - C70506 * C491 +
                 C153862 * C513 + C70504 * C492 - C70505 * C478 -
                 C70504 * C493 + C153916 * C514 + C70502 * C494 -
                 C70503 * C479 - C70502 * C495 + C153935 * C515 +
                 C70500 * C496 - C70501 * C480 - C70500 * C497 +
                 C153942 * C516) *
                    C153637 * C70498) *
                   C153601) *
                  C298 +
              (((C71734 + C71733 + C71732 + C71731) * C153637 * C70498 +
                (C72983 + C72984 + C72985 + C72986) * C153637 * C153684) *
                   C153601 -
               ((C70803 + C70804 + C70805 + C70806) * C153637 * C153684 +
                (C70802 + C70801 + C70800 + C70799) * C153637 * C70498) *
                   C1898) *
                  C299 +
              (((C70806 + C70805 + C70804 + C70803) * C153637 * C70498 +
                (C72087 + C72088 + C72089 + C72090) * C153637 * C153684) *
                   C1898 -
               ((C70506 * C4073 - C70507 * C4066 - C70506 * C4074 +
                 C153862 * C4078 + C70504 * C4071 - C70505 * C4065 -
                 C70504 * C4072 + C153916 * C4077 + C70502 * C4069 -
                 C70503 * C4064 - C70502 * C4070 + C153935 * C4076 +
                 C70500 * C4067 - C70501 * C4063 - C70500 * C4068 +
                 C153942 * C4075) *
                    C153637 * C153684 +
                (C72986 + C72985 + C72984 + C72983) * C153637 * C70498) *
                   C153601) *
                  C300) *
             C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
            C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
            C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
            C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
               C153637 * C70498 +
           (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
              C2104 -
          ((C71731 + C71732 + C71733 + C71734) * C153637 * C153684 +
           (C70506 * C490 - C70507 * C477 - C70506 * C491 + C153862 * C513 +
            C70504 * C492 - C70505 * C478 - C70504 * C493 + C153916 * C514 +
            C70502 * C494 - C70503 * C479 - C70502 * C495 + C153935 * C515 +
            C70500 * C496 - C70501 * C480 - C70500 * C497 + C153942 * C516) *
               C153637 * C70498) *
              C2105 +
          ((C70500 * C498 - C70501 * C481 - C70500 * C499 + C153942 * C517 +
            C70502 * C500 - C70503 * C482 - C70502 * C501 + C153935 * C518 +
            C70504 * C502 - C70505 * C483 - C70504 * C503 + C153916 * C519 +
            C70506 * C504 - C70507 * C484 - C70506 * C505 + C153862 * C520) *
               C153637 * C70498 +
           (C72309 + C72310 + C72311 + C72312) * C153637 * C153684) *
              C2106 -
          ((C70506 * C8429 - C70507 * C8428 - C70506 * C8430 + C153862 * C8431 +
            C70504 * C6191 - C70505 * C6182 - C70504 * C6192 + C153916 * C6200 +
            C70502 * C6193 - C70503 * C6183 - C70502 * C6194 + C153935 * C6201 +
            C70500 * C6195 - C70501 * C6184 - C70500 * C6196 +
            C153942 * C6202) *
               C153637 * C153684 +
           (C70506 * C2115 - C70507 * C2109 - C70506 * C2116 + C153862 * C2124 +
            C70504 * C2117 - C70505 * C2110 - C70504 * C2118 + C153916 * C2125 +
            C70502 * C2119 - C70503 * C2111 - C70502 * C2120 + C153935 * C2126 +
            C70500 * C2121 - C70501 * C2112 - C70500 * C2122 +
            C153942 * C2127) *
               C153637 * C70498) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153637 * C153943 +
            (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
            C74602 * C153871) *
               C1898 -
           (C76805 * C153871 + C76806 * C153929 +
            (C75563 + C75564) * C153637 * C153939 +
            (C74288 * C494 - C74289 * C479 - C74288 * C495 + C153472 * C515 +
             C74286 * C496 - C74287 * C480 - C74286 * C497 + C74280 * C516) *
                C153637 * C153943) *
               C153601) *
              C153521 * C1093 +
          (((C74286 * C494 - C74287 * C479 - C74286 * C495 + C74280 * C515 +
             C74288 * C492 - C74289 * C478 - C74288 * C493 + C153472 * C514) *
                C153637 * C153943 +
            (C75565 + C75566) * C153637 * C153939 +
            (C75567 + C75568) * C153637 * C153929 +
            (C75569 + C75570) * C153637 * C153871) *
               C153601 -
           (C74603 * C153871 + C74604 * C153929 +
            (C74590 + C74589) * C153637 * C153939 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153637 * C153943) *
               C1898) *
              C153521 * C1094 +
          (((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
             C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                C153637 * C153943 +
            (C75029 + C75030) * C153637 * C153939 +
            (C75031 + C75032) * C153637 * C153929 +
            (C75033 + C75034) * C153637 * C153871) *
               C1898 -
           ((C74288 * C4073 - C74289 * C4066 - C74288 * C4074 +
             C153472 * C4078 + C74286 * C4071 - C74287 * C4065 -
             C74286 * C4072 + C74280 * C4077) *
                C153637 * C153871 +
            (C74288 * C1763 - C74289 * C1757 - C74288 * C1764 +
             C153472 * C1772 + C74286 * C1765 - C74287 * C1758 -
             C74286 * C1766 + C74280 * C1773) *
                C153637 * C153929 +
            (C74288 * C957 - C74289 * C948 - C74288 * C958 + C153472 * C966 +
             C74286 * C955 - C74287 * C947 - C74286 * C956 + C74280 * C965) *
                C153637 * C153939 +
            (C74288 * C490 - C74289 * C477 - C74288 * C491 + C153472 * C513 +
             C74286 * C492 - C74287 * C478 - C74286 * C493 + C74280 * C514) *
                C153637 * C153943) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153637 * C153943 +
            (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
            C74602 * C153871) *
               C1898 -
           (C76805 * C153871 + C76806 * C153929 +
            (C75563 + C75564) * C153637 * C153939 +
            (C74288 * C494 - C74289 * C479 - C74288 * C495 + C153472 * C515 +
             C74286 * C496 - C74287 * C480 - C74286 * C497 + C74280 * C516) *
                C153637 * C153943) *
               C153601) *
              C298 +
          (((C75564 + C75563) * C153637 * C153943 +
            (C75562 + C75561) * C153637 * C153939 +
            (C75560 + C75559) * C153637 * C153929 +
            (C76811 + C76812) * C153637 * C153871) *
               C153601 -
           (C75905 * C153871 + C75906 * C153929 +
            (C74584 + C74583) * C153637 * C153939 +
            (C74582 + C74581) * C153637 * C153943) *
               C1898) *
              C299 +
          ((C74601 * C153943 + C74602 * C153939 +
            (C74588 + C74587) * C153637 * C153929 +
            (C75911 + C75912) * C153637 * C153871) *
               C1898 -
           ((C74288 * C28996 - C74289 * C28993 - C74288 * C28997 +
             C153472 * C28999 + C74286 * C28994 - C74287 * C28992 -
             C74286 * C28995 + C74280 * C28998) *
                C153637 * C153871 +
            (C76812 + C76811) * C153637 * C153929 + C76805 * C153939 +
            C76806 * C153943) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
            C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
               C153637 * C153943 +
           (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
           C74602 * C153871) *
              C2104 -
          (C76805 * C153871 + C76806 * C153929 +
           (C75563 + C75564) * C153637 * C153939 +
           (C74288 * C494 - C74289 * C479 - C74288 * C495 + C153472 * C515 +
            C74286 * C496 - C74287 * C480 - C74286 * C497 + C74280 * C516) *
               C153637 * C153943) *
              C2105 +
          ((C74286 * C498 - C74287 * C481 - C74286 * C499 + C74280 * C517 +
            C74288 * C500 - C74289 * C482 - C74288 * C501 + C153472 * C518) *
               C153637 * C153943 +
           (C76143 + C76144) * C153637 * C153939 +
           (C76145 + C76146) * C153637 * C153929 +
           (C76147 + C76148) * C153637 * C153871) *
              C2106 -
          ((C74288 * C32074 - C74289 * C32073 - C74288 * C32075 +
            C153472 * C32076 + C74286 * C30186 - C74287 * C30183 -
            C74286 * C30187 + C74280 * C30189) *
               C153637 * C153871 +
           (C74288 * C6187 - C74289 * C6180 - C74288 * C6188 + C153472 * C6198 +
            C74286 * C6189 - C74287 * C6181 - C74286 * C6190 + C74280 * C6199) *
               C153637 * C153929 +
           (C74288 * C6193 - C74289 * C6183 - C74288 * C6194 + C153472 * C6201 +
            C74286 * C6195 - C74287 * C6184 - C74286 * C6196 + C74280 * C6202) *
               C153637 * C153939 +
           (C74288 * C2119 - C74289 * C2111 - C74288 * C2120 + C153472 * C2126 +
            C74286 * C2121 - C74287 * C2112 - C74286 * C2122 + C74280 * C2127) *
               C153637 * C153943) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153937 +
             (C78877 + C78878) * C153926 + C78893 * C153901) *
                C70498 +
            ((C74581 + C74582) * C153937 + C79917 * C153926 +
             C78795 * C153901) *
                C153684) *
               C1898 -
           ((C80697 * C153901 + C79918 * C153926 + C79919 * C153937) * C153684 +
            ((C78883 + C78884) * C153901 + (C78880 + C78879) * C153926 +
             (C78878 + C78877) * C153937) *
                C70498) *
               C153601) *
              C153521 * C1093 +
          ((((C78885 + C78886) * C153937 + (C78887 + C78888) * C153926 +
             (C78889 + C78890) * C153901) *
                C70498 +
            (C79920 * C153937 + C79921 * C153926 +
             (C78891 + C78892) * C153901) *
                C153684) *
               C153601 -
           ((C78844 * C153901 + C79922 * C153926 +
             (C74590 + C74589) * C153937) *
                C153684 +
            (C78894 * C153901 + (C78886 + C78885) * C153926 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153937) *
                C70498) *
               C1898) *
              C153521 * C1094 +
          ((((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
              C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                 C153937 +
             (C79527 + C79528) * C153926 + (C79529 + C79530) * C153901) *
                C70498 +
            ((C75029 + C75030) * C153937 + (C79209 + C79210) * C153926 +
             (C79211 + C79212) * C153901) *
                C153684) *
               C1898 -
           (((C74288 * C8429 - C74289 * C8428 - C74288 * C8430 +
              C153472 * C8431 + C74286 * C6191 - C74287 * C6182 -
              C74286 * C6192 + C74280 * C6200) *
                 C153901 +
             (C79212 + C79211) * C153926 + (C79210 + C79209) * C153937) *
                C153684 +
            ((C74288 * C2115 - C74289 * C2109 - C74288 * C2116 +
              C153472 * C2124 + C74286 * C2117 - C74287 * C2110 -
              C74286 * C2118 + C74280 * C2125) *
                 C153901 +
             (C79530 + C79529) * C153926 + (C79528 + C79527) * C153937) *
                C70498) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153937 +
             (C78877 + C78878) * C153926 + C78893 * C153901) *
                C70498 +
            ((C74581 + C74582) * C153937 + C79917 * C153926 +
             C78795 * C153901) *
                C153684) *
               C1898 -
           ((C80697 * C153901 + C79918 * C153926 + C79919 * C153937) * C153684 +
            ((C78883 + C78884) * C153901 + (C78880 + C78879) * C153926 +
             (C78878 + C78877) * C153937) *
                C70498) *
               C153601) *
              C298 +
          (((C79917 * C153937 + C78795 * C153926 + C80698 * C153901) * C70498 +
            (C81694 * C153937 + C81695 * C153926 +
             (C80726 + C80727) * C153901) *
                C153684) *
               C153601 -
           ((C80715 * C153901 + C76796 * C153926 +
             (C74584 + C74583) * C153937) *
                C153684 +
            (C79918 * C153901 + C79919 * C153926 +
             (C74582 + C74581) * C153937) *
                C70498) *
               C1898) *
              C299 +
          (((C74597 * C153937 + C81694 * C153926 + C81695 * C153901) * C70498 +
            (C74598 * C153937 + (C75560 + C75559) * C153926 +
             (C76147 + C76148) * C153901) *
                C153684) *
               C1898 -
           (((C74288 * C32074 - C74289 * C32073 - C74288 * C32075 +
              C153472 * C32076 + C74286 * C30186 - C74287 * C30183 -
              C74286 * C30187 + C74280 * C30189) *
                 C153901 +
             (C76148 + C76147) * C153926 + C76795 * C153937) *
                C153684 +
            ((C80727 + C80726) * C153901 + C80715 * C153926 +
             C76796 * C153937) *
                C70498) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153937 +
            (C78877 + C78878) * C153926 + C78893 * C153901) *
               C70498 +
           ((C74581 + C74582) * C153937 + C79917 * C153926 + C78795 * C153901) *
               C153684) *
              C2104 -
          ((C80697 * C153901 + C79918 * C153926 + C79919 * C153937) * C153684 +
           (C82470 * C153901 + (C78880 + C78879) * C153926 +
            (C78878 + C78877) * C153937) *
               C70498) *
              C2105 +
          ((C78893 * C153937 + (C78884 + C78883) * C153926 +
            (C82483 + C82484) * C153901) *
               C70498 +
           (C78795 * C153937 + C80698 * C153926 + (C80724 + C80725) * C153901) *
               C153684) *
              C2106 -
          (((C74288 * C56477 - C74289 * C56476 - C74288 * C56478 +
             C153472 * C56479 + C74286 * C34024 - C74287 * C34021 -
             C74286 * C34025 + C74280 * C34027) *
                C153901 +
            (C80725 + C80724) * C153926 + C80697 * C153937) *
               C153684 +
           ((C74288 * C10383 - C74289 * C10379 - C74288 * C10384 +
             C153472 * C10388 + C74286 * C10385 - C74287 * C10380 -
             C74286 * C10386 + C74280 * C10389) *
                C153901 +
            (C82484 + C82483) * C153926 + C82470 * C153937) *
               C70498) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153637 * C153943 +
            (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
            C74602 * C153871) *
               C153921 -
           (C76805 * C153871 + C76806 * C153929 +
            (C75563 + C75564) * C153637 * C153939 +
            (C74288 * C494 - C74289 * C479 - C74288 * C495 + C153472 * C515 +
             C74286 * C496 - C74287 * C480 - C74286 * C497 + C74280 * C516) *
                C153637 * C153943) *
               C153922 +
           ((C74286 * C498 - C74287 * C481 - C74286 * C499 + C74280 * C517 +
             C74288 * C500 - C74289 * C482 - C74288 * C501 + C153472 * C518) *
                C153637 * C153943 +
            (C76143 + C76144) * C153637 * C153939 +
            (C76145 + C76146) * C153637 * C153929 +
            (C76147 + C76148) * C153637 * C153871) *
               C2414) *
              C153521 * C153840 +
          (((C74286 * C494 - C74287 * C479 - C74286 * C495 + C74280 * C515 +
             C74288 * C492 - C74289 * C478 - C74288 * C493 + C153472 * C514) *
                C153637 * C153943 +
            (C75565 + C75566) * C153637 * C153939 +
            (C75567 + C75568) * C153637 * C153929 +
            (C75569 + C75570) * C153637 * C153871) *
               C153922 -
           (C74603 * C153871 + C74604 * C153929 +
            (C74590 + C74589) * C153637 * C153939 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153637 * C153943) *
               C153921 -
           ((C74288 * C4784 - C74289 * C4781 - C74288 * C4785 +
             C153472 * C4790 + C74286 * C4786 - C74287 * C4782 -
             C74286 * C4787 + C74280 * C4791) *
                C153637 * C153871 +
            (C74288 * C3287 - C74289 * C3281 - C74288 * C3288 +
             C153472 * C3293 + C74286 * C3285 - C74287 * C3280 -
             C74286 * C3286 + C74280 * C3292) *
                C153637 * C153929 +
            (C74288 * C1334 - C74289 * C1327 - C74288 * C1335 +
             C153472 * C1342 + C74286 * C1336 - C74287 * C1328 -
             C74286 * C1337 + C74280 * C1343) *
                C153637 * C153939 +
            (C74288 * C502 - C74289 * C483 - C74288 * C503 + C153472 * C519 +
             C74286 * C500 - C74287 * C482 - C74286 * C501 + C74280 * C518) *
                C153637 * C153943) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C153637 * C70498 +
            (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
               C153921 -
           ((C71731 + C71732 + C71733 + C71734) * C153637 * C153684 +
            (C70506 * C490 - C70507 * C477 - C70506 * C491 + C153862 * C513 +
             C70504 * C492 - C70505 * C478 - C70504 * C493 + C153916 * C514 +
             C70502 * C494 - C70503 * C479 - C70502 * C495 + C153935 * C515 +
             C70500 * C496 - C70501 * C480 - C70500 * C497 + C153942 * C516) *
                C153637 * C70498) *
               C153922 +
           ((C70500 * C498 - C70501 * C481 - C70500 * C499 + C153942 * C517 +
             C70502 * C500 - C70503 * C482 - C70502 * C501 + C153935 * C518 +
             C70504 * C502 - C70505 * C483 - C70504 * C503 + C153916 * C519 +
             C70506 * C504 - C70507 * C484 - C70506 * C505 + C153862 * C520) *
                C153637 * C70498 +
            (C72309 + C72310 + C72311 + C72312) * C153637 * C153684) *
               C2414) *
              C153521 * C153840 +
          (((C70500 * C494 - C70501 * C479 - C70500 * C495 + C153942 * C515 +
             C70502 * C492 - C70503 * C478 - C70502 * C493 + C153935 * C514 +
             C70504 * C490 - C70505 * C477 - C70504 * C491 + C153916 * C513 +
             C70506 * C488 - C70507 * C476 - C70506 * C489 + C153862 * C512) *
                C153637 * C70498 +
            (C71735 + C71736 + C71737 + C71738) * C153637 * C153684) *
               C153922 -
           ((C70810 + C70809 + C70808 + C70807) * C153637 * C153684 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C153637 * C70498) *
               C153921 -
           ((C70506 * C1330 - C70507 * C1325 - C70506 * C1331 +
             C153862 * C1340 + C70504 * C1332 - C70505 * C1326 -
             C70504 * C1333 + C153916 * C1341 + C70502 * C1334 -
             C70503 * C1327 - C70502 * C1335 + C153935 * C1342 +
             C70500 * C1336 - C70501 * C1328 - C70500 * C1337 +
             C153942 * C1343) *
                C153637 * C153684 +
            (C70506 * C506 - C70507 * C485 - C70506 * C507 + C153862 * C521 +
             C70504 * C504 - C70505 * C484 - C70504 * C505 + C153916 * C520 +
             C70502 * C502 - C70503 * C483 - C70502 * C503 + C153935 * C519 +
             C70500 * C500 - C70501 * C482 - C70500 * C501 + C153942 * C518) *
                C153637 * C70498) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153937 +
             (C78877 + C78878) * C153926 + C78893 * C153901) *
                C70498 +
            ((C74581 + C74582) * C153937 + C79917 * C153926 +
             C78795 * C153901) *
                C153684) *
               C153921 -
           ((C80697 * C153901 + C79918 * C153926 + C79919 * C153937) * C153684 +
            (C82470 * C153901 + (C78880 + C78879) * C153926 +
             (C78878 + C78877) * C153937) *
                C70498) *
               C153922 +
           ((C78893 * C153937 + (C78884 + C78883) * C153926 +
             (C82483 + C82484) * C153901) *
                C70498 +
            (C78795 * C153937 + C80698 * C153926 +
             (C80724 + C80725) * C153901) *
                C153684) *
               C2414) *
              C153521 * C153840 +
          ((((C78885 + C78886) * C153937 + (C78887 + C78888) * C153926 +
             (C78889 + C78890) * C153901) *
                C70498 +
            (C79920 * C153937 + C79921 * C153926 +
             (C78891 + C78892) * C153901) *
                C153684) *
               C153922 -
           ((C78844 * C153901 + C79922 * C153926 +
             (C74590 + C74589) * C153937) *
                C153684 +
            (C78894 * C153901 + (C78886 + C78885) * C153926 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153937) *
                C70498) *
               C153921 -
           (((C74288 * C9038 - C74289 * C9035 - C74288 * C9039 +
              C153472 * C9044 + C74286 * C9040 - C74287 * C9036 -
              C74286 * C9041 + C74280 * C9045) *
                 C153901 +
             (C78892 + C78891) * C153926 + C78844 * C153937) *
                C153684 +
            ((C74288 * C7522 - C74289 * C7516 - C74288 * C7523 +
              C153472 * C7528 + C74286 * C7520 - C74287 * C7515 -
              C74286 * C7521 + C74280 * C7527) *
                 C153901 +
             (C78890 + C78889) * C153926 + C78894 * C153937) *
                C70498) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C153637 * C70498 +
            (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
               C1898 -
           ((C71731 + C71732 + C71733 + C71734) * C153637 * C153684 +
            (C70506 * C490 - C70507 * C477 - C70506 * C491 + C153862 * C513 +
             C70504 * C492 - C70505 * C478 - C70504 * C493 + C153916 * C514 +
             C70502 * C494 - C70503 * C479 - C70502 * C495 + C153935 * C515 +
             C70500 * C496 - C70501 * C480 - C70500 * C497 + C153942 * C516) *
                C153637 * C70498) *
               C153601) *
              C298 +
          (((C71734 + C71733 + C71732 + C71731) * C153637 * C70498 +
            (C72983 + C72984 + C72985 + C72986) * C153637 * C153684) *
               C153601 -
           ((C70803 + C70804 + C70805 + C70806) * C153637 * C153684 +
            (C70802 + C70801 + C70800 + C70799) * C153637 * C70498) *
               C1898) *
              C299 +
          (((C70806 + C70805 + C70804 + C70803) * C153637 * C70498 +
            (C72087 + C72088 + C72089 + C72090) * C153637 * C153684) *
               C1898 -
           ((C70506 * C4073 - C70507 * C4066 - C70506 * C4074 +
             C153862 * C4078 + C70504 * C4071 - C70505 * C4065 -
             C70504 * C4072 + C153916 * C4077 + C70502 * C4069 -
             C70503 * C4064 - C70502 * C4070 + C153935 * C4076 +
             C70500 * C4067 - C70501 * C4063 - C70500 * C4068 +
             C153942 * C4075) *
                C153637 * C153684 +
            (C72986 + C72985 + C72984 + C72983) * C153637 * C70498) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C153637 * C70498 +
            (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
               C1898 -
           ((C71731 + C71732 + C71733 + C71734) * C153637 * C153684 +
            (C70506 * C490 - C70507 * C477 - C70506 * C491 + C153862 * C513 +
             C70504 * C492 - C70505 * C478 - C70504 * C493 + C153916 * C514 +
             C70502 * C494 - C70503 * C479 - C70502 * C495 + C153935 * C515 +
             C70500 * C496 - C70501 * C480 - C70500 * C497 + C153942 * C516) *
                C153637 * C70498) *
               C153601) *
              C153521 * C1093 +
          (((C70500 * C494 - C70501 * C479 - C70500 * C495 + C153942 * C515 +
             C70502 * C492 - C70503 * C478 - C70502 * C493 + C153935 * C514 +
             C70504 * C490 - C70505 * C477 - C70504 * C491 + C153916 * C513 +
             C70506 * C488 - C70507 * C476 - C70506 * C489 + C153862 * C512) *
                C153637 * C70498 +
            (C71735 + C71736 + C71737 + C71738) * C153637 * C153684) *
               C153601 -
           ((C70810 + C70809 + C70808 + C70807) * C153637 * C153684 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C153637 * C70498) *
               C1898) *
              C153521 * C1094 +
          (((C70500 * C156 - C70501 * C146 - C70500 * C157 + C153942 * C170 +
             C70502 * C158 - C70503 * C147 - C70502 * C159 + C153935 * C171 +
             C70504 * C160 - C70505 * C148 - C70504 * C161 + C153916 * C172 +
             C70506 * C162 - C70507 * C149 - C70506 * C163 + C153862 * C173) *
                C153637 * C70498 +
            (C71227 + C71228 + C71229 + C71230) * C153637 * C153684) *
               C1898 -
           ((C70506 * C961 - C70507 * C950 - C70506 * C962 + C153862 * C968 +
             C70504 * C959 - C70505 * C949 - C70504 * C960 + C153916 * C967 +
             C70502 * C957 - C70503 * C948 - C70502 * C958 + C153935 * C966 +
             C70500 * C955 - C70501 * C947 - C70500 * C956 + C153942 * C965) *
                C153637 * C153684 +
            (C70506 * C508 - C70507 * C486 - C70506 * C509 + C153862 * C522 +
             C70504 * C488 - C70505 * C476 - C70504 * C489 + C153916 * C512 +
             C70502 * C490 - C70503 * C477 - C70502 * C491 + C153935 * C513 +
             C70500 * C492 - C70501 * C478 - C70500 * C493 + C153942 * C514) *
                C153637 * C70498) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153637 * C153943 +
            (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
            C74602 * C153871) *
               C1898 -
           (C76805 * C153871 + C76806 * C153929 +
            (C75563 + C75564) * C153637 * C153939 +
            (C74288 * C494 - C74289 * C479 - C74288 * C495 + C153472 * C515 +
             C74286 * C496 - C74287 * C480 - C74286 * C497 + C74280 * C516) *
                C153637 * C153943) *
               C153601) *
              C153521 * C1093 +
          (((C74286 * C494 - C74287 * C479 - C74286 * C495 + C74280 * C515 +
             C74288 * C492 - C74289 * C478 - C74288 * C493 + C153472 * C514) *
                C153637 * C153943 +
            (C75565 + C75566) * C153637 * C153939 +
            (C75567 + C75568) * C153637 * C153929 +
            (C75569 + C75570) * C153637 * C153871) *
               C153601 -
           (C74603 * C153871 + C74604 * C153929 +
            (C74590 + C74589) * C153637 * C153939 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153637 * C153943) *
               C1898) *
              C153521 * C1094 +
          (((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
             C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                C153637 * C153943 +
            (C75029 + C75030) * C153637 * C153939 +
            (C75031 + C75032) * C153637 * C153929 +
            (C75033 + C75034) * C153637 * C153871) *
               C1898 -
           ((C74288 * C4073 - C74289 * C4066 - C74288 * C4074 +
             C153472 * C4078 + C74286 * C4071 - C74287 * C4065 -
             C74286 * C4072 + C74280 * C4077) *
                C153637 * C153871 +
            (C74288 * C1763 - C74289 * C1757 - C74288 * C1764 +
             C153472 * C1772 + C74286 * C1765 - C74287 * C1758 -
             C74286 * C1766 + C74280 * C1773) *
                C153637 * C153929 +
            (C74288 * C957 - C74289 * C948 - C74288 * C958 + C153472 * C966 +
             C74286 * C955 - C74287 * C947 - C74286 * C956 + C74280 * C965) *
                C153637 * C153939 +
            (C74288 * C490 - C74289 * C477 - C74288 * C491 + C153472 * C513 +
             C74286 * C492 - C74287 * C478 - C74286 * C493 + C74280 * C514) *
                C153637 * C153943) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153637 * C153943 +
            (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
            C74602 * C153871) *
               C1898 -
           (C76805 * C153871 + C76806 * C153929 +
            (C75563 + C75564) * C153637 * C153939 +
            (C74288 * C494 - C74289 * C479 - C74288 * C495 + C153472 * C515 +
             C74286 * C496 - C74287 * C480 - C74286 * C497 + C74280 * C516) *
                C153637 * C153943) *
               C153601) *
              C298 +
          (((C75564 + C75563) * C153637 * C153943 +
            (C75562 + C75561) * C153637 * C153939 +
            (C75560 + C75559) * C153637 * C153929 +
            (C76811 + C76812) * C153637 * C153871) *
               C153601 -
           (C75905 * C153871 + C75906 * C153929 +
            (C74584 + C74583) * C153637 * C153939 +
            (C74582 + C74581) * C153637 * C153943) *
               C1898) *
              C299 +
          ((C74601 * C153943 + C74602 * C153939 +
            (C74588 + C74587) * C153637 * C153929 +
            (C75911 + C75912) * C153637 * C153871) *
               C1898 -
           ((C74288 * C28996 - C74289 * C28993 - C74288 * C28997 +
             C153472 * C28999 + C74286 * C28994 - C74287 * C28992 -
             C74286 * C28995 + C74280 * C28998) *
                C153637 * C153871 +
            (C76812 + C76811) * C153637 * C153929 + C76805 * C153939 +
            C76806 * C153943) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153937 +
             (C78877 + C78878) * C153926 + C78893 * C153901) *
                C70498 +
            ((C74581 + C74582) * C153937 + C79917 * C153926 +
             C78795 * C153901) *
                C153684) *
               C1898 -
           ((C80697 * C153901 + C79918 * C153926 + C79919 * C153937) * C153684 +
            ((C78883 + C78884) * C153901 + (C78880 + C78879) * C153926 +
             (C78878 + C78877) * C153937) *
                C70498) *
               C153601) *
              C153521 * C1093 +
          ((((C78885 + C78886) * C153937 + (C78887 + C78888) * C153926 +
             (C78889 + C78890) * C153901) *
                C70498 +
            (C79920 * C153937 + C79921 * C153926 +
             (C78891 + C78892) * C153901) *
                C153684) *
               C153601 -
           ((C78844 * C153901 + C79922 * C153926 +
             (C74590 + C74589) * C153937) *
                C153684 +
            (C78894 * C153901 + (C78886 + C78885) * C153926 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153937) *
                C70498) *
               C1898) *
              C153521 * C1094 +
          ((((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
              C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                 C153937 +
             (C79527 + C79528) * C153926 + (C79529 + C79530) * C153901) *
                C70498 +
            ((C75029 + C75030) * C153937 + (C79209 + C79210) * C153926 +
             (C79211 + C79212) * C153901) *
                C153684) *
               C1898 -
           (((C74288 * C8429 - C74289 * C8428 - C74288 * C8430 +
              C153472 * C8431 + C74286 * C6191 - C74287 * C6182 -
              C74286 * C6192 + C74280 * C6200) *
                 C153901 +
             (C79212 + C79211) * C153926 + (C79210 + C79209) * C153937) *
                C153684 +
            ((C74288 * C2115 - C74289 * C2109 - C74288 * C2116 +
              C153472 * C2124 + C74286 * C2117 - C74287 * C2110 -
              C74286 * C2118 + C74280 * C2125) *
                 C153901 +
             (C79530 + C79529) * C153926 + (C79528 + C79527) * C153937) *
                C70498) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153937 +
             (C78877 + C78878) * C153926 + C78893 * C153901) *
                C70498 +
            ((C74581 + C74582) * C153937 + C79917 * C153926 +
             C78795 * C153901) *
                C153684) *
               C1898 -
           ((C80697 * C153901 + C79918 * C153926 + C79919 * C153937) * C153684 +
            ((C78883 + C78884) * C153901 + (C78880 + C78879) * C153926 +
             (C78878 + C78877) * C153937) *
                C70498) *
               C153601) *
              C298 +
          (((C79917 * C153937 + C78795 * C153926 + C80698 * C153901) * C70498 +
            (C81694 * C153937 + C81695 * C153926 +
             (C80726 + C80727) * C153901) *
                C153684) *
               C153601 -
           ((C80715 * C153901 + C76796 * C153926 +
             (C74584 + C74583) * C153937) *
                C153684 +
            (C79918 * C153901 + C79919 * C153926 +
             (C74582 + C74581) * C153937) *
                C70498) *
               C1898) *
              C299 +
          (((C74597 * C153937 + C81694 * C153926 + C81695 * C153901) * C70498 +
            (C74598 * C153937 + (C75560 + C75559) * C153926 +
             (C76147 + C76148) * C153901) *
                C153684) *
               C1898 -
           (((C74288 * C32074 - C74289 * C32073 - C74288 * C32075 +
              C153472 * C32076 + C74286 * C30186 - C74287 * C30183 -
              C74286 * C30187 + C74280 * C30189) *
                 C153901 +
             (C76148 + C76147) * C153926 + C76795 * C153937) *
                C153684 +
            ((C80727 + C80726) * C153901 + C80715 * C153926 +
             C76796 * C153937) *
                C70498) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[45] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
                      C153467 * C168 + C152106 * C154 - C152145 * C145 -
                      C152106 * C155 + C153475 * C169 + C152156 * C156 -
                      C83607 * C146 - C152156 * C157 + C83598 * C170) *
                         C153864 +
                     (C88599 + C88600 + C88601) * C153724) *
                        C70498 +
                    ((C83935 + C83936 + C83937) * C153864 +
                     (C85022 + C85021 + C85020) * C153724) *
                        C153684) *
                       C153537 * C153848 -
                   ((C86416 * C153724 + (C83940 + C83939 + C83938) * C153864) *
                        C153684 +
                    ((C85020 + C85021 + C85022) * C153724 +
                     (C83937 + C83936 + C83935) * C153864) *
                        C70498) *
                       C153537 * C153573) *
                      C153917 +
                  ((((C83944 + C83945 + C83946) * C153864 +
                     (C85023 + C85024 + C85025) * C153724) *
                        C70498 +
                    ((C83947 + C83948 + C83949) * C153864 +
                     (C85026 + C85027 + C85028) * C153724) *
                        C153684) *
                       C153537 * C153573 -
                   (((C85025 + C85024 + C85023) * C153724 +
                     (C83946 + C83945 + C83944) * C153864) *
                        C153684 +
                    ((C88607 + C88606 + C88605) * C153724 +
                     (C152156 * C158 - C83607 * C147 - C152156 * C159 +
                      C83598 * C171 + C152106 * C156 - C152145 * C146 -
                      C152106 * C157 + C153475 * C170 + C152110 * C154 -
                      C152150 * C145 - C152110 * C155 + C153467 * C169) *
                         C153864) *
                        C70498) *
                       C153537 * C153848) *
                      C153918 +
                  ((((C152110 * C156 - C152150 * C146 - C152110 * C157 +
                      C153467 * C170 + C152106 * C158 - C152145 * C147 -
                      C152106 * C159 + C153475 * C171 + C152156 * C160 -
                      C83607 * C148 - C152156 * C161 + C83598 * C172) *
                         C153864 +
                     (C152110 * C492 - C152150 * C478 - C152110 * C493 +
                      C153467 * C514 + C152106 * C490 - C152145 * C477 -
                      C152106 * C491 + C153475 * C513 + C152156 * C488 -
                      C83607 * C476 - C152156 * C489 + C83598 * C512) *
                         C153724) *
                        C70498 +
                    ((C84431 + C84432 + C84433) * C153864 +
                     (C88922 + C88923 + C88924) * C153724) *
                        C153684) *
                       C153537 * C153848 -
                   (((C152156 * C1761 - C83607 * C1756 - C152156 * C1762 +
                      C83598 * C1771 + C152106 * C1763 - C152145 * C1757 -
                      C152106 * C1764 + C153475 * C1772 + C152110 * C1765 -
                      C152150 * C1758 - C152110 * C1766 + C153467 * C1773) *
                         C153724 +
                     (C84436 + C84435 + C84434) * C153864) *
                        C153684 +
                    ((C88924 + C88923 + C88922) * C153724 +
                     (C84433 + C84432 + C84431) * C153864) *
                        C70498) *
                       C153537 * C153573) *
                      C650)) /
                (p * q * std::sqrt(p + q));
    d2ee[46] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
                       C153467 * C168 + C152106 * C154 - C152145 * C145 -
                       C152106 * C155 + C153475 * C169 + C152156 * C156 -
                       C83607 * C146 - C152156 * C157 + C83598 * C170) *
                          C153864 +
                      (C88599 + C88600 + C88601) * C153724) *
                         C70498 +
                     ((C83935 + C83936 + C83937) * C153864 + C89626 * C153724) *
                         C153684) *
                        C153849 -
                    (((C85673 + C85672 + C85671) * C153724 + C89627 * C153864) *
                         C153684 +
                     ((C88602 + C88603 + C88604) * C153724 +
                      (C88601 + C88600 + C88599) * C153864) *
                         C70498) *
                        C153601) *
                       C153848 +
                   (((C89626 * C153864 + (C85671 + C85672 + C85673) * C153724) *
                         C70498 +
                     ((C85019 + C85018 + C85017) * C153864 +
                      (C85674 + C85675 + C85676) * C153724) *
                         C153684) *
                        C153601 -
                    ((C86416 * C153724 + (C83940 + C83939 + C83938) * C153864) *
                         C153684 +
                     (C89627 * C153724 + (C83937 + C83936 + C83935) * C153864) *
                         C70498) *
                        C153849) *
                       C153573) *
                      C301 +
                  (((((C88605 + C88606 + C88607) * C153864 +
                      (C88608 + C88609 + C88610) * C153724) *
                         C70498 +
                     (C89628 * C153864 + (C88611 + C88612 + C88613) * C153724) *
                         C153684) *
                        C153601 -
                    ((C89629 * C153724 + (C83946 + C83945 + C83944) * C153864) *
                         C153684 +
                     ((C88607 + C88606 + C88605) * C153724 +
                      (C152156 * C158 - C83607 * C147 - C152156 * C159 +
                       C83598 * C171 + C152106 * C156 - C152145 * C146 -
                       C152106 * C157 + C153475 * C170 + C152110 * C154 -
                       C152150 * C145 - C152110 * C155 + C153467 * C169) *
                          C153864) *
                         C70498) *
                        C153849) *
                       C153848 +
                   ((((C83944 + C83945 + C83946) * C153864 + C89628 * C153724) *
                         C70498 +
                     ((C83947 + C83948 + C83949) * C153864 +
                      (C85026 + C85027 + C85028) * C153724) *
                         C153684) *
                        C153849 -
                    (((C152156 * C3289 - C83607 * C3282 - C152156 * C3290 +
                       C83598 * C3294 + C152106 * C3287 - C152145 * C3281 -
                       C152106 * C3288 + C153475 * C3293 + C152110 * C3285 -
                       C152150 * C3280 - C152110 * C3286 + C153467 * C3292) *
                          C153724 +
                      (C85028 + C85027 + C85026) * C153864) *
                         C153684 +
                     ((C88613 + C88612 + C88611) * C153724 + C89629 * C153864) *
                         C70498) *
                        C153601) *
                       C153573) *
                      C153508)) /
                (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
              C153467 * C168 + C152106 * C154 - C152145 * C145 -
              C152106 * C155 + C153475 * C169 + C152156 * C156 - C83607 * C146 -
              C152156 * C157 + C83598 * C170) *
                 C153864 +
             (C152110 * C496 - C152150 * C480 - C152110 * C497 +
              C153467 * C516 + C152106 * C494 - C152145 * C479 -
              C152106 * C495 + C153475 * C515 + C152156 * C492 - C83607 * C478 -
              C152156 * C493 + C83598 * C514) *
                 C153724) *
                C70498 +
            ((C83935 + C83936 + C83937) * C153864 +
             (C85022 + C85021 + C85020) * C153724) *
                C153684) *
               C153537 * C298 -
           ((C86416 * C153724 + (C83940 + C83939 + C83938) * C153864) *
                C153684 +
            ((C85020 + C85021 + C85022) * C153724 +
             (C83937 + C83936 + C83935) * C153864) *
                C70498) *
               C153537 * C299 +
           ((C83955 * C153864 + (C85019 + C85018 + C85017) * C153724) * C70498 +
            ((C83943 + C83942 + C83941) * C153864 +
             (C86424 + C86425 + C86426) * C153724) *
                C153684) *
               C153537 * C300) *
              C301 +
          ((((C83944 + C83945 + C83946) * C153864 +
             (C85023 + C85024 + C85025) * C153724) *
                C70498 +
            ((C83947 + C83948 + C83949) * C153864 +
             (C85026 + C85027 + C85028) * C153724) *
                C153684) *
               C153537 * C299 -
           (((C85025 + C85024 + C85023) * C153724 +
             (C83946 + C83945 + C83944) * C153864) *
                C153684 +
            ((C152156 * C490 - C83607 * C477 - C152156 * C491 + C83598 * C513 +
              C152106 * C492 - C152145 * C478 - C152106 * C493 +
              C153475 * C514 + C152110 * C494 - C152150 * C479 -
              C152110 * C495 + C153467 * C515) *
                 C153724 +
             (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
              C152106 * C156 - C152145 * C146 - C152106 * C157 +
              C153475 * C170 + C152110 * C154 - C152150 * C145 -
              C152110 * C155 + C153467 * C169) *
                 C153864) *
                C70498) *
               C153537 * C298 -
           (((C152156 * C4073 - C83607 * C4066 - C152156 * C4074 +
              C83598 * C4078 + C152106 * C4071 - C152145 * C4065 -
              C152106 * C4072 + C153475 * C4077 + C152110 * C4069 -
              C152150 * C4064 - C152110 * C4070 + C153467 * C4076) *
                 C153724 +
             (C83952 + C83951 + C83950) * C153864) *
                C153684 +
            ((C85028 + C85027 + C85026) * C153724 + C83956 * C153864) *
                C70498) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153864 +
            (C152110 * C496 - C152150 * C480 - C152110 * C497 + C153467 * C516 +
             C152106 * C494 - C152145 * C479 - C152106 * C495 + C153475 * C515 +
             C152156 * C492 - C83607 * C478 - C152156 * C493 + C83598 * C514) *
                C153724) *
               C70498 +
           ((C83935 + C83936 + C83937) * C153864 +
            (C85022 + C85021 + C85020) * C153724) *
               C153684) *
              C153537 * C153521 * C130 -
          (((C85025 + C85024 + C85023) * C153724 +
            (C83946 + C83945 + C83944) * C153864) *
               C153684 +
           ((C152156 * C490 - C83607 * C477 - C152156 * C491 + C83598 * C513 +
             C152106 * C492 - C152145 * C478 - C152106 * C493 + C153475 * C514 +
             C152110 * C494 - C152150 * C479 - C152110 * C495 +
             C153467 * C515) *
                C153724 +
            (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
             C152106 * C156 - C152145 * C146 - C152106 * C157 + C153475 * C170 +
             C152110 * C154 - C152150 * C145 - C152110 * C155 +
             C153467 * C169) *
                C153864) *
               C70498) *
              C153537 * C153521 * C131 +
          (((C152110 * C156 - C152150 * C146 - C152110 * C157 + C153467 * C170 +
             C152106 * C158 - C152145 * C147 - C152106 * C159 + C153475 * C171 +
             C152156 * C160 - C83607 * C148 - C152156 * C161 + C83598 * C172) *
                C153864 +
            (C152110 * C492 - C152150 * C478 - C152110 * C493 + C153467 * C514 +
             C152106 * C490 - C152145 * C477 - C152106 * C491 + C153475 * C513 +
             C152156 * C488 - C83607 * C476 - C152156 * C489 + C83598 * C512) *
                C153724) *
               C70498 +
           ((C84431 + C84432 + C84433) * C153864 +
            (C152110 * C955 - C152150 * C947 - C152110 * C956 + C153467 * C965 +
             C152106 * C957 - C152145 * C948 - C152106 * C958 + C153475 * C966 +
             C152156 * C959 - C83607 * C949 - C152156 * C960 + C83598 * C967) *
                C153724) *
               C153684) *
              C153537 * C153521 * C132 -
          (((C152156 * C961 - C83607 * C950 - C152156 * C962 + C83598 * C968 +
             C152106 * C959 - C152145 * C949 - C152106 * C960 + C153475 * C967 +
             C152110 * C957 - C152150 * C948 - C152110 * C958 +
             C153467 * C966) *
                C153724 +
            (C152156 * C335 - C83607 * C313 - C152156 * C336 + C83598 * C349 +
             C152106 * C315 - C152145 * C303 - C152106 * C316 + C153475 * C339 +
             C152110 * C317 - C152150 * C304 - C152110 * C318 +
             C153467 * C340) *
                C153864) *
               C153684 +
           ((C152156 * C508 - C83607 * C486 - C152156 * C509 + C83598 * C522 +
             C152106 * C488 - C152145 * C476 - C152106 * C489 + C153475 * C512 +
             C152110 * C490 - C152150 * C477 - C152110 * C491 +
             C153467 * C513) *
                C153724 +
            (C152156 * C162 - C83607 * C149 - C152156 * C163 + C83598 * C173 +
             C152106 * C160 - C152145 * C148 - C152106 * C161 + C153475 * C172 +
             C152110 * C158 - C152150 * C147 - C152110 * C159 +
             C153467 * C171) *
                C153864) *
               C70498) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
              C153467 * C168 + C152106 * C154 - C152145 * C145 -
              C152106 * C155 + C153475 * C169 + C152156 * C156 - C83607 * C146 -
              C152156 * C157 + C83598 * C170) *
                 C153864 +
             (C88599 + C88600 + C88601) * C153724) *
                C70498 +
            ((C83935 + C83936 + C83937) * C153864 +
             (C85022 + C85021 + C85020) * C153724) *
                C153684) *
               C473 -
           (((C85673 + C85672 + C85671) * C153724 +
             (C85020 + C85021 + C85022) * C153864) *
                C153684 +
            ((C88602 + C88603 + C88604) * C153724 +
             (C88601 + C88600 + C88599) * C153864) *
                C70498) *
               C474 +
           (((C88604 + C88603 + C88602) * C153864 +
             (C152110 * C2121 - C152150 * C2112 - C152110 * C2122 +
              C153467 * C2127 + C152106 * C2119 - C152145 * C2111 -
              C152106 * C2120 + C153475 * C2126 + C152156 * C2117 -
              C83607 * C2110 - C152156 * C2118 + C83598 * C2125) *
                 C153724) *
                C70498 +
            ((C85671 + C85672 + C85673) * C153864 +
             (C152110 * C6195 - C152150 * C6184 - C152110 * C6196 +
              C153467 * C6202 + C152106 * C6193 - C152145 * C6183 -
              C152106 * C6194 + C153475 * C6201 + C152156 * C6191 -
              C83607 * C6182 - C152156 * C6192 + C83598 * C6200) *
                 C153724) *
                C153684) *
               C475) *
              C153521 * C301 +
          ((((C88605 + C88606 + C88607) * C153864 +
             (C88608 + C88609 + C88610) * C153724) *
                C70498 +
            ((C85023 + C85024 + C85025) * C153864 +
             (C88611 + C88612 + C88613) * C153724) *
                C153684) *
               C474 -
           (((C85025 + C85024 + C85023) * C153724 +
             (C83946 + C83945 + C83944) * C153864) *
                C153684 +
            ((C88607 + C88606 + C88605) * C153724 +
             (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
              C152106 * C156 - C152145 * C146 - C152106 * C157 +
              C153475 * C170 + C152110 * C154 - C152150 * C145 -
              C152110 * C155 + C153467 * C169) *
                 C153864) *
                C70498) *
               C473 -
           (((C152156 * C8429 - C83607 * C8428 - C152156 * C8430 +
              C83598 * C8431 + C152106 * C6191 - C152145 * C6182 -
              C152106 * C6192 + C153475 * C6200 + C152110 * C6193 -
              C152150 * C6183 - C152110 * C6194 + C153467 * C6201) *
                 C153724 +
             (C88613 + C88612 + C88611) * C153864) *
                C153684 +
            ((C152156 * C2115 - C83607 * C2109 - C152156 * C2116 +
              C83598 * C2124 + C152106 * C2117 - C152145 * C2110 -
              C152106 * C2118 + C153475 * C2125 + C152110 * C2119 -
              C152150 * C2111 - C152110 * C2120 + C153467 * C2126) *
                 C153724 +
             (C88610 + C88609 + C88608) * C153864) *
                C70498) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[48] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
                      C153467 * C168 + C152106 * C154 - C152145 * C145 -
                      C152106 * C155 + C153475 * C169 + C152156 * C156 -
                      C83607 * C146 - C152156 * C157 + C83598 * C170) *
                         C153864 +
                     (C88599 + C88600 + C88601) * C153724) *
                        C70498 +
                    ((C83935 + C83936 + C83937) * C153864 +
                     (C85022 + C85021 + C85020) * C153724) *
                        C153684) *
                       C153849 -
                   (((C85673 + C85672 + C85671) * C153724 +
                     (C85020 + C85021 + C85022) * C153864) *
                        C153684 +
                    ((C88602 + C88603 + C88604) * C153724 +
                     (C88601 + C88600 + C88599) * C153864) *
                        C70498) *
                       C153601) *
                      C153521 * C153917 +
                  ((((C88605 + C88606 + C88607) * C153864 +
                     (C88608 + C88609 + C88610) * C153724) *
                        C70498 +
                    ((C85023 + C85024 + C85025) * C153864 +
                     (C88611 + C88612 + C88613) * C153724) *
                        C153684) *
                       C153601 -
                   (((C85025 + C85024 + C85023) * C153724 +
                     (C83946 + C83945 + C83944) * C153864) *
                        C153684 +
                    ((C88607 + C88606 + C88605) * C153724 +
                     (C152156 * C158 - C83607 * C147 - C152156 * C159 +
                      C83598 * C171 + C152106 * C156 - C152145 * C146 -
                      C152106 * C157 + C153475 * C170 + C152110 * C154 -
                      C152150 * C145 - C152110 * C155 + C153467 * C169) *
                         C153864) *
                        C70498) *
                       C153849) *
                      C153521 * C153918 +
                  ((((C152110 * C156 - C152150 * C146 - C152110 * C157 +
                      C153467 * C170 + C152106 * C158 - C152145 * C147 -
                      C152106 * C159 + C153475 * C171 + C152156 * C160 -
                      C83607 * C148 - C152156 * C161 + C83598 * C172) *
                         C153864 +
                     (C89233 + C89234 + C89235) * C153724) *
                        C70498 +
                    ((C84431 + C84432 + C84433) * C153864 +
                     (C88922 + C88923 + C88924) * C153724) *
                        C153684) *
                       C153849 -
                   (((C152156 * C1330 - C83607 * C1325 - C152156 * C1331 +
                      C83598 * C1340 + C152106 * C1332 - C152145 * C1326 -
                      C152106 * C1333 + C153475 * C1341 + C152110 * C1334 -
                      C152150 * C1327 - C152110 * C1335 + C153467 * C1342) *
                         C153724 +
                     (C88924 + C88923 + C88922) * C153864) *
                        C153684 +
                    ((C152156 * C506 - C83607 * C485 - C152156 * C507 +
                      C83598 * C521 + C152106 * C504 - C152145 * C484 -
                      C152106 * C505 + C153475 * C520 + C152110 * C502 -
                      C152150 * C483 - C152110 * C503 + C153467 * C519) *
                         C153724 +
                     (C89235 + C89234 + C89233) * C153864) *
                        C70498) *
                       C153601) *
                      C153521 * C650)) /
                (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153864 +
            (C152110 * C496 - C152150 * C480 - C152110 * C497 + C153467 * C516 +
             C152106 * C494 - C152145 * C479 - C152106 * C495 + C153475 * C515 +
             C152156 * C492 - C83607 * C478 - C152156 * C493 + C83598 * C514) *
                C153724) *
               C70498 +
           ((C83935 + C83936 + C83937) * C153864 +
            (C85022 + C85021 + C85020) * C153724) *
               C153684) *
              C153537 * C153521 * C130 -
          (((C85025 + C85024 + C85023) * C153724 +
            (C83946 + C83945 + C83944) * C153864) *
               C153684 +
           ((C152156 * C490 - C83607 * C477 - C152156 * C491 + C83598 * C513 +
             C152106 * C492 - C152145 * C478 - C152106 * C493 + C153475 * C514 +
             C152110 * C494 - C152150 * C479 - C152110 * C495 +
             C153467 * C515) *
                C153724 +
            (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
             C152106 * C156 - C152145 * C146 - C152106 * C157 + C153475 * C170 +
             C152110 * C154 - C152150 * C145 - C152110 * C155 +
             C153467 * C169) *
                C153864) *
               C70498) *
              C153537 * C153521 * C131 +
          (((C152110 * C156 - C152150 * C146 - C152110 * C157 + C153467 * C170 +
             C152106 * C158 - C152145 * C147 - C152106 * C159 + C153475 * C171 +
             C152156 * C160 - C83607 * C148 - C152156 * C161 + C83598 * C172) *
                C153864 +
            (C152110 * C492 - C152150 * C478 - C152110 * C493 + C153467 * C514 +
             C152106 * C490 - C152145 * C477 - C152106 * C491 + C153475 * C513 +
             C152156 * C488 - C83607 * C476 - C152156 * C489 + C83598 * C512) *
                C153724) *
               C70498 +
           ((C84431 + C84432 + C84433) * C153864 +
            (C152110 * C955 - C152150 * C947 - C152110 * C956 + C153467 * C965 +
             C152106 * C957 - C152145 * C948 - C152106 * C958 + C153475 * C966 +
             C152156 * C959 - C83607 * C949 - C152156 * C960 + C83598 * C967) *
                C153724) *
               C153684) *
              C153537 * C153521 * C132 -
          (((C152156 * C961 - C83607 * C950 - C152156 * C962 + C83598 * C968 +
             C152106 * C959 - C152145 * C949 - C152106 * C960 + C153475 * C967 +
             C152110 * C957 - C152150 * C948 - C152110 * C958 +
             C153467 * C966) *
                C153724 +
            (C152156 * C335 - C83607 * C313 - C152156 * C336 + C83598 * C349 +
             C152106 * C315 - C152145 * C303 - C152106 * C316 + C153475 * C339 +
             C152110 * C317 - C152150 * C304 - C152110 * C318 +
             C153467 * C340) *
                C153864) *
               C153684 +
           ((C152156 * C508 - C83607 * C486 - C152156 * C509 + C83598 * C522 +
             C152106 * C488 - C152145 * C476 - C152106 * C489 + C153475 * C512 +
             C152110 * C490 - C152150 * C477 - C152110 * C491 +
             C153467 * C513) *
                C153724 +
            (C152156 * C162 - C83607 * C149 - C152156 * C163 + C83598 * C173 +
             C152106 * C160 - C152145 * C148 - C152106 * C161 + C153475 * C172 +
             C152110 * C158 - C152150 * C147 - C152110 * C159 +
             C153467 * C171) *
                C153864) *
               C70498) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
              C153467 * C168 + C152106 * C154 - C152145 * C145 -
              C152106 * C155 + C153475 * C169 + C152156 * C156 - C83607 * C146 -
              C152156 * C157 + C83598 * C170) *
                 C153864 +
             (C152110 * C496 - C152150 * C480 - C152110 * C497 +
              C153467 * C516 + C152106 * C494 - C152145 * C479 -
              C152106 * C495 + C153475 * C515 + C152156 * C492 - C83607 * C478 -
              C152156 * C493 + C83598 * C514) *
                 C153724) *
                C70498 +
            ((C83935 + C83936 + C83937) * C153864 +
             (C85022 + C85021 + C85020) * C153724) *
                C153684) *
               C153537 * C298 -
           ((C86416 * C153724 + (C83940 + C83939 + C83938) * C153864) *
                C153684 +
            ((C85020 + C85021 + C85022) * C153724 +
             (C83937 + C83936 + C83935) * C153864) *
                C70498) *
               C153537 * C299 +
           ((C83955 * C153864 + (C85019 + C85018 + C85017) * C153724) * C70498 +
            ((C83943 + C83942 + C83941) * C153864 +
             (C86424 + C86425 + C86426) * C153724) *
                C153684) *
               C153537 * C300) *
              C301 +
          ((((C83944 + C83945 + C83946) * C153864 +
             (C85023 + C85024 + C85025) * C153724) *
                C70498 +
            ((C83947 + C83948 + C83949) * C153864 +
             (C85026 + C85027 + C85028) * C153724) *
                C153684) *
               C153537 * C299 -
           (((C85025 + C85024 + C85023) * C153724 +
             (C83946 + C83945 + C83944) * C153864) *
                C153684 +
            ((C152156 * C490 - C83607 * C477 - C152156 * C491 + C83598 * C513 +
              C152106 * C492 - C152145 * C478 - C152106 * C493 +
              C153475 * C514 + C152110 * C494 - C152150 * C479 -
              C152110 * C495 + C153467 * C515) *
                 C153724 +
             (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
              C152106 * C156 - C152145 * C146 - C152106 * C157 +
              C153475 * C170 + C152110 * C154 - C152150 * C145 -
              C152110 * C155 + C153467 * C169) *
                 C153864) *
                C70498) *
               C153537 * C298 -
           (((C152156 * C4073 - C83607 * C4066 - C152156 * C4074 +
              C83598 * C4078 + C152106 * C4071 - C152145 * C4065 -
              C152106 * C4072 + C153475 * C4077 + C152110 * C4069 -
              C152150 * C4064 - C152110 * C4070 + C153467 * C4076) *
                 C153724 +
             (C83952 + C83951 + C83950) * C153864) *
                C153684 +
            ((C85028 + C85027 + C85026) * C153724 + C83956 * C153864) *
                C70498) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
              C153467 * C168 + C152106 * C154 - C152145 * C145 -
              C152106 * C155 + C153475 * C169 + C152156 * C156 - C83607 * C146 -
              C152156 * C157 + C83598 * C170) *
                 C153864 +
             (C88599 + C88600 + C88601) * C153724) *
                C70498 +
            ((C83935 + C83936 + C83937) * C153864 + C89626 * C153724) *
                C153684) *
               C153537 * C153919 -
           ((C86416 * C153724 + (C83940 + C83939 + C83938) * C153864) *
                C153684 +
            (C89627 * C153724 + (C83937 + C83936 + C83935) * C153864) *
                C70498) *
               C153537 * C153920 +
           ((C83955 * C153864 + (C85019 + C85018 + C85017) * C153724) * C70498 +
            ((C83943 + C83942 + C83941) * C153864 +
             (C86424 + C86425 + C86426) * C153724) *
                C153684) *
               C153537 * C1469) *
              C153840 +
          ((((C83944 + C83945 + C83946) * C153864 + C89628 * C153724) * C70498 +
            ((C83947 + C83948 + C83949) * C153864 +
             (C85026 + C85027 + C85028) * C153724) *
                C153684) *
               C153537 * C153920 -
           ((C89629 * C153724 + (C83946 + C83945 + C83944) * C153864) *
                C153684 +
            ((C88607 + C88606 + C88605) * C153724 +
             (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
              C152106 * C156 - C152145 * C146 - C152106 * C157 +
              C153475 * C170 + C152110 * C154 - C152150 * C145 -
              C152110 * C155 + C153467 * C169) *
                 C153864) *
                C70498) *
               C153537 * C153919 -
           (((C152156 * C4073 - C83607 * C4066 - C152156 * C4074 +
              C83598 * C4078 + C152106 * C4071 - C152145 * C4065 -
              C152106 * C4072 + C153475 * C4077 + C152110 * C4069 -
              C152150 * C4064 - C152110 * C4070 + C153467 * C4076) *
                 C153724 +
             (C83952 + C83951 + C83950) * C153864) *
                C153684 +
            ((C85028 + C85027 + C85026) * C153724 + C83956 * C153864) *
                C70498) *
               C153537 * C1469) *
              C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[51] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
                      C153467 * C168 + C152106 * C154 - C152145 * C145 -
                      C152106 * C155 + C153475 * C169 + C152156 * C156 -
                      C83607 * C146 - C152156 * C157 + C83598 * C170) *
                         C153864 +
                     (C88599 + C88600 + C88601) * C153724) *
                        C70498 +
                    ((C83935 + C83936 + C83937) * C153864 + C89626 * C153724) *
                        C153684) *
                       C153849 -
                   ((C90418 * C153724 + C89627 * C153864) * C153684 +
                    ((C88602 + C88603 + C88604) * C153724 +
                     (C88601 + C88600 + C88599) * C153864) *
                        C70498) *
                       C153601) *
                      C153919 +
                  (((C89626 * C153864 + C90419 * C153724) * C70498 +
                    (C91396 * C153864 + (C85674 + C85675 + C85676) * C153724) *
                        C153684) *
                       C153601 -
                   ((C86416 * C153724 + (C83940 + C83939 + C83938) * C153864) *
                        C153684 +
                    (C89627 * C153724 + (C83937 + C83936 + C83935) * C153864) *
                        C70498) *
                       C153849) *
                      C153920 +
                  (((C83955 * C153864 + C91396 * C153724) * C70498 +
                    ((C83943 + C83942 + C83941) * C153864 +
                     (C86424 + C86425 + C86426) * C153724) *
                        C153684) *
                       C153849 -
                   (((C152156 * C4784 - C83607 * C4781 - C152156 * C4785 +
                      C83598 * C4790 + C152106 * C4786 - C152145 * C4782 -
                      C152106 * C4787 + C153475 * C4791 + C152110 * C4788 -
                      C152150 * C4783 - C152110 * C4789 + C153467 * C4792) *
                         C153724 +
                     (C86426 + C86425 + C86424) * C153864) *
                        C153684 +
                    ((C85676 + C85675 + C85674) * C153724 + C86416 * C153864) *
                        C70498) *
                       C153601) *
                      C1469) *
                 C153502) /
                (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153864 +
            (C88599 + C88600 + C88601) * C153724) *
               C70498 +
           ((C83935 + C83936 + C83937) * C153864 + C89626 * C153724) *
               C153684) *
              C153537 * C1178 -
          ((C86416 * C153724 + (C83940 + C83939 + C83938) * C153864) * C153684 +
           (C89627 * C153724 + (C83937 + C83936 + C83935) * C153864) * C70498) *
              C153537 * C1179 +
          ((C83955 * C153864 + (C85019 + C85018 + C85017) * C153724) * C70498 +
           ((C83943 + C83942 + C83941) * C153864 +
            (C86424 + C86425 + C86426) * C153724) *
               C153684) *
              C153537 * C1180 -
          (((C152156 * C5564 - C83607 * C5561 - C152156 * C5565 +
             C83598 * C5570 + C152106 * C5566 - C152145 * C5562 -
             C152106 * C5567 + C153475 * C5571 + C152110 * C5568 -
             C152150 * C5563 - C152110 * C5569 + C153467 * C5572) *
                C153724 +
            (C85416 + C85415 + C85414) * C153864) *
               C153684 +
           ((C86426 + C86425 + C86424) * C153724 + C85406 * C153864) * C70498) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
              C153467 * C168 + C152106 * C154 - C152145 * C145 -
              C152106 * C155 + C153475 * C169 + C152156 * C156 - C83607 * C146 -
              C152156 * C157 + C83598 * C170) *
                 C153864 +
             (C88599 + C88600 + C88601) * C153724) *
                C70498 +
            ((C83935 + C83936 + C83937) * C153864 + C89626 * C153724) *
                C153684) *
               C153537 * C1091 -
           ((C86416 * C153724 + (C83940 + C83939 + C83938) * C153864) *
                C153684 +
            (C89627 * C153724 + (C83937 + C83936 + C83935) * C153864) *
                C70498) *
               C153537 * C153573) *
              C1093 +
          ((((C83944 + C83945 + C83946) * C153864 + C89628 * C153724) * C70498 +
            ((C83947 + C83948 + C83949) * C153864 +
             (C85026 + C85027 + C85028) * C153724) *
                C153684) *
               C153537 * C153573 -
           ((C89629 * C153724 + (C83946 + C83945 + C83944) * C153864) *
                C153684 +
            ((C88607 + C88606 + C88605) * C153724 +
             (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
              C152106 * C156 - C152145 * C146 - C152106 * C157 +
              C153475 * C170 + C152110 * C154 - C152150 * C145 -
              C152110 * C155 + C153467 * C169) *
                 C153864) *
                C70498) *
               C153537 * C1091) *
              C1094 +
          ((((C152110 * C156 - C152150 * C146 - C152110 * C157 +
              C153467 * C170 + C152106 * C158 - C152145 * C147 -
              C152106 * C159 + C153475 * C171 + C152156 * C160 - C83607 * C148 -
              C152156 * C161 + C83598 * C172) *
                 C153864 +
             (C89233 + C89234 + C89235) * C153724) *
                C70498 +
            ((C84431 + C84432 + C84433) * C153864 +
             (C88922 + C88923 + C88924) * C153724) *
                C153684) *
               C153537 * C1091 -
           (((C152156 * C1761 - C83607 * C1756 - C152156 * C1762 +
              C83598 * C1771 + C152106 * C1763 - C152145 * C1757 -
              C152106 * C1764 + C153475 * C1772 + C152110 * C1765 -
              C152150 * C1758 - C152110 * C1766 + C153467 * C1773) *
                 C153724 +
             (C84436 + C84435 + C84434) * C153864) *
                C153684 +
            ((C88924 + C88923 + C88922) * C153724 +
             (C84433 + C84432 + C84431) * C153864) *
                C70498) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
              C153467 * C168 + C152106 * C154 - C152145 * C145 -
              C152106 * C155 + C153475 * C169 + C152156 * C156 - C83607 * C146 -
              C152156 * C157 + C83598 * C170) *
                 C153864 +
             (C88599 + C88600 + C88601) * C153724) *
                C70498 +
            ((C83935 + C83936 + C83937) * C153864 + C89626 * C153724) *
                C153684) *
               C473 -
           ((C90418 * C153724 + C89627 * C153864) * C153684 +
            ((C88602 + C88603 + C88604) * C153724 +
             (C88601 + C88600 + C88599) * C153864) *
                C70498) *
               C474 +
           (((C88604 + C88603 + C88602) * C153864 +
             (C152110 * C2121 - C152150 * C2112 - C152110 * C2122 +
              C153467 * C2127 + C152106 * C2119 - C152145 * C2111 -
              C152106 * C2120 + C153475 * C2126 + C152156 * C2117 -
              C83607 * C2110 - C152156 * C2118 + C83598 * C2125) *
                 C153724) *
                C70498 +
            (C90419 * C153864 + (C90426 + C90427 + C90428) * C153724) *
                C153684) *
               C475) *
              C1091 +
          (((C89626 * C153864 + C90419 * C153724) * C70498 +
            ((C85019 + C85018 + C85017) * C153864 +
             (C85674 + C85675 + C85676) * C153724) *
                C153684) *
               C474 -
           ((C86416 * C153724 + (C83940 + C83939 + C83938) * C153864) *
                C153684 +
            (C89627 * C153724 + (C83937 + C83936 + C83935) * C153864) *
                C70498) *
               C473 -
           (((C152156 * C6185 - C83607 * C6179 - C152156 * C6186 +
              C83598 * C6197 + C152106 * C6187 - C152145 * C6180 -
              C152106 * C6188 + C153475 * C6198 + C152110 * C6189 -
              C152150 * C6181 - C152110 * C6190 + C153467 * C6199) *
                 C153724 +
             (C85676 + C85675 + C85674) * C153864) *
                C153684 +
            ((C90428 + C90427 + C90426) * C153724 + C90418 * C153864) *
                C70498) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[53] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
                       C153467 * C168 + C152106 * C154 - C152145 * C145 -
                       C152106 * C155 + C153475 * C169 + C152156 * C156 -
                       C83607 * C146 - C152156 * C157 + C83598 * C170) *
                          C153864 +
                      (C88599 + C88600 + C88601) * C153724) *
                         C70498 +
                     ((C83935 + C83936 + C83937) * C153864 + C89626 * C153724) *
                         C153684) *
                        C153849 -
                    ((C90418 * C153724 + C89627 * C153864) * C153684 +
                     ((C88602 + C88603 + C88604) * C153724 +
                      (C88601 + C88600 + C88599) * C153864) *
                         C70498) *
                        C153601) *
                       C1091 +
                   (((C89626 * C153864 + C90419 * C153724) * C70498 +
                     ((C85019 + C85018 + C85017) * C153864 +
                      (C85674 + C85675 + C85676) * C153724) *
                         C153684) *
                        C153601 -
                    ((C86416 * C153724 + (C83940 + C83939 + C83938) * C153864) *
                         C153684 +
                     (C89627 * C153724 + (C83937 + C83936 + C83935) * C153864) *
                         C70498) *
                        C153849) *
                       C153573) *
                      C153840 +
                  (((((C88605 + C88606 + C88607) * C153864 +
                      (C88608 + C88609 + C88610) * C153724) *
                         C70498 +
                     (C89628 * C153864 + (C88611 + C88612 + C88613) * C153724) *
                         C153684) *
                        C153601 -
                    ((C89629 * C153724 + (C83946 + C83945 + C83944) * C153864) *
                         C153684 +
                     ((C88607 + C88606 + C88605) * C153724 +
                      (C152156 * C158 - C83607 * C147 - C152156 * C159 +
                       C83598 * C171 + C152106 * C156 - C152145 * C146 -
                       C152106 * C157 + C153475 * C170 + C152110 * C154 -
                       C152150 * C145 - C152110 * C155 + C153467 * C169) *
                          C153864) *
                         C70498) *
                        C153849) *
                       C1091 +
                   ((((C83944 + C83945 + C83946) * C153864 + C89628 * C153724) *
                         C70498 +
                     ((C83947 + C83948 + C83949) * C153864 +
                      (C85026 + C85027 + C85028) * C153724) *
                         C153684) *
                        C153849 -
                    (((C152156 * C3289 - C83607 * C3282 - C152156 * C3290 +
                       C83598 * C3294 + C152106 * C3287 - C152145 * C3281 -
                       C152106 * C3288 + C153475 * C3293 + C152110 * C3285 -
                       C152150 * C3280 - C152110 * C3286 + C153467 * C3292) *
                          C153724 +
                      (C85028 + C85027 + C85026) * C153864) *
                         C153684 +
                     ((C88613 + C88612 + C88611) * C153724 + C89629 * C153864) *
                         C70498) *
                        C153601) *
                       C153573) *
                      C153508)) /
                (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
              C153467 * C168 + C152106 * C154 - C152145 * C145 -
              C152106 * C155 + C153475 * C169 + C152156 * C156 - C83607 * C146 -
              C152156 * C157 + C83598 * C170) *
                 C153864 +
             (C88599 + C88600 + C88601) * C153724) *
                C70498 +
            ((C83935 + C83936 + C83937) * C153864 + C89626 * C153724) *
                C153684) *
               C153537 * C1091 -
           ((C86416 * C153724 + (C83940 + C83939 + C83938) * C153864) *
                C153684 +
            (C89627 * C153724 + (C83937 + C83936 + C83935) * C153864) *
                C70498) *
               C153537 * C153573) *
              C1093 +
          ((((C83944 + C83945 + C83946) * C153864 + C89628 * C153724) * C70498 +
            ((C83947 + C83948 + C83949) * C153864 +
             (C85026 + C85027 + C85028) * C153724) *
                C153684) *
               C153537 * C153573 -
           ((C89629 * C153724 + (C83946 + C83945 + C83944) * C153864) *
                C153684 +
            ((C88607 + C88606 + C88605) * C153724 +
             (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
              C152106 * C156 - C152145 * C146 - C152106 * C157 +
              C153475 * C170 + C152110 * C154 - C152150 * C145 -
              C152110 * C155 + C153467 * C169) *
                 C153864) *
                C70498) *
               C153537 * C1091) *
              C1094 +
          ((((C152110 * C156 - C152150 * C146 - C152110 * C157 +
              C153467 * C170 + C152106 * C158 - C152145 * C147 -
              C152106 * C159 + C153475 * C171 + C152156 * C160 - C83607 * C148 -
              C152156 * C161 + C83598 * C172) *
                 C153864 +
             (C89233 + C89234 + C89235) * C153724) *
                C70498 +
            ((C84431 + C84432 + C84433) * C153864 +
             (C88922 + C88923 + C88924) * C153724) *
                C153684) *
               C153537 * C1091 -
           (((C152156 * C1761 - C83607 * C1756 - C152156 * C1762 +
              C83598 * C1771 + C152106 * C1763 - C152145 * C1757 -
              C152106 * C1764 + C153475 * C1772 + C152110 * C1765 -
              C152150 * C1758 - C152110 * C1766 + C153467 * C1773) *
                 C153724 +
             (C84436 + C84435 + C84434) * C153864) *
                C153684 +
            ((C88924 + C88923 + C88922) * C153724 +
             (C84433 + C84432 + C84431) * C153864) *
                C70498) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153864 +
            (C88599 + C88600 + C88601) * C153724) *
               C70498 +
           ((C83935 + C83936 + C83937) * C153864 + C89626 * C153724) *
               C153684) *
              C153537 * C1178 -
          ((C86416 * C153724 + (C83940 + C83939 + C83938) * C153864) * C153684 +
           (C89627 * C153724 + (C83937 + C83936 + C83935) * C153864) * C70498) *
              C153537 * C1179 +
          ((C83955 * C153864 + (C85019 + C85018 + C85017) * C153724) * C70498 +
           ((C83943 + C83942 + C83941) * C153864 +
            (C86424 + C86425 + C86426) * C153724) *
               C153684) *
              C153537 * C1180 -
          (((C152156 * C5564 - C83607 * C5561 - C152156 * C5565 +
             C83598 * C5570 + C152106 * C5566 - C152145 * C5562 -
             C152106 * C5567 + C153475 * C5571 + C152110 * C5568 -
             C152150 * C5563 - C152110 * C5569 + C153467 * C5572) *
                C153724 +
            (C85416 + C85415 + C85414) * C153864) *
               C153684 +
           ((C86426 + C86425 + C86424) * C153724 + C85406 * C153864) * C70498) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[55] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
                       C153467 * C168 + C152106 * C154 - C152145 * C145 -
                       C152106 * C155 + C153475 * C169 + C152156 * C156 -
                       C83607 * C146 - C152156 * C157 + C83598 * C170) *
                          C153864 +
                      (C88599 + C88600 + C88601) * C153724) *
                         C70498 +
                     ((C83935 + C83936 + C83937) * C153864 + C89626 * C153724) *
                         C153684) *
                        C1898 -
                    ((C90418 * C153724 + C89627 * C153864) * C153684 +
                     ((C88602 + C88603 + C88604) * C153724 +
                      (C88601 + C88600 + C88599) * C153864) *
                         C70498) *
                        C153601) *
                       C153848 +
                   (((C89626 * C153864 + C90419 * C153724) * C70498 +
                     (C91396 * C153864 + (C85674 + C85675 + C85676) * C153724) *
                         C153684) *
                        C153601 -
                    ((C86416 * C153724 + (C83940 + C83939 + C83938) * C153864) *
                         C153684 +
                     (C89627 * C153724 + (C83937 + C83936 + C83935) * C153864) *
                         C70498) *
                        C1898) *
                       C153573) *
                      C153840 +
                  (((((C88605 + C88606 + C88607) * C153864 +
                      (C88608 + C88609 + C88610) * C153724) *
                         C70498 +
                     (C89628 * C153864 + (C88611 + C88612 + C88613) * C153724) *
                         C153684) *
                        C153601 -
                    ((C89629 * C153724 + (C83946 + C83945 + C83944) * C153864) *
                         C153684 +
                     ((C88607 + C88606 + C88605) * C153724 +
                      (C152156 * C158 - C83607 * C147 - C152156 * C159 +
                       C83598 * C171 + C152106 * C156 - C152145 * C146 -
                       C152106 * C157 + C153475 * C170 + C152110 * C154 -
                       C152150 * C145 - C152110 * C155 + C153467 * C169) *
                          C153864) *
                         C70498) *
                        C1898) *
                       C153848 +
                   ((((C83944 + C83945 + C83946) * C153864 + C89628 * C153724) *
                         C70498 +
                     ((C83947 + C83948 + C83949) * C153864 +
                      (C85026 + C85027 + C85028) * C153724) *
                         C153684) *
                        C1898 -
                    (((C152156 * C3289 - C83607 * C3282 - C152156 * C3290 +
                       C83598 * C3294 + C152106 * C3287 - C152145 * C3281 -
                       C152106 * C3288 + C153475 * C3293 + C152110 * C3285 -
                       C152150 * C3280 - C152110 * C3286 + C153467 * C3292) *
                          C153724 +
                      (C85028 + C85027 + C85026) * C153864) *
                         C153684 +
                     ((C88613 + C88612 + C88611) * C153724 + C89629 * C153864) *
                         C70498) *
                        C153601) *
                       C153573) *
                      C153508)) /
                (p * q * std::sqrt(p + q));
    d2ee[56] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
                      C153467 * C168 + C152106 * C154 - C152145 * C145 -
                      C152106 * C155 + C153475 * C169 + C152156 * C156 -
                      C83607 * C146 - C152156 * C157 + C83598 * C170) *
                         C153864 +
                     (C88599 + C88600 + C88601) * C153724) *
                        C70498 +
                    ((C83935 + C83936 + C83937) * C153864 + C89626 * C153724) *
                        C153684) *
                       C153921 -
                   ((C90418 * C153724 + C89627 * C153864) * C153684 +
                    ((C88602 + C88603 + C88604) * C153724 +
                     (C88601 + C88600 + C88599) * C153864) *
                        C70498) *
                       C153922 +
                   (((C88604 + C88603 + C88602) * C153864 +
                     (C92189 + C92190 + C92191) * C153724) *
                        C70498 +
                    (C90419 * C153864 + (C90426 + C90427 + C90428) * C153724) *
                        C153684) *
                       C2414) *
                      C153848 +
                  (((C89626 * C153864 + C90419 * C153724) * C70498 +
                    (C91396 * C153864 + (C85674 + C85675 + C85676) * C153724) *
                        C153684) *
                       C153922 -
                   ((C86416 * C153724 + (C83940 + C83939 + C83938) * C153864) *
                        C153684 +
                    (C89627 * C153724 + (C83937 + C83936 + C83935) * C153864) *
                        C70498) *
                       C153921 -
                   (((C152156 * C6185 - C83607 * C6179 - C152156 * C6186 +
                      C83598 * C6197 + C152106 * C6187 - C152145 * C6180 -
                      C152106 * C6188 + C153475 * C6198 + C152110 * C6189 -
                      C152150 * C6181 - C152110 * C6190 + C153467 * C6199) *
                         C153724 +
                     (C85676 + C85675 + C85674) * C153864) *
                        C153684 +
                    ((C90428 + C90427 + C90426) * C153724 + C90418 * C153864) *
                        C70498) *
                       C2414) *
                      C153573) *
                 C153502) /
                (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
              C153467 * C168 + C152106 * C154 - C152145 * C145 -
              C152106 * C155 + C153475 * C169 + C152156 * C156 - C83607 * C146 -
              C152156 * C157 + C83598 * C170) *
                 C153864 +
             (C88599 + C88600 + C88601) * C153724) *
                C70498 +
            ((C83935 + C83936 + C83937) * C153864 + C89626 * C153724) *
                C153684) *
               C1898 -
           ((C90418 * C153724 + C89627 * C153864) * C153684 +
            ((C88602 + C88603 + C88604) * C153724 +
             (C88601 + C88600 + C88599) * C153864) *
                C70498) *
               C153601) *
              C298 +
          (((C89626 * C153864 + C90419 * C153724) * C70498 +
            (C91396 * C153864 + (C85674 + C85675 + C85676) * C153724) *
                C153684) *
               C153601 -
           ((C86416 * C153724 + (C83940 + C83939 + C83938) * C153864) *
                C153684 +
            (C89627 * C153724 + (C83937 + C83936 + C83935) * C153864) *
                C70498) *
               C1898) *
              C299 +
          (((C83955 * C153864 + C91396 * C153724) * C70498 +
            ((C83943 + C83942 + C83941) * C153864 +
             (C86424 + C86425 + C86426) * C153724) *
                C153684) *
               C1898 -
           (((C152156 * C4784 - C83607 * C4781 - C152156 * C4785 +
              C83598 * C4790 + C152106 * C4786 - C152145 * C4782 -
              C152106 * C4787 + C153475 * C4791 + C152110 * C4788 -
              C152150 * C4783 - C152110 * C4789 + C153467 * C4792) *
                 C153724 +
             (C86426 + C86425 + C86424) * C153864) *
                C153684 +
            ((C85676 + C85675 + C85674) * C153724 + C86416 * C153864) *
                C70498) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
              C153467 * C168 + C152106 * C154 - C152145 * C145 -
              C152106 * C155 + C153475 * C169 + C152156 * C156 - C83607 * C146 -
              C152156 * C157 + C83598 * C170) *
                 C153864 +
             (C88599 + C88600 + C88601) * C153724) *
                C70498 +
            ((C83935 + C83936 + C83937) * C153864 + C89626 * C153724) *
                C153684) *
               C1898 -
           ((C90418 * C153724 + C89627 * C153864) * C153684 +
            ((C88602 + C88603 + C88604) * C153724 +
             (C88601 + C88600 + C88599) * C153864) *
                C70498) *
               C153601) *
              C153521 * C1093 +
          ((((C88605 + C88606 + C88607) * C153864 +
             (C88608 + C88609 + C88610) * C153724) *
                C70498 +
            (C89628 * C153864 + (C88611 + C88612 + C88613) * C153724) *
                C153684) *
               C153601 -
           ((C89629 * C153724 + (C83946 + C83945 + C83944) * C153864) *
                C153684 +
            ((C88607 + C88606 + C88605) * C153724 +
             (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
              C152106 * C156 - C152145 * C146 - C152106 * C157 +
              C153475 * C170 + C152110 * C154 - C152150 * C145 -
              C152110 * C155 + C153467 * C169) *
                 C153864) *
                C70498) *
               C1898) *
              C153521 * C1094 +
          ((((C152110 * C156 - C152150 * C146 - C152110 * C157 +
              C153467 * C170 + C152106 * C158 - C152145 * C147 -
              C152106 * C159 + C153475 * C171 + C152156 * C160 - C83607 * C148 -
              C152156 * C161 + C83598 * C172) *
                 C153864 +
             (C89233 + C89234 + C89235) * C153724) *
                C70498 +
            ((C84431 + C84432 + C84433) * C153864 +
             (C88922 + C88923 + C88924) * C153724) *
                C153684) *
               C1898 -
           (((C152156 * C1330 - C83607 * C1325 - C152156 * C1331 +
              C83598 * C1340 + C152106 * C1332 - C152145 * C1326 -
              C152106 * C1333 + C153475 * C1341 + C152110 * C1334 -
              C152150 * C1327 - C152110 * C1335 + C153467 * C1342) *
                 C153724 +
             (C88924 + C88923 + C88922) * C153864) *
                C153684 +
            ((C152156 * C506 - C83607 * C485 - C152156 * C507 + C83598 * C521 +
              C152106 * C504 - C152145 * C484 - C152106 * C505 +
              C153475 * C520 + C152110 * C502 - C152150 * C483 -
              C152110 * C503 + C153467 * C519) *
                 C153724 +
             (C89235 + C89234 + C89233) * C153864) *
                C70498) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153864 +
            (C88599 + C88600 + C88601) * C153724) *
               C70498 +
           ((C83935 + C83936 + C83937) * C153864 + C89626 * C153724) *
               C153684) *
              C2104 -
          ((C90418 * C153724 + C89627 * C153864) * C153684 +
           ((C88602 + C88603 + C88604) * C153724 +
            (C88601 + C88600 + C88599) * C153864) *
               C70498) *
              C2105 +
          (((C88604 + C88603 + C88602) * C153864 +
            (C92189 + C92190 + C92191) * C153724) *
               C70498 +
           (C90419 * C153864 + (C90426 + C90427 + C90428) * C153724) *
               C153684) *
              C2106 -
          (((C152156 * C9038 - C83607 * C9035 - C152156 * C9039 +
             C83598 * C9044 + C152106 * C9040 - C152145 * C9036 -
             C152106 * C9041 + C153475 * C9045 + C152110 * C9042 -
             C152150 * C9037 - C152110 * C9043 + C153467 * C9046) *
                C153724 +
            (C90428 + C90427 + C90426) * C153864) *
               C153684 +
           ((C152156 * C7522 - C83607 * C7516 - C152156 * C7523 +
             C83598 * C7528 + C152106 * C7520 - C152145 * C7515 -
             C152106 * C7521 + C153475 * C7527 + C152110 * C7518 -
             C152150 * C7514 - C152110 * C7519 + C153467 * C7526) *
                C153724 +
            (C92191 + C92190 + C92189) * C153864) *
               C70498) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[58] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
                      C153467 * C168 + C152106 * C154 - C152145 * C145 -
                      C152106 * C155 + C153475 * C169 + C152156 * C156 -
                      C83607 * C146 - C152156 * C157 + C83598 * C170) *
                         C153864 +
                     (C88599 + C88600 + C88601) * C153724) *
                        C70498 +
                    ((C83935 + C83936 + C83937) * C153864 + C89626 * C153724) *
                        C153684) *
                       C153921 -
                   ((C90418 * C153724 + C89627 * C153864) * C153684 +
                    ((C88602 + C88603 + C88604) * C153724 +
                     (C88601 + C88600 + C88599) * C153864) *
                        C70498) *
                       C153922 +
                   (((C88604 + C88603 + C88602) * C153864 +
                     (C92189 + C92190 + C92191) * C153724) *
                        C70498 +
                    (C90419 * C153864 + (C90426 + C90427 + C90428) * C153724) *
                        C153684) *
                       C2414) *
                      C153521 * C153840 +
                  ((((C88605 + C88606 + C88607) * C153864 +
                     (C88608 + C88609 + C88610) * C153724) *
                        C70498 +
                    (C89628 * C153864 + (C88611 + C88612 + C88613) * C153724) *
                        C153684) *
                       C153922 -
                   ((C89629 * C153724 + (C83946 + C83945 + C83944) * C153864) *
                        C153684 +
                    ((C88607 + C88606 + C88605) * C153724 +
                     (C152156 * C158 - C83607 * C147 - C152156 * C159 +
                      C83598 * C171 + C152106 * C156 - C152145 * C146 -
                      C152106 * C157 + C153475 * C170 + C152110 * C154 -
                      C152150 * C145 - C152110 * C155 + C153467 * C169) *
                         C153864) *
                        C70498) *
                       C153921 -
                   (((C152156 * C8429 - C83607 * C8428 - C152156 * C8430 +
                      C83598 * C8431 + C152106 * C6191 - C152145 * C6182 -
                      C152106 * C6192 + C153475 * C6200 + C152110 * C6193 -
                      C152150 * C6183 - C152110 * C6194 + C153467 * C6201) *
                         C153724 +
                     (C88613 + C88612 + C88611) * C153864) *
                        C153684 +
                    ((C152156 * C2115 - C83607 * C2109 - C152156 * C2116 +
                      C83598 * C2124 + C152106 * C2117 - C152145 * C2110 -
                      C152106 * C2118 + C153475 * C2125 + C152110 * C2119 -
                      C152150 * C2111 - C152110 * C2120 + C153467 * C2126) *
                         C153724 +
                     (C88610 + C88609 + C88608) * C153864) *
                        C70498) *
                       C2414) *
                      C153521 * C153508)) /
                (p * q * std::sqrt(p + q));
    d2ee[59] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
                      C153467 * C168 + C152106 * C154 - C152145 * C145 -
                      C152106 * C155 + C153475 * C169 + C152156 * C156 -
                      C83607 * C146 - C152156 * C157 + C83598 * C170) *
                         C153864 +
                     (C88599 + C88600 + C88601) * C153724) *
                        C70498 +
                    ((C83935 + C83936 + C83937) * C153864 + C89626 * C153724) *
                        C153684) *
                       C1898 -
                   ((C90418 * C153724 + C89627 * C153864) * C153684 +
                    ((C88602 + C88603 + C88604) * C153724 +
                     (C88601 + C88600 + C88599) * C153864) *
                        C70498) *
                       C153601) *
                      C153521 * C1093 +
                  ((((C88605 + C88606 + C88607) * C153864 +
                     (C88608 + C88609 + C88610) * C153724) *
                        C70498 +
                    (C89628 * C153864 + (C88611 + C88612 + C88613) * C153724) *
                        C153684) *
                       C153601 -
                   ((C89629 * C153724 + (C83946 + C83945 + C83944) * C153864) *
                        C153684 +
                    ((C88607 + C88606 + C88605) * C153724 +
                     (C152156 * C158 - C83607 * C147 - C152156 * C159 +
                      C83598 * C171 + C152106 * C156 - C152145 * C146 -
                      C152106 * C157 + C153475 * C170 + C152110 * C154 -
                      C152150 * C145 - C152110 * C155 + C153467 * C169) *
                         C153864) *
                        C70498) *
                       C1898) *
                      C153521 * C1094 +
                  ((((C152110 * C156 - C152150 * C146 - C152110 * C157 +
                      C153467 * C170 + C152106 * C158 - C152145 * C147 -
                      C152106 * C159 + C153475 * C171 + C152156 * C160 -
                      C83607 * C148 - C152156 * C161 + C83598 * C172) *
                         C153864 +
                     (C89233 + C89234 + C89235) * C153724) *
                        C70498 +
                    ((C84431 + C84432 + C84433) * C153864 +
                     (C88922 + C88923 + C88924) * C153724) *
                        C153684) *
                       C1898 -
                   (((C152156 * C1330 - C83607 * C1325 - C152156 * C1331 +
                      C83598 * C1340 + C152106 * C1332 - C152145 * C1326 -
                      C152106 * C1333 + C153475 * C1341 + C152110 * C1334 -
                      C152150 * C1327 - C152110 * C1335 + C153467 * C1342) *
                         C153724 +
                     (C88924 + C88923 + C88922) * C153864) *
                        C153684 +
                    ((C152156 * C506 - C83607 * C485 - C152156 * C507 +
                      C83598 * C521 + C152106 * C504 - C152145 * C484 -
                      C152106 * C505 + C153475 * C520 + C152110 * C502 -
                      C152150 * C483 - C152110 * C503 + C153467 * C519) *
                         C153724 +
                     (C89235 + C89234 + C89233) * C153864) *
                        C70498) *
                       C153601) *
                      C153521 * C1095)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
                      C153467 * C168 + C152106 * C154 - C152145 * C145 -
                      C152106 * C155 + C153475 * C169 + C152156 * C156 -
                      C83607 * C146 - C152156 * C157 + C83598 * C170) *
                         C153864 +
                     (C88599 + C88600 + C88601) * C153724) *
                        C70498 +
                    ((C83935 + C83936 + C83937) * C153864 + C89626 * C153724) *
                        C153684) *
                       C1898 -
                   ((C90418 * C153724 + C89627 * C153864) * C153684 +
                    ((C88602 + C88603 + C88604) * C153724 +
                     (C88601 + C88600 + C88599) * C153864) *
                        C70498) *
                       C153601) *
                      C298 +
                  (((C89626 * C153864 + C90419 * C153724) * C70498 +
                    (C91396 * C153864 + (C85674 + C85675 + C85676) * C153724) *
                        C153684) *
                       C153601 -
                   ((C86416 * C153724 + (C83940 + C83939 + C83938) * C153864) *
                        C153684 +
                    (C89627 * C153724 + (C83937 + C83936 + C83935) * C153864) *
                        C70498) *
                       C1898) *
                      C299 +
                  (((C83955 * C153864 + C91396 * C153724) * C70498 +
                    ((C83943 + C83942 + C83941) * C153864 +
                     (C86424 + C86425 + C86426) * C153724) *
                        C153684) *
                       C1898 -
                   (((C152156 * C4784 - C83607 * C4781 - C152156 * C4785 +
                      C83598 * C4790 + C152106 * C4786 - C152145 * C4782 -
                      C152106 * C4787 + C153475 * C4791 + C152110 * C4788 -
                      C152150 * C4783 - C152110 * C4789 + C153467 * C4792) *
                         C153724 +
                     (C86426 + C86425 + C86424) * C153864) *
                        C153684 +
                    ((C85676 + C85675 + C85674) * C153724 + C86416 * C153864) *
                        C70498) *
                       C153601) *
                      C300) *
                 C153502) /
                    (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C153637 * C70498 +
            (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
               C153537 * C153848 -
           ((C70803 + C70804 + C70805 + C70806) * C153637 * C153684 +
            (C70802 + C70801 + C70800 + C70799) * C153637 * C70498) *
               C153537 * C153573) *
              C153917 +
          (((C70807 + C70808 + C70809 + C70810) * C153637 * C70498 +
            (C70811 + C70812 + C70813 + C70814) * C153637 * C153684) *
               C153537 * C153573 -
           ((C70810 + C70809 + C70808 + C70807) * C153637 * C153684 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C153637 * C70498) *
               C153537 * C153848) *
              C153918 +
          (((C70500 * C156 - C70501 * C146 - C70500 * C157 + C153942 * C170 +
             C70502 * C158 - C70503 * C147 - C70502 * C159 + C153935 * C171 +
             C70504 * C160 - C70505 * C148 - C70504 * C161 + C153916 * C172 +
             C70506 * C162 - C70507 * C149 - C70506 * C163 + C153862 * C173) *
                C153637 * C70498 +
            (C71227 + C71228 + C71229 + C71230) * C153637 * C153684) *
               C153537 * C153848 -
           ((C70506 * C337 - C70507 * C314 - C70506 * C338 + C153862 * C350 +
             C70504 * C333 - C70505 * C312 - C70504 * C334 + C153916 * C348 +
             C70502 * C331 - C70503 * C311 - C70502 * C332 + C153935 * C347 +
             C70500 * C329 - C70501 * C310 - C70500 * C330 + C153942 * C346) *
                C153637 * C153684 +
            (C71230 + C71229 + C71228 + C71227) * C153637 * C70498) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153637 * C153943 +
            (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
            C74602 * C153871) *
               C153537 * C153848 -
           ((C74587 + C74588) * C153637 * C153871 +
            (C74586 + C74585) * C153637 * C153929 +
            (C74584 + C74583) * C153637 * C153939 +
            (C74582 + C74581) * C153637 * C153943) *
               C153537 * C153573) *
              C153917 +
          (((C74589 + C74590) * C153637 * C153943 +
            (C74591 + C74592) * C153637 * C153939 +
            (C74593 + C74594) * C153637 * C153929 +
            (C74595 + C74596) * C153637 * C153871) *
               C153537 * C153573 -
           (C74603 * C153871 + C74604 * C153929 +
            (C74590 + C74589) * C153637 * C153939 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153637 * C153943) *
               C153537 * C153848) *
              C153918 +
          (((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
             C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                C153637 * C153943 +
            (C75029 + C75030) * C153637 * C153939 +
            (C75031 + C75032) * C153637 * C153929 +
            (C75033 + C75034) * C153637 * C153871) *
               C153537 * C153848 -
           ((C74288 * C2923 - C74289 * C2916 - C74288 * C2924 +
             C153472 * C2928 + C74286 * C2921 - C74287 * C2915 -
             C74286 * C2922 + C74280 * C2927) *
                C153637 * C153871 +
            (C75034 + C75033) * C153637 * C153929 +
            (C75032 + C75031) * C153637 * C153939 +
            (C75030 + C75029) * C153637 * C153943) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
              C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
              C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
              C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                 C153637 * C70498 +
             (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
                C153849 -
            ((C71731 + C71732 + C71733 + C71734) * C153637 * C153684 +
             (C70506 * C490 - C70507 * C477 - C70506 * C491 + C153862 * C513 +
              C70504 * C492 - C70505 * C478 - C70504 * C493 + C153916 * C514 +
              C70502 * C494 - C70503 * C479 - C70502 * C495 + C153935 * C515 +
              C70500 * C496 - C70501 * C480 - C70500 * C497 + C153942 * C516) *
                 C153637 * C70498) *
                C153601) *
               C153848 +
           (((C71734 + C71733 + C71732 + C71731) * C153637 * C70498 +
             (C70500 * C1769 - C70501 * C1760 - C70500 * C1770 +
              C153942 * C1775 + C70502 * C1767 - C70503 * C1759 -
              C70502 * C1768 + C153935 * C1774 + C70504 * C1765 -
              C70505 * C1758 - C70504 * C1766 + C153916 * C1773 +
              C70506 * C1763 - C70507 * C1757 - C70506 * C1764 +
              C153862 * C1772) *
                 C153637 * C153684) *
                C153601 -
            ((C70803 + C70804 + C70805 + C70806) * C153637 * C153684 +
             (C70802 + C70801 + C70800 + C70799) * C153637 * C70498) *
                C153849) *
               C153573) *
              C301 +
          ((((C70500 * C494 - C70501 * C479 - C70500 * C495 + C153942 * C515 +
              C70502 * C492 - C70503 * C478 - C70502 * C493 + C153935 * C514 +
              C70504 * C490 - C70505 * C477 - C70504 * C491 + C153916 * C513 +
              C70506 * C488 - C70507 * C476 - C70506 * C489 + C153862 * C512) *
                 C153637 * C70498 +
             (C71735 + C71736 + C71737 + C71738) * C153637 * C153684) *
                C153601 -
            ((C70810 + C70809 + C70808 + C70807) * C153637 * C153684 +
             (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
              C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
              C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
              C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                 C153637 * C70498) *
                C153849) *
               C153848 +
           (((C70807 + C70808 + C70809 + C70810) * C153637 * C70498 +
             (C70811 + C70812 + C70813 + C70814) * C153637 * C153684) *
                C153849 -
            ((C70506 * C1761 - C70507 * C1756 - C70506 * C1762 +
              C153862 * C1771 + C70504 * C1763 - C70505 * C1757 -
              C70504 * C1764 + C153916 * C1772 + C70502 * C1765 -
              C70503 * C1758 - C70502 * C1766 + C153935 * C1773 +
              C70500 * C1767 - C70501 * C1759 - C70500 * C1768 +
              C153942 * C1774) *
                 C153637 * C153684 +
             (C71738 + C71737 + C71736 + C71735) * C153637 * C70498) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153637 * C153943 +
             (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
             C74602 * C153871) *
                C153849 -
            ((C75559 + C75560) * C153637 * C153871 +
             (C75561 + C75562) * C153637 * C153929 +
             (C75563 + C75564) * C153637 * C153939 +
             (C74288 * C494 - C74289 * C479 - C74288 * C495 + C153472 * C515 +
              C74286 * C496 - C74287 * C480 - C74286 * C497 + C74280 * C516) *
                 C153637 * C153943) *
                C153601) *
               C153848 +
           (((C75564 + C75563) * C153637 * C153943 +
             (C75562 + C75561) * C153637 * C153939 +
             (C75560 + C75559) * C153637 * C153929 +
             (C74286 * C5568 - C74287 * C5563 - C74286 * C5569 +
              C74280 * C5572 + C74288 * C5566 - C74289 * C5562 -
              C74288 * C5567 + C153472 * C5571) *
                 C153637 * C153871) *
                C153601 -
            ((C74587 + C74588) * C153637 * C153871 +
             (C74586 + C74585) * C153637 * C153929 +
             (C74584 + C74583) * C153637 * C153939 +
             (C74582 + C74581) * C153637 * C153943) *
                C153849) *
               C153573) *
              C301 +
          ((((C74286 * C494 - C74287 * C479 - C74286 * C495 + C74280 * C515 +
              C74288 * C492 - C74289 * C478 - C74288 * C493 + C153472 * C514) *
                 C153637 * C153943 +
             (C75565 + C75566) * C153637 * C153939 +
             (C75567 + C75568) * C153637 * C153929 +
             (C75569 + C75570) * C153637 * C153871) *
                C153601 -
            (C74603 * C153871 + C74604 * C153929 +
             (C74590 + C74589) * C153637 * C153939 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153637 * C153943) *
                C153849) *
               C153848 +
           (((C74589 + C74590) * C153637 * C153943 +
             (C74591 + C74592) * C153637 * C153939 +
             (C74593 + C74594) * C153637 * C153929 +
             (C74595 + C74596) * C153637 * C153871) *
                C153849 -
            ((C74288 * C5564 - C74289 * C5561 - C74288 * C5565 +
              C153472 * C5570 + C74286 * C5566 - C74287 * C5562 -
              C74286 * C5567 + C74280 * C5571) *
                 C153637 * C153871 +
             (C75570 + C75569) * C153637 * C153929 +
             (C75568 + C75567) * C153637 * C153939 +
             (C75566 + C75565) * C153637 * C153943) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C153637 * C70498 +
            (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
               C153537 * C298 -
           ((C70803 + C70804 + C70805 + C70806) * C153637 * C153684 +
            (C70802 + C70801 + C70800 + C70799) * C153637 * C70498) *
               C153537 * C299 +
           ((C70806 + C70805 + C70804 + C70803) * C153637 * C70498 +
            (C70500 * C1196 - C70501 * C1187 - C70500 * C1197 +
             C153942 * C1202 + C70502 * C1194 - C70503 * C1186 -
             C70502 * C1195 + C153935 * C1201 + C70504 * C1192 -
             C70505 * C1185 - C70504 * C1193 + C153916 * C1200 +
             C70506 * C1190 - C70507 * C1184 - C70506 * C1191 +
             C153862 * C1199) *
                C153637 * C153684) *
               C153537 * C300) *
              C301 +
          (((C70807 + C70808 + C70809 + C70810) * C153637 * C70498 +
            (C70811 + C70812 + C70813 + C70814) * C153637 * C153684) *
               C153537 * C299 -
           ((C70810 + C70809 + C70808 + C70807) * C153637 * C153684 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C153637 * C70498) *
               C153537 * C298 -
           ((C70506 * C1188 - C70507 * C1183 - C70506 * C1189 +
             C153862 * C1198 + C70504 * C1190 - C70505 * C1184 -
             C70504 * C1191 + C153916 * C1199 + C70502 * C1192 -
             C70503 * C1185 - C70502 * C1193 + C153935 * C1200 +
             C70500 * C1194 - C70501 * C1186 - C70500 * C1195 +
             C153942 * C1201) *
                C153637 * C153684 +
            (C70814 + C70813 + C70812 + C70811) * C153637 * C70498) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
            C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
            C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
            C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
               C153637 * C70498 +
           (C70500 * C323 - C70501 * C307 - C70500 * C324 + C153942 * C343 +
            C70502 * C321 - C70503 * C306 - C70502 * C322 + C153935 * C342 +
            C70504 * C319 - C70505 * C305 - C70504 * C320 + C153916 * C341 +
            C70506 * C317 - C70507 * C304 - C70506 * C318 + C153862 * C340) *
               C153637 * C153684) *
              C153537 * C153521 * C130 -
          ((C70506 * C315 - C70507 * C303 - C70506 * C316 + C153862 * C339 +
            C70504 * C317 - C70505 * C304 - C70504 * C318 + C153916 * C340 +
            C70502 * C319 - C70503 * C305 - C70502 * C320 + C153935 * C341 +
            C70500 * C321 - C70501 * C306 - C70500 * C322 + C153942 * C342) *
               C153637 * C153684 +
           (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
            C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
            C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
            C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
               C153637 * C70498) *
              C153537 * C153521 * C131 +
          ((C70500 * C156 - C70501 * C146 - C70500 * C157 + C153942 * C170 +
            C70502 * C158 - C70503 * C147 - C70502 * C159 + C153935 * C171 +
            C70504 * C160 - C70505 * C148 - C70504 * C161 + C153916 * C172 +
            C70506 * C162 - C70507 * C149 - C70506 * C163 + C153862 * C173) *
               C153637 * C70498 +
           (C70500 * C319 - C70501 * C305 - C70500 * C320 + C153942 * C341 +
            C70502 * C317 - C70503 * C304 - C70502 * C318 + C153935 * C340 +
            C70504 * C315 - C70505 * C303 - C70504 * C316 + C153916 * C339 +
            C70506 * C335 - C70507 * C313 - C70506 * C336 + C153862 * C349) *
               C153637 * C153684) *
              C153537 * C153521 * C132 -
          ((C70506 * C652 - C70507 * C651 - C70506 * C653 + C153862 * C654 +
            C70504 * C335 - C70505 * C313 - C70504 * C336 + C153916 * C349 +
            C70502 * C315 - C70503 * C303 - C70502 * C316 + C153935 * C339 +
            C70500 * C317 - C70501 * C304 - C70500 * C318 + C153942 * C340) *
               C153637 * C153684 +
           (C70506 * C164 - C70507 * C150 - C70506 * C165 + C153862 * C174 +
            C70504 * C162 - C70505 * C149 - C70504 * C163 + C153916 * C173 +
            C70502 * C160 - C70503 * C148 - C70502 * C161 + C153935 * C172 +
            C70500 * C158 - C70501 * C147 - C70500 * C159 + C153942 * C171) *
               C153637 * C70498) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C153637 * C70498 +
            (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
               C473 -
           ((C70506 * C957 - C70507 * C948 - C70506 * C958 + C153862 * C966 +
             C70504 * C955 - C70505 * C947 - C70504 * C956 + C153916 * C965 +
             C70502 * C953 - C70503 * C946 - C70502 * C954 + C153935 * C964 +
             C70500 * C951 - C70501 * C945 - C70500 * C952 + C153942 * C963) *
                C153637 * C153684 +
            (C70506 * C490 - C70507 * C477 - C70506 * C491 + C153862 * C513 +
             C70504 * C492 - C70505 * C478 - C70504 * C493 + C153916 * C514 +
             C70502 * C494 - C70503 * C479 - C70502 * C495 + C153935 * C515 +
             C70500 * C496 - C70501 * C480 - C70500 * C497 + C153942 * C516) *
                C153637 * C70498) *
               C474 +
           ((C70500 * C498 - C70501 * C481 - C70500 * C499 + C153942 * C517 +
             C70502 * C500 - C70503 * C482 - C70502 * C501 + C153935 * C518 +
             C70504 * C502 - C70505 * C483 - C70504 * C503 + C153916 * C519 +
             C70506 * C504 - C70507 * C484 - C70506 * C505 + C153862 * C520) *
                C153637 * C70498 +
            (C70500 * C1338 - C70501 * C1329 - C70500 * C1339 +
             C153942 * C1344 + C70502 * C1336 - C70503 * C1328 -
             C70502 * C1337 + C153935 * C1343 + C70504 * C1334 -
             C70505 * C1327 - C70504 * C1335 + C153916 * C1342 +
             C70506 * C1332 - C70507 * C1326 - C70506 * C1333 +
             C153862 * C1341) *
                C153637 * C153684) *
               C475) *
              C153521 * C301 +
          (((C70500 * C494 - C70501 * C479 - C70500 * C495 + C153942 * C515 +
             C70502 * C492 - C70503 * C478 - C70502 * C493 + C153935 * C514 +
             C70504 * C490 - C70505 * C477 - C70504 * C491 + C153916 * C513 +
             C70506 * C488 - C70507 * C476 - C70506 * C489 + C153862 * C512) *
                C153637 * C70498 +
            (C70500 * C953 - C70501 * C946 - C70500 * C954 + C153942 * C964 +
             C70502 * C955 - C70503 * C947 - C70502 * C956 + C153935 * C965 +
             C70504 * C957 - C70505 * C948 - C70504 * C958 + C153916 * C966 +
             C70506 * C959 - C70507 * C949 - C70506 * C960 + C153862 * C967) *
                C153637 * C153684) *
               C474 -
           ((C70810 + C70809 + C70808 + C70807) * C153637 * C153684 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C153637 * C70498) *
               C473 -
           ((C70506 * C1330 - C70507 * C1325 - C70506 * C1331 +
             C153862 * C1340 + C70504 * C1332 - C70505 * C1326 -
             C70504 * C1333 + C153916 * C1341 + C70502 * C1334 -
             C70503 * C1327 - C70502 * C1335 + C153935 * C1342 +
             C70500 * C1336 - C70501 * C1328 - C70500 * C1337 +
             C153942 * C1343) *
                C153637 * C153684 +
            (C70506 * C506 - C70507 * C485 - C70506 * C507 + C153862 * C521 +
             C70504 * C504 - C70505 * C484 - C70504 * C505 + C153916 * C520 +
             C70502 * C502 - C70503 * C483 - C70502 * C503 + C153935 * C519 +
             C70500 * C500 - C70501 * C482 - C70500 * C501 + C153942 * C518) *
                C153637 * C70498) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
            C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
               C153637 * C153943 +
           (C74286 * C323 - C74287 * C307 - C74286 * C324 + C74280 * C343 +
            C74288 * C321 - C74289 * C306 - C74288 * C322 + C153472 * C342) *
               C153637 * C153939 +
           (C74286 * C325 - C74287 * C308 - C74286 * C326 + C74280 * C344 +
            C74288 * C327 - C74289 * C309 - C74288 * C328 + C153472 * C345) *
               C153637 * C153929 +
           (C74286 * C1196 - C74287 * C1187 - C74286 * C1197 + C74280 * C1202 +
            C74288 * C1194 - C74289 * C1186 - C74288 * C1195 +
            C153472 * C1201) *
               C153637 * C153871) *
              C153537 * C153521 * C130 -
          ((C74288 * C1192 - C74289 * C1185 - C74288 * C1193 + C153472 * C1200 +
            C74286 * C1194 - C74287 * C1186 - C74286 * C1195 + C74280 * C1201) *
               C153637 * C153871 +
           (C74288 * C329 - C74289 * C310 - C74288 * C330 + C153472 * C346 +
            C74286 * C327 - C74287 * C309 - C74286 * C328 + C74280 * C345) *
               C153637 * C153929 +
           (C74288 * C319 - C74289 * C305 - C74288 * C320 + C153472 * C341 +
            C74286 * C321 - C74287 * C306 - C74286 * C322 + C74280 * C342) *
               C153637 * C153939 +
           (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
            C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
               C153637 * C153943) *
              C153537 * C153521 * C131 +
          ((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
            C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
               C153637 * C153943 +
           (C74286 * C319 - C74287 * C305 - C74286 * C320 + C74280 * C341 +
            C74288 * C317 - C74289 * C304 - C74288 * C318 + C153472 * C340) *
               C153637 * C153939 +
           (C74286 * C329 - C74287 * C310 - C74286 * C330 + C74280 * C346 +
            C74288 * C331 - C74289 * C311 - C74288 * C332 + C153472 * C347) *
               C153637 * C153929 +
           (C74286 * C1192 - C74287 * C1185 - C74286 * C1193 + C74280 * C1200 +
            C74288 * C1190 - C74289 * C1184 - C74288 * C1191 +
            C153472 * C1199) *
               C153637 * C153871) *
              C153537 * C153521 * C132 -
          ((C74288 * C1188 - C74289 * C1183 - C74288 * C1189 + C153472 * C1198 +
            C74286 * C1190 - C74287 * C1184 - C74286 * C1191 + C74280 * C1199) *
               C153637 * C153871 +
           (C74288 * C333 - C74289 * C312 - C74288 * C334 + C153472 * C348 +
            C74286 * C331 - C74287 * C311 - C74286 * C332 + C74280 * C347) *
               C153637 * C153929 +
           (C74288 * C315 - C74289 * C303 - C74288 * C316 + C153472 * C339 +
            C74286 * C317 - C74287 * C304 - C74286 * C318 + C74280 * C340) *
               C153637 * C153939 +
           (C74288 * C160 - C74289 * C148 - C74288 * C161 + C153472 * C172 +
            C74286 * C158 - C74287 * C147 - C74286 * C159 + C74280 * C171) *
               C153637 * C153943) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153637 * C153943 +
            (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
            C74602 * C153871) *
               C153537 * C298 -
           ((C74587 + C74588) * C153637 * C153871 +
            (C74586 + C74585) * C153637 * C153929 +
            (C74584 + C74583) * C153637 * C153939 +
            (C74582 + C74581) * C153637 * C153943) *
               C153537 * C299 +
           (C74601 * C153943 + C74602 * C153939 +
            (C74588 + C74587) * C153637 * C153929 +
            (C74286 * C4534 - C74287 * C4529 - C74286 * C4535 + C74280 * C4538 +
             C74288 * C4532 - C74289 * C4528 - C74288 * C4533 +
             C153472 * C4537) *
                C153637 * C153871) *
               C153537 * C300) *
              C301 +
          (((C74589 + C74590) * C153637 * C153943 +
            (C74591 + C74592) * C153637 * C153939 +
            (C74593 + C74594) * C153637 * C153929 +
            (C74595 + C74596) * C153637 * C153871) *
               C153537 * C299 -
           (C74603 * C153871 + C74604 * C153929 +
            (C74590 + C74589) * C153637 * C153939 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153637 * C153943) *
               C153537 * C298 -
           ((C74288 * C4530 - C74289 * C4527 - C74288 * C4531 +
             C153472 * C4536 + C74286 * C4532 - C74287 * C4528 -
             C74286 * C4533 + C74280 * C4537) *
                C153637 * C153871 +
            (C74596 + C74595) * C153637 * C153929 + C74603 * C153939 +
            C74604 * C153943) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153637 * C153943 +
            (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
            C74602 * C153871) *
               C473 -
           ((C74288 * C4069 - C74289 * C4064 - C74288 * C4070 +
             C153472 * C4076 + C74286 * C4067 - C74287 * C4063 -
             C74286 * C4068 + C74280 * C4075) *
                C153637 * C153871 +
            (C74288 * C1767 - C74289 * C1759 - C74288 * C1768 +
             C153472 * C1774 + C74286 * C1769 - C74287 * C1760 -
             C74286 * C1770 + C74280 * C1775) *
                C153637 * C153929 +
            (C74288 * C953 - C74289 * C946 - C74288 * C954 + C153472 * C964 +
             C74286 * C951 - C74287 * C945 - C74286 * C952 + C74280 * C963) *
                C153637 * C153939 +
            (C74288 * C494 - C74289 * C479 - C74288 * C495 + C153472 * C515 +
             C74286 * C496 - C74287 * C480 - C74286 * C497 + C74280 * C516) *
                C153637 * C153943) *
               C474 +
           ((C74286 * C498 - C74287 * C481 - C74286 * C499 + C74280 * C517 +
             C74288 * C500 - C74289 * C482 - C74288 * C501 + C153472 * C518) *
                C153637 * C153943 +
            (C74286 * C1338 - C74287 * C1329 - C74286 * C1339 + C74280 * C1344 +
             C74288 * C1336 - C74289 * C1328 - C74288 * C1337 +
             C153472 * C1343) *
                C153637 * C153939 +
            (C74286 * C3283 - C74287 * C3279 - C74286 * C3284 + C74280 * C3291 +
             C74288 * C3285 - C74289 * C3280 - C74288 * C3286 +
             C153472 * C3292) *
                C153637 * C153929 +
            (C74286 * C4788 - C74287 * C4783 - C74286 * C4789 + C74280 * C4792 +
             C74288 * C4786 - C74289 * C4782 - C74288 * C4787 +
             C153472 * C4791) *
                C153637 * C153871) *
               C475) *
              C153521 * C301 +
          (((C74286 * C494 - C74287 * C479 - C74286 * C495 + C74280 * C515 +
             C74288 * C492 - C74289 * C478 - C74288 * C493 + C153472 * C514) *
                C153637 * C153943 +
            (C74286 * C953 - C74287 * C946 - C74286 * C954 + C74280 * C964 +
             C74288 * C955 - C74289 * C947 - C74288 * C956 + C153472 * C965) *
                C153637 * C153939 +
            (C74286 * C1767 - C74287 * C1759 - C74286 * C1768 + C74280 * C1774 +
             C74288 * C1765 - C74289 * C1758 - C74288 * C1766 +
             C153472 * C1773) *
                C153637 * C153929 +
            (C74286 * C4069 - C74287 * C4064 - C74286 * C4070 + C74280 * C4076 +
             C74288 * C4071 - C74289 * C4065 - C74288 * C4072 +
             C153472 * C4077) *
                C153637 * C153871) *
               C474 -
           (C74603 * C153871 + C74604 * C153929 +
            (C74590 + C74589) * C153637 * C153939 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153637 * C153943) *
               C473 -
           ((C74288 * C4784 - C74289 * C4781 - C74288 * C4785 +
             C153472 * C4790 + C74286 * C4786 - C74287 * C4782 -
             C74286 * C4787 + C74280 * C4791) *
                C153637 * C153871 +
            (C74288 * C3287 - C74289 * C3281 - C74288 * C3288 +
             C153472 * C3293 + C74286 * C3285 - C74287 * C3280 -
             C74286 * C3286 + C74280 * C3292) *
                C153637 * C153929 +
            (C74288 * C1334 - C74289 * C1327 - C74288 * C1335 +
             C153472 * C1342 + C74286 * C1336 - C74287 * C1328 -
             C74286 * C1337 + C74280 * C1343) *
                C153637 * C153939 +
            (C74288 * C502 - C74289 * C483 - C74288 * C503 + C153472 * C519 +
             C74286 * C500 - C74287 * C482 - C74286 * C501 + C74280 * C518) *
                C153637 * C153943) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C153637 * C70498 +
            (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
               C153849 -
           ((C70506 * C957 - C70507 * C948 - C70506 * C958 + C153862 * C966 +
             C70504 * C955 - C70505 * C947 - C70504 * C956 + C153916 * C965 +
             C70502 * C953 - C70503 * C946 - C70502 * C954 + C153935 * C964 +
             C70500 * C951 - C70501 * C945 - C70500 * C952 + C153942 * C963) *
                C153637 * C153684 +
            (C70506 * C490 - C70507 * C477 - C70506 * C491 + C153862 * C513 +
             C70504 * C492 - C70505 * C478 - C70504 * C493 + C153916 * C514 +
             C70502 * C494 - C70503 * C479 - C70502 * C495 + C153935 * C515 +
             C70500 * C496 - C70501 * C480 - C70500 * C497 + C153942 * C516) *
                C153637 * C70498) *
               C153601) *
              C153521 * C153917 +
          (((C70500 * C494 - C70501 * C479 - C70500 * C495 + C153942 * C515 +
             C70502 * C492 - C70503 * C478 - C70502 * C493 + C153935 * C514 +
             C70504 * C490 - C70505 * C477 - C70504 * C491 + C153916 * C513 +
             C70506 * C488 - C70507 * C476 - C70506 * C489 + C153862 * C512) *
                C153637 * C70498 +
            (C70500 * C953 - C70501 * C946 - C70500 * C954 + C153942 * C964 +
             C70502 * C955 - C70503 * C947 - C70502 * C956 + C153935 * C965 +
             C70504 * C957 - C70505 * C948 - C70504 * C958 + C153916 * C966 +
             C70506 * C959 - C70507 * C949 - C70506 * C960 + C153862 * C967) *
                C153637 * C153684) *
               C153601 -
           ((C70810 + C70809 + C70808 + C70807) * C153637 * C153684 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C153637 * C70498) *
               C153849) *
              C153521 * C153918 +
          (((C70500 * C156 - C70501 * C146 - C70500 * C157 + C153942 * C170 +
             C70502 * C158 - C70503 * C147 - C70502 * C159 + C153935 * C171 +
             C70504 * C160 - C70505 * C148 - C70504 * C161 + C153916 * C172 +
             C70506 * C162 - C70507 * C149 - C70506 * C163 + C153862 * C173) *
                C153637 * C70498 +
            (C71227 + C71228 + C71229 + C71230) * C153637 * C153684) *
               C153849 -
           ((C70506 * C961 - C70507 * C950 - C70506 * C962 + C153862 * C968 +
             C70504 * C959 - C70505 * C949 - C70504 * C960 + C153916 * C967 +
             C70502 * C957 - C70503 * C948 - C70502 * C958 + C153935 * C966 +
             C70500 * C955 - C70501 * C947 - C70500 * C956 + C153942 * C965) *
                C153637 * C153684 +
            (C70506 * C508 - C70507 * C486 - C70506 * C509 + C153862 * C522 +
             C70504 * C488 - C70505 * C476 - C70504 * C489 + C153916 * C512 +
             C70502 * C490 - C70503 * C477 - C70502 * C491 + C153935 * C513 +
             C70500 * C492 - C70501 * C478 - C70500 * C493 + C153942 * C514) *
                C153637 * C70498) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153637 * C153943 +
            (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
            C74602 * C153871) *
               C153849 -
           ((C74288 * C4069 - C74289 * C4064 - C74288 * C4070 +
             C153472 * C4076 + C74286 * C4067 - C74287 * C4063 -
             C74286 * C4068 + C74280 * C4075) *
                C153637 * C153871 +
            (C74288 * C1767 - C74289 * C1759 - C74288 * C1768 +
             C153472 * C1774 + C74286 * C1769 - C74287 * C1760 -
             C74286 * C1770 + C74280 * C1775) *
                C153637 * C153929 +
            (C74288 * C953 - C74289 * C946 - C74288 * C954 + C153472 * C964 +
             C74286 * C951 - C74287 * C945 - C74286 * C952 + C74280 * C963) *
                C153637 * C153939 +
            (C74288 * C494 - C74289 * C479 - C74288 * C495 + C153472 * C515 +
             C74286 * C496 - C74287 * C480 - C74286 * C497 + C74280 * C516) *
                C153637 * C153943) *
               C153601) *
              C153521 * C153917 +
          (((C74286 * C494 - C74287 * C479 - C74286 * C495 + C74280 * C515 +
             C74288 * C492 - C74289 * C478 - C74288 * C493 + C153472 * C514) *
                C153637 * C153943 +
            (C74286 * C953 - C74287 * C946 - C74286 * C954 + C74280 * C964 +
             C74288 * C955 - C74289 * C947 - C74288 * C956 + C153472 * C965) *
                C153637 * C153939 +
            (C74286 * C1767 - C74287 * C1759 - C74286 * C1768 + C74280 * C1774 +
             C74288 * C1765 - C74289 * C1758 - C74288 * C1766 +
             C153472 * C1773) *
                C153637 * C153929 +
            (C74286 * C4069 - C74287 * C4064 - C74286 * C4070 + C74280 * C4076 +
             C74288 * C4071 - C74289 * C4065 - C74288 * C4072 +
             C153472 * C4077) *
                C153637 * C153871) *
               C153601 -
           (C74603 * C153871 + C74604 * C153929 +
            (C74590 + C74589) * C153637 * C153939 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153637 * C153943) *
               C153849) *
              C153521 * C153918 +
          (((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
             C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                C153637 * C153943 +
            (C75029 + C75030) * C153637 * C153939 +
            (C75031 + C75032) * C153637 * C153929 +
            (C75033 + C75034) * C153637 * C153871) *
               C153849 -
           ((C74288 * C4073 - C74289 * C4066 - C74288 * C4074 +
             C153472 * C4078 + C74286 * C4071 - C74287 * C4065 -
             C74286 * C4072 + C74280 * C4077) *
                C153637 * C153871 +
            (C74288 * C1763 - C74289 * C1757 - C74288 * C1764 +
             C153472 * C1772 + C74286 * C1765 - C74287 * C1758 -
             C74286 * C1766 + C74280 * C1773) *
                C153637 * C153929 +
            (C74288 * C957 - C74289 * C948 - C74288 * C958 + C153472 * C966 +
             C74286 * C955 - C74287 * C947 - C74286 * C956 + C74280 * C965) *
                C153637 * C153939 +
            (C74288 * C490 - C74289 * C477 - C74288 * C491 + C153472 * C513 +
             C74286 * C492 - C74287 * C478 - C74286 * C493 + C74280 * C514) *
                C153637 * C153943) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
            C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
            C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
            C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
               C153637 * C70498 +
           (C70500 * C323 - C70501 * C307 - C70500 * C324 + C153942 * C343 +
            C70502 * C321 - C70503 * C306 - C70502 * C322 + C153935 * C342 +
            C70504 * C319 - C70505 * C305 - C70504 * C320 + C153916 * C341 +
            C70506 * C317 - C70507 * C304 - C70506 * C318 + C153862 * C340) *
               C153637 * C153684) *
              C153537 * C153521 * C130 -
          ((C70506 * C315 - C70507 * C303 - C70506 * C316 + C153862 * C339 +
            C70504 * C317 - C70505 * C304 - C70504 * C318 + C153916 * C340 +
            C70502 * C319 - C70503 * C305 - C70502 * C320 + C153935 * C341 +
            C70500 * C321 - C70501 * C306 - C70500 * C322 + C153942 * C342) *
               C153637 * C153684 +
           (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
            C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
            C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
            C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
               C153637 * C70498) *
              C153537 * C153521 * C131 +
          ((C70500 * C156 - C70501 * C146 - C70500 * C157 + C153942 * C170 +
            C70502 * C158 - C70503 * C147 - C70502 * C159 + C153935 * C171 +
            C70504 * C160 - C70505 * C148 - C70504 * C161 + C153916 * C172 +
            C70506 * C162 - C70507 * C149 - C70506 * C163 + C153862 * C173) *
               C153637 * C70498 +
           (C70500 * C319 - C70501 * C305 - C70500 * C320 + C153942 * C341 +
            C70502 * C317 - C70503 * C304 - C70502 * C318 + C153935 * C340 +
            C70504 * C315 - C70505 * C303 - C70504 * C316 + C153916 * C339 +
            C70506 * C335 - C70507 * C313 - C70506 * C336 + C153862 * C349) *
               C153637 * C153684) *
              C153537 * C153521 * C132 -
          ((C70506 * C652 - C70507 * C651 - C70506 * C653 + C153862 * C654 +
            C70504 * C335 - C70505 * C313 - C70504 * C336 + C153916 * C349 +
            C70502 * C315 - C70503 * C303 - C70502 * C316 + C153935 * C339 +
            C70500 * C317 - C70501 * C304 - C70500 * C318 + C153942 * C340) *
               C153637 * C153684 +
           (C70506 * C164 - C70507 * C150 - C70506 * C165 + C153862 * C174 +
            C70504 * C162 - C70505 * C149 - C70504 * C163 + C153916 * C173 +
            C70502 * C160 - C70503 * C148 - C70502 * C161 + C153935 * C172 +
            C70500 * C158 - C70501 * C147 - C70500 * C159 + C153942 * C171) *
               C153637 * C70498) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C153637 * C70498 +
            (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
               C153537 * C298 -
           ((C70803 + C70804 + C70805 + C70806) * C153637 * C153684 +
            (C70802 + C70801 + C70800 + C70799) * C153637 * C70498) *
               C153537 * C299 +
           ((C70806 + C70805 + C70804 + C70803) * C153637 * C70498 +
            (C70500 * C1196 - C70501 * C1187 - C70500 * C1197 +
             C153942 * C1202 + C70502 * C1194 - C70503 * C1186 -
             C70502 * C1195 + C153935 * C1201 + C70504 * C1192 -
             C70505 * C1185 - C70504 * C1193 + C153916 * C1200 +
             C70506 * C1190 - C70507 * C1184 - C70506 * C1191 +
             C153862 * C1199) *
                C153637 * C153684) *
               C153537 * C300) *
              C301 +
          (((C70807 + C70808 + C70809 + C70810) * C153637 * C70498 +
            (C70811 + C70812 + C70813 + C70814) * C153637 * C153684) *
               C153537 * C299 -
           ((C70810 + C70809 + C70808 + C70807) * C153637 * C153684 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C153637 * C70498) *
               C153537 * C298 -
           ((C70506 * C1188 - C70507 * C1183 - C70506 * C1189 +
             C153862 * C1198 + C70504 * C1190 - C70505 * C1184 -
             C70504 * C1191 + C153916 * C1199 + C70502 * C1192 -
             C70503 * C1185 - C70502 * C1193 + C153935 * C1200 +
             C70500 * C1194 - C70501 * C1186 - C70500 * C1195 +
             C153942 * C1201) *
                C153637 * C153684 +
            (C70814 + C70813 + C70812 + C70811) * C153637 * C70498) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
            C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
               C153637 * C153943 +
           (C74286 * C323 - C74287 * C307 - C74286 * C324 + C74280 * C343 +
            C74288 * C321 - C74289 * C306 - C74288 * C322 + C153472 * C342) *
               C153637 * C153939 +
           (C74286 * C325 - C74287 * C308 - C74286 * C326 + C74280 * C344 +
            C74288 * C327 - C74289 * C309 - C74288 * C328 + C153472 * C345) *
               C153637 * C153929 +
           (C74286 * C1196 - C74287 * C1187 - C74286 * C1197 + C74280 * C1202 +
            C74288 * C1194 - C74289 * C1186 - C74288 * C1195 +
            C153472 * C1201) *
               C153637 * C153871) *
              C153537 * C153521 * C130 -
          ((C74288 * C1192 - C74289 * C1185 - C74288 * C1193 + C153472 * C1200 +
            C74286 * C1194 - C74287 * C1186 - C74286 * C1195 + C74280 * C1201) *
               C153637 * C153871 +
           (C74288 * C329 - C74289 * C310 - C74288 * C330 + C153472 * C346 +
            C74286 * C327 - C74287 * C309 - C74286 * C328 + C74280 * C345) *
               C153637 * C153929 +
           (C74288 * C319 - C74289 * C305 - C74288 * C320 + C153472 * C341 +
            C74286 * C321 - C74287 * C306 - C74286 * C322 + C74280 * C342) *
               C153637 * C153939 +
           (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
            C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
               C153637 * C153943) *
              C153537 * C153521 * C131 +
          ((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
            C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
               C153637 * C153943 +
           (C74286 * C319 - C74287 * C305 - C74286 * C320 + C74280 * C341 +
            C74288 * C317 - C74289 * C304 - C74288 * C318 + C153472 * C340) *
               C153637 * C153939 +
           (C74286 * C329 - C74287 * C310 - C74286 * C330 + C74280 * C346 +
            C74288 * C331 - C74289 * C311 - C74288 * C332 + C153472 * C347) *
               C153637 * C153929 +
           (C74286 * C1192 - C74287 * C1185 - C74286 * C1193 + C74280 * C1200 +
            C74288 * C1190 - C74289 * C1184 - C74288 * C1191 +
            C153472 * C1199) *
               C153637 * C153871) *
              C153537 * C153521 * C132 -
          ((C74288 * C1188 - C74289 * C1183 - C74288 * C1189 + C153472 * C1198 +
            C74286 * C1190 - C74287 * C1184 - C74286 * C1191 + C74280 * C1199) *
               C153637 * C153871 +
           (C74288 * C333 - C74289 * C312 - C74288 * C334 + C153472 * C348 +
            C74286 * C331 - C74287 * C311 - C74286 * C332 + C74280 * C347) *
               C153637 * C153929 +
           (C74288 * C315 - C74289 * C303 - C74288 * C316 + C153472 * C339 +
            C74286 * C317 - C74287 * C304 - C74286 * C318 + C74280 * C340) *
               C153637 * C153939 +
           (C74288 * C160 - C74289 * C148 - C74288 * C161 + C153472 * C172 +
            C74286 * C158 - C74287 * C147 - C74286 * C159 + C74280 * C171) *
               C153637 * C153943) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153637 * C153943 +
            (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
            C74602 * C153871) *
               C153537 * C298 -
           ((C74587 + C74588) * C153637 * C153871 +
            (C74586 + C74585) * C153637 * C153929 +
            (C74584 + C74583) * C153637 * C153939 +
            (C74582 + C74581) * C153637 * C153943) *
               C153537 * C299 +
           (C74601 * C153943 + C74602 * C153939 +
            (C74588 + C74587) * C153637 * C153929 +
            (C74286 * C4534 - C74287 * C4529 - C74286 * C4535 + C74280 * C4538 +
             C74288 * C4532 - C74289 * C4528 - C74288 * C4533 +
             C153472 * C4537) *
                C153637 * C153871) *
               C153537 * C300) *
              C301 +
          (((C74589 + C74590) * C153637 * C153943 +
            (C74591 + C74592) * C153637 * C153939 +
            (C74593 + C74594) * C153637 * C153929 +
            (C74595 + C74596) * C153637 * C153871) *
               C153537 * C299 -
           (C74603 * C153871 + C74604 * C153929 +
            (C74590 + C74589) * C153637 * C153939 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153637 * C153943) *
               C153537 * C298 -
           ((C74288 * C4530 - C74289 * C4527 - C74288 * C4531 +
             C153472 * C4536 + C74286 * C4532 - C74287 * C4528 -
             C74286 * C4533 + C74280 * C4537) *
                C153637 * C153871 +
            (C74596 + C74595) * C153637 * C153929 + C74603 * C153939 +
            C74604 * C153943) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C153637 * C70498 +
            (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
               C153537 * C153919 -
           ((C70803 + C70804 + C70805 + C70806) * C153637 * C153684 +
            (C70802 + C70801 + C70800 + C70799) * C153637 * C70498) *
               C153537 * C153920 +
           ((C70806 + C70805 + C70804 + C70803) * C153637 * C70498 +
            (C72087 + C72088 + C72089 + C72090) * C153637 * C153684) *
               C153537 * C1469) *
              C153840 +
          (((C70807 + C70808 + C70809 + C70810) * C153637 * C70498 +
            (C70811 + C70812 + C70813 + C70814) * C153637 * C153684) *
               C153537 * C153920 -
           ((C70810 + C70809 + C70808 + C70807) * C153637 * C153684 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C153637 * C70498) *
               C153537 * C153919 -
           ((C70506 * C1188 - C70507 * C1183 - C70506 * C1189 +
             C153862 * C1198 + C70504 * C1190 - C70505 * C1184 -
             C70504 * C1191 + C153916 * C1199 + C70502 * C1192 -
             C70503 * C1185 - C70502 * C1193 + C153935 * C1200 +
             C70500 * C1194 - C70501 * C1186 - C70500 * C1195 +
             C153942 * C1201) *
                C153637 * C153684 +
            (C70814 + C70813 + C70812 + C70811) * C153637 * C70498) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153637 * C153943 +
            (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
            C74602 * C153871) *
               C153537 * C153919 -
           (C75905 * C153871 + C75906 * C153929 +
            (C74584 + C74583) * C153637 * C153939 +
            (C74582 + C74581) * C153637 * C153943) *
               C153537 * C153920 +
           (C74601 * C153943 + C74602 * C153939 +
            (C74588 + C74587) * C153637 * C153929 +
            (C75911 + C75912) * C153637 * C153871) *
               C153537 * C1469) *
              C153840 +
          (((C74589 + C74590) * C153637 * C153943 +
            (C74591 + C74592) * C153637 * C153939 +
            (C74593 + C74594) * C153637 * C153929 +
            (C74595 + C74596) * C153637 * C153871) *
               C153537 * C153920 -
           (C74603 * C153871 + C74604 * C153929 +
            (C74590 + C74589) * C153637 * C153939 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153637 * C153943) *
               C153537 * C153919 -
           ((C74288 * C4530 - C74289 * C4527 - C74288 * C4531 +
             C153472 * C4536 + C74286 * C4532 - C74287 * C4528 -
             C74286 * C4533 + C74280 * C4537) *
                C153637 * C153871 +
            (C74596 + C74595) * C153637 * C153929 + C74603 * C153939 +
            C74604 * C153943) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C153637 * C70498 +
            (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
               C153849 -
           ((C71731 + C71732 + C71733 + C71734) * C153637 * C153684 +
            (C70506 * C490 - C70507 * C477 - C70506 * C491 + C153862 * C513 +
             C70504 * C492 - C70505 * C478 - C70504 * C493 + C153916 * C514 +
             C70502 * C494 - C70503 * C479 - C70502 * C495 + C153935 * C515 +
             C70500 * C496 - C70501 * C480 - C70500 * C497 + C153942 * C516) *
                C153637 * C70498) *
               C153601) *
              C153919 +
          (((C71734 + C71733 + C71732 + C71731) * C153637 * C70498 +
            (C72983 + C72984 + C72985 + C72986) * C153637 * C153684) *
               C153601 -
           ((C70803 + C70804 + C70805 + C70806) * C153637 * C153684 +
            (C70802 + C70801 + C70800 + C70799) * C153637 * C70498) *
               C153849) *
              C153920 +
          (((C70806 + C70805 + C70804 + C70803) * C153637 * C70498 +
            (C72087 + C72088 + C72089 + C72090) * C153637 * C153684) *
               C153849 -
           ((C70506 * C4073 - C70507 * C4066 - C70506 * C4074 +
             C153862 * C4078 + C70504 * C4071 - C70505 * C4065 -
             C70504 * C4072 + C153916 * C4077 + C70502 * C4069 -
             C70503 * C4064 - C70502 * C4070 + C153935 * C4076 +
             C70500 * C4067 - C70501 * C4063 - C70500 * C4068 +
             C153942 * C4075) *
                C153637 * C153684 +
            (C72986 + C72985 + C72984 + C72983) * C153637 * C70498) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153637 * C153943 +
            (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
            C74602 * C153871) *
               C153849 -
           (C76805 * C153871 + C76806 * C153929 +
            (C75563 + C75564) * C153637 * C153939 +
            (C74288 * C494 - C74289 * C479 - C74288 * C495 + C153472 * C515 +
             C74286 * C496 - C74287 * C480 - C74286 * C497 + C74280 * C516) *
                C153637 * C153943) *
               C153601) *
              C153919 +
          (((C75564 + C75563) * C153637 * C153943 +
            (C75562 + C75561) * C153637 * C153939 +
            (C75560 + C75559) * C153637 * C153929 +
            (C76811 + C76812) * C153637 * C153871) *
               C153601 -
           (C75905 * C153871 + C75906 * C153929 +
            (C74584 + C74583) * C153637 * C153939 +
            (C74582 + C74581) * C153637 * C153943) *
               C153849) *
              C153920 +
          ((C74601 * C153943 + C74602 * C153939 +
            (C74588 + C74587) * C153637 * C153929 +
            (C75911 + C75912) * C153637 * C153871) *
               C153849 -
           ((C74288 * C28996 - C74289 * C28993 - C74288 * C28997 +
             C153472 * C28999 + C74286 * C28994 - C74287 * C28992 -
             C74286 * C28995 + C74280 * C28998) *
                C153637 * C153871 +
            (C76812 + C76811) * C153637 * C153929 + C76805 * C153939 +
            C76806 * C153943) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
            C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
            C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
            C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
               C153637 * C70498 +
           (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
              C153537 * C1178 -
          ((C70803 + C70804 + C70805 + C70806) * C153637 * C153684 +
           (C70802 + C70801 + C70800 + C70799) * C153637 * C70498) *
              C153537 * C1179 +
          ((C70806 + C70805 + C70804 + C70803) * C153637 * C70498 +
           (C72087 + C72088 + C72089 + C72090) * C153637 * C153684) *
              C153537 * C1180 -
          ((C70506 * C2923 - C70507 * C2916 - C70506 * C2924 + C153862 * C2928 +
            C70504 * C2921 - C70505 * C2915 - C70504 * C2922 + C153916 * C2927 +
            C70502 * C2919 - C70503 * C2914 - C70502 * C2920 + C153935 * C2926 +
            C70500 * C2917 - C70501 * C2913 - C70500 * C2918 +
            C153942 * C2925) *
               C153637 * C153684 +
           (C72090 + C72089 + C72088 + C72087) * C153637 * C70498) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C153637 * C70498 +
            (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
               C153537 * C1091 -
           ((C70803 + C70804 + C70805 + C70806) * C153637 * C153684 +
            (C70802 + C70801 + C70800 + C70799) * C153637 * C70498) *
               C153537 * C153573) *
              C1093 +
          (((C70807 + C70808 + C70809 + C70810) * C153637 * C70498 +
            (C70811 + C70812 + C70813 + C70814) * C153637 * C153684) *
               C153537 * C153573 -
           ((C70810 + C70809 + C70808 + C70807) * C153637 * C153684 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C153637 * C70498) *
               C153537 * C1091) *
              C1094 +
          (((C70500 * C156 - C70501 * C146 - C70500 * C157 + C153942 * C170 +
             C70502 * C158 - C70503 * C147 - C70502 * C159 + C153935 * C171 +
             C70504 * C160 - C70505 * C148 - C70504 * C161 + C153916 * C172 +
             C70506 * C162 - C70507 * C149 - C70506 * C163 + C153862 * C173) *
                C153637 * C70498 +
            (C71227 + C71228 + C71229 + C71230) * C153637 * C153684) *
               C153537 * C1091 -
           ((C70506 * C337 - C70507 * C314 - C70506 * C338 + C153862 * C350 +
             C70504 * C333 - C70505 * C312 - C70504 * C334 + C153916 * C348 +
             C70502 * C331 - C70503 * C311 - C70502 * C332 + C153935 * C347 +
             C70500 * C329 - C70501 * C310 - C70500 * C330 + C153942 * C346) *
                C153637 * C153684 +
            (C71230 + C71229 + C71228 + C71227) * C153637 * C70498) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C153637 * C70498 +
            (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
               C473 -
           ((C71731 + C71732 + C71733 + C71734) * C153637 * C153684 +
            (C70506 * C490 - C70507 * C477 - C70506 * C491 + C153862 * C513 +
             C70504 * C492 - C70505 * C478 - C70504 * C493 + C153916 * C514 +
             C70502 * C494 - C70503 * C479 - C70502 * C495 + C153935 * C515 +
             C70500 * C496 - C70501 * C480 - C70500 * C497 + C153942 * C516) *
                C153637 * C70498) *
               C474 +
           ((C70500 * C498 - C70501 * C481 - C70500 * C499 + C153942 * C517 +
             C70502 * C500 - C70503 * C482 - C70502 * C501 + C153935 * C518 +
             C70504 * C502 - C70505 * C483 - C70504 * C503 + C153916 * C519 +
             C70506 * C504 - C70507 * C484 - C70506 * C505 + C153862 * C520) *
                C153637 * C70498 +
            (C72309 + C72310 + C72311 + C72312) * C153637 * C153684) *
               C475) *
              C1091 +
          (((C71734 + C71733 + C71732 + C71731) * C153637 * C70498 +
            (C70500 * C1769 - C70501 * C1760 - C70500 * C1770 +
             C153942 * C1775 + C70502 * C1767 - C70503 * C1759 -
             C70502 * C1768 + C153935 * C1774 + C70504 * C1765 -
             C70505 * C1758 - C70504 * C1766 + C153916 * C1773 +
             C70506 * C1763 - C70507 * C1757 - C70506 * C1764 +
             C153862 * C1772) *
                C153637 * C153684) *
               C474 -
           ((C70803 + C70804 + C70805 + C70806) * C153637 * C153684 +
            (C70802 + C70801 + C70800 + C70799) * C153637 * C70498) *
               C473 -
           ((C70506 * C3289 - C70507 * C3282 - C70506 * C3290 +
             C153862 * C3294 + C70504 * C3287 - C70505 * C3281 -
             C70504 * C3288 + C153916 * C3293 + C70502 * C3285 -
             C70503 * C3280 - C70502 * C3286 + C153935 * C3292 +
             C70500 * C3283 - C70501 * C3279 - C70500 * C3284 +
             C153942 * C3291) *
                C153637 * C153684 +
            (C72312 + C72311 + C72310 + C72309) * C153637 * C70498) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153637 * C153943 +
            (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
            C74602 * C153871) *
               C153537 * C1091 -
           ((C74587 + C74588) * C153637 * C153871 +
            (C74586 + C74585) * C153637 * C153929 +
            (C74584 + C74583) * C153637 * C153939 +
            (C74582 + C74581) * C153637 * C153943) *
               C153537 * C153573) *
              C1093 +
          (((C74589 + C74590) * C153637 * C153943 +
            (C74591 + C74592) * C153637 * C153939 +
            (C74593 + C74594) * C153637 * C153929 +
            (C74595 + C74596) * C153637 * C153871) *
               C153537 * C153573 -
           (C74603 * C153871 + C74604 * C153929 +
            (C74590 + C74589) * C153637 * C153939 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153637 * C153943) *
               C153537 * C1091) *
              C1094 +
          (((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
             C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                C153637 * C153943 +
            (C75029 + C75030) * C153637 * C153939 +
            (C75031 + C75032) * C153637 * C153929 +
            (C75033 + C75034) * C153637 * C153871) *
               C153537 * C1091 -
           ((C74288 * C2923 - C74289 * C2916 - C74288 * C2924 +
             C153472 * C2928 + C74286 * C2921 - C74287 * C2915 -
             C74286 * C2922 + C74280 * C2927) *
                C153637 * C153871 +
            (C75034 + C75033) * C153637 * C153929 +
            (C75032 + C75031) * C153637 * C153939 +
            (C75030 + C75029) * C153637 * C153943) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
            C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
               C153637 * C153943 +
           (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
           C74602 * C153871) *
              C153537 * C1178 -
          (C75905 * C153871 + C75906 * C153929 +
           (C74584 + C74583) * C153637 * C153939 +
           (C74582 + C74581) * C153637 * C153943) *
              C153537 * C1179 +
          (C74601 * C153943 + C74602 * C153939 +
           (C74588 + C74587) * C153637 * C153929 +
           (C75911 + C75912) * C153637 * C153871) *
              C153537 * C1180 -
          ((C74288 * C28340 - C74289 * C28337 - C74288 * C28341 +
            C153472 * C28343 + C74286 * C28338 - C74287 * C28336 -
            C74286 * C28339 + C74280 * C28342) *
               C153637 * C153871 +
           (C75912 + C75911) * C153637 * C153929 + C75905 * C153939 +
           C75906 * C153943) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153637 * C153943 +
            (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
            C74602 * C153871) *
               C473 -
           ((C75559 + C75560) * C153637 * C153871 +
            (C75561 + C75562) * C153637 * C153929 +
            (C75563 + C75564) * C153637 * C153939 +
            (C74288 * C494 - C74289 * C479 - C74288 * C495 + C153472 * C515 +
             C74286 * C496 - C74287 * C480 - C74286 * C497 + C74280 * C516) *
                C153637 * C153943) *
               C474 +
           ((C74286 * C498 - C74287 * C481 - C74286 * C499 + C74280 * C517 +
             C74288 * C500 - C74289 * C482 - C74288 * C501 + C153472 * C518) *
                C153637 * C153943 +
            (C76143 + C76144) * C153637 * C153939 +
            (C76145 + C76146) * C153637 * C153929 +
            (C76147 + C76148) * C153637 * C153871) *
               C475) *
              C1091 +
          (((C75564 + C75563) * C153637 * C153943 +
            (C75562 + C75561) * C153637 * C153939 +
            (C75560 + C75559) * C153637 * C153929 +
            (C74286 * C5568 - C74287 * C5563 - C74286 * C5569 + C74280 * C5572 +
             C74288 * C5566 - C74289 * C5562 - C74288 * C5567 +
             C153472 * C5571) *
                C153637 * C153871) *
               C474 -
           (C75905 * C153871 + C75906 * C153929 +
            (C74584 + C74583) * C153637 * C153939 +
            (C74582 + C74581) * C153637 * C153943) *
               C473 -
           ((C74288 * C28550 - C74289 * C28547 - C74288 * C28551 +
             C153472 * C28553 + C74286 * C28548 - C74287 * C28546 -
             C74286 * C28549 + C74280 * C28552) *
                C153637 * C153871 +
            (C76148 + C76147) * C153637 * C153929 +
            (C76146 + C76145) * C153637 * C153939 +
            (C76144 + C76143) * C153637 * C153943) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
              C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
              C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
              C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                 C153637 * C70498 +
             (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
                C153849 -
            ((C71731 + C71732 + C71733 + C71734) * C153637 * C153684 +
             (C70506 * C490 - C70507 * C477 - C70506 * C491 + C153862 * C513 +
              C70504 * C492 - C70505 * C478 - C70504 * C493 + C153916 * C514 +
              C70502 * C494 - C70503 * C479 - C70502 * C495 + C153935 * C515 +
              C70500 * C496 - C70501 * C480 - C70500 * C497 + C153942 * C516) *
                 C153637 * C70498) *
                C153601) *
               C1091 +
           (((C71734 + C71733 + C71732 + C71731) * C153637 * C70498 +
             (C70500 * C1769 - C70501 * C1760 - C70500 * C1770 +
              C153942 * C1775 + C70502 * C1767 - C70503 * C1759 -
              C70502 * C1768 + C153935 * C1774 + C70504 * C1765 -
              C70505 * C1758 - C70504 * C1766 + C153916 * C1773 +
              C70506 * C1763 - C70507 * C1757 - C70506 * C1764 +
              C153862 * C1772) *
                 C153637 * C153684) *
                C153601 -
            ((C70803 + C70804 + C70805 + C70806) * C153637 * C153684 +
             (C70802 + C70801 + C70800 + C70799) * C153637 * C70498) *
                C153849) *
               C153573) *
              C153840 +
          ((((C70500 * C494 - C70501 * C479 - C70500 * C495 + C153942 * C515 +
              C70502 * C492 - C70503 * C478 - C70502 * C493 + C153935 * C514 +
              C70504 * C490 - C70505 * C477 - C70504 * C491 + C153916 * C513 +
              C70506 * C488 - C70507 * C476 - C70506 * C489 + C153862 * C512) *
                 C153637 * C70498 +
             (C71735 + C71736 + C71737 + C71738) * C153637 * C153684) *
                C153601 -
            ((C70810 + C70809 + C70808 + C70807) * C153637 * C153684 +
             (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
              C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
              C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
              C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                 C153637 * C70498) *
                C153849) *
               C1091 +
           (((C70807 + C70808 + C70809 + C70810) * C153637 * C70498 +
             (C70811 + C70812 + C70813 + C70814) * C153637 * C153684) *
                C153849 -
            ((C70506 * C1761 - C70507 * C1756 - C70506 * C1762 +
              C153862 * C1771 + C70504 * C1763 - C70505 * C1757 -
              C70504 * C1764 + C153916 * C1772 + C70502 * C1765 -
              C70503 * C1758 - C70502 * C1766 + C153935 * C1773 +
              C70500 * C1767 - C70501 * C1759 - C70500 * C1768 +
              C153942 * C1774) *
                 C153637 * C153684 +
             (C71738 + C71737 + C71736 + C71735) * C153637 * C70498) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153637 * C153943 +
             (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
             C74602 * C153871) *
                C153849 -
            ((C75559 + C75560) * C153637 * C153871 +
             (C75561 + C75562) * C153637 * C153929 +
             (C75563 + C75564) * C153637 * C153939 +
             (C74288 * C494 - C74289 * C479 - C74288 * C495 + C153472 * C515 +
              C74286 * C496 - C74287 * C480 - C74286 * C497 + C74280 * C516) *
                 C153637 * C153943) *
                C153601) *
               C1091 +
           (((C75564 + C75563) * C153637 * C153943 +
             (C75562 + C75561) * C153637 * C153939 +
             (C75560 + C75559) * C153637 * C153929 +
             (C74286 * C5568 - C74287 * C5563 - C74286 * C5569 +
              C74280 * C5572 + C74288 * C5566 - C74289 * C5562 -
              C74288 * C5567 + C153472 * C5571) *
                 C153637 * C153871) *
                C153601 -
            (C75905 * C153871 + C75906 * C153929 +
             (C74584 + C74583) * C153637 * C153939 +
             (C74582 + C74581) * C153637 * C153943) *
                C153849) *
               C153573) *
              C153840 +
          ((((C74286 * C494 - C74287 * C479 - C74286 * C495 + C74280 * C515 +
              C74288 * C492 - C74289 * C478 - C74288 * C493 + C153472 * C514) *
                 C153637 * C153943 +
             (C75565 + C75566) * C153637 * C153939 +
             (C75567 + C75568) * C153637 * C153929 +
             (C75569 + C75570) * C153637 * C153871) *
                C153601 -
            (C74603 * C153871 + C74604 * C153929 +
             (C74590 + C74589) * C153637 * C153939 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153637 * C153943) *
                C153849) *
               C1091 +
           (((C74589 + C74590) * C153637 * C153943 +
             (C74591 + C74592) * C153637 * C153939 +
             (C74593 + C74594) * C153637 * C153929 +
             (C74595 + C74596) * C153637 * C153871) *
                C153849 -
            ((C74288 * C5564 - C74289 * C5561 - C74288 * C5565 +
              C153472 * C5570 + C74286 * C5566 - C74287 * C5562 -
              C74286 * C5567 + C74280 * C5571) *
                 C153637 * C153871 +
             (C75570 + C75569) * C153637 * C153929 +
             (C75568 + C75567) * C153637 * C153939 +
             (C75566 + C75565) * C153637 * C153943) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C153637 * C70498 +
            (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
               C153537 * C1091 -
           ((C70803 + C70804 + C70805 + C70806) * C153637 * C153684 +
            (C70802 + C70801 + C70800 + C70799) * C153637 * C70498) *
               C153537 * C153573) *
              C1093 +
          (((C70807 + C70808 + C70809 + C70810) * C153637 * C70498 +
            (C70811 + C70812 + C70813 + C70814) * C153637 * C153684) *
               C153537 * C153573 -
           ((C70810 + C70809 + C70808 + C70807) * C153637 * C153684 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C153637 * C70498) *
               C153537 * C1091) *
              C1094 +
          (((C70500 * C156 - C70501 * C146 - C70500 * C157 + C153942 * C170 +
             C70502 * C158 - C70503 * C147 - C70502 * C159 + C153935 * C171 +
             C70504 * C160 - C70505 * C148 - C70504 * C161 + C153916 * C172 +
             C70506 * C162 - C70507 * C149 - C70506 * C163 + C153862 * C173) *
                C153637 * C70498 +
            (C71227 + C71228 + C71229 + C71230) * C153637 * C153684) *
               C153537 * C1091 -
           ((C70506 * C337 - C70507 * C314 - C70506 * C338 + C153862 * C350 +
             C70504 * C333 - C70505 * C312 - C70504 * C334 + C153916 * C348 +
             C70502 * C331 - C70503 * C311 - C70502 * C332 + C153935 * C347 +
             C70500 * C329 - C70501 * C310 - C70500 * C330 + C153942 * C346) *
                C153637 * C153684 +
            (C71230 + C71229 + C71228 + C71227) * C153637 * C70498) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
            C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
            C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
            C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
               C153637 * C70498 +
           (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
              C153537 * C1178 -
          ((C70803 + C70804 + C70805 + C70806) * C153637 * C153684 +
           (C70802 + C70801 + C70800 + C70799) * C153637 * C70498) *
              C153537 * C1179 +
          ((C70806 + C70805 + C70804 + C70803) * C153637 * C70498 +
           (C72087 + C72088 + C72089 + C72090) * C153637 * C153684) *
              C153537 * C1180 -
          ((C70506 * C2923 - C70507 * C2916 - C70506 * C2924 + C153862 * C2928 +
            C70504 * C2921 - C70505 * C2915 - C70504 * C2922 + C153916 * C2927 +
            C70502 * C2919 - C70503 * C2914 - C70502 * C2920 + C153935 * C2926 +
            C70500 * C2917 - C70501 * C2913 - C70500 * C2918 +
            C153942 * C2925) *
               C153637 * C153684 +
           (C72090 + C72089 + C72088 + C72087) * C153637 * C70498) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153637 * C153943 +
            (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
            C74602 * C153871) *
               C153537 * C1091 -
           ((C74587 + C74588) * C153637 * C153871 +
            (C74586 + C74585) * C153637 * C153929 +
            (C74584 + C74583) * C153637 * C153939 +
            (C74582 + C74581) * C153637 * C153943) *
               C153537 * C153573) *
              C1093 +
          (((C74589 + C74590) * C153637 * C153943 +
            (C74591 + C74592) * C153637 * C153939 +
            (C74593 + C74594) * C153637 * C153929 +
            (C74595 + C74596) * C153637 * C153871) *
               C153537 * C153573 -
           (C74603 * C153871 + C74604 * C153929 +
            (C74590 + C74589) * C153637 * C153939 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153637 * C153943) *
               C153537 * C1091) *
              C1094 +
          (((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
             C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                C153637 * C153943 +
            (C75029 + C75030) * C153637 * C153939 +
            (C75031 + C75032) * C153637 * C153929 +
            (C75033 + C75034) * C153637 * C153871) *
               C153537 * C1091 -
           ((C74288 * C2923 - C74289 * C2916 - C74288 * C2924 +
             C153472 * C2928 + C74286 * C2921 - C74287 * C2915 -
             C74286 * C2922 + C74280 * C2927) *
                C153637 * C153871 +
            (C75034 + C75033) * C153637 * C153929 +
            (C75032 + C75031) * C153637 * C153939 +
            (C75030 + C75029) * C153637 * C153943) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
            C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
               C153637 * C153943 +
           (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
           C74602 * C153871) *
              C153537 * C1178 -
          (C75905 * C153871 + C75906 * C153929 +
           (C74584 + C74583) * C153637 * C153939 +
           (C74582 + C74581) * C153637 * C153943) *
              C153537 * C1179 +
          (C74601 * C153943 + C74602 * C153939 +
           (C74588 + C74587) * C153637 * C153929 +
           (C75911 + C75912) * C153637 * C153871) *
              C153537 * C1180 -
          ((C74288 * C28340 - C74289 * C28337 - C74288 * C28341 +
            C153472 * C28343 + C74286 * C28338 - C74287 * C28336 -
            C74286 * C28339 + C74280 * C28342) *
               C153637 * C153871 +
           (C75912 + C75911) * C153637 * C153929 + C75905 * C153939 +
           C75906 * C153943) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
              C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
              C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
              C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                 C153637 * C70498 +
             (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
                C1898 -
            ((C71731 + C71732 + C71733 + C71734) * C153637 * C153684 +
             (C70506 * C490 - C70507 * C477 - C70506 * C491 + C153862 * C513 +
              C70504 * C492 - C70505 * C478 - C70504 * C493 + C153916 * C514 +
              C70502 * C494 - C70503 * C479 - C70502 * C495 + C153935 * C515 +
              C70500 * C496 - C70501 * C480 - C70500 * C497 + C153942 * C516) *
                 C153637 * C70498) *
                C153601) *
               C153848 +
           (((C71734 + C71733 + C71732 + C71731) * C153637 * C70498 +
             (C72983 + C72984 + C72985 + C72986) * C153637 * C153684) *
                C153601 -
            ((C70803 + C70804 + C70805 + C70806) * C153637 * C153684 +
             (C70802 + C70801 + C70800 + C70799) * C153637 * C70498) *
                C1898) *
               C153573) *
              C153840 +
          ((((C70500 * C494 - C70501 * C479 - C70500 * C495 + C153942 * C515 +
              C70502 * C492 - C70503 * C478 - C70502 * C493 + C153935 * C514 +
              C70504 * C490 - C70505 * C477 - C70504 * C491 + C153916 * C513 +
              C70506 * C488 - C70507 * C476 - C70506 * C489 + C153862 * C512) *
                 C153637 * C70498 +
             (C71735 + C71736 + C71737 + C71738) * C153637 * C153684) *
                C153601 -
            ((C70810 + C70809 + C70808 + C70807) * C153637 * C153684 +
             (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
              C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
              C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
              C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                 C153637 * C70498) *
                C1898) *
               C153848 +
           (((C70807 + C70808 + C70809 + C70810) * C153637 * C70498 +
             (C70811 + C70812 + C70813 + C70814) * C153637 * C153684) *
                C1898 -
            ((C70506 * C1761 - C70507 * C1756 - C70506 * C1762 +
              C153862 * C1771 + C70504 * C1763 - C70505 * C1757 -
              C70504 * C1764 + C153916 * C1772 + C70502 * C1765 -
              C70503 * C1758 - C70502 * C1766 + C153935 * C1773 +
              C70500 * C1767 - C70501 * C1759 - C70500 * C1768 +
              C153942 * C1774) *
                 C153637 * C153684 +
             (C71738 + C71737 + C71736 + C71735) * C153637 * C70498) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153637 * C153943 +
             (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
             C74602 * C153871) *
                C1898 -
            (C76805 * C153871 + C76806 * C153929 +
             (C75563 + C75564) * C153637 * C153939 +
             (C74288 * C494 - C74289 * C479 - C74288 * C495 + C153472 * C515 +
              C74286 * C496 - C74287 * C480 - C74286 * C497 + C74280 * C516) *
                 C153637 * C153943) *
                C153601) *
               C153848 +
           (((C75564 + C75563) * C153637 * C153943 +
             (C75562 + C75561) * C153637 * C153939 +
             (C75560 + C75559) * C153637 * C153929 +
             (C76811 + C76812) * C153637 * C153871) *
                C153601 -
            (C75905 * C153871 + C75906 * C153929 +
             (C74584 + C74583) * C153637 * C153939 +
             (C74582 + C74581) * C153637 * C153943) *
                C1898) *
               C153573) *
              C153840 +
          ((((C74286 * C494 - C74287 * C479 - C74286 * C495 + C74280 * C515 +
              C74288 * C492 - C74289 * C478 - C74288 * C493 + C153472 * C514) *
                 C153637 * C153943 +
             (C75565 + C75566) * C153637 * C153939 +
             (C75567 + C75568) * C153637 * C153929 +
             (C75569 + C75570) * C153637 * C153871) *
                C153601 -
            (C74603 * C153871 + C74604 * C153929 +
             (C74590 + C74589) * C153637 * C153939 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153637 * C153943) *
                C1898) *
               C153848 +
           (((C74589 + C74590) * C153637 * C153943 +
             (C74591 + C74592) * C153637 * C153939 +
             (C74593 + C74594) * C153637 * C153929 +
             (C74595 + C74596) * C153637 * C153871) *
                C1898 -
            ((C74288 * C5564 - C74289 * C5561 - C74288 * C5565 +
              C153472 * C5570 + C74286 * C5566 - C74287 * C5562 -
              C74286 * C5567 + C74280 * C5571) *
                 C153637 * C153871 +
             (C75570 + C75569) * C153637 * C153929 +
             (C75568 + C75567) * C153637 * C153939 +
             (C75566 + C75565) * C153637 * C153943) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C153637 * C70498 +
            (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
               C153921 -
           ((C71731 + C71732 + C71733 + C71734) * C153637 * C153684 +
            (C70506 * C490 - C70507 * C477 - C70506 * C491 + C153862 * C513 +
             C70504 * C492 - C70505 * C478 - C70504 * C493 + C153916 * C514 +
             C70502 * C494 - C70503 * C479 - C70502 * C495 + C153935 * C515 +
             C70500 * C496 - C70501 * C480 - C70500 * C497 + C153942 * C516) *
                C153637 * C70498) *
               C153922 +
           ((C70500 * C498 - C70501 * C481 - C70500 * C499 + C153942 * C517 +
             C70502 * C500 - C70503 * C482 - C70502 * C501 + C153935 * C518 +
             C70504 * C502 - C70505 * C483 - C70504 * C503 + C153916 * C519 +
             C70506 * C504 - C70507 * C484 - C70506 * C505 + C153862 * C520) *
                C153637 * C70498 +
            (C72309 + C72310 + C72311 + C72312) * C153637 * C153684) *
               C2414) *
              C153848 +
          (((C71734 + C71733 + C71732 + C71731) * C153637 * C70498 +
            (C72983 + C72984 + C72985 + C72986) * C153637 * C153684) *
               C153922 -
           ((C70803 + C70804 + C70805 + C70806) * C153637 * C153684 +
            (C70802 + C70801 + C70800 + C70799) * C153637 * C70498) *
               C153921 -
           ((C70506 * C3289 - C70507 * C3282 - C70506 * C3290 +
             C153862 * C3294 + C70504 * C3287 - C70505 * C3281 -
             C70504 * C3288 + C153916 * C3293 + C70502 * C3285 -
             C70503 * C3280 - C70502 * C3286 + C153935 * C3292 +
             C70500 * C3283 - C70501 * C3279 - C70500 * C3284 +
             C153942 * C3291) *
                C153637 * C153684 +
            (C72312 + C72311 + C72310 + C72309) * C153637 * C70498) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153637 * C153943 +
            (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
            C74602 * C153871) *
               C153921 -
           (C76805 * C153871 + C76806 * C153929 +
            (C75563 + C75564) * C153637 * C153939 +
            (C74288 * C494 - C74289 * C479 - C74288 * C495 + C153472 * C515 +
             C74286 * C496 - C74287 * C480 - C74286 * C497 + C74280 * C516) *
                C153637 * C153943) *
               C153922 +
           ((C74286 * C498 - C74287 * C481 - C74286 * C499 + C74280 * C517 +
             C74288 * C500 - C74289 * C482 - C74288 * C501 + C153472 * C518) *
                C153637 * C153943 +
            (C76143 + C76144) * C153637 * C153939 +
            (C76145 + C76146) * C153637 * C153929 +
            (C76147 + C76148) * C153637 * C153871) *
               C2414) *
              C153848 +
          (((C75564 + C75563) * C153637 * C153943 +
            (C75562 + C75561) * C153637 * C153939 +
            (C75560 + C75559) * C153637 * C153929 +
            (C76811 + C76812) * C153637 * C153871) *
               C153922 -
           (C75905 * C153871 + C75906 * C153929 +
            (C74584 + C74583) * C153637 * C153939 +
            (C74582 + C74581) * C153637 * C153943) *
               C153921 -
           ((C74288 * C28550 - C74289 * C28547 - C74288 * C28551 +
             C153472 * C28553 + C74286 * C28548 - C74287 * C28546 -
             C74286 * C28549 + C74280 * C28552) *
                C153637 * C153871 +
            (C76148 + C76147) * C153637 * C153929 +
            (C76146 + C76145) * C153637 * C153939 +
            (C76144 + C76143) * C153637 * C153943) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C153637 * C70498 +
            (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
               C1898 -
           ((C71731 + C71732 + C71733 + C71734) * C153637 * C153684 +
            (C70506 * C490 - C70507 * C477 - C70506 * C491 + C153862 * C513 +
             C70504 * C492 - C70505 * C478 - C70504 * C493 + C153916 * C514 +
             C70502 * C494 - C70503 * C479 - C70502 * C495 + C153935 * C515 +
             C70500 * C496 - C70501 * C480 - C70500 * C497 + C153942 * C516) *
                C153637 * C70498) *
               C153601) *
              C298 +
          (((C71734 + C71733 + C71732 + C71731) * C153637 * C70498 +
            (C72983 + C72984 + C72985 + C72986) * C153637 * C153684) *
               C153601 -
           ((C70803 + C70804 + C70805 + C70806) * C153637 * C153684 +
            (C70802 + C70801 + C70800 + C70799) * C153637 * C70498) *
               C1898) *
              C299 +
          (((C70806 + C70805 + C70804 + C70803) * C153637 * C70498 +
            (C72087 + C72088 + C72089 + C72090) * C153637 * C153684) *
               C1898 -
           ((C70506 * C4073 - C70507 * C4066 - C70506 * C4074 +
             C153862 * C4078 + C70504 * C4071 - C70505 * C4065 -
             C70504 * C4072 + C153916 * C4077 + C70502 * C4069 -
             C70503 * C4064 - C70502 * C4070 + C153935 * C4076 +
             C70500 * C4067 - C70501 * C4063 - C70500 * C4068 +
             C153942 * C4075) *
                C153637 * C153684 +
            (C72986 + C72985 + C72984 + C72983) * C153637 * C70498) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C153637 * C70498 +
            (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
               C1898 -
           ((C71731 + C71732 + C71733 + C71734) * C153637 * C153684 +
            (C70506 * C490 - C70507 * C477 - C70506 * C491 + C153862 * C513 +
             C70504 * C492 - C70505 * C478 - C70504 * C493 + C153916 * C514 +
             C70502 * C494 - C70503 * C479 - C70502 * C495 + C153935 * C515 +
             C70500 * C496 - C70501 * C480 - C70500 * C497 + C153942 * C516) *
                C153637 * C70498) *
               C153601) *
              C153521 * C1093 +
          (((C70500 * C494 - C70501 * C479 - C70500 * C495 + C153942 * C515 +
             C70502 * C492 - C70503 * C478 - C70502 * C493 + C153935 * C514 +
             C70504 * C490 - C70505 * C477 - C70504 * C491 + C153916 * C513 +
             C70506 * C488 - C70507 * C476 - C70506 * C489 + C153862 * C512) *
                C153637 * C70498 +
            (C71735 + C71736 + C71737 + C71738) * C153637 * C153684) *
               C153601 -
           ((C70810 + C70809 + C70808 + C70807) * C153637 * C153684 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C153637 * C70498) *
               C1898) *
              C153521 * C1094 +
          (((C70500 * C156 - C70501 * C146 - C70500 * C157 + C153942 * C170 +
             C70502 * C158 - C70503 * C147 - C70502 * C159 + C153935 * C171 +
             C70504 * C160 - C70505 * C148 - C70504 * C161 + C153916 * C172 +
             C70506 * C162 - C70507 * C149 - C70506 * C163 + C153862 * C173) *
                C153637 * C70498 +
            (C71227 + C71228 + C71229 + C71230) * C153637 * C153684) *
               C1898 -
           ((C70506 * C961 - C70507 * C950 - C70506 * C962 + C153862 * C968 +
             C70504 * C959 - C70505 * C949 - C70504 * C960 + C153916 * C967 +
             C70502 * C957 - C70503 * C948 - C70502 * C958 + C153935 * C966 +
             C70500 * C955 - C70501 * C947 - C70500 * C956 + C153942 * C965) *
                C153637 * C153684 +
            (C70506 * C508 - C70507 * C486 - C70506 * C509 + C153862 * C522 +
             C70504 * C488 - C70505 * C476 - C70504 * C489 + C153916 * C512 +
             C70502 * C490 - C70503 * C477 - C70502 * C491 + C153935 * C513 +
             C70500 * C492 - C70501 * C478 - C70500 * C493 + C153942 * C514) *
                C153637 * C70498) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
            C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
            C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
            C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
               C153637 * C70498 +
           (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
              C2104 -
          ((C71731 + C71732 + C71733 + C71734) * C153637 * C153684 +
           (C70506 * C490 - C70507 * C477 - C70506 * C491 + C153862 * C513 +
            C70504 * C492 - C70505 * C478 - C70504 * C493 + C153916 * C514 +
            C70502 * C494 - C70503 * C479 - C70502 * C495 + C153935 * C515 +
            C70500 * C496 - C70501 * C480 - C70500 * C497 + C153942 * C516) *
               C153637 * C70498) *
              C2105 +
          ((C70500 * C498 - C70501 * C481 - C70500 * C499 + C153942 * C517 +
            C70502 * C500 - C70503 * C482 - C70502 * C501 + C153935 * C518 +
            C70504 * C502 - C70505 * C483 - C70504 * C503 + C153916 * C519 +
            C70506 * C504 - C70507 * C484 - C70506 * C505 + C153862 * C520) *
               C153637 * C70498 +
           (C72309 + C72310 + C72311 + C72312) * C153637 * C153684) *
              C2106 -
          ((C70506 * C8429 - C70507 * C8428 - C70506 * C8430 + C153862 * C8431 +
            C70504 * C6191 - C70505 * C6182 - C70504 * C6192 + C153916 * C6200 +
            C70502 * C6193 - C70503 * C6183 - C70502 * C6194 + C153935 * C6201 +
            C70500 * C6195 - C70501 * C6184 - C70500 * C6196 +
            C153942 * C6202) *
               C153637 * C153684 +
           (C70506 * C2115 - C70507 * C2109 - C70506 * C2116 + C153862 * C2124 +
            C70504 * C2117 - C70505 * C2110 - C70504 * C2118 + C153916 * C2125 +
            C70502 * C2119 - C70503 * C2111 - C70502 * C2120 + C153935 * C2126 +
            C70500 * C2121 - C70501 * C2112 - C70500 * C2122 +
            C153942 * C2127) *
               C153637 * C70498) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153637 * C153943 +
            (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
            C74602 * C153871) *
               C1898 -
           (C76805 * C153871 + C76806 * C153929 +
            (C75563 + C75564) * C153637 * C153939 +
            (C74288 * C494 - C74289 * C479 - C74288 * C495 + C153472 * C515 +
             C74286 * C496 - C74287 * C480 - C74286 * C497 + C74280 * C516) *
                C153637 * C153943) *
               C153601) *
              C153521 * C1093 +
          (((C74286 * C494 - C74287 * C479 - C74286 * C495 + C74280 * C515 +
             C74288 * C492 - C74289 * C478 - C74288 * C493 + C153472 * C514) *
                C153637 * C153943 +
            (C75565 + C75566) * C153637 * C153939 +
            (C75567 + C75568) * C153637 * C153929 +
            (C75569 + C75570) * C153637 * C153871) *
               C153601 -
           (C74603 * C153871 + C74604 * C153929 +
            (C74590 + C74589) * C153637 * C153939 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153637 * C153943) *
               C1898) *
              C153521 * C1094 +
          (((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
             C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                C153637 * C153943 +
            (C75029 + C75030) * C153637 * C153939 +
            (C75031 + C75032) * C153637 * C153929 +
            (C75033 + C75034) * C153637 * C153871) *
               C1898 -
           ((C74288 * C4073 - C74289 * C4066 - C74288 * C4074 +
             C153472 * C4078 + C74286 * C4071 - C74287 * C4065 -
             C74286 * C4072 + C74280 * C4077) *
                C153637 * C153871 +
            (C74288 * C1763 - C74289 * C1757 - C74288 * C1764 +
             C153472 * C1772 + C74286 * C1765 - C74287 * C1758 -
             C74286 * C1766 + C74280 * C1773) *
                C153637 * C153929 +
            (C74288 * C957 - C74289 * C948 - C74288 * C958 + C153472 * C966 +
             C74286 * C955 - C74287 * C947 - C74286 * C956 + C74280 * C965) *
                C153637 * C153939 +
            (C74288 * C490 - C74289 * C477 - C74288 * C491 + C153472 * C513 +
             C74286 * C492 - C74287 * C478 - C74286 * C493 + C74280 * C514) *
                C153637 * C153943) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153637 * C153943 +
            (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
            C74602 * C153871) *
               C1898 -
           (C76805 * C153871 + C76806 * C153929 +
            (C75563 + C75564) * C153637 * C153939 +
            (C74288 * C494 - C74289 * C479 - C74288 * C495 + C153472 * C515 +
             C74286 * C496 - C74287 * C480 - C74286 * C497 + C74280 * C516) *
                C153637 * C153943) *
               C153601) *
              C298 +
          (((C75564 + C75563) * C153637 * C153943 +
            (C75562 + C75561) * C153637 * C153939 +
            (C75560 + C75559) * C153637 * C153929 +
            (C76811 + C76812) * C153637 * C153871) *
               C153601 -
           (C75905 * C153871 + C75906 * C153929 +
            (C74584 + C74583) * C153637 * C153939 +
            (C74582 + C74581) * C153637 * C153943) *
               C1898) *
              C299 +
          ((C74601 * C153943 + C74602 * C153939 +
            (C74588 + C74587) * C153637 * C153929 +
            (C75911 + C75912) * C153637 * C153871) *
               C1898 -
           ((C74288 * C28996 - C74289 * C28993 - C74288 * C28997 +
             C153472 * C28999 + C74286 * C28994 - C74287 * C28992 -
             C74286 * C28995 + C74280 * C28998) *
                C153637 * C153871 +
            (C76812 + C76811) * C153637 * C153929 + C76805 * C153939 +
            C76806 * C153943) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
            C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
               C153637 * C153943 +
           (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
           C74602 * C153871) *
              C2104 -
          (C76805 * C153871 + C76806 * C153929 +
           (C75563 + C75564) * C153637 * C153939 +
           (C74288 * C494 - C74289 * C479 - C74288 * C495 + C153472 * C515 +
            C74286 * C496 - C74287 * C480 - C74286 * C497 + C74280 * C516) *
               C153637 * C153943) *
              C2105 +
          ((C74286 * C498 - C74287 * C481 - C74286 * C499 + C74280 * C517 +
            C74288 * C500 - C74289 * C482 - C74288 * C501 + C153472 * C518) *
               C153637 * C153943 +
           (C76143 + C76144) * C153637 * C153939 +
           (C76145 + C76146) * C153637 * C153929 +
           (C76147 + C76148) * C153637 * C153871) *
              C2106 -
          ((C74288 * C32074 - C74289 * C32073 - C74288 * C32075 +
            C153472 * C32076 + C74286 * C30186 - C74287 * C30183 -
            C74286 * C30187 + C74280 * C30189) *
               C153637 * C153871 +
           (C74288 * C6187 - C74289 * C6180 - C74288 * C6188 + C153472 * C6198 +
            C74286 * C6189 - C74287 * C6181 - C74286 * C6190 + C74280 * C6199) *
               C153637 * C153929 +
           (C74288 * C6193 - C74289 * C6183 - C74288 * C6194 + C153472 * C6201 +
            C74286 * C6195 - C74287 * C6184 - C74286 * C6196 + C74280 * C6202) *
               C153637 * C153939 +
           (C74288 * C2119 - C74289 * C2111 - C74288 * C2120 + C153472 * C2126 +
            C74286 * C2121 - C74287 * C2112 - C74286 * C2122 + C74280 * C2127) *
               C153637 * C153943) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C153637 * C70498 +
            (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
               C153921 -
           ((C71731 + C71732 + C71733 + C71734) * C153637 * C153684 +
            (C70506 * C490 - C70507 * C477 - C70506 * C491 + C153862 * C513 +
             C70504 * C492 - C70505 * C478 - C70504 * C493 + C153916 * C514 +
             C70502 * C494 - C70503 * C479 - C70502 * C495 + C153935 * C515 +
             C70500 * C496 - C70501 * C480 - C70500 * C497 + C153942 * C516) *
                C153637 * C70498) *
               C153922 +
           ((C70500 * C498 - C70501 * C481 - C70500 * C499 + C153942 * C517 +
             C70502 * C500 - C70503 * C482 - C70502 * C501 + C153935 * C518 +
             C70504 * C502 - C70505 * C483 - C70504 * C503 + C153916 * C519 +
             C70506 * C504 - C70507 * C484 - C70506 * C505 + C153862 * C520) *
                C153637 * C70498 +
            (C72309 + C72310 + C72311 + C72312) * C153637 * C153684) *
               C2414) *
              C153521 * C153840 +
          (((C70500 * C494 - C70501 * C479 - C70500 * C495 + C153942 * C515 +
             C70502 * C492 - C70503 * C478 - C70502 * C493 + C153935 * C514 +
             C70504 * C490 - C70505 * C477 - C70504 * C491 + C153916 * C513 +
             C70506 * C488 - C70507 * C476 - C70506 * C489 + C153862 * C512) *
                C153637 * C70498 +
            (C71735 + C71736 + C71737 + C71738) * C153637 * C153684) *
               C153922 -
           ((C70810 + C70809 + C70808 + C70807) * C153637 * C153684 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C153637 * C70498) *
               C153921 -
           ((C70506 * C1330 - C70507 * C1325 - C70506 * C1331 +
             C153862 * C1340 + C70504 * C1332 - C70505 * C1326 -
             C70504 * C1333 + C153916 * C1341 + C70502 * C1334 -
             C70503 * C1327 - C70502 * C1335 + C153935 * C1342 +
             C70500 * C1336 - C70501 * C1328 - C70500 * C1337 +
             C153942 * C1343) *
                C153637 * C153684 +
            (C70506 * C506 - C70507 * C485 - C70506 * C507 + C153862 * C521 +
             C70504 * C504 - C70505 * C484 - C70504 * C505 + C153916 * C520 +
             C70502 * C502 - C70503 * C483 - C70502 * C503 + C153935 * C519 +
             C70500 * C500 - C70501 * C482 - C70500 * C501 + C153942 * C518) *
                C153637 * C70498) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153637 * C153943 +
            (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
            C74602 * C153871) *
               C153921 -
           (C76805 * C153871 + C76806 * C153929 +
            (C75563 + C75564) * C153637 * C153939 +
            (C74288 * C494 - C74289 * C479 - C74288 * C495 + C153472 * C515 +
             C74286 * C496 - C74287 * C480 - C74286 * C497 + C74280 * C516) *
                C153637 * C153943) *
               C153922 +
           ((C74286 * C498 - C74287 * C481 - C74286 * C499 + C74280 * C517 +
             C74288 * C500 - C74289 * C482 - C74288 * C501 + C153472 * C518) *
                C153637 * C153943 +
            (C76143 + C76144) * C153637 * C153939 +
            (C76145 + C76146) * C153637 * C153929 +
            (C76147 + C76148) * C153637 * C153871) *
               C2414) *
              C153521 * C153840 +
          (((C74286 * C494 - C74287 * C479 - C74286 * C495 + C74280 * C515 +
             C74288 * C492 - C74289 * C478 - C74288 * C493 + C153472 * C514) *
                C153637 * C153943 +
            (C75565 + C75566) * C153637 * C153939 +
            (C75567 + C75568) * C153637 * C153929 +
            (C75569 + C75570) * C153637 * C153871) *
               C153922 -
           (C74603 * C153871 + C74604 * C153929 +
            (C74590 + C74589) * C153637 * C153939 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153637 * C153943) *
               C153921 -
           ((C74288 * C4784 - C74289 * C4781 - C74288 * C4785 +
             C153472 * C4790 + C74286 * C4786 - C74287 * C4782 -
             C74286 * C4787 + C74280 * C4791) *
                C153637 * C153871 +
            (C74288 * C3287 - C74289 * C3281 - C74288 * C3288 +
             C153472 * C3293 + C74286 * C3285 - C74287 * C3280 -
             C74286 * C3286 + C74280 * C3292) *
                C153637 * C153929 +
            (C74288 * C1334 - C74289 * C1327 - C74288 * C1335 +
             C153472 * C1342 + C74286 * C1336 - C74287 * C1328 -
             C74286 * C1337 + C74280 * C1343) *
                C153637 * C153939 +
            (C74288 * C502 - C74289 * C483 - C74288 * C503 + C153472 * C519 +
             C74286 * C500 - C74287 * C482 - C74286 * C501 + C74280 * C518) *
                C153637 * C153943) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C153637 * C70498 +
            (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
               C1898 -
           ((C71731 + C71732 + C71733 + C71734) * C153637 * C153684 +
            (C70506 * C490 - C70507 * C477 - C70506 * C491 + C153862 * C513 +
             C70504 * C492 - C70505 * C478 - C70504 * C493 + C153916 * C514 +
             C70502 * C494 - C70503 * C479 - C70502 * C495 + C153935 * C515 +
             C70500 * C496 - C70501 * C480 - C70500 * C497 + C153942 * C516) *
                C153637 * C70498) *
               C153601) *
              C153521 * C1093 +
          (((C70500 * C494 - C70501 * C479 - C70500 * C495 + C153942 * C515 +
             C70502 * C492 - C70503 * C478 - C70502 * C493 + C153935 * C514 +
             C70504 * C490 - C70505 * C477 - C70504 * C491 + C153916 * C513 +
             C70506 * C488 - C70507 * C476 - C70506 * C489 + C153862 * C512) *
                C153637 * C70498 +
            (C71735 + C71736 + C71737 + C71738) * C153637 * C153684) *
               C153601 -
           ((C70810 + C70809 + C70808 + C70807) * C153637 * C153684 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C153637 * C70498) *
               C1898) *
              C153521 * C1094 +
          (((C70500 * C156 - C70501 * C146 - C70500 * C157 + C153942 * C170 +
             C70502 * C158 - C70503 * C147 - C70502 * C159 + C153935 * C171 +
             C70504 * C160 - C70505 * C148 - C70504 * C161 + C153916 * C172 +
             C70506 * C162 - C70507 * C149 - C70506 * C163 + C153862 * C173) *
                C153637 * C70498 +
            (C71227 + C71228 + C71229 + C71230) * C153637 * C153684) *
               C1898 -
           ((C70506 * C961 - C70507 * C950 - C70506 * C962 + C153862 * C968 +
             C70504 * C959 - C70505 * C949 - C70504 * C960 + C153916 * C967 +
             C70502 * C957 - C70503 * C948 - C70502 * C958 + C153935 * C966 +
             C70500 * C955 - C70501 * C947 - C70500 * C956 + C153942 * C965) *
                C153637 * C153684 +
            (C70506 * C508 - C70507 * C486 - C70506 * C509 + C153862 * C522 +
             C70504 * C488 - C70505 * C476 - C70504 * C489 + C153916 * C512 +
             C70502 * C490 - C70503 * C477 - C70502 * C491 + C153935 * C513 +
             C70500 * C492 - C70501 * C478 - C70500 * C493 + C153942 * C514) *
                C153637 * C70498) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C153637 * C70498 +
            (C70799 + C70800 + C70801 + C70802) * C153637 * C153684) *
               C1898 -
           ((C71731 + C71732 + C71733 + C71734) * C153637 * C153684 +
            (C70506 * C490 - C70507 * C477 - C70506 * C491 + C153862 * C513 +
             C70504 * C492 - C70505 * C478 - C70504 * C493 + C153916 * C514 +
             C70502 * C494 - C70503 * C479 - C70502 * C495 + C153935 * C515 +
             C70500 * C496 - C70501 * C480 - C70500 * C497 + C153942 * C516) *
                C153637 * C70498) *
               C153601) *
              C298 +
          (((C71734 + C71733 + C71732 + C71731) * C153637 * C70498 +
            (C72983 + C72984 + C72985 + C72986) * C153637 * C153684) *
               C153601 -
           ((C70803 + C70804 + C70805 + C70806) * C153637 * C153684 +
            (C70802 + C70801 + C70800 + C70799) * C153637 * C70498) *
               C1898) *
              C299 +
          (((C70806 + C70805 + C70804 + C70803) * C153637 * C70498 +
            (C72087 + C72088 + C72089 + C72090) * C153637 * C153684) *
               C1898 -
           ((C70506 * C4073 - C70507 * C4066 - C70506 * C4074 +
             C153862 * C4078 + C70504 * C4071 - C70505 * C4065 -
             C70504 * C4072 + C153916 * C4077 + C70502 * C4069 -
             C70503 * C4064 - C70502 * C4070 + C153935 * C4076 +
             C70500 * C4067 - C70501 * C4063 - C70500 * C4068 +
             C153942 * C4075) *
                C153637 * C153684 +
            (C72986 + C72985 + C72984 + C72983) * C153637 * C70498) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153637 * C153943 +
            (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
            C74602 * C153871) *
               C1898 -
           (C76805 * C153871 + C76806 * C153929 +
            (C75563 + C75564) * C153637 * C153939 +
            (C74288 * C494 - C74289 * C479 - C74288 * C495 + C153472 * C515 +
             C74286 * C496 - C74287 * C480 - C74286 * C497 + C74280 * C516) *
                C153637 * C153943) *
               C153601) *
              C153521 * C1093 +
          (((C74286 * C494 - C74287 * C479 - C74286 * C495 + C74280 * C515 +
             C74288 * C492 - C74289 * C478 - C74288 * C493 + C153472 * C514) *
                C153637 * C153943 +
            (C75565 + C75566) * C153637 * C153939 +
            (C75567 + C75568) * C153637 * C153929 +
            (C75569 + C75570) * C153637 * C153871) *
               C153601 -
           (C74603 * C153871 + C74604 * C153929 +
            (C74590 + C74589) * C153637 * C153939 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153637 * C153943) *
               C1898) *
              C153521 * C1094 +
          (((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
             C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                C153637 * C153943 +
            (C75029 + C75030) * C153637 * C153939 +
            (C75031 + C75032) * C153637 * C153929 +
            (C75033 + C75034) * C153637 * C153871) *
               C1898 -
           ((C74288 * C4073 - C74289 * C4066 - C74288 * C4074 +
             C153472 * C4078 + C74286 * C4071 - C74287 * C4065 -
             C74286 * C4072 + C74280 * C4077) *
                C153637 * C153871 +
            (C74288 * C1763 - C74289 * C1757 - C74288 * C1764 +
             C153472 * C1772 + C74286 * C1765 - C74287 * C1758 -
             C74286 * C1766 + C74280 * C1773) *
                C153637 * C153929 +
            (C74288 * C957 - C74289 * C948 - C74288 * C958 + C153472 * C966 +
             C74286 * C955 - C74287 * C947 - C74286 * C956 + C74280 * C965) *
                C153637 * C153939 +
            (C74288 * C490 - C74289 * C477 - C74288 * C491 + C153472 * C513 +
             C74286 * C492 - C74287 * C478 - C74286 * C493 + C74280 * C514) *
                C153637 * C153943) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153637 * C153943 +
            (C74581 + C74582) * C153637 * C153939 + C74601 * C153929 +
            C74602 * C153871) *
               C1898 -
           (C76805 * C153871 + C76806 * C153929 +
            (C75563 + C75564) * C153637 * C153939 +
            (C74288 * C494 - C74289 * C479 - C74288 * C495 + C153472 * C515 +
             C74286 * C496 - C74287 * C480 - C74286 * C497 + C74280 * C516) *
                C153637 * C153943) *
               C153601) *
              C298 +
          (((C75564 + C75563) * C153637 * C153943 +
            (C75562 + C75561) * C153637 * C153939 +
            (C75560 + C75559) * C153637 * C153929 +
            (C76811 + C76812) * C153637 * C153871) *
               C153601 -
           (C75905 * C153871 + C75906 * C153929 +
            (C74584 + C74583) * C153637 * C153939 +
            (C74582 + C74581) * C153637 * C153943) *
               C1898) *
              C299 +
          ((C74601 * C153943 + C74602 * C153939 +
            (C74588 + C74587) * C153637 * C153929 +
            (C75911 + C75912) * C153637 * C153871) *
               C1898 -
           ((C74288 * C28996 - C74289 * C28993 - C74288 * C28997 +
             C153472 * C28999 + C74286 * C28994 - C74287 * C28992 -
             C74286 * C28995 + C74280 * C28998) *
                C153637 * C153871 +
            (C76812 + C76811) * C153637 * C153929 + C76805 * C153939 +
            C76806 * C153943) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[75] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C152100 * C152 - C34898 * C144 - C152100 * C153 +
                      C153829 * C168 + C152081 * C154 - C34900 * C145 -
                      C152081 * C155 + C153472 * C169) *
                         C98536 +
                     (C39442 + C39443) * C153724) *
                        C153680 +
                    ((C35192 + C35193) * C98536 + C40462 * C153724) * C153687 +
                    C138095 * C83601) *
                       C153537 * C153848 -
                   ((C37406 * C153724 + C36507 * C98536) * C83601 +
                    (C37407 * C153724 + (C35195 + C35194) * C98536) * C153687 +
                    (C40463 * C153724 + (C35193 + C35192) * C98536) * C153680) *
                       C153537 * C153573) *
                      C153917 +
                  ((((C35200 + C35201) * C98536 + C40464 * C153724) * C153680 +
                    ((C35202 + C35203) * C98536 + C40465 * C153724) * C153687 +
                    ((C35204 + C35205) * C98536 + (C36180 + C36181) * C153724) *
                        C83601) *
                       C153537 * C153573 -
                   (C138096 * C83601 +
                    (C40466 * C153724 + (C35201 + C35200) * C98536) * C153687 +
                    ((C39447 + C39446) * C153724 +
                     (C152081 * C156 - C34900 * C146 - C152081 * C157 +
                      C153472 * C170 + C152100 * C154 - C34898 * C145 -
                      C152100 * C155 + C153829 * C169) *
                         C98536) *
                        C153680) *
                       C153537 * C153848) *
                      C153918 +
                  ((((C152100 * C156 - C34898 * C146 - C152100 * C157 +
                      C153829 * C170 + C152081 * C158 - C34900 * C147 -
                      C152081 * C159 + C153472 * C171) *
                         C98536 +
                     (C40074 + C40075) * C153724) *
                        C153680 +
                    ((C35640 + C35641) * C98536 + (C39768 + C39769) * C153724) *
                        C153687 +
                    ((C35642 + C35643) * C98536 + (C39770 + C39771) * C153724) *
                        C83601) *
                       C153537 * C153848 -
                   (((C152081 * C4073 - C34900 * C4066 - C152081 * C4074 +
                      C153472 * C4078 + C152100 * C4071 - C34898 * C4065 -
                      C152100 * C4072 + C153829 * C4077) *
                         C153724 +
                     (C35645 + C35644) * C98536) *
                        C83601 +
                    ((C39771 + C39770) * C153724 + (C35643 + C35642) * C98536) *
                        C153687 +
                    ((C39769 + C39768) * C153724 + (C35641 + C35640) * C98536) *
                        C153680) *
                       C153537 * C153573) *
                      C650)) /
                (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C152100 * C152 - C34898 * C144 - C152100 * C153 +
               C153829 * C168 + C152081 * C154 - C34900 * C145 -
               C152081 * C155 + C153472 * C169) *
                  C98536 +
              (C39442 + C39443) * C153724) *
                 C153680 +
             ((C35192 + C35193) * C98536 + C40462 * C153724) * C153687 +
             C138095 * C83601) *
                C153849 -
            ((C41244 * C153724 + C37407 * C98536) * C83601 +
             (C41245 * C153724 + C40463 * C98536) * C153687 +
             ((C39444 + C39445) * C153724 + (C39443 + C39442) * C98536) *
                 C153680) *
                C153601) *
               C153848 +
           (((C40462 * C98536 + C41246 * C153724) * C153680 +
             (C39073 * C98536 + C41255 * C153724) * C153687 +
             (C42244 * C98536 + (C36758 + C36759) * C153724) * C83601) *
                C153601 -
            ((C37406 * C153724 + C36507 * C98536) * C83601 +
             (C37407 * C153724 + (C35195 + C35194) * C98536) * C153687 +
             (C40463 * C153724 + (C35193 + C35192) * C98536) * C153680) *
                C153849) *
               C153573) *
              C301 +
          (((((C39446 + C39447) * C98536 + (C39448 + C39449) * C153724) *
                 C153680 +
             (C40464 * C98536 + C59773 * C153724) * C153687 +
             (C40465 * C98536 + (C39452 + C39453) * C153724) * C83601) *
                C153601 -
            (C138096 * C83601 +
             (C40466 * C153724 + (C35201 + C35200) * C98536) * C153687 +
             ((C39447 + C39446) * C153724 +
              (C152081 * C156 - C34900 * C146 - C152081 * C157 +
               C153472 * C170 + C152100 * C154 - C34898 * C145 -
               C152100 * C155 + C153829 * C169) *
                  C98536) *
                 C153680) *
                C153849) *
               C153848 +
           ((((C35200 + C35201) * C98536 + C40464 * C153724) * C153680 +
             ((C35202 + C35203) * C98536 + C40465 * C153724) * C153687 +
             ((C35204 + C35205) * C98536 + (C36180 + C36181) * C153724) *
                 C83601) *
                C153849 -
            (((C152081 * C4784 - C34900 * C4781 - C152081 * C4785 +
               C153472 * C4790 + C152100 * C4786 - C34898 * C4782 -
               C152100 * C4787 + C153829 * C4791) *
                  C153724 +
              (C36181 + C36180) * C98536) *
                 C83601 +
             ((C39453 + C39452) * C153724 + C39074 * C98536) * C153687 +
             (C58765 * C153724 + C40466 * C98536) * C153680) *
                C153601) *
               C153573) *
              C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C98536 +
             (C39442 + C39443) * C153724) *
                C153680 +
            ((C35192 + C35193) * C98536 + C40462 * C153724) * C153687 +
            C138095 * C83601) *
               C153537 * C298 -
           ((C37406 * C153724 + C36507 * C98536) * C83601 +
            (C37407 * C153724 + (C35195 + C35194) * C98536) * C153687 +
            (C40463 * C153724 + (C35193 + C35192) * C98536) * C153680) *
               C153537 * C299 +
           (C138095 * C153680 + (C35209 * C98536 + C42244 * C153724) * C153687 +
            ((C35199 + C35198) * C98536 + (C37422 + C37423) * C153724) *
                C83601) *
               C153537 * C300) *
              C301 +
          ((((C35200 + C35201) * C98536 + C40464 * C153724) * C153680 +
            ((C35202 + C35203) * C98536 + C40465 * C153724) * C153687 +
            ((C35204 + C35205) * C98536 + (C36180 + C36181) * C153724) *
                C83601) *
               C153537 * C299 -
           (C138096 * C83601 +
            (C40466 * C153724 + (C35201 + C35200) * C98536) * C153687 +
            ((C39447 + C39446) * C153724 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C98536) *
                C153680) *
               C153537 * C298 -
           (((C152081 * C5564 - C34900 * C5561 - C152081 * C5565 +
              C153472 * C5570 + C152100 * C5566 - C34898 * C5562 -
              C152100 * C5567 + C153829 * C5571) *
                 C153724 +
             (C35207 + C35206) * C98536) *
                C83601 +
            ((C36181 + C36180) * C153724 + C35210 * C98536) * C153687 +
            C138096 * C153680) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C98536 +
            (C39442 + C39443) * C153724) *
               C153680 +
           ((C35192 + C35193) * C98536 + C40462 * C153724) * C153687 +
           (C35208 * C98536 + C39073 * C153724) * C83601) *
              C153537 * C153521 * C130 -
          ((C39074 * C153724 + C35211 * C98536) * C83601 +
           (C40466 * C153724 + (C35201 + C35200) * C98536) * C153687 +
           ((C39447 + C39446) * C153724 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C98536) *
               C153680) *
              C153537 * C153521 * C131 +
          (((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
             C152081 * C158 - C34900 * C147 - C152081 * C159 + C153472 * C171) *
                C98536 +
            (C40074 + C40075) * C153724) *
               C153680 +
           ((C35640 + C35641) * C98536 + (C39768 + C39769) * C153724) *
               C153687 +
           ((C35642 + C35643) * C98536 + (C39770 + C39771) * C153724) *
               C83601) *
              C153537 * C153521 * C132 -
          (((C152081 * C1761 - C34900 * C1756 - C152081 * C1762 +
             C153472 * C1771 + C152100 * C1763 - C34898 * C1757 -
             C152100 * C1764 + C153829 * C1772) *
                C153724 +
            (C152081 * C333 - C34900 * C312 - C152081 * C334 + C153472 * C348 +
             C152100 * C331 - C34898 * C311 - C152100 * C332 + C153829 * C347) *
                C98536) *
               C83601 +
           ((C152081 * C959 - C34900 * C949 - C152081 * C960 + C153472 * C967 +
             C152100 * C957 - C34898 * C948 - C152100 * C958 + C153829 * C966) *
                C153724 +
            (C152081 * C315 - C34900 * C303 - C152081 * C316 + C153472 * C339 +
             C152100 * C317 - C34898 * C304 - C152100 * C318 + C153829 * C340) *
                C98536) *
               C153687 +
           ((C152081 * C488 - C34900 * C476 - C152081 * C489 + C153472 * C512 +
             C152100 * C490 - C34898 * C477 - C152100 * C491 + C153829 * C513) *
                C153724 +
            (C152081 * C160 - C34900 * C148 - C152081 * C161 + C153472 * C172 +
             C152100 * C158 - C34898 * C147 - C152100 * C159 + C153829 * C171) *
                C98536) *
               C153680) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C98536 +
             (C39442 + C39443) * C153724) *
                C153680 +
            ((C35192 + C35193) * C98536 + C40462 * C153724) * C153687 +
            C138095 * C83601) *
               C473 -
           ((C41244 * C153724 + C37407 * C98536) * C83601 +
            (C41245 * C153724 + C40463 * C98536) * C153687 +
            ((C39444 + C39445) * C153724 + (C39443 + C39442) * C98536) *
                C153680) *
               C474 +
           ((C58748 * C98536 + C63807 * C153724) * C153680 +
            (C41246 * C98536 + C60549 * C153724) * C153687 +
            (C41255 * C98536 + (C41274 + C41275) * C153724) * C83601) *
               C475) *
              C153521 * C301 +
          ((((C39446 + C39447) * C98536 + (C39448 + C39449) * C153724) *
                C153680 +
            (C40464 * C98536 + C59773 * C153724) * C153687 +
            (C40465 * C98536 + (C39452 + C39453) * C153724) * C83601) *
               C474 -
           (C138096 * C83601 +
            (C40466 * C153724 + (C35201 + C35200) * C98536) * C153687 +
            ((C39447 + C39446) * C153724 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C98536) *
                C153680) *
               C473 -
           (((C152081 * C6185 - C34900 * C6179 - C152081 * C6186 +
              C153472 * C6197 + C152100 * C6187 - C34898 * C6180 -
              C152100 * C6188 + C153829 * C6198) *
                 C153724 +
             (C39453 + C39452) * C98536) *
                C83601 +
            ((C58778 + C58777) * C153724 + C58765 * C98536) * C153687 +
            (C63816 * C153724 + C58766 * C98536) * C153680) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C152100 * C152 - C34898 * C144 - C152100 * C153 +
                      C153829 * C168 + C152081 * C154 - C34900 * C145 -
                      C152081 * C155 + C153472 * C169) *
                         C98536 +
                     (C39442 + C39443) * C153724) *
                        C153680 +
                    ((C35192 + C35193) * C98536 + C40462 * C153724) * C153687 +
                    C138095 * C83601) *
                       C153849 -
                   ((C41244 * C153724 + C37407 * C98536) * C83601 +
                    (C41245 * C153724 + C40463 * C98536) * C153687 +
                    ((C39444 + C39445) * C153724 + (C39443 + C39442) * C98536) *
                        C153680) *
                       C153601) *
                      C153521 * C153917 +
                  ((((C39446 + C39447) * C98536 + (C39448 + C39449) * C153724) *
                        C153680 +
                    (C40464 * C98536 + C59773 * C153724) * C153687 +
                    (C40465 * C98536 + (C39452 + C39453) * C153724) * C83601) *
                       C153601 -
                   (C138096 * C83601 +
                    (C40466 * C153724 + (C35201 + C35200) * C98536) * C153687 +
                    ((C39447 + C39446) * C153724 +
                     (C152081 * C156 - C34900 * C146 - C152081 * C157 +
                      C153472 * C170 + C152100 * C154 - C34898 * C145 -
                      C152100 * C155 + C153829 * C169) *
                         C98536) *
                        C153680) *
                       C153849) *
                      C153521 * C153918 +
                  ((((C152100 * C156 - C34898 * C146 - C152100 * C157 +
                      C153829 * C170 + C152081 * C158 - C34900 * C147 -
                      C152081 * C159 + C153472 * C171) *
                         C98536 +
                     (C40074 + C40075) * C153724) *
                        C153680 +
                    ((C35640 + C35641) * C98536 + (C39768 + C39769) * C153724) *
                        C153687 +
                    ((C35642 + C35643) * C98536 + (C39770 + C39771) * C153724) *
                        C83601) *
                       C153849 -
                   (((C152081 * C3289 - C34900 * C3282 - C152081 * C3290 +
                      C153472 * C3294 + C152100 * C3287 - C34898 * C3281 -
                      C152100 * C3288 + C153829 * C3293) *
                         C153724 +
                     (C39771 + C39770) * C98536) *
                        C83601 +
                    ((C59082 + C59081) * C153724 + (C39769 + C39768) * C98536) *
                        C153687 +
                    ((C59386 + C59385) * C153724 + (C40075 + C40074) * C98536) *
                        C153680) *
                       C153601) *
                      C153521 * C650)) /
                (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C98536 +
            (C39442 + C39443) * C153724) *
               C153680 +
           ((C35192 + C35193) * C98536 + C40462 * C153724) * C153687 +
           (C35208 * C98536 + C39073 * C153724) * C83601) *
              C153537 * C153521 * C130 -
          ((C39074 * C153724 + C35211 * C98536) * C83601 +
           (C40466 * C153724 + (C35201 + C35200) * C98536) * C153687 +
           ((C39447 + C39446) * C153724 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C98536) *
               C153680) *
              C153537 * C153521 * C131 +
          (((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
             C152081 * C158 - C34900 * C147 - C152081 * C159 + C153472 * C171) *
                C98536 +
            (C40074 + C40075) * C153724) *
               C153680 +
           ((C35640 + C35641) * C98536 + (C39768 + C39769) * C153724) *
               C153687 +
           ((C35642 + C35643) * C98536 + (C39770 + C39771) * C153724) *
               C83601) *
              C153537 * C153521 * C132 -
          (((C152081 * C1761 - C34900 * C1756 - C152081 * C1762 +
             C153472 * C1771 + C152100 * C1763 - C34898 * C1757 -
             C152100 * C1764 + C153829 * C1772) *
                C153724 +
            (C152081 * C333 - C34900 * C312 - C152081 * C334 + C153472 * C348 +
             C152100 * C331 - C34898 * C311 - C152100 * C332 + C153829 * C347) *
                C98536) *
               C83601 +
           ((C152081 * C959 - C34900 * C949 - C152081 * C960 + C153472 * C967 +
             C152100 * C957 - C34898 * C948 - C152100 * C958 + C153829 * C966) *
                C153724 +
            (C152081 * C315 - C34900 * C303 - C152081 * C316 + C153472 * C339 +
             C152100 * C317 - C34898 * C304 - C152100 * C318 + C153829 * C340) *
                C98536) *
               C153687 +
           ((C152081 * C488 - C34900 * C476 - C152081 * C489 + C153472 * C512 +
             C152100 * C490 - C34898 * C477 - C152100 * C491 + C153829 * C513) *
                C153724 +
            (C152081 * C160 - C34900 * C148 - C152081 * C161 + C153472 * C172 +
             C152100 * C158 - C34898 * C147 - C152100 * C159 + C153829 * C171) *
                C98536) *
               C153680) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C98536 +
             (C39442 + C39443) * C153724) *
                C153680 +
            ((C35192 + C35193) * C98536 + C40462 * C153724) * C153687 +
            C138095 * C83601) *
               C153537 * C298 -
           ((C37406 * C153724 + C36507 * C98536) * C83601 +
            (C37407 * C153724 + (C35195 + C35194) * C98536) * C153687 +
            (C40463 * C153724 + (C35193 + C35192) * C98536) * C153680) *
               C153537 * C299 +
           (C138095 * C153680 + (C35209 * C98536 + C42244 * C153724) * C153687 +
            ((C35199 + C35198) * C98536 + (C37422 + C37423) * C153724) *
                C83601) *
               C153537 * C300) *
              C301 +
          ((((C35200 + C35201) * C98536 + C40464 * C153724) * C153680 +
            ((C35202 + C35203) * C98536 + C40465 * C153724) * C153687 +
            ((C35204 + C35205) * C98536 + (C36180 + C36181) * C153724) *
                C83601) *
               C153537 * C299 -
           (C138096 * C83601 +
            (C40466 * C153724 + (C35201 + C35200) * C98536) * C153687 +
            ((C39447 + C39446) * C153724 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C98536) *
                C153680) *
               C153537 * C298 -
           (((C152081 * C5564 - C34900 * C5561 - C152081 * C5565 +
              C153472 * C5570 + C152100 * C5566 - C34898 * C5562 -
              C152100 * C5567 + C153829 * C5571) *
                 C153724 +
             (C35207 + C35206) * C98536) *
                C83601 +
            ((C36181 + C36180) * C153724 + C35210 * C98536) * C153687 +
            C138096 * C153680) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C98536 +
             (C39442 + C39443) * C153724) *
                C153680 +
            ((C35192 + C35193) * C98536 + C40462 * C153724) * C153687 +
            C138095 * C83601) *
               C153537 * C153919 -
           (C139839 * C83601 +
            (C37407 * C153724 + (C35195 + C35194) * C98536) * C153687 +
            (C40463 * C153724 + (C35193 + C35192) * C98536) * C153680) *
               C153537 * C153920 +
           (C138095 * C153680 + (C35209 * C98536 + C42244 * C153724) * C153687 +
            ((C35199 + C35198) * C98536 + (C37422 + C37423) * C153724) *
                C83601) *
               C153537 * C1469) *
              C153840 +
          ((((C35200 + C35201) * C98536 + C40464 * C153724) * C153680 +
            ((C35202 + C35203) * C98536 + C40465 * C153724) * C153687 +
            ((C35204 + C35205) * C98536 + (C36180 + C36181) * C153724) *
                C83601) *
               C153537 * C153920 -
           (C138096 * C83601 +
            (C40466 * C153724 + (C35201 + C35200) * C98536) * C153687 +
            ((C39447 + C39446) * C153724 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C98536) *
                C153680) *
               C153537 * C153919 -
           (((C152081 * C5564 - C34900 * C5561 - C152081 * C5565 +
              C153472 * C5570 + C152100 * C5566 - C34898 * C5562 -
              C152100 * C5567 + C153829 * C5571) *
                 C153724 +
             (C35207 + C35206) * C98536) *
                C83601 +
            ((C36181 + C36180) * C153724 + C35210 * C98536) * C153687 +
            C138096 * C153680) *
               C153537 * C1469) *
              C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C98536 +
             (C39442 + C39443) * C153724) *
                C153680 +
            ((C35192 + C35193) * C98536 + C40462 * C153724) * C153687 +
            C138095 * C83601) *
               C153849 -
           (C141098 * C83601 + (C41245 * C153724 + C40463 * C98536) * C153687 +
            ((C39444 + C39445) * C153724 + (C39443 + C39442) * C98536) *
                C153680) *
               C153601) *
              C153919 +
          (((C40462 * C98536 + C41246 * C153724) * C153680 +
            (C39073 * C98536 + C41255 * C153724) * C153687 +
            (C42244 * C98536 + (C36758 + C36759) * C153724) * C83601) *
               C153601 -
           (C139839 * C83601 +
            (C37407 * C153724 + (C35195 + C35194) * C98536) * C153687 +
            (C40463 * C153724 + (C35193 + C35192) * C98536) * C153680) *
               C153849) *
              C153920 +
          ((C138095 * C153680 + (C35209 * C98536 + C42244 * C153724) * C153687 +
            ((C35199 + C35198) * C98536 + (C37422 + C37423) * C153724) *
                C83601) *
               C153849 -
           (((C152081 * C28550 - C34900 * C28547 - C152081 * C28551 +
              C153472 * C28553 + C152100 * C28548 - C34898 * C28546 -
              C152100 * C28549 + C153829 * C28552) *
                 C153724 +
             (C37423 + C37422) * C98536) *
                C83601 +
            ((C36759 + C36758) * C153724 + C37406 * C98536) * C153687 +
            C141098 * C153680) *
               C153601) *
              C1469) *
         C153502) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C98536 +
            (C39442 + C39443) * C153724) *
               C153680 +
           ((C35192 + C35193) * C98536 + C40462 * C153724) * C153687 +
           C138095 * C83601) *
              C153537 * C1178 -
          (C139839 * C83601 +
           (C37407 * C153724 + (C35195 + C35194) * C98536) * C153687 +
           (C40463 * C153724 + (C35193 + C35192) * C98536) * C153680) *
              C153537 * C1179 +
          (C138095 * C153680 + (C35209 * C98536 + C42244 * C153724) * C153687 +
           ((C35199 + C35198) * C98536 + (C37422 + C37423) * C153724) *
               C83601) *
              C153537 * C1180 -
          (((C152081 * C28996 - C34900 * C28993 - C152081 * C28997 +
             C153472 * C28999 + C152100 * C28994 - C34898 * C28992 -
             C152100 * C28995 + C153829 * C28998) *
                C153724 +
            (C36523 + C36522) * C98536) *
               C83601 +
           ((C37423 + C37422) * C153724 + C36506 * C98536) * C153687 +
           C139839 * C153680) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C98536 +
             (C39442 + C39443) * C153724) *
                C153680 +
            ((C35192 + C35193) * C98536 + C40462 * C153724) * C153687 +
            C138095 * C83601) *
               C153537 * C1091 -
           ((C37406 * C153724 + C36507 * C98536) * C83601 +
            (C37407 * C153724 + (C35195 + C35194) * C98536) * C153687 +
            (C40463 * C153724 + (C35193 + C35192) * C98536) * C153680) *
               C153537 * C153573) *
              C1093 +
          ((((C35200 + C35201) * C98536 + C40464 * C153724) * C153680 +
            ((C35202 + C35203) * C98536 + C40465 * C153724) * C153687 +
            ((C35204 + C35205) * C98536 + (C36180 + C36181) * C153724) *
                C83601) *
               C153537 * C153573 -
           (C138096 * C83601 +
            (C40466 * C153724 + (C35201 + C35200) * C98536) * C153687 +
            ((C39447 + C39446) * C153724 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C98536) *
                C153680) *
               C153537 * C1091) *
              C1094 +
          ((((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
              C152081 * C158 - C34900 * C147 - C152081 * C159 +
              C153472 * C171) *
                 C98536 +
             (C40074 + C40075) * C153724) *
                C153680 +
            ((C35640 + C35641) * C98536 + (C39768 + C39769) * C153724) *
                C153687 +
            ((C35642 + C35643) * C98536 + (C39770 + C39771) * C153724) *
                C83601) *
               C153537 * C1091 -
           (((C152081 * C4073 - C34900 * C4066 - C152081 * C4074 +
              C153472 * C4078 + C152100 * C4071 - C34898 * C4065 -
              C152100 * C4072 + C153829 * C4077) *
                 C153724 +
             (C35645 + C35644) * C98536) *
                C83601 +
            ((C39771 + C39770) * C153724 + (C35643 + C35642) * C98536) *
                C153687 +
            ((C39769 + C39768) * C153724 + (C35641 + C35640) * C98536) *
                C153680) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C98536 +
             (C39442 + C39443) * C153724) *
                C153680 +
            ((C35192 + C35193) * C98536 + C40462 * C153724) * C153687 +
            C138095 * C83601) *
               C473 -
           ((C41244 * C153724 + C37407 * C98536) * C83601 +
            (C41245 * C153724 + C40463 * C98536) * C153687 +
            ((C39444 + C39445) * C153724 + (C39443 + C39442) * C98536) *
                C153680) *
               C474 +
           ((C58748 * C98536 + C63807 * C153724) * C153680 +
            (C41246 * C98536 + C60549 * C153724) * C153687 +
            (C41255 * C98536 + (C41274 + C41275) * C153724) * C83601) *
               C475) *
              C1091 +
          (((C40462 * C98536 + C41246 * C153724) * C153680 +
            (C39073 * C98536 + C41255 * C153724) * C153687 +
            (C42244 * C98536 + (C36758 + C36759) * C153724) * C83601) *
               C474 -
           (C139839 * C83601 +
            (C37407 * C153724 + (C35195 + C35194) * C98536) * C153687 +
            (C40463 * C153724 + (C35193 + C35192) * C98536) * C153680) *
               C473 -
           (((C152081 * C32074 - C34900 * C32073 - C152081 * C32075 +
              C153472 * C32076 + C152100 * C30186 - C34898 * C30183 -
              C152100 * C30187 + C153829 * C30189) *
                 C153724 +
             (C36759 + C36758) * C98536) *
                C83601 +
            ((C41275 + C41274) * C153724 + C41244 * C98536) * C153687 +
            (C60548 * C153724 + C41245 * C98536) * C153680) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C152100 * C152 - C34898 * C144 - C152100 * C153 +
               C153829 * C168 + C152081 * C154 - C34900 * C145 -
               C152081 * C155 + C153472 * C169) *
                  C98536 +
              (C39442 + C39443) * C153724) *
                 C153680 +
             ((C35192 + C35193) * C98536 + C40462 * C153724) * C153687 +
             C138095 * C83601) *
                C153849 -
            ((C41244 * C153724 + C37407 * C98536) * C83601 +
             (C41245 * C153724 + C40463 * C98536) * C153687 +
             ((C39444 + C39445) * C153724 + (C39443 + C39442) * C98536) *
                 C153680) *
                C153601) *
               C1091 +
           (((C40462 * C98536 + C41246 * C153724) * C153680 +
             (C39073 * C98536 + C41255 * C153724) * C153687 +
             (C42244 * C98536 + (C36758 + C36759) * C153724) * C83601) *
                C153601 -
            (C139839 * C83601 +
             (C37407 * C153724 + (C35195 + C35194) * C98536) * C153687 +
             (C40463 * C153724 + (C35193 + C35192) * C98536) * C153680) *
                C153849) *
               C153573) *
              C153840 +
          (((((C39446 + C39447) * C98536 + (C39448 + C39449) * C153724) *
                 C153680 +
             (C40464 * C98536 + C59773 * C153724) * C153687 +
             (C40465 * C98536 + (C39452 + C39453) * C153724) * C83601) *
                C153601 -
            (C138096 * C83601 +
             (C40466 * C153724 + (C35201 + C35200) * C98536) * C153687 +
             ((C39447 + C39446) * C153724 +
              (C152081 * C156 - C34900 * C146 - C152081 * C157 +
               C153472 * C170 + C152100 * C154 - C34898 * C145 -
               C152100 * C155 + C153829 * C169) *
                  C98536) *
                 C153680) *
                C153849) *
               C1091 +
           ((((C35200 + C35201) * C98536 + C40464 * C153724) * C153680 +
             ((C35202 + C35203) * C98536 + C40465 * C153724) * C153687 +
             ((C35204 + C35205) * C98536 + (C36180 + C36181) * C153724) *
                 C83601) *
                C153849 -
            (((C152081 * C4784 - C34900 * C4781 - C152081 * C4785 +
               C153472 * C4790 + C152100 * C4786 - C34898 * C4782 -
               C152100 * C4787 + C153829 * C4791) *
                  C153724 +
              (C36181 + C36180) * C98536) *
                 C83601 +
             ((C39453 + C39452) * C153724 + C39074 * C98536) * C153687 +
             (C58765 * C153724 + C40466 * C98536) * C153680) *
                C153601) *
               C153573) *
              C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C98536 +
             (C39442 + C39443) * C153724) *
                C153680 +
            ((C35192 + C35193) * C98536 + C40462 * C153724) * C153687 +
            C138095 * C83601) *
               C153537 * C1091 -
           ((C37406 * C153724 + C36507 * C98536) * C83601 +
            (C37407 * C153724 + (C35195 + C35194) * C98536) * C153687 +
            (C40463 * C153724 + (C35193 + C35192) * C98536) * C153680) *
               C153537 * C153573) *
              C1093 +
          ((((C35200 + C35201) * C98536 + C40464 * C153724) * C153680 +
            ((C35202 + C35203) * C98536 + C40465 * C153724) * C153687 +
            ((C35204 + C35205) * C98536 + (C36180 + C36181) * C153724) *
                C83601) *
               C153537 * C153573 -
           (C138096 * C83601 +
            (C40466 * C153724 + (C35201 + C35200) * C98536) * C153687 +
            ((C39447 + C39446) * C153724 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C98536) *
                C153680) *
               C153537 * C1091) *
              C1094 +
          ((((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
              C152081 * C158 - C34900 * C147 - C152081 * C159 +
              C153472 * C171) *
                 C98536 +
             (C40074 + C40075) * C153724) *
                C153680 +
            ((C35640 + C35641) * C98536 + (C39768 + C39769) * C153724) *
                C153687 +
            ((C35642 + C35643) * C98536 + (C39770 + C39771) * C153724) *
                C83601) *
               C153537 * C1091 -
           (((C152081 * C4073 - C34900 * C4066 - C152081 * C4074 +
              C153472 * C4078 + C152100 * C4071 - C34898 * C4065 -
              C152100 * C4072 + C153829 * C4077) *
                 C153724 +
             (C35645 + C35644) * C98536) *
                C83601 +
            ((C39771 + C39770) * C153724 + (C35643 + C35642) * C98536) *
                C153687 +
            ((C39769 + C39768) * C153724 + (C35641 + C35640) * C98536) *
                C153680) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C98536 +
            (C39442 + C39443) * C153724) *
               C153680 +
           ((C35192 + C35193) * C98536 + C40462 * C153724) * C153687 +
           C138095 * C83601) *
              C153537 * C1178 -
          (C139839 * C83601 +
           (C37407 * C153724 + (C35195 + C35194) * C98536) * C153687 +
           (C40463 * C153724 + (C35193 + C35192) * C98536) * C153680) *
              C153537 * C1179 +
          (C138095 * C153680 + (C35209 * C98536 + C42244 * C153724) * C153687 +
           ((C35199 + C35198) * C98536 + (C37422 + C37423) * C153724) *
               C83601) *
              C153537 * C1180 -
          (((C152081 * C28996 - C34900 * C28993 - C152081 * C28997 +
             C153472 * C28999 + C152100 * C28994 - C34898 * C28992 -
             C152100 * C28995 + C153829 * C28998) *
                C153724 +
            (C36523 + C36522) * C98536) *
               C83601 +
           ((C37423 + C37422) * C153724 + C36506 * C98536) * C153687 +
           C139839 * C153680) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C152100 * C152 - C34898 * C144 - C152100 * C153 +
               C153829 * C168 + C152081 * C154 - C34900 * C145 -
               C152081 * C155 + C153472 * C169) *
                  C98536 +
              (C39442 + C39443) * C153724) *
                 C153680 +
             ((C35192 + C35193) * C98536 + C40462 * C153724) * C153687 +
             C138095 * C83601) *
                C1898 -
            (C141098 * C83601 + (C41245 * C153724 + C40463 * C98536) * C153687 +
             ((C39444 + C39445) * C153724 + (C39443 + C39442) * C98536) *
                 C153680) *
                C153601) *
               C153848 +
           (((C40462 * C98536 + C41246 * C153724) * C153680 +
             (C39073 * C98536 + C41255 * C153724) * C153687 +
             (C42244 * C98536 + (C36758 + C36759) * C153724) * C83601) *
                C153601 -
            (C139839 * C83601 +
             (C37407 * C153724 + (C35195 + C35194) * C98536) * C153687 +
             (C40463 * C153724 + (C35193 + C35192) * C98536) * C153680) *
                C1898) *
               C153573) *
              C153840 +
          (((((C39446 + C39447) * C98536 + (C39448 + C39449) * C153724) *
                 C153680 +
             (C40464 * C98536 + C59773 * C153724) * C153687 +
             (C40465 * C98536 + (C39452 + C39453) * C153724) * C83601) *
                C153601 -
            (C138096 * C83601 +
             (C40466 * C153724 + (C35201 + C35200) * C98536) * C153687 +
             ((C39447 + C39446) * C153724 +
              (C152081 * C156 - C34900 * C146 - C152081 * C157 +
               C153472 * C170 + C152100 * C154 - C34898 * C145 -
               C152100 * C155 + C153829 * C169) *
                  C98536) *
                 C153680) *
                C1898) *
               C153848 +
           ((((C35200 + C35201) * C98536 + C40464 * C153724) * C153680 +
             ((C35202 + C35203) * C98536 + C40465 * C153724) * C153687 +
             ((C35204 + C35205) * C98536 + (C36180 + C36181) * C153724) *
                 C83601) *
                C1898 -
            (((C152081 * C4784 - C34900 * C4781 - C152081 * C4785 +
               C153472 * C4790 + C152100 * C4786 - C34898 * C4782 -
               C152100 * C4787 + C153829 * C4791) *
                  C153724 +
              (C36181 + C36180) * C98536) *
                 C83601 +
             ((C39453 + C39452) * C153724 + C39074 * C98536) * C153687 +
             (C58765 * C153724 + C40466 * C98536) * C153680) *
                C153601) *
               C153573) *
              C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C98536 +
             (C39442 + C39443) * C153724) *
                C153680 +
            ((C35192 + C35193) * C98536 + C40462 * C153724) * C153687 +
            C138095 * C83601) *
               C153921 -
           (C141098 * C83601 + (C41245 * C153724 + C40463 * C98536) * C153687 +
            ((C39444 + C39445) * C153724 + (C39443 + C39442) * C98536) *
                C153680) *
               C153922 +
           ((C58748 * C98536 + C63807 * C153724) * C153680 +
            (C41246 * C98536 + C60549 * C153724) * C153687 +
            (C41255 * C98536 + (C41274 + C41275) * C153724) * C83601) *
               C2414) *
              C153848 +
          (((C40462 * C98536 + C41246 * C153724) * C153680 +
            (C39073 * C98536 + C41255 * C153724) * C153687 +
            (C42244 * C98536 + (C36758 + C36759) * C153724) * C83601) *
               C153922 -
           (C139839 * C83601 +
            (C37407 * C153724 + (C35195 + C35194) * C98536) * C153687 +
            (C40463 * C153724 + (C35193 + C35192) * C98536) * C153680) *
               C153921 -
           (((C152081 * C32074 - C34900 * C32073 - C152081 * C32075 +
              C153472 * C32076 + C152100 * C30186 - C34898 * C30183 -
              C152100 * C30187 + C153829 * C30189) *
                 C153724 +
             (C36759 + C36758) * C98536) *
                C83601 +
            ((C41275 + C41274) * C153724 + C41244 * C98536) * C153687 +
            (C60548 * C153724 + C41245 * C98536) * C153680) *
               C2414) *
              C153573) *
         C153502) /
        (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C98536 +
             (C39442 + C39443) * C153724) *
                C153680 +
            ((C35192 + C35193) * C98536 + C40462 * C153724) * C153687 +
            C138095 * C83601) *
               C1898 -
           (C141098 * C83601 + (C41245 * C153724 + C40463 * C98536) * C153687 +
            ((C39444 + C39445) * C153724 + (C39443 + C39442) * C98536) *
                C153680) *
               C153601) *
              C298 +
          (((C40462 * C98536 + C41246 * C153724) * C153680 +
            (C39073 * C98536 + C41255 * C153724) * C153687 +
            (C42244 * C98536 + (C36758 + C36759) * C153724) * C83601) *
               C153601 -
           (C139839 * C83601 +
            (C37407 * C153724 + (C35195 + C35194) * C98536) * C153687 +
            (C40463 * C153724 + (C35193 + C35192) * C98536) * C153680) *
               C1898) *
              C299 +
          ((C138095 * C153680 + (C35209 * C98536 + C42244 * C153724) * C153687 +
            ((C35199 + C35198) * C98536 + (C37422 + C37423) * C153724) *
                C83601) *
               C1898 -
           (((C152081 * C28550 - C34900 * C28547 - C152081 * C28551 +
              C153472 * C28553 + C152100 * C28548 - C34898 * C28546 -
              C152100 * C28549 + C153829 * C28552) *
                 C153724 +
             (C37423 + C37422) * C98536) *
                C83601 +
            ((C36759 + C36758) * C153724 + C37406 * C98536) * C153687 +
            C141098 * C153680) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C98536 +
             (C39442 + C39443) * C153724) *
                C153680 +
            ((C35192 + C35193) * C98536 + C40462 * C153724) * C153687 +
            C138095 * C83601) *
               C1898 -
           (C141098 * C83601 + (C41245 * C153724 + C40463 * C98536) * C153687 +
            ((C39444 + C39445) * C153724 + (C39443 + C39442) * C98536) *
                C153680) *
               C153601) *
              C153521 * C1093 +
          ((((C39446 + C39447) * C98536 + (C39448 + C39449) * C153724) *
                C153680 +
            (C40464 * C98536 + C59773 * C153724) * C153687 +
            (C40465 * C98536 + (C39452 + C39453) * C153724) * C83601) *
               C153601 -
           (C138096 * C83601 +
            (C40466 * C153724 + (C35201 + C35200) * C98536) * C153687 +
            ((C39447 + C39446) * C153724 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C98536) *
                C153680) *
               C1898) *
              C153521 * C1094 +
          ((((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
              C152081 * C158 - C34900 * C147 - C152081 * C159 +
              C153472 * C171) *
                 C98536 +
             (C40074 + C40075) * C153724) *
                C153680 +
            ((C35640 + C35641) * C98536 + (C39768 + C39769) * C153724) *
                C153687 +
            ((C35642 + C35643) * C98536 + (C39770 + C39771) * C153724) *
                C83601) *
               C1898 -
           (((C152081 * C3289 - C34900 * C3282 - C152081 * C3290 +
              C153472 * C3294 + C152100 * C3287 - C34898 * C3281 -
              C152100 * C3288 + C153829 * C3293) *
                 C153724 +
             (C39771 + C39770) * C98536) *
                C83601 +
            ((C59082 + C59081) * C153724 + (C39769 + C39768) * C98536) *
                C153687 +
            ((C59386 + C59385) * C153724 + (C40075 + C40074) * C98536) *
                C153680) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C98536 +
            (C39442 + C39443) * C153724) *
               C153680 +
           ((C35192 + C35193) * C98536 + C40462 * C153724) * C153687 +
           C138095 * C83601) *
              C2104 -
          (C141098 * C83601 + (C41245 * C153724 + C40463 * C98536) * C153687 +
           ((C39444 + C39445) * C153724 + (C39443 + C39442) * C98536) *
               C153680) *
              C2105 +
          ((C58748 * C98536 + C63807 * C153724) * C153680 +
           (C41246 * C98536 + C60549 * C153724) * C153687 +
           (C41255 * C98536 + (C41274 + C41275) * C153724) * C83601) *
              C2106 -
          (((C152081 * C31225 - C34900 * C31222 - C152081 * C31226 +
             C153472 * C31228 + C152100 * C31223 - C34898 * C31221 -
             C152100 * C31224 + C153829 * C31227) *
                C153724 +
            (C41275 + C41274) * C98536) *
               C83601 +
           ((C60563 + C60562) * C153724 + C60548 * C98536) * C153687 +
           (C66165 * C153724 + C62304 * C98536) * C153680) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C98536 +
             (C39442 + C39443) * C153724) *
                C153680 +
            ((C35192 + C35193) * C98536 + C40462 * C153724) * C153687 +
            C138095 * C83601) *
               C153921 -
           (C141098 * C83601 + (C41245 * C153724 + C40463 * C98536) * C153687 +
            ((C39444 + C39445) * C153724 + (C39443 + C39442) * C98536) *
                C153680) *
               C153922 +
           ((C58748 * C98536 + C63807 * C153724) * C153680 +
            (C41246 * C98536 + C60549 * C153724) * C153687 +
            (C41255 * C98536 + (C41274 + C41275) * C153724) * C83601) *
               C2414) *
              C153521 * C153840 +
          ((((C39446 + C39447) * C98536 + (C39448 + C39449) * C153724) *
                C153680 +
            (C40464 * C98536 + C59773 * C153724) * C153687 +
            (C40465 * C98536 + (C39452 + C39453) * C153724) * C83601) *
               C153922 -
           (C138096 * C83601 +
            (C40466 * C153724 + (C35201 + C35200) * C98536) * C153687 +
            ((C39447 + C39446) * C153724 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C98536) *
                C153680) *
               C153921 -
           (((C152081 * C6185 - C34900 * C6179 - C152081 * C6186 +
              C153472 * C6197 + C152100 * C6187 - C34898 * C6180 -
              C152100 * C6188 + C153829 * C6198) *
                 C153724 +
             (C39453 + C39452) * C98536) *
                C83601 +
            ((C58778 + C58777) * C153724 + C58765 * C98536) * C153687 +
            (C63816 * C153724 + C58766 * C98536) * C153680) *
               C2414) *
              C153521 * C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C98536 +
             (C39442 + C39443) * C153724) *
                C153680 +
            ((C35192 + C35193) * C98536 + C40462 * C153724) * C153687 +
            C138095 * C83601) *
               C1898 -
           (C141098 * C83601 + (C41245 * C153724 + C40463 * C98536) * C153687 +
            ((C39444 + C39445) * C153724 + (C39443 + C39442) * C98536) *
                C153680) *
               C153601) *
              C153521 * C1093 +
          ((((C39446 + C39447) * C98536 + (C39448 + C39449) * C153724) *
                C153680 +
            (C40464 * C98536 + C59773 * C153724) * C153687 +
            (C40465 * C98536 + (C39452 + C39453) * C153724) * C83601) *
               C153601 -
           (C138096 * C83601 +
            (C40466 * C153724 + (C35201 + C35200) * C98536) * C153687 +
            ((C39447 + C39446) * C153724 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C98536) *
                C153680) *
               C1898) *
              C153521 * C1094 +
          ((((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
              C152081 * C158 - C34900 * C147 - C152081 * C159 +
              C153472 * C171) *
                 C98536 +
             (C40074 + C40075) * C153724) *
                C153680 +
            ((C35640 + C35641) * C98536 + (C39768 + C39769) * C153724) *
                C153687 +
            ((C35642 + C35643) * C98536 + (C39770 + C39771) * C153724) *
                C83601) *
               C1898 -
           (((C152081 * C3289 - C34900 * C3282 - C152081 * C3290 +
              C153472 * C3294 + C152100 * C3287 - C34898 * C3281 -
              C152100 * C3288 + C153829 * C3293) *
                 C153724 +
             (C39771 + C39770) * C98536) *
                C83601 +
            ((C59082 + C59081) * C153724 + (C39769 + C39768) * C98536) *
                C153687 +
            ((C59386 + C59385) * C153724 + (C40075 + C40074) * C98536) *
                C153680) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C98536 +
             (C39442 + C39443) * C153724) *
                C153680 +
            ((C35192 + C35193) * C98536 + C40462 * C153724) * C153687 +
            C138095 * C83601) *
               C1898 -
           (C141098 * C83601 + (C41245 * C153724 + C40463 * C98536) * C153687 +
            ((C39444 + C39445) * C153724 + (C39443 + C39442) * C98536) *
                C153680) *
               C153601) *
              C298 +
          (((C40462 * C98536 + C41246 * C153724) * C153680 +
            (C39073 * C98536 + C41255 * C153724) * C153687 +
            (C42244 * C98536 + (C36758 + C36759) * C153724) * C83601) *
               C153601 -
           (C139839 * C83601 +
            (C37407 * C153724 + (C35195 + C35194) * C98536) * C153687 +
            (C40463 * C153724 + (C35193 + C35192) * C98536) * C153680) *
               C1898) *
              C299 +
          ((C138095 * C153680 + (C35209 * C98536 + C42244 * C153724) * C153687 +
            ((C35199 + C35198) * C98536 + (C37422 + C37423) * C153724) *
                C83601) *
               C1898 -
           (((C152081 * C28550 - C34900 * C28547 - C152081 * C28551 +
              C153472 * C28553 + C152100 * C28548 - C34898 * C28546 -
              C152100 * C28549 + C153829 * C28552) *
                 C153724 +
             (C37423 + C37422) * C98536) *
                C83601 +
            ((C36759 + C36758) * C153724 + C37406 * C98536) * C153687 +
            C141098 * C153680) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153720 +
             C31290 * C153727 + C31291 * C116209) *
                C153680 +
            (C148423 + C148424 + C148425) * C153687 + C148443 * C83601) *
               C153537 * C153848 -
           ((C148429 + C148430 + C148431) * C83601 +
            (C148428 + C148427 + C148426) * C153687 +
            (C148425 + C148424 + C148423) * C153680) *
               C153537 * C153573) *
              C153917 +
          (((C148432 + C148433 + C148434) * C153680 +
            (C148435 + C148436 + C148437) * C153687 +
            (C148438 + C148439 + C148440) * C83601) *
               C153537 * C153573 -
           (C148444 * C83601 + (C148434 + C148433 + C148432) * C153687 +
            (C31296 * C116209 + C31295 * C153727 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153720) *
                C153680) *
               C153537 * C153848) *
              C153918 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C153720 +
             C31782 * C153727 + C31783 * C116209) *
                C153680 +
            (C148881 + C148882 + C148883) * C153687 +
            (C148884 + C148885 + C148886) * C83601) *
               C153537 * C153848 -
           (((C28212 * C4784 - C28213 * C4781 - C28212 * C4785 +
              C153462 * C4790) *
                 C116209 +
             C44743 * C153727 + C28703 * C153720) *
                C83601 +
            (C148886 + C148885 + C148884) * C153687 +
            (C148883 + C148882 + C148881) * C153680) *
               C153537 * C153573) *
              C650)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                  C153720 +
              C31290 * C153727 + C31291 * C116209) *
                 C153680 +
             (C148423 + C148424 + C148425) * C153687 + C148443 * C83601) *
                C153849 -
            ((C149395 + C149396 + C149397) * C83601 +
             (C149398 + C149399 + C149400) * C153687 +
             (C31294 * C116209 + C31291 * C153727 + C31290 * C153720) *
                 C153680) *
                C153601) *
               C153848 +
           (((C149400 + C149399 + C149398) * C153680 +
             (C149397 + C149396 + C149395) * C153687 +
             (C29050 * C153720 + C29433 * C153727 + C32705 * C116209) *
                 C83601) *
                C153601 -
            ((C148429 + C148430 + C148431) * C83601 +
             (C148428 + C148427 + C148426) * C153687 +
             (C148425 + C148424 + C148423) * C153680) *
                C153849) *
               C153573) *
              C301 +
          ((((C31295 * C153720 + C31296 * C153727 + C31297 * C116209) *
                 C153680 +
             (C149401 + C149402 + C149403) * C153687 +
             (C149404 + C149405 + C149406) * C83601) *
                C153601 -
            (C148444 * C83601 + (C148434 + C148433 + C148432) * C153687 +
             (C31296 * C116209 + C31295 * C153727 +
              (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                  C153720) *
                 C153680) *
                C153849) *
               C153848 +
           (((C148432 + C148433 + C148434) * C153680 +
             (C148435 + C148436 + C148437) * C153687 +
             (C148438 + C148439 + C148440) * C83601) *
                C153849 -
            (((C28212 * C32074 - C28213 * C32073 - C28212 * C32075 +
               C153462 * C32076) *
                  C116209 +
              C30999 * C153727 + C29055 * C153720) *
                 C83601 +
             (C149406 + C149405 + C149404) * C153687 +
             (C149403 + C149402 + C149401) * C153680) *
                C153601) *
               C153573) *
              C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153720 +
             C31290 * C153727 + C31291 * C116209) *
                C153680 +
            (C148423 + C148424 + C148425) * C153687 + C148443 * C83601) *
               C153537 * C298 -
           ((C148429 + C148430 + C148431) * C83601 +
            (C148428 + C148427 + C148426) * C153687 +
            (C148425 + C148424 + C148423) * C153680) *
               C153537 * C299 +
           (C148443 * C153680 + (C148431 + C148430 + C148429) * C153687 +
            (C28408 * C153720 + C29049 * C153727 + C29434 * C116209) * C83601) *
               C153537 * C300) *
              C301 +
          (((C148432 + C148433 + C148434) * C153680 +
            (C148435 + C148436 + C148437) * C153687 +
            (C148438 + C148439 + C148440) * C83601) *
               C153537 * C299 -
           (C148444 * C83601 + (C148434 + C148433 + C148432) * C153687 +
            (C31296 * C116209 + C31295 * C153727 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153720) *
                C153680) *
               C153537 * C298 -
           (((C28212 * C28550 - C28213 * C28547 - C28212 * C28551 +
              C153462 * C28553) *
                 C116209 +
             C29056 * C153727 + C28413 * C153720) *
                C83601 +
            (C148440 + C148439 + C148438) * C153687 + C148444 * C153680) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153720 +
            C31290 * C153727 + C31291 * C116209) *
               C153680 +
           (C28405 * C153720 + C29052 * C153727 + C29431 * C116209) * C153687 +
           (C28406 * C153720 + C29051 * C153727 + C29432 * C116209) * C83601) *
              C153537 * C153521 * C130 -
          ((C30998 * C116209 + C29054 * C153727 + C28411 * C153720) * C83601 +
           (C30997 * C116209 + C29053 * C153727 + C28410 * C153720) * C153687 +
           (C31296 * C116209 + C31295 * C153727 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153720) *
               C153680) *
              C153537 * C153521 * C131 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C153720 +
            C31782 * C153727 + C31783 * C116209) *
               C153680 +
           (C28701 * C153720 + C31544 * C153727 + C31545 * C116209) * C153687 +
           (C28702 * C153720 + C31546 * C153727 + C31547 * C116209) * C83601) *
              C153537 * C153521 * C132 -
          (((C28212 * C3289 - C28213 * C3282 - C28212 * C3290 +
             C153462 * C3294) *
                C116209 +
            (C28212 * C1763 - C28213 * C1757 - C28212 * C1764 +
             C153462 * C1772) *
                C153727 +
            (C28212 * C331 - C28213 * C311 - C28212 * C332 + C153462 * C347) *
                C153720) *
               C83601 +
           ((C28212 * C1332 - C28213 * C1326 - C28212 * C1333 +
             C153462 * C1341) *
                C116209 +
            (C28212 * C957 - C28213 * C948 - C28212 * C958 + C153462 * C966) *
                C153727 +
            (C28212 * C317 - C28213 * C304 - C28212 * C318 + C153462 * C340) *
                C153720) *
               C153687 +
           ((C28212 * C504 - C28213 * C484 - C28212 * C505 + C153462 * C520) *
                C116209 +
            (C28212 * C490 - C28213 * C477 - C28212 * C491 + C153462 * C513) *
                C153727 +
            (C28212 * C158 - C28213 * C147 - C28212 * C159 + C153462 * C171) *
                C153720) *
               C153680) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153720 +
             C31290 * C153727 + C31291 * C116209) *
                C153680 +
            (C148423 + C148424 + C148425) * C153687 + C148443 * C83601) *
               C473 -
           ((C31292 * C116209 + C29432 * C153727 + C29051 * C153720) * C83601 +
            (C31293 * C116209 + C29431 * C153727 + C29052 * C153720) * C153687 +
            (C31294 * C116209 + C31291 * C153727 + C31290 * C153720) *
                C153680) *
               C474 +
           ((C31291 * C153720 + C31294 * C153727 + C34035 * C116209) * C153680 +
            (C29431 * C153720 + C31293 * C153727 + C32703 * C116209) * C153687 +
            (C29432 * C153720 + C31292 * C153727 + C32704 * C116209) * C83601) *
               C475) *
              C153521 * C301 +
          (((C31295 * C153720 + C31296 * C153727 + C31297 * C116209) * C153680 +
            (C29053 * C153720 + C30997 * C153727 + C31298 * C116209) * C153687 +
            (C29054 * C153720 + C30998 * C153727 + C31299 * C116209) * C83601) *
               C474 -
           (C148444 * C83601 + (C148434 + C148433 + C148432) * C153687 +
            (C31296 * C116209 + C31295 * C153727 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153720) *
                C153680) *
               C473 -
           (((C28212 * C31225 - C28213 * C31222 - C28212 * C31226 +
              C153462 * C31228) *
                 C116209 +
             C31299 * C153727 + C30998 * C153720) *
                C83601 +
            (C56487 * C116209 + C31298 * C153727 + C30997 * C153720) * C153687 +
            (C56055 * C116209 + C31297 * C153727 + C31296 * C153720) *
                C153680) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153720 +
             C31290 * C153727 + C31291 * C116209) *
                C153680 +
            (C148423 + C148424 + C148425) * C153687 + C148443 * C83601) *
               C153849 -
           ((C31292 * C116209 + C29432 * C153727 + C29051 * C153720) * C83601 +
            (C31293 * C116209 + C29431 * C153727 + C29052 * C153720) * C153687 +
            (C31294 * C116209 + C31291 * C153727 + C31290 * C153720) *
                C153680) *
               C153601) *
              C153521 * C153917 +
          (((C31295 * C153720 + C31296 * C153727 + C31297 * C116209) * C153680 +
            (C29053 * C153720 + C30997 * C153727 + C31298 * C116209) * C153687 +
            (C29054 * C153720 + C30998 * C153727 + C31299 * C116209) * C83601) *
               C153601 -
           (C148444 * C83601 + (C148434 + C148433 + C148432) * C153687 +
            (C31296 * C116209 + C31295 * C153727 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153720) *
                C153680) *
               C153849) *
              C153521 * C153918 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C153720 +
             C31782 * C153727 + C31783 * C116209) *
                C153680 +
            (C148881 + C148882 + C148883) * C153687 +
            (C148884 + C148885 + C148886) * C83601) *
               C153849 -
           (((C28212 * C6185 - C28213 * C6179 - C28212 * C6186 +
              C153462 * C6197) *
                 C116209 +
             C31547 * C153727 + C31546 * C153720) *
                C83601 +
            (C67563 * C116209 + C31545 * C153727 + C31544 * C153720) * C153687 +
            (C56313 * C116209 + C31783 * C153727 + C31782 * C153720) *
                C153680) *
               C153601) *
              C153521 * C650)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153720 +
            C31290 * C153727 + C31291 * C116209) *
               C153680 +
           (C28405 * C153720 + C29052 * C153727 + C29431 * C116209) * C153687 +
           (C28406 * C153720 + C29051 * C153727 + C29432 * C116209) * C83601) *
              C153537 * C153521 * C130 -
          ((C30998 * C116209 + C29054 * C153727 + C28411 * C153720) * C83601 +
           (C30997 * C116209 + C29053 * C153727 + C28410 * C153720) * C153687 +
           (C31296 * C116209 + C31295 * C153727 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153720) *
               C153680) *
              C153537 * C153521 * C131 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C153720 +
            C31782 * C153727 + C31783 * C116209) *
               C153680 +
           (C28701 * C153720 + C31544 * C153727 + C31545 * C116209) * C153687 +
           (C28702 * C153720 + C31546 * C153727 + C31547 * C116209) * C83601) *
              C153537 * C153521 * C132 -
          (((C28212 * C3289 - C28213 * C3282 - C28212 * C3290 +
             C153462 * C3294) *
                C116209 +
            (C28212 * C1763 - C28213 * C1757 - C28212 * C1764 +
             C153462 * C1772) *
                C153727 +
            (C28212 * C331 - C28213 * C311 - C28212 * C332 + C153462 * C347) *
                C153720) *
               C83601 +
           ((C28212 * C1332 - C28213 * C1326 - C28212 * C1333 +
             C153462 * C1341) *
                C116209 +
            (C28212 * C957 - C28213 * C948 - C28212 * C958 + C153462 * C966) *
                C153727 +
            (C28212 * C317 - C28213 * C304 - C28212 * C318 + C153462 * C340) *
                C153720) *
               C153687 +
           ((C28212 * C504 - C28213 * C484 - C28212 * C505 + C153462 * C520) *
                C116209 +
            (C28212 * C490 - C28213 * C477 - C28212 * C491 + C153462 * C513) *
                C153727 +
            (C28212 * C158 - C28213 * C147 - C28212 * C159 + C153462 * C171) *
                C153720) *
               C153680) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153720 +
             C31290 * C153727 + C31291 * C116209) *
                C153680 +
            (C148423 + C148424 + C148425) * C153687 + C148443 * C83601) *
               C153537 * C298 -
           ((C148429 + C148430 + C148431) * C83601 +
            (C148428 + C148427 + C148426) * C153687 +
            (C148425 + C148424 + C148423) * C153680) *
               C153537 * C299 +
           (C148443 * C153680 + (C148431 + C148430 + C148429) * C153687 +
            (C28408 * C153720 + C29049 * C153727 + C29434 * C116209) * C83601) *
               C153537 * C300) *
              C301 +
          (((C148432 + C148433 + C148434) * C153680 +
            (C148435 + C148436 + C148437) * C153687 +
            (C148438 + C148439 + C148440) * C83601) *
               C153537 * C299 -
           (C148444 * C83601 + (C148434 + C148433 + C148432) * C153687 +
            (C31296 * C116209 + C31295 * C153727 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153720) *
                C153680) *
               C153537 * C298 -
           (((C28212 * C28550 - C28213 * C28547 - C28212 * C28551 +
              C153462 * C28553) *
                 C116209 +
             C29056 * C153727 + C28413 * C153720) *
                C83601 +
            (C148440 + C148439 + C148438) * C153687 + C148444 * C153680) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153720 +
             C31290 * C153727 + C31291 * C116209) *
                C153680 +
            (C148423 + C148424 + C148425) * C153687 + C148443 * C83601) *
               C153537 * C153919 -
           (C149775 * C83601 + (C148428 + C148427 + C148426) * C153687 +
            (C148425 + C148424 + C148423) * C153680) *
               C153537 * C153920 +
           (C148443 * C153680 + (C148431 + C148430 + C148429) * C153687 +
            (C149772 + C149773 + C149774) * C83601) *
               C153537 * C1469) *
              C153840 +
          (((C148432 + C148433 + C148434) * C153680 +
            (C148435 + C148436 + C148437) * C153687 +
            (C148438 + C148439 + C148440) * C83601) *
               C153537 * C153920 -
           (C148444 * C83601 + (C148434 + C148433 + C148432) * C153687 +
            (C31296 * C116209 + C31295 * C153727 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153720) *
                C153680) *
               C153537 * C153919 -
           (((C28212 * C28550 - C28213 * C28547 - C28212 * C28551 +
              C153462 * C28553) *
                 C116209 +
             C29056 * C153727 + C28413 * C153720) *
                C83601 +
            (C148440 + C148439 + C148438) * C153687 + C148444 * C153680) *
               C153537 * C1469) *
              C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153720 +
             C31290 * C153727 + C31291 * C116209) *
                C153680 +
            (C148423 + C148424 + C148425) * C153687 + C148443 * C83601) *
               C153849 -
           (C150730 * C83601 + (C149398 + C149399 + C149400) * C153687 +
            (C31294 * C116209 + C31291 * C153727 + C31290 * C153720) *
                C153680) *
               C153601) *
              C153919 +
          (((C149400 + C149399 + C149398) * C153680 +
            (C149397 + C149396 + C149395) * C153687 +
            (C150727 + C150728 + C150729) * C83601) *
               C153601 -
           (C149775 * C83601 + (C148428 + C148427 + C148426) * C153687 +
            (C148425 + C148424 + C148423) * C153680) *
               C153849) *
              C153920 +
          ((C148443 * C153680 + (C148431 + C148430 + C148429) * C153687 +
            (C149772 + C149773 + C149774) * C83601) *
               C153849 -
           (((C28212 * C30184 - C28213 * C30182 - C28212 * C30185 +
              C153462 * C30188) *
                 C116209 +
             C29434 * C153727 + C29049 * C153720) *
                C83601 +
            (C150729 + C150728 + C150727) * C153687 + C150730 * C153680) *
               C153601) *
              C1469) *
         C153502) /
        (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153720 +
            C31290 * C153727 + C31291 * C116209) *
               C153680 +
           (C148423 + C148424 + C148425) * C153687 + C148443 * C83601) *
              C153537 * C1178 -
          (C149775 * C83601 + (C148428 + C148427 + C148426) * C153687 +
           (C148425 + C148424 + C148423) * C153680) *
              C153537 * C1179 +
          (C148443 * C153680 + (C148431 + C148430 + C148429) * C153687 +
           (C149772 + C149773 + C149774) * C83601) *
              C153537 * C1180 -
          (((C28212 * C29403 - C28213 * C29402 - C28212 * C29404 +
             C153462 * C29405) *
                C116209 +
            C29855 * C153727 + C28409 * C153720) *
               C83601 +
           (C149774 + C149773 + C149772) * C153687 + C149775 * C153680) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153720 +
             C31290 * C153727 + C31291 * C116209) *
                C153680 +
            (C148423 + C148424 + C148425) * C153687 + C148443 * C83601) *
               C153537 * C1091 -
           ((C148429 + C148430 + C148431) * C83601 +
            (C148428 + C148427 + C148426) * C153687 +
            (C148425 + C148424 + C148423) * C153680) *
               C153537 * C153573) *
              C1093 +
          (((C148432 + C148433 + C148434) * C153680 +
            (C148435 + C148436 + C148437) * C153687 +
            (C148438 + C148439 + C148440) * C83601) *
               C153537 * C153573 -
           (C148444 * C83601 + (C148434 + C148433 + C148432) * C153687 +
            (C31296 * C116209 + C31295 * C153727 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153720) *
                C153680) *
               C153537 * C1091) *
              C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C153720 +
             C31782 * C153727 + C31783 * C116209) *
                C153680 +
            (C148881 + C148882 + C148883) * C153687 +
            (C148884 + C148885 + C148886) * C83601) *
               C153537 * C1091 -
           (((C28212 * C4784 - C28213 * C4781 - C28212 * C4785 +
              C153462 * C4790) *
                 C116209 +
             C44743 * C153727 + C28703 * C153720) *
                C83601 +
            (C148886 + C148885 + C148884) * C153687 +
            (C148883 + C148882 + C148881) * C153680) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153720 +
             C31290 * C153727 + C31291 * C116209) *
                C153680 +
            (C148423 + C148424 + C148425) * C153687 + C148443 * C83601) *
               C473 -
           ((C149395 + C149396 + C149397) * C83601 +
            (C149398 + C149399 + C149400) * C153687 +
            (C31294 * C116209 + C31291 * C153727 + C31290 * C153720) *
                C153680) *
               C474 +
           ((C31291 * C153720 + C31294 * C153727 + C34035 * C116209) * C153680 +
            (C149994 + C149995 + C149996) * C153687 +
            (C149997 + C149998 + C149999) * C83601) *
               C475) *
              C1091 +
          (((C149400 + C149399 + C149398) * C153680 +
            (C149397 + C149396 + C149395) * C153687 +
            (C29050 * C153720 + C29433 * C153727 + C32705 * C116209) * C83601) *
               C474 -
           (C149775 * C83601 + (C148428 + C148427 + C148426) * C153687 +
            (C148425 + C148424 + C148423) * C153680) *
               C473 -
           (((C28212 * C32677 - C28213 * C32676 - C28212 * C32678 +
              C153462 * C32679) *
                 C116209 +
             C32705 * C153727 + C29433 * C153720) *
                C83601 +
            (C149999 + C149998 + C149997) * C153687 +
            (C149996 + C149995 + C149994) * C153680) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                  C153720 +
              C31290 * C153727 + C31291 * C116209) *
                 C153680 +
             (C148423 + C148424 + C148425) * C153687 + C148443 * C83601) *
                C153849 -
            ((C149395 + C149396 + C149397) * C83601 +
             (C149398 + C149399 + C149400) * C153687 +
             (C31294 * C116209 + C31291 * C153727 + C31290 * C153720) *
                 C153680) *
                C153601) *
               C1091 +
           (((C149400 + C149399 + C149398) * C153680 +
             (C149397 + C149396 + C149395) * C153687 +
             (C29050 * C153720 + C29433 * C153727 + C32705 * C116209) *
                 C83601) *
                C153601 -
            (C149775 * C83601 + (C148428 + C148427 + C148426) * C153687 +
             (C148425 + C148424 + C148423) * C153680) *
                C153849) *
               C153573) *
              C153840 +
          ((((C31295 * C153720 + C31296 * C153727 + C31297 * C116209) *
                 C153680 +
             (C149401 + C149402 + C149403) * C153687 +
             (C149404 + C149405 + C149406) * C83601) *
                C153601 -
            (C148444 * C83601 + (C148434 + C148433 + C148432) * C153687 +
             (C31296 * C116209 + C31295 * C153727 +
              (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                  C153720) *
                 C153680) *
                C153849) *
               C1091 +
           (((C148432 + C148433 + C148434) * C153680 +
             (C148435 + C148436 + C148437) * C153687 +
             (C148438 + C148439 + C148440) * C83601) *
                C153849 -
            (((C28212 * C32074 - C28213 * C32073 - C28212 * C32075 +
               C153462 * C32076) *
                  C116209 +
              C30999 * C153727 + C29055 * C153720) *
                 C83601 +
             (C149406 + C149405 + C149404) * C153687 +
             (C149403 + C149402 + C149401) * C153680) *
                C153601) *
               C153573) *
              C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153720 +
             C31290 * C153727 + C31291 * C116209) *
                C153680 +
            (C148423 + C148424 + C148425) * C153687 + C148443 * C83601) *
               C153537 * C1091 -
           ((C148429 + C148430 + C148431) * C83601 +
            (C148428 + C148427 + C148426) * C153687 +
            (C148425 + C148424 + C148423) * C153680) *
               C153537 * C153573) *
              C1093 +
          (((C148432 + C148433 + C148434) * C153680 +
            (C148435 + C148436 + C148437) * C153687 +
            (C148438 + C148439 + C148440) * C83601) *
               C153537 * C153573 -
           (C148444 * C83601 + (C148434 + C148433 + C148432) * C153687 +
            (C31296 * C116209 + C31295 * C153727 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153720) *
                C153680) *
               C153537 * C1091) *
              C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C153720 +
             C31782 * C153727 + C31783 * C116209) *
                C153680 +
            (C148881 + C148882 + C148883) * C153687 +
            (C148884 + C148885 + C148886) * C83601) *
               C153537 * C1091 -
           (((C28212 * C4784 - C28213 * C4781 - C28212 * C4785 +
              C153462 * C4790) *
                 C116209 +
             C44743 * C153727 + C28703 * C153720) *
                C83601 +
            (C148886 + C148885 + C148884) * C153687 +
            (C148883 + C148882 + C148881) * C153680) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153720 +
            C31290 * C153727 + C31291 * C116209) *
               C153680 +
           (C148423 + C148424 + C148425) * C153687 + C148443 * C83601) *
              C153537 * C1178 -
          (C149775 * C83601 + (C148428 + C148427 + C148426) * C153687 +
           (C148425 + C148424 + C148423) * C153680) *
              C153537 * C1179 +
          (C148443 * C153680 + (C148431 + C148430 + C148429) * C153687 +
           (C149772 + C149773 + C149774) * C83601) *
              C153537 * C1180 -
          (((C28212 * C29403 - C28213 * C29402 - C28212 * C29404 +
             C153462 * C29405) *
                C116209 +
            C29855 * C153727 + C28409 * C153720) *
               C83601 +
           (C149774 + C149773 + C149772) * C153687 + C149775 * C153680) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                  C153720 +
              C31290 * C153727 + C31291 * C116209) *
                 C153680 +
             (C148423 + C148424 + C148425) * C153687 + C148443 * C83601) *
                C1898 -
            (C150730 * C83601 + (C149398 + C149399 + C149400) * C153687 +
             (C31294 * C116209 + C31291 * C153727 + C31290 * C153720) *
                 C153680) *
                C153601) *
               C153848 +
           (((C149400 + C149399 + C149398) * C153680 +
             (C149397 + C149396 + C149395) * C153687 +
             (C150727 + C150728 + C150729) * C83601) *
                C153601 -
            (C149775 * C83601 + (C148428 + C148427 + C148426) * C153687 +
             (C148425 + C148424 + C148423) * C153680) *
                C1898) *
               C153573) *
              C153840 +
          ((((C31295 * C153720 + C31296 * C153727 + C31297 * C116209) *
                 C153680 +
             (C149401 + C149402 + C149403) * C153687 +
             (C149404 + C149405 + C149406) * C83601) *
                C153601 -
            (C148444 * C83601 + (C148434 + C148433 + C148432) * C153687 +
             (C31296 * C116209 + C31295 * C153727 +
              (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                  C153720) *
                 C153680) *
                C1898) *
               C153848 +
           (((C148432 + C148433 + C148434) * C153680 +
             (C148435 + C148436 + C148437) * C153687 +
             (C148438 + C148439 + C148440) * C83601) *
                C1898 -
            (((C28212 * C32074 - C28213 * C32073 - C28212 * C32075 +
               C153462 * C32076) *
                  C116209 +
              C30999 * C153727 + C29055 * C153720) *
                 C83601 +
             (C149406 + C149405 + C149404) * C153687 +
             (C149403 + C149402 + C149401) * C153680) *
                C153601) *
               C153573) *
              C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153720 +
             C31290 * C153727 + C31291 * C116209) *
                C153680 +
            (C148423 + C148424 + C148425) * C153687 + C148443 * C83601) *
               C153921 -
           (C150730 * C83601 + (C149398 + C149399 + C149400) * C153687 +
            (C31294 * C116209 + C31291 * C153727 + C31290 * C153720) *
                C153680) *
               C153922 +
           ((C31291 * C153720 + C31294 * C153727 + C34035 * C116209) * C153680 +
            (C149994 + C149995 + C149996) * C153687 +
            (C149997 + C149998 + C149999) * C83601) *
               C2414) *
              C153848 +
          (((C149400 + C149399 + C149398) * C153680 +
            (C149397 + C149396 + C149395) * C153687 +
            (C150727 + C150728 + C150729) * C83601) *
               C153922 -
           (C149775 * C83601 + (C148428 + C148427 + C148426) * C153687 +
            (C148425 + C148424 + C148423) * C153680) *
               C153921 -
           (((C28212 * C32677 - C28213 * C32676 - C28212 * C32678 +
              C153462 * C32679) *
                 C116209 +
             C32705 * C153727 + C29433 * C153720) *
                C83601 +
            (C149999 + C149998 + C149997) * C153687 +
            (C149996 + C149995 + C149994) * C153680) *
               C2414) *
              C153573) *
         C153502) /
        (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153720 +
             C31290 * C153727 + C31291 * C116209) *
                C153680 +
            (C148423 + C148424 + C148425) * C153687 + C148443 * C83601) *
               C1898 -
           (C150730 * C83601 + (C149398 + C149399 + C149400) * C153687 +
            (C31294 * C116209 + C31291 * C153727 + C31290 * C153720) *
                C153680) *
               C153601) *
              C298 +
          (((C149400 + C149399 + C149398) * C153680 +
            (C149397 + C149396 + C149395) * C153687 +
            (C150727 + C150728 + C150729) * C83601) *
               C153601 -
           (C149775 * C83601 + (C148428 + C148427 + C148426) * C153687 +
            (C148425 + C148424 + C148423) * C153680) *
               C1898) *
              C299 +
          ((C148443 * C153680 + (C148431 + C148430 + C148429) * C153687 +
            (C149772 + C149773 + C149774) * C83601) *
               C1898 -
           (((C28212 * C30184 - C28213 * C30182 - C28212 * C30185 +
              C153462 * C30188) *
                 C116209 +
             C29434 * C153727 + C29049 * C153720) *
                C83601 +
            (C150729 + C150728 + C150727) * C153687 + C150730 * C153680) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153720 +
             C31290 * C153727 + C31291 * C116209) *
                C153680 +
            (C148423 + C148424 + C148425) * C153687 + C148443 * C83601) *
               C1898 -
           (C150730 * C83601 + (C149398 + C149399 + C149400) * C153687 +
            (C31294 * C116209 + C31291 * C153727 + C31290 * C153720) *
                C153680) *
               C153601) *
              C153521 * C1093 +
          (((C31295 * C153720 + C31296 * C153727 + C31297 * C116209) * C153680 +
            (C149401 + C149402 + C149403) * C153687 +
            (C149404 + C149405 + C149406) * C83601) *
               C153601 -
           (C148444 * C83601 + (C148434 + C148433 + C148432) * C153687 +
            (C31296 * C116209 + C31295 * C153727 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153720) *
                C153680) *
               C1898) *
              C153521 * C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C153720 +
             C31782 * C153727 + C31783 * C116209) *
                C153680 +
            (C148881 + C148882 + C148883) * C153687 +
            (C148884 + C148885 + C148886) * C83601) *
               C1898 -
           (((C28212 * C6185 - C28213 * C6179 - C28212 * C6186 +
              C153462 * C6197) *
                 C116209 +
             C31547 * C153727 + C31546 * C153720) *
                C83601 +
            (C67563 * C116209 + C31545 * C153727 + C31544 * C153720) * C153687 +
            (C56313 * C116209 + C31783 * C153727 + C31782 * C153720) *
                C153680) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153720 +
            C31290 * C153727 + C31291 * C116209) *
               C153680 +
           (C148423 + C148424 + C148425) * C153687 + C148443 * C83601) *
              C2104 -
          (C150730 * C83601 + (C149398 + C149399 + C149400) * C153687 +
           (C31294 * C116209 + C31291 * C153727 + C31290 * C153720) * C153680) *
              C2105 +
          ((C31291 * C153720 + C31294 * C153727 + C34035 * C116209) * C153680 +
           (C149994 + C149995 + C149996) * C153687 +
           (C149997 + C149998 + C149999) * C83601) *
              C2106 -
          (((C28212 * C34022 - C28213 * C34020 - C28212 * C34023 +
             C153462 * C34026) *
                C116209 +
            C32704 * C153727 + C31292 * C153720) *
               C83601 +
           (C56824 * C116209 + C32703 * C153727 + C31293 * C153720) * C153687 +
           (C56054 * C116209 + C34035 * C153727 + C31294 * C153720) * C153680) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153720 +
             C31290 * C153727 + C31291 * C116209) *
                C153680 +
            (C148423 + C148424 + C148425) * C153687 + C148443 * C83601) *
               C153921 -
           (C150730 * C83601 + (C149398 + C149399 + C149400) * C153687 +
            (C31294 * C116209 + C31291 * C153727 + C31290 * C153720) *
                C153680) *
               C153922 +
           ((C31291 * C153720 + C31294 * C153727 + C34035 * C116209) * C153680 +
            (C149994 + C149995 + C149996) * C153687 +
            (C149997 + C149998 + C149999) * C83601) *
               C2414) *
              C153521 * C153840 +
          (((C31295 * C153720 + C31296 * C153727 + C31297 * C116209) * C153680 +
            (C149401 + C149402 + C149403) * C153687 +
            (C149404 + C149405 + C149406) * C83601) *
               C153922 -
           (C148444 * C83601 + (C148434 + C148433 + C148432) * C153687 +
            (C31296 * C116209 + C31295 * C153727 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153720) *
                C153680) *
               C153921 -
           (((C28212 * C31225 - C28213 * C31222 - C28212 * C31226 +
              C153462 * C31228) *
                 C116209 +
             C31299 * C153727 + C30998 * C153720) *
                C83601 +
            (C56487 * C116209 + C31298 * C153727 + C30997 * C153720) * C153687 +
            (C56055 * C116209 + C31297 * C153727 + C31296 * C153720) *
                C153680) *
               C2414) *
              C153521 * C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153720 +
             C31290 * C153727 + C31291 * C116209) *
                C153680 +
            (C148423 + C148424 + C148425) * C153687 + C148443 * C83601) *
               C1898 -
           (C150730 * C83601 + (C149398 + C149399 + C149400) * C153687 +
            (C31294 * C116209 + C31291 * C153727 + C31290 * C153720) *
                C153680) *
               C153601) *
              C153521 * C1093 +
          (((C31295 * C153720 + C31296 * C153727 + C31297 * C116209) * C153680 +
            (C149401 + C149402 + C149403) * C153687 +
            (C149404 + C149405 + C149406) * C83601) *
               C153601 -
           (C148444 * C83601 + (C148434 + C148433 + C148432) * C153687 +
            (C31296 * C116209 + C31295 * C153727 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153720) *
                C153680) *
               C1898) *
              C153521 * C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C153720 +
             C31782 * C153727 + C31783 * C116209) *
                C153680 +
            (C148881 + C148882 + C148883) * C153687 +
            (C148884 + C148885 + C148886) * C83601) *
               C1898 -
           (((C28212 * C6185 - C28213 * C6179 - C28212 * C6186 +
              C153462 * C6197) *
                 C116209 +
             C31547 * C153727 + C31546 * C153720) *
                C83601 +
            (C67563 * C116209 + C31545 * C153727 + C31544 * C153720) * C153687 +
            (C56313 * C116209 + C31783 * C153727 + C31782 * C153720) *
                C153680) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153720 +
             C31290 * C153727 + C31291 * C116209) *
                C153680 +
            (C148423 + C148424 + C148425) * C153687 + C148443 * C83601) *
               C1898 -
           (C150730 * C83601 + (C149398 + C149399 + C149400) * C153687 +
            (C31294 * C116209 + C31291 * C153727 + C31290 * C153720) *
                C153680) *
               C153601) *
              C298 +
          (((C149400 + C149399 + C149398) * C153680 +
            (C149397 + C149396 + C149395) * C153687 +
            (C150727 + C150728 + C150729) * C83601) *
               C153601 -
           (C149775 * C83601 + (C148428 + C148427 + C148426) * C153687 +
            (C148425 + C148424 + C148423) * C153680) *
               C1898) *
              C299 +
          ((C148443 * C153680 + (C148431 + C148430 + C148429) * C153687 +
            (C149772 + C149773 + C149774) * C83601) *
               C1898 -
           (((C28212 * C30184 - C28213 * C30182 - C28212 * C30185 +
              C153462 * C30188) *
                 C116209 +
             C29434 * C153727 + C29049 * C153720) *
                C83601 +
            (C150729 + C150728 + C150727) * C153687 + C150730 * C153680) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C98536 +
             C31290 * C153724) *
                C153943 +
            (C130855 + C130856) * C153939 + C130871 * C153929 +
            C130872 * C153871) *
               C153537 * C153848 -
           ((C130861 + C130862) * C153871 + (C130860 + C130859) * C153929 +
            (C130858 + C130857) * C153939 + (C130856 + C130855) * C153943) *
               C153537 * C153573) *
              C153917 +
          (((C130863 + C130864) * C153943 + (C130865 + C130866) * C153939 +
            (C130867 + C130868) * C153929 + (C130869 + C130870) * C153871) *
               C153537 * C153573 -
           (C130873 * C153871 + C130874 * C153929 +
            (C130864 + C130863) * C153939 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C98536) *
                C153943) *
               C153537 * C153848) *
              C153918 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C98536 +
             C31782 * C153724) *
                C153943 +
            (C131263 + C131264) * C153939 + (C131265 + C131266) * C153929 +
            (C131267 + C131268) * C153871) *
               C153537 * C153848 -
           (((C28212 * C5564 - C28213 * C5561 - C28212 * C5565 +
              C153462 * C5570) *
                 C153724 +
             C28704 * C98536) *
                C153871 +
            (C131268 + C131267) * C153929 + (C131266 + C131265) * C153939 +
            (C131264 + C131263) * C153943) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C98536 +
             (C48244 + C48245 + C48246) * C153724) *
                C70498 +
            ((C24325 + C24326 + C24327) * C98536 +
             (C25412 + C25411 + C25410) * C153724) *
                C153684) *
               C153537 * C153848 -
           ((C26806 * C153724 + (C24330 + C24329 + C24328) * C98536) * C153684 +
            ((C25410 + C25411 + C25412) * C153724 +
             (C24327 + C24326 + C24325) * C98536) *
                C70498) *
               C153537 * C153573) *
              C153917 +
          ((((C24334 + C24335 + C24336) * C98536 +
             (C25413 + C25414 + C25415) * C153724) *
                C70498 +
            ((C24337 + C24338 + C24339) * C98536 +
             (C25416 + C25417 + C25418) * C153724) *
                C153684) *
               C153537 * C153573 -
           (((C25415 + C25414 + C25413) * C153724 +
             (C24336 + C24335 + C24334) * C98536) *
                C153684 +
            ((C48255 + C48254 + C48253) * C153724 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C98536) *
                C70498) *
               C153537 * C153848) *
              C153918 +
          ((((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
              C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
              C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                 C98536 +
             (C48738 + C48739 + C48740) * C153724) *
                C70498 +
            ((C24821 + C24822 + C24823) * C98536 +
             (C126360 + C126361 + C126362) * C153724) *
                C153684) *
               C153537 * C153848 -
           (((C23996 * C1761 - C23997 * C1756 - C23996 * C1762 +
              C153885 * C1771 + C23994 * C1763 - C23995 * C1757 -
              C23994 * C1764 + C153914 * C1772 + C23992 * C1765 -
              C23993 * C1758 - C23992 * C1766 + C153933 * C1773) *
                 C153724 +
             (C24826 + C24825 + C24824) * C98536) *
                C153684 +
            ((C126362 + C126361 + C126360) * C153724 +
             (C24823 + C24822 + C24821) * C98536) *
                C70498) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153944 +
             C31290 * C153941 + C31291 * C153932 + C31294 * C153878) *
                C70498 +
            (C134399 + C134400 + C134401 + C134402) * C153684) *
               C153537 * C153848 -
           ((C134403 + C134404 + C134405 + C134406) * C153684 +
            (C134402 + C134401 + C134400 + C134399) * C70498) *
               C153537 * C153573) *
              C153917 +
          (((C134407 + C134408 + C134409 + C134410) * C70498 +
            (C134411 + C134412 + C134413 + C134414) * C153684) *
               C153537 * C153573 -
           ((C134410 + C134409 + C134408 + C134407) * C153684 +
            (C31297 * C153878 + C31296 * C153932 + C31295 * C153941 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153944) *
                C70498) *
               C153537 * C153848) *
              C153918 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C153944 +
             C31782 * C153941 + C31783 * C153932 + C56313 * C153878) *
                C70498 +
            (C134803 + C134804 + C134805 + C134806) * C153684) *
               C153537 * C153848 -
           (((C28212 * C6185 - C28213 * C6179 - C28212 * C6186 +
              C153462 * C6197) *
                 C153878 +
             C31547 * C153932 + C31546 * C153941 + C28702 * C153944) *
                C153684 +
            (C134806 + C134805 + C134804 + C134803) * C70498) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                  C98536 +
              C31290 * C153724) *
                 C153943 +
             (C130855 + C130856) * C153939 + C130871 * C153929 +
             C130872 * C153871) *
                C153849 -
            ((C131721 + C131722) * C153871 + (C131723 + C131724) * C153929 +
             (C131725 + C131726) * C153939 +
             (C31291 * C153724 + C31290 * C98536) * C153943) *
                C153601) *
               C153848 +
           (((C131726 + C131725) * C153943 + (C131724 + C131723) * C153939 +
             (C131722 + C131721) * C153929 +
             (C29049 * C98536 + C29434 * C153724) * C153871) *
                C153601 -
            ((C130861 + C130862) * C153871 + (C130860 + C130859) * C153929 +
             (C130858 + C130857) * C153939 + (C130856 + C130855) * C153943) *
                C153849) *
               C153573) *
              C301 +
          ((((C31295 * C98536 + C31296 * C153724) * C153943 +
             (C131727 + C131728) * C153939 + (C131729 + C131730) * C153929 +
             (C131731 + C131732) * C153871) *
                C153601 -
            (C130873 * C153871 + C130874 * C153929 +
             (C130864 + C130863) * C153939 +
             (C31295 * C153724 +
              (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                  C98536) *
                 C153943) *
                C153849) *
               C153848 +
           (((C130863 + C130864) * C153943 + (C130865 + C130866) * C153939 +
             (C130867 + C130868) * C153929 + (C130869 + C130870) * C153871) *
                C153849 -
            (((C28212 * C28550 - C28213 * C28547 - C28212 * C28551 +
               C153462 * C28553) *
                  C153724 +
              C29056 * C98536) *
                 C153871 +
             (C131732 + C131731) * C153929 + (C131730 + C131729) * C153939 +
             (C131728 + C131727) * C153943) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
               C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
               C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                  C98536 +
              (C48244 + C48245 + C48246) * C153724) *
                 C70498 +
             ((C24325 + C24326 + C24327) * C98536 + C127043 * C153724) *
                 C153684) *
                C153849 -
            ((C49653 * C153724 + C127044 * C98536) * C153684 +
             ((C48249 + C48248 + C48247) * C153724 +
              (C48246 + C48245 + C48244) * C98536) *
                 C70498) *
                C153601) *
               C153848 +
           (((C127043 * C98536 + (C26061 + C26062 + C26063) * C153724) *
                 C70498 +
             ((C25409 + C25408 + C25407) * C98536 +
              (C26064 + C26065 + C26066) * C153724) *
                 C153684) *
                C153601 -
            ((C26806 * C153724 + (C24330 + C24329 + C24328) * C98536) *
                 C153684 +
             (C127044 * C153724 + (C24327 + C24326 + C24325) * C98536) *
                 C70498) *
                C153849) *
               C153573) *
              C301 +
          (((((C48253 + C48254 + C48255) * C98536 +
              (C48256 + C48257 + C48258) * C153724) *
                 C70498 +
             (C127045 * C98536 + (C49052 + C49053 + C49054) * C153724) *
                 C153684) *
                C153601 -
            ((C127046 * C153724 + (C24336 + C24335 + C24334) * C98536) *
                 C153684 +
             ((C48255 + C48254 + C48253) * C153724 +
              (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
               C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
               C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                  C98536) *
                 C70498) *
                C153849) *
               C153848 +
           ((((C24334 + C24335 + C24336) * C98536 + C127045 * C153724) *
                 C70498 +
             ((C24337 + C24338 + C24339) * C98536 +
              (C25416 + C25417 + C25418) * C153724) *
                 C153684) *
                C153849 -
            (((C23996 * C3289 - C23997 * C3282 - C23996 * C3290 +
               C153885 * C3294 + C23994 * C3287 - C23995 * C3281 -
               C23994 * C3288 + C153914 * C3293 + C23992 * C3285 -
               C23993 * C3280 - C23992 * C3286 + C153933 * C3292) *
                  C153724 +
              (C25418 + C25417 + C25416) * C98536) *
                 C153684 +
             ((C49054 + C49053 + C49052) * C153724 + C127046 * C98536) *
                 C70498) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                  C153944 +
              C31290 * C153941 + C31291 * C153932 + C31294 * C153878) *
                 C70498 +
             (C134399 + C134400 + C134401 + C134402) * C153684) *
                C153849 -
            ((C135259 + C135260 + C135261 + C135262) * C153684 +
             (C34035 * C153878 + C31294 * C153932 + C31291 * C153941 +
              C31290 * C153944) *
                 C70498) *
                C153601) *
               C153848 +
           (((C135262 + C135261 + C135260 + C135259) * C70498 +
             (C29051 * C153944 + C29432 * C153941 + C31292 * C153932 +
              C32704 * C153878) *
                 C153684) *
                C153601 -
            ((C134403 + C134404 + C134405 + C134406) * C153684 +
             (C134402 + C134401 + C134400 + C134399) * C70498) *
                C153849) *
               C153573) *
              C301 +
          ((((C31295 * C153944 + C31296 * C153941 + C31297 * C153932 +
              C56055 * C153878) *
                 C70498 +
             (C135263 + C135264 + C135265 + C135266) * C153684) *
                C153601 -
            ((C134410 + C134409 + C134408 + C134407) * C153684 +
             (C31297 * C153878 + C31296 * C153932 + C31295 * C153941 +
              (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                  C153944) *
                 C70498) *
                C153849) *
               C153848 +
           (((C134407 + C134408 + C134409 + C134410) * C70498 +
             (C134411 + C134412 + C134413 + C134414) * C153684) *
                C153849 -
            (((C28212 * C31225 - C28213 * C31222 - C28212 * C31226 +
               C153462 * C31228) *
                  C153878 +
              C31299 * C153932 + C30998 * C153941 + C29054 * C153944) *
                 C153684 +
             (C135266 + C135265 + C135264 + C135263) * C70498) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C23992 * C152 - C23993 * C144 - C23992 * C153 +
                 C153933 * C168 + C23994 * C154 - C23995 * C145 -
                 C23994 * C155 + C153914 * C169 + C23996 * C156 -
                 C23997 * C146 - C23996 * C157 + C153885 * C170) *
                    C98536 +
                (C48244 + C48245 + C48246) * C153724) *
                   C70498 +
               ((C24325 + C24326 + C24327) * C98536 +
                (C25412 + C25411 + C25410) * C153724) *
                   C153684) *
                  C153537 * C153521 * C130 -
              (((C25415 + C25414 + C25413) * C153724 +
                (C24336 + C24335 + C24334) * C98536) *
                   C153684 +
               ((C48255 + C48254 + C48253) * C153724 +
                (C23996 * C158 - C23997 * C147 - C23996 * C159 +
                 C153885 * C171 + C23994 * C156 - C23995 * C146 -
                 C23994 * C157 + C153914 * C170 + C23992 * C154 -
                 C23993 * C145 - C23992 * C155 + C153933 * C169) *
                    C98536) *
                   C70498) *
                  C153537 * C153521 * C131 +
              (((C23992 * C156 - C23993 * C146 - C23992 * C157 +
                 C153933 * C170 + C23994 * C158 - C23995 * C147 -
                 C23994 * C159 + C153914 * C171 + C23996 * C160 -
                 C23997 * C148 - C23996 * C161 + C153885 * C172) *
                    C98536 +
                (C48738 + C48739 + C48740) * C153724) *
                   C70498 +
               ((C24821 + C24822 + C24823) * C98536 +
                (C23992 * C955 - C23993 * C947 - C23992 * C956 +
                 C153933 * C965 + C23994 * C957 - C23995 * C948 -
                 C23994 * C958 + C153914 * C966 + C23996 * C959 -
                 C23997 * C949 - C23996 * C960 + C153885 * C967) *
                    C153724) *
                   C153684) *
                  C153537 * C153521 * C132 -
              (((C23996 * C961 - C23997 * C950 - C23996 * C962 +
                 C153885 * C968 + C23994 * C959 - C23995 * C949 -
                 C23994 * C960 + C153914 * C967 + C23992 * C957 -
                 C23993 * C948 - C23992 * C958 + C153933 * C966) *
                    C153724 +
                (C23996 * C335 - C23997 * C313 - C23996 * C336 +
                 C153885 * C349 + C23994 * C315 - C23995 * C303 -
                 C23994 * C316 + C153914 * C339 + C23992 * C317 -
                 C23993 * C304 - C23992 * C318 + C153933 * C340) *
                    C98536) *
                   C153684 +
               ((C23996 * C508 - C23997 * C486 - C23996 * C509 +
                 C153885 * C522 + C23994 * C488 - C23995 * C476 -
                 C23994 * C489 + C153914 * C512 + C23992 * C490 -
                 C23993 * C477 - C23992 * C491 + C153933 * C513) *
                    C153724 +
                (C23996 * C162 - C23997 * C149 - C23996 * C163 +
                 C153885 * C173 + C23994 * C160 - C23995 * C148 -
                 C23994 * C161 + C153914 * C172 + C23992 * C158 -
                 C23993 * C147 - C23992 * C159 + C153933 * C171) *
                    C98536) *
                   C70498) *
                  C153537 * C153521 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C23992 * C152 - C23993 * C144 - C23992 * C153 +
                  C153933 * C168 + C23994 * C154 - C23995 * C145 -
                  C23994 * C155 + C153914 * C169 + C23996 * C156 -
                  C23997 * C146 - C23996 * C157 + C153885 * C170) *
                     C98536 +
                 (C48244 + C48245 + C48246) * C153724) *
                    C70498 +
                ((C24325 + C24326 + C24327) * C98536 +
                 (C25412 + C25411 + C25410) * C153724) *
                    C153684) *
                   C153537 * C298 -
               ((C26806 * C153724 + (C24330 + C24329 + C24328) * C98536) *
                    C153684 +
                ((C25410 + C25411 + C25412) * C153724 +
                 (C24327 + C24326 + C24325) * C98536) *
                    C70498) *
                   C153537 * C299 +
               ((C24345 * C98536 + (C25409 + C25408 + C25407) * C153724) *
                    C70498 +
                ((C24333 + C24332 + C24331) * C98536 +
                 (C26814 + C26815 + C26816) * C153724) *
                    C153684) *
                   C153537 * C300) *
                  C301 +
              ((((C24334 + C24335 + C24336) * C98536 +
                 (C25413 + C25414 + C25415) * C153724) *
                    C70498 +
                ((C24337 + C24338 + C24339) * C98536 +
                 (C25416 + C25417 + C25418) * C153724) *
                    C153684) *
                   C153537 * C299 -
               (((C25415 + C25414 + C25413) * C153724 +
                 (C24336 + C24335 + C24334) * C98536) *
                    C153684 +
                ((C48255 + C48254 + C48253) * C153724 +
                 (C23996 * C158 - C23997 * C147 - C23996 * C159 +
                  C153885 * C171 + C23994 * C156 - C23995 * C146 -
                  C23994 * C157 + C153914 * C170 + C23992 * C154 -
                  C23993 * C145 - C23992 * C155 + C153933 * C169) *
                     C98536) *
                    C70498) *
                   C153537 * C298 -
               (((C23996 * C4073 - C23997 * C4066 - C23996 * C4074 +
                  C153885 * C4078 + C23994 * C4071 - C23995 * C4065 -
                  C23994 * C4072 + C153914 * C4077 + C23992 * C4069 -
                  C23993 * C4064 - C23992 * C4070 + C153933 * C4076) *
                     C153724 +
                 (C24342 + C24341 + C24340) * C98536) *
                    C153684 +
                ((C25418 + C25417 + C25416) * C153724 + C24346 * C98536) *
                    C70498) *
                   C153537 * C300) *
                  C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C98536 +
             (C48244 + C48245 + C48246) * C153724) *
                C70498 +
            ((C24325 + C24326 + C24327) * C98536 +
             (C25412 + C25411 + C25410) * C153724) *
                C153684) *
               C473 -
           ((C49653 * C153724 + (C25410 + C25411 + C25412) * C98536) * C153684 +
            ((C48249 + C48248 + C48247) * C153724 +
             (C48246 + C48245 + C48244) * C98536) *
                C70498) *
               C474 +
           ((C48264 * C98536 + (C48252 + C48251 + C48250) * C153724) * C70498 +
            ((C26061 + C26062 + C26063) * C98536 +
             (C49657 + C49658 + C49659) * C153724) *
                C153684) *
               C475) *
              C153521 * C301 +
          ((((C48253 + C48254 + C48255) * C98536 +
             (C48256 + C48257 + C48258) * C153724) *
                C70498 +
            ((C25413 + C25414 + C25415) * C98536 +
             (C49052 + C49053 + C49054) * C153724) *
                C153684) *
               C474 -
           (((C25415 + C25414 + C25413) * C153724 +
             (C24336 + C24335 + C24334) * C98536) *
                C153684 +
            ((C48255 + C48254 + C48253) * C153724 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C98536) *
                C70498) *
               C473 -
           (((C23996 * C8429 - C23997 * C8428 - C23996 * C8430 +
              C153885 * C8431 + C23994 * C6191 - C23995 * C6182 -
              C23994 * C6192 + C153914 * C6200 + C23992 * C6193 -
              C23993 * C6183 - C23992 * C6194 + C153933 * C6201) *
                 C153724 +
             (C49054 + C49053 + C49052) * C98536) *
                C153684 +
            ((C48261 + C48260 + C48259) * C153724 + C48265 * C98536) * C70498) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C98536 +
            C31290 * C153724) *
               C153943 +
           (C28405 * C98536 + C29052 * C153724) * C153939 +
           (C28406 * C98536 + C29051 * C153724) * C153929 +
           (C28407 * C98536 + C29050 * C153724) * C153871) *
              C153537 * C153521 * C130 -
          ((C29055 * C153724 + C28412 * C98536) * C153871 +
           (C29054 * C153724 + C28411 * C98536) * C153929 +
           (C29053 * C153724 + C28410 * C98536) * C153939 +
           (C31295 * C153724 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C98536) *
               C153943) *
              C153537 * C153521 * C131 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C98536 +
            C31782 * C153724) *
               C153943 +
           (C28701 * C98536 + C31544 * C153724) * C153939 +
           (C28702 * C98536 + C31546 * C153724) * C153929 +
           (C28703 * C98536 + C44743 * C153724) * C153871) *
              C153537 * C153521 * C132 -
          (((C28212 * C4073 - C28213 * C4066 - C28212 * C4074 +
             C153462 * C4078) *
                C153724 +
            (C28212 * C1190 - C28213 * C1184 - C28212 * C1191 +
             C153462 * C1199) *
                C98536) *
               C153871 +
           ((C28212 * C1763 - C28213 * C1757 - C28212 * C1764 +
             C153462 * C1772) *
                C153724 +
            (C28212 * C331 - C28213 * C311 - C28212 * C332 + C153462 * C347) *
                C98536) *
               C153929 +
           ((C28212 * C957 - C28213 * C948 - C28212 * C958 + C153462 * C966) *
                C153724 +
            (C28212 * C317 - C28213 * C304 - C28212 * C318 + C153462 * C340) *
                C98536) *
               C153939 +
           ((C28212 * C490 - C28213 * C477 - C28212 * C491 + C153462 * C513) *
                C153724 +
            (C28212 * C158 - C28213 * C147 - C28212 * C159 + C153462 * C171) *
                C98536) *
               C153943) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C98536 +
             C31290 * C153724) *
                C153943 +
            (C130855 + C130856) * C153939 + C130871 * C153929 +
            C130872 * C153871) *
               C153537 * C298 -
           ((C130861 + C130862) * C153871 + (C130860 + C130859) * C153929 +
            (C130858 + C130857) * C153939 + (C130856 + C130855) * C153943) *
               C153537 * C299 +
           (C130871 * C153943 + C130872 * C153939 +
            (C130862 + C130861) * C153929 +
            (C28409 * C98536 + C29855 * C153724) * C153871) *
               C153537 * C300) *
              C301 +
          (((C130863 + C130864) * C153943 + (C130865 + C130866) * C153939 +
            (C130867 + C130868) * C153929 + (C130869 + C130870) * C153871) *
               C153537 * C299 -
           (C130873 * C153871 + C130874 * C153929 +
            (C130864 + C130863) * C153939 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C98536) *
                C153943) *
               C153537 * C298 -
           (((C28212 * C28996 - C28213 * C28993 - C28212 * C28997 +
              C153462 * C28999) *
                 C153724 +
             C28414 * C98536) *
                C153871 +
            (C130870 + C130869) * C153929 + C130873 * C153939 +
            C130874 * C153943) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C98536 +
             C31290 * C153724) *
                C153943 +
            (C130855 + C130856) * C153939 + C130871 * C153929 +
            C130872 * C153871) *
               C473 -
           ((C29433 * C153724 + C29050 * C98536) * C153871 +
            (C29432 * C153724 + C29051 * C98536) * C153929 +
            (C29431 * C153724 + C29052 * C98536) * C153939 +
            (C31291 * C153724 + C31290 * C98536) * C153943) *
               C474 +
           ((C31291 * C98536 + C31294 * C153724) * C153943 +
            (C29431 * C98536 + C31293 * C153724) * C153939 +
            (C29432 * C98536 + C31292 * C153724) * C153929 +
            (C29433 * C98536 + C32705 * C153724) * C153871) *
               C475) *
              C153521 * C301 +
          (((C31295 * C98536 + C31296 * C153724) * C153943 +
            (C29053 * C98536 + C30997 * C153724) * C153939 +
            (C29054 * C98536 + C30998 * C153724) * C153929 +
            (C29055 * C98536 + C30999 * C153724) * C153871) *
               C474 -
           (C130873 * C153871 + C130874 * C153929 +
            (C130864 + C130863) * C153939 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C98536) *
                C153943) *
               C473 -
           (((C28212 * C32074 - C28213 * C32073 - C28212 * C32075 +
              C153462 * C32076) *
                 C153724 +
             C30999 * C98536) *
                C153871 +
            (C31299 * C153724 + C30998 * C98536) * C153929 +
            (C31298 * C153724 + C30997 * C98536) * C153939 +
            (C31297 * C153724 + C31296 * C98536) * C153943) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153944 +
            C31290 * C153941 + C31291 * C153932 + C31294 * C153878) *
               C70498 +
           (C28405 * C153944 + C29052 * C153941 + C29431 * C153932 +
            C31293 * C153878) *
               C153684) *
              C153537 * C153521 * C130 -
          ((C31298 * C153878 + C30997 * C153932 + C29053 * C153941 +
            C28410 * C153944) *
               C153684 +
           (C31297 * C153878 + C31296 * C153932 + C31295 * C153941 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153944) *
               C70498) *
              C153537 * C153521 * C131 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C153944 +
            C31782 * C153941 + C31783 * C153932 + C56313 * C153878) *
               C70498 +
           (C28701 * C153944 + C31544 * C153941 + C31545 * C153932 +
            C67563 * C153878) *
               C153684) *
              C153537 * C153521 * C132 -
          (((C28212 * C8429 - C28213 * C8428 - C28212 * C8430 +
             C153462 * C8431) *
                C153878 +
            (C28212 * C1332 - C28213 * C1326 - C28212 * C1333 +
             C153462 * C1341) *
                C153932 +
            (C28212 * C957 - C28213 * C948 - C28212 * C958 + C153462 * C966) *
                C153941 +
            (C28212 * C317 - C28213 * C304 - C28212 * C318 + C153462 * C340) *
                C153944) *
               C153684 +
           ((C28212 * C2115 - C28213 * C2109 - C28212 * C2116 +
             C153462 * C2124) *
                C153878 +
            (C28212 * C504 - C28213 * C484 - C28212 * C505 + C153462 * C520) *
                C153932 +
            (C28212 * C490 - C28213 * C477 - C28212 * C491 + C153462 * C513) *
                C153941 +
            (C28212 * C158 - C28213 * C147 - C28212 * C159 + C153462 * C171) *
                C153944) *
               C70498) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153944 +
             C31290 * C153941 + C31291 * C153932 + C31294 * C153878) *
                C70498 +
            (C134399 + C134400 + C134401 + C134402) * C153684) *
               C153537 * C298 -
           ((C134403 + C134404 + C134405 + C134406) * C153684 +
            (C134402 + C134401 + C134400 + C134399) * C70498) *
               C153537 * C299 +
           ((C134406 + C134405 + C134404 + C134403) * C70498 +
            (C28407 * C153944 + C29050 * C153941 + C29433 * C153932 +
             C32705 * C153878) *
                C153684) *
               C153537 * C300) *
              C301 +
          (((C134407 + C134408 + C134409 + C134410) * C70498 +
            (C134411 + C134412 + C134413 + C134414) * C153684) *
               C153537 * C299 -
           ((C134410 + C134409 + C134408 + C134407) * C153684 +
            (C31297 * C153878 + C31296 * C153932 + C31295 * C153941 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153944) *
                C70498) *
               C153537 * C298 -
           (((C28212 * C32074 - C28213 * C32073 - C28212 * C32075 +
              C153462 * C32076) *
                 C153878 +
             C30999 * C153932 + C29055 * C153941 + C28412 * C153944) *
                C153684 +
            (C134414 + C134413 + C134412 + C134411) * C70498) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153944 +
             C31290 * C153941 + C31291 * C153932 + C31294 * C153878) *
                C70498 +
            (C134399 + C134400 + C134401 + C134402) * C153684) *
               C473 -
           ((C32703 * C153878 + C31293 * C153932 + C29431 * C153941 +
             C29052 * C153944) *
                C153684 +
            (C34035 * C153878 + C31294 * C153932 + C31291 * C153941 +
             C31290 * C153944) *
                C70498) *
               C474 +
           ((C31291 * C153944 + C31294 * C153941 + C34035 * C153932 +
             C56054 * C153878) *
                C70498 +
            (C29431 * C153944 + C31293 * C153941 + C32703 * C153932 +
             C56824 * C153878) *
                C153684) *
               C475) *
              C153521 * C301 +
          (((C31295 * C153944 + C31296 * C153941 + C31297 * C153932 +
             C56055 * C153878) *
                C70498 +
            (C29053 * C153944 + C30997 * C153941 + C31298 * C153932 +
             C56487 * C153878) *
                C153684) *
               C474 -
           ((C134410 + C134409 + C134408 + C134407) * C153684 +
            (C31297 * C153878 + C31296 * C153932 + C31295 * C153941 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153944) *
                C70498) *
               C473 -
           (((C28212 * C56477 - C28213 * C56476 - C28212 * C56478 +
              C153462 * C56479) *
                 C153878 +
             C56487 * C153932 + C31298 * C153941 + C30997 * C153944) *
                C153684 +
            (C56056 * C153878 + C56055 * C153932 + C31297 * C153941 +
             C31296 * C153944) *
                C70498) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C98536 +
             C31290 * C153724) *
                C153943 +
            (C130855 + C130856) * C153939 + C130871 * C153929 +
            C130872 * C153871) *
               C153849 -
           ((C29433 * C153724 + C29050 * C98536) * C153871 +
            (C29432 * C153724 + C29051 * C98536) * C153929 +
            (C29431 * C153724 + C29052 * C98536) * C153939 +
            (C31291 * C153724 + C31290 * C98536) * C153943) *
               C153601) *
              C153521 * C153917 +
          (((C31295 * C98536 + C31296 * C153724) * C153943 +
            (C29053 * C98536 + C30997 * C153724) * C153939 +
            (C29054 * C98536 + C30998 * C153724) * C153929 +
            (C29055 * C98536 + C30999 * C153724) * C153871) *
               C153601 -
           (C130873 * C153871 + C130874 * C153929 +
            (C130864 + C130863) * C153939 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C98536) *
                C153943) *
               C153849) *
              C153521 * C153918 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C98536 +
             C31782 * C153724) *
                C153943 +
            (C131263 + C131264) * C153939 + (C131265 + C131266) * C153929 +
            (C131267 + C131268) * C153871) *
               C153849 -
           (((C28212 * C4784 - C28213 * C4781 - C28212 * C4785 +
              C153462 * C4790) *
                 C153724 +
             C44743 * C98536) *
                C153871 +
            (C31547 * C153724 + C31546 * C98536) * C153929 +
            (C31545 * C153724 + C31544 * C98536) * C153939 +
            (C31783 * C153724 + C31782 * C98536) * C153943) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C98536 +
             (C48244 + C48245 + C48246) * C153724) *
                C70498 +
            ((C24325 + C24326 + C24327) * C98536 +
             (C25412 + C25411 + C25410) * C153724) *
                C153684) *
               C153849 -
           ((C49653 * C153724 + (C25410 + C25411 + C25412) * C98536) * C153684 +
            ((C48249 + C48248 + C48247) * C153724 +
             (C48246 + C48245 + C48244) * C98536) *
                C70498) *
               C153601) *
              C153521 * C153917 +
          ((((C48253 + C48254 + C48255) * C98536 +
             (C48256 + C48257 + C48258) * C153724) *
                C70498 +
            ((C25413 + C25414 + C25415) * C98536 +
             (C49052 + C49053 + C49054) * C153724) *
                C153684) *
               C153601 -
           (((C25415 + C25414 + C25413) * C153724 +
             (C24336 + C24335 + C24334) * C98536) *
                C153684 +
            ((C48255 + C48254 + C48253) * C153724 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C98536) *
                C70498) *
               C153849) *
              C153521 * C153918 +
          ((((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
              C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
              C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                 C98536 +
             (C48738 + C48739 + C48740) * C153724) *
                C70498 +
            ((C24821 + C24822 + C24823) * C98536 +
             (C126360 + C126361 + C126362) * C153724) *
                C153684) *
               C153849 -
           (((C23996 * C1330 - C23997 * C1325 - C23996 * C1331 +
              C153885 * C1340 + C23994 * C1332 - C23995 * C1326 -
              C23994 * C1333 + C153914 * C1341 + C23992 * C1334 -
              C23993 * C1327 - C23992 * C1335 + C153933 * C1342) *
                 C153724 +
             (C126362 + C126361 + C126360) * C98536) *
                C153684 +
            ((C48743 + C48742 + C48741) * C153724 +
             (C48740 + C48739 + C48738) * C98536) *
                C70498) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153944 +
             C31290 * C153941 + C31291 * C153932 + C31294 * C153878) *
                C70498 +
            (C134399 + C134400 + C134401 + C134402) * C153684) *
               C153849 -
           ((C32703 * C153878 + C31293 * C153932 + C29431 * C153941 +
             C29052 * C153944) *
                C153684 +
            (C34035 * C153878 + C31294 * C153932 + C31291 * C153941 +
             C31290 * C153944) *
                C70498) *
               C153601) *
              C153521 * C153917 +
          (((C31295 * C153944 + C31296 * C153941 + C31297 * C153932 +
             C56055 * C153878) *
                C70498 +
            (C29053 * C153944 + C30997 * C153941 + C31298 * C153932 +
             C56487 * C153878) *
                C153684) *
               C153601 -
           ((C134410 + C134409 + C134408 + C134407) * C153684 +
            (C31297 * C153878 + C31296 * C153932 + C31295 * C153941 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153944) *
                C70498) *
               C153849) *
              C153521 * C153918 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C153944 +
             C31782 * C153941 + C31783 * C153932 + C56313 * C153878) *
                C70498 +
            (C134803 + C134804 + C134805 + C134806) * C153684) *
               C153849 -
           (((C28212 * C9038 - C28213 * C9035 - C28212 * C9039 +
              C153462 * C9044) *
                 C153878 +
             C67563 * C153932 + C31545 * C153941 + C31544 * C153944) *
                C153684 +
            (C56314 * C153878 + C56313 * C153932 + C31783 * C153941 +
             C31782 * C153944) *
                C70498) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C98536 +
             (C48244 + C48245 + C48246) * C153724) *
                C70498 +
            ((C24325 + C24326 + C24327) * C98536 +
             (C25412 + C25411 + C25410) * C153724) *
                C153684) *
               C153537 * C298 -
           ((C26806 * C153724 + (C24330 + C24329 + C24328) * C98536) * C153684 +
            ((C25410 + C25411 + C25412) * C153724 +
             (C24327 + C24326 + C24325) * C98536) *
                C70498) *
               C153537 * C299 +
           ((C24345 * C98536 + (C25409 + C25408 + C25407) * C153724) * C70498 +
            ((C24333 + C24332 + C24331) * C98536 +
             (C26814 + C26815 + C26816) * C153724) *
                C153684) *
               C153537 * C300) *
              C301 +
          ((((C24334 + C24335 + C24336) * C98536 +
             (C25413 + C25414 + C25415) * C153724) *
                C70498 +
            ((C24337 + C24338 + C24339) * C98536 +
             (C25416 + C25417 + C25418) * C153724) *
                C153684) *
               C153537 * C299 -
           (((C25415 + C25414 + C25413) * C153724 +
             (C24336 + C24335 + C24334) * C98536) *
                C153684 +
            ((C48255 + C48254 + C48253) * C153724 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C98536) *
                C70498) *
               C153537 * C298 -
           (((C23996 * C4073 - C23997 * C4066 - C23996 * C4074 +
              C153885 * C4078 + C23994 * C4071 - C23995 * C4065 -
              C23994 * C4072 + C153914 * C4077 + C23992 * C4069 -
              C23993 * C4064 - C23992 * C4070 + C153933 * C4076) *
                 C153724 +
             (C24342 + C24341 + C24340) * C98536) *
                C153684 +
            ((C25418 + C25417 + C25416) * C153724 + C24346 * C98536) * C70498) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C98536 +
            (C48244 + C48245 + C48246) * C153724) *
               C70498 +
           ((C24325 + C24326 + C24327) * C98536 +
            (C25412 + C25411 + C25410) * C153724) *
               C153684) *
              C153537 * C153521 * C130 -
          (((C25415 + C25414 + C25413) * C153724 +
            (C24336 + C24335 + C24334) * C98536) *
               C153684 +
           ((C48255 + C48254 + C48253) * C153724 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C98536) *
               C70498) *
              C153537 * C153521 * C131 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C98536 +
            (C48738 + C48739 + C48740) * C153724) *
               C70498 +
           ((C24821 + C24822 + C24823) * C98536 +
            (C23992 * C955 - C23993 * C947 - C23992 * C956 + C153933 * C965 +
             C23994 * C957 - C23995 * C948 - C23994 * C958 + C153914 * C966 +
             C23996 * C959 - C23997 * C949 - C23996 * C960 + C153885 * C967) *
                C153724) *
               C153684) *
              C153537 * C153521 * C132 -
          (((C23996 * C961 - C23997 * C950 - C23996 * C962 + C153885 * C968 +
             C23994 * C959 - C23995 * C949 - C23994 * C960 + C153914 * C967 +
             C23992 * C957 - C23993 * C948 - C23992 * C958 + C153933 * C966) *
                C153724 +
            (C23996 * C335 - C23997 * C313 - C23996 * C336 + C153885 * C349 +
             C23994 * C315 - C23995 * C303 - C23994 * C316 + C153914 * C339 +
             C23992 * C317 - C23993 * C304 - C23992 * C318 + C153933 * C340) *
                C98536) *
               C153684 +
           ((C23996 * C508 - C23997 * C486 - C23996 * C509 + C153885 * C522 +
             C23994 * C488 - C23995 * C476 - C23994 * C489 + C153914 * C512 +
             C23992 * C490 - C23993 * C477 - C23992 * C491 + C153933 * C513) *
                C153724 +
            (C23996 * C162 - C23997 * C149 - C23996 * C163 + C153885 * C173 +
             C23994 * C160 - C23995 * C148 - C23994 * C161 + C153914 * C172 +
             C23992 * C158 - C23993 * C147 - C23992 * C159 + C153933 * C171) *
                C98536) *
               C70498) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C98536 +
            C31290 * C153724) *
               C153943 +
           (C28405 * C98536 + C29052 * C153724) * C153939 +
           (C28406 * C98536 + C29051 * C153724) * C153929 +
           (C28407 * C98536 + C29050 * C153724) * C153871) *
              C153537 * C153521 * C130 -
          ((C29055 * C153724 + C28412 * C98536) * C153871 +
           (C29054 * C153724 + C28411 * C98536) * C153929 +
           (C29053 * C153724 + C28410 * C98536) * C153939 +
           (C31295 * C153724 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C98536) *
               C153943) *
              C153537 * C153521 * C131 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C98536 +
            C31782 * C153724) *
               C153943 +
           (C28701 * C98536 + C31544 * C153724) * C153939 +
           (C28702 * C98536 + C31546 * C153724) * C153929 +
           (C28703 * C98536 + C44743 * C153724) * C153871) *
              C153537 * C153521 * C132 -
          (((C28212 * C4073 - C28213 * C4066 - C28212 * C4074 +
             C153462 * C4078) *
                C153724 +
            (C28212 * C1190 - C28213 * C1184 - C28212 * C1191 +
             C153462 * C1199) *
                C98536) *
               C153871 +
           ((C28212 * C1763 - C28213 * C1757 - C28212 * C1764 +
             C153462 * C1772) *
                C153724 +
            (C28212 * C331 - C28213 * C311 - C28212 * C332 + C153462 * C347) *
                C98536) *
               C153929 +
           ((C28212 * C957 - C28213 * C948 - C28212 * C958 + C153462 * C966) *
                C153724 +
            (C28212 * C317 - C28213 * C304 - C28212 * C318 + C153462 * C340) *
                C98536) *
               C153939 +
           ((C28212 * C490 - C28213 * C477 - C28212 * C491 + C153462 * C513) *
                C153724 +
            (C28212 * C158 - C28213 * C147 - C28212 * C159 + C153462 * C171) *
                C98536) *
               C153943) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C98536 +
             C31290 * C153724) *
                C153943 +
            (C130855 + C130856) * C153939 + C130871 * C153929 +
            C130872 * C153871) *
               C153537 * C298 -
           ((C130861 + C130862) * C153871 + (C130860 + C130859) * C153929 +
            (C130858 + C130857) * C153939 + (C130856 + C130855) * C153943) *
               C153537 * C299 +
           (C130871 * C153943 + C130872 * C153939 +
            (C130862 + C130861) * C153929 +
            (C28409 * C98536 + C29855 * C153724) * C153871) *
               C153537 * C300) *
              C301 +
          (((C130863 + C130864) * C153943 + (C130865 + C130866) * C153939 +
            (C130867 + C130868) * C153929 + (C130869 + C130870) * C153871) *
               C153537 * C299 -
           (C130873 * C153871 + C130874 * C153929 +
            (C130864 + C130863) * C153939 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C98536) *
                C153943) *
               C153537 * C298 -
           (((C28212 * C28996 - C28213 * C28993 - C28212 * C28997 +
              C153462 * C28999) *
                 C153724 +
             C28414 * C98536) *
                C153871 +
            (C130870 + C130869) * C153929 + C130873 * C153939 +
            C130874 * C153943) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153944 +
            C31290 * C153941 + C31291 * C153932 + C31294 * C153878) *
               C70498 +
           (C28405 * C153944 + C29052 * C153941 + C29431 * C153932 +
            C31293 * C153878) *
               C153684) *
              C153537 * C153521 * C130 -
          ((C31298 * C153878 + C30997 * C153932 + C29053 * C153941 +
            C28410 * C153944) *
               C153684 +
           (C31297 * C153878 + C31296 * C153932 + C31295 * C153941 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153944) *
               C70498) *
              C153537 * C153521 * C131 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C153944 +
            C31782 * C153941 + C31783 * C153932 + C56313 * C153878) *
               C70498 +
           (C28701 * C153944 + C31544 * C153941 + C31545 * C153932 +
            C67563 * C153878) *
               C153684) *
              C153537 * C153521 * C132 -
          (((C28212 * C8429 - C28213 * C8428 - C28212 * C8430 +
             C153462 * C8431) *
                C153878 +
            (C28212 * C1332 - C28213 * C1326 - C28212 * C1333 +
             C153462 * C1341) *
                C153932 +
            (C28212 * C957 - C28213 * C948 - C28212 * C958 + C153462 * C966) *
                C153941 +
            (C28212 * C317 - C28213 * C304 - C28212 * C318 + C153462 * C340) *
                C153944) *
               C153684 +
           ((C28212 * C2115 - C28213 * C2109 - C28212 * C2116 +
             C153462 * C2124) *
                C153878 +
            (C28212 * C504 - C28213 * C484 - C28212 * C505 + C153462 * C520) *
                C153932 +
            (C28212 * C490 - C28213 * C477 - C28212 * C491 + C153462 * C513) *
                C153941 +
            (C28212 * C158 - C28213 * C147 - C28212 * C159 + C153462 * C171) *
                C153944) *
               C70498) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153944 +
             C31290 * C153941 + C31291 * C153932 + C31294 * C153878) *
                C70498 +
            (C134399 + C134400 + C134401 + C134402) * C153684) *
               C153537 * C298 -
           ((C134403 + C134404 + C134405 + C134406) * C153684 +
            (C134402 + C134401 + C134400 + C134399) * C70498) *
               C153537 * C299 +
           ((C134406 + C134405 + C134404 + C134403) * C70498 +
            (C28407 * C153944 + C29050 * C153941 + C29433 * C153932 +
             C32705 * C153878) *
                C153684) *
               C153537 * C300) *
              C301 +
          (((C134407 + C134408 + C134409 + C134410) * C70498 +
            (C134411 + C134412 + C134413 + C134414) * C153684) *
               C153537 * C299 -
           ((C134410 + C134409 + C134408 + C134407) * C153684 +
            (C31297 * C153878 + C31296 * C153932 + C31295 * C153941 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153944) *
                C70498) *
               C153537 * C298 -
           (((C28212 * C32074 - C28213 * C32073 - C28212 * C32075 +
              C153462 * C32076) *
                 C153878 +
             C30999 * C153932 + C29055 * C153941 + C28412 * C153944) *
                C153684 +
            (C134414 + C134413 + C134412 + C134411) * C70498) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C98536 +
             C31290 * C153724) *
                C153943 +
            (C130855 + C130856) * C153939 + C130871 * C153929 +
            C130872 * C153871) *
               C153537 * C153919 -
           (C132057 * C153871 + C132058 * C153929 +
            (C130858 + C130857) * C153939 + (C130856 + C130855) * C153943) *
               C153537 * C153920 +
           (C130871 * C153943 + C130872 * C153939 +
            (C130862 + C130861) * C153929 + (C132059 + C132060) * C153871) *
               C153537 * C1469) *
              C153840 +
          (((C130863 + C130864) * C153943 + (C130865 + C130866) * C153939 +
            (C130867 + C130868) * C153929 + (C130869 + C130870) * C153871) *
               C153537 * C153920 -
           (C130873 * C153871 + C130874 * C153929 +
            (C130864 + C130863) * C153939 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C98536) *
                C153943) *
               C153537 * C153919 -
           (((C28212 * C28996 - C28213 * C28993 - C28212 * C28997 +
              C153462 * C28999) *
                 C153724 +
             C28414 * C98536) *
                C153871 +
            (C130870 + C130869) * C153929 + C130873 * C153939 +
            C130874 * C153943) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C98536 +
             (C48244 + C48245 + C48246) * C153724) *
                C70498 +
            ((C24325 + C24326 + C24327) * C98536 + C127043 * C153724) *
                C153684) *
               C153537 * C153919 -
           ((C26806 * C153724 + (C24330 + C24329 + C24328) * C98536) * C153684 +
            (C127044 * C153724 + (C24327 + C24326 + C24325) * C98536) *
                C70498) *
               C153537 * C153920 +
           ((C24345 * C98536 + (C25409 + C25408 + C25407) * C153724) * C70498 +
            ((C24333 + C24332 + C24331) * C98536 +
             (C26814 + C26815 + C26816) * C153724) *
                C153684) *
               C153537 * C1469) *
              C153840 +
          ((((C24334 + C24335 + C24336) * C98536 + C127045 * C153724) * C70498 +
            ((C24337 + C24338 + C24339) * C98536 +
             (C25416 + C25417 + C25418) * C153724) *
                C153684) *
               C153537 * C153920 -
           ((C127046 * C153724 + (C24336 + C24335 + C24334) * C98536) *
                C153684 +
            ((C48255 + C48254 + C48253) * C153724 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C98536) *
                C70498) *
               C153537 * C153919 -
           (((C23996 * C4073 - C23997 * C4066 - C23996 * C4074 +
              C153885 * C4078 + C23994 * C4071 - C23995 * C4065 -
              C23994 * C4072 + C153914 * C4077 + C23992 * C4069 -
              C23993 * C4064 - C23992 * C4070 + C153933 * C4076) *
                 C153724 +
             (C24342 + C24341 + C24340) * C98536) *
                C153684 +
            ((C25418 + C25417 + C25416) * C153724 + C24346 * C98536) * C70498) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153944 +
             C31290 * C153941 + C31291 * C153932 + C31294 * C153878) *
                C70498 +
            (C134399 + C134400 + C134401 + C134402) * C153684) *
               C153537 * C153919 -
           ((C134403 + C134404 + C134405 + C134406) * C153684 +
            (C134402 + C134401 + C134400 + C134399) * C70498) *
               C153537 * C153920 +
           ((C134406 + C134405 + C134404 + C134403) * C70498 +
            (C135591 + C135592 + C135593 + C135594) * C153684) *
               C153537 * C1469) *
              C153840 +
          (((C134407 + C134408 + C134409 + C134410) * C70498 +
            (C134411 + C134412 + C134413 + C134414) * C153684) *
               C153537 * C153920 -
           ((C134410 + C134409 + C134408 + C134407) * C153684 +
            (C31297 * C153878 + C31296 * C153932 + C31295 * C153941 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153944) *
                C70498) *
               C153537 * C153919 -
           (((C28212 * C32074 - C28213 * C32073 - C28212 * C32075 +
              C153462 * C32076) *
                 C153878 +
             C30999 * C153932 + C29055 * C153941 + C28412 * C153944) *
                C153684 +
            (C134414 + C134413 + C134412 + C134411) * C70498) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C98536 +
             C31290 * C153724) *
                C153943 +
            (C130855 + C130856) * C153939 + C130871 * C153929 +
            C130872 * C153871) *
               C153849 -
           (C132907 * C153871 + C132908 * C153929 +
            (C131725 + C131726) * C153939 +
            (C31291 * C153724 + C31290 * C98536) * C153943) *
               C153601) *
              C153919 +
          (((C131726 + C131725) * C153943 + (C131724 + C131723) * C153939 +
            (C131722 + C131721) * C153929 + (C132909 + C132910) * C153871) *
               C153601 -
           (C132057 * C153871 + C132058 * C153929 +
            (C130858 + C130857) * C153939 + (C130856 + C130855) * C153943) *
               C153849) *
              C153920 +
          ((C130871 * C153943 + C130872 * C153939 +
            (C130862 + C130861) * C153929 + (C132059 + C132060) * C153871) *
               C153849 -
           (((C28212 * C29403 - C28213 * C29402 - C28212 * C29404 +
              C153462 * C29405) *
                 C153724 +
             C29855 * C98536) *
                C153871 +
            (C132910 + C132909) * C153929 + C132907 * C153939 +
            C132908 * C153943) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C98536 +
             (C48244 + C48245 + C48246) * C153724) *
                C70498 +
            ((C24325 + C24326 + C24327) * C98536 + C127043 * C153724) *
                C153684) *
               C153849 -
           ((C49653 * C153724 + C127044 * C98536) * C153684 +
            ((C48249 + C48248 + C48247) * C153724 +
             (C48246 + C48245 + C48244) * C98536) *
                C70498) *
               C153601) *
              C153919 +
          (((C127043 * C98536 + C127822 * C153724) * C70498 +
            (C128790 * C98536 + (C26064 + C26065 + C26066) * C153724) *
                C153684) *
               C153601 -
           ((C26806 * C153724 + (C24330 + C24329 + C24328) * C98536) * C153684 +
            (C127044 * C153724 + (C24327 + C24326 + C24325) * C98536) *
                C70498) *
               C153849) *
              C153920 +
          (((C24345 * C98536 + C128790 * C153724) * C70498 +
            ((C24333 + C24332 + C24331) * C98536 +
             (C26814 + C26815 + C26816) * C153724) *
                C153684) *
               C153849 -
           (((C23996 * C4784 - C23997 * C4781 - C23996 * C4785 +
              C153885 * C4790 + C23994 * C4786 - C23995 * C4782 -
              C23994 * C4787 + C153914 * C4791 + C23992 * C4788 -
              C23993 * C4783 - C23992 * C4789 + C153933 * C4792) *
                 C153724 +
             (C26816 + C26815 + C26814) * C98536) *
                C153684 +
            ((C26066 + C26065 + C26064) * C153724 + C26806 * C98536) * C70498) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153944 +
             C31290 * C153941 + C31291 * C153932 + C31294 * C153878) *
                C70498 +
            (C134399 + C134400 + C134401 + C134402) * C153684) *
               C153849 -
           ((C135259 + C135260 + C135261 + C135262) * C153684 +
            (C34035 * C153878 + C31294 * C153932 + C31291 * C153941 +
             C31290 * C153944) *
                C70498) *
               C153601) *
              C153919 +
          (((C135262 + C135261 + C135260 + C135259) * C70498 +
            (C136439 + C136440 + C136441 + C136442) * C153684) *
               C153601 -
           ((C134403 + C134404 + C134405 + C134406) * C153684 +
            (C134402 + C134401 + C134400 + C134399) * C70498) *
               C153849) *
              C153920 +
          (((C134406 + C134405 + C134404 + C134403) * C70498 +
            (C135591 + C135592 + C135593 + C135594) * C153684) *
               C153849 -
           (((C28212 * C32677 - C28213 * C32676 - C28212 * C32678 +
              C153462 * C32679) *
                 C153878 +
             C32705 * C153932 + C29433 * C153941 + C29050 * C153944) *
                C153684 +
            (C136442 + C136441 + C136440 + C136439) * C70498) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C23992 * C152 - C23993 * C144 - C23992 * C153 +
                  C153933 * C168 + C23994 * C154 - C23995 * C145 -
                  C23994 * C155 + C153914 * C169 + C23996 * C156 -
                  C23997 * C146 - C23996 * C157 + C153885 * C170) *
                     C98536 +
                 (C48244 + C48245 + C48246) * C153724) *
                    C70498 +
                ((C24325 + C24326 + C24327) * C98536 + C127043 * C153724) *
                    C153684) *
                   C153537 * C1091 -
               ((C26806 * C153724 + (C24330 + C24329 + C24328) * C98536) *
                    C153684 +
                (C127044 * C153724 + (C24327 + C24326 + C24325) * C98536) *
                    C70498) *
                   C153537 * C153573) *
                  C1093 +
              ((((C24334 + C24335 + C24336) * C98536 + C127045 * C153724) *
                    C70498 +
                ((C24337 + C24338 + C24339) * C98536 +
                 (C25416 + C25417 + C25418) * C153724) *
                    C153684) *
                   C153537 * C153573 -
               ((C127046 * C153724 + (C24336 + C24335 + C24334) * C98536) *
                    C153684 +
                ((C48255 + C48254 + C48253) * C153724 +
                 (C23996 * C158 - C23997 * C147 - C23996 * C159 +
                  C153885 * C171 + C23994 * C156 - C23995 * C146 -
                  C23994 * C157 + C153914 * C170 + C23992 * C154 -
                  C23993 * C145 - C23992 * C155 + C153933 * C169) *
                     C98536) *
                    C70498) *
                   C153537 * C1091) *
                  C1094 +
              ((((C23992 * C156 - C23993 * C146 - C23992 * C157 +
                  C153933 * C170 + C23994 * C158 - C23995 * C147 -
                  C23994 * C159 + C153914 * C171 + C23996 * C160 -
                  C23997 * C148 - C23996 * C161 + C153885 * C172) *
                     C98536 +
                 (C48738 + C48739 + C48740) * C153724) *
                    C70498 +
                ((C24821 + C24822 + C24823) * C98536 +
                 (C126360 + C126361 + C126362) * C153724) *
                    C153684) *
                   C153537 * C1091 -
               (((C23996 * C1761 - C23997 * C1756 - C23996 * C1762 +
                  C153885 * C1771 + C23994 * C1763 - C23995 * C1757 -
                  C23994 * C1764 + C153914 * C1772 + C23992 * C1765 -
                  C23993 * C1758 - C23992 * C1766 + C153933 * C1773) *
                     C153724 +
                 (C24826 + C24825 + C24824) * C98536) *
                    C153684 +
                ((C126362 + C126361 + C126360) * C153724 +
                 (C24823 + C24822 + C24821) * C98536) *
                    C70498) *
                   C153537 * C153573) *
                  C1095) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C23992 * C152 - C23993 * C144 - C23992 * C153 +
                 C153933 * C168 + C23994 * C154 - C23995 * C145 -
                 C23994 * C155 + C153914 * C169 + C23996 * C156 -
                 C23997 * C146 - C23996 * C157 + C153885 * C170) *
                    C98536 +
                (C48244 + C48245 + C48246) * C153724) *
                   C70498 +
               ((C24325 + C24326 + C24327) * C98536 + C127043 * C153724) *
                   C153684) *
                  C153537 * C1178 -
              ((C26806 * C153724 + (C24330 + C24329 + C24328) * C98536) *
                   C153684 +
               (C127044 * C153724 + (C24327 + C24326 + C24325) * C98536) *
                   C70498) *
                  C153537 * C1179 +
              ((C24345 * C98536 + (C25409 + C25408 + C25407) * C153724) *
                   C70498 +
               ((C24333 + C24332 + C24331) * C98536 +
                (C26814 + C26815 + C26816) * C153724) *
                   C153684) *
                  C153537 * C1180 -
              (((C23996 * C5564 - C23997 * C5561 - C23996 * C5565 +
                 C153885 * C5570 + C23994 * C5566 - C23995 * C5562 -
                 C23994 * C5567 + C153914 * C5571 + C23992 * C5568 -
                 C23993 * C5563 - C23992 * C5569 + C153933 * C5572) *
                    C153724 +
                (C25806 + C25805 + C25804) * C98536) *
                   C153684 +
               ((C26816 + C26815 + C26814) * C153724 + C25796 * C98536) *
                   C70498) *
                  C153537 * C1181) *
             C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C98536 +
             (C48244 + C48245 + C48246) * C153724) *
                C70498 +
            ((C24325 + C24326 + C24327) * C98536 + C127043 * C153724) *
                C153684) *
               C473 -
           ((C49653 * C153724 + C127044 * C98536) * C153684 +
            ((C48249 + C48248 + C48247) * C153724 +
             (C48246 + C48245 + C48244) * C98536) *
                C70498) *
               C474 +
           ((C48264 * C98536 + (C48252 + C48251 + C48250) * C153724) * C70498 +
            (C127822 * C98536 + (C49657 + C49658 + C49659) * C153724) *
                C153684) *
               C475) *
              C1091 +
          (((C127043 * C98536 + C127822 * C153724) * C70498 +
            ((C25409 + C25408 + C25407) * C98536 +
             (C26064 + C26065 + C26066) * C153724) *
                C153684) *
               C474 -
           ((C26806 * C153724 + (C24330 + C24329 + C24328) * C98536) * C153684 +
            (C127044 * C153724 + (C24327 + C24326 + C24325) * C98536) *
                C70498) *
               C473 -
           (((C23996 * C6185 - C23997 * C6179 - C23996 * C6186 +
              C153885 * C6197 + C23994 * C6187 - C23995 * C6180 -
              C23994 * C6188 + C153914 * C6198 + C23992 * C6189 -
              C23993 * C6181 - C23992 * C6190 + C153933 * C6199) *
                 C153724 +
             (C26066 + C26065 + C26064) * C98536) *
                C153684 +
            ((C49659 + C49658 + C49657) * C153724 + C49653 * C98536) * C70498) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C98536 +
             C31290 * C153724) *
                C153943 +
            (C130855 + C130856) * C153939 + C130871 * C153929 +
            C130872 * C153871) *
               C153537 * C1091 -
           ((C130861 + C130862) * C153871 + (C130860 + C130859) * C153929 +
            (C130858 + C130857) * C153939 + (C130856 + C130855) * C153943) *
               C153537 * C153573) *
              C1093 +
          (((C130863 + C130864) * C153943 + (C130865 + C130866) * C153939 +
            (C130867 + C130868) * C153929 + (C130869 + C130870) * C153871) *
               C153537 * C153573 -
           (C130873 * C153871 + C130874 * C153929 +
            (C130864 + C130863) * C153939 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C98536) *
                C153943) *
               C153537 * C1091) *
              C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C98536 +
             C31782 * C153724) *
                C153943 +
            (C131263 + C131264) * C153939 + (C131265 + C131266) * C153929 +
            (C131267 + C131268) * C153871) *
               C153537 * C1091 -
           (((C28212 * C5564 - C28213 * C5561 - C28212 * C5565 +
              C153462 * C5570) *
                 C153724 +
             C28704 * C98536) *
                C153871 +
            (C131268 + C131267) * C153929 + (C131266 + C131265) * C153939 +
            (C131264 + C131263) * C153943) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C98536 +
            C31290 * C153724) *
               C153943 +
           (C130855 + C130856) * C153939 + C130871 * C153929 +
           C130872 * C153871) *
              C153537 * C1178 -
          (C132057 * C153871 + C132058 * C153929 +
           (C130858 + C130857) * C153939 + (C130856 + C130855) * C153943) *
              C153537 * C1179 +
          (C130871 * C153943 + C130872 * C153939 +
           (C130862 + C130861) * C153929 + (C132059 + C132060) * C153871) *
              C153537 * C1180 -
          (((C28212 * C29845 - C28213 * C29844 - C28212 * C29846 +
             C153462 * C29847) *
                C153724 +
            C29279 * C98536) *
               C153871 +
           (C132060 + C132059) * C153929 + C132057 * C153939 +
           C132058 * C153943) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C98536 +
             C31290 * C153724) *
                C153943 +
            (C130855 + C130856) * C153939 + C130871 * C153929 +
            C130872 * C153871) *
               C473 -
           ((C131721 + C131722) * C153871 + (C131723 + C131724) * C153929 +
            (C131725 + C131726) * C153939 +
            (C31291 * C153724 + C31290 * C98536) * C153943) *
               C474 +
           ((C31291 * C98536 + C31294 * C153724) * C153943 +
            (C132255 + C132256) * C153939 + (C132257 + C132258) * C153929 +
            (C132259 + C132260) * C153871) *
               C475) *
              C1091 +
          (((C131726 + C131725) * C153943 + (C131724 + C131723) * C153939 +
            (C131722 + C131721) * C153929 +
            (C29049 * C98536 + C29434 * C153724) * C153871) *
               C474 -
           (C132057 * C153871 + C132058 * C153929 +
            (C130858 + C130857) * C153939 + (C130856 + C130855) * C153943) *
               C473 -
           (((C28212 * C30184 - C28213 * C30182 - C28212 * C30185 +
              C153462 * C30188) *
                 C153724 +
             C29434 * C98536) *
                C153871 +
            (C132260 + C132259) * C153929 + (C132258 + C132257) * C153939 +
            (C132256 + C132255) * C153943) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153944 +
             C31290 * C153941 + C31291 * C153932 + C31294 * C153878) *
                C70498 +
            (C134399 + C134400 + C134401 + C134402) * C153684) *
               C153537 * C1091 -
           ((C134403 + C134404 + C134405 + C134406) * C153684 +
            (C134402 + C134401 + C134400 + C134399) * C70498) *
               C153537 * C153573) *
              C1093 +
          (((C134407 + C134408 + C134409 + C134410) * C70498 +
            (C134411 + C134412 + C134413 + C134414) * C153684) *
               C153537 * C153573 -
           ((C134410 + C134409 + C134408 + C134407) * C153684 +
            (C31297 * C153878 + C31296 * C153932 + C31295 * C153941 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153944) *
                C70498) *
               C153537 * C1091) *
              C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C153944 +
             C31782 * C153941 + C31783 * C153932 + C56313 * C153878) *
                C70498 +
            (C134803 + C134804 + C134805 + C134806) * C153684) *
               C153537 * C1091 -
           (((C28212 * C6185 - C28213 * C6179 - C28212 * C6186 +
              C153462 * C6197) *
                 C153878 +
             C31547 * C153932 + C31546 * C153941 + C28702 * C153944) *
                C153684 +
            (C134806 + C134805 + C134804 + C134803) * C70498) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153944 +
            C31290 * C153941 + C31291 * C153932 + C31294 * C153878) *
               C70498 +
           (C134399 + C134400 + C134401 + C134402) * C153684) *
              C153537 * C1178 -
          ((C134403 + C134404 + C134405 + C134406) * C153684 +
           (C134402 + C134401 + C134400 + C134399) * C70498) *
              C153537 * C1179 +
          ((C134406 + C134405 + C134404 + C134403) * C70498 +
           (C135591 + C135592 + C135593 + C135594) * C153684) *
              C153537 * C1180 -
          (((C28212 * C30184 - C28213 * C30182 - C28212 * C30185 +
             C153462 * C30188) *
                C153878 +
            C29434 * C153932 + C29049 * C153941 + C28408 * C153944) *
               C153684 +
           (C135594 + C135593 + C135592 + C135591) * C70498) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153944 +
             C31290 * C153941 + C31291 * C153932 + C31294 * C153878) *
                C70498 +
            (C134399 + C134400 + C134401 + C134402) * C153684) *
               C473 -
           ((C135259 + C135260 + C135261 + C135262) * C153684 +
            (C34035 * C153878 + C31294 * C153932 + C31291 * C153941 +
             C31290 * C153944) *
                C70498) *
               C474 +
           ((C31291 * C153944 + C31294 * C153941 + C34035 * C153932 +
             C56054 * C153878) *
                C70498 +
            (C135789 + C135790 + C135791 + C135792) * C153684) *
               C475) *
              C1091 +
          (((C135262 + C135261 + C135260 + C135259) * C70498 +
            (C29051 * C153944 + C29432 * C153941 + C31292 * C153932 +
             C32704 * C153878) *
                C153684) *
               C474 -
           ((C134403 + C134404 + C134405 + C134406) * C153684 +
            (C134402 + C134401 + C134400 + C134399) * C70498) *
               C473 -
           (((C28212 * C34022 - C28213 * C34020 - C28212 * C34023 +
              C153462 * C34026) *
                 C153878 +
             C32704 * C153932 + C31292 * C153941 + C29432 * C153944) *
                C153684 +
            (C135792 + C135791 + C135790 + C135789) * C70498) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                  C98536 +
              C31290 * C153724) *
                 C153943 +
             (C130855 + C130856) * C153939 + C130871 * C153929 +
             C130872 * C153871) *
                C153849 -
            ((C131721 + C131722) * C153871 + (C131723 + C131724) * C153929 +
             (C131725 + C131726) * C153939 +
             (C31291 * C153724 + C31290 * C98536) * C153943) *
                C153601) *
               C1091 +
           (((C131726 + C131725) * C153943 + (C131724 + C131723) * C153939 +
             (C131722 + C131721) * C153929 +
             (C29049 * C98536 + C29434 * C153724) * C153871) *
                C153601 -
            (C132057 * C153871 + C132058 * C153929 +
             (C130858 + C130857) * C153939 + (C130856 + C130855) * C153943) *
                C153849) *
               C153573) *
              C153840 +
          ((((C31295 * C98536 + C31296 * C153724) * C153943 +
             (C131727 + C131728) * C153939 + (C131729 + C131730) * C153929 +
             (C131731 + C131732) * C153871) *
                C153601 -
            (C130873 * C153871 + C130874 * C153929 +
             (C130864 + C130863) * C153939 +
             (C31295 * C153724 +
              (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                  C98536) *
                 C153943) *
                C153849) *
               C1091 +
           (((C130863 + C130864) * C153943 + (C130865 + C130866) * C153939 +
             (C130867 + C130868) * C153929 + (C130869 + C130870) * C153871) *
                C153849 -
            (((C28212 * C28550 - C28213 * C28547 - C28212 * C28551 +
               C153462 * C28553) *
                  C153724 +
              C29056 * C98536) *
                 C153871 +
             (C131732 + C131731) * C153929 + (C131730 + C131729) * C153939 +
             (C131728 + C131727) * C153943) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
               C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
               C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                  C98536 +
              (C48244 + C48245 + C48246) * C153724) *
                 C70498 +
             ((C24325 + C24326 + C24327) * C98536 + C127043 * C153724) *
                 C153684) *
                C153849 -
            ((C49653 * C153724 + C127044 * C98536) * C153684 +
             ((C48249 + C48248 + C48247) * C153724 +
              (C48246 + C48245 + C48244) * C98536) *
                 C70498) *
                C153601) *
               C1091 +
           (((C127043 * C98536 + C127822 * C153724) * C70498 +
             ((C25409 + C25408 + C25407) * C98536 +
              (C26064 + C26065 + C26066) * C153724) *
                 C153684) *
                C153601 -
            ((C26806 * C153724 + (C24330 + C24329 + C24328) * C98536) *
                 C153684 +
             (C127044 * C153724 + (C24327 + C24326 + C24325) * C98536) *
                 C70498) *
                C153849) *
               C153573) *
              C153840 +
          (((((C48253 + C48254 + C48255) * C98536 +
              (C48256 + C48257 + C48258) * C153724) *
                 C70498 +
             (C127045 * C98536 + (C49052 + C49053 + C49054) * C153724) *
                 C153684) *
                C153601 -
            ((C127046 * C153724 + (C24336 + C24335 + C24334) * C98536) *
                 C153684 +
             ((C48255 + C48254 + C48253) * C153724 +
              (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
               C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
               C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                  C98536) *
                 C70498) *
                C153849) *
               C1091 +
           ((((C24334 + C24335 + C24336) * C98536 + C127045 * C153724) *
                 C70498 +
             ((C24337 + C24338 + C24339) * C98536 +
              (C25416 + C25417 + C25418) * C153724) *
                 C153684) *
                C153849 -
            (((C23996 * C3289 - C23997 * C3282 - C23996 * C3290 +
               C153885 * C3294 + C23994 * C3287 - C23995 * C3281 -
               C23994 * C3288 + C153914 * C3293 + C23992 * C3285 -
               C23993 * C3280 - C23992 * C3286 + C153933 * C3292) *
                  C153724 +
              (C25418 + C25417 + C25416) * C98536) *
                 C153684 +
             ((C49054 + C49053 + C49052) * C153724 + C127046 * C98536) *
                 C70498) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                  C153944 +
              C31290 * C153941 + C31291 * C153932 + C31294 * C153878) *
                 C70498 +
             (C134399 + C134400 + C134401 + C134402) * C153684) *
                C153849 -
            ((C135259 + C135260 + C135261 + C135262) * C153684 +
             (C34035 * C153878 + C31294 * C153932 + C31291 * C153941 +
              C31290 * C153944) *
                 C70498) *
                C153601) *
               C1091 +
           (((C135262 + C135261 + C135260 + C135259) * C70498 +
             (C29051 * C153944 + C29432 * C153941 + C31292 * C153932 +
              C32704 * C153878) *
                 C153684) *
                C153601 -
            ((C134403 + C134404 + C134405 + C134406) * C153684 +
             (C134402 + C134401 + C134400 + C134399) * C70498) *
                C153849) *
               C153573) *
              C153840 +
          ((((C31295 * C153944 + C31296 * C153941 + C31297 * C153932 +
              C56055 * C153878) *
                 C70498 +
             (C135263 + C135264 + C135265 + C135266) * C153684) *
                C153601 -
            ((C134410 + C134409 + C134408 + C134407) * C153684 +
             (C31297 * C153878 + C31296 * C153932 + C31295 * C153941 +
              (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                  C153944) *
                 C70498) *
                C153849) *
               C1091 +
           (((C134407 + C134408 + C134409 + C134410) * C70498 +
             (C134411 + C134412 + C134413 + C134414) * C153684) *
                C153849 -
            (((C28212 * C31225 - C28213 * C31222 - C28212 * C31226 +
               C153462 * C31228) *
                  C153878 +
              C31299 * C153932 + C30998 * C153941 + C29054 * C153944) *
                 C153684 +
             (C135266 + C135265 + C135264 + C135263) * C70498) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C98536 +
            (C48244 + C48245 + C48246) * C153724) *
               C70498 +
           ((C24325 + C24326 + C24327) * C98536 + C127043 * C153724) *
               C153684) *
              C153537 * C1178 -
          ((C26806 * C153724 + (C24330 + C24329 + C24328) * C98536) * C153684 +
           (C127044 * C153724 + (C24327 + C24326 + C24325) * C98536) * C70498) *
              C153537 * C1179 +
          ((C24345 * C98536 + (C25409 + C25408 + C25407) * C153724) * C70498 +
           ((C24333 + C24332 + C24331) * C98536 +
            (C26814 + C26815 + C26816) * C153724) *
               C153684) *
              C153537 * C1180 -
          (((C23996 * C5564 - C23997 * C5561 - C23996 * C5565 +
             C153885 * C5570 + C23994 * C5566 - C23995 * C5562 -
             C23994 * C5567 + C153914 * C5571 + C23992 * C5568 -
             C23993 * C5563 - C23992 * C5569 + C153933 * C5572) *
                C153724 +
            (C25806 + C25805 + C25804) * C98536) *
               C153684 +
           ((C26816 + C26815 + C26814) * C153724 + C25796 * C98536) * C70498) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C98536 +
             (C48244 + C48245 + C48246) * C153724) *
                C70498 +
            ((C24325 + C24326 + C24327) * C98536 + C127043 * C153724) *
                C153684) *
               C153537 * C1091 -
           ((C26806 * C153724 + (C24330 + C24329 + C24328) * C98536) * C153684 +
            (C127044 * C153724 + (C24327 + C24326 + C24325) * C98536) *
                C70498) *
               C153537 * C153573) *
              C1093 +
          ((((C24334 + C24335 + C24336) * C98536 + C127045 * C153724) * C70498 +
            ((C24337 + C24338 + C24339) * C98536 +
             (C25416 + C25417 + C25418) * C153724) *
                C153684) *
               C153537 * C153573 -
           ((C127046 * C153724 + (C24336 + C24335 + C24334) * C98536) *
                C153684 +
            ((C48255 + C48254 + C48253) * C153724 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C98536) *
                C70498) *
               C153537 * C1091) *
              C1094 +
          ((((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
              C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
              C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                 C98536 +
             (C48738 + C48739 + C48740) * C153724) *
                C70498 +
            ((C24821 + C24822 + C24823) * C98536 +
             (C126360 + C126361 + C126362) * C153724) *
                C153684) *
               C153537 * C1091 -
           (((C23996 * C1761 - C23997 * C1756 - C23996 * C1762 +
              C153885 * C1771 + C23994 * C1763 - C23995 * C1757 -
              C23994 * C1764 + C153914 * C1772 + C23992 * C1765 -
              C23993 * C1758 - C23992 * C1766 + C153933 * C1773) *
                 C153724 +
             (C24826 + C24825 + C24824) * C98536) *
                C153684 +
            ((C126362 + C126361 + C126360) * C153724 +
             (C24823 + C24822 + C24821) * C98536) *
                C70498) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C98536 +
             C31290 * C153724) *
                C153943 +
            (C130855 + C130856) * C153939 + C130871 * C153929 +
            C130872 * C153871) *
               C153537 * C1091 -
           ((C130861 + C130862) * C153871 + (C130860 + C130859) * C153929 +
            (C130858 + C130857) * C153939 + (C130856 + C130855) * C153943) *
               C153537 * C153573) *
              C1093 +
          (((C130863 + C130864) * C153943 + (C130865 + C130866) * C153939 +
            (C130867 + C130868) * C153929 + (C130869 + C130870) * C153871) *
               C153537 * C153573 -
           (C130873 * C153871 + C130874 * C153929 +
            (C130864 + C130863) * C153939 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C98536) *
                C153943) *
               C153537 * C1091) *
              C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C98536 +
             C31782 * C153724) *
                C153943 +
            (C131263 + C131264) * C153939 + (C131265 + C131266) * C153929 +
            (C131267 + C131268) * C153871) *
               C153537 * C1091 -
           (((C28212 * C5564 - C28213 * C5561 - C28212 * C5565 +
              C153462 * C5570) *
                 C153724 +
             C28704 * C98536) *
                C153871 +
            (C131268 + C131267) * C153929 + (C131266 + C131265) * C153939 +
            (C131264 + C131263) * C153943) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C98536 +
            C31290 * C153724) *
               C153943 +
           (C130855 + C130856) * C153939 + C130871 * C153929 +
           C130872 * C153871) *
              C153537 * C1178 -
          (C132057 * C153871 + C132058 * C153929 +
           (C130858 + C130857) * C153939 + (C130856 + C130855) * C153943) *
              C153537 * C1179 +
          (C130871 * C153943 + C130872 * C153939 +
           (C130862 + C130861) * C153929 + (C132059 + C132060) * C153871) *
              C153537 * C1180 -
          (((C28212 * C29845 - C28213 * C29844 - C28212 * C29846 +
             C153462 * C29847) *
                C153724 +
            C29279 * C98536) *
               C153871 +
           (C132060 + C132059) * C153929 + C132057 * C153939 +
           C132058 * C153943) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153944 +
             C31290 * C153941 + C31291 * C153932 + C31294 * C153878) *
                C70498 +
            (C134399 + C134400 + C134401 + C134402) * C153684) *
               C153537 * C1091 -
           ((C134403 + C134404 + C134405 + C134406) * C153684 +
            (C134402 + C134401 + C134400 + C134399) * C70498) *
               C153537 * C153573) *
              C1093 +
          (((C134407 + C134408 + C134409 + C134410) * C70498 +
            (C134411 + C134412 + C134413 + C134414) * C153684) *
               C153537 * C153573 -
           ((C134410 + C134409 + C134408 + C134407) * C153684 +
            (C31297 * C153878 + C31296 * C153932 + C31295 * C153941 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153944) *
                C70498) *
               C153537 * C1091) *
              C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C153944 +
             C31782 * C153941 + C31783 * C153932 + C56313 * C153878) *
                C70498 +
            (C134803 + C134804 + C134805 + C134806) * C153684) *
               C153537 * C1091 -
           (((C28212 * C6185 - C28213 * C6179 - C28212 * C6186 +
              C153462 * C6197) *
                 C153878 +
             C31547 * C153932 + C31546 * C153941 + C28702 * C153944) *
                C153684 +
            (C134806 + C134805 + C134804 + C134803) * C70498) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153944 +
            C31290 * C153941 + C31291 * C153932 + C31294 * C153878) *
               C70498 +
           (C134399 + C134400 + C134401 + C134402) * C153684) *
              C153537 * C1178 -
          ((C134403 + C134404 + C134405 + C134406) * C153684 +
           (C134402 + C134401 + C134400 + C134399) * C70498) *
              C153537 * C1179 +
          ((C134406 + C134405 + C134404 + C134403) * C70498 +
           (C135591 + C135592 + C135593 + C135594) * C153684) *
              C153537 * C1180 -
          (((C28212 * C30184 - C28213 * C30182 - C28212 * C30185 +
             C153462 * C30188) *
                C153878 +
            C29434 * C153932 + C29049 * C153941 + C28408 * C153944) *
               C153684 +
           (C135594 + C135593 + C135592 + C135591) * C70498) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                  C98536 +
              C31290 * C153724) *
                 C153943 +
             (C130855 + C130856) * C153939 + C130871 * C153929 +
             C130872 * C153871) *
                C1898 -
            (C132907 * C153871 + C132908 * C153929 +
             (C131725 + C131726) * C153939 +
             (C31291 * C153724 + C31290 * C98536) * C153943) *
                C153601) *
               C153848 +
           (((C131726 + C131725) * C153943 + (C131724 + C131723) * C153939 +
             (C131722 + C131721) * C153929 + (C132909 + C132910) * C153871) *
                C153601 -
            (C132057 * C153871 + C132058 * C153929 +
             (C130858 + C130857) * C153939 + (C130856 + C130855) * C153943) *
                C1898) *
               C153573) *
              C153840 +
          ((((C31295 * C98536 + C31296 * C153724) * C153943 +
             (C131727 + C131728) * C153939 + (C131729 + C131730) * C153929 +
             (C131731 + C131732) * C153871) *
                C153601 -
            (C130873 * C153871 + C130874 * C153929 +
             (C130864 + C130863) * C153939 +
             (C31295 * C153724 +
              (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                  C98536) *
                 C153943) *
                C1898) *
               C153848 +
           (((C130863 + C130864) * C153943 + (C130865 + C130866) * C153939 +
             (C130867 + C130868) * C153929 + (C130869 + C130870) * C153871) *
                C1898 -
            (((C28212 * C28550 - C28213 * C28547 - C28212 * C28551 +
               C153462 * C28553) *
                  C153724 +
              C29056 * C98536) *
                 C153871 +
             (C131732 + C131731) * C153929 + (C131730 + C131729) * C153939 +
             (C131728 + C131727) * C153943) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
               C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
               C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                  C98536 +
              (C48244 + C48245 + C48246) * C153724) *
                 C70498 +
             ((C24325 + C24326 + C24327) * C98536 + C127043 * C153724) *
                 C153684) *
                C1898 -
            ((C49653 * C153724 + C127044 * C98536) * C153684 +
             ((C48249 + C48248 + C48247) * C153724 +
              (C48246 + C48245 + C48244) * C98536) *
                 C70498) *
                C153601) *
               C153848 +
           (((C127043 * C98536 + C127822 * C153724) * C70498 +
             (C128790 * C98536 + (C26064 + C26065 + C26066) * C153724) *
                 C153684) *
                C153601 -
            ((C26806 * C153724 + (C24330 + C24329 + C24328) * C98536) *
                 C153684 +
             (C127044 * C153724 + (C24327 + C24326 + C24325) * C98536) *
                 C70498) *
                C1898) *
               C153573) *
              C153840 +
          (((((C48253 + C48254 + C48255) * C98536 +
              (C48256 + C48257 + C48258) * C153724) *
                 C70498 +
             (C127045 * C98536 + (C49052 + C49053 + C49054) * C153724) *
                 C153684) *
                C153601 -
            ((C127046 * C153724 + (C24336 + C24335 + C24334) * C98536) *
                 C153684 +
             ((C48255 + C48254 + C48253) * C153724 +
              (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
               C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
               C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                  C98536) *
                 C70498) *
                C1898) *
               C153848 +
           ((((C24334 + C24335 + C24336) * C98536 + C127045 * C153724) *
                 C70498 +
             ((C24337 + C24338 + C24339) * C98536 +
              (C25416 + C25417 + C25418) * C153724) *
                 C153684) *
                C1898 -
            (((C23996 * C3289 - C23997 * C3282 - C23996 * C3290 +
               C153885 * C3294 + C23994 * C3287 - C23995 * C3281 -
               C23994 * C3288 + C153914 * C3293 + C23992 * C3285 -
               C23993 * C3280 - C23992 * C3286 + C153933 * C3292) *
                  C153724 +
              (C25418 + C25417 + C25416) * C98536) *
                 C153684 +
             ((C49054 + C49053 + C49052) * C153724 + C127046 * C98536) *
                 C70498) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                  C153944 +
              C31290 * C153941 + C31291 * C153932 + C31294 * C153878) *
                 C70498 +
             (C134399 + C134400 + C134401 + C134402) * C153684) *
                C1898 -
            ((C135259 + C135260 + C135261 + C135262) * C153684 +
             (C34035 * C153878 + C31294 * C153932 + C31291 * C153941 +
              C31290 * C153944) *
                 C70498) *
                C153601) *
               C153848 +
           (((C135262 + C135261 + C135260 + C135259) * C70498 +
             (C136439 + C136440 + C136441 + C136442) * C153684) *
                C153601 -
            ((C134403 + C134404 + C134405 + C134406) * C153684 +
             (C134402 + C134401 + C134400 + C134399) * C70498) *
                C1898) *
               C153573) *
              C153840 +
          ((((C31295 * C153944 + C31296 * C153941 + C31297 * C153932 +
              C56055 * C153878) *
                 C70498 +
             (C135263 + C135264 + C135265 + C135266) * C153684) *
                C153601 -
            ((C134410 + C134409 + C134408 + C134407) * C153684 +
             (C31297 * C153878 + C31296 * C153932 + C31295 * C153941 +
              (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                  C153944) *
                 C70498) *
                C1898) *
               C153848 +
           (((C134407 + C134408 + C134409 + C134410) * C70498 +
             (C134411 + C134412 + C134413 + C134414) * C153684) *
                C1898 -
            (((C28212 * C31225 - C28213 * C31222 - C28212 * C31226 +
               C153462 * C31228) *
                  C153878 +
              C31299 * C153932 + C30998 * C153941 + C29054 * C153944) *
                 C153684 +
             (C135266 + C135265 + C135264 + C135263) * C70498) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C98536 +
             C31290 * C153724) *
                C153943 +
            (C130855 + C130856) * C153939 + C130871 * C153929 +
            C130872 * C153871) *
               C153921 -
           (C132907 * C153871 + C132908 * C153929 +
            (C131725 + C131726) * C153939 +
            (C31291 * C153724 + C31290 * C98536) * C153943) *
               C153922 +
           ((C31291 * C98536 + C31294 * C153724) * C153943 +
            (C132255 + C132256) * C153939 + (C132257 + C132258) * C153929 +
            (C132259 + C132260) * C153871) *
               C2414) *
              C153848 +
          (((C131726 + C131725) * C153943 + (C131724 + C131723) * C153939 +
            (C131722 + C131721) * C153929 + (C132909 + C132910) * C153871) *
               C153922 -
           (C132057 * C153871 + C132058 * C153929 +
            (C130858 + C130857) * C153939 + (C130856 + C130855) * C153943) *
               C153921 -
           (((C28212 * C30184 - C28213 * C30182 - C28212 * C30185 +
              C153462 * C30188) *
                 C153724 +
             C29434 * C98536) *
                C153871 +
            (C132260 + C132259) * C153929 + (C132258 + C132257) * C153939 +
            (C132256 + C132255) * C153943) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C98536 +
             (C48244 + C48245 + C48246) * C153724) *
                C70498 +
            ((C24325 + C24326 + C24327) * C98536 + C127043 * C153724) *
                C153684) *
               C153921 -
           ((C49653 * C153724 + C127044 * C98536) * C153684 +
            ((C48249 + C48248 + C48247) * C153724 +
             (C48246 + C48245 + C48244) * C98536) *
                C70498) *
               C153922 +
           ((C48264 * C98536 + (C48252 + C48251 + C48250) * C153724) * C70498 +
            (C127822 * C98536 + (C49657 + C49658 + C49659) * C153724) *
                C153684) *
               C2414) *
              C153848 +
          (((C127043 * C98536 + C127822 * C153724) * C70498 +
            (C128790 * C98536 + (C26064 + C26065 + C26066) * C153724) *
                C153684) *
               C153922 -
           ((C26806 * C153724 + (C24330 + C24329 + C24328) * C98536) * C153684 +
            (C127044 * C153724 + (C24327 + C24326 + C24325) * C98536) *
                C70498) *
               C153921 -
           (((C23996 * C6185 - C23997 * C6179 - C23996 * C6186 +
              C153885 * C6197 + C23994 * C6187 - C23995 * C6180 -
              C23994 * C6188 + C153914 * C6198 + C23992 * C6189 -
              C23993 * C6181 - C23992 * C6190 + C153933 * C6199) *
                 C153724 +
             (C26066 + C26065 + C26064) * C98536) *
                C153684 +
            ((C49659 + C49658 + C49657) * C153724 + C49653 * C98536) * C70498) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153944 +
             C31290 * C153941 + C31291 * C153932 + C31294 * C153878) *
                C70498 +
            (C134399 + C134400 + C134401 + C134402) * C153684) *
               C153921 -
           ((C135259 + C135260 + C135261 + C135262) * C153684 +
            (C34035 * C153878 + C31294 * C153932 + C31291 * C153941 +
             C31290 * C153944) *
                C70498) *
               C153922 +
           ((C31291 * C153944 + C31294 * C153941 + C34035 * C153932 +
             C56054 * C153878) *
                C70498 +
            (C135789 + C135790 + C135791 + C135792) * C153684) *
               C2414) *
              C153848 +
          (((C135262 + C135261 + C135260 + C135259) * C70498 +
            (C136439 + C136440 + C136441 + C136442) * C153684) *
               C153922 -
           ((C134403 + C134404 + C134405 + C134406) * C153684 +
            (C134402 + C134401 + C134400 + C134399) * C70498) *
               C153921 -
           (((C28212 * C34022 - C28213 * C34020 - C28212 * C34023 +
              C153462 * C34026) *
                 C153878 +
             C32704 * C153932 + C31292 * C153941 + C29432 * C153944) *
                C153684 +
            (C135792 + C135791 + C135790 + C135789) * C70498) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C23992 * C152 - C23993 * C144 - C23992 * C153 +
                  C153933 * C168 + C23994 * C154 - C23995 * C145 -
                  C23994 * C155 + C153914 * C169 + C23996 * C156 -
                  C23997 * C146 - C23996 * C157 + C153885 * C170) *
                     C98536 +
                 (C48244 + C48245 + C48246) * C153724) *
                    C70498 +
                ((C24325 + C24326 + C24327) * C98536 + C127043 * C153724) *
                    C153684) *
                   C1898 -
               ((C49653 * C153724 + C127044 * C98536) * C153684 +
                ((C48249 + C48248 + C48247) * C153724 +
                 (C48246 + C48245 + C48244) * C98536) *
                    C70498) *
                   C153601) *
                  C153521 * C1093 +
              ((((C48253 + C48254 + C48255) * C98536 +
                 (C48256 + C48257 + C48258) * C153724) *
                    C70498 +
                (C127045 * C98536 + (C49052 + C49053 + C49054) * C153724) *
                    C153684) *
                   C153601 -
               ((C127046 * C153724 + (C24336 + C24335 + C24334) * C98536) *
                    C153684 +
                ((C48255 + C48254 + C48253) * C153724 +
                 (C23996 * C158 - C23997 * C147 - C23996 * C159 +
                  C153885 * C171 + C23994 * C156 - C23995 * C146 -
                  C23994 * C157 + C153914 * C170 + C23992 * C154 -
                  C23993 * C145 - C23992 * C155 + C153933 * C169) *
                     C98536) *
                    C70498) *
                   C1898) *
                  C153521 * C1094 +
              ((((C23992 * C156 - C23993 * C146 - C23992 * C157 +
                  C153933 * C170 + C23994 * C158 - C23995 * C147 -
                  C23994 * C159 + C153914 * C171 + C23996 * C160 -
                  C23997 * C148 - C23996 * C161 + C153885 * C172) *
                     C98536 +
                 (C48738 + C48739 + C48740) * C153724) *
                    C70498 +
                ((C24821 + C24822 + C24823) * C98536 +
                 (C126360 + C126361 + C126362) * C153724) *
                    C153684) *
                   C1898 -
               (((C23996 * C1330 - C23997 * C1325 - C23996 * C1331 +
                  C153885 * C1340 + C23994 * C1332 - C23995 * C1326 -
                  C23994 * C1333 + C153914 * C1341 + C23992 * C1334 -
                  C23993 * C1327 - C23992 * C1335 + C153933 * C1342) *
                     C153724 +
                 (C126362 + C126361 + C126360) * C98536) *
                    C153684 +
                ((C48743 + C48742 + C48741) * C153724 +
                 (C48740 + C48739 + C48738) * C98536) *
                    C70498) *
                   C153601) *
                  C153521 * C1095) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C23992 * C152 - C23993 * C144 - C23992 * C153 +
                  C153933 * C168 + C23994 * C154 - C23995 * C145 -
                  C23994 * C155 + C153914 * C169 + C23996 * C156 -
                  C23997 * C146 - C23996 * C157 + C153885 * C170) *
                     C98536 +
                 (C48244 + C48245 + C48246) * C153724) *
                    C70498 +
                ((C24325 + C24326 + C24327) * C98536 + C127043 * C153724) *
                    C153684) *
                   C1898 -
               ((C49653 * C153724 + C127044 * C98536) * C153684 +
                ((C48249 + C48248 + C48247) * C153724 +
                 (C48246 + C48245 + C48244) * C98536) *
                    C70498) *
                   C153601) *
                  C298 +
              (((C127043 * C98536 + C127822 * C153724) * C70498 +
                (C128790 * C98536 + (C26064 + C26065 + C26066) * C153724) *
                    C153684) *
                   C153601 -
               ((C26806 * C153724 + (C24330 + C24329 + C24328) * C98536) *
                    C153684 +
                (C127044 * C153724 + (C24327 + C24326 + C24325) * C98536) *
                    C70498) *
                   C1898) *
                  C299 +
              (((C24345 * C98536 + C128790 * C153724) * C70498 +
                ((C24333 + C24332 + C24331) * C98536 +
                 (C26814 + C26815 + C26816) * C153724) *
                    C153684) *
                   C1898 -
               (((C23996 * C4784 - C23997 * C4781 - C23996 * C4785 +
                  C153885 * C4790 + C23994 * C4786 - C23995 * C4782 -
                  C23994 * C4787 + C153914 * C4791 + C23992 * C4788 -
                  C23993 * C4783 - C23992 * C4789 + C153933 * C4792) *
                     C153724 +
                 (C26816 + C26815 + C26814) * C98536) *
                    C153684 +
                ((C26066 + C26065 + C26064) * C153724 + C26806 * C98536) *
                    C70498) *
                   C153601) *
                  C300) *
             C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C98536 +
            (C48244 + C48245 + C48246) * C153724) *
               C70498 +
           ((C24325 + C24326 + C24327) * C98536 + C127043 * C153724) *
               C153684) *
              C2104 -
          ((C49653 * C153724 + C127044 * C98536) * C153684 +
           ((C48249 + C48248 + C48247) * C153724 +
            (C48246 + C48245 + C48244) * C98536) *
               C70498) *
              C2105 +
          ((C48264 * C98536 + (C48252 + C48251 + C48250) * C153724) * C70498 +
           (C127822 * C98536 + (C49657 + C49658 + C49659) * C153724) *
               C153684) *
              C2106 -
          (((C23996 * C9038 - C23997 * C9035 - C23996 * C9039 +
             C153885 * C9044 + C23994 * C9040 - C23995 * C9036 -
             C23994 * C9041 + C153914 * C9045 + C23992 * C9042 -
             C23993 * C9037 - C23992 * C9043 + C153933 * C9046) *
                C153724 +
            (C49659 + C49658 + C49657) * C98536) *
               C153684 +
           ((C50990 + C50989 + C50988) * C153724 + C50981 * C98536) * C70498) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C98536 +
             C31290 * C153724) *
                C153943 +
            (C130855 + C130856) * C153939 + C130871 * C153929 +
            C130872 * C153871) *
               C1898 -
           (C132907 * C153871 + C132908 * C153929 +
            (C131725 + C131726) * C153939 +
            (C31291 * C153724 + C31290 * C98536) * C153943) *
               C153601) *
              C153521 * C1093 +
          (((C31295 * C98536 + C31296 * C153724) * C153943 +
            (C131727 + C131728) * C153939 + (C131729 + C131730) * C153929 +
            (C131731 + C131732) * C153871) *
               C153601 -
           (C130873 * C153871 + C130874 * C153929 +
            (C130864 + C130863) * C153939 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C98536) *
                C153943) *
               C1898) *
              C153521 * C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C98536 +
             C31782 * C153724) *
                C153943 +
            (C131263 + C131264) * C153939 + (C131265 + C131266) * C153929 +
            (C131267 + C131268) * C153871) *
               C1898 -
           (((C28212 * C4784 - C28213 * C4781 - C28212 * C4785 +
              C153462 * C4790) *
                 C153724 +
             C44743 * C98536) *
                C153871 +
            (C31547 * C153724 + C31546 * C98536) * C153929 +
            (C31545 * C153724 + C31544 * C98536) * C153939 +
            (C31783 * C153724 + C31782 * C98536) * C153943) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C98536 +
             C31290 * C153724) *
                C153943 +
            (C130855 + C130856) * C153939 + C130871 * C153929 +
            C130872 * C153871) *
               C1898 -
           (C132907 * C153871 + C132908 * C153929 +
            (C131725 + C131726) * C153939 +
            (C31291 * C153724 + C31290 * C98536) * C153943) *
               C153601) *
              C298 +
          (((C131726 + C131725) * C153943 + (C131724 + C131723) * C153939 +
            (C131722 + C131721) * C153929 + (C132909 + C132910) * C153871) *
               C153601 -
           (C132057 * C153871 + C132058 * C153929 +
            (C130858 + C130857) * C153939 + (C130856 + C130855) * C153943) *
               C1898) *
              C299 +
          ((C130871 * C153943 + C130872 * C153939 +
            (C130862 + C130861) * C153929 + (C132059 + C132060) * C153871) *
               C1898 -
           (((C28212 * C29403 - C28213 * C29402 - C28212 * C29404 +
              C153462 * C29405) *
                 C153724 +
             C29855 * C98536) *
                C153871 +
            (C132910 + C132909) * C153929 + C132907 * C153939 +
            C132908 * C153943) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C98536 +
            C31290 * C153724) *
               C153943 +
           (C130855 + C130856) * C153939 + C130871 * C153929 +
           C130872 * C153871) *
              C2104 -
          (C132907 * C153871 + C132908 * C153929 +
           (C131725 + C131726) * C153939 +
           (C31291 * C153724 + C31290 * C98536) * C153943) *
              C2105 +
          ((C31291 * C98536 + C31294 * C153724) * C153943 +
           (C132255 + C132256) * C153939 + (C132257 + C132258) * C153929 +
           (C132259 + C132260) * C153871) *
              C2106 -
          (((C28212 * C32677 - C28213 * C32676 - C28212 * C32678 +
             C153462 * C32679) *
                C153724 +
            C32705 * C98536) *
               C153871 +
           (C32704 * C153724 + C31292 * C98536) * C153929 +
           (C32703 * C153724 + C31293 * C98536) * C153939 +
           (C34035 * C153724 + C31294 * C98536) * C153943) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153944 +
             C31290 * C153941 + C31291 * C153932 + C31294 * C153878) *
                C70498 +
            (C134399 + C134400 + C134401 + C134402) * C153684) *
               C1898 -
           ((C135259 + C135260 + C135261 + C135262) * C153684 +
            (C34035 * C153878 + C31294 * C153932 + C31291 * C153941 +
             C31290 * C153944) *
                C70498) *
               C153601) *
              C153521 * C1093 +
          (((C31295 * C153944 + C31296 * C153941 + C31297 * C153932 +
             C56055 * C153878) *
                C70498 +
            (C135263 + C135264 + C135265 + C135266) * C153684) *
               C153601 -
           ((C134410 + C134409 + C134408 + C134407) * C153684 +
            (C31297 * C153878 + C31296 * C153932 + C31295 * C153941 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153944) *
                C70498) *
               C1898) *
              C153521 * C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C153944 +
             C31782 * C153941 + C31783 * C153932 + C56313 * C153878) *
                C70498 +
            (C134803 + C134804 + C134805 + C134806) * C153684) *
               C1898 -
           (((C28212 * C9038 - C28213 * C9035 - C28212 * C9039 +
              C153462 * C9044) *
                 C153878 +
             C67563 * C153932 + C31545 * C153941 + C31544 * C153944) *
                C153684 +
            (C56314 * C153878 + C56313 * C153932 + C31783 * C153941 +
             C31782 * C153944) *
                C70498) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153944 +
             C31290 * C153941 + C31291 * C153932 + C31294 * C153878) *
                C70498 +
            (C134399 + C134400 + C134401 + C134402) * C153684) *
               C1898 -
           ((C135259 + C135260 + C135261 + C135262) * C153684 +
            (C34035 * C153878 + C31294 * C153932 + C31291 * C153941 +
             C31290 * C153944) *
                C70498) *
               C153601) *
              C298 +
          (((C135262 + C135261 + C135260 + C135259) * C70498 +
            (C136439 + C136440 + C136441 + C136442) * C153684) *
               C153601 -
           ((C134403 + C134404 + C134405 + C134406) * C153684 +
            (C134402 + C134401 + C134400 + C134399) * C70498) *
               C1898) *
              C299 +
          (((C134406 + C134405 + C134404 + C134403) * C70498 +
            (C135591 + C135592 + C135593 + C135594) * C153684) *
               C1898 -
           (((C28212 * C32677 - C28213 * C32676 - C28212 * C32678 +
              C153462 * C32679) *
                 C153878 +
             C32705 * C153932 + C29433 * C153941 + C29050 * C153944) *
                C153684 +
            (C136442 + C136441 + C136440 + C136439) * C70498) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153944 +
            C31290 * C153941 + C31291 * C153932 + C31294 * C153878) *
               C70498 +
           (C134399 + C134400 + C134401 + C134402) * C153684) *
              C2104 -
          ((C135259 + C135260 + C135261 + C135262) * C153684 +
           (C34035 * C153878 + C31294 * C153932 + C31291 * C153941 +
            C31290 * C153944) *
               C70498) *
              C2105 +
          ((C31291 * C153944 + C31294 * C153941 + C34035 * C153932 +
            C56054 * C153878) *
               C70498 +
           (C135789 + C135790 + C135791 + C135792) * C153684) *
              C2106 -
          (((C28212 * C56814 - C28213 * C56813 - C28212 * C56815 +
             C153462 * C56816) *
                C153878 +
            C56824 * C153932 + C32703 * C153941 + C31293 * C153944) *
               C153684 +
           (C57567 * C153878 + C56054 * C153932 + C34035 * C153941 +
            C31294 * C153944) *
               C70498) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C98536 +
             C31290 * C153724) *
                C153943 +
            (C130855 + C130856) * C153939 + C130871 * C153929 +
            C130872 * C153871) *
               C153921 -
           (C132907 * C153871 + C132908 * C153929 +
            (C131725 + C131726) * C153939 +
            (C31291 * C153724 + C31290 * C98536) * C153943) *
               C153922 +
           ((C31291 * C98536 + C31294 * C153724) * C153943 +
            (C132255 + C132256) * C153939 + (C132257 + C132258) * C153929 +
            (C132259 + C132260) * C153871) *
               C2414) *
              C153521 * C153840 +
          (((C31295 * C98536 + C31296 * C153724) * C153943 +
            (C131727 + C131728) * C153939 + (C131729 + C131730) * C153929 +
            (C131731 + C131732) * C153871) *
               C153922 -
           (C130873 * C153871 + C130874 * C153929 +
            (C130864 + C130863) * C153939 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C98536) *
                C153943) *
               C153921 -
           (((C28212 * C32074 - C28213 * C32073 - C28212 * C32075 +
              C153462 * C32076) *
                 C153724 +
             C30999 * C98536) *
                C153871 +
            (C31299 * C153724 + C30998 * C98536) * C153929 +
            (C31298 * C153724 + C30997 * C98536) * C153939 +
            (C31297 * C153724 + C31296 * C98536) * C153943) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C98536 +
             (C48244 + C48245 + C48246) * C153724) *
                C70498 +
            ((C24325 + C24326 + C24327) * C98536 + C127043 * C153724) *
                C153684) *
               C153921 -
           ((C49653 * C153724 + C127044 * C98536) * C153684 +
            ((C48249 + C48248 + C48247) * C153724 +
             (C48246 + C48245 + C48244) * C98536) *
                C70498) *
               C153922 +
           ((C48264 * C98536 + (C48252 + C48251 + C48250) * C153724) * C70498 +
            (C127822 * C98536 + (C49657 + C49658 + C49659) * C153724) *
                C153684) *
               C2414) *
              C153521 * C153840 +
          ((((C48253 + C48254 + C48255) * C98536 +
             (C48256 + C48257 + C48258) * C153724) *
                C70498 +
            (C127045 * C98536 + (C49052 + C49053 + C49054) * C153724) *
                C153684) *
               C153922 -
           ((C127046 * C153724 + (C24336 + C24335 + C24334) * C98536) *
                C153684 +
            ((C48255 + C48254 + C48253) * C153724 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C98536) *
                C70498) *
               C153921 -
           (((C23996 * C8429 - C23997 * C8428 - C23996 * C8430 +
              C153885 * C8431 + C23994 * C6191 - C23995 * C6182 -
              C23994 * C6192 + C153914 * C6200 + C23992 * C6193 -
              C23993 * C6183 - C23992 * C6194 + C153933 * C6201) *
                 C153724 +
             (C49054 + C49053 + C49052) * C98536) *
                C153684 +
            ((C48261 + C48260 + C48259) * C153724 + C48265 * C98536) * C70498) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153944 +
             C31290 * C153941 + C31291 * C153932 + C31294 * C153878) *
                C70498 +
            (C134399 + C134400 + C134401 + C134402) * C153684) *
               C153921 -
           ((C135259 + C135260 + C135261 + C135262) * C153684 +
            (C34035 * C153878 + C31294 * C153932 + C31291 * C153941 +
             C31290 * C153944) *
                C70498) *
               C153922 +
           ((C31291 * C153944 + C31294 * C153941 + C34035 * C153932 +
             C56054 * C153878) *
                C70498 +
            (C135789 + C135790 + C135791 + C135792) * C153684) *
               C2414) *
              C153521 * C153840 +
          (((C31295 * C153944 + C31296 * C153941 + C31297 * C153932 +
             C56055 * C153878) *
                C70498 +
            (C135263 + C135264 + C135265 + C135266) * C153684) *
               C153922 -
           ((C134410 + C134409 + C134408 + C134407) * C153684 +
            (C31297 * C153878 + C31296 * C153932 + C31295 * C153941 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153944) *
                C70498) *
               C153921 -
           (((C28212 * C56477 - C28213 * C56476 - C28212 * C56478 +
              C153462 * C56479) *
                 C153878 +
             C56487 * C153932 + C31298 * C153941 + C30997 * C153944) *
                C153684 +
            (C56056 * C153878 + C56055 * C153932 + C31297 * C153941 +
             C31296 * C153944) *
                C70498) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C98536 +
             (C48244 + C48245 + C48246) * C153724) *
                C70498 +
            ((C24325 + C24326 + C24327) * C98536 + C127043 * C153724) *
                C153684) *
               C1898 -
           ((C49653 * C153724 + C127044 * C98536) * C153684 +
            ((C48249 + C48248 + C48247) * C153724 +
             (C48246 + C48245 + C48244) * C98536) *
                C70498) *
               C153601) *
              C298 +
          (((C127043 * C98536 + C127822 * C153724) * C70498 +
            (C128790 * C98536 + (C26064 + C26065 + C26066) * C153724) *
                C153684) *
               C153601 -
           ((C26806 * C153724 + (C24330 + C24329 + C24328) * C98536) * C153684 +
            (C127044 * C153724 + (C24327 + C24326 + C24325) * C98536) *
                C70498) *
               C1898) *
              C299 +
          (((C24345 * C98536 + C128790 * C153724) * C70498 +
            ((C24333 + C24332 + C24331) * C98536 +
             (C26814 + C26815 + C26816) * C153724) *
                C153684) *
               C1898 -
           (((C23996 * C4784 - C23997 * C4781 - C23996 * C4785 +
              C153885 * C4790 + C23994 * C4786 - C23995 * C4782 -
              C23994 * C4787 + C153914 * C4791 + C23992 * C4788 -
              C23993 * C4783 - C23992 * C4789 + C153933 * C4792) *
                 C153724 +
             (C26816 + C26815 + C26814) * C98536) *
                C153684 +
            ((C26066 + C26065 + C26064) * C153724 + C26806 * C98536) * C70498) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C98536 +
             (C48244 + C48245 + C48246) * C153724) *
                C70498 +
            ((C24325 + C24326 + C24327) * C98536 + C127043 * C153724) *
                C153684) *
               C1898 -
           ((C49653 * C153724 + C127044 * C98536) * C153684 +
            ((C48249 + C48248 + C48247) * C153724 +
             (C48246 + C48245 + C48244) * C98536) *
                C70498) *
               C153601) *
              C153521 * C1093 +
          ((((C48253 + C48254 + C48255) * C98536 +
             (C48256 + C48257 + C48258) * C153724) *
                C70498 +
            (C127045 * C98536 + (C49052 + C49053 + C49054) * C153724) *
                C153684) *
               C153601 -
           ((C127046 * C153724 + (C24336 + C24335 + C24334) * C98536) *
                C153684 +
            ((C48255 + C48254 + C48253) * C153724 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C98536) *
                C70498) *
               C1898) *
              C153521 * C1094 +
          ((((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
              C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
              C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                 C98536 +
             (C48738 + C48739 + C48740) * C153724) *
                C70498 +
            ((C24821 + C24822 + C24823) * C98536 +
             (C126360 + C126361 + C126362) * C153724) *
                C153684) *
               C1898 -
           (((C23996 * C1330 - C23997 * C1325 - C23996 * C1331 +
              C153885 * C1340 + C23994 * C1332 - C23995 * C1326 -
              C23994 * C1333 + C153914 * C1341 + C23992 * C1334 -
              C23993 * C1327 - C23992 * C1335 + C153933 * C1342) *
                 C153724 +
             (C126362 + C126361 + C126360) * C98536) *
                C153684 +
            ((C48743 + C48742 + C48741) * C153724 +
             (C48740 + C48739 + C48738) * C98536) *
                C70498) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C98536 +
             C31290 * C153724) *
                C153943 +
            (C130855 + C130856) * C153939 + C130871 * C153929 +
            C130872 * C153871) *
               C1898 -
           (C132907 * C153871 + C132908 * C153929 +
            (C131725 + C131726) * C153939 +
            (C31291 * C153724 + C31290 * C98536) * C153943) *
               C153601) *
              C153521 * C1093 +
          (((C31295 * C98536 + C31296 * C153724) * C153943 +
            (C131727 + C131728) * C153939 + (C131729 + C131730) * C153929 +
            (C131731 + C131732) * C153871) *
               C153601 -
           (C130873 * C153871 + C130874 * C153929 +
            (C130864 + C130863) * C153939 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C98536) *
                C153943) *
               C1898) *
              C153521 * C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C98536 +
             C31782 * C153724) *
                C153943 +
            (C131263 + C131264) * C153939 + (C131265 + C131266) * C153929 +
            (C131267 + C131268) * C153871) *
               C1898 -
           (((C28212 * C4784 - C28213 * C4781 - C28212 * C4785 +
              C153462 * C4790) *
                 C153724 +
             C44743 * C98536) *
                C153871 +
            (C31547 * C153724 + C31546 * C98536) * C153929 +
            (C31545 * C153724 + C31544 * C98536) * C153939 +
            (C31783 * C153724 + C31782 * C98536) * C153943) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C98536 +
             C31290 * C153724) *
                C153943 +
            (C130855 + C130856) * C153939 + C130871 * C153929 +
            C130872 * C153871) *
               C1898 -
           (C132907 * C153871 + C132908 * C153929 +
            (C131725 + C131726) * C153939 +
            (C31291 * C153724 + C31290 * C98536) * C153943) *
               C153601) *
              C298 +
          (((C131726 + C131725) * C153943 + (C131724 + C131723) * C153939 +
            (C131722 + C131721) * C153929 + (C132909 + C132910) * C153871) *
               C153601 -
           (C132057 * C153871 + C132058 * C153929 +
            (C130858 + C130857) * C153939 + (C130856 + C130855) * C153943) *
               C1898) *
              C299 +
          ((C130871 * C153943 + C130872 * C153939 +
            (C130862 + C130861) * C153929 + (C132059 + C132060) * C153871) *
               C1898 -
           (((C28212 * C29403 - C28213 * C29402 - C28212 * C29404 +
              C153462 * C29405) *
                 C153724 +
             C29855 * C98536) *
                C153871 +
            (C132910 + C132909) * C153929 + C132907 * C153939 +
            C132908 * C153943) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153944 +
             C31290 * C153941 + C31291 * C153932 + C31294 * C153878) *
                C70498 +
            (C134399 + C134400 + C134401 + C134402) * C153684) *
               C1898 -
           ((C135259 + C135260 + C135261 + C135262) * C153684 +
            (C34035 * C153878 + C31294 * C153932 + C31291 * C153941 +
             C31290 * C153944) *
                C70498) *
               C153601) *
              C153521 * C1093 +
          (((C31295 * C153944 + C31296 * C153941 + C31297 * C153932 +
             C56055 * C153878) *
                C70498 +
            (C135263 + C135264 + C135265 + C135266) * C153684) *
               C153601 -
           ((C134410 + C134409 + C134408 + C134407) * C153684 +
            (C31297 * C153878 + C31296 * C153932 + C31295 * C153941 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153944) *
                C70498) *
               C1898) *
              C153521 * C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C153944 +
             C31782 * C153941 + C31783 * C153932 + C56313 * C153878) *
                C70498 +
            (C134803 + C134804 + C134805 + C134806) * C153684) *
               C1898 -
           (((C28212 * C9038 - C28213 * C9035 - C28212 * C9039 +
              C153462 * C9044) *
                 C153878 +
             C67563 * C153932 + C31545 * C153941 + C31544 * C153944) *
                C153684 +
            (C56314 * C153878 + C56313 * C153932 + C31783 * C153941 +
             C31782 * C153944) *
                C70498) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153944 +
             C31290 * C153941 + C31291 * C153932 + C31294 * C153878) *
                C70498 +
            (C134399 + C134400 + C134401 + C134402) * C153684) *
               C1898 -
           ((C135259 + C135260 + C135261 + C135262) * C153684 +
            (C34035 * C153878 + C31294 * C153932 + C31291 * C153941 +
             C31290 * C153944) *
                C70498) *
               C153601) *
              C298 +
          (((C135262 + C135261 + C135260 + C135259) * C70498 +
            (C136439 + C136440 + C136441 + C136442) * C153684) *
               C153601 -
           ((C134403 + C134404 + C134405 + C134406) * C153684 +
            (C134402 + C134401 + C134400 + C134399) * C70498) *
               C1898) *
              C299 +
          (((C134406 + C134405 + C134404 + C134403) * C70498 +
            (C135591 + C135592 + C135593 + C135594) * C153684) *
               C1898 -
           (((C28212 * C32677 - C28213 * C32676 - C28212 * C32678 +
              C153462 * C32679) *
                 C153878 +
             C32705 * C153932 + C29433 * C153941 + C29050 * C153944) *
                C153684 +
            (C136442 + C136441 + C136440 + C136439) * C70498) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153720 +
             (C39442 + C39443) * C153727 + C58748 * C116209) *
                C70498 +
            ((C35192 + C35193) * C153720 + C40462 * C153727 +
             C41246 * C116209) *
                C153684) *
               C153537 * C153848 -
           ((C41244 * C116209 + C37407 * C153727 +
             (C35195 + C35194) * C153720) *
                C153684 +
            (C41245 * C116209 + C40463 * C153727 +
             (C35193 + C35192) * C153720) *
                C70498) *
               C153537 * C153573) *
              C153917 +
          ((((C35200 + C35201) * C153720 + C40464 * C153727 +
             C59773 * C116209) *
                C70498 +
            ((C35202 + C35203) * C153720 + C40465 * C153727 +
             (C39452 + C39453) * C116209) *
                C153684) *
               C153537 * C153573 -
           ((C58765 * C116209 + C40466 * C153727 +
             (C35201 + C35200) * C153720) *
                C153684 +
            (C58766 * C116209 + (C39447 + C39446) * C153727 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153720) *
                C70498) *
               C153537 * C153848) *
              C153918 +
          ((((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
              C152081 * C158 - C34900 * C147 - C152081 * C159 +
              C153472 * C171) *
                 C153720 +
             (C40074 + C40075) * C153727 + (C59385 + C59386) * C116209) *
                C70498 +
            ((C35640 + C35641) * C153720 + (C39768 + C39769) * C153727 +
             (C59081 + C59082) * C116209) *
                C153684) *
               C153537 * C153848 -
           (((C152081 * C3289 - C34900 * C3282 - C152081 * C3290 +
              C153472 * C3294 + C152100 * C3287 - C34898 * C3281 -
              C152100 * C3288 + C153829 * C3293) *
                 C116209 +
             (C39771 + C39770) * C153727 + (C35643 + C35642) * C153720) *
                C153684 +
            ((C59082 + C59081) * C116209 + (C39769 + C39768) * C153727 +
             (C35641 + C35640) * C153720) *
                C70498) *
               C153537 * C153573) *
              C650)) /
        (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C152100 * C152 - C34898 * C144 - C152100 * C153 +
               C153829 * C168 + C152081 * C154 - C34900 * C145 -
               C152081 * C155 + C153472 * C169) *
                  C153720 +
              (C39442 + C39443) * C153727 + C58748 * C116209) *
                 C70498 +
             ((C35192 + C35193) * C153720 + C40462 * C153727 +
              C41246 * C116209) *
                 C153684) *
                C153849 -
            ((C60548 * C116209 + C41245 * C153727 + C40463 * C153720) *
                 C153684 +
             (C62304 * C116209 + (C39444 + C39445) * C153727 +
              (C39443 + C39442) * C153720) *
                 C70498) *
                C153601) *
               C153848 +
           (((C40462 * C153720 + C41246 * C153727 + C60549 * C116209) * C70498 +
             (C39073 * C153720 + C41255 * C153727 +
              (C41274 + C41275) * C116209) *
                 C153684) *
                C153601 -
            ((C41244 * C116209 + C37407 * C153727 +
              (C35195 + C35194) * C153720) *
                 C153684 +
             (C41245 * C116209 + C40463 * C153727 +
              (C35193 + C35192) * C153720) *
                 C70498) *
                C153849) *
               C153573) *
              C301 +
          (((((C39446 + C39447) * C153720 + (C39448 + C39449) * C153727 +
              (C58775 + C58776) * C116209) *
                 C70498 +
             (C40464 * C153720 + C59773 * C153727 +
              (C58777 + C58778) * C116209) *
                 C153684) *
                C153601 -
            ((C58765 * C116209 + C40466 * C153727 +
              (C35201 + C35200) * C153720) *
                 C153684 +
             (C58766 * C116209 + (C39447 + C39446) * C153727 +
              (C152081 * C156 - C34900 * C146 - C152081 * C157 +
               C153472 * C170 + C152100 * C154 - C34898 * C145 -
               C152100 * C155 + C153829 * C169) *
                  C153720) *
                 C70498) *
                C153849) *
               C153848 +
           ((((C35200 + C35201) * C153720 + C40464 * C153727 +
              C59773 * C116209) *
                 C70498 +
             ((C35202 + C35203) * C153720 + C40465 * C153727 +
              (C39452 + C39453) * C116209) *
                 C153684) *
                C153849 -
            (((C152081 * C6185 - C34900 * C6179 - C152081 * C6186 +
               C153472 * C6197 + C152100 * C6187 - C34898 * C6180 -
               C152100 * C6188 + C153829 * C6198) *
                  C116209 +
              (C39453 + C39452) * C153727 + C39074 * C153720) *
                 C153684 +
             ((C58778 + C58777) * C116209 + C58765 * C153727 +
              C40466 * C153720) *
                 C70498) *
                C153601) *
               C153573) *
              C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153720 +
             (C39442 + C39443) * C153727 + C58748 * C116209) *
                C70498 +
            ((C35192 + C35193) * C153720 + C40462 * C153727 +
             C41246 * C116209) *
                C153684) *
               C153537 * C298 -
           ((C41244 * C116209 + C37407 * C153727 +
             (C35195 + C35194) * C153720) *
                C153684 +
            (C41245 * C116209 + C40463 * C153727 +
             (C35193 + C35192) * C153720) *
                C70498) *
               C153537 * C299 +
           ((C35208 * C153720 + C39073 * C153727 + C41255 * C116209) * C70498 +
            (C35209 * C153720 + C42244 * C153727 +
             (C36758 + C36759) * C116209) *
                C153684) *
               C153537 * C300) *
              C301 +
          ((((C35200 + C35201) * C153720 + C40464 * C153727 +
             C59773 * C116209) *
                C70498 +
            ((C35202 + C35203) * C153720 + C40465 * C153727 +
             (C39452 + C39453) * C116209) *
                C153684) *
               C153537 * C299 -
           ((C58765 * C116209 + C40466 * C153727 +
             (C35201 + C35200) * C153720) *
                C153684 +
            (C58766 * C116209 + (C39447 + C39446) * C153727 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153720) *
                C70498) *
               C153537 * C298 -
           (((C152081 * C4784 - C34900 * C4781 - C152081 * C4785 +
              C153472 * C4790 + C152100 * C4786 - C34898 * C4782 -
              C152100 * C4787 + C153829 * C4791) *
                 C116209 +
             (C36181 + C36180) * C153727 + C35210 * C153720) *
                C153684 +
            ((C39453 + C39452) * C116209 + C39074 * C153727 +
             C35211 * C153720) *
                C70498) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153720 +
            (C39442 + C39443) * C153727 + C58748 * C116209) *
               C70498 +
           ((C35192 + C35193) * C153720 + C40462 * C153727 + C41246 * C116209) *
               C153684) *
              C153537 * C153521 * C130 -
          ((C58765 * C116209 + C40466 * C153727 + (C35201 + C35200) * C153720) *
               C153684 +
           (C58766 * C116209 + (C39447 + C39446) * C153727 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C153720) *
               C70498) *
              C153537 * C153521 * C131 +
          (((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
             C152081 * C158 - C34900 * C147 - C152081 * C159 + C153472 * C171) *
                C153720 +
            (C40074 + C40075) * C153727 + (C59385 + C59386) * C116209) *
               C70498 +
           ((C35640 + C35641) * C153720 + (C39768 + C39769) * C153727 +
            (C59081 + C59082) * C116209) *
               C153684) *
              C153537 * C153521 * C132 -
          (((C152081 * C1330 - C34900 * C1325 - C152081 * C1331 +
             C153472 * C1340 + C152100 * C1332 - C34898 * C1326 -
             C152100 * C1333 + C153829 * C1341) *
                C116209 +
            (C152081 * C959 - C34900 * C949 - C152081 * C960 + C153472 * C967 +
             C152100 * C957 - C34898 * C948 - C152100 * C958 + C153829 * C966) *
                C153727 +
            (C152081 * C315 - C34900 * C303 - C152081 * C316 + C153472 * C339 +
             C152100 * C317 - C34898 * C304 - C152100 * C318 + C153829 * C340) *
                C153720) *
               C153684 +
           ((C152081 * C506 - C34900 * C485 - C152081 * C507 + C153472 * C521 +
             C152100 * C504 - C34898 * C484 - C152100 * C505 + C153829 * C520) *
                C116209 +
            (C152081 * C488 - C34900 * C476 - C152081 * C489 + C153472 * C512 +
             C152100 * C490 - C34898 * C477 - C152100 * C491 + C153829 * C513) *
                C153727 +
            (C152081 * C160 - C34900 * C148 - C152081 * C161 + C153472 * C172 +
             C152100 * C158 - C34898 * C147 - C152100 * C159 + C153829 * C171) *
                C153720) *
               C70498) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153720 +
             (C39442 + C39443) * C153727 + C58748 * C116209) *
                C70498 +
            ((C35192 + C35193) * C153720 + C40462 * C153727 +
             C41246 * C116209) *
                C153684) *
               C473 -
           ((C60548 * C116209 + C41245 * C153727 + C40463 * C153720) * C153684 +
            (C62304 * C116209 + (C39444 + C39445) * C153727 +
             (C39443 + C39442) * C153720) *
                C70498) *
               C474 +
           ((C58748 * C153720 + C63807 * C153727 +
             (C62317 + C62318) * C116209) *
                C70498 +
            (C41246 * C153720 + C60549 * C153727 +
             (C60562 + C60563) * C116209) *
                C153684) *
               C475) *
              C153521 * C301 +
          ((((C39446 + C39447) * C153720 + (C39448 + C39449) * C153727 +
             (C58775 + C58776) * C116209) *
                C70498 +
            (C40464 * C153720 + C59773 * C153727 +
             (C58777 + C58778) * C116209) *
                C153684) *
               C474 -
           ((C58765 * C116209 + C40466 * C153727 +
             (C35201 + C35200) * C153720) *
                C153684 +
            (C58766 * C116209 + (C39447 + C39446) * C153727 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153720) *
                C70498) *
               C473 -
           (((C152081 * C9038 - C34900 * C9035 - C152081 * C9039 +
              C153472 * C9044 + C152100 * C9040 - C34898 * C9036 -
              C152100 * C9041 + C153829 * C9045) *
                 C116209 +
             (C58778 + C58777) * C153727 + C58765 * C153720) *
                C153684 +
            ((C63822 + C63821) * C116209 + C63816 * C153727 +
             C58766 * C153720) *
                C70498) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153720 +
             (C39442 + C39443) * C153727 + C58748 * C116209) *
                C70498 +
            ((C35192 + C35193) * C153720 + C40462 * C153727 +
             C41246 * C116209) *
                C153684) *
               C153849 -
           ((C60548 * C116209 + C41245 * C153727 + C40463 * C153720) * C153684 +
            (C62304 * C116209 + (C39444 + C39445) * C153727 +
             (C39443 + C39442) * C153720) *
                C70498) *
               C153601) *
              C153521 * C153917 +
          ((((C39446 + C39447) * C153720 + (C39448 + C39449) * C153727 +
             (C58775 + C58776) * C116209) *
                C70498 +
            (C40464 * C153720 + C59773 * C153727 +
             (C58777 + C58778) * C116209) *
                C153684) *
               C153601 -
           ((C58765 * C116209 + C40466 * C153727 +
             (C35201 + C35200) * C153720) *
                C153684 +
            (C58766 * C116209 + (C39447 + C39446) * C153727 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153720) *
                C70498) *
               C153849) *
              C153521 * C153918 +
          ((((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
              C152081 * C158 - C34900 * C147 - C152081 * C159 +
              C153472 * C171) *
                 C153720 +
             (C40074 + C40075) * C153727 + (C59385 + C59386) * C116209) *
                C70498 +
            ((C35640 + C35641) * C153720 + (C39768 + C39769) * C153727 +
             (C59081 + C59082) * C116209) *
                C153684) *
               C153849 -
           (((C152081 * C8429 - C34900 * C8428 - C152081 * C8430 +
              C153472 * C8431 + C152100 * C6191 - C34898 * C6182 -
              C152100 * C6192 + C153829 * C6200) *
                 C116209 +
             (C59082 + C59081) * C153727 + (C39769 + C39768) * C153720) *
                C153684 +
            ((C64224 + C64223) * C116209 + (C59386 + C59385) * C153727 +
             (C40075 + C40074) * C153720) *
                C70498) *
               C153601) *
              C153521 * C650)) /
        (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153720 +
            (C39442 + C39443) * C153727 + C58748 * C116209) *
               C70498 +
           ((C35192 + C35193) * C153720 + C40462 * C153727 + C41246 * C116209) *
               C153684) *
              C153537 * C153521 * C130 -
          ((C58765 * C116209 + C40466 * C153727 + (C35201 + C35200) * C153720) *
               C153684 +
           (C58766 * C116209 + (C39447 + C39446) * C153727 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C153720) *
               C70498) *
              C153537 * C153521 * C131 +
          (((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
             C152081 * C158 - C34900 * C147 - C152081 * C159 + C153472 * C171) *
                C153720 +
            (C40074 + C40075) * C153727 + (C59385 + C59386) * C116209) *
               C70498 +
           ((C35640 + C35641) * C153720 + (C39768 + C39769) * C153727 +
            (C59081 + C59082) * C116209) *
               C153684) *
              C153537 * C153521 * C132 -
          (((C152081 * C1330 - C34900 * C1325 - C152081 * C1331 +
             C153472 * C1340 + C152100 * C1332 - C34898 * C1326 -
             C152100 * C1333 + C153829 * C1341) *
                C116209 +
            (C152081 * C959 - C34900 * C949 - C152081 * C960 + C153472 * C967 +
             C152100 * C957 - C34898 * C948 - C152100 * C958 + C153829 * C966) *
                C153727 +
            (C152081 * C315 - C34900 * C303 - C152081 * C316 + C153472 * C339 +
             C152100 * C317 - C34898 * C304 - C152100 * C318 + C153829 * C340) *
                C153720) *
               C153684 +
           ((C152081 * C506 - C34900 * C485 - C152081 * C507 + C153472 * C521 +
             C152100 * C504 - C34898 * C484 - C152100 * C505 + C153829 * C520) *
                C116209 +
            (C152081 * C488 - C34900 * C476 - C152081 * C489 + C153472 * C512 +
             C152100 * C490 - C34898 * C477 - C152100 * C491 + C153829 * C513) *
                C153727 +
            (C152081 * C160 - C34900 * C148 - C152081 * C161 + C153472 * C172 +
             C152100 * C158 - C34898 * C147 - C152100 * C159 + C153829 * C171) *
                C153720) *
               C70498) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153720 +
             (C39442 + C39443) * C153727 + C58748 * C116209) *
                C70498 +
            ((C35192 + C35193) * C153720 + C40462 * C153727 +
             C41246 * C116209) *
                C153684) *
               C153537 * C298 -
           ((C41244 * C116209 + C37407 * C153727 +
             (C35195 + C35194) * C153720) *
                C153684 +
            (C41245 * C116209 + C40463 * C153727 +
             (C35193 + C35192) * C153720) *
                C70498) *
               C153537 * C299 +
           ((C35208 * C153720 + C39073 * C153727 + C41255 * C116209) * C70498 +
            (C35209 * C153720 + C42244 * C153727 +
             (C36758 + C36759) * C116209) *
                C153684) *
               C153537 * C300) *
              C301 +
          ((((C35200 + C35201) * C153720 + C40464 * C153727 +
             C59773 * C116209) *
                C70498 +
            ((C35202 + C35203) * C153720 + C40465 * C153727 +
             (C39452 + C39453) * C116209) *
                C153684) *
               C153537 * C299 -
           ((C58765 * C116209 + C40466 * C153727 +
             (C35201 + C35200) * C153720) *
                C153684 +
            (C58766 * C116209 + (C39447 + C39446) * C153727 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153720) *
                C70498) *
               C153537 * C298 -
           (((C152081 * C4784 - C34900 * C4781 - C152081 * C4785 +
              C153472 * C4790 + C152100 * C4786 - C34898 * C4782 -
              C152100 * C4787 + C153829 * C4791) *
                 C116209 +
             (C36181 + C36180) * C153727 + C35210 * C153720) *
                C153684 +
            ((C39453 + C39452) * C116209 + C39074 * C153727 +
             C35211 * C153720) *
                C70498) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153720 +
             (C39442 + C39443) * C153727 + C58748 * C116209) *
                C70498 +
            ((C35192 + C35193) * C153720 + C40462 * C153727 +
             C41246 * C116209) *
                C153684) *
               C153537 * C153919 -
           ((C41244 * C116209 + C37407 * C153727 +
             (C35195 + C35194) * C153720) *
                C153684 +
            (C41245 * C116209 + C40463 * C153727 +
             (C35193 + C35192) * C153720) *
                C70498) *
               C153537 * C153920 +
           ((C35208 * C153720 + C39073 * C153727 + C41255 * C116209) * C70498 +
            (C35209 * C153720 + C42244 * C153727 +
             (C36758 + C36759) * C116209) *
                C153684) *
               C153537 * C1469) *
              C153840 +
          ((((C35200 + C35201) * C153720 + C40464 * C153727 +
             C59773 * C116209) *
                C70498 +
            ((C35202 + C35203) * C153720 + C40465 * C153727 +
             (C39452 + C39453) * C116209) *
                C153684) *
               C153537 * C153920 -
           ((C58765 * C116209 + C40466 * C153727 +
             (C35201 + C35200) * C153720) *
                C153684 +
            (C58766 * C116209 + (C39447 + C39446) * C153727 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153720) *
                C70498) *
               C153537 * C153919 -
           (((C152081 * C4784 - C34900 * C4781 - C152081 * C4785 +
              C153472 * C4790 + C152100 * C4786 - C34898 * C4782 -
              C152100 * C4787 + C153829 * C4791) *
                 C116209 +
             (C36181 + C36180) * C153727 + C35210 * C153720) *
                C153684 +
            ((C39453 + C39452) * C116209 + C39074 * C153727 +
             C35211 * C153720) *
                C70498) *
               C153537 * C1469) *
              C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153720 +
             (C39442 + C39443) * C153727 + C58748 * C116209) *
                C70498 +
            ((C35192 + C35193) * C153720 + C40462 * C153727 +
             C41246 * C116209) *
                C153684) *
               C153849 -
           ((C60548 * C116209 + C41245 * C153727 + C40463 * C153720) * C153684 +
            (C62304 * C116209 + (C39444 + C39445) * C153727 +
             (C39443 + C39442) * C153720) *
                C70498) *
               C153601) *
              C153919 +
          (((C40462 * C153720 + C41246 * C153727 + C60549 * C116209) * C70498 +
            (C39073 * C153720 + C41255 * C153727 +
             (C41274 + C41275) * C116209) *
                C153684) *
               C153601 -
           ((C41244 * C116209 + C37407 * C153727 +
             (C35195 + C35194) * C153720) *
                C153684 +
            (C41245 * C116209 + C40463 * C153727 +
             (C35193 + C35192) * C153720) *
                C70498) *
               C153849) *
              C153920 +
          (((C35208 * C153720 + C39073 * C153727 + C41255 * C116209) * C70498 +
            (C35209 * C153720 + C42244 * C153727 +
             (C36758 + C36759) * C116209) *
                C153684) *
               C153849 -
           (((C152081 * C32074 - C34900 * C32073 - C152081 * C32075 +
              C153472 * C32076 + C152100 * C30186 - C34898 * C30183 -
              C152100 * C30187 + C153829 * C30189) *
                 C116209 +
             (C36759 + C36758) * C153727 + C37406 * C153720) *
                C153684 +
            ((C41275 + C41274) * C116209 + C41244 * C153727 +
             C37407 * C153720) *
                C70498) *
               C153601) *
              C1469) *
         C153502) /
        (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153720 +
            (C39442 + C39443) * C153727 + C58748 * C116209) *
               C70498 +
           ((C35192 + C35193) * C153720 + C40462 * C153727 + C41246 * C116209) *
               C153684) *
              C153537 * C1178 -
          ((C41244 * C116209 + C37407 * C153727 + (C35195 + C35194) * C153720) *
               C153684 +
           (C41245 * C116209 + C40463 * C153727 + (C35193 + C35192) * C153720) *
               C70498) *
              C153537 * C1179 +
          ((C35208 * C153720 + C39073 * C153727 + C41255 * C116209) * C70498 +
           (C35209 * C153720 + C42244 * C153727 + (C36758 + C36759) * C116209) *
               C153684) *
              C153537 * C1180 -
          (((C152081 * C28550 - C34900 * C28547 - C152081 * C28551 +
             C153472 * C28553 + C152100 * C28548 - C34898 * C28546 -
             C152100 * C28549 + C153829 * C28552) *
                C116209 +
            (C37423 + C37422) * C153727 + C36506 * C153720) *
               C153684 +
           ((C36759 + C36758) * C116209 + C37406 * C153727 + C36507 * C153720) *
               C70498) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153720 +
             (C39442 + C39443) * C153727 + C58748 * C116209) *
                C70498 +
            ((C35192 + C35193) * C153720 + C40462 * C153727 +
             C41246 * C116209) *
                C153684) *
               C153537 * C1091 -
           ((C41244 * C116209 + C37407 * C153727 +
             (C35195 + C35194) * C153720) *
                C153684 +
            (C41245 * C116209 + C40463 * C153727 +
             (C35193 + C35192) * C153720) *
                C70498) *
               C153537 * C153573) *
              C1093 +
          ((((C35200 + C35201) * C153720 + C40464 * C153727 +
             C59773 * C116209) *
                C70498 +
            ((C35202 + C35203) * C153720 + C40465 * C153727 +
             (C39452 + C39453) * C116209) *
                C153684) *
               C153537 * C153573 -
           ((C58765 * C116209 + C40466 * C153727 +
             (C35201 + C35200) * C153720) *
                C153684 +
            (C58766 * C116209 + (C39447 + C39446) * C153727 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153720) *
                C70498) *
               C153537 * C1091) *
              C1094 +
          ((((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
              C152081 * C158 - C34900 * C147 - C152081 * C159 +
              C153472 * C171) *
                 C153720 +
             (C40074 + C40075) * C153727 + (C59385 + C59386) * C116209) *
                C70498 +
            ((C35640 + C35641) * C153720 + (C39768 + C39769) * C153727 +
             (C59081 + C59082) * C116209) *
                C153684) *
               C153537 * C1091 -
           (((C152081 * C3289 - C34900 * C3282 - C152081 * C3290 +
              C153472 * C3294 + C152100 * C3287 - C34898 * C3281 -
              C152100 * C3288 + C153829 * C3293) *
                 C116209 +
             (C39771 + C39770) * C153727 + (C35643 + C35642) * C153720) *
                C153684 +
            ((C59082 + C59081) * C116209 + (C39769 + C39768) * C153727 +
             (C35641 + C35640) * C153720) *
                C70498) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153720 +
             (C39442 + C39443) * C153727 + C58748 * C116209) *
                C70498 +
            ((C35192 + C35193) * C153720 + C40462 * C153727 +
             C41246 * C116209) *
                C153684) *
               C473 -
           ((C60548 * C116209 + C41245 * C153727 + C40463 * C153720) * C153684 +
            (C62304 * C116209 + (C39444 + C39445) * C153727 +
             (C39443 + C39442) * C153720) *
                C70498) *
               C474 +
           ((C58748 * C153720 + C63807 * C153727 +
             (C62317 + C62318) * C116209) *
                C70498 +
            (C41246 * C153720 + C60549 * C153727 +
             (C60562 + C60563) * C116209) *
                C153684) *
               C475) *
              C1091 +
          (((C40462 * C153720 + C41246 * C153727 + C60549 * C116209) * C70498 +
            (C39073 * C153720 + C41255 * C153727 +
             (C41274 + C41275) * C116209) *
                C153684) *
               C474 -
           ((C41244 * C116209 + C37407 * C153727 +
             (C35195 + C35194) * C153720) *
                C153684 +
            (C41245 * C116209 + C40463 * C153727 +
             (C35193 + C35192) * C153720) *
                C70498) *
               C473 -
           (((C152081 * C31225 - C34900 * C31222 - C152081 * C31226 +
              C153472 * C31228 + C152100 * C31223 - C34898 * C31221 -
              C152100 * C31224 + C153829 * C31227) *
                 C116209 +
             (C41275 + C41274) * C153727 + C41244 * C153720) *
                C153684 +
            ((C60563 + C60562) * C116209 + C60548 * C153727 +
             C41245 * C153720) *
                C70498) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C152100 * C152 - C34898 * C144 - C152100 * C153 +
               C153829 * C168 + C152081 * C154 - C34900 * C145 -
               C152081 * C155 + C153472 * C169) *
                  C153720 +
              (C39442 + C39443) * C153727 + C58748 * C116209) *
                 C70498 +
             ((C35192 + C35193) * C153720 + C40462 * C153727 +
              C41246 * C116209) *
                 C153684) *
                C153849 -
            ((C60548 * C116209 + C41245 * C153727 + C40463 * C153720) *
                 C153684 +
             (C62304 * C116209 + (C39444 + C39445) * C153727 +
              (C39443 + C39442) * C153720) *
                 C70498) *
                C153601) *
               C1091 +
           (((C40462 * C153720 + C41246 * C153727 + C60549 * C116209) * C70498 +
             (C39073 * C153720 + C41255 * C153727 +
              (C41274 + C41275) * C116209) *
                 C153684) *
                C153601 -
            ((C41244 * C116209 + C37407 * C153727 +
              (C35195 + C35194) * C153720) *
                 C153684 +
             (C41245 * C116209 + C40463 * C153727 +
              (C35193 + C35192) * C153720) *
                 C70498) *
                C153849) *
               C153573) *
              C153840 +
          (((((C39446 + C39447) * C153720 + (C39448 + C39449) * C153727 +
              (C58775 + C58776) * C116209) *
                 C70498 +
             (C40464 * C153720 + C59773 * C153727 +
              (C58777 + C58778) * C116209) *
                 C153684) *
                C153601 -
            ((C58765 * C116209 + C40466 * C153727 +
              (C35201 + C35200) * C153720) *
                 C153684 +
             (C58766 * C116209 + (C39447 + C39446) * C153727 +
              (C152081 * C156 - C34900 * C146 - C152081 * C157 +
               C153472 * C170 + C152100 * C154 - C34898 * C145 -
               C152100 * C155 + C153829 * C169) *
                  C153720) *
                 C70498) *
                C153849) *
               C1091 +
           ((((C35200 + C35201) * C153720 + C40464 * C153727 +
              C59773 * C116209) *
                 C70498 +
             ((C35202 + C35203) * C153720 + C40465 * C153727 +
              (C39452 + C39453) * C116209) *
                 C153684) *
                C153849 -
            (((C152081 * C6185 - C34900 * C6179 - C152081 * C6186 +
               C153472 * C6197 + C152100 * C6187 - C34898 * C6180 -
               C152100 * C6188 + C153829 * C6198) *
                  C116209 +
              (C39453 + C39452) * C153727 + C39074 * C153720) *
                 C153684 +
             ((C58778 + C58777) * C116209 + C58765 * C153727 +
              C40466 * C153720) *
                 C70498) *
                C153601) *
               C153573) *
              C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153720 +
             (C39442 + C39443) * C153727 + C58748 * C116209) *
                C70498 +
            ((C35192 + C35193) * C153720 + C40462 * C153727 +
             C41246 * C116209) *
                C153684) *
               C153537 * C1091 -
           ((C41244 * C116209 + C37407 * C153727 +
             (C35195 + C35194) * C153720) *
                C153684 +
            (C41245 * C116209 + C40463 * C153727 +
             (C35193 + C35192) * C153720) *
                C70498) *
               C153537 * C153573) *
              C1093 +
          ((((C35200 + C35201) * C153720 + C40464 * C153727 +
             C59773 * C116209) *
                C70498 +
            ((C35202 + C35203) * C153720 + C40465 * C153727 +
             (C39452 + C39453) * C116209) *
                C153684) *
               C153537 * C153573 -
           ((C58765 * C116209 + C40466 * C153727 +
             (C35201 + C35200) * C153720) *
                C153684 +
            (C58766 * C116209 + (C39447 + C39446) * C153727 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153720) *
                C70498) *
               C153537 * C1091) *
              C1094 +
          ((((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
              C152081 * C158 - C34900 * C147 - C152081 * C159 +
              C153472 * C171) *
                 C153720 +
             (C40074 + C40075) * C153727 + (C59385 + C59386) * C116209) *
                C70498 +
            ((C35640 + C35641) * C153720 + (C39768 + C39769) * C153727 +
             (C59081 + C59082) * C116209) *
                C153684) *
               C153537 * C1091 -
           (((C152081 * C3289 - C34900 * C3282 - C152081 * C3290 +
              C153472 * C3294 + C152100 * C3287 - C34898 * C3281 -
              C152100 * C3288 + C153829 * C3293) *
                 C116209 +
             (C39771 + C39770) * C153727 + (C35643 + C35642) * C153720) *
                C153684 +
            ((C59082 + C59081) * C116209 + (C39769 + C39768) * C153727 +
             (C35641 + C35640) * C153720) *
                C70498) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153720 +
            (C39442 + C39443) * C153727 + C58748 * C116209) *
               C70498 +
           ((C35192 + C35193) * C153720 + C40462 * C153727 + C41246 * C116209) *
               C153684) *
              C153537 * C1178 -
          ((C41244 * C116209 + C37407 * C153727 + (C35195 + C35194) * C153720) *
               C153684 +
           (C41245 * C116209 + C40463 * C153727 + (C35193 + C35192) * C153720) *
               C70498) *
              C153537 * C1179 +
          ((C35208 * C153720 + C39073 * C153727 + C41255 * C116209) * C70498 +
           (C35209 * C153720 + C42244 * C153727 + (C36758 + C36759) * C116209) *
               C153684) *
              C153537 * C1180 -
          (((C152081 * C28550 - C34900 * C28547 - C152081 * C28551 +
             C153472 * C28553 + C152100 * C28548 - C34898 * C28546 -
             C152100 * C28549 + C153829 * C28552) *
                C116209 +
            (C37423 + C37422) * C153727 + C36506 * C153720) *
               C153684 +
           ((C36759 + C36758) * C116209 + C37406 * C153727 + C36507 * C153720) *
               C70498) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C152100 * C152 - C34898 * C144 - C152100 * C153 +
               C153829 * C168 + C152081 * C154 - C34900 * C145 -
               C152081 * C155 + C153472 * C169) *
                  C153720 +
              (C39442 + C39443) * C153727 + C58748 * C116209) *
                 C70498 +
             ((C35192 + C35193) * C153720 + C40462 * C153727 +
              C41246 * C116209) *
                 C153684) *
                C1898 -
            ((C60548 * C116209 + C41245 * C153727 + C40463 * C153720) *
                 C153684 +
             (C62304 * C116209 + (C39444 + C39445) * C153727 +
              (C39443 + C39442) * C153720) *
                 C70498) *
                C153601) *
               C153848 +
           (((C40462 * C153720 + C41246 * C153727 + C60549 * C116209) * C70498 +
             (C39073 * C153720 + C41255 * C153727 +
              (C41274 + C41275) * C116209) *
                 C153684) *
                C153601 -
            ((C41244 * C116209 + C37407 * C153727 +
              (C35195 + C35194) * C153720) *
                 C153684 +
             (C41245 * C116209 + C40463 * C153727 +
              (C35193 + C35192) * C153720) *
                 C70498) *
                C1898) *
               C153573) *
              C153840 +
          (((((C39446 + C39447) * C153720 + (C39448 + C39449) * C153727 +
              (C58775 + C58776) * C116209) *
                 C70498 +
             (C40464 * C153720 + C59773 * C153727 +
              (C58777 + C58778) * C116209) *
                 C153684) *
                C153601 -
            ((C58765 * C116209 + C40466 * C153727 +
              (C35201 + C35200) * C153720) *
                 C153684 +
             (C58766 * C116209 + (C39447 + C39446) * C153727 +
              (C152081 * C156 - C34900 * C146 - C152081 * C157 +
               C153472 * C170 + C152100 * C154 - C34898 * C145 -
               C152100 * C155 + C153829 * C169) *
                  C153720) *
                 C70498) *
                C1898) *
               C153848 +
           ((((C35200 + C35201) * C153720 + C40464 * C153727 +
              C59773 * C116209) *
                 C70498 +
             ((C35202 + C35203) * C153720 + C40465 * C153727 +
              (C39452 + C39453) * C116209) *
                 C153684) *
                C1898 -
            (((C152081 * C6185 - C34900 * C6179 - C152081 * C6186 +
               C153472 * C6197 + C152100 * C6187 - C34898 * C6180 -
               C152100 * C6188 + C153829 * C6198) *
                  C116209 +
              (C39453 + C39452) * C153727 + C39074 * C153720) *
                 C153684 +
             ((C58778 + C58777) * C116209 + C58765 * C153727 +
              C40466 * C153720) *
                 C70498) *
                C153601) *
               C153573) *
              C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153720 +
             (C39442 + C39443) * C153727 + C58748 * C116209) *
                C70498 +
            ((C35192 + C35193) * C153720 + C40462 * C153727 +
             C41246 * C116209) *
                C153684) *
               C153921 -
           ((C60548 * C116209 + C41245 * C153727 + C40463 * C153720) * C153684 +
            (C62304 * C116209 + (C39444 + C39445) * C153727 +
             (C39443 + C39442) * C153720) *
                C70498) *
               C153922 +
           ((C58748 * C153720 + C63807 * C153727 +
             (C62317 + C62318) * C116209) *
                C70498 +
            (C41246 * C153720 + C60549 * C153727 +
             (C60562 + C60563) * C116209) *
                C153684) *
               C2414) *
              C153848 +
          (((C40462 * C153720 + C41246 * C153727 + C60549 * C116209) * C70498 +
            (C39073 * C153720 + C41255 * C153727 +
             (C41274 + C41275) * C116209) *
                C153684) *
               C153922 -
           ((C41244 * C116209 + C37407 * C153727 +
             (C35195 + C35194) * C153720) *
                C153684 +
            (C41245 * C116209 + C40463 * C153727 +
             (C35193 + C35192) * C153720) *
                C70498) *
               C153921 -
           (((C152081 * C31225 - C34900 * C31222 - C152081 * C31226 +
              C153472 * C31228 + C152100 * C31223 - C34898 * C31221 -
              C152100 * C31224 + C153829 * C31227) *
                 C116209 +
             (C41275 + C41274) * C153727 + C41244 * C153720) *
                C153684 +
            ((C60563 + C60562) * C116209 + C60548 * C153727 +
             C41245 * C153720) *
                C70498) *
               C2414) *
              C153573) *
         C153502) /
        (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153720 +
             (C39442 + C39443) * C153727 + C58748 * C116209) *
                C70498 +
            ((C35192 + C35193) * C153720 + C40462 * C153727 +
             C41246 * C116209) *
                C153684) *
               C1898 -
           ((C60548 * C116209 + C41245 * C153727 + C40463 * C153720) * C153684 +
            (C62304 * C116209 + (C39444 + C39445) * C153727 +
             (C39443 + C39442) * C153720) *
                C70498) *
               C153601) *
              C298 +
          (((C40462 * C153720 + C41246 * C153727 + C60549 * C116209) * C70498 +
            (C39073 * C153720 + C41255 * C153727 +
             (C41274 + C41275) * C116209) *
                C153684) *
               C153601 -
           ((C41244 * C116209 + C37407 * C153727 +
             (C35195 + C35194) * C153720) *
                C153684 +
            (C41245 * C116209 + C40463 * C153727 +
             (C35193 + C35192) * C153720) *
                C70498) *
               C1898) *
              C299 +
          (((C35208 * C153720 + C39073 * C153727 + C41255 * C116209) * C70498 +
            (C35209 * C153720 + C42244 * C153727 +
             (C36758 + C36759) * C116209) *
                C153684) *
               C1898 -
           (((C152081 * C32074 - C34900 * C32073 - C152081 * C32075 +
              C153472 * C32076 + C152100 * C30186 - C34898 * C30183 -
              C152100 * C30187 + C153829 * C30189) *
                 C116209 +
             (C36759 + C36758) * C153727 + C37406 * C153720) *
                C153684 +
            ((C41275 + C41274) * C116209 + C41244 * C153727 +
             C37407 * C153720) *
                C70498) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153720 +
             (C39442 + C39443) * C153727 + C58748 * C116209) *
                C70498 +
            ((C35192 + C35193) * C153720 + C40462 * C153727 +
             C41246 * C116209) *
                C153684) *
               C1898 -
           ((C60548 * C116209 + C41245 * C153727 + C40463 * C153720) * C153684 +
            (C62304 * C116209 + (C39444 + C39445) * C153727 +
             (C39443 + C39442) * C153720) *
                C70498) *
               C153601) *
              C153521 * C1093 +
          ((((C39446 + C39447) * C153720 + (C39448 + C39449) * C153727 +
             (C58775 + C58776) * C116209) *
                C70498 +
            (C40464 * C153720 + C59773 * C153727 +
             (C58777 + C58778) * C116209) *
                C153684) *
               C153601 -
           ((C58765 * C116209 + C40466 * C153727 +
             (C35201 + C35200) * C153720) *
                C153684 +
            (C58766 * C116209 + (C39447 + C39446) * C153727 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153720) *
                C70498) *
               C1898) *
              C153521 * C1094 +
          ((((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
              C152081 * C158 - C34900 * C147 - C152081 * C159 +
              C153472 * C171) *
                 C153720 +
             (C40074 + C40075) * C153727 + (C59385 + C59386) * C116209) *
                C70498 +
            ((C35640 + C35641) * C153720 + (C39768 + C39769) * C153727 +
             (C59081 + C59082) * C116209) *
                C153684) *
               C1898 -
           (((C152081 * C8429 - C34900 * C8428 - C152081 * C8430 +
              C153472 * C8431 + C152100 * C6191 - C34898 * C6182 -
              C152100 * C6192 + C153829 * C6200) *
                 C116209 +
             (C59082 + C59081) * C153727 + (C39769 + C39768) * C153720) *
                C153684 +
            ((C64224 + C64223) * C116209 + (C59386 + C59385) * C153727 +
             (C40075 + C40074) * C153720) *
                C70498) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153720 +
            (C39442 + C39443) * C153727 + C58748 * C116209) *
               C70498 +
           ((C35192 + C35193) * C153720 + C40462 * C153727 + C41246 * C116209) *
               C153684) *
              C2104 -
          ((C60548 * C116209 + C41245 * C153727 + C40463 * C153720) * C153684 +
           (C62304 * C116209 + (C39444 + C39445) * C153727 +
            (C39443 + C39442) * C153720) *
               C70498) *
              C2105 +
          ((C58748 * C153720 + C63807 * C153727 + (C62317 + C62318) * C116209) *
               C70498 +
           (C41246 * C153720 + C60549 * C153727 + (C60562 + C60563) * C116209) *
               C153684) *
              C2106 -
          (((C152081 * C56477 - C34900 * C56476 - C152081 * C56478 +
             C153472 * C56479 + C152100 * C34024 - C34898 * C34021 -
             C152100 * C34025 + C153829 * C34027) *
                C116209 +
            (C60563 + C60562) * C153727 + C60548 * C153720) *
               C153684 +
           ((C66179 + C66178) * C116209 + C66165 * C153727 + C62304 * C153720) *
               C70498) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153720 +
             (C39442 + C39443) * C153727 + C58748 * C116209) *
                C70498 +
            ((C35192 + C35193) * C153720 + C40462 * C153727 +
             C41246 * C116209) *
                C153684) *
               C153921 -
           ((C60548 * C116209 + C41245 * C153727 + C40463 * C153720) * C153684 +
            (C62304 * C116209 + (C39444 + C39445) * C153727 +
             (C39443 + C39442) * C153720) *
                C70498) *
               C153922 +
           ((C58748 * C153720 + C63807 * C153727 +
             (C62317 + C62318) * C116209) *
                C70498 +
            (C41246 * C153720 + C60549 * C153727 +
             (C60562 + C60563) * C116209) *
                C153684) *
               C2414) *
              C153521 * C153840 +
          ((((C39446 + C39447) * C153720 + (C39448 + C39449) * C153727 +
             (C58775 + C58776) * C116209) *
                C70498 +
            (C40464 * C153720 + C59773 * C153727 +
             (C58777 + C58778) * C116209) *
                C153684) *
               C153922 -
           ((C58765 * C116209 + C40466 * C153727 +
             (C35201 + C35200) * C153720) *
                C153684 +
            (C58766 * C116209 + (C39447 + C39446) * C153727 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153720) *
                C70498) *
               C153921 -
           (((C152081 * C9038 - C34900 * C9035 - C152081 * C9039 +
              C153472 * C9044 + C152100 * C9040 - C34898 * C9036 -
              C152100 * C9041 + C153829 * C9045) *
                 C116209 +
             (C58778 + C58777) * C153727 + C58765 * C153720) *
                C153684 +
            ((C63822 + C63821) * C116209 + C63816 * C153727 +
             C58766 * C153720) *
                C70498) *
               C2414) *
              C153521 * C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153720 +
             (C39442 + C39443) * C153727 + C58748 * C116209) *
                C70498 +
            ((C35192 + C35193) * C153720 + C40462 * C153727 +
             C41246 * C116209) *
                C153684) *
               C1898 -
           ((C60548 * C116209 + C41245 * C153727 + C40463 * C153720) * C153684 +
            (C62304 * C116209 + (C39444 + C39445) * C153727 +
             (C39443 + C39442) * C153720) *
                C70498) *
               C153601) *
              C153521 * C1093 +
          ((((C39446 + C39447) * C153720 + (C39448 + C39449) * C153727 +
             (C58775 + C58776) * C116209) *
                C70498 +
            (C40464 * C153720 + C59773 * C153727 +
             (C58777 + C58778) * C116209) *
                C153684) *
               C153601 -
           ((C58765 * C116209 + C40466 * C153727 +
             (C35201 + C35200) * C153720) *
                C153684 +
            (C58766 * C116209 + (C39447 + C39446) * C153727 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153720) *
                C70498) *
               C1898) *
              C153521 * C1094 +
          ((((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
              C152081 * C158 - C34900 * C147 - C152081 * C159 +
              C153472 * C171) *
                 C153720 +
             (C40074 + C40075) * C153727 + (C59385 + C59386) * C116209) *
                C70498 +
            ((C35640 + C35641) * C153720 + (C39768 + C39769) * C153727 +
             (C59081 + C59082) * C116209) *
                C153684) *
               C1898 -
           (((C152081 * C8429 - C34900 * C8428 - C152081 * C8430 +
              C153472 * C8431 + C152100 * C6191 - C34898 * C6182 -
              C152100 * C6192 + C153829 * C6200) *
                 C116209 +
             (C59082 + C59081) * C153727 + (C39769 + C39768) * C153720) *
                C153684 +
            ((C64224 + C64223) * C116209 + (C59386 + C59385) * C153727 +
             (C40075 + C40074) * C153720) *
                C70498) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153720 +
             (C39442 + C39443) * C153727 + C58748 * C116209) *
                C70498 +
            ((C35192 + C35193) * C153720 + C40462 * C153727 +
             C41246 * C116209) *
                C153684) *
               C1898 -
           ((C60548 * C116209 + C41245 * C153727 + C40463 * C153720) * C153684 +
            (C62304 * C116209 + (C39444 + C39445) * C153727 +
             (C39443 + C39442) * C153720) *
                C70498) *
               C153601) *
              C298 +
          (((C40462 * C153720 + C41246 * C153727 + C60549 * C116209) * C70498 +
            (C39073 * C153720 + C41255 * C153727 +
             (C41274 + C41275) * C116209) *
                C153684) *
               C153601 -
           ((C41244 * C116209 + C37407 * C153727 +
             (C35195 + C35194) * C153720) *
                C153684 +
            (C41245 * C116209 + C40463 * C153727 +
             (C35193 + C35192) * C153720) *
                C70498) *
               C1898) *
              C299 +
          (((C35208 * C153720 + C39073 * C153727 + C41255 * C116209) * C70498 +
            (C35209 * C153720 + C42244 * C153727 +
             (C36758 + C36759) * C116209) *
                C153684) *
               C1898 -
           (((C152081 * C32074 - C34900 * C32073 - C152081 * C32075 +
              C153472 * C32076 + C152100 * C30186 - C34898 * C30183 -
              C152100 * C30187 + C153829 * C30189) *
                 C116209 +
             (C36759 + C36758) * C153727 + C37406 * C153720) *
                C153684 +
            ((C41275 + C41274) * C116209 + C41244 * C153727 +
             C37407 * C153720) *
                C70498) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C98536 +
             (C48244 + C48245 + C48246) * C153724) *
                C70498 +
            ((C24325 + C24326 + C24327) * C98536 +
             (C25412 + C25411 + C25410) * C153724) *
                C153684) *
               C153537 * C153848 -
           ((C26806 * C153724 + (C24330 + C24329 + C24328) * C98536) * C153684 +
            ((C25410 + C25411 + C25412) * C153724 +
             (C24327 + C24326 + C24325) * C98536) *
                C70498) *
               C153537 * C153573) *
              C153917 +
          ((((C24334 + C24335 + C24336) * C98536 +
             (C25413 + C25414 + C25415) * C153724) *
                C70498 +
            ((C24337 + C24338 + C24339) * C98536 +
             (C25416 + C25417 + C25418) * C153724) *
                C153684) *
               C153537 * C153573 -
           (((C25415 + C25414 + C25413) * C153724 +
             (C24336 + C24335 + C24334) * C98536) *
                C153684 +
            ((C48255 + C48254 + C48253) * C153724 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C98536) *
                C70498) *
               C153537 * C153848) *
              C153918 +
          ((((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
              C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
              C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                 C98536 +
             (C48738 + C48739 + C48740) * C153724) *
                C70498 +
            ((C24821 + C24822 + C24823) * C98536 +
             (C126360 + C126361 + C126362) * C153724) *
                C153684) *
               C153537 * C153848 -
           (((C23996 * C1761 - C23997 * C1756 - C23996 * C1762 +
              C153885 * C1771 + C23994 * C1763 - C23995 * C1757 -
              C23994 * C1764 + C153914 * C1772 + C23992 * C1765 -
              C23993 * C1758 - C23992 * C1766 + C153933 * C1773) *
                 C153724 +
             (C24826 + C24825 + C24824) * C98536) *
                C153684 +
            ((C126362 + C126361 + C126360) * C153724 +
             (C24823 + C24822 + C24821) * C98536) *
                C70498) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C98536 +
             C31290 * C153724) *
                C153943 +
            (C130855 + C130856) * C153939 + C130871 * C153929 +
            C130872 * C153871) *
               C153537 * C153848 -
           ((C130861 + C130862) * C153871 + (C130860 + C130859) * C153929 +
            (C130858 + C130857) * C153939 + (C130856 + C130855) * C153943) *
               C153537 * C153573) *
              C153917 +
          (((C130863 + C130864) * C153943 + (C130865 + C130866) * C153939 +
            (C130867 + C130868) * C153929 + (C130869 + C130870) * C153871) *
               C153537 * C153573 -
           (C130873 * C153871 + C130874 * C153929 +
            (C130864 + C130863) * C153939 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C98536) *
                C153943) *
               C153537 * C153848) *
              C153918 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C98536 +
             C31782 * C153724) *
                C153943 +
            (C131263 + C131264) * C153939 + (C131265 + C131266) * C153929 +
            (C131267 + C131268) * C153871) *
               C153537 * C153848 -
           (((C28212 * C5564 - C28213 * C5561 - C28212 * C5565 +
              C153462 * C5570) *
                 C153724 +
             C28704 * C98536) *
                C153871 +
            (C131268 + C131267) * C153929 + (C131266 + C131265) * C153939 +
            (C131264 + C131263) * C153943) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
               C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
               C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                  C98536 +
              (C48244 + C48245 + C48246) * C153724) *
                 C70498 +
             ((C24325 + C24326 + C24327) * C98536 + C127043 * C153724) *
                 C153684) *
                C153849 -
            ((C49653 * C153724 + C127044 * C98536) * C153684 +
             ((C48249 + C48248 + C48247) * C153724 +
              (C48246 + C48245 + C48244) * C98536) *
                 C70498) *
                C153601) *
               C153848 +
           (((C127043 * C98536 + (C26061 + C26062 + C26063) * C153724) *
                 C70498 +
             ((C25409 + C25408 + C25407) * C98536 +
              (C26064 + C26065 + C26066) * C153724) *
                 C153684) *
                C153601 -
            ((C26806 * C153724 + (C24330 + C24329 + C24328) * C98536) *
                 C153684 +
             (C127044 * C153724 + (C24327 + C24326 + C24325) * C98536) *
                 C70498) *
                C153849) *
               C153573) *
              C301 +
          (((((C48253 + C48254 + C48255) * C98536 +
              (C48256 + C48257 + C48258) * C153724) *
                 C70498 +
             (C127045 * C98536 + (C49052 + C49053 + C49054) * C153724) *
                 C153684) *
                C153601 -
            ((C127046 * C153724 + (C24336 + C24335 + C24334) * C98536) *
                 C153684 +
             ((C48255 + C48254 + C48253) * C153724 +
              (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
               C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
               C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                  C98536) *
                 C70498) *
                C153849) *
               C153848 +
           ((((C24334 + C24335 + C24336) * C98536 + C127045 * C153724) *
                 C70498 +
             ((C24337 + C24338 + C24339) * C98536 +
              (C25416 + C25417 + C25418) * C153724) *
                 C153684) *
                C153849 -
            (((C23996 * C3289 - C23997 * C3282 - C23996 * C3290 +
               C153885 * C3294 + C23994 * C3287 - C23995 * C3281 -
               C23994 * C3288 + C153914 * C3293 + C23992 * C3285 -
               C23993 * C3280 - C23992 * C3286 + C153933 * C3292) *
                  C153724 +
              (C25418 + C25417 + C25416) * C98536) *
                 C153684 +
             ((C49054 + C49053 + C49052) * C153724 + C127046 * C98536) *
                 C70498) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                  C98536 +
              C31290 * C153724) *
                 C153943 +
             (C130855 + C130856) * C153939 + C130871 * C153929 +
             C130872 * C153871) *
                C153849 -
            ((C131721 + C131722) * C153871 + (C131723 + C131724) * C153929 +
             (C131725 + C131726) * C153939 +
             (C31291 * C153724 + C31290 * C98536) * C153943) *
                C153601) *
               C153848 +
           (((C131726 + C131725) * C153943 + (C131724 + C131723) * C153939 +
             (C131722 + C131721) * C153929 +
             (C29049 * C98536 + C29434 * C153724) * C153871) *
                C153601 -
            ((C130861 + C130862) * C153871 + (C130860 + C130859) * C153929 +
             (C130858 + C130857) * C153939 + (C130856 + C130855) * C153943) *
                C153849) *
               C153573) *
              C301 +
          ((((C31295 * C98536 + C31296 * C153724) * C153943 +
             (C131727 + C131728) * C153939 + (C131729 + C131730) * C153929 +
             (C131731 + C131732) * C153871) *
                C153601 -
            (C130873 * C153871 + C130874 * C153929 +
             (C130864 + C130863) * C153939 +
             (C31295 * C153724 +
              (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                  C98536) *
                 C153943) *
                C153849) *
               C153848 +
           (((C130863 + C130864) * C153943 + (C130865 + C130866) * C153939 +
             (C130867 + C130868) * C153929 + (C130869 + C130870) * C153871) *
                C153849 -
            (((C28212 * C28550 - C28213 * C28547 - C28212 * C28551 +
               C153462 * C28553) *
                  C153724 +
              C29056 * C98536) *
                 C153871 +
             (C131732 + C131731) * C153929 + (C131730 + C131729) * C153939 +
             (C131728 + C131727) * C153943) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C98536 +
             (C48244 + C48245 + C48246) * C153724) *
                C70498 +
            ((C24325 + C24326 + C24327) * C98536 +
             (C25412 + C25411 + C25410) * C153724) *
                C153684) *
               C153537 * C298 -
           ((C26806 * C153724 + (C24330 + C24329 + C24328) * C98536) * C153684 +
            ((C25410 + C25411 + C25412) * C153724 +
             (C24327 + C24326 + C24325) * C98536) *
                C70498) *
               C153537 * C299 +
           ((C24345 * C98536 + (C25409 + C25408 + C25407) * C153724) * C70498 +
            ((C24333 + C24332 + C24331) * C98536 +
             (C26814 + C26815 + C26816) * C153724) *
                C153684) *
               C153537 * C300) *
              C301 +
          ((((C24334 + C24335 + C24336) * C98536 +
             (C25413 + C25414 + C25415) * C153724) *
                C70498 +
            ((C24337 + C24338 + C24339) * C98536 +
             (C25416 + C25417 + C25418) * C153724) *
                C153684) *
               C153537 * C299 -
           (((C25415 + C25414 + C25413) * C153724 +
             (C24336 + C24335 + C24334) * C98536) *
                C153684 +
            ((C48255 + C48254 + C48253) * C153724 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C98536) *
                C70498) *
               C153537 * C298 -
           (((C23996 * C4073 - C23997 * C4066 - C23996 * C4074 +
              C153885 * C4078 + C23994 * C4071 - C23995 * C4065 -
              C23994 * C4072 + C153914 * C4077 + C23992 * C4069 -
              C23993 * C4064 - C23992 * C4070 + C153933 * C4076) *
                 C153724 +
             (C24342 + C24341 + C24340) * C98536) *
                C153684 +
            ((C25418 + C25417 + C25416) * C153724 + C24346 * C98536) * C70498) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C98536 +
            (C48244 + C48245 + C48246) * C153724) *
               C70498 +
           ((C24325 + C24326 + C24327) * C98536 +
            (C25412 + C25411 + C25410) * C153724) *
               C153684) *
              C153537 * C153521 * C130 -
          (((C25415 + C25414 + C25413) * C153724 +
            (C24336 + C24335 + C24334) * C98536) *
               C153684 +
           ((C48255 + C48254 + C48253) * C153724 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C98536) *
               C70498) *
              C153537 * C153521 * C131 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C98536 +
            (C48738 + C48739 + C48740) * C153724) *
               C70498 +
           ((C24821 + C24822 + C24823) * C98536 +
            (C23992 * C955 - C23993 * C947 - C23992 * C956 + C153933 * C965 +
             C23994 * C957 - C23995 * C948 - C23994 * C958 + C153914 * C966 +
             C23996 * C959 - C23997 * C949 - C23996 * C960 + C153885 * C967) *
                C153724) *
               C153684) *
              C153537 * C153521 * C132 -
          (((C23996 * C961 - C23997 * C950 - C23996 * C962 + C153885 * C968 +
             C23994 * C959 - C23995 * C949 - C23994 * C960 + C153914 * C967 +
             C23992 * C957 - C23993 * C948 - C23992 * C958 + C153933 * C966) *
                C153724 +
            (C23996 * C335 - C23997 * C313 - C23996 * C336 + C153885 * C349 +
             C23994 * C315 - C23995 * C303 - C23994 * C316 + C153914 * C339 +
             C23992 * C317 - C23993 * C304 - C23992 * C318 + C153933 * C340) *
                C98536) *
               C153684 +
           ((C23996 * C508 - C23997 * C486 - C23996 * C509 + C153885 * C522 +
             C23994 * C488 - C23995 * C476 - C23994 * C489 + C153914 * C512 +
             C23992 * C490 - C23993 * C477 - C23992 * C491 + C153933 * C513) *
                C153724 +
            (C23996 * C162 - C23997 * C149 - C23996 * C163 + C153885 * C173 +
             C23994 * C160 - C23995 * C148 - C23994 * C161 + C153914 * C172 +
             C23992 * C158 - C23993 * C147 - C23992 * C159 + C153933 * C171) *
                C98536) *
               C70498) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C98536 +
             (C48244 + C48245 + C48246) * C153724) *
                C70498 +
            ((C24325 + C24326 + C24327) * C98536 +
             (C25412 + C25411 + C25410) * C153724) *
                C153684) *
               C473 -
           ((C49653 * C153724 + (C25410 + C25411 + C25412) * C98536) * C153684 +
            ((C48249 + C48248 + C48247) * C153724 +
             (C48246 + C48245 + C48244) * C98536) *
                C70498) *
               C474 +
           ((C48264 * C98536 + (C48252 + C48251 + C48250) * C153724) * C70498 +
            ((C26061 + C26062 + C26063) * C98536 +
             (C49657 + C49658 + C49659) * C153724) *
                C153684) *
               C475) *
              C153521 * C301 +
          ((((C48253 + C48254 + C48255) * C98536 +
             (C48256 + C48257 + C48258) * C153724) *
                C70498 +
            ((C25413 + C25414 + C25415) * C98536 +
             (C49052 + C49053 + C49054) * C153724) *
                C153684) *
               C474 -
           (((C25415 + C25414 + C25413) * C153724 +
             (C24336 + C24335 + C24334) * C98536) *
                C153684 +
            ((C48255 + C48254 + C48253) * C153724 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C98536) *
                C70498) *
               C473 -
           (((C23996 * C8429 - C23997 * C8428 - C23996 * C8430 +
              C153885 * C8431 + C23994 * C6191 - C23995 * C6182 -
              C23994 * C6192 + C153914 * C6200 + C23992 * C6193 -
              C23993 * C6183 - C23992 * C6194 + C153933 * C6201) *
                 C153724 +
             (C49054 + C49053 + C49052) * C98536) *
                C153684 +
            ((C48261 + C48260 + C48259) * C153724 + C48265 * C98536) * C70498) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C98536 +
            C31290 * C153724) *
               C153943 +
           (C28405 * C98536 + C29052 * C153724) * C153939 +
           (C28406 * C98536 + C29051 * C153724) * C153929 +
           (C28407 * C98536 + C29050 * C153724) * C153871) *
              C153537 * C153521 * C130 -
          ((C29055 * C153724 + C28412 * C98536) * C153871 +
           (C29054 * C153724 + C28411 * C98536) * C153929 +
           (C29053 * C153724 + C28410 * C98536) * C153939 +
           (C31295 * C153724 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C98536) *
               C153943) *
              C153537 * C153521 * C131 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C98536 +
            C31782 * C153724) *
               C153943 +
           (C28701 * C98536 + C31544 * C153724) * C153939 +
           (C28702 * C98536 + C31546 * C153724) * C153929 +
           (C28703 * C98536 + C44743 * C153724) * C153871) *
              C153537 * C153521 * C132 -
          (((C28212 * C4073 - C28213 * C4066 - C28212 * C4074 +
             C153462 * C4078) *
                C153724 +
            (C28212 * C1190 - C28213 * C1184 - C28212 * C1191 +
             C153462 * C1199) *
                C98536) *
               C153871 +
           ((C28212 * C1763 - C28213 * C1757 - C28212 * C1764 +
             C153462 * C1772) *
                C153724 +
            (C28212 * C331 - C28213 * C311 - C28212 * C332 + C153462 * C347) *
                C98536) *
               C153929 +
           ((C28212 * C957 - C28213 * C948 - C28212 * C958 + C153462 * C966) *
                C153724 +
            (C28212 * C317 - C28213 * C304 - C28212 * C318 + C153462 * C340) *
                C98536) *
               C153939 +
           ((C28212 * C490 - C28213 * C477 - C28212 * C491 + C153462 * C513) *
                C153724 +
            (C28212 * C158 - C28213 * C147 - C28212 * C159 + C153462 * C171) *
                C98536) *
               C153943) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C98536 +
             C31290 * C153724) *
                C153943 +
            (C130855 + C130856) * C153939 + C130871 * C153929 +
            C130872 * C153871) *
               C153537 * C298 -
           ((C130861 + C130862) * C153871 + (C130860 + C130859) * C153929 +
            (C130858 + C130857) * C153939 + (C130856 + C130855) * C153943) *
               C153537 * C299 +
           (C130871 * C153943 + C130872 * C153939 +
            (C130862 + C130861) * C153929 +
            (C28409 * C98536 + C29855 * C153724) * C153871) *
               C153537 * C300) *
              C301 +
          (((C130863 + C130864) * C153943 + (C130865 + C130866) * C153939 +
            (C130867 + C130868) * C153929 + (C130869 + C130870) * C153871) *
               C153537 * C299 -
           (C130873 * C153871 + C130874 * C153929 +
            (C130864 + C130863) * C153939 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C98536) *
                C153943) *
               C153537 * C298 -
           (((C28212 * C28996 - C28213 * C28993 - C28212 * C28997 +
              C153462 * C28999) *
                 C153724 +
             C28414 * C98536) *
                C153871 +
            (C130870 + C130869) * C153929 + C130873 * C153939 +
            C130874 * C153943) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C98536 +
             C31290 * C153724) *
                C153943 +
            (C130855 + C130856) * C153939 + C130871 * C153929 +
            C130872 * C153871) *
               C473 -
           ((C29433 * C153724 + C29050 * C98536) * C153871 +
            (C29432 * C153724 + C29051 * C98536) * C153929 +
            (C29431 * C153724 + C29052 * C98536) * C153939 +
            (C31291 * C153724 + C31290 * C98536) * C153943) *
               C474 +
           ((C31291 * C98536 + C31294 * C153724) * C153943 +
            (C29431 * C98536 + C31293 * C153724) * C153939 +
            (C29432 * C98536 + C31292 * C153724) * C153929 +
            (C29433 * C98536 + C32705 * C153724) * C153871) *
               C475) *
              C153521 * C301 +
          (((C31295 * C98536 + C31296 * C153724) * C153943 +
            (C29053 * C98536 + C30997 * C153724) * C153939 +
            (C29054 * C98536 + C30998 * C153724) * C153929 +
            (C29055 * C98536 + C30999 * C153724) * C153871) *
               C474 -
           (C130873 * C153871 + C130874 * C153929 +
            (C130864 + C130863) * C153939 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C98536) *
                C153943) *
               C473 -
           (((C28212 * C32074 - C28213 * C32073 - C28212 * C32075 +
              C153462 * C32076) *
                 C153724 +
             C30999 * C98536) *
                C153871 +
            (C31299 * C153724 + C30998 * C98536) * C153929 +
            (C31298 * C153724 + C30997 * C98536) * C153939 +
            (C31297 * C153724 + C31296 * C98536) * C153943) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C98536 +
             (C48244 + C48245 + C48246) * C153724) *
                C70498 +
            ((C24325 + C24326 + C24327) * C98536 +
             (C25412 + C25411 + C25410) * C153724) *
                C153684) *
               C153849 -
           ((C49653 * C153724 + (C25410 + C25411 + C25412) * C98536) * C153684 +
            ((C48249 + C48248 + C48247) * C153724 +
             (C48246 + C48245 + C48244) * C98536) *
                C70498) *
               C153601) *
              C153521 * C153917 +
          ((((C48253 + C48254 + C48255) * C98536 +
             (C48256 + C48257 + C48258) * C153724) *
                C70498 +
            ((C25413 + C25414 + C25415) * C98536 +
             (C49052 + C49053 + C49054) * C153724) *
                C153684) *
               C153601 -
           (((C25415 + C25414 + C25413) * C153724 +
             (C24336 + C24335 + C24334) * C98536) *
                C153684 +
            ((C48255 + C48254 + C48253) * C153724 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C98536) *
                C70498) *
               C153849) *
              C153521 * C153918 +
          ((((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
              C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
              C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                 C98536 +
             (C48738 + C48739 + C48740) * C153724) *
                C70498 +
            ((C24821 + C24822 + C24823) * C98536 +
             (C126360 + C126361 + C126362) * C153724) *
                C153684) *
               C153849 -
           (((C23996 * C1330 - C23997 * C1325 - C23996 * C1331 +
              C153885 * C1340 + C23994 * C1332 - C23995 * C1326 -
              C23994 * C1333 + C153914 * C1341 + C23992 * C1334 -
              C23993 * C1327 - C23992 * C1335 + C153933 * C1342) *
                 C153724 +
             (C126362 + C126361 + C126360) * C98536) *
                C153684 +
            ((C48743 + C48742 + C48741) * C153724 +
             (C48740 + C48739 + C48738) * C98536) *
                C70498) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C98536 +
             C31290 * C153724) *
                C153943 +
            (C130855 + C130856) * C153939 + C130871 * C153929 +
            C130872 * C153871) *
               C153849 -
           ((C29433 * C153724 + C29050 * C98536) * C153871 +
            (C29432 * C153724 + C29051 * C98536) * C153929 +
            (C29431 * C153724 + C29052 * C98536) * C153939 +
            (C31291 * C153724 + C31290 * C98536) * C153943) *
               C153601) *
              C153521 * C153917 +
          (((C31295 * C98536 + C31296 * C153724) * C153943 +
            (C29053 * C98536 + C30997 * C153724) * C153939 +
            (C29054 * C98536 + C30998 * C153724) * C153929 +
            (C29055 * C98536 + C30999 * C153724) * C153871) *
               C153601 -
           (C130873 * C153871 + C130874 * C153929 +
            (C130864 + C130863) * C153939 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C98536) *
                C153943) *
               C153849) *
              C153521 * C153918 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C98536 +
             C31782 * C153724) *
                C153943 +
            (C131263 + C131264) * C153939 + (C131265 + C131266) * C153929 +
            (C131267 + C131268) * C153871) *
               C153849 -
           (((C28212 * C4784 - C28213 * C4781 - C28212 * C4785 +
              C153462 * C4790) *
                 C153724 +
             C44743 * C98536) *
                C153871 +
            (C31547 * C153724 + C31546 * C98536) * C153929 +
            (C31545 * C153724 + C31544 * C98536) * C153939 +
            (C31783 * C153724 + C31782 * C98536) * C153943) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C98536 +
            (C48244 + C48245 + C48246) * C153724) *
               C70498 +
           ((C24325 + C24326 + C24327) * C98536 +
            (C25412 + C25411 + C25410) * C153724) *
               C153684) *
              C153537 * C153521 * C130 -
          (((C25415 + C25414 + C25413) * C153724 +
            (C24336 + C24335 + C24334) * C98536) *
               C153684 +
           ((C48255 + C48254 + C48253) * C153724 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C98536) *
               C70498) *
              C153537 * C153521 * C131 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C98536 +
            (C48738 + C48739 + C48740) * C153724) *
               C70498 +
           ((C24821 + C24822 + C24823) * C98536 +
            (C23992 * C955 - C23993 * C947 - C23992 * C956 + C153933 * C965 +
             C23994 * C957 - C23995 * C948 - C23994 * C958 + C153914 * C966 +
             C23996 * C959 - C23997 * C949 - C23996 * C960 + C153885 * C967) *
                C153724) *
               C153684) *
              C153537 * C153521 * C132 -
          (((C23996 * C961 - C23997 * C950 - C23996 * C962 + C153885 * C968 +
             C23994 * C959 - C23995 * C949 - C23994 * C960 + C153914 * C967 +
             C23992 * C957 - C23993 * C948 - C23992 * C958 + C153933 * C966) *
                C153724 +
            (C23996 * C335 - C23997 * C313 - C23996 * C336 + C153885 * C349 +
             C23994 * C315 - C23995 * C303 - C23994 * C316 + C153914 * C339 +
             C23992 * C317 - C23993 * C304 - C23992 * C318 + C153933 * C340) *
                C98536) *
               C153684 +
           ((C23996 * C508 - C23997 * C486 - C23996 * C509 + C153885 * C522 +
             C23994 * C488 - C23995 * C476 - C23994 * C489 + C153914 * C512 +
             C23992 * C490 - C23993 * C477 - C23992 * C491 + C153933 * C513) *
                C153724 +
            (C23996 * C162 - C23997 * C149 - C23996 * C163 + C153885 * C173 +
             C23994 * C160 - C23995 * C148 - C23994 * C161 + C153914 * C172 +
             C23992 * C158 - C23993 * C147 - C23992 * C159 + C153933 * C171) *
                C98536) *
               C70498) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C98536 +
             (C48244 + C48245 + C48246) * C153724) *
                C70498 +
            ((C24325 + C24326 + C24327) * C98536 +
             (C25412 + C25411 + C25410) * C153724) *
                C153684) *
               C153537 * C298 -
           ((C26806 * C153724 + (C24330 + C24329 + C24328) * C98536) * C153684 +
            ((C25410 + C25411 + C25412) * C153724 +
             (C24327 + C24326 + C24325) * C98536) *
                C70498) *
               C153537 * C299 +
           ((C24345 * C98536 + (C25409 + C25408 + C25407) * C153724) * C70498 +
            ((C24333 + C24332 + C24331) * C98536 +
             (C26814 + C26815 + C26816) * C153724) *
                C153684) *
               C153537 * C300) *
              C301 +
          ((((C24334 + C24335 + C24336) * C98536 +
             (C25413 + C25414 + C25415) * C153724) *
                C70498 +
            ((C24337 + C24338 + C24339) * C98536 +
             (C25416 + C25417 + C25418) * C153724) *
                C153684) *
               C153537 * C299 -
           (((C25415 + C25414 + C25413) * C153724 +
             (C24336 + C24335 + C24334) * C98536) *
                C153684 +
            ((C48255 + C48254 + C48253) * C153724 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C98536) *
                C70498) *
               C153537 * C298 -
           (((C23996 * C4073 - C23997 * C4066 - C23996 * C4074 +
              C153885 * C4078 + C23994 * C4071 - C23995 * C4065 -
              C23994 * C4072 + C153914 * C4077 + C23992 * C4069 -
              C23993 * C4064 - C23992 * C4070 + C153933 * C4076) *
                 C153724 +
             (C24342 + C24341 + C24340) * C98536) *
                C153684 +
            ((C25418 + C25417 + C25416) * C153724 + C24346 * C98536) * C70498) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C98536 +
            C31290 * C153724) *
               C153943 +
           (C28405 * C98536 + C29052 * C153724) * C153939 +
           (C28406 * C98536 + C29051 * C153724) * C153929 +
           (C28407 * C98536 + C29050 * C153724) * C153871) *
              C153537 * C153521 * C130 -
          ((C29055 * C153724 + C28412 * C98536) * C153871 +
           (C29054 * C153724 + C28411 * C98536) * C153929 +
           (C29053 * C153724 + C28410 * C98536) * C153939 +
           (C31295 * C153724 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C98536) *
               C153943) *
              C153537 * C153521 * C131 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C98536 +
            C31782 * C153724) *
               C153943 +
           (C28701 * C98536 + C31544 * C153724) * C153939 +
           (C28702 * C98536 + C31546 * C153724) * C153929 +
           (C28703 * C98536 + C44743 * C153724) * C153871) *
              C153537 * C153521 * C132 -
          (((C28212 * C4073 - C28213 * C4066 - C28212 * C4074 +
             C153462 * C4078) *
                C153724 +
            (C28212 * C1190 - C28213 * C1184 - C28212 * C1191 +
             C153462 * C1199) *
                C98536) *
               C153871 +
           ((C28212 * C1763 - C28213 * C1757 - C28212 * C1764 +
             C153462 * C1772) *
                C153724 +
            (C28212 * C331 - C28213 * C311 - C28212 * C332 + C153462 * C347) *
                C98536) *
               C153929 +
           ((C28212 * C957 - C28213 * C948 - C28212 * C958 + C153462 * C966) *
                C153724 +
            (C28212 * C317 - C28213 * C304 - C28212 * C318 + C153462 * C340) *
                C98536) *
               C153939 +
           ((C28212 * C490 - C28213 * C477 - C28212 * C491 + C153462 * C513) *
                C153724 +
            (C28212 * C158 - C28213 * C147 - C28212 * C159 + C153462 * C171) *
                C98536) *
               C153943) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C98536 +
             C31290 * C153724) *
                C153943 +
            (C130855 + C130856) * C153939 + C130871 * C153929 +
            C130872 * C153871) *
               C153537 * C298 -
           ((C130861 + C130862) * C153871 + (C130860 + C130859) * C153929 +
            (C130858 + C130857) * C153939 + (C130856 + C130855) * C153943) *
               C153537 * C299 +
           (C130871 * C153943 + C130872 * C153939 +
            (C130862 + C130861) * C153929 +
            (C28409 * C98536 + C29855 * C153724) * C153871) *
               C153537 * C300) *
              C301 +
          (((C130863 + C130864) * C153943 + (C130865 + C130866) * C153939 +
            (C130867 + C130868) * C153929 + (C130869 + C130870) * C153871) *
               C153537 * C299 -
           (C130873 * C153871 + C130874 * C153929 +
            (C130864 + C130863) * C153939 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C98536) *
                C153943) *
               C153537 * C298 -
           (((C28212 * C28996 - C28213 * C28993 - C28212 * C28997 +
              C153462 * C28999) *
                 C153724 +
             C28414 * C98536) *
                C153871 +
            (C130870 + C130869) * C153929 + C130873 * C153939 +
            C130874 * C153943) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C98536 +
             (C48244 + C48245 + C48246) * C153724) *
                C70498 +
            ((C24325 + C24326 + C24327) * C98536 + C127043 * C153724) *
                C153684) *
               C153537 * C153919 -
           ((C26806 * C153724 + (C24330 + C24329 + C24328) * C98536) * C153684 +
            (C127044 * C153724 + (C24327 + C24326 + C24325) * C98536) *
                C70498) *
               C153537 * C153920 +
           ((C24345 * C98536 + (C25409 + C25408 + C25407) * C153724) * C70498 +
            ((C24333 + C24332 + C24331) * C98536 +
             (C26814 + C26815 + C26816) * C153724) *
                C153684) *
               C153537 * C1469) *
              C153840 +
          ((((C24334 + C24335 + C24336) * C98536 + C127045 * C153724) * C70498 +
            ((C24337 + C24338 + C24339) * C98536 +
             (C25416 + C25417 + C25418) * C153724) *
                C153684) *
               C153537 * C153920 -
           ((C127046 * C153724 + (C24336 + C24335 + C24334) * C98536) *
                C153684 +
            ((C48255 + C48254 + C48253) * C153724 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C98536) *
                C70498) *
               C153537 * C153919 -
           (((C23996 * C4073 - C23997 * C4066 - C23996 * C4074 +
              C153885 * C4078 + C23994 * C4071 - C23995 * C4065 -
              C23994 * C4072 + C153914 * C4077 + C23992 * C4069 -
              C23993 * C4064 - C23992 * C4070 + C153933 * C4076) *
                 C153724 +
             (C24342 + C24341 + C24340) * C98536) *
                C153684 +
            ((C25418 + C25417 + C25416) * C153724 + C24346 * C98536) * C70498) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C98536 +
             C31290 * C153724) *
                C153943 +
            (C130855 + C130856) * C153939 + C130871 * C153929 +
            C130872 * C153871) *
               C153537 * C153919 -
           (C132057 * C153871 + C132058 * C153929 +
            (C130858 + C130857) * C153939 + (C130856 + C130855) * C153943) *
               C153537 * C153920 +
           (C130871 * C153943 + C130872 * C153939 +
            (C130862 + C130861) * C153929 + (C132059 + C132060) * C153871) *
               C153537 * C1469) *
              C153840 +
          (((C130863 + C130864) * C153943 + (C130865 + C130866) * C153939 +
            (C130867 + C130868) * C153929 + (C130869 + C130870) * C153871) *
               C153537 * C153920 -
           (C130873 * C153871 + C130874 * C153929 +
            (C130864 + C130863) * C153939 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C98536) *
                C153943) *
               C153537 * C153919 -
           (((C28212 * C28996 - C28213 * C28993 - C28212 * C28997 +
              C153462 * C28999) *
                 C153724 +
             C28414 * C98536) *
                C153871 +
            (C130870 + C130869) * C153929 + C130873 * C153939 +
            C130874 * C153943) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C98536 +
             (C48244 + C48245 + C48246) * C153724) *
                C70498 +
            ((C24325 + C24326 + C24327) * C98536 + C127043 * C153724) *
                C153684) *
               C153849 -
           ((C49653 * C153724 + C127044 * C98536) * C153684 +
            ((C48249 + C48248 + C48247) * C153724 +
             (C48246 + C48245 + C48244) * C98536) *
                C70498) *
               C153601) *
              C153919 +
          (((C127043 * C98536 + C127822 * C153724) * C70498 +
            (C128790 * C98536 + (C26064 + C26065 + C26066) * C153724) *
                C153684) *
               C153601 -
           ((C26806 * C153724 + (C24330 + C24329 + C24328) * C98536) * C153684 +
            (C127044 * C153724 + (C24327 + C24326 + C24325) * C98536) *
                C70498) *
               C153849) *
              C153920 +
          (((C24345 * C98536 + C128790 * C153724) * C70498 +
            ((C24333 + C24332 + C24331) * C98536 +
             (C26814 + C26815 + C26816) * C153724) *
                C153684) *
               C153849 -
           (((C23996 * C4784 - C23997 * C4781 - C23996 * C4785 +
              C153885 * C4790 + C23994 * C4786 - C23995 * C4782 -
              C23994 * C4787 + C153914 * C4791 + C23992 * C4788 -
              C23993 * C4783 - C23992 * C4789 + C153933 * C4792) *
                 C153724 +
             (C26816 + C26815 + C26814) * C98536) *
                C153684 +
            ((C26066 + C26065 + C26064) * C153724 + C26806 * C98536) * C70498) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C98536 +
             C31290 * C153724) *
                C153943 +
            (C130855 + C130856) * C153939 + C130871 * C153929 +
            C130872 * C153871) *
               C153849 -
           (C132907 * C153871 + C132908 * C153929 +
            (C131725 + C131726) * C153939 +
            (C31291 * C153724 + C31290 * C98536) * C153943) *
               C153601) *
              C153919 +
          (((C131726 + C131725) * C153943 + (C131724 + C131723) * C153939 +
            (C131722 + C131721) * C153929 + (C132909 + C132910) * C153871) *
               C153601 -
           (C132057 * C153871 + C132058 * C153929 +
            (C130858 + C130857) * C153939 + (C130856 + C130855) * C153943) *
               C153849) *
              C153920 +
          ((C130871 * C153943 + C130872 * C153939 +
            (C130862 + C130861) * C153929 + (C132059 + C132060) * C153871) *
               C153849 -
           (((C28212 * C29403 - C28213 * C29402 - C28212 * C29404 +
              C153462 * C29405) *
                 C153724 +
             C29855 * C98536) *
                C153871 +
            (C132910 + C132909) * C153929 + C132907 * C153939 +
            C132908 * C153943) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C98536 +
            (C48244 + C48245 + C48246) * C153724) *
               C70498 +
           ((C24325 + C24326 + C24327) * C98536 + C127043 * C153724) *
               C153684) *
              C153537 * C1178 -
          ((C26806 * C153724 + (C24330 + C24329 + C24328) * C98536) * C153684 +
           (C127044 * C153724 + (C24327 + C24326 + C24325) * C98536) * C70498) *
              C153537 * C1179 +
          ((C24345 * C98536 + (C25409 + C25408 + C25407) * C153724) * C70498 +
           ((C24333 + C24332 + C24331) * C98536 +
            (C26814 + C26815 + C26816) * C153724) *
               C153684) *
              C153537 * C1180 -
          (((C23996 * C5564 - C23997 * C5561 - C23996 * C5565 +
             C153885 * C5570 + C23994 * C5566 - C23995 * C5562 -
             C23994 * C5567 + C153914 * C5571 + C23992 * C5568 -
             C23993 * C5563 - C23992 * C5569 + C153933 * C5572) *
                C153724 +
            (C25806 + C25805 + C25804) * C98536) *
               C153684 +
           ((C26816 + C26815 + C26814) * C153724 + C25796 * C98536) * C70498) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C98536 +
             (C48244 + C48245 + C48246) * C153724) *
                C70498 +
            ((C24325 + C24326 + C24327) * C98536 + C127043 * C153724) *
                C153684) *
               C153537 * C1091 -
           ((C26806 * C153724 + (C24330 + C24329 + C24328) * C98536) * C153684 +
            (C127044 * C153724 + (C24327 + C24326 + C24325) * C98536) *
                C70498) *
               C153537 * C153573) *
              C1093 +
          ((((C24334 + C24335 + C24336) * C98536 + C127045 * C153724) * C70498 +
            ((C24337 + C24338 + C24339) * C98536 +
             (C25416 + C25417 + C25418) * C153724) *
                C153684) *
               C153537 * C153573 -
           ((C127046 * C153724 + (C24336 + C24335 + C24334) * C98536) *
                C153684 +
            ((C48255 + C48254 + C48253) * C153724 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C98536) *
                C70498) *
               C153537 * C1091) *
              C1094 +
          ((((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
              C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
              C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                 C98536 +
             (C48738 + C48739 + C48740) * C153724) *
                C70498 +
            ((C24821 + C24822 + C24823) * C98536 +
             (C126360 + C126361 + C126362) * C153724) *
                C153684) *
               C153537 * C1091 -
           (((C23996 * C1761 - C23997 * C1756 - C23996 * C1762 +
              C153885 * C1771 + C23994 * C1763 - C23995 * C1757 -
              C23994 * C1764 + C153914 * C1772 + C23992 * C1765 -
              C23993 * C1758 - C23992 * C1766 + C153933 * C1773) *
                 C153724 +
             (C24826 + C24825 + C24824) * C98536) *
                C153684 +
            ((C126362 + C126361 + C126360) * C153724 +
             (C24823 + C24822 + C24821) * C98536) *
                C70498) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C98536 +
             (C48244 + C48245 + C48246) * C153724) *
                C70498 +
            ((C24325 + C24326 + C24327) * C98536 + C127043 * C153724) *
                C153684) *
               C473 -
           ((C49653 * C153724 + C127044 * C98536) * C153684 +
            ((C48249 + C48248 + C48247) * C153724 +
             (C48246 + C48245 + C48244) * C98536) *
                C70498) *
               C474 +
           ((C48264 * C98536 + (C48252 + C48251 + C48250) * C153724) * C70498 +
            (C127822 * C98536 + (C49657 + C49658 + C49659) * C153724) *
                C153684) *
               C475) *
              C1091 +
          (((C127043 * C98536 + C127822 * C153724) * C70498 +
            ((C25409 + C25408 + C25407) * C98536 +
             (C26064 + C26065 + C26066) * C153724) *
                C153684) *
               C474 -
           ((C26806 * C153724 + (C24330 + C24329 + C24328) * C98536) * C153684 +
            (C127044 * C153724 + (C24327 + C24326 + C24325) * C98536) *
                C70498) *
               C473 -
           (((C23996 * C6185 - C23997 * C6179 - C23996 * C6186 +
              C153885 * C6197 + C23994 * C6187 - C23995 * C6180 -
              C23994 * C6188 + C153914 * C6198 + C23992 * C6189 -
              C23993 * C6181 - C23992 * C6190 + C153933 * C6199) *
                 C153724 +
             (C26066 + C26065 + C26064) * C98536) *
                C153684 +
            ((C49659 + C49658 + C49657) * C153724 + C49653 * C98536) * C70498) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C98536 +
             C31290 * C153724) *
                C153943 +
            (C130855 + C130856) * C153939 + C130871 * C153929 +
            C130872 * C153871) *
               C153537 * C1091 -
           ((C130861 + C130862) * C153871 + (C130860 + C130859) * C153929 +
            (C130858 + C130857) * C153939 + (C130856 + C130855) * C153943) *
               C153537 * C153573) *
              C1093 +
          (((C130863 + C130864) * C153943 + (C130865 + C130866) * C153939 +
            (C130867 + C130868) * C153929 + (C130869 + C130870) * C153871) *
               C153537 * C153573 -
           (C130873 * C153871 + C130874 * C153929 +
            (C130864 + C130863) * C153939 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C98536) *
                C153943) *
               C153537 * C1091) *
              C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C98536 +
             C31782 * C153724) *
                C153943 +
            (C131263 + C131264) * C153939 + (C131265 + C131266) * C153929 +
            (C131267 + C131268) * C153871) *
               C153537 * C1091 -
           (((C28212 * C5564 - C28213 * C5561 - C28212 * C5565 +
              C153462 * C5570) *
                 C153724 +
             C28704 * C98536) *
                C153871 +
            (C131268 + C131267) * C153929 + (C131266 + C131265) * C153939 +
            (C131264 + C131263) * C153943) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C98536 +
            C31290 * C153724) *
               C153943 +
           (C130855 + C130856) * C153939 + C130871 * C153929 +
           C130872 * C153871) *
              C153537 * C1178 -
          (C132057 * C153871 + C132058 * C153929 +
           (C130858 + C130857) * C153939 + (C130856 + C130855) * C153943) *
              C153537 * C1179 +
          (C130871 * C153943 + C130872 * C153939 +
           (C130862 + C130861) * C153929 + (C132059 + C132060) * C153871) *
              C153537 * C1180 -
          (((C28212 * C29845 - C28213 * C29844 - C28212 * C29846 +
             C153462 * C29847) *
                C153724 +
            C29279 * C98536) *
               C153871 +
           (C132060 + C132059) * C153929 + C132057 * C153939 +
           C132058 * C153943) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C98536 +
             C31290 * C153724) *
                C153943 +
            (C130855 + C130856) * C153939 + C130871 * C153929 +
            C130872 * C153871) *
               C473 -
           ((C131721 + C131722) * C153871 + (C131723 + C131724) * C153929 +
            (C131725 + C131726) * C153939 +
            (C31291 * C153724 + C31290 * C98536) * C153943) *
               C474 +
           ((C31291 * C98536 + C31294 * C153724) * C153943 +
            (C132255 + C132256) * C153939 + (C132257 + C132258) * C153929 +
            (C132259 + C132260) * C153871) *
               C475) *
              C1091 +
          (((C131726 + C131725) * C153943 + (C131724 + C131723) * C153939 +
            (C131722 + C131721) * C153929 +
            (C29049 * C98536 + C29434 * C153724) * C153871) *
               C474 -
           (C132057 * C153871 + C132058 * C153929 +
            (C130858 + C130857) * C153939 + (C130856 + C130855) * C153943) *
               C473 -
           (((C28212 * C30184 - C28213 * C30182 - C28212 * C30185 +
              C153462 * C30188) *
                 C153724 +
             C29434 * C98536) *
                C153871 +
            (C132260 + C132259) * C153929 + (C132258 + C132257) * C153939 +
            (C132256 + C132255) * C153943) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
               C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
               C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                  C98536 +
              (C48244 + C48245 + C48246) * C153724) *
                 C70498 +
             ((C24325 + C24326 + C24327) * C98536 + C127043 * C153724) *
                 C153684) *
                C153849 -
            ((C49653 * C153724 + C127044 * C98536) * C153684 +
             ((C48249 + C48248 + C48247) * C153724 +
              (C48246 + C48245 + C48244) * C98536) *
                 C70498) *
                C153601) *
               C1091 +
           (((C127043 * C98536 + C127822 * C153724) * C70498 +
             ((C25409 + C25408 + C25407) * C98536 +
              (C26064 + C26065 + C26066) * C153724) *
                 C153684) *
                C153601 -
            ((C26806 * C153724 + (C24330 + C24329 + C24328) * C98536) *
                 C153684 +
             (C127044 * C153724 + (C24327 + C24326 + C24325) * C98536) *
                 C70498) *
                C153849) *
               C153573) *
              C153840 +
          (((((C48253 + C48254 + C48255) * C98536 +
              (C48256 + C48257 + C48258) * C153724) *
                 C70498 +
             (C127045 * C98536 + (C49052 + C49053 + C49054) * C153724) *
                 C153684) *
                C153601 -
            ((C127046 * C153724 + (C24336 + C24335 + C24334) * C98536) *
                 C153684 +
             ((C48255 + C48254 + C48253) * C153724 +
              (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
               C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
               C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                  C98536) *
                 C70498) *
                C153849) *
               C1091 +
           ((((C24334 + C24335 + C24336) * C98536 + C127045 * C153724) *
                 C70498 +
             ((C24337 + C24338 + C24339) * C98536 +
              (C25416 + C25417 + C25418) * C153724) *
                 C153684) *
                C153849 -
            (((C23996 * C3289 - C23997 * C3282 - C23996 * C3290 +
               C153885 * C3294 + C23994 * C3287 - C23995 * C3281 -
               C23994 * C3288 + C153914 * C3293 + C23992 * C3285 -
               C23993 * C3280 - C23992 * C3286 + C153933 * C3292) *
                  C153724 +
              (C25418 + C25417 + C25416) * C98536) *
                 C153684 +
             ((C49054 + C49053 + C49052) * C153724 + C127046 * C98536) *
                 C70498) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                  C98536 +
              C31290 * C153724) *
                 C153943 +
             (C130855 + C130856) * C153939 + C130871 * C153929 +
             C130872 * C153871) *
                C153849 -
            ((C131721 + C131722) * C153871 + (C131723 + C131724) * C153929 +
             (C131725 + C131726) * C153939 +
             (C31291 * C153724 + C31290 * C98536) * C153943) *
                C153601) *
               C1091 +
           (((C131726 + C131725) * C153943 + (C131724 + C131723) * C153939 +
             (C131722 + C131721) * C153929 +
             (C29049 * C98536 + C29434 * C153724) * C153871) *
                C153601 -
            (C132057 * C153871 + C132058 * C153929 +
             (C130858 + C130857) * C153939 + (C130856 + C130855) * C153943) *
                C153849) *
               C153573) *
              C153840 +
          ((((C31295 * C98536 + C31296 * C153724) * C153943 +
             (C131727 + C131728) * C153939 + (C131729 + C131730) * C153929 +
             (C131731 + C131732) * C153871) *
                C153601 -
            (C130873 * C153871 + C130874 * C153929 +
             (C130864 + C130863) * C153939 +
             (C31295 * C153724 +
              (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                  C98536) *
                 C153943) *
                C153849) *
               C1091 +
           (((C130863 + C130864) * C153943 + (C130865 + C130866) * C153939 +
             (C130867 + C130868) * C153929 + (C130869 + C130870) * C153871) *
                C153849 -
            (((C28212 * C28550 - C28213 * C28547 - C28212 * C28551 +
               C153462 * C28553) *
                  C153724 +
              C29056 * C98536) *
                 C153871 +
             (C131732 + C131731) * C153929 + (C131730 + C131729) * C153939 +
             (C131728 + C131727) * C153943) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C98536 +
             (C48244 + C48245 + C48246) * C153724) *
                C70498 +
            ((C24325 + C24326 + C24327) * C98536 + C127043 * C153724) *
                C153684) *
               C153537 * C1091 -
           ((C26806 * C153724 + (C24330 + C24329 + C24328) * C98536) * C153684 +
            (C127044 * C153724 + (C24327 + C24326 + C24325) * C98536) *
                C70498) *
               C153537 * C153573) *
              C1093 +
          ((((C24334 + C24335 + C24336) * C98536 + C127045 * C153724) * C70498 +
            ((C24337 + C24338 + C24339) * C98536 +
             (C25416 + C25417 + C25418) * C153724) *
                C153684) *
               C153537 * C153573 -
           ((C127046 * C153724 + (C24336 + C24335 + C24334) * C98536) *
                C153684 +
            ((C48255 + C48254 + C48253) * C153724 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C98536) *
                C70498) *
               C153537 * C1091) *
              C1094 +
          ((((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
              C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
              C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                 C98536 +
             (C48738 + C48739 + C48740) * C153724) *
                C70498 +
            ((C24821 + C24822 + C24823) * C98536 +
             (C126360 + C126361 + C126362) * C153724) *
                C153684) *
               C153537 * C1091 -
           (((C23996 * C1761 - C23997 * C1756 - C23996 * C1762 +
              C153885 * C1771 + C23994 * C1763 - C23995 * C1757 -
              C23994 * C1764 + C153914 * C1772 + C23992 * C1765 -
              C23993 * C1758 - C23992 * C1766 + C153933 * C1773) *
                 C153724 +
             (C24826 + C24825 + C24824) * C98536) *
                C153684 +
            ((C126362 + C126361 + C126360) * C153724 +
             (C24823 + C24822 + C24821) * C98536) *
                C70498) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C98536 +
            (C48244 + C48245 + C48246) * C153724) *
               C70498 +
           ((C24325 + C24326 + C24327) * C98536 + C127043 * C153724) *
               C153684) *
              C153537 * C1178 -
          ((C26806 * C153724 + (C24330 + C24329 + C24328) * C98536) * C153684 +
           (C127044 * C153724 + (C24327 + C24326 + C24325) * C98536) * C70498) *
              C153537 * C1179 +
          ((C24345 * C98536 + (C25409 + C25408 + C25407) * C153724) * C70498 +
           ((C24333 + C24332 + C24331) * C98536 +
            (C26814 + C26815 + C26816) * C153724) *
               C153684) *
              C153537 * C1180 -
          (((C23996 * C5564 - C23997 * C5561 - C23996 * C5565 +
             C153885 * C5570 + C23994 * C5566 - C23995 * C5562 -
             C23994 * C5567 + C153914 * C5571 + C23992 * C5568 -
             C23993 * C5563 - C23992 * C5569 + C153933 * C5572) *
                C153724 +
            (C25806 + C25805 + C25804) * C98536) *
               C153684 +
           ((C26816 + C26815 + C26814) * C153724 + C25796 * C98536) * C70498) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C98536 +
             C31290 * C153724) *
                C153943 +
            (C130855 + C130856) * C153939 + C130871 * C153929 +
            C130872 * C153871) *
               C153537 * C1091 -
           ((C130861 + C130862) * C153871 + (C130860 + C130859) * C153929 +
            (C130858 + C130857) * C153939 + (C130856 + C130855) * C153943) *
               C153537 * C153573) *
              C1093 +
          (((C130863 + C130864) * C153943 + (C130865 + C130866) * C153939 +
            (C130867 + C130868) * C153929 + (C130869 + C130870) * C153871) *
               C153537 * C153573 -
           (C130873 * C153871 + C130874 * C153929 +
            (C130864 + C130863) * C153939 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C98536) *
                C153943) *
               C153537 * C1091) *
              C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C98536 +
             C31782 * C153724) *
                C153943 +
            (C131263 + C131264) * C153939 + (C131265 + C131266) * C153929 +
            (C131267 + C131268) * C153871) *
               C153537 * C1091 -
           (((C28212 * C5564 - C28213 * C5561 - C28212 * C5565 +
              C153462 * C5570) *
                 C153724 +
             C28704 * C98536) *
                C153871 +
            (C131268 + C131267) * C153929 + (C131266 + C131265) * C153939 +
            (C131264 + C131263) * C153943) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C98536 +
            C31290 * C153724) *
               C153943 +
           (C130855 + C130856) * C153939 + C130871 * C153929 +
           C130872 * C153871) *
              C153537 * C1178 -
          (C132057 * C153871 + C132058 * C153929 +
           (C130858 + C130857) * C153939 + (C130856 + C130855) * C153943) *
              C153537 * C1179 +
          (C130871 * C153943 + C130872 * C153939 +
           (C130862 + C130861) * C153929 + (C132059 + C132060) * C153871) *
              C153537 * C1180 -
          (((C28212 * C29845 - C28213 * C29844 - C28212 * C29846 +
             C153462 * C29847) *
                C153724 +
            C29279 * C98536) *
               C153871 +
           (C132060 + C132059) * C153929 + C132057 * C153939 +
           C132058 * C153943) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[145] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
               C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
               C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                  C98536 +
              (C48244 + C48245 + C48246) * C153724) *
                 C70498 +
             ((C24325 + C24326 + C24327) * C98536 + C127043 * C153724) *
                 C153684) *
                C1898 -
            ((C49653 * C153724 + C127044 * C98536) * C153684 +
             ((C48249 + C48248 + C48247) * C153724 +
              (C48246 + C48245 + C48244) * C98536) *
                 C70498) *
                C153601) *
               C153848 +
           (((C127043 * C98536 + C127822 * C153724) * C70498 +
             (C128790 * C98536 + (C26064 + C26065 + C26066) * C153724) *
                 C153684) *
                C153601 -
            ((C26806 * C153724 + (C24330 + C24329 + C24328) * C98536) *
                 C153684 +
             (C127044 * C153724 + (C24327 + C24326 + C24325) * C98536) *
                 C70498) *
                C1898) *
               C153573) *
              C153840 +
          (((((C48253 + C48254 + C48255) * C98536 +
              (C48256 + C48257 + C48258) * C153724) *
                 C70498 +
             (C127045 * C98536 + (C49052 + C49053 + C49054) * C153724) *
                 C153684) *
                C153601 -
            ((C127046 * C153724 + (C24336 + C24335 + C24334) * C98536) *
                 C153684 +
             ((C48255 + C48254 + C48253) * C153724 +
              (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
               C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
               C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                  C98536) *
                 C70498) *
                C1898) *
               C153848 +
           ((((C24334 + C24335 + C24336) * C98536 + C127045 * C153724) *
                 C70498 +
             ((C24337 + C24338 + C24339) * C98536 +
              (C25416 + C25417 + C25418) * C153724) *
                 C153684) *
                C1898 -
            (((C23996 * C3289 - C23997 * C3282 - C23996 * C3290 +
               C153885 * C3294 + C23994 * C3287 - C23995 * C3281 -
               C23994 * C3288 + C153914 * C3293 + C23992 * C3285 -
               C23993 * C3280 - C23992 * C3286 + C153933 * C3292) *
                  C153724 +
              (C25418 + C25417 + C25416) * C98536) *
                 C153684 +
             ((C49054 + C49053 + C49052) * C153724 + C127046 * C98536) *
                 C70498) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                  C98536 +
              C31290 * C153724) *
                 C153943 +
             (C130855 + C130856) * C153939 + C130871 * C153929 +
             C130872 * C153871) *
                C1898 -
            (C132907 * C153871 + C132908 * C153929 +
             (C131725 + C131726) * C153939 +
             (C31291 * C153724 + C31290 * C98536) * C153943) *
                C153601) *
               C153848 +
           (((C131726 + C131725) * C153943 + (C131724 + C131723) * C153939 +
             (C131722 + C131721) * C153929 + (C132909 + C132910) * C153871) *
                C153601 -
            (C132057 * C153871 + C132058 * C153929 +
             (C130858 + C130857) * C153939 + (C130856 + C130855) * C153943) *
                C1898) *
               C153573) *
              C153840 +
          ((((C31295 * C98536 + C31296 * C153724) * C153943 +
             (C131727 + C131728) * C153939 + (C131729 + C131730) * C153929 +
             (C131731 + C131732) * C153871) *
                C153601 -
            (C130873 * C153871 + C130874 * C153929 +
             (C130864 + C130863) * C153939 +
             (C31295 * C153724 +
              (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                  C98536) *
                 C153943) *
                C1898) *
               C153848 +
           (((C130863 + C130864) * C153943 + (C130865 + C130866) * C153939 +
             (C130867 + C130868) * C153929 + (C130869 + C130870) * C153871) *
                C1898 -
            (((C28212 * C28550 - C28213 * C28547 - C28212 * C28551 +
               C153462 * C28553) *
                  C153724 +
              C29056 * C98536) *
                 C153871 +
             (C131732 + C131731) * C153929 + (C131730 + C131729) * C153939 +
             (C131728 + C131727) * C153943) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C98536 +
             (C48244 + C48245 + C48246) * C153724) *
                C70498 +
            ((C24325 + C24326 + C24327) * C98536 + C127043 * C153724) *
                C153684) *
               C153921 -
           ((C49653 * C153724 + C127044 * C98536) * C153684 +
            ((C48249 + C48248 + C48247) * C153724 +
             (C48246 + C48245 + C48244) * C98536) *
                C70498) *
               C153922 +
           ((C48264 * C98536 + (C48252 + C48251 + C48250) * C153724) * C70498 +
            (C127822 * C98536 + (C49657 + C49658 + C49659) * C153724) *
                C153684) *
               C2414) *
              C153848 +
          (((C127043 * C98536 + C127822 * C153724) * C70498 +
            (C128790 * C98536 + (C26064 + C26065 + C26066) * C153724) *
                C153684) *
               C153922 -
           ((C26806 * C153724 + (C24330 + C24329 + C24328) * C98536) * C153684 +
            (C127044 * C153724 + (C24327 + C24326 + C24325) * C98536) *
                C70498) *
               C153921 -
           (((C23996 * C6185 - C23997 * C6179 - C23996 * C6186 +
              C153885 * C6197 + C23994 * C6187 - C23995 * C6180 -
              C23994 * C6188 + C153914 * C6198 + C23992 * C6189 -
              C23993 * C6181 - C23992 * C6190 + C153933 * C6199) *
                 C153724 +
             (C26066 + C26065 + C26064) * C98536) *
                C153684 +
            ((C49659 + C49658 + C49657) * C153724 + C49653 * C98536) * C70498) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C98536 +
             C31290 * C153724) *
                C153943 +
            (C130855 + C130856) * C153939 + C130871 * C153929 +
            C130872 * C153871) *
               C153921 -
           (C132907 * C153871 + C132908 * C153929 +
            (C131725 + C131726) * C153939 +
            (C31291 * C153724 + C31290 * C98536) * C153943) *
               C153922 +
           ((C31291 * C98536 + C31294 * C153724) * C153943 +
            (C132255 + C132256) * C153939 + (C132257 + C132258) * C153929 +
            (C132259 + C132260) * C153871) *
               C2414) *
              C153848 +
          (((C131726 + C131725) * C153943 + (C131724 + C131723) * C153939 +
            (C131722 + C131721) * C153929 + (C132909 + C132910) * C153871) *
               C153922 -
           (C132057 * C153871 + C132058 * C153929 +
            (C130858 + C130857) * C153939 + (C130856 + C130855) * C153943) *
               C153921 -
           (((C28212 * C30184 - C28213 * C30182 - C28212 * C30185 +
              C153462 * C30188) *
                 C153724 +
             C29434 * C98536) *
                C153871 +
            (C132260 + C132259) * C153929 + (C132258 + C132257) * C153939 +
            (C132256 + C132255) * C153943) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C98536 +
             (C48244 + C48245 + C48246) * C153724) *
                C70498 +
            ((C24325 + C24326 + C24327) * C98536 + C127043 * C153724) *
                C153684) *
               C1898 -
           ((C49653 * C153724 + C127044 * C98536) * C153684 +
            ((C48249 + C48248 + C48247) * C153724 +
             (C48246 + C48245 + C48244) * C98536) *
                C70498) *
               C153601) *
              C298 +
          (((C127043 * C98536 + C127822 * C153724) * C70498 +
            (C128790 * C98536 + (C26064 + C26065 + C26066) * C153724) *
                C153684) *
               C153601 -
           ((C26806 * C153724 + (C24330 + C24329 + C24328) * C98536) * C153684 +
            (C127044 * C153724 + (C24327 + C24326 + C24325) * C98536) *
                C70498) *
               C1898) *
              C299 +
          (((C24345 * C98536 + C128790 * C153724) * C70498 +
            ((C24333 + C24332 + C24331) * C98536 +
             (C26814 + C26815 + C26816) * C153724) *
                C153684) *
               C1898 -
           (((C23996 * C4784 - C23997 * C4781 - C23996 * C4785 +
              C153885 * C4790 + C23994 * C4786 - C23995 * C4782 -
              C23994 * C4787 + C153914 * C4791 + C23992 * C4788 -
              C23993 * C4783 - C23992 * C4789 + C153933 * C4792) *
                 C153724 +
             (C26816 + C26815 + C26814) * C98536) *
                C153684 +
            ((C26066 + C26065 + C26064) * C153724 + C26806 * C98536) * C70498) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C98536 +
             (C48244 + C48245 + C48246) * C153724) *
                C70498 +
            ((C24325 + C24326 + C24327) * C98536 + C127043 * C153724) *
                C153684) *
               C1898 -
           ((C49653 * C153724 + C127044 * C98536) * C153684 +
            ((C48249 + C48248 + C48247) * C153724 +
             (C48246 + C48245 + C48244) * C98536) *
                C70498) *
               C153601) *
              C153521 * C1093 +
          ((((C48253 + C48254 + C48255) * C98536 +
             (C48256 + C48257 + C48258) * C153724) *
                C70498 +
            (C127045 * C98536 + (C49052 + C49053 + C49054) * C153724) *
                C153684) *
               C153601 -
           ((C127046 * C153724 + (C24336 + C24335 + C24334) * C98536) *
                C153684 +
            ((C48255 + C48254 + C48253) * C153724 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C98536) *
                C70498) *
               C1898) *
              C153521 * C1094 +
          ((((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
              C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
              C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                 C98536 +
             (C48738 + C48739 + C48740) * C153724) *
                C70498 +
            ((C24821 + C24822 + C24823) * C98536 +
             (C126360 + C126361 + C126362) * C153724) *
                C153684) *
               C1898 -
           (((C23996 * C1330 - C23997 * C1325 - C23996 * C1331 +
              C153885 * C1340 + C23994 * C1332 - C23995 * C1326 -
              C23994 * C1333 + C153914 * C1341 + C23992 * C1334 -
              C23993 * C1327 - C23992 * C1335 + C153933 * C1342) *
                 C153724 +
             (C126362 + C126361 + C126360) * C98536) *
                C153684 +
            ((C48743 + C48742 + C48741) * C153724 +
             (C48740 + C48739 + C48738) * C98536) *
                C70498) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C98536 +
            (C48244 + C48245 + C48246) * C153724) *
               C70498 +
           ((C24325 + C24326 + C24327) * C98536 + C127043 * C153724) *
               C153684) *
              C2104 -
          ((C49653 * C153724 + C127044 * C98536) * C153684 +
           ((C48249 + C48248 + C48247) * C153724 +
            (C48246 + C48245 + C48244) * C98536) *
               C70498) *
              C2105 +
          ((C48264 * C98536 + (C48252 + C48251 + C48250) * C153724) * C70498 +
           (C127822 * C98536 + (C49657 + C49658 + C49659) * C153724) *
               C153684) *
              C2106 -
          (((C23996 * C9038 - C23997 * C9035 - C23996 * C9039 +
             C153885 * C9044 + C23994 * C9040 - C23995 * C9036 -
             C23994 * C9041 + C153914 * C9045 + C23992 * C9042 -
             C23993 * C9037 - C23992 * C9043 + C153933 * C9046) *
                C153724 +
            (C49659 + C49658 + C49657) * C98536) *
               C153684 +
           ((C50990 + C50989 + C50988) * C153724 + C50981 * C98536) * C70498) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C98536 +
             C31290 * C153724) *
                C153943 +
            (C130855 + C130856) * C153939 + C130871 * C153929 +
            C130872 * C153871) *
               C1898 -
           (C132907 * C153871 + C132908 * C153929 +
            (C131725 + C131726) * C153939 +
            (C31291 * C153724 + C31290 * C98536) * C153943) *
               C153601) *
              C153521 * C1093 +
          (((C31295 * C98536 + C31296 * C153724) * C153943 +
            (C131727 + C131728) * C153939 + (C131729 + C131730) * C153929 +
            (C131731 + C131732) * C153871) *
               C153601 -
           (C130873 * C153871 + C130874 * C153929 +
            (C130864 + C130863) * C153939 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C98536) *
                C153943) *
               C1898) *
              C153521 * C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C98536 +
             C31782 * C153724) *
                C153943 +
            (C131263 + C131264) * C153939 + (C131265 + C131266) * C153929 +
            (C131267 + C131268) * C153871) *
               C1898 -
           (((C28212 * C4784 - C28213 * C4781 - C28212 * C4785 +
              C153462 * C4790) *
                 C153724 +
             C44743 * C98536) *
                C153871 +
            (C31547 * C153724 + C31546 * C98536) * C153929 +
            (C31545 * C153724 + C31544 * C98536) * C153939 +
            (C31783 * C153724 + C31782 * C98536) * C153943) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C98536 +
             C31290 * C153724) *
                C153943 +
            (C130855 + C130856) * C153939 + C130871 * C153929 +
            C130872 * C153871) *
               C1898 -
           (C132907 * C153871 + C132908 * C153929 +
            (C131725 + C131726) * C153939 +
            (C31291 * C153724 + C31290 * C98536) * C153943) *
               C153601) *
              C298 +
          (((C131726 + C131725) * C153943 + (C131724 + C131723) * C153939 +
            (C131722 + C131721) * C153929 + (C132909 + C132910) * C153871) *
               C153601 -
           (C132057 * C153871 + C132058 * C153929 +
            (C130858 + C130857) * C153939 + (C130856 + C130855) * C153943) *
               C1898) *
              C299 +
          ((C130871 * C153943 + C130872 * C153939 +
            (C130862 + C130861) * C153929 + (C132059 + C132060) * C153871) *
               C1898 -
           (((C28212 * C29403 - C28213 * C29402 - C28212 * C29404 +
              C153462 * C29405) *
                 C153724 +
             C29855 * C98536) *
                C153871 +
            (C132910 + C132909) * C153929 + C132907 * C153939 +
            C132908 * C153943) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C98536 +
            C31290 * C153724) *
               C153943 +
           (C130855 + C130856) * C153939 + C130871 * C153929 +
           C130872 * C153871) *
              C2104 -
          (C132907 * C153871 + C132908 * C153929 +
           (C131725 + C131726) * C153939 +
           (C31291 * C153724 + C31290 * C98536) * C153943) *
              C2105 +
          ((C31291 * C98536 + C31294 * C153724) * C153943 +
           (C132255 + C132256) * C153939 + (C132257 + C132258) * C153929 +
           (C132259 + C132260) * C153871) *
              C2106 -
          (((C28212 * C32677 - C28213 * C32676 - C28212 * C32678 +
             C153462 * C32679) *
                C153724 +
            C32705 * C98536) *
               C153871 +
           (C32704 * C153724 + C31292 * C98536) * C153929 +
           (C32703 * C153724 + C31293 * C98536) * C153939 +
           (C34035 * C153724 + C31294 * C98536) * C153943) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C98536 +
             (C48244 + C48245 + C48246) * C153724) *
                C70498 +
            ((C24325 + C24326 + C24327) * C98536 + C127043 * C153724) *
                C153684) *
               C153921 -
           ((C49653 * C153724 + C127044 * C98536) * C153684 +
            ((C48249 + C48248 + C48247) * C153724 +
             (C48246 + C48245 + C48244) * C98536) *
                C70498) *
               C153922 +
           ((C48264 * C98536 + (C48252 + C48251 + C48250) * C153724) * C70498 +
            (C127822 * C98536 + (C49657 + C49658 + C49659) * C153724) *
                C153684) *
               C2414) *
              C153521 * C153840 +
          ((((C48253 + C48254 + C48255) * C98536 +
             (C48256 + C48257 + C48258) * C153724) *
                C70498 +
            (C127045 * C98536 + (C49052 + C49053 + C49054) * C153724) *
                C153684) *
               C153922 -
           ((C127046 * C153724 + (C24336 + C24335 + C24334) * C98536) *
                C153684 +
            ((C48255 + C48254 + C48253) * C153724 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C98536) *
                C70498) *
               C153921 -
           (((C23996 * C8429 - C23997 * C8428 - C23996 * C8430 +
              C153885 * C8431 + C23994 * C6191 - C23995 * C6182 -
              C23994 * C6192 + C153914 * C6200 + C23992 * C6193 -
              C23993 * C6183 - C23992 * C6194 + C153933 * C6201) *
                 C153724 +
             (C49054 + C49053 + C49052) * C98536) *
                C153684 +
            ((C48261 + C48260 + C48259) * C153724 + C48265 * C98536) * C70498) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C98536 +
             C31290 * C153724) *
                C153943 +
            (C130855 + C130856) * C153939 + C130871 * C153929 +
            C130872 * C153871) *
               C153921 -
           (C132907 * C153871 + C132908 * C153929 +
            (C131725 + C131726) * C153939 +
            (C31291 * C153724 + C31290 * C98536) * C153943) *
               C153922 +
           ((C31291 * C98536 + C31294 * C153724) * C153943 +
            (C132255 + C132256) * C153939 + (C132257 + C132258) * C153929 +
            (C132259 + C132260) * C153871) *
               C2414) *
              C153521 * C153840 +
          (((C31295 * C98536 + C31296 * C153724) * C153943 +
            (C131727 + C131728) * C153939 + (C131729 + C131730) * C153929 +
            (C131731 + C131732) * C153871) *
               C153922 -
           (C130873 * C153871 + C130874 * C153929 +
            (C130864 + C130863) * C153939 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C98536) *
                C153943) *
               C153921 -
           (((C28212 * C32074 - C28213 * C32073 - C28212 * C32075 +
              C153462 * C32076) *
                 C153724 +
             C30999 * C98536) *
                C153871 +
            (C31299 * C153724 + C30998 * C98536) * C153929 +
            (C31298 * C153724 + C30997 * C98536) * C153939 +
            (C31297 * C153724 + C31296 * C98536) * C153943) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C98536 +
             (C48244 + C48245 + C48246) * C153724) *
                C70498 +
            ((C24325 + C24326 + C24327) * C98536 + C127043 * C153724) *
                C153684) *
               C1898 -
           ((C49653 * C153724 + C127044 * C98536) * C153684 +
            ((C48249 + C48248 + C48247) * C153724 +
             (C48246 + C48245 + C48244) * C98536) *
                C70498) *
               C153601) *
              C153521 * C1093 +
          ((((C48253 + C48254 + C48255) * C98536 +
             (C48256 + C48257 + C48258) * C153724) *
                C70498 +
            (C127045 * C98536 + (C49052 + C49053 + C49054) * C153724) *
                C153684) *
               C153601 -
           ((C127046 * C153724 + (C24336 + C24335 + C24334) * C98536) *
                C153684 +
            ((C48255 + C48254 + C48253) * C153724 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C98536) *
                C70498) *
               C1898) *
              C153521 * C1094 +
          ((((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
              C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
              C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                 C98536 +
             (C48738 + C48739 + C48740) * C153724) *
                C70498 +
            ((C24821 + C24822 + C24823) * C98536 +
             (C126360 + C126361 + C126362) * C153724) *
                C153684) *
               C1898 -
           (((C23996 * C1330 - C23997 * C1325 - C23996 * C1331 +
              C153885 * C1340 + C23994 * C1332 - C23995 * C1326 -
              C23994 * C1333 + C153914 * C1341 + C23992 * C1334 -
              C23993 * C1327 - C23992 * C1335 + C153933 * C1342) *
                 C153724 +
             (C126362 + C126361 + C126360) * C98536) *
                C153684 +
            ((C48743 + C48742 + C48741) * C153724 +
             (C48740 + C48739 + C48738) * C98536) *
                C70498) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C98536 +
             (C48244 + C48245 + C48246) * C153724) *
                C70498 +
            ((C24325 + C24326 + C24327) * C98536 + C127043 * C153724) *
                C153684) *
               C1898 -
           ((C49653 * C153724 + C127044 * C98536) * C153684 +
            ((C48249 + C48248 + C48247) * C153724 +
             (C48246 + C48245 + C48244) * C98536) *
                C70498) *
               C153601) *
              C298 +
          (((C127043 * C98536 + C127822 * C153724) * C70498 +
            (C128790 * C98536 + (C26064 + C26065 + C26066) * C153724) *
                C153684) *
               C153601 -
           ((C26806 * C153724 + (C24330 + C24329 + C24328) * C98536) * C153684 +
            (C127044 * C153724 + (C24327 + C24326 + C24325) * C98536) *
                C70498) *
               C1898) *
              C299 +
          (((C24345 * C98536 + C128790 * C153724) * C70498 +
            ((C24333 + C24332 + C24331) * C98536 +
             (C26814 + C26815 + C26816) * C153724) *
                C153684) *
               C1898 -
           (((C23996 * C4784 - C23997 * C4781 - C23996 * C4785 +
              C153885 * C4790 + C23994 * C4786 - C23995 * C4782 -
              C23994 * C4787 + C153914 * C4791 + C23992 * C4788 -
              C23993 * C4783 - C23992 * C4789 + C153933 * C4792) *
                 C153724 +
             (C26816 + C26815 + C26814) * C98536) *
                C153684 +
            ((C26066 + C26065 + C26064) * C153724 + C26806 * C98536) * C70498) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C98536 +
             C31290 * C153724) *
                C153943 +
            (C130855 + C130856) * C153939 + C130871 * C153929 +
            C130872 * C153871) *
               C1898 -
           (C132907 * C153871 + C132908 * C153929 +
            (C131725 + C131726) * C153939 +
            (C31291 * C153724 + C31290 * C98536) * C153943) *
               C153601) *
              C153521 * C1093 +
          (((C31295 * C98536 + C31296 * C153724) * C153943 +
            (C131727 + C131728) * C153939 + (C131729 + C131730) * C153929 +
            (C131731 + C131732) * C153871) *
               C153601 -
           (C130873 * C153871 + C130874 * C153929 +
            (C130864 + C130863) * C153939 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C98536) *
                C153943) *
               C1898) *
              C153521 * C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C98536 +
             C31782 * C153724) *
                C153943 +
            (C131263 + C131264) * C153939 + (C131265 + C131266) * C153929 +
            (C131267 + C131268) * C153871) *
               C1898 -
           (((C28212 * C4784 - C28213 * C4781 - C28212 * C4785 +
              C153462 * C4790) *
                 C153724 +
             C44743 * C98536) *
                C153871 +
            (C31547 * C153724 + C31546 * C98536) * C153929 +
            (C31545 * C153724 + C31544 * C98536) * C153939 +
            (C31783 * C153724 + C31782 * C98536) * C153943) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C98536 +
             C31290 * C153724) *
                C153943 +
            (C130855 + C130856) * C153939 + C130871 * C153929 +
            C130872 * C153871) *
               C1898 -
           (C132907 * C153871 + C132908 * C153929 +
            (C131725 + C131726) * C153939 +
            (C31291 * C153724 + C31290 * C98536) * C153943) *
               C153601) *
              C298 +
          (((C131726 + C131725) * C153943 + (C131724 + C131723) * C153939 +
            (C131722 + C131721) * C153929 + (C132909 + C132910) * C153871) *
               C153601 -
           (C132057 * C153871 + C132058 * C153929 +
            (C130858 + C130857) * C153939 + (C130856 + C130855) * C153943) *
               C1898) *
              C299 +
          ((C130871 * C153943 + C130872 * C153939 +
            (C130862 + C130861) * C153929 + (C132059 + C132060) * C153871) *
               C1898 -
           (((C28212 * C29403 - C28213 * C29402 - C28212 * C29404 +
              C153462 * C29405) *
                 C153724 +
             C29855 * C98536) *
                C153871 +
            (C132910 + C132909) * C153929 + C132907 * C153939 +
            C132908 * C153943) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153637 * C34893 +
            (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
            C35213 * C153871) *
               C153537 * C153848 -
           ((C35198 + C35199) * C153637 * C153871 +
            (C35197 + C35196) * C153637 * C34895 +
            (C35195 + C35194) * C153637 * C34894 +
            (C35193 + C35192) * C153637 * C34893) *
               C153537 * C153573) *
              C153917 +
          (((C35200 + C35201) * C153637 * C34893 +
            (C35202 + C35203) * C153637 * C34894 +
            (C35204 + C35205) * C153637 * C34895 +
            (C35206 + C35207) * C153637 * C153871) *
               C153537 * C153573 -
           (C35214 * C153871 + C35215 * C34895 +
            (C35201 + C35200) * C153637 * C34894 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C153637 * C34893) *
               C153537 * C153848) *
              C153918 +
          (((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
             C152081 * C158 - C34900 * C147 - C152081 * C159 + C153472 * C171) *
                C153637 * C34893 +
            (C35640 + C35641) * C153637 * C34894 +
            (C35642 + C35643) * C153637 * C34895 +
            (C35644 + C35645) * C153637 * C153871) *
               C153537 * C153848 -
           ((C152081 * C2923 - C34900 * C2916 - C152081 * C2924 +
             C153472 * C2928 + C152100 * C2921 - C34898 * C2915 -
             C152100 * C2922 + C153829 * C2927) *
                C153637 * C153871 +
            (C35645 + C35644) * C153637 * C34895 +
            (C35643 + C35642) * C153637 * C34894 +
            (C35641 + C35640) * C153637 * C34893) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153637 * C153863 +
            (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
               C153537 * C153848 -
           ((C11578 + C11579 + C11580 + C11581) * C153637 * C153684 +
            (C11577 + C11576 + C11575 + C11574) * C153637 * C153863) *
               C153537 * C153573) *
              C153917 +
          (((C11582 + C11583 + C11584 + C11585) * C153637 * C153863 +
            (C11586 + C11587 + C11588 + C11589) * C153637 * C153684) *
               C153537 * C153573 -
           ((C11585 + C11584 + C11583 + C11582) * C153637 * C153684 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153637 * C153863) *
               C153537 * C153848) *
              C153918 +
          (((C11275 * C156 - C11276 * C146 - C11275 * C157 + C11269 * C170 +
             C11277 * C158 - C11278 * C147 - C11277 * C159 + C11270 * C171 +
             C11279 * C160 - C11280 * C148 - C11279 * C161 + C11271 * C172 +
             C11281 * C162 - C11282 * C149 - C11281 * C163 + C153862 * C173) *
                C153637 * C153863 +
            (C12002 + C12003 + C12004 + C12005) * C153637 * C153684) *
               C153537 * C153848 -
           ((C11281 * C337 - C11282 * C314 - C11281 * C338 + C153862 * C350 +
             C11279 * C333 - C11280 * C312 - C11279 * C334 + C11271 * C348 +
             C11277 * C331 - C11278 * C311 - C11277 * C332 + C11270 * C347 +
             C11275 * C329 - C11276 * C310 - C11275 * C330 + C11269 * C346) *
                C153637 * C153684 +
            (C12005 + C12004 + C12003 + C12002) * C153637 * C153863) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C47696 +
             (C39442 + C39443) * C47697 + C58748 * C153901) *
                C153863 +
            ((C35192 + C35193) * C47696 + C40462 * C47697 + C41246 * C153901) *
                C153684) *
               C153537 * C153848 -
           ((C41244 * C153901 + C37407 * C47697 + (C35195 + C35194) * C47696) *
                C153684 +
            (C41245 * C153901 + C40463 * C47697 + (C35193 + C35192) * C47696) *
                C153863) *
               C153537 * C153573) *
              C153917 +
          ((((C35200 + C35201) * C47696 + C40464 * C47697 +
             (C39450 + C39451) * C153901) *
                C153863 +
            ((C35202 + C35203) * C47696 + C40465 * C47697 +
             (C39452 + C39453) * C153901) *
                C153684) *
               C153537 * C153573 -
           ((C58765 * C153901 + C40466 * C47697 + (C35201 + C35200) * C47696) *
                C153684 +
            (C58766 * C153901 + (C39447 + C39446) * C47697 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C47696) *
                C153863) *
               C153537 * C153848) *
              C153918 +
          ((((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
              C152081 * C158 - C34900 * C147 - C152081 * C159 +
              C153472 * C171) *
                 C47696 +
             (C40074 + C40075) * C47697 +
             (C152100 * C502 - C34898 * C483 - C152100 * C503 + C153829 * C519 +
              C152081 * C504 - C34900 * C484 - C152081 * C505 +
              C153472 * C520) *
                 C153901) *
                C153863 +
            ((C35640 + C35641) * C47696 + (C39768 + C39769) * C47697 +
             (C59081 + C59082) * C153901) *
                C153684) *
               C153537 * C153848 -
           (((C152081 * C3289 - C34900 * C3282 - C152081 * C3290 +
              C153472 * C3294 + C152100 * C3287 - C34898 * C3281 -
              C152100 * C3288 + C153829 * C3293) *
                 C153901 +
             (C39771 + C39770) * C47697 + (C35643 + C35642) * C47696) *
                C153684 +
            ((C59082 + C59081) * C153901 + (C39769 + C39768) * C47697 +
             (C35641 + C35640) * C47696) *
                C153863) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153637 * C34893 +
             (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
             C35213 * C153871) *
                C153849 -
            ((C36170 + C36171) * C153637 * C153871 +
             (C36172 + C36173) * C153637 * C34895 +
             (C36174 + C36175) * C153637 * C34894 +
             (C152081 * C494 - C34900 * C479 - C152081 * C495 + C153472 * C515 +
              C152100 * C496 - C34898 * C480 - C152100 * C497 +
              C153829 * C516) *
                 C153637 * C34893) *
                C153601) *
               C153848 +
           (((C36175 + C36174) * C153637 * C34893 +
             (C36173 + C36172) * C153637 * C34894 +
             (C36171 + C36170) * C153637 * C34895 +
             (C152100 * C5568 - C34898 * C5563 - C152100 * C5569 +
              C153829 * C5572 + C152081 * C5566 - C34900 * C5562 -
              C152081 * C5567 + C153472 * C5571) *
                 C153637 * C153871) *
                C153601 -
            ((C35198 + C35199) * C153637 * C153871 +
             (C35197 + C35196) * C153637 * C34895 +
             (C35195 + C35194) * C153637 * C34894 +
             (C35193 + C35192) * C153637 * C34893) *
                C153849) *
               C153573) *
              C301 +
          ((((C152100 * C494 - C34898 * C479 - C152100 * C495 + C153829 * C515 +
              C152081 * C492 - C34900 * C478 - C152081 * C493 +
              C153472 * C514) *
                 C153637 * C34893 +
             (C36176 + C36177) * C153637 * C34894 +
             (C36178 + C36179) * C153637 * C34895 +
             (C36180 + C36181) * C153637 * C153871) *
                C153601 -
            (C35214 * C153871 + C35215 * C34895 +
             (C35201 + C35200) * C153637 * C34894 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153637 * C34893) *
                C153849) *
               C153848 +
           (((C35200 + C35201) * C153637 * C34893 +
             (C35202 + C35203) * C153637 * C34894 +
             (C35204 + C35205) * C153637 * C34895 +
             (C35206 + C35207) * C153637 * C153871) *
                C153849 -
            ((C152081 * C5564 - C34900 * C5561 - C152081 * C5565 +
              C153472 * C5570 + C152100 * C5566 - C34898 * C5562 -
              C152100 * C5567 + C153829 * C5571) *
                 C153637 * C153871 +
             (C36181 + C36180) * C153637 * C34895 +
             (C36179 + C36178) * C153637 * C34894 +
             (C36177 + C36176) * C153637 * C34893) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
              C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
              C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
              C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                 C153637 * C153863 +
             (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
                C153849 -
            ((C12506 + C12507 + C12508 + C12509) * C153637 * C153684 +
             (C11281 * C490 - C11282 * C477 - C11281 * C491 + C153862 * C513 +
              C11279 * C492 - C11280 * C478 - C11279 * C493 + C11271 * C514 +
              C11277 * C494 - C11278 * C479 - C11277 * C495 + C11270 * C515 +
              C11275 * C496 - C11276 * C480 - C11275 * C497 + C11269 * C516) *
                 C153637 * C153863) *
                C153601) *
               C153848 +
           (((C12509 + C12508 + C12507 + C12506) * C153637 * C153863 +
             (C11275 * C1769 - C11276 * C1760 - C11275 * C1770 +
              C11269 * C1775 + C11277 * C1767 - C11278 * C1759 -
              C11277 * C1768 + C11270 * C1774 + C11279 * C1765 -
              C11280 * C1758 - C11279 * C1766 + C11271 * C1773 +
              C11281 * C1763 - C11282 * C1757 - C11281 * C1764 +
              C153862 * C1772) *
                 C153637 * C153684) *
                C153601 -
            ((C11578 + C11579 + C11580 + C11581) * C153637 * C153684 +
             (C11577 + C11576 + C11575 + C11574) * C153637 * C153863) *
                C153849) *
               C153573) *
              C301 +
          ((((C11275 * C494 - C11276 * C479 - C11275 * C495 + C11269 * C515 +
              C11277 * C492 - C11278 * C478 - C11277 * C493 + C11270 * C514 +
              C11279 * C490 - C11280 * C477 - C11279 * C491 + C11271 * C513 +
              C11281 * C488 - C11282 * C476 - C11281 * C489 + C153862 * C512) *
                 C153637 * C153863 +
             (C12510 + C12511 + C12512 + C12513) * C153637 * C153684) *
                C153601 -
            ((C11585 + C11584 + C11583 + C11582) * C153637 * C153684 +
             (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
              C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
              C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
              C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                 C153637 * C153863) *
                C153849) *
               C153848 +
           (((C11582 + C11583 + C11584 + C11585) * C153637 * C153863 +
             (C11586 + C11587 + C11588 + C11589) * C153637 * C153684) *
                C153849 -
            ((C11281 * C1761 - C11282 * C1756 - C11281 * C1762 +
              C153862 * C1771 + C11279 * C1763 - C11280 * C1757 -
              C11279 * C1764 + C11271 * C1772 + C11277 * C1765 -
              C11278 * C1758 - C11277 * C1766 + C11270 * C1773 +
              C11275 * C1767 - C11276 * C1759 - C11275 * C1768 +
              C11269 * C1774) *
                 C153637 * C153684 +
             (C12513 + C12512 + C12511 + C12510) * C153637 * C153863) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C152100 * C152 - C34898 * C144 - C152100 * C153 +
               C153829 * C168 + C152081 * C154 - C34900 * C145 -
               C152081 * C155 + C153472 * C169) *
                  C47696 +
              (C39442 + C39443) * C47697 + C58748 * C153901) *
                 C153863 +
             ((C35192 + C35193) * C47696 + C40462 * C47697 + C41246 * C153901) *
                 C153684) *
                C153849 -
            (((C41273 + C41272) * C153901 + C41245 * C47697 + C40463 * C47696) *
                 C153684 +
             ((C43033 + C43032) * C153901 + (C39444 + C39445) * C47697 +
              (C39443 + C39442) * C47696) *
                 C153863) *
                C153601) *
               C153848 +
           (((C40462 * C47696 + C41246 * C47697 + (C41272 + C41273) * C153901) *
                 C153863 +
             (C39073 * C47696 + C41255 * C47697 + (C41274 + C41275) * C153901) *
                 C153684) *
                C153601 -
            ((C41244 * C153901 + C37407 * C47697 + (C35195 + C35194) * C47696) *
                 C153684 +
             (C41245 * C153901 + C40463 * C47697 + (C35193 + C35192) * C47696) *
                 C153863) *
                C153849) *
               C153573) *
              C301 +
          (((((C39446 + C39447) * C47696 + (C39448 + C39449) * C47697 +
              (C58775 + C58776) * C153901) *
                 C153863 +
             (C40464 * C47696 + C59773 * C47697 + (C58777 + C58778) * C153901) *
                 C153684) *
                C153601 -
            ((C58765 * C153901 + C40466 * C47697 + (C35201 + C35200) * C47696) *
                 C153684 +
             (C58766 * C153901 + (C39447 + C39446) * C47697 +
              (C152081 * C156 - C34900 * C146 - C152081 * C157 +
               C153472 * C170 + C152100 * C154 - C34898 * C145 -
               C152100 * C155 + C153829 * C169) *
                  C47696) *
                 C153863) *
                C153849) *
               C153848 +
           ((((C35200 + C35201) * C47696 + C40464 * C47697 + C59773 * C153901) *
                 C153863 +
             ((C35202 + C35203) * C47696 + C40465 * C47697 +
              (C39452 + C39453) * C153901) *
                 C153684) *
                C153849 -
            (((C152081 * C6185 - C34900 * C6179 - C152081 * C6186 +
               C153472 * C6197 + C152100 * C6187 - C34898 * C6180 -
               C152100 * C6188 + C153829 * C6198) *
                  C153901 +
              (C39453 + C39452) * C47697 + C39074 * C47696) *
                 C153684 +
             ((C58778 + C58777) * C153901 + C58765 * C47697 + C40466 * C47696) *
                 C153863) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
                C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
                C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
                C11281 * C158 - C11282 * C147 - C11281 * C159 +
                C153862 * C171) *
                   C153637 * C153863 +
               (C11275 * C323 - C11276 * C307 - C11275 * C324 + C11269 * C343 +
                C11277 * C321 - C11278 * C306 - C11277 * C322 + C11270 * C342 +
                C11279 * C319 - C11280 * C305 - C11279 * C320 + C11271 * C341 +
                C11281 * C317 - C11282 * C304 - C11281 * C318 +
                C153862 * C340) *
                   C153637 * C153684) *
                  C153537 * C153521 * C130 -
              ((C11281 * C315 - C11282 * C303 - C11281 * C316 + C153862 * C339 +
                C11279 * C317 - C11280 * C304 - C11279 * C318 + C11271 * C340 +
                C11277 * C319 - C11278 * C305 - C11277 * C320 + C11270 * C341 +
                C11275 * C321 - C11276 * C306 - C11275 * C322 + C11269 * C342) *
                   C153637 * C153684 +
               (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
                C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
                C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
                C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                   C153637 * C153863) *
                  C153537 * C153521 * C131 +
              ((C11275 * C156 - C11276 * C146 - C11275 * C157 + C11269 * C170 +
                C11277 * C158 - C11278 * C147 - C11277 * C159 + C11270 * C171 +
                C11279 * C160 - C11280 * C148 - C11279 * C161 + C11271 * C172 +
                C11281 * C162 - C11282 * C149 - C11281 * C163 +
                C153862 * C173) *
                   C153637 * C153863 +
               (C11275 * C319 - C11276 * C305 - C11275 * C320 + C11269 * C341 +
                C11277 * C317 - C11278 * C304 - C11277 * C318 + C11270 * C340 +
                C11279 * C315 - C11280 * C303 - C11279 * C316 + C11271 * C339 +
                C11281 * C335 - C11282 * C313 - C11281 * C336 +
                C153862 * C349) *
                   C153637 * C153684) *
                  C153537 * C153521 * C132 -
              ((C11281 * C652 - C11282 * C651 - C11281 * C653 + C153862 * C654 +
                C11279 * C335 - C11280 * C313 - C11279 * C336 + C11271 * C349 +
                C11277 * C315 - C11278 * C303 - C11277 * C316 + C11270 * C339 +
                C11275 * C317 - C11276 * C304 - C11275 * C318 + C11269 * C340) *
                   C153637 * C153684 +
               (C11281 * C164 - C11282 * C150 - C11281 * C165 + C153862 * C174 +
                C11279 * C162 - C11280 * C149 - C11279 * C163 + C11271 * C173 +
                C11277 * C160 - C11278 * C148 - C11277 * C161 + C11270 * C172 +
                C11275 * C158 - C11276 * C147 - C11275 * C159 + C11269 * C171) *
                   C153637 * C153863) *
                  C153537 * C153521 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
                 C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
                 C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
                 C11281 * C158 - C11282 * C147 - C11281 * C159 +
                 C153862 * C171) *
                    C153637 * C153863 +
                (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
                   C153537 * C298 -
               ((C11578 + C11579 + C11580 + C11581) * C153637 * C153684 +
                (C11577 + C11576 + C11575 + C11574) * C153637 * C153863) *
                   C153537 * C299 +
               ((C11581 + C11580 + C11579 + C11578) * C153637 * C153863 +
                (C11275 * C1196 - C11276 * C1187 - C11275 * C1197 +
                 C11269 * C1202 + C11277 * C1194 - C11278 * C1186 -
                 C11277 * C1195 + C11270 * C1201 + C11279 * C1192 -
                 C11280 * C1185 - C11279 * C1193 + C11271 * C1200 +
                 C11281 * C1190 - C11282 * C1184 - C11281 * C1191 +
                 C153862 * C1199) *
                    C153637 * C153684) *
                   C153537 * C300) *
                  C301 +
              (((C11582 + C11583 + C11584 + C11585) * C153637 * C153863 +
                (C11586 + C11587 + C11588 + C11589) * C153637 * C153684) *
                   C153537 * C299 -
               ((C11585 + C11584 + C11583 + C11582) * C153637 * C153684 +
                (C11281 * C160 - C11282 * C148 - C11281 * C161 +
                 C153862 * C172 + C11279 * C158 - C11280 * C147 -
                 C11279 * C159 + C11271 * C171 + C11277 * C156 - C11278 * C146 -
                 C11277 * C157 + C11270 * C170 + C11275 * C154 - C11276 * C145 -
                 C11275 * C155 + C11269 * C169) *
                    C153637 * C153863) *
                   C153537 * C298 -
               ((C11281 * C1188 - C11282 * C1183 - C11281 * C1189 +
                 C153862 * C1198 + C11279 * C1190 - C11280 * C1184 -
                 C11279 * C1191 + C11271 * C1199 + C11277 * C1192 -
                 C11278 * C1185 - C11277 * C1193 + C11270 * C1200 +
                 C11275 * C1194 - C11276 * C1186 - C11275 * C1195 +
                 C11269 * C1201) *
                    C153637 * C153684 +
                (C11589 + C11588 + C11587 + C11586) * C153637 * C153863) *
                   C153537 * C300) *
                  C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153637 * C153863 +
            (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
               C473 -
           ((C11281 * C957 - C11282 * C948 - C11281 * C958 + C153862 * C966 +
             C11279 * C955 - C11280 * C947 - C11279 * C956 + C11271 * C965 +
             C11277 * C953 - C11278 * C946 - C11277 * C954 + C11270 * C964 +
             C11275 * C951 - C11276 * C945 - C11275 * C952 + C11269 * C963) *
                C153637 * C153684 +
            (C11281 * C490 - C11282 * C477 - C11281 * C491 + C153862 * C513 +
             C11279 * C492 - C11280 * C478 - C11279 * C493 + C11271 * C514 +
             C11277 * C494 - C11278 * C479 - C11277 * C495 + C11270 * C515 +
             C11275 * C496 - C11276 * C480 - C11275 * C497 + C11269 * C516) *
                C153637 * C153863) *
               C474 +
           ((C11275 * C498 - C11276 * C481 - C11275 * C499 + C11269 * C517 +
             C11277 * C500 - C11278 * C482 - C11277 * C501 + C11270 * C518 +
             C11279 * C502 - C11280 * C483 - C11279 * C503 + C11271 * C519 +
             C11281 * C504 - C11282 * C484 - C11281 * C505 + C153862 * C520) *
                C153637 * C153863 +
            (C11275 * C1338 - C11276 * C1329 - C11275 * C1339 + C11269 * C1344 +
             C11277 * C1336 - C11278 * C1328 - C11277 * C1337 + C11270 * C1343 +
             C11279 * C1334 - C11280 * C1327 - C11279 * C1335 + C11271 * C1342 +
             C11281 * C1332 - C11282 * C1326 - C11281 * C1333 +
             C153862 * C1341) *
                C153637 * C153684) *
               C475) *
              C153521 * C301 +
          (((C11275 * C494 - C11276 * C479 - C11275 * C495 + C11269 * C515 +
             C11277 * C492 - C11278 * C478 - C11277 * C493 + C11270 * C514 +
             C11279 * C490 - C11280 * C477 - C11279 * C491 + C11271 * C513 +
             C11281 * C488 - C11282 * C476 - C11281 * C489 + C153862 * C512) *
                C153637 * C153863 +
            (C11275 * C953 - C11276 * C946 - C11275 * C954 + C11269 * C964 +
             C11277 * C955 - C11278 * C947 - C11277 * C956 + C11270 * C965 +
             C11279 * C957 - C11280 * C948 - C11279 * C958 + C11271 * C966 +
             C11281 * C959 - C11282 * C949 - C11281 * C960 + C153862 * C967) *
                C153637 * C153684) *
               C474 -
           ((C11585 + C11584 + C11583 + C11582) * C153637 * C153684 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153637 * C153863) *
               C473 -
           ((C11281 * C1330 - C11282 * C1325 - C11281 * C1331 +
             C153862 * C1340 + C11279 * C1332 - C11280 * C1326 -
             C11279 * C1333 + C11271 * C1341 + C11277 * C1334 - C11278 * C1327 -
             C11277 * C1335 + C11270 * C1342 + C11275 * C1336 - C11276 * C1328 -
             C11275 * C1337 + C11269 * C1343) *
                C153637 * C153684 +
            (C11281 * C506 - C11282 * C485 - C11281 * C507 + C153862 * C521 +
             C11279 * C504 - C11280 * C484 - C11279 * C505 + C11271 * C520 +
             C11277 * C502 - C11278 * C483 - C11277 * C503 + C11270 * C519 +
             C11275 * C500 - C11276 * C482 - C11275 * C501 + C11269 * C518) *
                C153637 * C153863) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
            C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
               C153637 * C34893 +
           (C152100 * C323 - C34898 * C307 - C152100 * C324 + C153829 * C343 +
            C152081 * C321 - C34900 * C306 - C152081 * C322 + C153472 * C342) *
               C153637 * C34894 +
           (C152100 * C325 - C34898 * C308 - C152100 * C326 + C153829 * C344 +
            C152081 * C327 - C34900 * C309 - C152081 * C328 + C153472 * C345) *
               C153637 * C34895 +
           (C152100 * C1196 - C34898 * C1187 - C152100 * C1197 +
            C153829 * C1202 + C152081 * C1194 - C34900 * C1186 -
            C152081 * C1195 + C153472 * C1201) *
               C153637 * C153871) *
              C153537 * C153521 * C130 -
          ((C152081 * C1192 - C34900 * C1185 - C152081 * C1193 +
            C153472 * C1200 + C152100 * C1194 - C34898 * C1186 -
            C152100 * C1195 + C153829 * C1201) *
               C153637 * C153871 +
           (C152081 * C329 - C34900 * C310 - C152081 * C330 + C153472 * C346 +
            C152100 * C327 - C34898 * C309 - C152100 * C328 + C153829 * C345) *
               C153637 * C34895 +
           (C152081 * C319 - C34900 * C305 - C152081 * C320 + C153472 * C341 +
            C152100 * C321 - C34898 * C306 - C152100 * C322 + C153829 * C342) *
               C153637 * C34894 +
           (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
            C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
               C153637 * C34893) *
              C153537 * C153521 * C131 +
          ((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
            C152081 * C158 - C34900 * C147 - C152081 * C159 + C153472 * C171) *
               C153637 * C34893 +
           (C152100 * C319 - C34898 * C305 - C152100 * C320 + C153829 * C341 +
            C152081 * C317 - C34900 * C304 - C152081 * C318 + C153472 * C340) *
               C153637 * C34894 +
           (C152100 * C329 - C34898 * C310 - C152100 * C330 + C153829 * C346 +
            C152081 * C331 - C34900 * C311 - C152081 * C332 + C153472 * C347) *
               C153637 * C34895 +
           (C152100 * C1192 - C34898 * C1185 - C152100 * C1193 +
            C153829 * C1200 + C152081 * C1190 - C34900 * C1184 -
            C152081 * C1191 + C153472 * C1199) *
               C153637 * C153871) *
              C153537 * C153521 * C132 -
          ((C152081 * C1188 - C34900 * C1183 - C152081 * C1189 +
            C153472 * C1198 + C152100 * C1190 - C34898 * C1184 -
            C152100 * C1191 + C153829 * C1199) *
               C153637 * C153871 +
           (C152081 * C333 - C34900 * C312 - C152081 * C334 + C153472 * C348 +
            C152100 * C331 - C34898 * C311 - C152100 * C332 + C153829 * C347) *
               C153637 * C34895 +
           (C152081 * C315 - C34900 * C303 - C152081 * C316 + C153472 * C339 +
            C152100 * C317 - C34898 * C304 - C152100 * C318 + C153829 * C340) *
               C153637 * C34894 +
           (C152081 * C160 - C34900 * C148 - C152081 * C161 + C153472 * C172 +
            C152100 * C158 - C34898 * C147 - C152100 * C159 + C153829 * C171) *
               C153637 * C34893) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153637 * C34893 +
            (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
            C35213 * C153871) *
               C153537 * C298 -
           ((C35198 + C35199) * C153637 * C153871 +
            (C35197 + C35196) * C153637 * C34895 +
            (C35195 + C35194) * C153637 * C34894 +
            (C35193 + C35192) * C153637 * C34893) *
               C153537 * C299 +
           (C35212 * C34893 + C35213 * C34894 +
            (C35199 + C35198) * C153637 * C34895 +
            (C152100 * C4534 - C34898 * C4529 - C152100 * C4535 +
             C153829 * C4538 + C152081 * C4532 - C34900 * C4528 -
             C152081 * C4533 + C153472 * C4537) *
                C153637 * C153871) *
               C153537 * C300) *
              C301 +
          (((C35200 + C35201) * C153637 * C34893 +
            (C35202 + C35203) * C153637 * C34894 +
            (C35204 + C35205) * C153637 * C34895 +
            (C35206 + C35207) * C153637 * C153871) *
               C153537 * C299 -
           (C35214 * C153871 + C35215 * C34895 +
            (C35201 + C35200) * C153637 * C34894 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C153637 * C34893) *
               C153537 * C298 -
           ((C152081 * C4530 - C34900 * C4527 - C152081 * C4531 +
             C153472 * C4536 + C152100 * C4532 - C34898 * C4528 -
             C152100 * C4533 + C153829 * C4537) *
                C153637 * C153871 +
            (C35207 + C35206) * C153637 * C34895 + C35214 * C34894 +
            C35215 * C34893) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153637 * C34893 +
            (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
            C35213 * C153871) *
               C473 -
           ((C152081 * C4069 - C34900 * C4064 - C152081 * C4070 +
             C153472 * C4076 + C152100 * C4067 - C34898 * C4063 -
             C152100 * C4068 + C153829 * C4075) *
                C153637 * C153871 +
            (C152081 * C1767 - C34900 * C1759 - C152081 * C1768 +
             C153472 * C1774 + C152100 * C1769 - C34898 * C1760 -
             C152100 * C1770 + C153829 * C1775) *
                C153637 * C34895 +
            (C152081 * C953 - C34900 * C946 - C152081 * C954 + C153472 * C964 +
             C152100 * C951 - C34898 * C945 - C152100 * C952 + C153829 * C963) *
                C153637 * C34894 +
            (C152081 * C494 - C34900 * C479 - C152081 * C495 + C153472 * C515 +
             C152100 * C496 - C34898 * C480 - C152100 * C497 + C153829 * C516) *
                C153637 * C34893) *
               C474 +
           ((C152100 * C498 - C34898 * C481 - C152100 * C499 + C153829 * C517 +
             C152081 * C500 - C34900 * C482 - C152081 * C501 + C153472 * C518) *
                C153637 * C34893 +
            (C152100 * C1338 - C34898 * C1329 - C152100 * C1339 +
             C153829 * C1344 + C152081 * C1336 - C34900 * C1328 -
             C152081 * C1337 + C153472 * C1343) *
                C153637 * C34894 +
            (C152100 * C3283 - C34898 * C3279 - C152100 * C3284 +
             C153829 * C3291 + C152081 * C3285 - C34900 * C3280 -
             C152081 * C3286 + C153472 * C3292) *
                C153637 * C34895 +
            (C152100 * C4788 - C34898 * C4783 - C152100 * C4789 +
             C153829 * C4792 + C152081 * C4786 - C34900 * C4782 -
             C152081 * C4787 + C153472 * C4791) *
                C153637 * C153871) *
               C475) *
              C153521 * C301 +
          (((C152100 * C494 - C34898 * C479 - C152100 * C495 + C153829 * C515 +
             C152081 * C492 - C34900 * C478 - C152081 * C493 + C153472 * C514) *
                C153637 * C34893 +
            (C152100 * C953 - C34898 * C946 - C152100 * C954 + C153829 * C964 +
             C152081 * C955 - C34900 * C947 - C152081 * C956 + C153472 * C965) *
                C153637 * C34894 +
            (C152100 * C1767 - C34898 * C1759 - C152100 * C1768 +
             C153829 * C1774 + C152081 * C1765 - C34900 * C1758 -
             C152081 * C1766 + C153472 * C1773) *
                C153637 * C34895 +
            (C152100 * C4069 - C34898 * C4064 - C152100 * C4070 +
             C153829 * C4076 + C152081 * C4071 - C34900 * C4065 -
             C152081 * C4072 + C153472 * C4077) *
                C153637 * C153871) *
               C474 -
           (C35214 * C153871 + C35215 * C34895 +
            (C35201 + C35200) * C153637 * C34894 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C153637 * C34893) *
               C473 -
           ((C152081 * C4784 - C34900 * C4781 - C152081 * C4785 +
             C153472 * C4790 + C152100 * C4786 - C34898 * C4782 -
             C152100 * C4787 + C153829 * C4791) *
                C153637 * C153871 +
            (C152081 * C3287 - C34900 * C3281 - C152081 * C3288 +
             C153472 * C3293 + C152100 * C3285 - C34898 * C3280 -
             C152100 * C3286 + C153829 * C3292) *
                C153637 * C34895 +
            (C152081 * C1334 - C34900 * C1327 - C152081 * C1335 +
             C153472 * C1342 + C152100 * C1336 - C34898 * C1328 -
             C152100 * C1337 + C153829 * C1343) *
                C153637 * C34894 +
            (C152081 * C502 - C34900 * C483 - C152081 * C503 + C153472 * C519 +
             C152100 * C500 - C34898 * C482 - C152100 * C501 + C153829 * C518) *
                C153637 * C34893) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C47696 +
            (C39442 + C39443) * C47697 + (C39445 + C39444) * C153901) *
               C153863 +
           ((C35192 + C35193) * C47696 + C40462 * C47697 + C41246 * C153901) *
               C153684) *
              C153537 * C153521 * C130 -
          (((C39451 + C39450) * C153901 + C40466 * C47697 +
            (C35201 + C35200) * C47696) *
               C153684 +
           ((C39449 + C39448) * C153901 + (C39447 + C39446) * C47697 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C47696) *
               C153863) *
              C153537 * C153521 * C131 +
          (((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
             C152081 * C158 - C34900 * C147 - C152081 * C159 + C153472 * C171) *
                C47696 +
            (C40074 + C40075) * C47697 +
            (C152100 * C502 - C34898 * C483 - C152100 * C503 + C153829 * C519 +
             C152081 * C504 - C34900 * C484 - C152081 * C505 + C153472 * C520) *
                C153901) *
               C153863 +
           ((C35640 + C35641) * C47696 + (C39768 + C39769) * C47697 +
            (C152100 * C1334 - C34898 * C1327 - C152100 * C1335 +
             C153829 * C1342 + C152081 * C1332 - C34900 * C1326 -
             C152081 * C1333 + C153472 * C1341) *
                C153901) *
               C153684) *
              C153537 * C153521 * C132 -
          (((C152081 * C1330 - C34900 * C1325 - C152081 * C1331 +
             C153472 * C1340 + C152100 * C1332 - C34898 * C1326 -
             C152100 * C1333 + C153829 * C1341) *
                C153901 +
            (C152081 * C959 - C34900 * C949 - C152081 * C960 + C153472 * C967 +
             C152100 * C957 - C34898 * C948 - C152100 * C958 + C153829 * C966) *
                C47697 +
            (C152081 * C315 - C34900 * C303 - C152081 * C316 + C153472 * C339 +
             C152100 * C317 - C34898 * C304 - C152100 * C318 + C153829 * C340) *
                C47696) *
               C153684 +
           ((C152081 * C506 - C34900 * C485 - C152081 * C507 + C153472 * C521 +
             C152100 * C504 - C34898 * C484 - C152100 * C505 + C153829 * C520) *
                C153901 +
            (C152081 * C488 - C34900 * C476 - C152081 * C489 + C153472 * C512 +
             C152100 * C490 - C34898 * C477 - C152100 * C491 + C153829 * C513) *
                C47697 +
            (C152081 * C160 - C34900 * C148 - C152081 * C161 + C153472 * C172 +
             C152100 * C158 - C34898 * C147 - C152100 * C159 + C153829 * C171) *
                C47696) *
               C153863) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C47696 +
             (C39442 + C39443) * C47697 + (C39445 + C39444) * C153901) *
                C153863 +
            ((C35192 + C35193) * C47696 + C40462 * C47697 + C41246 * C153901) *
                C153684) *
               C153537 * C298 -
           ((C41244 * C153901 + C37407 * C47697 + (C35195 + C35194) * C47696) *
                C153684 +
            (C41245 * C153901 + C40463 * C47697 + (C35193 + C35192) * C47696) *
                C153863) *
               C153537 * C299 +
           ((C35208 * C47696 + C39073 * C47697 + C41255 * C153901) * C153863 +
            (C35209 * C47696 + C42244 * C47697 + (C36758 + C36759) * C153901) *
                C153684) *
               C153537 * C300) *
              C301 +
          ((((C35200 + C35201) * C47696 + C40464 * C47697 +
             (C39450 + C39451) * C153901) *
                C153863 +
            ((C35202 + C35203) * C47696 + C40465 * C47697 +
             (C39452 + C39453) * C153901) *
                C153684) *
               C153537 * C299 -
           (((C39451 + C39450) * C153901 + C40466 * C47697 +
             (C35201 + C35200) * C47696) *
                C153684 +
            ((C39449 + C39448) * C153901 + (C39447 + C39446) * C47697 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C47696) *
                C153863) *
               C153537 * C298 -
           (((C152081 * C4784 - C34900 * C4781 - C152081 * C4785 +
              C153472 * C4790 + C152100 * C4786 - C34898 * C4782 -
              C152100 * C4787 + C153829 * C4791) *
                 C153901 +
             (C36181 + C36180) * C47697 + C35210 * C47696) *
                C153684 +
            ((C39453 + C39452) * C153901 + C39074 * C47697 + C35211 * C47696) *
                C153863) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C47696 +
             (C39442 + C39443) * C47697 + C58748 * C153901) *
                C153863 +
            ((C35192 + C35193) * C47696 + C40462 * C47697 + C41246 * C153901) *
                C153684) *
               C473 -
           (((C41273 + C41272) * C153901 + C41245 * C47697 + C40463 * C47696) *
                C153684 +
            ((C43033 + C43032) * C153901 + (C39444 + C39445) * C47697 +
             (C39443 + C39442) * C47696) *
                C153863) *
               C474 +
           ((C58748 * C47696 + (C43032 + C43033) * C47697 +
             (C152100 * C7518 - C34898 * C7514 - C152100 * C7519 +
              C153829 * C7526 + C152081 * C7520 - C34900 * C7515 -
              C152081 * C7521 + C153472 * C7527) *
                 C153901) *
                C153863 +
            (C41246 * C47696 + (C41272 + C41273) * C47697 +
             (C152100 * C9042 - C34898 * C9037 - C152100 * C9043 +
              C153829 * C9046 + C152081 * C9040 - C34900 * C9036 -
              C152081 * C9041 + C153472 * C9045) *
                 C153901) *
                C153684) *
               C475) *
              C153521 * C301 +
          ((((C39446 + C39447) * C47696 + (C39448 + C39449) * C47697 +
             (C58775 + C58776) * C153901) *
                C153863 +
            (C40464 * C47696 + (C39450 + C39451) * C47697 +
             (C58777 + C58778) * C153901) *
                C153684) *
               C474 -
           ((C58765 * C153901 + C40466 * C47697 + (C35201 + C35200) * C47696) *
                C153684 +
            (C58766 * C153901 + (C39447 + C39446) * C47697 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C47696) *
                C153863) *
               C473 -
           (((C152081 * C9038 - C34900 * C9035 - C152081 * C9039 +
              C153472 * C9044 + C152100 * C9040 - C34898 * C9036 -
              C152100 * C9041 + C153829 * C9045) *
                 C153901 +
             (C58778 + C58777) * C47697 + C58765 * C47696) *
                C153684 +
            ((C152081 * C7522 - C34900 * C7516 - C152081 * C7523 +
              C153472 * C7528 + C152100 * C7520 - C34898 * C7515 -
              C152100 * C7521 + C153829 * C7527) *
                 C153901 +
             (C58776 + C58775) * C47697 + C58766 * C47696) *
                C153863) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153637 * C34893 +
            (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
            C35213 * C153871) *
               C153849 -
           ((C152081 * C4069 - C34900 * C4064 - C152081 * C4070 +
             C153472 * C4076 + C152100 * C4067 - C34898 * C4063 -
             C152100 * C4068 + C153829 * C4075) *
                C153637 * C153871 +
            (C152081 * C1767 - C34900 * C1759 - C152081 * C1768 +
             C153472 * C1774 + C152100 * C1769 - C34898 * C1760 -
             C152100 * C1770 + C153829 * C1775) *
                C153637 * C34895 +
            (C152081 * C953 - C34900 * C946 - C152081 * C954 + C153472 * C964 +
             C152100 * C951 - C34898 * C945 - C152100 * C952 + C153829 * C963) *
                C153637 * C34894 +
            (C152081 * C494 - C34900 * C479 - C152081 * C495 + C153472 * C515 +
             C152100 * C496 - C34898 * C480 - C152100 * C497 + C153829 * C516) *
                C153637 * C34893) *
               C153601) *
              C153521 * C153917 +
          (((C152100 * C494 - C34898 * C479 - C152100 * C495 + C153829 * C515 +
             C152081 * C492 - C34900 * C478 - C152081 * C493 + C153472 * C514) *
                C153637 * C34893 +
            (C152100 * C953 - C34898 * C946 - C152100 * C954 + C153829 * C964 +
             C152081 * C955 - C34900 * C947 - C152081 * C956 + C153472 * C965) *
                C153637 * C34894 +
            (C152100 * C1767 - C34898 * C1759 - C152100 * C1768 +
             C153829 * C1774 + C152081 * C1765 - C34900 * C1758 -
             C152081 * C1766 + C153472 * C1773) *
                C153637 * C34895 +
            (C152100 * C4069 - C34898 * C4064 - C152100 * C4070 +
             C153829 * C4076 + C152081 * C4071 - C34900 * C4065 -
             C152081 * C4072 + C153472 * C4077) *
                C153637 * C153871) *
               C153601 -
           (C35214 * C153871 + C35215 * C34895 +
            (C35201 + C35200) * C153637 * C34894 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C153637 * C34893) *
               C153849) *
              C153521 * C153918 +
          (((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
             C152081 * C158 - C34900 * C147 - C152081 * C159 + C153472 * C171) *
                C153637 * C34893 +
            (C35640 + C35641) * C153637 * C34894 +
            (C35642 + C35643) * C153637 * C34895 +
            (C35644 + C35645) * C153637 * C153871) *
               C153849 -
           ((C152081 * C4073 - C34900 * C4066 - C152081 * C4074 +
             C153472 * C4078 + C152100 * C4071 - C34898 * C4065 -
             C152100 * C4072 + C153829 * C4077) *
                C153637 * C153871 +
            (C152081 * C1763 - C34900 * C1757 - C152081 * C1764 +
             C153472 * C1772 + C152100 * C1765 - C34898 * C1758 -
             C152100 * C1766 + C153829 * C1773) *
                C153637 * C34895 +
            (C152081 * C957 - C34900 * C948 - C152081 * C958 + C153472 * C966 +
             C152100 * C955 - C34898 * C947 - C152100 * C956 + C153829 * C965) *
                C153637 * C34894 +
            (C152081 * C490 - C34900 * C477 - C152081 * C491 + C153472 * C513 +
             C152100 * C492 - C34898 * C478 - C152100 * C493 + C153829 * C514) *
                C153637 * C34893) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153637 * C153863 +
            (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
               C153849 -
           ((C11281 * C957 - C11282 * C948 - C11281 * C958 + C153862 * C966 +
             C11279 * C955 - C11280 * C947 - C11279 * C956 + C11271 * C965 +
             C11277 * C953 - C11278 * C946 - C11277 * C954 + C11270 * C964 +
             C11275 * C951 - C11276 * C945 - C11275 * C952 + C11269 * C963) *
                C153637 * C153684 +
            (C11281 * C490 - C11282 * C477 - C11281 * C491 + C153862 * C513 +
             C11279 * C492 - C11280 * C478 - C11279 * C493 + C11271 * C514 +
             C11277 * C494 - C11278 * C479 - C11277 * C495 + C11270 * C515 +
             C11275 * C496 - C11276 * C480 - C11275 * C497 + C11269 * C516) *
                C153637 * C153863) *
               C153601) *
              C153521 * C153917 +
          (((C11275 * C494 - C11276 * C479 - C11275 * C495 + C11269 * C515 +
             C11277 * C492 - C11278 * C478 - C11277 * C493 + C11270 * C514 +
             C11279 * C490 - C11280 * C477 - C11279 * C491 + C11271 * C513 +
             C11281 * C488 - C11282 * C476 - C11281 * C489 + C153862 * C512) *
                C153637 * C153863 +
            (C11275 * C953 - C11276 * C946 - C11275 * C954 + C11269 * C964 +
             C11277 * C955 - C11278 * C947 - C11277 * C956 + C11270 * C965 +
             C11279 * C957 - C11280 * C948 - C11279 * C958 + C11271 * C966 +
             C11281 * C959 - C11282 * C949 - C11281 * C960 + C153862 * C967) *
                C153637 * C153684) *
               C153601 -
           ((C11585 + C11584 + C11583 + C11582) * C153637 * C153684 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153637 * C153863) *
               C153849) *
              C153521 * C153918 +
          (((C11275 * C156 - C11276 * C146 - C11275 * C157 + C11269 * C170 +
             C11277 * C158 - C11278 * C147 - C11277 * C159 + C11270 * C171 +
             C11279 * C160 - C11280 * C148 - C11279 * C161 + C11271 * C172 +
             C11281 * C162 - C11282 * C149 - C11281 * C163 + C153862 * C173) *
                C153637 * C153863 +
            (C12002 + C12003 + C12004 + C12005) * C153637 * C153684) *
               C153849 -
           ((C11281 * C961 - C11282 * C950 - C11281 * C962 + C153862 * C968 +
             C11279 * C959 - C11280 * C949 - C11279 * C960 + C11271 * C967 +
             C11277 * C957 - C11278 * C948 - C11277 * C958 + C11270 * C966 +
             C11275 * C955 - C11276 * C947 - C11275 * C956 + C11269 * C965) *
                C153637 * C153684 +
            (C11281 * C508 - C11282 * C486 - C11281 * C509 + C153862 * C522 +
             C11279 * C488 - C11280 * C476 - C11279 * C489 + C11271 * C512 +
             C11277 * C490 - C11278 * C477 - C11277 * C491 + C11270 * C513 +
             C11275 * C492 - C11276 * C478 - C11275 * C493 + C11269 * C514) *
                C153637 * C153863) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C47696 +
             (C39442 + C39443) * C47697 + C58748 * C153901) *
                C153863 +
            ((C35192 + C35193) * C47696 + C40462 * C47697 + C41246 * C153901) *
                C153684) *
               C153849 -
           (((C41273 + C41272) * C153901 + C41245 * C47697 + C40463 * C47696) *
                C153684 +
            ((C43033 + C43032) * C153901 + (C39444 + C39445) * C47697 +
             (C39443 + C39442) * C47696) *
                C153863) *
               C153601) *
              C153521 * C153917 +
          ((((C39446 + C39447) * C47696 + (C39448 + C39449) * C47697 +
             (C58775 + C58776) * C153901) *
                C153863 +
            (C40464 * C47696 + (C39450 + C39451) * C47697 +
             (C58777 + C58778) * C153901) *
                C153684) *
               C153601 -
           ((C58765 * C153901 + C40466 * C47697 + (C35201 + C35200) * C47696) *
                C153684 +
            (C58766 * C153901 + (C39447 + C39446) * C47697 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C47696) *
                C153863) *
               C153849) *
              C153521 * C153918 +
          ((((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
              C152081 * C158 - C34900 * C147 - C152081 * C159 +
              C153472 * C171) *
                 C47696 +
             (C40074 + C40075) * C47697 + (C59385 + C59386) * C153901) *
                C153863 +
            ((C35640 + C35641) * C47696 + (C39768 + C39769) * C47697 +
             (C59081 + C59082) * C153901) *
                C153684) *
               C153849 -
           (((C152081 * C8429 - C34900 * C8428 - C152081 * C8430 +
              C153472 * C8431 + C152100 * C6191 - C34898 * C6182 -
              C152100 * C6192 + C153829 * C6200) *
                 C153901 +
             (C59082 + C59081) * C47697 + (C39769 + C39768) * C47696) *
                C153684 +
            ((C152081 * C2115 - C34900 * C2109 - C152081 * C2116 +
              C153472 * C2124 + C152100 * C2117 - C34898 * C2110 -
              C152100 * C2118 + C153829 * C2125) *
                 C153901 +
             (C59386 + C59385) * C47697 + (C40075 + C40074) * C47696) *
                C153863) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153637 * C153863 +
            (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
               C153537 * C298 -
           ((C11578 + C11579 + C11580 + C11581) * C153637 * C153684 +
            (C11577 + C11576 + C11575 + C11574) * C153637 * C153863) *
               C153537 * C299 +
           ((C11581 + C11580 + C11579 + C11578) * C153637 * C153863 +
            (C11275 * C1196 - C11276 * C1187 - C11275 * C1197 + C11269 * C1202 +
             C11277 * C1194 - C11278 * C1186 - C11277 * C1195 + C11270 * C1201 +
             C11279 * C1192 - C11280 * C1185 - C11279 * C1193 + C11271 * C1200 +
             C11281 * C1190 - C11282 * C1184 - C11281 * C1191 +
             C153862 * C1199) *
                C153637 * C153684) *
               C153537 * C300) *
              C301 +
          (((C11582 + C11583 + C11584 + C11585) * C153637 * C153863 +
            (C11586 + C11587 + C11588 + C11589) * C153637 * C153684) *
               C153537 * C299 -
           ((C11585 + C11584 + C11583 + C11582) * C153637 * C153684 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153637 * C153863) *
               C153537 * C298 -
           ((C11281 * C1188 - C11282 * C1183 - C11281 * C1189 +
             C153862 * C1198 + C11279 * C1190 - C11280 * C1184 -
             C11279 * C1191 + C11271 * C1199 + C11277 * C1192 - C11278 * C1185 -
             C11277 * C1193 + C11270 * C1200 + C11275 * C1194 - C11276 * C1186 -
             C11275 * C1195 + C11269 * C1201) *
                C153637 * C153684 +
            (C11589 + C11588 + C11587 + C11586) * C153637 * C153863) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
            C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
            C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
            C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
               C153637 * C153863 +
           (C11275 * C323 - C11276 * C307 - C11275 * C324 + C11269 * C343 +
            C11277 * C321 - C11278 * C306 - C11277 * C322 + C11270 * C342 +
            C11279 * C319 - C11280 * C305 - C11279 * C320 + C11271 * C341 +
            C11281 * C317 - C11282 * C304 - C11281 * C318 + C153862 * C340) *
               C153637 * C153684) *
              C153537 * C153521 * C130 -
          ((C11281 * C315 - C11282 * C303 - C11281 * C316 + C153862 * C339 +
            C11279 * C317 - C11280 * C304 - C11279 * C318 + C11271 * C340 +
            C11277 * C319 - C11278 * C305 - C11277 * C320 + C11270 * C341 +
            C11275 * C321 - C11276 * C306 - C11275 * C322 + C11269 * C342) *
               C153637 * C153684 +
           (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
            C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
            C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
            C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
               C153637 * C153863) *
              C153537 * C153521 * C131 +
          ((C11275 * C156 - C11276 * C146 - C11275 * C157 + C11269 * C170 +
            C11277 * C158 - C11278 * C147 - C11277 * C159 + C11270 * C171 +
            C11279 * C160 - C11280 * C148 - C11279 * C161 + C11271 * C172 +
            C11281 * C162 - C11282 * C149 - C11281 * C163 + C153862 * C173) *
               C153637 * C153863 +
           (C11275 * C319 - C11276 * C305 - C11275 * C320 + C11269 * C341 +
            C11277 * C317 - C11278 * C304 - C11277 * C318 + C11270 * C340 +
            C11279 * C315 - C11280 * C303 - C11279 * C316 + C11271 * C339 +
            C11281 * C335 - C11282 * C313 - C11281 * C336 + C153862 * C349) *
               C153637 * C153684) *
              C153537 * C153521 * C132 -
          ((C11281 * C652 - C11282 * C651 - C11281 * C653 + C153862 * C654 +
            C11279 * C335 - C11280 * C313 - C11279 * C336 + C11271 * C349 +
            C11277 * C315 - C11278 * C303 - C11277 * C316 + C11270 * C339 +
            C11275 * C317 - C11276 * C304 - C11275 * C318 + C11269 * C340) *
               C153637 * C153684 +
           (C11281 * C164 - C11282 * C150 - C11281 * C165 + C153862 * C174 +
            C11279 * C162 - C11280 * C149 - C11279 * C163 + C11271 * C173 +
            C11277 * C160 - C11278 * C148 - C11277 * C161 + C11270 * C172 +
            C11275 * C158 - C11276 * C147 - C11275 * C159 + C11269 * C171) *
               C153637 * C153863) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
            C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
               C153637 * C34893 +
           (C152100 * C323 - C34898 * C307 - C152100 * C324 + C153829 * C343 +
            C152081 * C321 - C34900 * C306 - C152081 * C322 + C153472 * C342) *
               C153637 * C34894 +
           (C152100 * C325 - C34898 * C308 - C152100 * C326 + C153829 * C344 +
            C152081 * C327 - C34900 * C309 - C152081 * C328 + C153472 * C345) *
               C153637 * C34895 +
           (C152100 * C1196 - C34898 * C1187 - C152100 * C1197 +
            C153829 * C1202 + C152081 * C1194 - C34900 * C1186 -
            C152081 * C1195 + C153472 * C1201) *
               C153637 * C153871) *
              C153537 * C153521 * C130 -
          ((C152081 * C1192 - C34900 * C1185 - C152081 * C1193 +
            C153472 * C1200 + C152100 * C1194 - C34898 * C1186 -
            C152100 * C1195 + C153829 * C1201) *
               C153637 * C153871 +
           (C152081 * C329 - C34900 * C310 - C152081 * C330 + C153472 * C346 +
            C152100 * C327 - C34898 * C309 - C152100 * C328 + C153829 * C345) *
               C153637 * C34895 +
           (C152081 * C319 - C34900 * C305 - C152081 * C320 + C153472 * C341 +
            C152100 * C321 - C34898 * C306 - C152100 * C322 + C153829 * C342) *
               C153637 * C34894 +
           (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
            C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
               C153637 * C34893) *
              C153537 * C153521 * C131 +
          ((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
            C152081 * C158 - C34900 * C147 - C152081 * C159 + C153472 * C171) *
               C153637 * C34893 +
           (C152100 * C319 - C34898 * C305 - C152100 * C320 + C153829 * C341 +
            C152081 * C317 - C34900 * C304 - C152081 * C318 + C153472 * C340) *
               C153637 * C34894 +
           (C152100 * C329 - C34898 * C310 - C152100 * C330 + C153829 * C346 +
            C152081 * C331 - C34900 * C311 - C152081 * C332 + C153472 * C347) *
               C153637 * C34895 +
           (C152100 * C1192 - C34898 * C1185 - C152100 * C1193 +
            C153829 * C1200 + C152081 * C1190 - C34900 * C1184 -
            C152081 * C1191 + C153472 * C1199) *
               C153637 * C153871) *
              C153537 * C153521 * C132 -
          ((C152081 * C1188 - C34900 * C1183 - C152081 * C1189 +
            C153472 * C1198 + C152100 * C1190 - C34898 * C1184 -
            C152100 * C1191 + C153829 * C1199) *
               C153637 * C153871 +
           (C152081 * C333 - C34900 * C312 - C152081 * C334 + C153472 * C348 +
            C152100 * C331 - C34898 * C311 - C152100 * C332 + C153829 * C347) *
               C153637 * C34895 +
           (C152081 * C315 - C34900 * C303 - C152081 * C316 + C153472 * C339 +
            C152100 * C317 - C34898 * C304 - C152100 * C318 + C153829 * C340) *
               C153637 * C34894 +
           (C152081 * C160 - C34900 * C148 - C152081 * C161 + C153472 * C172 +
            C152100 * C158 - C34898 * C147 - C152100 * C159 + C153829 * C171) *
               C153637 * C34893) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153637 * C34893 +
            (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
            C35213 * C153871) *
               C153537 * C298 -
           ((C35198 + C35199) * C153637 * C153871 +
            (C35197 + C35196) * C153637 * C34895 +
            (C35195 + C35194) * C153637 * C34894 +
            (C35193 + C35192) * C153637 * C34893) *
               C153537 * C299 +
           (C35212 * C34893 + C35213 * C34894 +
            (C35199 + C35198) * C153637 * C34895 +
            (C152100 * C4534 - C34898 * C4529 - C152100 * C4535 +
             C153829 * C4538 + C152081 * C4532 - C34900 * C4528 -
             C152081 * C4533 + C153472 * C4537) *
                C153637 * C153871) *
               C153537 * C300) *
              C301 +
          (((C35200 + C35201) * C153637 * C34893 +
            (C35202 + C35203) * C153637 * C34894 +
            (C35204 + C35205) * C153637 * C34895 +
            (C35206 + C35207) * C153637 * C153871) *
               C153537 * C299 -
           (C35214 * C153871 + C35215 * C34895 +
            (C35201 + C35200) * C153637 * C34894 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C153637 * C34893) *
               C153537 * C298 -
           ((C152081 * C4530 - C34900 * C4527 - C152081 * C4531 +
             C153472 * C4536 + C152100 * C4532 - C34898 * C4528 -
             C152100 * C4533 + C153829 * C4537) *
                C153637 * C153871 +
            (C35207 + C35206) * C153637 * C34895 + C35214 * C34894 +
            C35215 * C34893) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C47696 +
            (C39442 + C39443) * C47697 + (C39445 + C39444) * C153901) *
               C153863 +
           ((C35192 + C35193) * C47696 + C40462 * C47697 + C41246 * C153901) *
               C153684) *
              C153537 * C153521 * C130 -
          (((C39451 + C39450) * C153901 + C40466 * C47697 +
            (C35201 + C35200) * C47696) *
               C153684 +
           ((C39449 + C39448) * C153901 + (C39447 + C39446) * C47697 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C47696) *
               C153863) *
              C153537 * C153521 * C131 +
          (((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
             C152081 * C158 - C34900 * C147 - C152081 * C159 + C153472 * C171) *
                C47696 +
            (C40074 + C40075) * C47697 +
            (C152100 * C502 - C34898 * C483 - C152100 * C503 + C153829 * C519 +
             C152081 * C504 - C34900 * C484 - C152081 * C505 + C153472 * C520) *
                C153901) *
               C153863 +
           ((C35640 + C35641) * C47696 + (C39768 + C39769) * C47697 +
            (C152100 * C1334 - C34898 * C1327 - C152100 * C1335 +
             C153829 * C1342 + C152081 * C1332 - C34900 * C1326 -
             C152081 * C1333 + C153472 * C1341) *
                C153901) *
               C153684) *
              C153537 * C153521 * C132 -
          (((C152081 * C1330 - C34900 * C1325 - C152081 * C1331 +
             C153472 * C1340 + C152100 * C1332 - C34898 * C1326 -
             C152100 * C1333 + C153829 * C1341) *
                C153901 +
            (C152081 * C959 - C34900 * C949 - C152081 * C960 + C153472 * C967 +
             C152100 * C957 - C34898 * C948 - C152100 * C958 + C153829 * C966) *
                C47697 +
            (C152081 * C315 - C34900 * C303 - C152081 * C316 + C153472 * C339 +
             C152100 * C317 - C34898 * C304 - C152100 * C318 + C153829 * C340) *
                C47696) *
               C153684 +
           ((C152081 * C506 - C34900 * C485 - C152081 * C507 + C153472 * C521 +
             C152100 * C504 - C34898 * C484 - C152100 * C505 + C153829 * C520) *
                C153901 +
            (C152081 * C488 - C34900 * C476 - C152081 * C489 + C153472 * C512 +
             C152100 * C490 - C34898 * C477 - C152100 * C491 + C153829 * C513) *
                C47697 +
            (C152081 * C160 - C34900 * C148 - C152081 * C161 + C153472 * C172 +
             C152100 * C158 - C34898 * C147 - C152100 * C159 + C153829 * C171) *
                C47696) *
               C153863) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C47696 +
             (C39442 + C39443) * C47697 + (C39445 + C39444) * C153901) *
                C153863 +
            ((C35192 + C35193) * C47696 + C40462 * C47697 + C41246 * C153901) *
                C153684) *
               C153537 * C298 -
           ((C41244 * C153901 + C37407 * C47697 + (C35195 + C35194) * C47696) *
                C153684 +
            (C41245 * C153901 + C40463 * C47697 + (C35193 + C35192) * C47696) *
                C153863) *
               C153537 * C299 +
           ((C35208 * C47696 + C39073 * C47697 + C41255 * C153901) * C153863 +
            (C35209 * C47696 + C42244 * C47697 + (C36758 + C36759) * C153901) *
                C153684) *
               C153537 * C300) *
              C301 +
          ((((C35200 + C35201) * C47696 + C40464 * C47697 +
             (C39450 + C39451) * C153901) *
                C153863 +
            ((C35202 + C35203) * C47696 + C40465 * C47697 +
             (C39452 + C39453) * C153901) *
                C153684) *
               C153537 * C299 -
           (((C39451 + C39450) * C153901 + C40466 * C47697 +
             (C35201 + C35200) * C47696) *
                C153684 +
            ((C39449 + C39448) * C153901 + (C39447 + C39446) * C47697 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C47696) *
                C153863) *
               C153537 * C298 -
           (((C152081 * C4784 - C34900 * C4781 - C152081 * C4785 +
              C153472 * C4790 + C152100 * C4786 - C34898 * C4782 -
              C152100 * C4787 + C153829 * C4791) *
                 C153901 +
             (C36181 + C36180) * C47697 + C35210 * C47696) *
                C153684 +
            ((C39453 + C39452) * C153901 + C39074 * C47697 + C35211 * C47696) *
                C153863) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153637 * C34893 +
            (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
            C35213 * C153871) *
               C153537 * C153919 -
           (C36516 * C153871 + C36517 * C34895 +
            (C35195 + C35194) * C153637 * C34894 +
            (C35193 + C35192) * C153637 * C34893) *
               C153537 * C153920 +
           (C35212 * C34893 + C35213 * C34894 +
            (C35199 + C35198) * C153637 * C34895 +
            (C36522 + C36523) * C153637 * C153871) *
               C153537 * C1469) *
              C153840 +
          (((C35200 + C35201) * C153637 * C34893 +
            (C35202 + C35203) * C153637 * C34894 +
            (C35204 + C35205) * C153637 * C34895 +
            (C35206 + C35207) * C153637 * C153871) *
               C153537 * C153920 -
           (C35214 * C153871 + C35215 * C34895 +
            (C35201 + C35200) * C153637 * C34894 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C153637 * C34893) *
               C153537 * C153919 -
           ((C152081 * C4530 - C34900 * C4527 - C152081 * C4531 +
             C153472 * C4536 + C152100 * C4532 - C34898 * C4528 -
             C152100 * C4533 + C153829 * C4537) *
                C153637 * C153871 +
            (C35207 + C35206) * C153637 * C34895 + C35214 * C34894 +
            C35215 * C34893) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153637 * C153863 +
            (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
               C153537 * C153919 -
           ((C11578 + C11579 + C11580 + C11581) * C153637 * C153684 +
            (C11577 + C11576 + C11575 + C11574) * C153637 * C153863) *
               C153537 * C153920 +
           ((C11581 + C11580 + C11579 + C11578) * C153637 * C153863 +
            (C12862 + C12863 + C12864 + C12865) * C153637 * C153684) *
               C153537 * C1469) *
              C153840 +
          (((C11582 + C11583 + C11584 + C11585) * C153637 * C153863 +
            (C11586 + C11587 + C11588 + C11589) * C153637 * C153684) *
               C153537 * C153920 -
           ((C11585 + C11584 + C11583 + C11582) * C153637 * C153684 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153637 * C153863) *
               C153537 * C153919 -
           ((C11281 * C1188 - C11282 * C1183 - C11281 * C1189 +
             C153862 * C1198 + C11279 * C1190 - C11280 * C1184 -
             C11279 * C1191 + C11271 * C1199 + C11277 * C1192 - C11278 * C1185 -
             C11277 * C1193 + C11270 * C1200 + C11275 * C1194 - C11276 * C1186 -
             C11275 * C1195 + C11269 * C1201) *
                C153637 * C153684 +
            (C11589 + C11588 + C11587 + C11586) * C153637 * C153863) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C47696 +
             (C39442 + C39443) * C47697 + C58748 * C153901) *
                C153863 +
            ((C35192 + C35193) * C47696 + C40462 * C47697 + C41246 * C153901) *
                C153684) *
               C153537 * C153919 -
           ((C41244 * C153901 + C37407 * C47697 + (C35195 + C35194) * C47696) *
                C153684 +
            (C41245 * C153901 + C40463 * C47697 + (C35193 + C35192) * C47696) *
                C153863) *
               C153537 * C153920 +
           ((C35208 * C47696 + C39073 * C47697 + C41255 * C153901) * C153863 +
            (C35209 * C47696 + C42244 * C47697 + (C36758 + C36759) * C153901) *
                C153684) *
               C153537 * C1469) *
              C153840 +
          ((((C35200 + C35201) * C47696 + C40464 * C47697 + C59773 * C153901) *
                C153863 +
            ((C35202 + C35203) * C47696 + C40465 * C47697 +
             (C39452 + C39453) * C153901) *
                C153684) *
               C153537 * C153920 -
           ((C58765 * C153901 + C40466 * C47697 + (C35201 + C35200) * C47696) *
                C153684 +
            (C58766 * C153901 + (C39447 + C39446) * C47697 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C47696) *
                C153863) *
               C153537 * C153919 -
           (((C152081 * C4784 - C34900 * C4781 - C152081 * C4785 +
              C153472 * C4790 + C152100 * C4786 - C34898 * C4782 -
              C152100 * C4787 + C153829 * C4791) *
                 C153901 +
             (C36181 + C36180) * C47697 + C35210 * C47696) *
                C153684 +
            ((C39453 + C39452) * C153901 + C39074 * C47697 + C35211 * C47696) *
                C153863) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153637 * C34893 +
            (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
            C35213 * C153871) *
               C153849 -
           (C37416 * C153871 + C37417 * C34895 +
            (C36174 + C36175) * C153637 * C34894 +
            (C152081 * C494 - C34900 * C479 - C152081 * C495 + C153472 * C515 +
             C152100 * C496 - C34898 * C480 - C152100 * C497 + C153829 * C516) *
                C153637 * C34893) *
               C153601) *
              C153919 +
          (((C36175 + C36174) * C153637 * C34893 +
            (C36173 + C36172) * C153637 * C34894 +
            (C36171 + C36170) * C153637 * C34895 +
            (C37422 + C37423) * C153637 * C153871) *
               C153601 -
           (C36516 * C153871 + C36517 * C34895 +
            (C35195 + C35194) * C153637 * C34894 +
            (C35193 + C35192) * C153637 * C34893) *
               C153849) *
              C153920 +
          ((C35212 * C34893 + C35213 * C34894 +
            (C35199 + C35198) * C153637 * C34895 +
            (C36522 + C36523) * C153637 * C153871) *
               C153849 -
           ((C152081 * C28996 - C34900 * C28993 - C152081 * C28997 +
             C153472 * C28999 + C152100 * C28994 - C34898 * C28992 -
             C152100 * C28995 + C153829 * C28998) *
                C153637 * C153871 +
            (C37423 + C37422) * C153637 * C34895 + C37416 * C34894 +
            C37417 * C34893) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153637 * C153863 +
            (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
               C153849 -
           ((C12506 + C12507 + C12508 + C12509) * C153637 * C153684 +
            (C11281 * C490 - C11282 * C477 - C11281 * C491 + C153862 * C513 +
             C11279 * C492 - C11280 * C478 - C11279 * C493 + C11271 * C514 +
             C11277 * C494 - C11278 * C479 - C11277 * C495 + C11270 * C515 +
             C11275 * C496 - C11276 * C480 - C11275 * C497 + C11269 * C516) *
                C153637 * C153863) *
               C153601) *
              C153919 +
          (((C12509 + C12508 + C12507 + C12506) * C153637 * C153863 +
            (C13758 + C13759 + C13760 + C13761) * C153637 * C153684) *
               C153601 -
           ((C11578 + C11579 + C11580 + C11581) * C153637 * C153684 +
            (C11577 + C11576 + C11575 + C11574) * C153637 * C153863) *
               C153849) *
              C153920 +
          (((C11581 + C11580 + C11579 + C11578) * C153637 * C153863 +
            (C12862 + C12863 + C12864 + C12865) * C153637 * C153684) *
               C153849 -
           ((C11281 * C4073 - C11282 * C4066 - C11281 * C4074 +
             C153862 * C4078 + C11279 * C4071 - C11280 * C4065 -
             C11279 * C4072 + C11271 * C4077 + C11277 * C4069 - C11278 * C4064 -
             C11277 * C4070 + C11270 * C4076 + C11275 * C4067 - C11276 * C4063 -
             C11275 * C4068 + C11269 * C4075) *
                C153637 * C153684 +
            (C13761 + C13760 + C13759 + C13758) * C153637 * C153863) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C47696 +
             (C39442 + C39443) * C47697 + C58748 * C153901) *
                C153863 +
            ((C35192 + C35193) * C47696 + C40462 * C47697 + C41246 * C153901) *
                C153684) *
               C153849 -
           ((C60548 * C153901 + C41245 * C47697 + C40463 * C47696) * C153684 +
            ((C43033 + C43032) * C153901 + (C39444 + C39445) * C47697 +
             (C39443 + C39442) * C47696) *
                C153863) *
               C153601) *
              C153919 +
          (((C40462 * C47696 + C41246 * C47697 + C60549 * C153901) * C153863 +
            (C39073 * C47696 + C41255 * C47697 + (C41274 + C41275) * C153901) *
                C153684) *
               C153601 -
           ((C41244 * C153901 + C37407 * C47697 + (C35195 + C35194) * C47696) *
                C153684 +
            (C41245 * C153901 + C40463 * C47697 + (C35193 + C35192) * C47696) *
                C153863) *
               C153849) *
              C153920 +
          (((C35208 * C47696 + C39073 * C47697 + C41255 * C153901) * C153863 +
            (C35209 * C47696 + C42244 * C47697 + (C36758 + C36759) * C153901) *
                C153684) *
               C153849 -
           (((C152081 * C32074 - C34900 * C32073 - C152081 * C32075 +
              C153472 * C32076 + C152100 * C30186 - C34898 * C30183 -
              C152100 * C30187 + C153829 * C30189) *
                 C153901 +
             (C36759 + C36758) * C47697 + C37406 * C47696) *
                C153684 +
            ((C41275 + C41274) * C153901 + C41244 * C47697 + C37407 * C47696) *
                C153863) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
                 C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
                 C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
                 C11281 * C158 - C11282 * C147 - C11281 * C159 +
                 C153862 * C171) *
                    C153637 * C153863 +
                (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
                   C153537 * C1091 -
               ((C11578 + C11579 + C11580 + C11581) * C153637 * C153684 +
                (C11577 + C11576 + C11575 + C11574) * C153637 * C153863) *
                   C153537 * C153573) *
                  C1093 +
              (((C11582 + C11583 + C11584 + C11585) * C153637 * C153863 +
                (C11586 + C11587 + C11588 + C11589) * C153637 * C153684) *
                   C153537 * C153573 -
               ((C11585 + C11584 + C11583 + C11582) * C153637 * C153684 +
                (C11281 * C160 - C11282 * C148 - C11281 * C161 +
                 C153862 * C172 + C11279 * C158 - C11280 * C147 -
                 C11279 * C159 + C11271 * C171 + C11277 * C156 - C11278 * C146 -
                 C11277 * C157 + C11270 * C170 + C11275 * C154 - C11276 * C145 -
                 C11275 * C155 + C11269 * C169) *
                    C153637 * C153863) *
                   C153537 * C1091) *
                  C1094 +
              (((C11275 * C156 - C11276 * C146 - C11275 * C157 + C11269 * C170 +
                 C11277 * C158 - C11278 * C147 - C11277 * C159 + C11270 * C171 +
                 C11279 * C160 - C11280 * C148 - C11279 * C161 + C11271 * C172 +
                 C11281 * C162 - C11282 * C149 - C11281 * C163 +
                 C153862 * C173) *
                    C153637 * C153863 +
                (C12002 + C12003 + C12004 + C12005) * C153637 * C153684) *
                   C153537 * C1091 -
               ((C11281 * C337 - C11282 * C314 - C11281 * C338 +
                 C153862 * C350 + C11279 * C333 - C11280 * C312 -
                 C11279 * C334 + C11271 * C348 + C11277 * C331 - C11278 * C311 -
                 C11277 * C332 + C11270 * C347 + C11275 * C329 - C11276 * C310 -
                 C11275 * C330 + C11269 * C346) *
                    C153637 * C153684 +
                (C12005 + C12004 + C12003 + C12002) * C153637 * C153863) *
                   C153537 * C153573) *
                  C1095) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
                C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
                C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
                C11281 * C158 - C11282 * C147 - C11281 * C159 +
                C153862 * C171) *
                   C153637 * C153863 +
               (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
                  C153537 * C1178 -
              ((C11578 + C11579 + C11580 + C11581) * C153637 * C153684 +
               (C11577 + C11576 + C11575 + C11574) * C153637 * C153863) *
                  C153537 * C1179 +
              ((C11581 + C11580 + C11579 + C11578) * C153637 * C153863 +
               (C12862 + C12863 + C12864 + C12865) * C153637 * C153684) *
                  C153537 * C1180 -
              ((C11281 * C2923 - C11282 * C2916 - C11281 * C2924 +
                C153862 * C2928 + C11279 * C2921 - C11280 * C2915 -
                C11279 * C2922 + C11271 * C2927 + C11277 * C2919 -
                C11278 * C2914 - C11277 * C2920 + C11270 * C2926 +
                C11275 * C2917 - C11276 * C2913 - C11275 * C2918 +
                C11269 * C2925) *
                   C153637 * C153684 +
               (C12865 + C12864 + C12863 + C12862) * C153637 * C153863) *
                  C153537 * C1181) *
             C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153637 * C153863 +
            (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
               C473 -
           ((C12506 + C12507 + C12508 + C12509) * C153637 * C153684 +
            (C11281 * C490 - C11282 * C477 - C11281 * C491 + C153862 * C513 +
             C11279 * C492 - C11280 * C478 - C11279 * C493 + C11271 * C514 +
             C11277 * C494 - C11278 * C479 - C11277 * C495 + C11270 * C515 +
             C11275 * C496 - C11276 * C480 - C11275 * C497 + C11269 * C516) *
                C153637 * C153863) *
               C474 +
           ((C11275 * C498 - C11276 * C481 - C11275 * C499 + C11269 * C517 +
             C11277 * C500 - C11278 * C482 - C11277 * C501 + C11270 * C518 +
             C11279 * C502 - C11280 * C483 - C11279 * C503 + C11271 * C519 +
             C11281 * C504 - C11282 * C484 - C11281 * C505 + C153862 * C520) *
                C153637 * C153863 +
            (C13084 + C13085 + C13086 + C13087) * C153637 * C153684) *
               C475) *
              C1091 +
          (((C12509 + C12508 + C12507 + C12506) * C153637 * C153863 +
            (C11275 * C1769 - C11276 * C1760 - C11275 * C1770 + C11269 * C1775 +
             C11277 * C1767 - C11278 * C1759 - C11277 * C1768 + C11270 * C1774 +
             C11279 * C1765 - C11280 * C1758 - C11279 * C1766 + C11271 * C1773 +
             C11281 * C1763 - C11282 * C1757 - C11281 * C1764 +
             C153862 * C1772) *
                C153637 * C153684) *
               C474 -
           ((C11578 + C11579 + C11580 + C11581) * C153637 * C153684 +
            (C11577 + C11576 + C11575 + C11574) * C153637 * C153863) *
               C473 -
           ((C11281 * C3289 - C11282 * C3282 - C11281 * C3290 +
             C153862 * C3294 + C11279 * C3287 - C11280 * C3281 -
             C11279 * C3288 + C11271 * C3293 + C11277 * C3285 - C11278 * C3280 -
             C11277 * C3286 + C11270 * C3292 + C11275 * C3283 - C11276 * C3279 -
             C11275 * C3284 + C11269 * C3291) *
                C153637 * C153684 +
            (C13087 + C13086 + C13085 + C13084) * C153637 * C153863) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153637 * C34893 +
            (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
            C35213 * C153871) *
               C153537 * C1091 -
           ((C35198 + C35199) * C153637 * C153871 +
            (C35197 + C35196) * C153637 * C34895 +
            (C35195 + C35194) * C153637 * C34894 +
            (C35193 + C35192) * C153637 * C34893) *
               C153537 * C153573) *
              C1093 +
          (((C35200 + C35201) * C153637 * C34893 +
            (C35202 + C35203) * C153637 * C34894 +
            (C35204 + C35205) * C153637 * C34895 +
            (C35206 + C35207) * C153637 * C153871) *
               C153537 * C153573 -
           (C35214 * C153871 + C35215 * C34895 +
            (C35201 + C35200) * C153637 * C34894 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C153637 * C34893) *
               C153537 * C1091) *
              C1094 +
          (((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
             C152081 * C158 - C34900 * C147 - C152081 * C159 + C153472 * C171) *
                C153637 * C34893 +
            (C35640 + C35641) * C153637 * C34894 +
            (C35642 + C35643) * C153637 * C34895 +
            (C35644 + C35645) * C153637 * C153871) *
               C153537 * C1091 -
           ((C152081 * C2923 - C34900 * C2916 - C152081 * C2924 +
             C153472 * C2928 + C152100 * C2921 - C34898 * C2915 -
             C152100 * C2922 + C153829 * C2927) *
                C153637 * C153871 +
            (C35645 + C35644) * C153637 * C34895 +
            (C35643 + C35642) * C153637 * C34894 +
            (C35641 + C35640) * C153637 * C34893) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
            C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
               C153637 * C34893 +
           (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
           C35213 * C153871) *
              C153537 * C1178 -
          (C36516 * C153871 + C36517 * C34895 +
           (C35195 + C35194) * C153637 * C34894 +
           (C35193 + C35192) * C153637 * C34893) *
              C153537 * C1179 +
          (C35212 * C34893 + C35213 * C34894 +
           (C35199 + C35198) * C153637 * C34895 +
           (C36522 + C36523) * C153637 * C153871) *
              C153537 * C1180 -
          ((C152081 * C28340 - C34900 * C28337 - C152081 * C28341 +
            C153472 * C28343 + C152100 * C28338 - C34898 * C28336 -
            C152100 * C28339 + C153829 * C28342) *
               C153637 * C153871 +
           (C36523 + C36522) * C153637 * C34895 + C36516 * C34894 +
           C36517 * C34893) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153637 * C34893 +
            (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
            C35213 * C153871) *
               C473 -
           ((C36170 + C36171) * C153637 * C153871 +
            (C36172 + C36173) * C153637 * C34895 +
            (C36174 + C36175) * C153637 * C34894 +
            (C152081 * C494 - C34900 * C479 - C152081 * C495 + C153472 * C515 +
             C152100 * C496 - C34898 * C480 - C152100 * C497 + C153829 * C516) *
                C153637 * C34893) *
               C474 +
           ((C152100 * C498 - C34898 * C481 - C152100 * C499 + C153829 * C517 +
             C152081 * C500 - C34900 * C482 - C152081 * C501 + C153472 * C518) *
                C153637 * C34893 +
            (C36754 + C36755) * C153637 * C34894 +
            (C36756 + C36757) * C153637 * C34895 +
            (C36758 + C36759) * C153637 * C153871) *
               C475) *
              C1091 +
          (((C36175 + C36174) * C153637 * C34893 +
            (C36173 + C36172) * C153637 * C34894 +
            (C36171 + C36170) * C153637 * C34895 +
            (C152100 * C5568 - C34898 * C5563 - C152100 * C5569 +
             C153829 * C5572 + C152081 * C5566 - C34900 * C5562 -
             C152081 * C5567 + C153472 * C5571) *
                C153637 * C153871) *
               C474 -
           (C36516 * C153871 + C36517 * C34895 +
            (C35195 + C35194) * C153637 * C34894 +
            (C35193 + C35192) * C153637 * C34893) *
               C473 -
           ((C152081 * C28550 - C34900 * C28547 - C152081 * C28551 +
             C153472 * C28553 + C152100 * C28548 - C34898 * C28546 -
             C152100 * C28549 + C153829 * C28552) *
                C153637 * C153871 +
            (C36759 + C36758) * C153637 * C34895 +
            (C36757 + C36756) * C153637 * C34894 +
            (C36755 + C36754) * C153637 * C34893) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C47696 +
             (C39442 + C39443) * C47697 + C58748 * C153901) *
                C153863 +
            ((C35192 + C35193) * C47696 + C40462 * C47697 + C41246 * C153901) *
                C153684) *
               C153537 * C1091 -
           ((C41244 * C153901 + C37407 * C47697 + (C35195 + C35194) * C47696) *
                C153684 +
            (C41245 * C153901 + C40463 * C47697 + (C35193 + C35192) * C47696) *
                C153863) *
               C153537 * C153573) *
              C1093 +
          ((((C35200 + C35201) * C47696 + C40464 * C47697 + C59773 * C153901) *
                C153863 +
            ((C35202 + C35203) * C47696 + C40465 * C47697 +
             (C39452 + C39453) * C153901) *
                C153684) *
               C153537 * C153573 -
           ((C58765 * C153901 + C40466 * C47697 + (C35201 + C35200) * C47696) *
                C153684 +
            (C58766 * C153901 + (C39447 + C39446) * C47697 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C47696) *
                C153863) *
               C153537 * C1091) *
              C1094 +
          ((((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
              C152081 * C158 - C34900 * C147 - C152081 * C159 +
              C153472 * C171) *
                 C47696 +
             (C40074 + C40075) * C47697 + (C59385 + C59386) * C153901) *
                C153863 +
            ((C35640 + C35641) * C47696 + (C39768 + C39769) * C47697 +
             (C59081 + C59082) * C153901) *
                C153684) *
               C153537 * C1091 -
           (((C152081 * C3289 - C34900 * C3282 - C152081 * C3290 +
              C153472 * C3294 + C152100 * C3287 - C34898 * C3281 -
              C152100 * C3288 + C153829 * C3293) *
                 C153901 +
             (C39771 + C39770) * C47697 + (C35643 + C35642) * C47696) *
                C153684 +
            ((C59082 + C59081) * C153901 + (C39769 + C39768) * C47697 +
             (C35641 + C35640) * C47696) *
                C153863) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C47696 +
            (C39442 + C39443) * C47697 + C58748 * C153901) *
               C153863 +
           ((C35192 + C35193) * C47696 + C40462 * C47697 + C41246 * C153901) *
               C153684) *
              C153537 * C1178 -
          ((C41244 * C153901 + C37407 * C47697 + (C35195 + C35194) * C47696) *
               C153684 +
           (C41245 * C153901 + C40463 * C47697 + (C35193 + C35192) * C47696) *
               C153863) *
              C153537 * C1179 +
          ((C35208 * C47696 + C39073 * C47697 + C41255 * C153901) * C153863 +
           (C35209 * C47696 + C42244 * C47697 + (C36758 + C36759) * C153901) *
               C153684) *
              C153537 * C1180 -
          (((C152081 * C28550 - C34900 * C28547 - C152081 * C28551 +
             C153472 * C28553 + C152100 * C28548 - C34898 * C28546 -
             C152100 * C28549 + C153829 * C28552) *
                C153901 +
            (C37423 + C37422) * C47697 + C36506 * C47696) *
               C153684 +
           ((C36759 + C36758) * C153901 + C37406 * C47697 + C36507 * C47696) *
               C153863) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C47696 +
             (C39442 + C39443) * C47697 + C58748 * C153901) *
                C153863 +
            ((C35192 + C35193) * C47696 + C40462 * C47697 + C41246 * C153901) *
                C153684) *
               C473 -
           ((C60548 * C153901 + C41245 * C47697 + C40463 * C47696) * C153684 +
            ((C43033 + C43032) * C153901 + (C39444 + C39445) * C47697 +
             (C39443 + C39442) * C47696) *
                C153863) *
               C474 +
           ((C58748 * C47696 + (C43032 + C43033) * C47697 +
             (C152100 * C7518 - C34898 * C7514 - C152100 * C7519 +
              C153829 * C7526 + C152081 * C7520 - C34900 * C7515 -
              C152081 * C7521 + C153472 * C7527) *
                 C153901) *
                C153863 +
            (C41246 * C47696 + C60549 * C47697 + (C60562 + C60563) * C153901) *
                C153684) *
               C475) *
              C1091 +
          (((C40462 * C47696 + C41246 * C47697 + C60549 * C153901) * C153863 +
            (C39073 * C47696 + C41255 * C47697 + (C41274 + C41275) * C153901) *
                C153684) *
               C474 -
           ((C41244 * C153901 + C37407 * C47697 + (C35195 + C35194) * C47696) *
                C153684 +
            (C41245 * C153901 + C40463 * C47697 + (C35193 + C35192) * C47696) *
                C153863) *
               C473 -
           (((C152081 * C31225 - C34900 * C31222 - C152081 * C31226 +
              C153472 * C31228 + C152100 * C31223 - C34898 * C31221 -
              C152100 * C31224 + C153829 * C31227) *
                 C153901 +
             (C41275 + C41274) * C47697 + C41244 * C47696) *
                C153684 +
            ((C60563 + C60562) * C153901 + C60548 * C47697 + C41245 * C47696) *
                C153863) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153637 * C34893 +
             (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
             C35213 * C153871) *
                C153849 -
            ((C36170 + C36171) * C153637 * C153871 +
             (C36172 + C36173) * C153637 * C34895 +
             (C36174 + C36175) * C153637 * C34894 +
             (C152081 * C494 - C34900 * C479 - C152081 * C495 + C153472 * C515 +
              C152100 * C496 - C34898 * C480 - C152100 * C497 +
              C153829 * C516) *
                 C153637 * C34893) *
                C153601) *
               C1091 +
           (((C36175 + C36174) * C153637 * C34893 +
             (C36173 + C36172) * C153637 * C34894 +
             (C36171 + C36170) * C153637 * C34895 +
             (C152100 * C5568 - C34898 * C5563 - C152100 * C5569 +
              C153829 * C5572 + C152081 * C5566 - C34900 * C5562 -
              C152081 * C5567 + C153472 * C5571) *
                 C153637 * C153871) *
                C153601 -
            (C36516 * C153871 + C36517 * C34895 +
             (C35195 + C35194) * C153637 * C34894 +
             (C35193 + C35192) * C153637 * C34893) *
                C153849) *
               C153573) *
              C153840 +
          ((((C152100 * C494 - C34898 * C479 - C152100 * C495 + C153829 * C515 +
              C152081 * C492 - C34900 * C478 - C152081 * C493 +
              C153472 * C514) *
                 C153637 * C34893 +
             (C36176 + C36177) * C153637 * C34894 +
             (C36178 + C36179) * C153637 * C34895 +
             (C36180 + C36181) * C153637 * C153871) *
                C153601 -
            (C35214 * C153871 + C35215 * C34895 +
             (C35201 + C35200) * C153637 * C34894 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153637 * C34893) *
                C153849) *
               C1091 +
           (((C35200 + C35201) * C153637 * C34893 +
             (C35202 + C35203) * C153637 * C34894 +
             (C35204 + C35205) * C153637 * C34895 +
             (C35206 + C35207) * C153637 * C153871) *
                C153849 -
            ((C152081 * C5564 - C34900 * C5561 - C152081 * C5565 +
              C153472 * C5570 + C152100 * C5566 - C34898 * C5562 -
              C152100 * C5567 + C153829 * C5571) *
                 C153637 * C153871 +
             (C36181 + C36180) * C153637 * C34895 +
             (C36179 + C36178) * C153637 * C34894 +
             (C36177 + C36176) * C153637 * C34893) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
              C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
              C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
              C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                 C153637 * C153863 +
             (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
                C153849 -
            ((C12506 + C12507 + C12508 + C12509) * C153637 * C153684 +
             (C11281 * C490 - C11282 * C477 - C11281 * C491 + C153862 * C513 +
              C11279 * C492 - C11280 * C478 - C11279 * C493 + C11271 * C514 +
              C11277 * C494 - C11278 * C479 - C11277 * C495 + C11270 * C515 +
              C11275 * C496 - C11276 * C480 - C11275 * C497 + C11269 * C516) *
                 C153637 * C153863) *
                C153601) *
               C1091 +
           (((C12509 + C12508 + C12507 + C12506) * C153637 * C153863 +
             (C11275 * C1769 - C11276 * C1760 - C11275 * C1770 +
              C11269 * C1775 + C11277 * C1767 - C11278 * C1759 -
              C11277 * C1768 + C11270 * C1774 + C11279 * C1765 -
              C11280 * C1758 - C11279 * C1766 + C11271 * C1773 +
              C11281 * C1763 - C11282 * C1757 - C11281 * C1764 +
              C153862 * C1772) *
                 C153637 * C153684) *
                C153601 -
            ((C11578 + C11579 + C11580 + C11581) * C153637 * C153684 +
             (C11577 + C11576 + C11575 + C11574) * C153637 * C153863) *
                C153849) *
               C153573) *
              C153840 +
          ((((C11275 * C494 - C11276 * C479 - C11275 * C495 + C11269 * C515 +
              C11277 * C492 - C11278 * C478 - C11277 * C493 + C11270 * C514 +
              C11279 * C490 - C11280 * C477 - C11279 * C491 + C11271 * C513 +
              C11281 * C488 - C11282 * C476 - C11281 * C489 + C153862 * C512) *
                 C153637 * C153863 +
             (C12510 + C12511 + C12512 + C12513) * C153637 * C153684) *
                C153601 -
            ((C11585 + C11584 + C11583 + C11582) * C153637 * C153684 +
             (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
              C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
              C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
              C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                 C153637 * C153863) *
                C153849) *
               C1091 +
           (((C11582 + C11583 + C11584 + C11585) * C153637 * C153863 +
             (C11586 + C11587 + C11588 + C11589) * C153637 * C153684) *
                C153849 -
            ((C11281 * C1761 - C11282 * C1756 - C11281 * C1762 +
              C153862 * C1771 + C11279 * C1763 - C11280 * C1757 -
              C11279 * C1764 + C11271 * C1772 + C11277 * C1765 -
              C11278 * C1758 - C11277 * C1766 + C11270 * C1773 +
              C11275 * C1767 - C11276 * C1759 - C11275 * C1768 +
              C11269 * C1774) *
                 C153637 * C153684 +
             (C12513 + C12512 + C12511 + C12510) * C153637 * C153863) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C152100 * C152 - C34898 * C144 - C152100 * C153 +
               C153829 * C168 + C152081 * C154 - C34900 * C145 -
               C152081 * C155 + C153472 * C169) *
                  C47696 +
              (C39442 + C39443) * C47697 + C58748 * C153901) *
                 C153863 +
             ((C35192 + C35193) * C47696 + C40462 * C47697 + C41246 * C153901) *
                 C153684) *
                C153849 -
            ((C60548 * C153901 + C41245 * C47697 + C40463 * C47696) * C153684 +
             ((C43033 + C43032) * C153901 + (C39444 + C39445) * C47697 +
              (C39443 + C39442) * C47696) *
                 C153863) *
                C153601) *
               C1091 +
           (((C40462 * C47696 + C41246 * C47697 + C60549 * C153901) * C153863 +
             (C39073 * C47696 + C41255 * C47697 + (C41274 + C41275) * C153901) *
                 C153684) *
                C153601 -
            ((C41244 * C153901 + C37407 * C47697 + (C35195 + C35194) * C47696) *
                 C153684 +
             (C41245 * C153901 + C40463 * C47697 + (C35193 + C35192) * C47696) *
                 C153863) *
                C153849) *
               C153573) *
              C153840 +
          (((((C39446 + C39447) * C47696 + (C39448 + C39449) * C47697 +
              (C58775 + C58776) * C153901) *
                 C153863 +
             (C40464 * C47696 + C59773 * C47697 + (C58777 + C58778) * C153901) *
                 C153684) *
                C153601 -
            ((C58765 * C153901 + C40466 * C47697 + (C35201 + C35200) * C47696) *
                 C153684 +
             (C58766 * C153901 + (C39447 + C39446) * C47697 +
              (C152081 * C156 - C34900 * C146 - C152081 * C157 +
               C153472 * C170 + C152100 * C154 - C34898 * C145 -
               C152100 * C155 + C153829 * C169) *
                  C47696) *
                 C153863) *
                C153849) *
               C1091 +
           ((((C35200 + C35201) * C47696 + C40464 * C47697 + C59773 * C153901) *
                 C153863 +
             ((C35202 + C35203) * C47696 + C40465 * C47697 +
              (C39452 + C39453) * C153901) *
                 C153684) *
                C153849 -
            (((C152081 * C6185 - C34900 * C6179 - C152081 * C6186 +
               C153472 * C6197 + C152100 * C6187 - C34898 * C6180 -
               C152100 * C6188 + C153829 * C6198) *
                  C153901 +
              (C39453 + C39452) * C47697 + C39074 * C47696) *
                 C153684 +
             ((C58778 + C58777) * C153901 + C58765 * C47697 + C40466 * C47696) *
                 C153863) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
            C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
            C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
            C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
               C153637 * C153863 +
           (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
              C153537 * C1178 -
          ((C11578 + C11579 + C11580 + C11581) * C153637 * C153684 +
           (C11577 + C11576 + C11575 + C11574) * C153637 * C153863) *
              C153537 * C1179 +
          ((C11581 + C11580 + C11579 + C11578) * C153637 * C153863 +
           (C12862 + C12863 + C12864 + C12865) * C153637 * C153684) *
              C153537 * C1180 -
          ((C11281 * C2923 - C11282 * C2916 - C11281 * C2924 + C153862 * C2928 +
            C11279 * C2921 - C11280 * C2915 - C11279 * C2922 + C11271 * C2927 +
            C11277 * C2919 - C11278 * C2914 - C11277 * C2920 + C11270 * C2926 +
            C11275 * C2917 - C11276 * C2913 - C11275 * C2918 + C11269 * C2925) *
               C153637 * C153684 +
           (C12865 + C12864 + C12863 + C12862) * C153637 * C153863) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153637 * C153863 +
            (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
               C153537 * C1091 -
           ((C11578 + C11579 + C11580 + C11581) * C153637 * C153684 +
            (C11577 + C11576 + C11575 + C11574) * C153637 * C153863) *
               C153537 * C153573) *
              C1093 +
          (((C11582 + C11583 + C11584 + C11585) * C153637 * C153863 +
            (C11586 + C11587 + C11588 + C11589) * C153637 * C153684) *
               C153537 * C153573 -
           ((C11585 + C11584 + C11583 + C11582) * C153637 * C153684 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153637 * C153863) *
               C153537 * C1091) *
              C1094 +
          (((C11275 * C156 - C11276 * C146 - C11275 * C157 + C11269 * C170 +
             C11277 * C158 - C11278 * C147 - C11277 * C159 + C11270 * C171 +
             C11279 * C160 - C11280 * C148 - C11279 * C161 + C11271 * C172 +
             C11281 * C162 - C11282 * C149 - C11281 * C163 + C153862 * C173) *
                C153637 * C153863 +
            (C12002 + C12003 + C12004 + C12005) * C153637 * C153684) *
               C153537 * C1091 -
           ((C11281 * C337 - C11282 * C314 - C11281 * C338 + C153862 * C350 +
             C11279 * C333 - C11280 * C312 - C11279 * C334 + C11271 * C348 +
             C11277 * C331 - C11278 * C311 - C11277 * C332 + C11270 * C347 +
             C11275 * C329 - C11276 * C310 - C11275 * C330 + C11269 * C346) *
                C153637 * C153684 +
            (C12005 + C12004 + C12003 + C12002) * C153637 * C153863) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153637 * C34893 +
            (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
            C35213 * C153871) *
               C153537 * C1091 -
           ((C35198 + C35199) * C153637 * C153871 +
            (C35197 + C35196) * C153637 * C34895 +
            (C35195 + C35194) * C153637 * C34894 +
            (C35193 + C35192) * C153637 * C34893) *
               C153537 * C153573) *
              C1093 +
          (((C35200 + C35201) * C153637 * C34893 +
            (C35202 + C35203) * C153637 * C34894 +
            (C35204 + C35205) * C153637 * C34895 +
            (C35206 + C35207) * C153637 * C153871) *
               C153537 * C153573 -
           (C35214 * C153871 + C35215 * C34895 +
            (C35201 + C35200) * C153637 * C34894 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C153637 * C34893) *
               C153537 * C1091) *
              C1094 +
          (((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
             C152081 * C158 - C34900 * C147 - C152081 * C159 + C153472 * C171) *
                C153637 * C34893 +
            (C35640 + C35641) * C153637 * C34894 +
            (C35642 + C35643) * C153637 * C34895 +
            (C35644 + C35645) * C153637 * C153871) *
               C153537 * C1091 -
           ((C152081 * C2923 - C34900 * C2916 - C152081 * C2924 +
             C153472 * C2928 + C152100 * C2921 - C34898 * C2915 -
             C152100 * C2922 + C153829 * C2927) *
                C153637 * C153871 +
            (C35645 + C35644) * C153637 * C34895 +
            (C35643 + C35642) * C153637 * C34894 +
            (C35641 + C35640) * C153637 * C34893) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
            C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
               C153637 * C34893 +
           (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
           C35213 * C153871) *
              C153537 * C1178 -
          (C36516 * C153871 + C36517 * C34895 +
           (C35195 + C35194) * C153637 * C34894 +
           (C35193 + C35192) * C153637 * C34893) *
              C153537 * C1179 +
          (C35212 * C34893 + C35213 * C34894 +
           (C35199 + C35198) * C153637 * C34895 +
           (C36522 + C36523) * C153637 * C153871) *
              C153537 * C1180 -
          ((C152081 * C28340 - C34900 * C28337 - C152081 * C28341 +
            C153472 * C28343 + C152100 * C28338 - C34898 * C28336 -
            C152100 * C28339 + C153829 * C28342) *
               C153637 * C153871 +
           (C36523 + C36522) * C153637 * C34895 + C36516 * C34894 +
           C36517 * C34893) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C47696 +
             (C39442 + C39443) * C47697 + C58748 * C153901) *
                C153863 +
            ((C35192 + C35193) * C47696 + C40462 * C47697 + C41246 * C153901) *
                C153684) *
               C153537 * C1091 -
           ((C41244 * C153901 + C37407 * C47697 + (C35195 + C35194) * C47696) *
                C153684 +
            (C41245 * C153901 + C40463 * C47697 + (C35193 + C35192) * C47696) *
                C153863) *
               C153537 * C153573) *
              C1093 +
          ((((C35200 + C35201) * C47696 + C40464 * C47697 + C59773 * C153901) *
                C153863 +
            ((C35202 + C35203) * C47696 + C40465 * C47697 +
             (C39452 + C39453) * C153901) *
                C153684) *
               C153537 * C153573 -
           ((C58765 * C153901 + C40466 * C47697 + (C35201 + C35200) * C47696) *
                C153684 +
            (C58766 * C153901 + (C39447 + C39446) * C47697 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C47696) *
                C153863) *
               C153537 * C1091) *
              C1094 +
          ((((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
              C152081 * C158 - C34900 * C147 - C152081 * C159 +
              C153472 * C171) *
                 C47696 +
             (C40074 + C40075) * C47697 + (C59385 + C59386) * C153901) *
                C153863 +
            ((C35640 + C35641) * C47696 + (C39768 + C39769) * C47697 +
             (C59081 + C59082) * C153901) *
                C153684) *
               C153537 * C1091 -
           (((C152081 * C3289 - C34900 * C3282 - C152081 * C3290 +
              C153472 * C3294 + C152100 * C3287 - C34898 * C3281 -
              C152100 * C3288 + C153829 * C3293) *
                 C153901 +
             (C39771 + C39770) * C47697 + (C35643 + C35642) * C47696) *
                C153684 +
            ((C59082 + C59081) * C153901 + (C39769 + C39768) * C47697 +
             (C35641 + C35640) * C47696) *
                C153863) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C47696 +
            (C39442 + C39443) * C47697 + C58748 * C153901) *
               C153863 +
           ((C35192 + C35193) * C47696 + C40462 * C47697 + C41246 * C153901) *
               C153684) *
              C153537 * C1178 -
          ((C41244 * C153901 + C37407 * C47697 + (C35195 + C35194) * C47696) *
               C153684 +
           (C41245 * C153901 + C40463 * C47697 + (C35193 + C35192) * C47696) *
               C153863) *
              C153537 * C1179 +
          ((C35208 * C47696 + C39073 * C47697 + C41255 * C153901) * C153863 +
           (C35209 * C47696 + C42244 * C47697 + (C36758 + C36759) * C153901) *
               C153684) *
              C153537 * C1180 -
          (((C152081 * C28550 - C34900 * C28547 - C152081 * C28551 +
             C153472 * C28553 + C152100 * C28548 - C34898 * C28546 -
             C152100 * C28549 + C153829 * C28552) *
                C153901 +
            (C37423 + C37422) * C47697 + C36506 * C47696) *
               C153684 +
           ((C36759 + C36758) * C153901 + C37406 * C47697 + C36507 * C47696) *
               C153863) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153637 * C34893 +
             (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
             C35213 * C153871) *
                C1898 -
            (C37416 * C153871 + C37417 * C34895 +
             (C36174 + C36175) * C153637 * C34894 +
             (C152081 * C494 - C34900 * C479 - C152081 * C495 + C153472 * C515 +
              C152100 * C496 - C34898 * C480 - C152100 * C497 +
              C153829 * C516) *
                 C153637 * C34893) *
                C153601) *
               C153848 +
           (((C36175 + C36174) * C153637 * C34893 +
             (C36173 + C36172) * C153637 * C34894 +
             (C36171 + C36170) * C153637 * C34895 +
             (C37422 + C37423) * C153637 * C153871) *
                C153601 -
            (C36516 * C153871 + C36517 * C34895 +
             (C35195 + C35194) * C153637 * C34894 +
             (C35193 + C35192) * C153637 * C34893) *
                C1898) *
               C153573) *
              C153840 +
          ((((C152100 * C494 - C34898 * C479 - C152100 * C495 + C153829 * C515 +
              C152081 * C492 - C34900 * C478 - C152081 * C493 +
              C153472 * C514) *
                 C153637 * C34893 +
             (C36176 + C36177) * C153637 * C34894 +
             (C36178 + C36179) * C153637 * C34895 +
             (C36180 + C36181) * C153637 * C153871) *
                C153601 -
            (C35214 * C153871 + C35215 * C34895 +
             (C35201 + C35200) * C153637 * C34894 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153637 * C34893) *
                C1898) *
               C153848 +
           (((C35200 + C35201) * C153637 * C34893 +
             (C35202 + C35203) * C153637 * C34894 +
             (C35204 + C35205) * C153637 * C34895 +
             (C35206 + C35207) * C153637 * C153871) *
                C1898 -
            ((C152081 * C5564 - C34900 * C5561 - C152081 * C5565 +
              C153472 * C5570 + C152100 * C5566 - C34898 * C5562 -
              C152100 * C5567 + C153829 * C5571) *
                 C153637 * C153871 +
             (C36181 + C36180) * C153637 * C34895 +
             (C36179 + C36178) * C153637 * C34894 +
             (C36177 + C36176) * C153637 * C34893) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
              C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
              C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
              C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                 C153637 * C153863 +
             (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
                C1898 -
            ((C12506 + C12507 + C12508 + C12509) * C153637 * C153684 +
             (C11281 * C490 - C11282 * C477 - C11281 * C491 + C153862 * C513 +
              C11279 * C492 - C11280 * C478 - C11279 * C493 + C11271 * C514 +
              C11277 * C494 - C11278 * C479 - C11277 * C495 + C11270 * C515 +
              C11275 * C496 - C11276 * C480 - C11275 * C497 + C11269 * C516) *
                 C153637 * C153863) *
                C153601) *
               C153848 +
           (((C12509 + C12508 + C12507 + C12506) * C153637 * C153863 +
             (C13758 + C13759 + C13760 + C13761) * C153637 * C153684) *
                C153601 -
            ((C11578 + C11579 + C11580 + C11581) * C153637 * C153684 +
             (C11577 + C11576 + C11575 + C11574) * C153637 * C153863) *
                C1898) *
               C153573) *
              C153840 +
          ((((C11275 * C494 - C11276 * C479 - C11275 * C495 + C11269 * C515 +
              C11277 * C492 - C11278 * C478 - C11277 * C493 + C11270 * C514 +
              C11279 * C490 - C11280 * C477 - C11279 * C491 + C11271 * C513 +
              C11281 * C488 - C11282 * C476 - C11281 * C489 + C153862 * C512) *
                 C153637 * C153863 +
             (C12510 + C12511 + C12512 + C12513) * C153637 * C153684) *
                C153601 -
            ((C11585 + C11584 + C11583 + C11582) * C153637 * C153684 +
             (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
              C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
              C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
              C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                 C153637 * C153863) *
                C1898) *
               C153848 +
           (((C11582 + C11583 + C11584 + C11585) * C153637 * C153863 +
             (C11586 + C11587 + C11588 + C11589) * C153637 * C153684) *
                C1898 -
            ((C11281 * C1761 - C11282 * C1756 - C11281 * C1762 +
              C153862 * C1771 + C11279 * C1763 - C11280 * C1757 -
              C11279 * C1764 + C11271 * C1772 + C11277 * C1765 -
              C11278 * C1758 - C11277 * C1766 + C11270 * C1773 +
              C11275 * C1767 - C11276 * C1759 - C11275 * C1768 +
              C11269 * C1774) *
                 C153637 * C153684 +
             (C12513 + C12512 + C12511 + C12510) * C153637 * C153863) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C152100 * C152 - C34898 * C144 - C152100 * C153 +
               C153829 * C168 + C152081 * C154 - C34900 * C145 -
               C152081 * C155 + C153472 * C169) *
                  C47696 +
              (C39442 + C39443) * C47697 + C58748 * C153901) *
                 C153863 +
             ((C35192 + C35193) * C47696 + C40462 * C47697 + C41246 * C153901) *
                 C153684) *
                C1898 -
            ((C60548 * C153901 + C41245 * C47697 + C40463 * C47696) * C153684 +
             (C62304 * C153901 + (C39444 + C39445) * C47697 +
              (C39443 + C39442) * C47696) *
                 C153863) *
                C153601) *
               C153848 +
           (((C40462 * C47696 + C41246 * C47697 + C60549 * C153901) * C153863 +
             (C39073 * C47696 + C41255 * C47697 + (C41274 + C41275) * C153901) *
                 C153684) *
                C153601 -
            ((C41244 * C153901 + C37407 * C47697 + (C35195 + C35194) * C47696) *
                 C153684 +
             (C41245 * C153901 + C40463 * C47697 + (C35193 + C35192) * C47696) *
                 C153863) *
                C1898) *
               C153573) *
              C153840 +
          (((((C39446 + C39447) * C47696 + (C39448 + C39449) * C47697 +
              (C58775 + C58776) * C153901) *
                 C153863 +
             (C40464 * C47696 + C59773 * C47697 + (C58777 + C58778) * C153901) *
                 C153684) *
                C153601 -
            ((C58765 * C153901 + C40466 * C47697 + (C35201 + C35200) * C47696) *
                 C153684 +
             (C58766 * C153901 + (C39447 + C39446) * C47697 +
              (C152081 * C156 - C34900 * C146 - C152081 * C157 +
               C153472 * C170 + C152100 * C154 - C34898 * C145 -
               C152100 * C155 + C153829 * C169) *
                  C47696) *
                 C153863) *
                C1898) *
               C153848 +
           ((((C35200 + C35201) * C47696 + C40464 * C47697 + C59773 * C153901) *
                 C153863 +
             ((C35202 + C35203) * C47696 + C40465 * C47697 +
              (C39452 + C39453) * C153901) *
                 C153684) *
                C1898 -
            (((C152081 * C6185 - C34900 * C6179 - C152081 * C6186 +
               C153472 * C6197 + C152100 * C6187 - C34898 * C6180 -
               C152100 * C6188 + C153829 * C6198) *
                  C153901 +
              (C39453 + C39452) * C47697 + C39074 * C47696) *
                 C153684 +
             ((C58778 + C58777) * C153901 + C58765 * C47697 + C40466 * C47696) *
                 C153863) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153637 * C34893 +
            (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
            C35213 * C153871) *
               C153921 -
           (C37416 * C153871 + C37417 * C34895 +
            (C36174 + C36175) * C153637 * C34894 +
            (C152081 * C494 - C34900 * C479 - C152081 * C495 + C153472 * C515 +
             C152100 * C496 - C34898 * C480 - C152100 * C497 + C153829 * C516) *
                C153637 * C34893) *
               C153922 +
           ((C152100 * C498 - C34898 * C481 - C152100 * C499 + C153829 * C517 +
             C152081 * C500 - C34900 * C482 - C152081 * C501 + C153472 * C518) *
                C153637 * C34893 +
            (C36754 + C36755) * C153637 * C34894 +
            (C36756 + C36757) * C153637 * C34895 +
            (C36758 + C36759) * C153637 * C153871) *
               C2414) *
              C153848 +
          (((C36175 + C36174) * C153637 * C34893 +
            (C36173 + C36172) * C153637 * C34894 +
            (C36171 + C36170) * C153637 * C34895 +
            (C37422 + C37423) * C153637 * C153871) *
               C153922 -
           (C36516 * C153871 + C36517 * C34895 +
            (C35195 + C35194) * C153637 * C34894 +
            (C35193 + C35192) * C153637 * C34893) *
               C153921 -
           ((C152081 * C28550 - C34900 * C28547 - C152081 * C28551 +
             C153472 * C28553 + C152100 * C28548 - C34898 * C28546 -
             C152100 * C28549 + C153829 * C28552) *
                C153637 * C153871 +
            (C36759 + C36758) * C153637 * C34895 +
            (C36757 + C36756) * C153637 * C34894 +
            (C36755 + C36754) * C153637 * C34893) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153637 * C153863 +
            (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
               C153921 -
           ((C12506 + C12507 + C12508 + C12509) * C153637 * C153684 +
            (C11281 * C490 - C11282 * C477 - C11281 * C491 + C153862 * C513 +
             C11279 * C492 - C11280 * C478 - C11279 * C493 + C11271 * C514 +
             C11277 * C494 - C11278 * C479 - C11277 * C495 + C11270 * C515 +
             C11275 * C496 - C11276 * C480 - C11275 * C497 + C11269 * C516) *
                C153637 * C153863) *
               C153922 +
           ((C11275 * C498 - C11276 * C481 - C11275 * C499 + C11269 * C517 +
             C11277 * C500 - C11278 * C482 - C11277 * C501 + C11270 * C518 +
             C11279 * C502 - C11280 * C483 - C11279 * C503 + C11271 * C519 +
             C11281 * C504 - C11282 * C484 - C11281 * C505 + C153862 * C520) *
                C153637 * C153863 +
            (C13084 + C13085 + C13086 + C13087) * C153637 * C153684) *
               C2414) *
              C153848 +
          (((C12509 + C12508 + C12507 + C12506) * C153637 * C153863 +
            (C13758 + C13759 + C13760 + C13761) * C153637 * C153684) *
               C153922 -
           ((C11578 + C11579 + C11580 + C11581) * C153637 * C153684 +
            (C11577 + C11576 + C11575 + C11574) * C153637 * C153863) *
               C153921 -
           ((C11281 * C3289 - C11282 * C3282 - C11281 * C3290 +
             C153862 * C3294 + C11279 * C3287 - C11280 * C3281 -
             C11279 * C3288 + C11271 * C3293 + C11277 * C3285 - C11278 * C3280 -
             C11277 * C3286 + C11270 * C3292 + C11275 * C3283 - C11276 * C3279 -
             C11275 * C3284 + C11269 * C3291) *
                C153637 * C153684 +
            (C13087 + C13086 + C13085 + C13084) * C153637 * C153863) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C47696 +
             (C39442 + C39443) * C47697 + C58748 * C153901) *
                C153863 +
            ((C35192 + C35193) * C47696 + C40462 * C47697 + C41246 * C153901) *
                C153684) *
               C153921 -
           ((C60548 * C153901 + C41245 * C47697 + C40463 * C47696) * C153684 +
            (C62304 * C153901 + (C39444 + C39445) * C47697 +
             (C39443 + C39442) * C47696) *
                C153863) *
               C153922 +
           ((C58748 * C47696 + (C43032 + C43033) * C47697 +
             (C62317 + C62318) * C153901) *
                C153863 +
            (C41246 * C47696 + C60549 * C47697 + (C60562 + C60563) * C153901) *
                C153684) *
               C2414) *
              C153848 +
          (((C40462 * C47696 + C41246 * C47697 + C60549 * C153901) * C153863 +
            (C39073 * C47696 + C41255 * C47697 + (C41274 + C41275) * C153901) *
                C153684) *
               C153922 -
           ((C41244 * C153901 + C37407 * C47697 + (C35195 + C35194) * C47696) *
                C153684 +
            (C41245 * C153901 + C40463 * C47697 + (C35193 + C35192) * C47696) *
                C153863) *
               C153921 -
           (((C152081 * C31225 - C34900 * C31222 - C152081 * C31226 +
              C153472 * C31228 + C152100 * C31223 - C34898 * C31221 -
              C152100 * C31224 + C153829 * C31227) *
                 C153901 +
             (C41275 + C41274) * C47697 + C41244 * C47696) *
                C153684 +
            ((C60563 + C60562) * C153901 + C60548 * C47697 + C41245 * C47696) *
                C153863) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
                 C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
                 C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
                 C11281 * C158 - C11282 * C147 - C11281 * C159 +
                 C153862 * C171) *
                    C153637 * C153863 +
                (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
                   C1898 -
               ((C12506 + C12507 + C12508 + C12509) * C153637 * C153684 +
                (C11281 * C490 - C11282 * C477 - C11281 * C491 +
                 C153862 * C513 + C11279 * C492 - C11280 * C478 -
                 C11279 * C493 + C11271 * C514 + C11277 * C494 - C11278 * C479 -
                 C11277 * C495 + C11270 * C515 + C11275 * C496 - C11276 * C480 -
                 C11275 * C497 + C11269 * C516) *
                    C153637 * C153863) *
                   C153601) *
                  C153521 * C1093 +
              (((C11275 * C494 - C11276 * C479 - C11275 * C495 + C11269 * C515 +
                 C11277 * C492 - C11278 * C478 - C11277 * C493 + C11270 * C514 +
                 C11279 * C490 - C11280 * C477 - C11279 * C491 + C11271 * C513 +
                 C11281 * C488 - C11282 * C476 - C11281 * C489 +
                 C153862 * C512) *
                    C153637 * C153863 +
                (C12510 + C12511 + C12512 + C12513) * C153637 * C153684) *
                   C153601 -
               ((C11585 + C11584 + C11583 + C11582) * C153637 * C153684 +
                (C11281 * C160 - C11282 * C148 - C11281 * C161 +
                 C153862 * C172 + C11279 * C158 - C11280 * C147 -
                 C11279 * C159 + C11271 * C171 + C11277 * C156 - C11278 * C146 -
                 C11277 * C157 + C11270 * C170 + C11275 * C154 - C11276 * C145 -
                 C11275 * C155 + C11269 * C169) *
                    C153637 * C153863) *
                   C1898) *
                  C153521 * C1094 +
              (((C11275 * C156 - C11276 * C146 - C11275 * C157 + C11269 * C170 +
                 C11277 * C158 - C11278 * C147 - C11277 * C159 + C11270 * C171 +
                 C11279 * C160 - C11280 * C148 - C11279 * C161 + C11271 * C172 +
                 C11281 * C162 - C11282 * C149 - C11281 * C163 +
                 C153862 * C173) *
                    C153637 * C153863 +
                (C12002 + C12003 + C12004 + C12005) * C153637 * C153684) *
                   C1898 -
               ((C11281 * C961 - C11282 * C950 - C11281 * C962 +
                 C153862 * C968 + C11279 * C959 - C11280 * C949 -
                 C11279 * C960 + C11271 * C967 + C11277 * C957 - C11278 * C948 -
                 C11277 * C958 + C11270 * C966 + C11275 * C955 - C11276 * C947 -
                 C11275 * C956 + C11269 * C965) *
                    C153637 * C153684 +
                (C11281 * C508 - C11282 * C486 - C11281 * C509 +
                 C153862 * C522 + C11279 * C488 - C11280 * C476 -
                 C11279 * C489 + C11271 * C512 + C11277 * C490 - C11278 * C477 -
                 C11277 * C491 + C11270 * C513 + C11275 * C492 - C11276 * C478 -
                 C11275 * C493 + C11269 * C514) *
                    C153637 * C153863) *
                   C153601) *
                  C153521 * C1095) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
                 C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
                 C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
                 C11281 * C158 - C11282 * C147 - C11281 * C159 +
                 C153862 * C171) *
                    C153637 * C153863 +
                (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
                   C1898 -
               ((C12506 + C12507 + C12508 + C12509) * C153637 * C153684 +
                (C11281 * C490 - C11282 * C477 - C11281 * C491 +
                 C153862 * C513 + C11279 * C492 - C11280 * C478 -
                 C11279 * C493 + C11271 * C514 + C11277 * C494 - C11278 * C479 -
                 C11277 * C495 + C11270 * C515 + C11275 * C496 - C11276 * C480 -
                 C11275 * C497 + C11269 * C516) *
                    C153637 * C153863) *
                   C153601) *
                  C298 +
              (((C12509 + C12508 + C12507 + C12506) * C153637 * C153863 +
                (C13758 + C13759 + C13760 + C13761) * C153637 * C153684) *
                   C153601 -
               ((C11578 + C11579 + C11580 + C11581) * C153637 * C153684 +
                (C11577 + C11576 + C11575 + C11574) * C153637 * C153863) *
                   C1898) *
                  C299 +
              (((C11581 + C11580 + C11579 + C11578) * C153637 * C153863 +
                (C12862 + C12863 + C12864 + C12865) * C153637 * C153684) *
                   C1898 -
               ((C11281 * C4073 - C11282 * C4066 - C11281 * C4074 +
                 C153862 * C4078 + C11279 * C4071 - C11280 * C4065 -
                 C11279 * C4072 + C11271 * C4077 + C11277 * C4069 -
                 C11278 * C4064 - C11277 * C4070 + C11270 * C4076 +
                 C11275 * C4067 - C11276 * C4063 - C11275 * C4068 +
                 C11269 * C4075) *
                    C153637 * C153684 +
                (C13761 + C13760 + C13759 + C13758) * C153637 * C153863) *
                   C153601) *
                  C300) *
             C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
            C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
            C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
            C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
               C153637 * C153863 +
           (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
              C2104 -
          ((C12506 + C12507 + C12508 + C12509) * C153637 * C153684 +
           (C11281 * C490 - C11282 * C477 - C11281 * C491 + C153862 * C513 +
            C11279 * C492 - C11280 * C478 - C11279 * C493 + C11271 * C514 +
            C11277 * C494 - C11278 * C479 - C11277 * C495 + C11270 * C515 +
            C11275 * C496 - C11276 * C480 - C11275 * C497 + C11269 * C516) *
               C153637 * C153863) *
              C2105 +
          ((C11275 * C498 - C11276 * C481 - C11275 * C499 + C11269 * C517 +
            C11277 * C500 - C11278 * C482 - C11277 * C501 + C11270 * C518 +
            C11279 * C502 - C11280 * C483 - C11279 * C503 + C11271 * C519 +
            C11281 * C504 - C11282 * C484 - C11281 * C505 + C153862 * C520) *
               C153637 * C153863 +
           (C13084 + C13085 + C13086 + C13087) * C153637 * C153684) *
              C2106 -
          ((C11281 * C8429 - C11282 * C8428 - C11281 * C8430 + C153862 * C8431 +
            C11279 * C6191 - C11280 * C6182 - C11279 * C6192 + C11271 * C6200 +
            C11277 * C6193 - C11278 * C6183 - C11277 * C6194 + C11270 * C6201 +
            C11275 * C6195 - C11276 * C6184 - C11275 * C6196 + C11269 * C6202) *
               C153637 * C153684 +
           (C11281 * C2115 - C11282 * C2109 - C11281 * C2116 + C153862 * C2124 +
            C11279 * C2117 - C11280 * C2110 - C11279 * C2118 + C11271 * C2125 +
            C11277 * C2119 - C11278 * C2111 - C11277 * C2120 + C11270 * C2126 +
            C11275 * C2121 - C11276 * C2112 - C11275 * C2122 + C11269 * C2127) *
               C153637 * C153863) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153637 * C34893 +
            (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
            C35213 * C153871) *
               C1898 -
           (C37416 * C153871 + C37417 * C34895 +
            (C36174 + C36175) * C153637 * C34894 +
            (C152081 * C494 - C34900 * C479 - C152081 * C495 + C153472 * C515 +
             C152100 * C496 - C34898 * C480 - C152100 * C497 + C153829 * C516) *
                C153637 * C34893) *
               C153601) *
              C153521 * C1093 +
          (((C152100 * C494 - C34898 * C479 - C152100 * C495 + C153829 * C515 +
             C152081 * C492 - C34900 * C478 - C152081 * C493 + C153472 * C514) *
                C153637 * C34893 +
            (C36176 + C36177) * C153637 * C34894 +
            (C36178 + C36179) * C153637 * C34895 +
            (C36180 + C36181) * C153637 * C153871) *
               C153601 -
           (C35214 * C153871 + C35215 * C34895 +
            (C35201 + C35200) * C153637 * C34894 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C153637 * C34893) *
               C1898) *
              C153521 * C1094 +
          (((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
             C152081 * C158 - C34900 * C147 - C152081 * C159 + C153472 * C171) *
                C153637 * C34893 +
            (C35640 + C35641) * C153637 * C34894 +
            (C35642 + C35643) * C153637 * C34895 +
            (C35644 + C35645) * C153637 * C153871) *
               C1898 -
           ((C152081 * C4073 - C34900 * C4066 - C152081 * C4074 +
             C153472 * C4078 + C152100 * C4071 - C34898 * C4065 -
             C152100 * C4072 + C153829 * C4077) *
                C153637 * C153871 +
            (C152081 * C1763 - C34900 * C1757 - C152081 * C1764 +
             C153472 * C1772 + C152100 * C1765 - C34898 * C1758 -
             C152100 * C1766 + C153829 * C1773) *
                C153637 * C34895 +
            (C152081 * C957 - C34900 * C948 - C152081 * C958 + C153472 * C966 +
             C152100 * C955 - C34898 * C947 - C152100 * C956 + C153829 * C965) *
                C153637 * C34894 +
            (C152081 * C490 - C34900 * C477 - C152081 * C491 + C153472 * C513 +
             C152100 * C492 - C34898 * C478 - C152100 * C493 + C153829 * C514) *
                C153637 * C34893) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153637 * C34893 +
            (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
            C35213 * C153871) *
               C1898 -
           (C37416 * C153871 + C37417 * C34895 +
            (C36174 + C36175) * C153637 * C34894 +
            (C152081 * C494 - C34900 * C479 - C152081 * C495 + C153472 * C515 +
             C152100 * C496 - C34898 * C480 - C152100 * C497 + C153829 * C516) *
                C153637 * C34893) *
               C153601) *
              C298 +
          (((C36175 + C36174) * C153637 * C34893 +
            (C36173 + C36172) * C153637 * C34894 +
            (C36171 + C36170) * C153637 * C34895 +
            (C37422 + C37423) * C153637 * C153871) *
               C153601 -
           (C36516 * C153871 + C36517 * C34895 +
            (C35195 + C35194) * C153637 * C34894 +
            (C35193 + C35192) * C153637 * C34893) *
               C1898) *
              C299 +
          ((C35212 * C34893 + C35213 * C34894 +
            (C35199 + C35198) * C153637 * C34895 +
            (C36522 + C36523) * C153637 * C153871) *
               C1898 -
           ((C152081 * C28996 - C34900 * C28993 - C152081 * C28997 +
             C153472 * C28999 + C152100 * C28994 - C34898 * C28992 -
             C152100 * C28995 + C153829 * C28998) *
                C153637 * C153871 +
            (C37423 + C37422) * C153637 * C34895 + C37416 * C34894 +
            C37417 * C34893) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
            C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
               C153637 * C34893 +
           (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
           C35213 * C153871) *
              C2104 -
          (C37416 * C153871 + C37417 * C34895 +
           (C36174 + C36175) * C153637 * C34894 +
           (C152081 * C494 - C34900 * C479 - C152081 * C495 + C153472 * C515 +
            C152100 * C496 - C34898 * C480 - C152100 * C497 + C153829 * C516) *
               C153637 * C34893) *
              C2105 +
          ((C152100 * C498 - C34898 * C481 - C152100 * C499 + C153829 * C517 +
            C152081 * C500 - C34900 * C482 - C152081 * C501 + C153472 * C518) *
               C153637 * C34893 +
           (C36754 + C36755) * C153637 * C34894 +
           (C36756 + C36757) * C153637 * C34895 +
           (C36758 + C36759) * C153637 * C153871) *
              C2106 -
          ((C152081 * C32074 - C34900 * C32073 - C152081 * C32075 +
            C153472 * C32076 + C152100 * C30186 - C34898 * C30183 -
            C152100 * C30187 + C153829 * C30189) *
               C153637 * C153871 +
           (C152081 * C6187 - C34900 * C6180 - C152081 * C6188 +
            C153472 * C6198 + C152100 * C6189 - C34898 * C6181 -
            C152100 * C6190 + C153829 * C6199) *
               C153637 * C34895 +
           (C152081 * C6193 - C34900 * C6183 - C152081 * C6194 +
            C153472 * C6201 + C152100 * C6195 - C34898 * C6184 -
            C152100 * C6196 + C153829 * C6202) *
               C153637 * C34894 +
           (C152081 * C2119 - C34900 * C2111 - C152081 * C2120 +
            C153472 * C2126 + C152100 * C2121 - C34898 * C2112 -
            C152100 * C2122 + C153829 * C2127) *
               C153637 * C34893) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C47696 +
             (C39442 + C39443) * C47697 + C58748 * C153901) *
                C153863 +
            ((C35192 + C35193) * C47696 + C40462 * C47697 + C41246 * C153901) *
                C153684) *
               C1898 -
           ((C60548 * C153901 + C41245 * C47697 + C40463 * C47696) * C153684 +
            ((C43033 + C43032) * C153901 + (C39444 + C39445) * C47697 +
             (C39443 + C39442) * C47696) *
                C153863) *
               C153601) *
              C153521 * C1093 +
          ((((C39446 + C39447) * C47696 + (C39448 + C39449) * C47697 +
             (C58775 + C58776) * C153901) *
                C153863 +
            (C40464 * C47696 + C59773 * C47697 + (C58777 + C58778) * C153901) *
                C153684) *
               C153601 -
           ((C58765 * C153901 + C40466 * C47697 + (C35201 + C35200) * C47696) *
                C153684 +
            (C58766 * C153901 + (C39447 + C39446) * C47697 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C47696) *
                C153863) *
               C1898) *
              C153521 * C1094 +
          ((((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
              C152081 * C158 - C34900 * C147 - C152081 * C159 +
              C153472 * C171) *
                 C47696 +
             (C40074 + C40075) * C47697 + (C59385 + C59386) * C153901) *
                C153863 +
            ((C35640 + C35641) * C47696 + (C39768 + C39769) * C47697 +
             (C59081 + C59082) * C153901) *
                C153684) *
               C1898 -
           (((C152081 * C8429 - C34900 * C8428 - C152081 * C8430 +
              C153472 * C8431 + C152100 * C6191 - C34898 * C6182 -
              C152100 * C6192 + C153829 * C6200) *
                 C153901 +
             (C59082 + C59081) * C47697 + (C39769 + C39768) * C47696) *
                C153684 +
            ((C152081 * C2115 - C34900 * C2109 - C152081 * C2116 +
              C153472 * C2124 + C152100 * C2117 - C34898 * C2110 -
              C152100 * C2118 + C153829 * C2125) *
                 C153901 +
             (C59386 + C59385) * C47697 + (C40075 + C40074) * C47696) *
                C153863) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C47696 +
             (C39442 + C39443) * C47697 + C58748 * C153901) *
                C153863 +
            ((C35192 + C35193) * C47696 + C40462 * C47697 + C41246 * C153901) *
                C153684) *
               C1898 -
           ((C60548 * C153901 + C41245 * C47697 + C40463 * C47696) * C153684 +
            ((C43033 + C43032) * C153901 + (C39444 + C39445) * C47697 +
             (C39443 + C39442) * C47696) *
                C153863) *
               C153601) *
              C298 +
          (((C40462 * C47696 + C41246 * C47697 + C60549 * C153901) * C153863 +
            (C39073 * C47696 + C41255 * C47697 + (C41274 + C41275) * C153901) *
                C153684) *
               C153601 -
           ((C41244 * C153901 + C37407 * C47697 + (C35195 + C35194) * C47696) *
                C153684 +
            (C41245 * C153901 + C40463 * C47697 + (C35193 + C35192) * C47696) *
                C153863) *
               C1898) *
              C299 +
          (((C35208 * C47696 + C39073 * C47697 + C41255 * C153901) * C153863 +
            (C35209 * C47696 + C42244 * C47697 + (C36758 + C36759) * C153901) *
                C153684) *
               C1898 -
           (((C152081 * C32074 - C34900 * C32073 - C152081 * C32075 +
              C153472 * C32076 + C152100 * C30186 - C34898 * C30183 -
              C152100 * C30187 + C153829 * C30189) *
                 C153901 +
             (C36759 + C36758) * C47697 + C37406 * C47696) *
                C153684 +
            ((C41275 + C41274) * C153901 + C41244 * C47697 + C37407 * C47696) *
                C153863) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C47696 +
            (C39442 + C39443) * C47697 + C58748 * C153901) *
               C153863 +
           ((C35192 + C35193) * C47696 + C40462 * C47697 + C41246 * C153901) *
               C153684) *
              C2104 -
          ((C60548 * C153901 + C41245 * C47697 + C40463 * C47696) * C153684 +
           (C62304 * C153901 + (C39444 + C39445) * C47697 +
            (C39443 + C39442) * C47696) *
               C153863) *
              C2105 +
          ((C58748 * C47696 + (C43032 + C43033) * C47697 +
            (C62317 + C62318) * C153901) *
               C153863 +
           (C41246 * C47696 + C60549 * C47697 + (C60562 + C60563) * C153901) *
               C153684) *
              C2106 -
          (((C152081 * C56477 - C34900 * C56476 - C152081 * C56478 +
             C153472 * C56479 + C152100 * C34024 - C34898 * C34021 -
             C152100 * C34025 + C153829 * C34027) *
                C153901 +
            (C60563 + C60562) * C47697 + C60548 * C47696) *
               C153684 +
           ((C152081 * C10383 - C34900 * C10379 - C152081 * C10384 +
             C153472 * C10388 + C152100 * C10385 - C34898 * C10380 -
             C152100 * C10386 + C153829 * C10389) *
                C153901 +
            (C62318 + C62317) * C47697 + C62304 * C47696) *
               C153863) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153637 * C34893 +
            (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
            C35213 * C153871) *
               C153921 -
           (C37416 * C153871 + C37417 * C34895 +
            (C36174 + C36175) * C153637 * C34894 +
            (C152081 * C494 - C34900 * C479 - C152081 * C495 + C153472 * C515 +
             C152100 * C496 - C34898 * C480 - C152100 * C497 + C153829 * C516) *
                C153637 * C34893) *
               C153922 +
           ((C152100 * C498 - C34898 * C481 - C152100 * C499 + C153829 * C517 +
             C152081 * C500 - C34900 * C482 - C152081 * C501 + C153472 * C518) *
                C153637 * C34893 +
            (C36754 + C36755) * C153637 * C34894 +
            (C36756 + C36757) * C153637 * C34895 +
            (C36758 + C36759) * C153637 * C153871) *
               C2414) *
              C153521 * C153840 +
          (((C152100 * C494 - C34898 * C479 - C152100 * C495 + C153829 * C515 +
             C152081 * C492 - C34900 * C478 - C152081 * C493 + C153472 * C514) *
                C153637 * C34893 +
            (C36176 + C36177) * C153637 * C34894 +
            (C36178 + C36179) * C153637 * C34895 +
            (C36180 + C36181) * C153637 * C153871) *
               C153922 -
           (C35214 * C153871 + C35215 * C34895 +
            (C35201 + C35200) * C153637 * C34894 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C153637 * C34893) *
               C153921 -
           ((C152081 * C4784 - C34900 * C4781 - C152081 * C4785 +
             C153472 * C4790 + C152100 * C4786 - C34898 * C4782 -
             C152100 * C4787 + C153829 * C4791) *
                C153637 * C153871 +
            (C152081 * C3287 - C34900 * C3281 - C152081 * C3288 +
             C153472 * C3293 + C152100 * C3285 - C34898 * C3280 -
             C152100 * C3286 + C153829 * C3292) *
                C153637 * C34895 +
            (C152081 * C1334 - C34900 * C1327 - C152081 * C1335 +
             C153472 * C1342 + C152100 * C1336 - C34898 * C1328 -
             C152100 * C1337 + C153829 * C1343) *
                C153637 * C34894 +
            (C152081 * C502 - C34900 * C483 - C152081 * C503 + C153472 * C519 +
             C152100 * C500 - C34898 * C482 - C152100 * C501 + C153829 * C518) *
                C153637 * C34893) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153637 * C153863 +
            (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
               C153921 -
           ((C12506 + C12507 + C12508 + C12509) * C153637 * C153684 +
            (C11281 * C490 - C11282 * C477 - C11281 * C491 + C153862 * C513 +
             C11279 * C492 - C11280 * C478 - C11279 * C493 + C11271 * C514 +
             C11277 * C494 - C11278 * C479 - C11277 * C495 + C11270 * C515 +
             C11275 * C496 - C11276 * C480 - C11275 * C497 + C11269 * C516) *
                C153637 * C153863) *
               C153922 +
           ((C11275 * C498 - C11276 * C481 - C11275 * C499 + C11269 * C517 +
             C11277 * C500 - C11278 * C482 - C11277 * C501 + C11270 * C518 +
             C11279 * C502 - C11280 * C483 - C11279 * C503 + C11271 * C519 +
             C11281 * C504 - C11282 * C484 - C11281 * C505 + C153862 * C520) *
                C153637 * C153863 +
            (C13084 + C13085 + C13086 + C13087) * C153637 * C153684) *
               C2414) *
              C153521 * C153840 +
          (((C11275 * C494 - C11276 * C479 - C11275 * C495 + C11269 * C515 +
             C11277 * C492 - C11278 * C478 - C11277 * C493 + C11270 * C514 +
             C11279 * C490 - C11280 * C477 - C11279 * C491 + C11271 * C513 +
             C11281 * C488 - C11282 * C476 - C11281 * C489 + C153862 * C512) *
                C153637 * C153863 +
            (C12510 + C12511 + C12512 + C12513) * C153637 * C153684) *
               C153922 -
           ((C11585 + C11584 + C11583 + C11582) * C153637 * C153684 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153637 * C153863) *
               C153921 -
           ((C11281 * C1330 - C11282 * C1325 - C11281 * C1331 +
             C153862 * C1340 + C11279 * C1332 - C11280 * C1326 -
             C11279 * C1333 + C11271 * C1341 + C11277 * C1334 - C11278 * C1327 -
             C11277 * C1335 + C11270 * C1342 + C11275 * C1336 - C11276 * C1328 -
             C11275 * C1337 + C11269 * C1343) *
                C153637 * C153684 +
            (C11281 * C506 - C11282 * C485 - C11281 * C507 + C153862 * C521 +
             C11279 * C504 - C11280 * C484 - C11279 * C505 + C11271 * C520 +
             C11277 * C502 - C11278 * C483 - C11277 * C503 + C11270 * C519 +
             C11275 * C500 - C11276 * C482 - C11275 * C501 + C11269 * C518) *
                C153637 * C153863) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C47696 +
             (C39442 + C39443) * C47697 + C58748 * C153901) *
                C153863 +
            ((C35192 + C35193) * C47696 + C40462 * C47697 + C41246 * C153901) *
                C153684) *
               C153921 -
           ((C60548 * C153901 + C41245 * C47697 + C40463 * C47696) * C153684 +
            (C62304 * C153901 + (C39444 + C39445) * C47697 +
             (C39443 + C39442) * C47696) *
                C153863) *
               C153922 +
           ((C58748 * C47696 + (C43032 + C43033) * C47697 +
             (C62317 + C62318) * C153901) *
                C153863 +
            (C41246 * C47696 + C60549 * C47697 + (C60562 + C60563) * C153901) *
                C153684) *
               C2414) *
              C153521 * C153840 +
          ((((C39446 + C39447) * C47696 + (C39448 + C39449) * C47697 +
             (C58775 + C58776) * C153901) *
                C153863 +
            (C40464 * C47696 + C59773 * C47697 + (C58777 + C58778) * C153901) *
                C153684) *
               C153922 -
           ((C58765 * C153901 + C40466 * C47697 + (C35201 + C35200) * C47696) *
                C153684 +
            (C58766 * C153901 + (C39447 + C39446) * C47697 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C47696) *
                C153863) *
               C153921 -
           (((C152081 * C9038 - C34900 * C9035 - C152081 * C9039 +
              C153472 * C9044 + C152100 * C9040 - C34898 * C9036 -
              C152100 * C9041 + C153829 * C9045) *
                 C153901 +
             (C58778 + C58777) * C47697 + C58765 * C47696) *
                C153684 +
            ((C152081 * C7522 - C34900 * C7516 - C152081 * C7523 +
              C153472 * C7528 + C152100 * C7520 - C34898 * C7515 -
              C152100 * C7521 + C153829 * C7527) *
                 C153901 +
             (C58776 + C58775) * C47697 + C58766 * C47696) *
                C153863) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153637 * C153863 +
            (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
               C1898 -
           ((C12506 + C12507 + C12508 + C12509) * C153637 * C153684 +
            (C11281 * C490 - C11282 * C477 - C11281 * C491 + C153862 * C513 +
             C11279 * C492 - C11280 * C478 - C11279 * C493 + C11271 * C514 +
             C11277 * C494 - C11278 * C479 - C11277 * C495 + C11270 * C515 +
             C11275 * C496 - C11276 * C480 - C11275 * C497 + C11269 * C516) *
                C153637 * C153863) *
               C153601) *
              C298 +
          (((C12509 + C12508 + C12507 + C12506) * C153637 * C153863 +
            (C13758 + C13759 + C13760 + C13761) * C153637 * C153684) *
               C153601 -
           ((C11578 + C11579 + C11580 + C11581) * C153637 * C153684 +
            (C11577 + C11576 + C11575 + C11574) * C153637 * C153863) *
               C1898) *
              C299 +
          (((C11581 + C11580 + C11579 + C11578) * C153637 * C153863 +
            (C12862 + C12863 + C12864 + C12865) * C153637 * C153684) *
               C1898 -
           ((C11281 * C4073 - C11282 * C4066 - C11281 * C4074 +
             C153862 * C4078 + C11279 * C4071 - C11280 * C4065 -
             C11279 * C4072 + C11271 * C4077 + C11277 * C4069 - C11278 * C4064 -
             C11277 * C4070 + C11270 * C4076 + C11275 * C4067 - C11276 * C4063 -
             C11275 * C4068 + C11269 * C4075) *
                C153637 * C153684 +
            (C13761 + C13760 + C13759 + C13758) * C153637 * C153863) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153637 * C153863 +
            (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
               C1898 -
           ((C12506 + C12507 + C12508 + C12509) * C153637 * C153684 +
            (C11281 * C490 - C11282 * C477 - C11281 * C491 + C153862 * C513 +
             C11279 * C492 - C11280 * C478 - C11279 * C493 + C11271 * C514 +
             C11277 * C494 - C11278 * C479 - C11277 * C495 + C11270 * C515 +
             C11275 * C496 - C11276 * C480 - C11275 * C497 + C11269 * C516) *
                C153637 * C153863) *
               C153601) *
              C153521 * C1093 +
          (((C11275 * C494 - C11276 * C479 - C11275 * C495 + C11269 * C515 +
             C11277 * C492 - C11278 * C478 - C11277 * C493 + C11270 * C514 +
             C11279 * C490 - C11280 * C477 - C11279 * C491 + C11271 * C513 +
             C11281 * C488 - C11282 * C476 - C11281 * C489 + C153862 * C512) *
                C153637 * C153863 +
            (C12510 + C12511 + C12512 + C12513) * C153637 * C153684) *
               C153601 -
           ((C11585 + C11584 + C11583 + C11582) * C153637 * C153684 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153637 * C153863) *
               C1898) *
              C153521 * C1094 +
          (((C11275 * C156 - C11276 * C146 - C11275 * C157 + C11269 * C170 +
             C11277 * C158 - C11278 * C147 - C11277 * C159 + C11270 * C171 +
             C11279 * C160 - C11280 * C148 - C11279 * C161 + C11271 * C172 +
             C11281 * C162 - C11282 * C149 - C11281 * C163 + C153862 * C173) *
                C153637 * C153863 +
            (C12002 + C12003 + C12004 + C12005) * C153637 * C153684) *
               C1898 -
           ((C11281 * C961 - C11282 * C950 - C11281 * C962 + C153862 * C968 +
             C11279 * C959 - C11280 * C949 - C11279 * C960 + C11271 * C967 +
             C11277 * C957 - C11278 * C948 - C11277 * C958 + C11270 * C966 +
             C11275 * C955 - C11276 * C947 - C11275 * C956 + C11269 * C965) *
                C153637 * C153684 +
            (C11281 * C508 - C11282 * C486 - C11281 * C509 + C153862 * C522 +
             C11279 * C488 - C11280 * C476 - C11279 * C489 + C11271 * C512 +
             C11277 * C490 - C11278 * C477 - C11277 * C491 + C11270 * C513 +
             C11275 * C492 - C11276 * C478 - C11275 * C493 + C11269 * C514) *
                C153637 * C153863) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153637 * C34893 +
            (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
            C35213 * C153871) *
               C1898 -
           (C37416 * C153871 + C37417 * C34895 +
            (C36174 + C36175) * C153637 * C34894 +
            (C152081 * C494 - C34900 * C479 - C152081 * C495 + C153472 * C515 +
             C152100 * C496 - C34898 * C480 - C152100 * C497 + C153829 * C516) *
                C153637 * C34893) *
               C153601) *
              C153521 * C1093 +
          (((C152100 * C494 - C34898 * C479 - C152100 * C495 + C153829 * C515 +
             C152081 * C492 - C34900 * C478 - C152081 * C493 + C153472 * C514) *
                C153637 * C34893 +
            (C36176 + C36177) * C153637 * C34894 +
            (C36178 + C36179) * C153637 * C34895 +
            (C36180 + C36181) * C153637 * C153871) *
               C153601 -
           (C35214 * C153871 + C35215 * C34895 +
            (C35201 + C35200) * C153637 * C34894 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C153637 * C34893) *
               C1898) *
              C153521 * C1094 +
          (((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
             C152081 * C158 - C34900 * C147 - C152081 * C159 + C153472 * C171) *
                C153637 * C34893 +
            (C35640 + C35641) * C153637 * C34894 +
            (C35642 + C35643) * C153637 * C34895 +
            (C35644 + C35645) * C153637 * C153871) *
               C1898 -
           ((C152081 * C4073 - C34900 * C4066 - C152081 * C4074 +
             C153472 * C4078 + C152100 * C4071 - C34898 * C4065 -
             C152100 * C4072 + C153829 * C4077) *
                C153637 * C153871 +
            (C152081 * C1763 - C34900 * C1757 - C152081 * C1764 +
             C153472 * C1772 + C152100 * C1765 - C34898 * C1758 -
             C152100 * C1766 + C153829 * C1773) *
                C153637 * C34895 +
            (C152081 * C957 - C34900 * C948 - C152081 * C958 + C153472 * C966 +
             C152100 * C955 - C34898 * C947 - C152100 * C956 + C153829 * C965) *
                C153637 * C34894 +
            (C152081 * C490 - C34900 * C477 - C152081 * C491 + C153472 * C513 +
             C152100 * C492 - C34898 * C478 - C152100 * C493 + C153829 * C514) *
                C153637 * C34893) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153637 * C34893 +
            (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
            C35213 * C153871) *
               C1898 -
           (C37416 * C153871 + C37417 * C34895 +
            (C36174 + C36175) * C153637 * C34894 +
            (C152081 * C494 - C34900 * C479 - C152081 * C495 + C153472 * C515 +
             C152100 * C496 - C34898 * C480 - C152100 * C497 + C153829 * C516) *
                C153637 * C34893) *
               C153601) *
              C298 +
          (((C36175 + C36174) * C153637 * C34893 +
            (C36173 + C36172) * C153637 * C34894 +
            (C36171 + C36170) * C153637 * C34895 +
            (C37422 + C37423) * C153637 * C153871) *
               C153601 -
           (C36516 * C153871 + C36517 * C34895 +
            (C35195 + C35194) * C153637 * C34894 +
            (C35193 + C35192) * C153637 * C34893) *
               C1898) *
              C299 +
          ((C35212 * C34893 + C35213 * C34894 +
            (C35199 + C35198) * C153637 * C34895 +
            (C36522 + C36523) * C153637 * C153871) *
               C1898 -
           ((C152081 * C28996 - C34900 * C28993 - C152081 * C28997 +
             C153472 * C28999 + C152100 * C28994 - C34898 * C28992 -
             C152100 * C28995 + C153829 * C28998) *
                C153637 * C153871 +
            (C37423 + C37422) * C153637 * C34895 + C37416 * C34894 +
            C37417 * C34893) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C47696 +
             (C39442 + C39443) * C47697 + C58748 * C153901) *
                C153863 +
            ((C35192 + C35193) * C47696 + C40462 * C47697 + C41246 * C153901) *
                C153684) *
               C1898 -
           ((C60548 * C153901 + C41245 * C47697 + C40463 * C47696) * C153684 +
            ((C43033 + C43032) * C153901 + (C39444 + C39445) * C47697 +
             (C39443 + C39442) * C47696) *
                C153863) *
               C153601) *
              C153521 * C1093 +
          ((((C39446 + C39447) * C47696 + (C39448 + C39449) * C47697 +
             (C58775 + C58776) * C153901) *
                C153863 +
            (C40464 * C47696 + C59773 * C47697 + (C58777 + C58778) * C153901) *
                C153684) *
               C153601 -
           ((C58765 * C153901 + C40466 * C47697 + (C35201 + C35200) * C47696) *
                C153684 +
            (C58766 * C153901 + (C39447 + C39446) * C47697 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C47696) *
                C153863) *
               C1898) *
              C153521 * C1094 +
          ((((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
              C152081 * C158 - C34900 * C147 - C152081 * C159 +
              C153472 * C171) *
                 C47696 +
             (C40074 + C40075) * C47697 + (C59385 + C59386) * C153901) *
                C153863 +
            ((C35640 + C35641) * C47696 + (C39768 + C39769) * C47697 +
             (C59081 + C59082) * C153901) *
                C153684) *
               C1898 -
           (((C152081 * C8429 - C34900 * C8428 - C152081 * C8430 +
              C153472 * C8431 + C152100 * C6191 - C34898 * C6182 -
              C152100 * C6192 + C153829 * C6200) *
                 C153901 +
             (C59082 + C59081) * C47697 + (C39769 + C39768) * C47696) *
                C153684 +
            ((C152081 * C2115 - C34900 * C2109 - C152081 * C2116 +
              C153472 * C2124 + C152100 * C2117 - C34898 * C2110 -
              C152100 * C2118 + C153829 * C2125) *
                 C153901 +
             (C59386 + C59385) * C47697 + (C40075 + C40074) * C47696) *
                C153863) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C47696 +
             (C39442 + C39443) * C47697 + C58748 * C153901) *
                C153863 +
            ((C35192 + C35193) * C47696 + C40462 * C47697 + C41246 * C153901) *
                C153684) *
               C1898 -
           ((C60548 * C153901 + C41245 * C47697 + C40463 * C47696) * C153684 +
            ((C43033 + C43032) * C153901 + (C39444 + C39445) * C47697 +
             (C39443 + C39442) * C47696) *
                C153863) *
               C153601) *
              C298 +
          (((C40462 * C47696 + C41246 * C47697 + C60549 * C153901) * C153863 +
            (C39073 * C47696 + C41255 * C47697 + (C41274 + C41275) * C153901) *
                C153684) *
               C153601 -
           ((C41244 * C153901 + C37407 * C47697 + (C35195 + C35194) * C47696) *
                C153684 +
            (C41245 * C153901 + C40463 * C47697 + (C35193 + C35192) * C47696) *
                C153863) *
               C1898) *
              C299 +
          (((C35208 * C47696 + C39073 * C47697 + C41255 * C153901) * C153863 +
            (C35209 * C47696 + C42244 * C47697 + (C36758 + C36759) * C153901) *
                C153684) *
               C1898 -
           (((C152081 * C32074 - C34900 * C32073 - C152081 * C32075 +
              C153472 * C32076 + C152100 * C30186 - C34898 * C30183 -
              C152100 * C30187 + C153829 * C30189) *
                 C153901 +
             (C36759 + C36758) * C47697 + C37406 * C47696) *
                C153684 +
            ((C41275 + C41274) * C153901 + C41244 * C47697 + C37407 * C47696) *
                C153863) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[165] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153864 +
             C31290 * C153724) *
                C34893 +
            (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
               C153537 * C153848 -
           ((C44330 + C44331) * C153871 + (C44329 + C44328) * C34895 +
            (C44327 + C44326) * C34894 + (C44325 + C44324) * C34893) *
               C153537 * C153573) *
              C153917 +
          (((C44332 + C44333) * C34893 + (C44334 + C44335) * C34894 +
            (C44336 + C44337) * C34895 + (C44338 + C44339) * C153871) *
               C153537 * C153573 -
           (C44342 * C153871 + C44343 * C34895 + (C44333 + C44332) * C34894 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153864) *
                C34893) *
               C153537 * C153848) *
              C153918 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C153864 +
             C31782 * C153724) *
                C34893 +
            (C44732 + C44733) * C34894 + (C44734 + C44735) * C34895 +
            (C44736 + C44744) * C153871) *
               C153537 * C153848 -
           (((C28212 * C5564 - C28213 * C5561 - C28212 * C5565 +
              C153462 * C5570) *
                 C153724 +
             C28704 * C153864) *
                C153871 +
            (C44744 + C44736) * C34895 + (C44735 + C44734) * C34894 +
            (C44733 + C44732) * C34893) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153864 +
             (C7639 + C7640 + C7641) * C153724) *
                C153863 +
            ((C3038 + C3039 + C3040) * C153864 +
             (C4157 + C4156 + C4155) * C153724) *
                C153684) *
               C153537 * C153848 -
           ((C5587 * C153724 + (C3043 + C3042 + C3041) * C153864) * C153684 +
            ((C4155 + C4156 + C4157) * C153724 +
             (C3040 + C3039 + C3038) * C153864) *
                C153863) *
               C153537 * C153573) *
              C153917 +
          ((((C3047 + C3048 + C3049) * C153864 +
             (C4158 + C4159 + C4160) * C153724) *
                C153863 +
            ((C3050 + C3051 + C3052) * C153864 +
             (C4161 + C4162 + C4163) * C153724) *
                C153684) *
               C153537 * C153573 -
           (((C4160 + C4159 + C4158) * C153724 +
             (C3049 + C3048 + C3047) * C153864) *
                C153684 +
            ((C7650 + C7649 + C7648) * C153724 +
             (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
              C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
              C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                 C153864) *
                C153863) *
               C153537 * C153848) *
              C153918 +
          ((((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
              C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
              C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                 C153864 +
             (C8133 + C8134 + C8135) * C153724) *
                C153863 +
            ((C3550 + C3551 + C3552) * C153864 +
             (C19670 + C19671 + C19672) * C153724) *
                C153684) *
               C153537 * C153848 -
           (((C2693 * C1761 - C2694 * C1756 - C2693 * C1762 + C153885 * C1771 +
              C2691 * C1763 - C2692 * C1757 - C2691 * C1764 + C2684 * C1772 +
              C2689 * C1765 - C2690 * C1758 - C2689 * C1766 + C2683 * C1773) *
                 C153724 +
             (C3555 + C3554 + C3553) * C153864) *
                C153684 +
            ((C19672 + C19671 + C19670) * C153724 +
             (C3552 + C3551 + C3550) * C153864) *
                C153863) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C63414 +
             C31290 * C63415 + C31291 * C63416 + C31294 * C153878) *
                C153863 +
            (C67150 + C67151 + C67152 + C67153) * C153684) *
               C153537 * C153848 -
           ((C67154 + C67155 + C67156 + C67157) * C153684 +
            (C67153 + C67152 + C67151 + C67150) * C153863) *
               C153537 * C153573) *
              C153917 +
          (((C67158 + C67159 + C67160 + C67161) * C153863 +
            (C67162 + C67163 + C67164 + C67165) * C153684) *
               C153537 * C153573 -
           ((C67161 + C67160 + C67159 + C67158) * C153684 +
            (C31297 * C153878 + C31296 * C63416 + C31295 * C63415 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C63414) *
                C153863) *
               C153537 * C153848) *
              C153918 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C63414 +
             C31782 * C63415 + C31783 * C63416 + C56313 * C153878) *
                C153863 +
            (C67554 + C67555 + C67556 + C67564) * C153684) *
               C153537 * C153848 -
           (((C28212 * C6185 - C28213 * C6179 - C28212 * C6186 +
              C153462 * C6197) *
                 C153878 +
             C31547 * C63416 + C31546 * C63415 + C28702 * C63414) *
                C153684 +
            (C67564 + C67556 + C67555 + C67554) * C153863) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q));
    d2ee[166] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                  C153864 +
              C31290 * C153724) *
                 C34893 +
             (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
                C153849 -
            ((C45197 + C45198) * C153871 + (C45199 + C45200) * C34895 +
             (C45201 + C45202) * C34894 +
             (C31291 * C153724 + C31290 * C153864) * C34893) *
                C153601) *
               C153848 +
           (((C45202 + C45201) * C34893 + (C45200 + C45199) * C34894 +
             (C45198 + C45197) * C34895 +
             (C29049 * C153864 + C29434 * C153724) * C153871) *
                C153601 -
            ((C44330 + C44331) * C153871 + (C44329 + C44328) * C34895 +
             (C44327 + C44326) * C34894 + (C44325 + C44324) * C34893) *
                C153849) *
               C153573) *
              C301 +
          ((((C31295 * C153864 + C31296 * C153724) * C34893 +
             (C45203 + C45204) * C34894 + (C45205 + C45206) * C34895 +
             (C45207 + C45208) * C153871) *
                C153601 -
            (C44342 * C153871 + C44343 * C34895 + (C44333 + C44332) * C34894 +
             (C31295 * C153724 +
              (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                  C153864) *
                 C34893) *
                C153849) *
               C153848 +
           (((C44332 + C44333) * C34893 + (C44334 + C44335) * C34894 +
             (C44336 + C44337) * C34895 + (C44338 + C44339) * C153871) *
                C153849 -
            (((C28212 * C28550 - C28213 * C28547 - C28212 * C28551 +
               C153462 * C28553) *
                  C153724 +
              C29056 * C153864) *
                 C153871 +
             (C45208 + C45207) * C34895 + (C45206 + C45205) * C34894 +
             (C45204 + C45203) * C34893) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
               C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
               C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                  C153864 +
              (C7639 + C7640 + C7641) * C153724) *
                 C153863 +
             ((C3038 + C3039 + C3040) * C153864 + C20353 * C153724) * C153684) *
                C153849 -
            ((C9064 * C153724 + C20354 * C153864) * C153684 +
             ((C7644 + C7643 + C7642) * C153724 +
              (C7641 + C7640 + C7639) * C153864) *
                 C153863) *
                C153601) *
               C153848 +
           (((C20353 * C153864 + (C4830 + C4831 + C4832) * C153724) * C153863 +
             ((C4154 + C4153 + C4152) * C153864 +
              (C4833 + C4834 + C4835) * C153724) *
                 C153684) *
                C153601 -
            ((C5587 * C153724 + (C3043 + C3042 + C3041) * C153864) * C153684 +
             (C20354 * C153724 + (C3040 + C3039 + C3038) * C153864) * C153863) *
                C153849) *
               C153573) *
              C301 +
          (((((C7648 + C7649 + C7650) * C153864 +
              (C7651 + C7652 + C7653) * C153724) *
                 C153863 +
             (C20355 * C153864 + (C8451 + C8452 + C8453) * C153724) * C153684) *
                C153601 -
            ((C20356 * C153724 + (C3049 + C3048 + C3047) * C153864) * C153684 +
             ((C7650 + C7649 + C7648) * C153724 +
              (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
               C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
               C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                  C153864) *
                 C153863) *
                C153849) *
               C153848 +
           ((((C3047 + C3048 + C3049) * C153864 + C20355 * C153724) * C153863 +
             ((C3050 + C3051 + C3052) * C153864 +
              (C4161 + C4162 + C4163) * C153724) *
                 C153684) *
                C153849 -
            (((C2693 * C3289 - C2694 * C3282 - C2693 * C3290 + C153885 * C3294 +
               C2691 * C3287 - C2692 * C3281 - C2691 * C3288 + C2684 * C3293 +
               C2689 * C3285 - C2690 * C3280 - C2689 * C3286 + C2683 * C3292) *
                  C153724 +
              (C4163 + C4162 + C4161) * C153864) *
                 C153684 +
             ((C8453 + C8452 + C8451) * C153724 + C20356 * C153864) * C153863) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                  C63414 +
              C31290 * C63415 + C31291 * C63416 + C31294 * C153878) *
                 C153863 +
             (C67150 + C67151 + C67152 + C67153) * C153684) *
                C153849 -
            ((C68017 + C68018 + C68019 + C68020) * C153684 +
             (C34035 * C153878 + C31294 * C63416 + C31291 * C63415 +
              C31290 * C63414) *
                 C153863) *
                C153601) *
               C153848 +
           (((C68020 + C68019 + C68018 + C68017) * C153863 +
             (C29051 * C63414 + C29432 * C63415 + C31292 * C63416 +
              C32704 * C153878) *
                 C153684) *
                C153601 -
            ((C67154 + C67155 + C67156 + C67157) * C153684 +
             (C67153 + C67152 + C67151 + C67150) * C153863) *
                C153849) *
               C153573) *
              C301 +
          ((((C31295 * C63414 + C31296 * C63415 + C31297 * C63416 +
              C56055 * C153878) *
                 C153863 +
             (C68021 + C68022 + C68023 + C68024) * C153684) *
                C153601 -
            ((C67161 + C67160 + C67159 + C67158) * C153684 +
             (C31297 * C153878 + C31296 * C63416 + C31295 * C63415 +
              (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                  C63414) *
                 C153863) *
                C153849) *
               C153848 +
           (((C67158 + C67159 + C67160 + C67161) * C153863 +
             (C67162 + C67163 + C67164 + C67165) * C153684) *
                C153849 -
            (((C28212 * C31225 - C28213 * C31222 - C28212 * C31226 +
               C153462 * C31228) *
                  C153878 +
              C31299 * C63416 + C30998 * C63415 + C29054 * C63414) *
                 C153684 +
             (C68024 + C68023 + C68022 + C68021) * C153863) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[167] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
                 C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
                 C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                    C153864 +
                (C7639 + C7640 + C7641) * C153724) *
                   C153863 +
               ((C3038 + C3039 + C3040) * C153864 +
                (C4157 + C4156 + C4155) * C153724) *
                   C153684) *
                  C153537 * C153521 * C130 -
              (((C4160 + C4159 + C4158) * C153724 +
                (C3049 + C3048 + C3047) * C153864) *
                   C153684 +
               ((C7650 + C7649 + C7648) * C153724 +
                (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
                 C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
                 C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                    C153864) *
                   C153863) *
                  C153537 * C153521 * C131 +
              (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
                 C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
                 C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                    C153864 +
                (C8133 + C8134 + C8135) * C153724) *
                   C153863 +
               ((C3550 + C3551 + C3552) * C153864 +
                (C2689 * C955 - C2690 * C947 - C2689 * C956 + C2683 * C965 +
                 C2691 * C957 - C2692 * C948 - C2691 * C958 + C2684 * C966 +
                 C2693 * C959 - C2694 * C949 - C2693 * C960 + C153885 * C967) *
                    C153724) *
                   C153684) *
                  C153537 * C153521 * C132 -
              (((C2693 * C961 - C2694 * C950 - C2693 * C962 + C153885 * C968 +
                 C2691 * C959 - C2692 * C949 - C2691 * C960 + C2684 * C967 +
                 C2689 * C957 - C2690 * C948 - C2689 * C958 + C2683 * C966) *
                    C153724 +
                (C2693 * C335 - C2694 * C313 - C2693 * C336 + C153885 * C349 +
                 C2691 * C315 - C2692 * C303 - C2691 * C316 + C2684 * C339 +
                 C2689 * C317 - C2690 * C304 - C2689 * C318 + C2683 * C340) *
                    C153864) *
                   C153684 +
               ((C2693 * C508 - C2694 * C486 - C2693 * C509 + C153885 * C522 +
                 C2691 * C488 - C2692 * C476 - C2691 * C489 + C2684 * C512 +
                 C2689 * C490 - C2690 * C477 - C2689 * C491 + C2683 * C513) *
                    C153724 +
                (C2693 * C162 - C2694 * C149 - C2693 * C163 + C153885 * C173 +
                 C2691 * C160 - C2692 * C148 - C2691 * C161 + C2684 * C172 +
                 C2689 * C158 - C2690 * C147 - C2689 * C159 + C2683 * C171) *
                    C153864) *
                   C153863) *
                  C153537 * C153521 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
                  C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
                  C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                     C153864 +
                 (C7639 + C7640 + C7641) * C153724) *
                    C153863 +
                ((C3038 + C3039 + C3040) * C153864 +
                 (C4157 + C4156 + C4155) * C153724) *
                    C153684) *
                   C153537 * C298 -
               ((C5587 * C153724 + (C3043 + C3042 + C3041) * C153864) *
                    C153684 +
                ((C4155 + C4156 + C4157) * C153724 +
                 (C3040 + C3039 + C3038) * C153864) *
                    C153863) *
                   C153537 * C299 +
               ((C3058 * C153864 + (C4154 + C4153 + C4152) * C153724) *
                    C153863 +
                ((C3046 + C3045 + C3044) * C153864 +
                 (C5595 + C5596 + C5597) * C153724) *
                    C153684) *
                   C153537 * C300) *
                  C301 +
              ((((C3047 + C3048 + C3049) * C153864 +
                 (C4158 + C4159 + C4160) * C153724) *
                    C153863 +
                ((C3050 + C3051 + C3052) * C153864 +
                 (C4161 + C4162 + C4163) * C153724) *
                    C153684) *
                   C153537 * C299 -
               (((C4160 + C4159 + C4158) * C153724 +
                 (C3049 + C3048 + C3047) * C153864) *
                    C153684 +
                ((C7650 + C7649 + C7648) * C153724 +
                 (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
                  C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
                  C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                     C153864) *
                    C153863) *
                   C153537 * C298 -
               (((C2693 * C4073 - C2694 * C4066 - C2693 * C4074 +
                  C153885 * C4078 + C2691 * C4071 - C2692 * C4065 -
                  C2691 * C4072 + C2684 * C4077 + C2689 * C4069 -
                  C2690 * C4064 - C2689 * C4070 + C2683 * C4076) *
                     C153724 +
                 (C3055 + C3054 + C3053) * C153864) *
                    C153684 +
                ((C4163 + C4162 + C4161) * C153724 + C3059 * C153864) *
                    C153863) *
                   C153537 * C300) *
                  C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153864 +
             (C7639 + C7640 + C7641) * C153724) *
                C153863 +
            ((C3038 + C3039 + C3040) * C153864 +
             (C4157 + C4156 + C4155) * C153724) *
                C153684) *
               C473 -
           ((C9064 * C153724 + (C4155 + C4156 + C4157) * C153864) * C153684 +
            ((C7644 + C7643 + C7642) * C153724 +
             (C7641 + C7640 + C7639) * C153864) *
                C153863) *
               C474 +
           ((C7659 * C153864 + (C7647 + C7646 + C7645) * C153724) * C153863 +
            ((C4830 + C4831 + C4832) * C153864 +
             (C9068 + C9069 + C9070) * C153724) *
                C153684) *
               C475) *
              C153521 * C301 +
          ((((C7648 + C7649 + C7650) * C153864 +
             (C7651 + C7652 + C7653) * C153724) *
                C153863 +
            ((C4158 + C4159 + C4160) * C153864 +
             (C8451 + C8452 + C8453) * C153724) *
                C153684) *
               C474 -
           (((C4160 + C4159 + C4158) * C153724 +
             (C3049 + C3048 + C3047) * C153864) *
                C153684 +
            ((C7650 + C7649 + C7648) * C153724 +
             (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
              C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
              C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                 C153864) *
                C153863) *
               C473 -
           (((C2693 * C8429 - C2694 * C8428 - C2693 * C8430 + C153885 * C8431 +
              C2691 * C6191 - C2692 * C6182 - C2691 * C6192 + C2684 * C6200 +
              C2689 * C6193 - C2690 * C6183 - C2689 * C6194 + C2683 * C6201) *
                 C153724 +
             (C8453 + C8452 + C8451) * C153864) *
                C153684 +
            ((C7656 + C7655 + C7654) * C153724 + C7660 * C153864) * C153863) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153864 +
            C31290 * C153724) *
               C34893 +
           (C28405 * C153864 + C29052 * C153724) * C34894 +
           (C28406 * C153864 + C29051 * C153724) * C34895 +
           (C28407 * C153864 + C29050 * C153724) * C153871) *
              C153537 * C153521 * C130 -
          ((C29055 * C153724 + C28412 * C153864) * C153871 +
           (C29054 * C153724 + C28411 * C153864) * C34895 +
           (C29053 * C153724 + C28410 * C153864) * C34894 +
           (C31295 * C153724 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153864) *
               C34893) *
              C153537 * C153521 * C131 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C153864 +
            C31782 * C153724) *
               C34893 +
           (C28701 * C153864 + C31544 * C153724) * C34894 +
           (C28702 * C153864 + C31546 * C153724) * C34895 +
           (C28703 * C153864 + (C28212 * C4071 - C28213 * C4065 -
                                C28212 * C4072 + C153462 * C4077) *
                                   C153724) *
               C153871) *
              C153537 * C153521 * C132 -
          (((C28212 * C4073 - C28213 * C4066 - C28212 * C4074 +
             C153462 * C4078) *
                C153724 +
            (C28212 * C1190 - C28213 * C1184 - C28212 * C1191 +
             C153462 * C1199) *
                C153864) *
               C153871 +
           ((C28212 * C1763 - C28213 * C1757 - C28212 * C1764 +
             C153462 * C1772) *
                C153724 +
            (C28212 * C331 - C28213 * C311 - C28212 * C332 + C153462 * C347) *
                C153864) *
               C34895 +
           ((C28212 * C957 - C28213 * C948 - C28212 * C958 + C153462 * C966) *
                C153724 +
            (C28212 * C317 - C28213 * C304 - C28212 * C318 + C153462 * C340) *
                C153864) *
               C34894 +
           ((C28212 * C490 - C28213 * C477 - C28212 * C491 + C153462 * C513) *
                C153724 +
            (C28212 * C158 - C28213 * C147 - C28212 * C159 + C153462 * C171) *
                C153864) *
               C34893) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153864 +
             C31290 * C153724) *
                C34893 +
            (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
               C153537 * C298 -
           ((C44330 + C44331) * C153871 + (C44329 + C44328) * C34895 +
            (C44327 + C44326) * C34894 + (C44325 + C44324) * C34893) *
               C153537 * C299 +
           (C44340 * C34893 + C44341 * C34894 + (C44331 + C44330) * C34895 +
            (C28409 * C153864 + C29855 * C153724) * C153871) *
               C153537 * C300) *
              C301 +
          (((C44332 + C44333) * C34893 + (C44334 + C44335) * C34894 +
            (C44336 + C44337) * C34895 + (C44338 + C44339) * C153871) *
               C153537 * C299 -
           (C44342 * C153871 + C44343 * C34895 + (C44333 + C44332) * C34894 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153864) *
                C34893) *
               C153537 * C298 -
           (((C28212 * C28996 - C28213 * C28993 - C28212 * C28997 +
              C153462 * C28999) *
                 C153724 +
             C28414 * C153864) *
                C153871 +
            (C44339 + C44338) * C34895 + C44342 * C34894 + C44343 * C34893) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153864 +
             C31290 * C153724) *
                C34893 +
            (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
               C473 -
           ((C29433 * C153724 + C29050 * C153864) * C153871 +
            (C29432 * C153724 + C29051 * C153864) * C34895 +
            (C29431 * C153724 + C29052 * C153864) * C34894 +
            (C31291 * C153724 + C31290 * C153864) * C34893) *
               C474 +
           ((C31291 * C153864 + C31294 * C153724) * C34893 +
            (C29431 * C153864 + C31293 * C153724) * C34894 +
            (C29432 * C153864 + C31292 * C153724) * C34895 +
            (C29433 * C153864 + C32705 * C153724) * C153871) *
               C475) *
              C153521 * C301 +
          (((C31295 * C153864 + C31296 * C153724) * C34893 +
            (C29053 * C153864 + C30997 * C153724) * C34894 +
            (C29054 * C153864 + C30998 * C153724) * C34895 +
            (C29055 * C153864 + C30999 * C153724) * C153871) *
               C474 -
           (C44342 * C153871 + C44343 * C34895 + (C44333 + C44332) * C34894 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153864) *
                C34893) *
               C473 -
           (((C28212 * C32074 - C28213 * C32073 - C28212 * C32075 +
              C153462 * C32076) *
                 C153724 +
             C30999 * C153864) *
                C153871 +
            (C31299 * C153724 + C30998 * C153864) * C34895 +
            (C31298 * C153724 + C30997 * C153864) * C34894 +
            (C31297 * C153724 + C31296 * C153864) * C34893) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C63414 +
            C31290 * C63415 + C31291 * C63416 + C31294 * C153878) *
               C153863 +
           (C28405 * C63414 + C29052 * C63415 + C29431 * C63416 +
            C31293 * C153878) *
               C153684) *
              C153537 * C153521 * C130 -
          ((C31298 * C153878 + C30997 * C63416 + C29053 * C63415 +
            C28410 * C63414) *
               C153684 +
           (C31297 * C153878 + C31296 * C63416 + C31295 * C63415 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C63414) *
               C153863) *
              C153537 * C153521 * C131 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C63414 +
            C31782 * C63415 + C31783 * C63416 + C56313 * C153878) *
               C153863 +
           (C28701 * C63414 + C31544 * C63415 + C31545 * C63416 +
            (C28212 * C6191 - C28213 * C6182 - C28212 * C6192 +
             C153462 * C6200) *
                C153878) *
               C153684) *
              C153537 * C153521 * C132 -
          (((C28212 * C8429 - C28213 * C8428 - C28212 * C8430 +
             C153462 * C8431) *
                C153878 +
            (C28212 * C1332 - C28213 * C1326 - C28212 * C1333 +
             C153462 * C1341) *
                C63416 +
            (C28212 * C957 - C28213 * C948 - C28212 * C958 + C153462 * C966) *
                C63415 +
            (C28212 * C317 - C28213 * C304 - C28212 * C318 + C153462 * C340) *
                C63414) *
               C153684 +
           ((C28212 * C2115 - C28213 * C2109 - C28212 * C2116 +
             C153462 * C2124) *
                C153878 +
            (C28212 * C504 - C28213 * C484 - C28212 * C505 + C153462 * C520) *
                C63416 +
            (C28212 * C490 - C28213 * C477 - C28212 * C491 + C153462 * C513) *
                C63415 +
            (C28212 * C158 - C28213 * C147 - C28212 * C159 + C153462 * C171) *
                C63414) *
               C153863) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C63414 +
             C31290 * C63415 + C31291 * C63416 + C31294 * C153878) *
                C153863 +
            (C67150 + C67151 + C67152 + C67153) * C153684) *
               C153537 * C298 -
           ((C67154 + C67155 + C67156 + C67157) * C153684 +
            (C67153 + C67152 + C67151 + C67150) * C153863) *
               C153537 * C299 +
           ((C67157 + C67156 + C67155 + C67154) * C153863 +
            (C28407 * C63414 + C29050 * C63415 + C29433 * C63416 +
             C32705 * C153878) *
                C153684) *
               C153537 * C300) *
              C301 +
          (((C67158 + C67159 + C67160 + C67161) * C153863 +
            (C67162 + C67163 + C67164 + C67165) * C153684) *
               C153537 * C299 -
           ((C67161 + C67160 + C67159 + C67158) * C153684 +
            (C31297 * C153878 + C31296 * C63416 + C31295 * C63415 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C63414) *
                C153863) *
               C153537 * C298 -
           (((C28212 * C32074 - C28213 * C32073 - C28212 * C32075 +
              C153462 * C32076) *
                 C153878 +
             C30999 * C63416 + C29055 * C63415 + C28412 * C63414) *
                C153684 +
            (C67165 + C67164 + C67163 + C67162) * C153863) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C63414 +
             C31290 * C63415 + C31291 * C63416 + C31294 * C153878) *
                C153863 +
            (C67150 + C67151 + C67152 + C67153) * C153684) *
               C473 -
           ((C32703 * C153878 + C31293 * C63416 + C29431 * C63415 +
             C29052 * C63414) *
                C153684 +
            (C34035 * C153878 + C31294 * C63416 + C31291 * C63415 +
             C31290 * C63414) *
                C153863) *
               C474 +
           ((C31291 * C63414 + C31294 * C63415 + C34035 * C63416 +
             C56054 * C153878) *
                C153863 +
            (C29431 * C63414 + C31293 * C63415 + C32703 * C63416 +
             C56824 * C153878) *
                C153684) *
               C475) *
              C153521 * C301 +
          (((C31295 * C63414 + C31296 * C63415 + C31297 * C63416 +
             C56055 * C153878) *
                C153863 +
            (C29053 * C63414 + C30997 * C63415 + C31298 * C63416 +
             C56487 * C153878) *
                C153684) *
               C474 -
           ((C67161 + C67160 + C67159 + C67158) * C153684 +
            (C31297 * C153878 + C31296 * C63416 + C31295 * C63415 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C63414) *
                C153863) *
               C473 -
           (((C28212 * C56477 - C28213 * C56476 - C28212 * C56478 +
              C153462 * C56479) *
                 C153878 +
             C56487 * C63416 + C31298 * C63415 + C30997 * C63414) *
                C153684 +
            (C56056 * C153878 + C56055 * C63416 + C31297 * C63415 +
             C31296 * C63414) *
                C153863) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[168] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153864 +
             C31290 * C153724) *
                C34893 +
            (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
               C153849 -
           ((C29433 * C153724 + C29050 * C153864) * C153871 +
            (C29432 * C153724 + C29051 * C153864) * C34895 +
            (C29431 * C153724 + C29052 * C153864) * C34894 +
            (C31291 * C153724 + C31290 * C153864) * C34893) *
               C153601) *
              C153521 * C153917 +
          (((C31295 * C153864 + C31296 * C153724) * C34893 +
            (C29053 * C153864 + C30997 * C153724) * C34894 +
            (C29054 * C153864 + C30998 * C153724) * C34895 +
            (C29055 * C153864 + C30999 * C153724) * C153871) *
               C153601 -
           (C44342 * C153871 + C44343 * C34895 + (C44333 + C44332) * C34894 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153864) *
                C34893) *
               C153849) *
              C153521 * C153918 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C153864 +
             C31782 * C153724) *
                C34893 +
            (C44732 + C44733) * C34894 + (C44734 + C44735) * C34895 +
            (C44736 + C44744) * C153871) *
               C153849 -
           (((C28212 * C4784 - C28213 * C4781 - C28212 * C4785 +
              C153462 * C4790) *
                 C153724 +
             C44743 * C153864) *
                C153871 +
            (C31547 * C153724 + C31546 * C153864) * C34895 +
            (C31545 * C153724 + C31544 * C153864) * C34894 +
            (C31783 * C153724 + C31782 * C153864) * C34893) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153864 +
             (C7639 + C7640 + C7641) * C153724) *
                C153863 +
            ((C3038 + C3039 + C3040) * C153864 +
             (C4157 + C4156 + C4155) * C153724) *
                C153684) *
               C153849 -
           ((C9064 * C153724 + (C4155 + C4156 + C4157) * C153864) * C153684 +
            ((C7644 + C7643 + C7642) * C153724 +
             (C7641 + C7640 + C7639) * C153864) *
                C153863) *
               C153601) *
              C153521 * C153917 +
          ((((C7648 + C7649 + C7650) * C153864 +
             (C7651 + C7652 + C7653) * C153724) *
                C153863 +
            ((C4158 + C4159 + C4160) * C153864 +
             (C8451 + C8452 + C8453) * C153724) *
                C153684) *
               C153601 -
           (((C4160 + C4159 + C4158) * C153724 +
             (C3049 + C3048 + C3047) * C153864) *
                C153684 +
            ((C7650 + C7649 + C7648) * C153724 +
             (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
              C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
              C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                 C153864) *
                C153863) *
               C153849) *
              C153521 * C153918 +
          ((((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
              C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
              C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                 C153864 +
             (C8133 + C8134 + C8135) * C153724) *
                C153863 +
            ((C3550 + C3551 + C3552) * C153864 +
             (C19670 + C19671 + C19672) * C153724) *
                C153684) *
               C153849 -
           (((C2693 * C1330 - C2694 * C1325 - C2693 * C1331 + C153885 * C1340 +
              C2691 * C1332 - C2692 * C1326 - C2691 * C1333 + C2684 * C1341 +
              C2689 * C1334 - C2690 * C1327 - C2689 * C1335 + C2683 * C1342) *
                 C153724 +
             (C19672 + C19671 + C19670) * C153864) *
                C153684 +
            ((C8138 + C8137 + C8136) * C153724 +
             (C8135 + C8134 + C8133) * C153864) *
                C153863) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C63414 +
             C31290 * C63415 + C31291 * C63416 + C31294 * C153878) *
                C153863 +
            (C67150 + C67151 + C67152 + C67153) * C153684) *
               C153849 -
           ((C32703 * C153878 + C31293 * C63416 + C29431 * C63415 +
             C29052 * C63414) *
                C153684 +
            (C34035 * C153878 + C31294 * C63416 + C31291 * C63415 +
             C31290 * C63414) *
                C153863) *
               C153601) *
              C153521 * C153917 +
          (((C31295 * C63414 + C31296 * C63415 + C31297 * C63416 +
             C56055 * C153878) *
                C153863 +
            (C29053 * C63414 + C30997 * C63415 + C31298 * C63416 +
             C56487 * C153878) *
                C153684) *
               C153601 -
           ((C67161 + C67160 + C67159 + C67158) * C153684 +
            (C31297 * C153878 + C31296 * C63416 + C31295 * C63415 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C63414) *
                C153863) *
               C153849) *
              C153521 * C153918 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C63414 +
             C31782 * C63415 + C31783 * C63416 + C56313 * C153878) *
                C153863 +
            (C67554 + C67555 + C67556 + C67564) * C153684) *
               C153849 -
           (((C28212 * C9038 - C28213 * C9035 - C28212 * C9039 +
              C153462 * C9044) *
                 C153878 +
             C67563 * C63416 + C31545 * C63415 + C31544 * C63414) *
                C153684 +
            (C56314 * C153878 + C56313 * C63416 + C31783 * C63415 +
             C31782 * C63414) *
                C153863) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q));
    d2ee[169] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153864 +
             (C7639 + C7640 + C7641) * C153724) *
                C153863 +
            ((C3038 + C3039 + C3040) * C153864 +
             (C4157 + C4156 + C4155) * C153724) *
                C153684) *
               C153537 * C298 -
           ((C5587 * C153724 + (C3043 + C3042 + C3041) * C153864) * C153684 +
            ((C4155 + C4156 + C4157) * C153724 +
             (C3040 + C3039 + C3038) * C153864) *
                C153863) *
               C153537 * C299 +
           ((C3058 * C153864 + (C4154 + C4153 + C4152) * C153724) * C153863 +
            ((C3046 + C3045 + C3044) * C153864 +
             (C5595 + C5596 + C5597) * C153724) *
                C153684) *
               C153537 * C300) *
              C301 +
          ((((C3047 + C3048 + C3049) * C153864 +
             (C4158 + C4159 + C4160) * C153724) *
                C153863 +
            ((C3050 + C3051 + C3052) * C153864 +
             (C4161 + C4162 + C4163) * C153724) *
                C153684) *
               C153537 * C299 -
           (((C4160 + C4159 + C4158) * C153724 +
             (C3049 + C3048 + C3047) * C153864) *
                C153684 +
            ((C7650 + C7649 + C7648) * C153724 +
             (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
              C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
              C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                 C153864) *
                C153863) *
               C153537 * C298 -
           (((C2693 * C4073 - C2694 * C4066 - C2693 * C4074 + C153885 * C4078 +
              C2691 * C4071 - C2692 * C4065 - C2691 * C4072 + C2684 * C4077 +
              C2689 * C4069 - C2690 * C4064 - C2689 * C4070 + C2683 * C4076) *
                 C153724 +
             (C3055 + C3054 + C3053) * C153864) *
                C153684 +
            ((C4163 + C4162 + C4161) * C153724 + C3059 * C153864) * C153863) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153864 +
            (C7639 + C7640 + C7641) * C153724) *
               C153863 +
           ((C3038 + C3039 + C3040) * C153864 +
            (C4157 + C4156 + C4155) * C153724) *
               C153684) *
              C153537 * C153521 * C130 -
          (((C4160 + C4159 + C4158) * C153724 +
            (C3049 + C3048 + C3047) * C153864) *
               C153684 +
           ((C7650 + C7649 + C7648) * C153724 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153864) *
               C153863) *
              C153537 * C153521 * C131 +
          (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
             C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
             C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                C153864 +
            (C8133 + C8134 + C8135) * C153724) *
               C153863 +
           ((C3550 + C3551 + C3552) * C153864 +
            (C2689 * C955 - C2690 * C947 - C2689 * C956 + C2683 * C965 +
             C2691 * C957 - C2692 * C948 - C2691 * C958 + C2684 * C966 +
             C2693 * C959 - C2694 * C949 - C2693 * C960 + C153885 * C967) *
                C153724) *
               C153684) *
              C153537 * C153521 * C132 -
          (((C2693 * C961 - C2694 * C950 - C2693 * C962 + C153885 * C968 +
             C2691 * C959 - C2692 * C949 - C2691 * C960 + C2684 * C967 +
             C2689 * C957 - C2690 * C948 - C2689 * C958 + C2683 * C966) *
                C153724 +
            (C2693 * C335 - C2694 * C313 - C2693 * C336 + C153885 * C349 +
             C2691 * C315 - C2692 * C303 - C2691 * C316 + C2684 * C339 +
             C2689 * C317 - C2690 * C304 - C2689 * C318 + C2683 * C340) *
                C153864) *
               C153684 +
           ((C2693 * C508 - C2694 * C486 - C2693 * C509 + C153885 * C522 +
             C2691 * C488 - C2692 * C476 - C2691 * C489 + C2684 * C512 +
             C2689 * C490 - C2690 * C477 - C2689 * C491 + C2683 * C513) *
                C153724 +
            (C2693 * C162 - C2694 * C149 - C2693 * C163 + C153885 * C173 +
             C2691 * C160 - C2692 * C148 - C2691 * C161 + C2684 * C172 +
             C2689 * C158 - C2690 * C147 - C2689 * C159 + C2683 * C171) *
                C153864) *
               C153863) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153864 +
            C31290 * C153724) *
               C34893 +
           (C28405 * C153864 + C29052 * C153724) * C34894 +
           (C28406 * C153864 + C29051 * C153724) * C34895 +
           (C28407 * C153864 + C29050 * C153724) * C153871) *
              C153537 * C153521 * C130 -
          ((C29055 * C153724 + C28412 * C153864) * C153871 +
           (C29054 * C153724 + C28411 * C153864) * C34895 +
           (C29053 * C153724 + C28410 * C153864) * C34894 +
           (C31295 * C153724 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153864) *
               C34893) *
              C153537 * C153521 * C131 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C153864 +
            C31782 * C153724) *
               C34893 +
           (C28701 * C153864 + C31544 * C153724) * C34894 +
           (C28702 * C153864 + C31546 * C153724) * C34895 +
           (C28703 * C153864 + (C28212 * C4071 - C28213 * C4065 -
                                C28212 * C4072 + C153462 * C4077) *
                                   C153724) *
               C153871) *
              C153537 * C153521 * C132 -
          (((C28212 * C4073 - C28213 * C4066 - C28212 * C4074 +
             C153462 * C4078) *
                C153724 +
            (C28212 * C1190 - C28213 * C1184 - C28212 * C1191 +
             C153462 * C1199) *
                C153864) *
               C153871 +
           ((C28212 * C1763 - C28213 * C1757 - C28212 * C1764 +
             C153462 * C1772) *
                C153724 +
            (C28212 * C331 - C28213 * C311 - C28212 * C332 + C153462 * C347) *
                C153864) *
               C34895 +
           ((C28212 * C957 - C28213 * C948 - C28212 * C958 + C153462 * C966) *
                C153724 +
            (C28212 * C317 - C28213 * C304 - C28212 * C318 + C153462 * C340) *
                C153864) *
               C34894 +
           ((C28212 * C490 - C28213 * C477 - C28212 * C491 + C153462 * C513) *
                C153724 +
            (C28212 * C158 - C28213 * C147 - C28212 * C159 + C153462 * C171) *
                C153864) *
               C34893) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153864 +
             C31290 * C153724) *
                C34893 +
            (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
               C153537 * C298 -
           ((C44330 + C44331) * C153871 + (C44329 + C44328) * C34895 +
            (C44327 + C44326) * C34894 + (C44325 + C44324) * C34893) *
               C153537 * C299 +
           (C44340 * C34893 + C44341 * C34894 + (C44331 + C44330) * C34895 +
            (C28409 * C153864 + C29855 * C153724) * C153871) *
               C153537 * C300) *
              C301 +
          (((C44332 + C44333) * C34893 + (C44334 + C44335) * C34894 +
            (C44336 + C44337) * C34895 + (C44338 + C44339) * C153871) *
               C153537 * C299 -
           (C44342 * C153871 + C44343 * C34895 + (C44333 + C44332) * C34894 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153864) *
                C34893) *
               C153537 * C298 -
           (((C28212 * C28996 - C28213 * C28993 - C28212 * C28997 +
              C153462 * C28999) *
                 C153724 +
             C28414 * C153864) *
                C153871 +
            (C44339 + C44338) * C34895 + C44342 * C34894 + C44343 * C34893) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C63414 +
            C31290 * C63415 + C31291 * C63416 + C31294 * C153878) *
               C153863 +
           (C28405 * C63414 + C29052 * C63415 + C29431 * C63416 +
            C31293 * C153878) *
               C153684) *
              C153537 * C153521 * C130 -
          ((C31298 * C153878 + C30997 * C63416 + C29053 * C63415 +
            C28410 * C63414) *
               C153684 +
           (C31297 * C153878 + C31296 * C63416 + C31295 * C63415 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C63414) *
               C153863) *
              C153537 * C153521 * C131 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C63414 +
            C31782 * C63415 + C31783 * C63416 + C56313 * C153878) *
               C153863 +
           (C28701 * C63414 + C31544 * C63415 + C31545 * C63416 +
            (C28212 * C6191 - C28213 * C6182 - C28212 * C6192 +
             C153462 * C6200) *
                C153878) *
               C153684) *
              C153537 * C153521 * C132 -
          (((C28212 * C8429 - C28213 * C8428 - C28212 * C8430 +
             C153462 * C8431) *
                C153878 +
            (C28212 * C1332 - C28213 * C1326 - C28212 * C1333 +
             C153462 * C1341) *
                C63416 +
            (C28212 * C957 - C28213 * C948 - C28212 * C958 + C153462 * C966) *
                C63415 +
            (C28212 * C317 - C28213 * C304 - C28212 * C318 + C153462 * C340) *
                C63414) *
               C153684 +
           ((C28212 * C2115 - C28213 * C2109 - C28212 * C2116 +
             C153462 * C2124) *
                C153878 +
            (C28212 * C504 - C28213 * C484 - C28212 * C505 + C153462 * C520) *
                C63416 +
            (C28212 * C490 - C28213 * C477 - C28212 * C491 + C153462 * C513) *
                C63415 +
            (C28212 * C158 - C28213 * C147 - C28212 * C159 + C153462 * C171) *
                C63414) *
               C153863) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C63414 +
             C31290 * C63415 + C31291 * C63416 + C31294 * C153878) *
                C153863 +
            (C67150 + C67151 + C67152 + C67153) * C153684) *
               C153537 * C298 -
           ((C67154 + C67155 + C67156 + C67157) * C153684 +
            (C67153 + C67152 + C67151 + C67150) * C153863) *
               C153537 * C299 +
           ((C67157 + C67156 + C67155 + C67154) * C153863 +
            (C28407 * C63414 + C29050 * C63415 + C29433 * C63416 +
             C32705 * C153878) *
                C153684) *
               C153537 * C300) *
              C301 +
          (((C67158 + C67159 + C67160 + C67161) * C153863 +
            (C67162 + C67163 + C67164 + C67165) * C153684) *
               C153537 * C299 -
           ((C67161 + C67160 + C67159 + C67158) * C153684 +
            (C31297 * C153878 + C31296 * C63416 + C31295 * C63415 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C63414) *
                C153863) *
               C153537 * C298 -
           (((C28212 * C32074 - C28213 * C32073 - C28212 * C32075 +
              C153462 * C32076) *
                 C153878 +
             C30999 * C63416 + C29055 * C63415 + C28412 * C63414) *
                C153684 +
            (C67165 + C67164 + C67163 + C67162) * C153863) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[170] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153864 +
             C31290 * C153724) *
                C34893 +
            (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
               C153537 * C153919 -
           (C45533 * C153871 + C45534 * C34895 + (C44327 + C44326) * C34894 +
            (C44325 + C44324) * C34893) *
               C153537 * C153920 +
           (C44340 * C34893 + C44341 * C34894 + (C44331 + C44330) * C34895 +
            (C45535 + C45536) * C153871) *
               C153537 * C1469) *
              C153840 +
          (((C44332 + C44333) * C34893 + (C44334 + C44335) * C34894 +
            (C44336 + C44337) * C34895 + (C44338 + C44339) * C153871) *
               C153537 * C153920 -
           (C44342 * C153871 + C44343 * C34895 + (C44333 + C44332) * C34894 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153864) *
                C34893) *
               C153537 * C153919 -
           (((C28212 * C28996 - C28213 * C28993 - C28212 * C28997 +
              C153462 * C28999) *
                 C153724 +
             C28414 * C153864) *
                C153871 +
            (C44339 + C44338) * C34895 + C44342 * C34894 + C44343 * C34893) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153864 +
             (C7639 + C7640 + C7641) * C153724) *
                C153863 +
            ((C3038 + C3039 + C3040) * C153864 + C20353 * C153724) * C153684) *
               C153537 * C153919 -
           ((C5587 * C153724 + (C3043 + C3042 + C3041) * C153864) * C153684 +
            (C20354 * C153724 + (C3040 + C3039 + C3038) * C153864) * C153863) *
               C153537 * C153920 +
           ((C3058 * C153864 + (C4154 + C4153 + C4152) * C153724) * C153863 +
            ((C3046 + C3045 + C3044) * C153864 +
             (C5595 + C5596 + C5597) * C153724) *
                C153684) *
               C153537 * C1469) *
              C153840 +
          ((((C3047 + C3048 + C3049) * C153864 + C20355 * C153724) * C153863 +
            ((C3050 + C3051 + C3052) * C153864 +
             (C4161 + C4162 + C4163) * C153724) *
                C153684) *
               C153537 * C153920 -
           ((C20356 * C153724 + (C3049 + C3048 + C3047) * C153864) * C153684 +
            ((C7650 + C7649 + C7648) * C153724 +
             (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
              C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
              C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                 C153864) *
                C153863) *
               C153537 * C153919 -
           (((C2693 * C4073 - C2694 * C4066 - C2693 * C4074 + C153885 * C4078 +
              C2691 * C4071 - C2692 * C4065 - C2691 * C4072 + C2684 * C4077 +
              C2689 * C4069 - C2690 * C4064 - C2689 * C4070 + C2683 * C4076) *
                 C153724 +
             (C3055 + C3054 + C3053) * C153864) *
                C153684 +
            ((C4163 + C4162 + C4161) * C153724 + C3059 * C153864) * C153863) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C63414 +
             C31290 * C63415 + C31291 * C63416 + C31294 * C153878) *
                C153863 +
            (C67150 + C67151 + C67152 + C67153) * C153684) *
               C153537 * C153919 -
           ((C67154 + C67155 + C67156 + C67157) * C153684 +
            (C67153 + C67152 + C67151 + C67150) * C153863) *
               C153537 * C153920 +
           ((C67157 + C67156 + C67155 + C67154) * C153863 +
            (C68349 + C68350 + C68351 + C68352) * C153684) *
               C153537 * C1469) *
              C153840 +
          (((C67158 + C67159 + C67160 + C67161) * C153863 +
            (C67162 + C67163 + C67164 + C67165) * C153684) *
               C153537 * C153920 -
           ((C67161 + C67160 + C67159 + C67158) * C153684 +
            (C31297 * C153878 + C31296 * C63416 + C31295 * C63415 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C63414) *
                C153863) *
               C153537 * C153919 -
           (((C28212 * C32074 - C28213 * C32073 - C28212 * C32075 +
              C153462 * C32076) *
                 C153878 +
             C30999 * C63416 + C29055 * C63415 + C28412 * C63414) *
                C153684 +
            (C67165 + C67164 + C67163 + C67162) * C153863) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[171] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153864 +
             C31290 * C153724) *
                C34893 +
            (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
               C153849 -
           (C46383 * C153871 + C46384 * C34895 + (C45201 + C45202) * C34894 +
            (C31291 * C153724 + C31290 * C153864) * C34893) *
               C153601) *
              C153919 +
          (((C45202 + C45201) * C34893 + (C45200 + C45199) * C34894 +
            (C45198 + C45197) * C34895 + (C46385 + C46386) * C153871) *
               C153601 -
           (C45533 * C153871 + C45534 * C34895 + (C44327 + C44326) * C34894 +
            (C44325 + C44324) * C34893) *
               C153849) *
              C153920 +
          ((C44340 * C34893 + C44341 * C34894 + (C44331 + C44330) * C34895 +
            (C45535 + C45536) * C153871) *
               C153849 -
           (((C28212 * C29403 - C28213 * C29402 - C28212 * C29404 +
              C153462 * C29405) *
                 C153724 +
             C29855 * C153864) *
                C153871 +
            (C46386 + C46385) * C34895 + C46383 * C34894 + C46384 * C34893) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153864 +
             (C7639 + C7640 + C7641) * C153724) *
                C153863 +
            ((C3038 + C3039 + C3040) * C153864 + C20353 * C153724) * C153684) *
               C153849 -
           ((C9064 * C153724 + C20354 * C153864) * C153684 +
            ((C7644 + C7643 + C7642) * C153724 +
             (C7641 + C7640 + C7639) * C153864) *
                C153863) *
               C153601) *
              C153919 +
          (((C20353 * C153864 + C21132 * C153724) * C153863 +
            (C22100 * C153864 + (C4833 + C4834 + C4835) * C153724) * C153684) *
               C153601 -
           ((C5587 * C153724 + (C3043 + C3042 + C3041) * C153864) * C153684 +
            (C20354 * C153724 + (C3040 + C3039 + C3038) * C153864) * C153863) *
               C153849) *
              C153920 +
          (((C3058 * C153864 + C22100 * C153724) * C153863 +
            ((C3046 + C3045 + C3044) * C153864 +
             (C5595 + C5596 + C5597) * C153724) *
                C153684) *
               C153849 -
           (((C2693 * C4784 - C2694 * C4781 - C2693 * C4785 + C153885 * C4790 +
              C2691 * C4786 - C2692 * C4782 - C2691 * C4787 + C2684 * C4791 +
              C2689 * C4788 - C2690 * C4783 - C2689 * C4789 + C2683 * C4792) *
                 C153724 +
             (C5597 + C5596 + C5595) * C153864) *
                C153684 +
            ((C4835 + C4834 + C4833) * C153724 + C5587 * C153864) * C153863) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C63414 +
             C31290 * C63415 + C31291 * C63416 + C31294 * C153878) *
                C153863 +
            (C67150 + C67151 + C67152 + C67153) * C153684) *
               C153849 -
           ((C68017 + C68018 + C68019 + C68020) * C153684 +
            (C34035 * C153878 + C31294 * C63416 + C31291 * C63415 +
             C31290 * C63414) *
                C153863) *
               C153601) *
              C153919 +
          (((C68020 + C68019 + C68018 + C68017) * C153863 +
            (C69197 + C69198 + C69199 + C69200) * C153684) *
               C153601 -
           ((C67154 + C67155 + C67156 + C67157) * C153684 +
            (C67153 + C67152 + C67151 + C67150) * C153863) *
               C153849) *
              C153920 +
          (((C67157 + C67156 + C67155 + C67154) * C153863 +
            (C68349 + C68350 + C68351 + C68352) * C153684) *
               C153849 -
           (((C28212 * C32677 - C28213 * C32676 - C28212 * C32678 +
              C153462 * C32679) *
                 C153878 +
             C32705 * C63416 + C29433 * C63415 + C29050 * C63414) *
                C153684 +
            (C69200 + C69199 + C69198 + C69197) * C153863) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[172] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
                  C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
                  C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                     C153864 +
                 (C7639 + C7640 + C7641) * C153724) *
                    C153863 +
                ((C3038 + C3039 + C3040) * C153864 + C20353 * C153724) *
                    C153684) *
                   C153537 * C1091 -
               ((C5587 * C153724 + (C3043 + C3042 + C3041) * C153864) *
                    C153684 +
                (C20354 * C153724 + (C3040 + C3039 + C3038) * C153864) *
                    C153863) *
                   C153537 * C153573) *
                  C1093 +
              ((((C3047 + C3048 + C3049) * C153864 + C20355 * C153724) *
                    C153863 +
                ((C3050 + C3051 + C3052) * C153864 +
                 (C4161 + C4162 + C4163) * C153724) *
                    C153684) *
                   C153537 * C153573 -
               ((C20356 * C153724 + (C3049 + C3048 + C3047) * C153864) *
                    C153684 +
                ((C7650 + C7649 + C7648) * C153724 +
                 (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
                  C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
                  C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                     C153864) *
                    C153863) *
                   C153537 * C1091) *
                  C1094 +
              ((((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
                  C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
                  C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                     C153864 +
                 (C8133 + C8134 + C8135) * C153724) *
                    C153863 +
                ((C3550 + C3551 + C3552) * C153864 +
                 (C19670 + C19671 + C19672) * C153724) *
                    C153684) *
                   C153537 * C1091 -
               (((C2693 * C1761 - C2694 * C1756 - C2693 * C1762 +
                  C153885 * C1771 + C2691 * C1763 - C2692 * C1757 -
                  C2691 * C1764 + C2684 * C1772 + C2689 * C1765 -
                  C2690 * C1758 - C2689 * C1766 + C2683 * C1773) *
                     C153724 +
                 (C3555 + C3554 + C3553) * C153864) *
                    C153684 +
                ((C19672 + C19671 + C19670) * C153724 +
                 (C3552 + C3551 + C3550) * C153864) *
                    C153863) *
                   C153537 * C153573) *
                  C1095) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
                 C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
                 C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                    C153864 +
                (C7639 + C7640 + C7641) * C153724) *
                   C153863 +
               ((C3038 + C3039 + C3040) * C153864 + C20353 * C153724) *
                   C153684) *
                  C153537 * C1178 -
              ((C5587 * C153724 + (C3043 + C3042 + C3041) * C153864) * C153684 +
               (C20354 * C153724 + (C3040 + C3039 + C3038) * C153864) *
                   C153863) *
                  C153537 * C1179 +
              ((C3058 * C153864 + (C4154 + C4153 + C4152) * C153724) * C153863 +
               ((C3046 + C3045 + C3044) * C153864 +
                (C5595 + C5596 + C5597) * C153724) *
                   C153684) *
                  C153537 * C1180 -
              (((C2693 * C5564 - C2694 * C5561 - C2693 * C5565 +
                 C153885 * C5570 + C2691 * C5566 - C2692 * C5562 -
                 C2691 * C5567 + C2684 * C5571 + C2689 * C5568 - C2690 * C5563 -
                 C2689 * C5569 + C2683 * C5572) *
                    C153724 +
                (C4563 + C4562 + C4561) * C153864) *
                   C153684 +
               ((C5597 + C5596 + C5595) * C153724 + C4553 * C153864) *
                   C153863) *
                  C153537 * C1181) *
             C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153864 +
             (C7639 + C7640 + C7641) * C153724) *
                C153863 +
            ((C3038 + C3039 + C3040) * C153864 + C20353 * C153724) * C153684) *
               C473 -
           ((C9064 * C153724 + C20354 * C153864) * C153684 +
            ((C7644 + C7643 + C7642) * C153724 +
             (C7641 + C7640 + C7639) * C153864) *
                C153863) *
               C474 +
           ((C7659 * C153864 + (C7647 + C7646 + C7645) * C153724) * C153863 +
            (C21132 * C153864 + (C9068 + C9069 + C9070) * C153724) * C153684) *
               C475) *
              C1091 +
          (((C20353 * C153864 + C21132 * C153724) * C153863 +
            ((C4154 + C4153 + C4152) * C153864 +
             (C4833 + C4834 + C4835) * C153724) *
                C153684) *
               C474 -
           ((C5587 * C153724 + (C3043 + C3042 + C3041) * C153864) * C153684 +
            (C20354 * C153724 + (C3040 + C3039 + C3038) * C153864) * C153863) *
               C473 -
           (((C2693 * C6185 - C2694 * C6179 - C2693 * C6186 + C153885 * C6197 +
              C2691 * C6187 - C2692 * C6180 - C2691 * C6188 + C2684 * C6198 +
              C2689 * C6189 - C2690 * C6181 - C2689 * C6190 + C2683 * C6199) *
                 C153724 +
             (C4835 + C4834 + C4833) * C153864) *
                C153684 +
            ((C9070 + C9069 + C9068) * C153724 + C9064 * C153864) * C153863) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153864 +
             C31290 * C153724) *
                C34893 +
            (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
               C153537 * C1091 -
           ((C44330 + C44331) * C153871 + (C44329 + C44328) * C34895 +
            (C44327 + C44326) * C34894 + (C44325 + C44324) * C34893) *
               C153537 * C153573) *
              C1093 +
          (((C44332 + C44333) * C34893 + (C44334 + C44335) * C34894 +
            (C44336 + C44337) * C34895 + (C44338 + C44339) * C153871) *
               C153537 * C153573 -
           (C44342 * C153871 + C44343 * C34895 + (C44333 + C44332) * C34894 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153864) *
                C34893) *
               C153537 * C1091) *
              C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C153864 +
             C31782 * C153724) *
                C34893 +
            (C44732 + C44733) * C34894 + (C44734 + C44735) * C34895 +
            (C44736 + C44744) * C153871) *
               C153537 * C1091 -
           (((C28212 * C5564 - C28213 * C5561 - C28212 * C5565 +
              C153462 * C5570) *
                 C153724 +
             C28704 * C153864) *
                C153871 +
            (C44744 + C44736) * C34895 + (C44735 + C44734) * C34894 +
            (C44733 + C44732) * C34893) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153864 +
            C31290 * C153724) *
               C34893 +
           (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
              C153537 * C1178 -
          (C45533 * C153871 + C45534 * C34895 + (C44327 + C44326) * C34894 +
           (C44325 + C44324) * C34893) *
              C153537 * C1179 +
          (C44340 * C34893 + C44341 * C34894 + (C44331 + C44330) * C34895 +
           (C45535 + C45536) * C153871) *
              C153537 * C1180 -
          (((C28212 * C29845 - C28213 * C29844 - C28212 * C29846 +
             C153462 * C29847) *
                C153724 +
            C29279 * C153864) *
               C153871 +
           (C45536 + C45535) * C34895 + C45533 * C34894 + C45534 * C34893) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153864 +
             C31290 * C153724) *
                C34893 +
            (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
               C473 -
           ((C45197 + C45198) * C153871 + (C45199 + C45200) * C34895 +
            (C45201 + C45202) * C34894 +
            (C31291 * C153724 + C31290 * C153864) * C34893) *
               C474 +
           ((C31291 * C153864 + C31294 * C153724) * C34893 +
            (C45731 + C45732) * C34894 + (C45733 + C45734) * C34895 +
            (C45735 + C45736) * C153871) *
               C475) *
              C1091 +
          (((C45202 + C45201) * C34893 + (C45200 + C45199) * C34894 +
            (C45198 + C45197) * C34895 +
            (C29049 * C153864 + C29434 * C153724) * C153871) *
               C474 -
           (C45533 * C153871 + C45534 * C34895 + (C44327 + C44326) * C34894 +
            (C44325 + C44324) * C34893) *
               C473 -
           (((C28212 * C30184 - C28213 * C30182 - C28212 * C30185 +
              C153462 * C30188) *
                 C153724 +
             C29434 * C153864) *
                C153871 +
            (C45736 + C45735) * C34895 + (C45734 + C45733) * C34894 +
            (C45732 + C45731) * C34893) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C63414 +
             C31290 * C63415 + C31291 * C63416 + C31294 * C153878) *
                C153863 +
            (C67150 + C67151 + C67152 + C67153) * C153684) *
               C153537 * C1091 -
           ((C67154 + C67155 + C67156 + C67157) * C153684 +
            (C67153 + C67152 + C67151 + C67150) * C153863) *
               C153537 * C153573) *
              C1093 +
          (((C67158 + C67159 + C67160 + C67161) * C153863 +
            (C67162 + C67163 + C67164 + C67165) * C153684) *
               C153537 * C153573 -
           ((C67161 + C67160 + C67159 + C67158) * C153684 +
            (C31297 * C153878 + C31296 * C63416 + C31295 * C63415 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C63414) *
                C153863) *
               C153537 * C1091) *
              C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C63414 +
             C31782 * C63415 + C31783 * C63416 + C56313 * C153878) *
                C153863 +
            (C67554 + C67555 + C67556 + C67564) * C153684) *
               C153537 * C1091 -
           (((C28212 * C6185 - C28213 * C6179 - C28212 * C6186 +
              C153462 * C6197) *
                 C153878 +
             C31547 * C63416 + C31546 * C63415 + C28702 * C63414) *
                C153684 +
            (C67564 + C67556 + C67555 + C67554) * C153863) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C63414 +
            C31290 * C63415 + C31291 * C63416 + C31294 * C153878) *
               C153863 +
           (C67150 + C67151 + C67152 + C67153) * C153684) *
              C153537 * C1178 -
          ((C67154 + C67155 + C67156 + C67157) * C153684 +
           (C67153 + C67152 + C67151 + C67150) * C153863) *
              C153537 * C1179 +
          ((C67157 + C67156 + C67155 + C67154) * C153863 +
           (C68349 + C68350 + C68351 + C68352) * C153684) *
              C153537 * C1180 -
          (((C28212 * C30184 - C28213 * C30182 - C28212 * C30185 +
             C153462 * C30188) *
                C153878 +
            C29434 * C63416 + C29049 * C63415 + C28408 * C63414) *
               C153684 +
           (C68352 + C68351 + C68350 + C68349) * C153863) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C63414 +
             C31290 * C63415 + C31291 * C63416 + C31294 * C153878) *
                C153863 +
            (C67150 + C67151 + C67152 + C67153) * C153684) *
               C473 -
           ((C68017 + C68018 + C68019 + C68020) * C153684 +
            (C34035 * C153878 + C31294 * C63416 + C31291 * C63415 +
             C31290 * C63414) *
                C153863) *
               C474 +
           ((C31291 * C63414 + C31294 * C63415 + C34035 * C63416 +
             C56054 * C153878) *
                C153863 +
            (C68547 + C68548 + C68549 + C68550) * C153684) *
               C475) *
              C1091 +
          (((C68020 + C68019 + C68018 + C68017) * C153863 +
            (C29051 * C63414 + C29432 * C63415 + C31292 * C63416 +
             C32704 * C153878) *
                C153684) *
               C474 -
           ((C67154 + C67155 + C67156 + C67157) * C153684 +
            (C67153 + C67152 + C67151 + C67150) * C153863) *
               C473 -
           (((C28212 * C34022 - C28213 * C34020 - C28212 * C34023 +
              C153462 * C34026) *
                 C153878 +
             C32704 * C63416 + C31292 * C63415 + C29432 * C63414) *
                C153684 +
            (C68550 + C68549 + C68548 + C68547) * C153863) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[173] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                  C153864 +
              C31290 * C153724) *
                 C34893 +
             (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
                C153849 -
            ((C45197 + C45198) * C153871 + (C45199 + C45200) * C34895 +
             (C45201 + C45202) * C34894 +
             (C31291 * C153724 + C31290 * C153864) * C34893) *
                C153601) *
               C1091 +
           (((C45202 + C45201) * C34893 + (C45200 + C45199) * C34894 +
             (C45198 + C45197) * C34895 +
             (C29049 * C153864 + C29434 * C153724) * C153871) *
                C153601 -
            (C45533 * C153871 + C45534 * C34895 + (C44327 + C44326) * C34894 +
             (C44325 + C44324) * C34893) *
                C153849) *
               C153573) *
              C153840 +
          ((((C31295 * C153864 + C31296 * C153724) * C34893 +
             (C45203 + C45204) * C34894 + (C45205 + C45206) * C34895 +
             (C45207 + C45208) * C153871) *
                C153601 -
            (C44342 * C153871 + C44343 * C34895 + (C44333 + C44332) * C34894 +
             (C31295 * C153724 +
              (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                  C153864) *
                 C34893) *
                C153849) *
               C1091 +
           (((C44332 + C44333) * C34893 + (C44334 + C44335) * C34894 +
             (C44336 + C44337) * C34895 + (C44338 + C44339) * C153871) *
                C153849 -
            (((C28212 * C28550 - C28213 * C28547 - C28212 * C28551 +
               C153462 * C28553) *
                  C153724 +
              C29056 * C153864) *
                 C153871 +
             (C45208 + C45207) * C34895 + (C45206 + C45205) * C34894 +
             (C45204 + C45203) * C34893) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
               C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
               C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                  C153864 +
              (C7639 + C7640 + C7641) * C153724) *
                 C153863 +
             ((C3038 + C3039 + C3040) * C153864 + C20353 * C153724) * C153684) *
                C153849 -
            ((C9064 * C153724 + C20354 * C153864) * C153684 +
             ((C7644 + C7643 + C7642) * C153724 +
              (C7641 + C7640 + C7639) * C153864) *
                 C153863) *
                C153601) *
               C1091 +
           (((C20353 * C153864 + C21132 * C153724) * C153863 +
             ((C4154 + C4153 + C4152) * C153864 +
              (C4833 + C4834 + C4835) * C153724) *
                 C153684) *
                C153601 -
            ((C5587 * C153724 + (C3043 + C3042 + C3041) * C153864) * C153684 +
             (C20354 * C153724 + (C3040 + C3039 + C3038) * C153864) * C153863) *
                C153849) *
               C153573) *
              C153840 +
          (((((C7648 + C7649 + C7650) * C153864 +
              (C7651 + C7652 + C7653) * C153724) *
                 C153863 +
             (C20355 * C153864 + (C8451 + C8452 + C8453) * C153724) * C153684) *
                C153601 -
            ((C20356 * C153724 + (C3049 + C3048 + C3047) * C153864) * C153684 +
             ((C7650 + C7649 + C7648) * C153724 +
              (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
               C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
               C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                  C153864) *
                 C153863) *
                C153849) *
               C1091 +
           ((((C3047 + C3048 + C3049) * C153864 + C20355 * C153724) * C153863 +
             ((C3050 + C3051 + C3052) * C153864 +
              (C4161 + C4162 + C4163) * C153724) *
                 C153684) *
                C153849 -
            (((C2693 * C3289 - C2694 * C3282 - C2693 * C3290 + C153885 * C3294 +
               C2691 * C3287 - C2692 * C3281 - C2691 * C3288 + C2684 * C3293 +
               C2689 * C3285 - C2690 * C3280 - C2689 * C3286 + C2683 * C3292) *
                  C153724 +
              (C4163 + C4162 + C4161) * C153864) *
                 C153684 +
             ((C8453 + C8452 + C8451) * C153724 + C20356 * C153864) * C153863) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                  C63414 +
              C31290 * C63415 + C31291 * C63416 + C31294 * C153878) *
                 C153863 +
             (C67150 + C67151 + C67152 + C67153) * C153684) *
                C153849 -
            ((C68017 + C68018 + C68019 + C68020) * C153684 +
             (C34035 * C153878 + C31294 * C63416 + C31291 * C63415 +
              C31290 * C63414) *
                 C153863) *
                C153601) *
               C1091 +
           (((C68020 + C68019 + C68018 + C68017) * C153863 +
             (C29051 * C63414 + C29432 * C63415 + C31292 * C63416 +
              C32704 * C153878) *
                 C153684) *
                C153601 -
            ((C67154 + C67155 + C67156 + C67157) * C153684 +
             (C67153 + C67152 + C67151 + C67150) * C153863) *
                C153849) *
               C153573) *
              C153840 +
          ((((C31295 * C63414 + C31296 * C63415 + C31297 * C63416 +
              C56055 * C153878) *
                 C153863 +
             (C68021 + C68022 + C68023 + C68024) * C153684) *
                C153601 -
            ((C67161 + C67160 + C67159 + C67158) * C153684 +
             (C31297 * C153878 + C31296 * C63416 + C31295 * C63415 +
              (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                  C63414) *
                 C153863) *
                C153849) *
               C1091 +
           (((C67158 + C67159 + C67160 + C67161) * C153863 +
             (C67162 + C67163 + C67164 + C67165) * C153684) *
                C153849 -
            (((C28212 * C31225 - C28213 * C31222 - C28212 * C31226 +
               C153462 * C31228) *
                  C153878 +
              C31299 * C63416 + C30998 * C63415 + C29054 * C63414) *
                 C153684 +
             (C68024 + C68023 + C68022 + C68021) * C153863) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[174] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153864 +
            (C7639 + C7640 + C7641) * C153724) *
               C153863 +
           ((C3038 + C3039 + C3040) * C153864 + C20353 * C153724) * C153684) *
              C153537 * C1178 -
          ((C5587 * C153724 + (C3043 + C3042 + C3041) * C153864) * C153684 +
           (C20354 * C153724 + (C3040 + C3039 + C3038) * C153864) * C153863) *
              C153537 * C1179 +
          ((C3058 * C153864 + (C4154 + C4153 + C4152) * C153724) * C153863 +
           ((C3046 + C3045 + C3044) * C153864 +
            (C5595 + C5596 + C5597) * C153724) *
               C153684) *
              C153537 * C1180 -
          (((C2693 * C5564 - C2694 * C5561 - C2693 * C5565 + C153885 * C5570 +
             C2691 * C5566 - C2692 * C5562 - C2691 * C5567 + C2684 * C5571 +
             C2689 * C5568 - C2690 * C5563 - C2689 * C5569 + C2683 * C5572) *
                C153724 +
            (C4563 + C4562 + C4561) * C153864) *
               C153684 +
           ((C5597 + C5596 + C5595) * C153724 + C4553 * C153864) * C153863) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153864 +
             (C7639 + C7640 + C7641) * C153724) *
                C153863 +
            ((C3038 + C3039 + C3040) * C153864 + C20353 * C153724) * C153684) *
               C153537 * C1091 -
           ((C5587 * C153724 + (C3043 + C3042 + C3041) * C153864) * C153684 +
            (C20354 * C153724 + (C3040 + C3039 + C3038) * C153864) * C153863) *
               C153537 * C153573) *
              C1093 +
          ((((C3047 + C3048 + C3049) * C153864 + C20355 * C153724) * C153863 +
            ((C3050 + C3051 + C3052) * C153864 +
             (C4161 + C4162 + C4163) * C153724) *
                C153684) *
               C153537 * C153573 -
           ((C20356 * C153724 + (C3049 + C3048 + C3047) * C153864) * C153684 +
            ((C7650 + C7649 + C7648) * C153724 +
             (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
              C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
              C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                 C153864) *
                C153863) *
               C153537 * C1091) *
              C1094 +
          ((((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
              C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
              C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                 C153864 +
             (C8133 + C8134 + C8135) * C153724) *
                C153863 +
            ((C3550 + C3551 + C3552) * C153864 +
             (C19670 + C19671 + C19672) * C153724) *
                C153684) *
               C153537 * C1091 -
           (((C2693 * C1761 - C2694 * C1756 - C2693 * C1762 + C153885 * C1771 +
              C2691 * C1763 - C2692 * C1757 - C2691 * C1764 + C2684 * C1772 +
              C2689 * C1765 - C2690 * C1758 - C2689 * C1766 + C2683 * C1773) *
                 C153724 +
             (C3555 + C3554 + C3553) * C153864) *
                C153684 +
            ((C19672 + C19671 + C19670) * C153724 +
             (C3552 + C3551 + C3550) * C153864) *
                C153863) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153864 +
             C31290 * C153724) *
                C34893 +
            (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
               C153537 * C1091 -
           ((C44330 + C44331) * C153871 + (C44329 + C44328) * C34895 +
            (C44327 + C44326) * C34894 + (C44325 + C44324) * C34893) *
               C153537 * C153573) *
              C1093 +
          (((C44332 + C44333) * C34893 + (C44334 + C44335) * C34894 +
            (C44336 + C44337) * C34895 + (C44338 + C44339) * C153871) *
               C153537 * C153573 -
           (C44342 * C153871 + C44343 * C34895 + (C44333 + C44332) * C34894 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153864) *
                C34893) *
               C153537 * C1091) *
              C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C153864 +
             C31782 * C153724) *
                C34893 +
            (C44732 + C44733) * C34894 + (C44734 + C44735) * C34895 +
            (C44736 + C44744) * C153871) *
               C153537 * C1091 -
           (((C28212 * C5564 - C28213 * C5561 - C28212 * C5565 +
              C153462 * C5570) *
                 C153724 +
             C28704 * C153864) *
                C153871 +
            (C44744 + C44736) * C34895 + (C44735 + C44734) * C34894 +
            (C44733 + C44732) * C34893) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153864 +
            C31290 * C153724) *
               C34893 +
           (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
              C153537 * C1178 -
          (C45533 * C153871 + C45534 * C34895 + (C44327 + C44326) * C34894 +
           (C44325 + C44324) * C34893) *
              C153537 * C1179 +
          (C44340 * C34893 + C44341 * C34894 + (C44331 + C44330) * C34895 +
           (C45535 + C45536) * C153871) *
              C153537 * C1180 -
          (((C28212 * C29845 - C28213 * C29844 - C28212 * C29846 +
             C153462 * C29847) *
                C153724 +
            C29279 * C153864) *
               C153871 +
           (C45536 + C45535) * C34895 + C45533 * C34894 + C45534 * C34893) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C63414 +
             C31290 * C63415 + C31291 * C63416 + C31294 * C153878) *
                C153863 +
            (C67150 + C67151 + C67152 + C67153) * C153684) *
               C153537 * C1091 -
           ((C67154 + C67155 + C67156 + C67157) * C153684 +
            (C67153 + C67152 + C67151 + C67150) * C153863) *
               C153537 * C153573) *
              C1093 +
          (((C67158 + C67159 + C67160 + C67161) * C153863 +
            (C67162 + C67163 + C67164 + C67165) * C153684) *
               C153537 * C153573 -
           ((C67161 + C67160 + C67159 + C67158) * C153684 +
            (C31297 * C153878 + C31296 * C63416 + C31295 * C63415 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C63414) *
                C153863) *
               C153537 * C1091) *
              C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C63414 +
             C31782 * C63415 + C31783 * C63416 + C56313 * C153878) *
                C153863 +
            (C67554 + C67555 + C67556 + C67564) * C153684) *
               C153537 * C1091 -
           (((C28212 * C6185 - C28213 * C6179 - C28212 * C6186 +
              C153462 * C6197) *
                 C153878 +
             C31547 * C63416 + C31546 * C63415 + C28702 * C63414) *
                C153684 +
            (C67564 + C67556 + C67555 + C67554) * C153863) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C63414 +
            C31290 * C63415 + C31291 * C63416 + C31294 * C153878) *
               C153863 +
           (C67150 + C67151 + C67152 + C67153) * C153684) *
              C153537 * C1178 -
          ((C67154 + C67155 + C67156 + C67157) * C153684 +
           (C67153 + C67152 + C67151 + C67150) * C153863) *
              C153537 * C1179 +
          ((C67157 + C67156 + C67155 + C67154) * C153863 +
           (C68349 + C68350 + C68351 + C68352) * C153684) *
              C153537 * C1180 -
          (((C28212 * C30184 - C28213 * C30182 - C28212 * C30185 +
             C153462 * C30188) *
                C153878 +
            C29434 * C63416 + C29049 * C63415 + C28408 * C63414) *
               C153684 +
           (C68352 + C68351 + C68350 + C68349) * C153863) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[175] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                  C153864 +
              C31290 * C153724) *
                 C34893 +
             (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
                C1898 -
            (C46383 * C153871 + C46384 * C34895 + (C45201 + C45202) * C34894 +
             (C31291 * C153724 + C31290 * C153864) * C34893) *
                C153601) *
               C153848 +
           (((C45202 + C45201) * C34893 + (C45200 + C45199) * C34894 +
             (C45198 + C45197) * C34895 + (C46385 + C46386) * C153871) *
                C153601 -
            (C45533 * C153871 + C45534 * C34895 + (C44327 + C44326) * C34894 +
             (C44325 + C44324) * C34893) *
                C1898) *
               C153573) *
              C153840 +
          ((((C31295 * C153864 + C31296 * C153724) * C34893 +
             (C45203 + C45204) * C34894 + (C45205 + C45206) * C34895 +
             (C45207 + C45208) * C153871) *
                C153601 -
            (C44342 * C153871 + C44343 * C34895 + (C44333 + C44332) * C34894 +
             (C31295 * C153724 +
              (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                  C153864) *
                 C34893) *
                C1898) *
               C153848 +
           (((C44332 + C44333) * C34893 + (C44334 + C44335) * C34894 +
             (C44336 + C44337) * C34895 + (C44338 + C44339) * C153871) *
                C1898 -
            (((C28212 * C28550 - C28213 * C28547 - C28212 * C28551 +
               C153462 * C28553) *
                  C153724 +
              C29056 * C153864) *
                 C153871 +
             (C45208 + C45207) * C34895 + (C45206 + C45205) * C34894 +
             (C45204 + C45203) * C34893) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
               C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
               C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                  C153864 +
              (C7639 + C7640 + C7641) * C153724) *
                 C153863 +
             ((C3038 + C3039 + C3040) * C153864 + C20353 * C153724) * C153684) *
                C1898 -
            ((C9064 * C153724 + C20354 * C153864) * C153684 +
             ((C7644 + C7643 + C7642) * C153724 +
              (C7641 + C7640 + C7639) * C153864) *
                 C153863) *
                C153601) *
               C153848 +
           (((C20353 * C153864 + C21132 * C153724) * C153863 +
             (C22100 * C153864 + (C4833 + C4834 + C4835) * C153724) * C153684) *
                C153601 -
            ((C5587 * C153724 + (C3043 + C3042 + C3041) * C153864) * C153684 +
             (C20354 * C153724 + (C3040 + C3039 + C3038) * C153864) * C153863) *
                C1898) *
               C153573) *
              C153840 +
          (((((C7648 + C7649 + C7650) * C153864 +
              (C7651 + C7652 + C7653) * C153724) *
                 C153863 +
             (C20355 * C153864 + (C8451 + C8452 + C8453) * C153724) * C153684) *
                C153601 -
            ((C20356 * C153724 + (C3049 + C3048 + C3047) * C153864) * C153684 +
             ((C7650 + C7649 + C7648) * C153724 +
              (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
               C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
               C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                  C153864) *
                 C153863) *
                C1898) *
               C153848 +
           ((((C3047 + C3048 + C3049) * C153864 + C20355 * C153724) * C153863 +
             ((C3050 + C3051 + C3052) * C153864 +
              (C4161 + C4162 + C4163) * C153724) *
                 C153684) *
                C1898 -
            (((C2693 * C3289 - C2694 * C3282 - C2693 * C3290 + C153885 * C3294 +
               C2691 * C3287 - C2692 * C3281 - C2691 * C3288 + C2684 * C3293 +
               C2689 * C3285 - C2690 * C3280 - C2689 * C3286 + C2683 * C3292) *
                  C153724 +
              (C4163 + C4162 + C4161) * C153864) *
                 C153684 +
             ((C8453 + C8452 + C8451) * C153724 + C20356 * C153864) * C153863) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                  C63414 +
              C31290 * C63415 + C31291 * C63416 + C31294 * C153878) *
                 C153863 +
             (C67150 + C67151 + C67152 + C67153) * C153684) *
                C1898 -
            ((C68017 + C68018 + C68019 + C68020) * C153684 +
             (C34035 * C153878 + C31294 * C63416 + C31291 * C63415 +
              C31290 * C63414) *
                 C153863) *
                C153601) *
               C153848 +
           (((C68020 + C68019 + C68018 + C68017) * C153863 +
             (C69197 + C69198 + C69199 + C69200) * C153684) *
                C153601 -
            ((C67154 + C67155 + C67156 + C67157) * C153684 +
             (C67153 + C67152 + C67151 + C67150) * C153863) *
                C1898) *
               C153573) *
              C153840 +
          ((((C31295 * C63414 + C31296 * C63415 + C31297 * C63416 +
              C56055 * C153878) *
                 C153863 +
             (C68021 + C68022 + C68023 + C68024) * C153684) *
                C153601 -
            ((C67161 + C67160 + C67159 + C67158) * C153684 +
             (C31297 * C153878 + C31296 * C63416 + C31295 * C63415 +
              (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                  C63414) *
                 C153863) *
                C1898) *
               C153848 +
           (((C67158 + C67159 + C67160 + C67161) * C153863 +
             (C67162 + C67163 + C67164 + C67165) * C153684) *
                C1898 -
            (((C28212 * C31225 - C28213 * C31222 - C28212 * C31226 +
               C153462 * C31228) *
                  C153878 +
              C31299 * C63416 + C30998 * C63415 + C29054 * C63414) *
                 C153684 +
             (C68024 + C68023 + C68022 + C68021) * C153863) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153864 +
             C31290 * C153724) *
                C34893 +
            (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
               C153921 -
           (C46383 * C153871 + C46384 * C34895 + (C45201 + C45202) * C34894 +
            (C31291 * C153724 + C31290 * C153864) * C34893) *
               C153922 +
           ((C31291 * C153864 + C31294 * C153724) * C34893 +
            (C45731 + C45732) * C34894 + (C45733 + C45734) * C34895 +
            (C45735 + C45736) * C153871) *
               C2414) *
              C153848 +
          (((C45202 + C45201) * C34893 + (C45200 + C45199) * C34894 +
            (C45198 + C45197) * C34895 + (C46385 + C46386) * C153871) *
               C153922 -
           (C45533 * C153871 + C45534 * C34895 + (C44327 + C44326) * C34894 +
            (C44325 + C44324) * C34893) *
               C153921 -
           (((C28212 * C30184 - C28213 * C30182 - C28212 * C30185 +
              C153462 * C30188) *
                 C153724 +
             C29434 * C153864) *
                C153871 +
            (C45736 + C45735) * C34895 + (C45734 + C45733) * C34894 +
            (C45732 + C45731) * C34893) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153864 +
             (C7639 + C7640 + C7641) * C153724) *
                C153863 +
            ((C3038 + C3039 + C3040) * C153864 + C20353 * C153724) * C153684) *
               C153921 -
           ((C9064 * C153724 + C20354 * C153864) * C153684 +
            ((C7644 + C7643 + C7642) * C153724 +
             (C7641 + C7640 + C7639) * C153864) *
                C153863) *
               C153922 +
           ((C7659 * C153864 + (C7647 + C7646 + C7645) * C153724) * C153863 +
            (C21132 * C153864 + (C9068 + C9069 + C9070) * C153724) * C153684) *
               C2414) *
              C153848 +
          (((C20353 * C153864 + C21132 * C153724) * C153863 +
            (C22100 * C153864 + (C4833 + C4834 + C4835) * C153724) * C153684) *
               C153922 -
           ((C5587 * C153724 + (C3043 + C3042 + C3041) * C153864) * C153684 +
            (C20354 * C153724 + (C3040 + C3039 + C3038) * C153864) * C153863) *
               C153921 -
           (((C2693 * C6185 - C2694 * C6179 - C2693 * C6186 + C153885 * C6197 +
              C2691 * C6187 - C2692 * C6180 - C2691 * C6188 + C2684 * C6198 +
              C2689 * C6189 - C2690 * C6181 - C2689 * C6190 + C2683 * C6199) *
                 C153724 +
             (C4835 + C4834 + C4833) * C153864) *
                C153684 +
            ((C9070 + C9069 + C9068) * C153724 + C9064 * C153864) * C153863) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C63414 +
             C31290 * C63415 + C31291 * C63416 + C31294 * C153878) *
                C153863 +
            (C67150 + C67151 + C67152 + C67153) * C153684) *
               C153921 -
           ((C68017 + C68018 + C68019 + C68020) * C153684 +
            (C34035 * C153878 + C31294 * C63416 + C31291 * C63415 +
             C31290 * C63414) *
                C153863) *
               C153922 +
           ((C31291 * C63414 + C31294 * C63415 + C34035 * C63416 +
             C56054 * C153878) *
                C153863 +
            (C68547 + C68548 + C68549 + C68550) * C153684) *
               C2414) *
              C153848 +
          (((C68020 + C68019 + C68018 + C68017) * C153863 +
            (C69197 + C69198 + C69199 + C69200) * C153684) *
               C153922 -
           ((C67154 + C67155 + C67156 + C67157) * C153684 +
            (C67153 + C67152 + C67151 + C67150) * C153863) *
               C153921 -
           (((C28212 * C34022 - C28213 * C34020 - C28212 * C34023 +
              C153462 * C34026) *
                 C153878 +
             C32704 * C63416 + C31292 * C63415 + C29432 * C63414) *
                C153684 +
            (C68550 + C68549 + C68548 + C68547) * C153863) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
                  C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
                  C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                     C153864 +
                 (C7639 + C7640 + C7641) * C153724) *
                    C153863 +
                ((C3038 + C3039 + C3040) * C153864 + C20353 * C153724) *
                    C153684) *
                   C1898 -
               ((C9064 * C153724 + C20354 * C153864) * C153684 +
                ((C7644 + C7643 + C7642) * C153724 +
                 (C7641 + C7640 + C7639) * C153864) *
                    C153863) *
                   C153601) *
                  C153521 * C1093 +
              ((((C7648 + C7649 + C7650) * C153864 +
                 (C7651 + C7652 + C7653) * C153724) *
                    C153863 +
                (C20355 * C153864 + (C8451 + C8452 + C8453) * C153724) *
                    C153684) *
                   C153601 -
               ((C20356 * C153724 + (C3049 + C3048 + C3047) * C153864) *
                    C153684 +
                ((C7650 + C7649 + C7648) * C153724 +
                 (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
                  C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
                  C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                     C153864) *
                    C153863) *
                   C1898) *
                  C153521 * C1094 +
              ((((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
                  C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
                  C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                     C153864 +
                 (C8133 + C8134 + C8135) * C153724) *
                    C153863 +
                ((C3550 + C3551 + C3552) * C153864 +
                 (C19670 + C19671 + C19672) * C153724) *
                    C153684) *
                   C1898 -
               (((C2693 * C1330 - C2694 * C1325 - C2693 * C1331 +
                  C153885 * C1340 + C2691 * C1332 - C2692 * C1326 -
                  C2691 * C1333 + C2684 * C1341 + C2689 * C1334 -
                  C2690 * C1327 - C2689 * C1335 + C2683 * C1342) *
                     C153724 +
                 (C19672 + C19671 + C19670) * C153864) *
                    C153684 +
                ((C8138 + C8137 + C8136) * C153724 +
                 (C8135 + C8134 + C8133) * C153864) *
                    C153863) *
                   C153601) *
                  C153521 * C1095) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
                  C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
                  C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                     C153864 +
                 (C7639 + C7640 + C7641) * C153724) *
                    C153863 +
                ((C3038 + C3039 + C3040) * C153864 + C20353 * C153724) *
                    C153684) *
                   C1898 -
               ((C9064 * C153724 + C20354 * C153864) * C153684 +
                ((C7644 + C7643 + C7642) * C153724 +
                 (C7641 + C7640 + C7639) * C153864) *
                    C153863) *
                   C153601) *
                  C298 +
              (((C20353 * C153864 + C21132 * C153724) * C153863 +
                (C22100 * C153864 + (C4833 + C4834 + C4835) * C153724) *
                    C153684) *
                   C153601 -
               ((C5587 * C153724 + (C3043 + C3042 + C3041) * C153864) *
                    C153684 +
                (C20354 * C153724 + (C3040 + C3039 + C3038) * C153864) *
                    C153863) *
                   C1898) *
                  C299 +
              (((C3058 * C153864 + C22100 * C153724) * C153863 +
                ((C3046 + C3045 + C3044) * C153864 +
                 (C5595 + C5596 + C5597) * C153724) *
                    C153684) *
                   C1898 -
               (((C2693 * C4784 - C2694 * C4781 - C2693 * C4785 +
                  C153885 * C4790 + C2691 * C4786 - C2692 * C4782 -
                  C2691 * C4787 + C2684 * C4791 + C2689 * C4788 -
                  C2690 * C4783 - C2689 * C4789 + C2683 * C4792) *
                     C153724 +
                 (C5597 + C5596 + C5595) * C153864) *
                    C153684 +
                ((C4835 + C4834 + C4833) * C153724 + C5587 * C153864) *
                    C153863) *
                   C153601) *
                  C300) *
             C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153864 +
            (C7639 + C7640 + C7641) * C153724) *
               C153863 +
           ((C3038 + C3039 + C3040) * C153864 + C20353 * C153724) * C153684) *
              C2104 -
          ((C9064 * C153724 + C20354 * C153864) * C153684 +
           ((C7644 + C7643 + C7642) * C153724 +
            (C7641 + C7640 + C7639) * C153864) *
               C153863) *
              C2105 +
          ((C7659 * C153864 + (C7647 + C7646 + C7645) * C153724) * C153863 +
           (C21132 * C153864 + (C9068 + C9069 + C9070) * C153724) * C153684) *
              C2106 -
          (((C2693 * C9038 - C2694 * C9035 - C2693 * C9039 + C153885 * C9044 +
             C2691 * C9040 - C2692 * C9036 - C2691 * C9041 + C2684 * C9045 +
             C2689 * C9042 - C2690 * C9037 - C2689 * C9043 + C2683 * C9046) *
                C153724 +
            (C9070 + C9069 + C9068) * C153864) *
               C153684 +
           ((C10413 + C10412 + C10411) * C153724 + C10404 * C153864) *
               C153863) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153864 +
             C31290 * C153724) *
                C34893 +
            (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
               C1898 -
           (C46383 * C153871 + C46384 * C34895 + (C45201 + C45202) * C34894 +
            (C31291 * C153724 + C31290 * C153864) * C34893) *
               C153601) *
              C153521 * C1093 +
          (((C31295 * C153864 + C31296 * C153724) * C34893 +
            (C45203 + C45204) * C34894 + (C45205 + C45206) * C34895 +
            (C45207 + C45208) * C153871) *
               C153601 -
           (C44342 * C153871 + C44343 * C34895 + (C44333 + C44332) * C34894 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153864) *
                C34893) *
               C1898) *
              C153521 * C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C153864 +
             C31782 * C153724) *
                C34893 +
            (C44732 + C44733) * C34894 + (C44734 + C44735) * C34895 +
            (C44736 + C44744) * C153871) *
               C1898 -
           (((C28212 * C4784 - C28213 * C4781 - C28212 * C4785 +
              C153462 * C4790) *
                 C153724 +
             C44743 * C153864) *
                C153871 +
            (C31547 * C153724 + C31546 * C153864) * C34895 +
            (C31545 * C153724 + C31544 * C153864) * C34894 +
            (C31783 * C153724 + C31782 * C153864) * C34893) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153864 +
             C31290 * C153724) *
                C34893 +
            (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
               C1898 -
           (C46383 * C153871 + C46384 * C34895 + (C45201 + C45202) * C34894 +
            (C31291 * C153724 + C31290 * C153864) * C34893) *
               C153601) *
              C298 +
          (((C45202 + C45201) * C34893 + (C45200 + C45199) * C34894 +
            (C45198 + C45197) * C34895 + (C46385 + C46386) * C153871) *
               C153601 -
           (C45533 * C153871 + C45534 * C34895 + (C44327 + C44326) * C34894 +
            (C44325 + C44324) * C34893) *
               C1898) *
              C299 +
          ((C44340 * C34893 + C44341 * C34894 + (C44331 + C44330) * C34895 +
            (C45535 + C45536) * C153871) *
               C1898 -
           (((C28212 * C29403 - C28213 * C29402 - C28212 * C29404 +
              C153462 * C29405) *
                 C153724 +
             C29855 * C153864) *
                C153871 +
            (C46386 + C46385) * C34895 + C46383 * C34894 + C46384 * C34893) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153864 +
            C31290 * C153724) *
               C34893 +
           (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
              C2104 -
          (C46383 * C153871 + C46384 * C34895 + (C45201 + C45202) * C34894 +
           (C31291 * C153724 + C31290 * C153864) * C34893) *
              C2105 +
          ((C31291 * C153864 + C31294 * C153724) * C34893 +
           (C45731 + C45732) * C34894 + (C45733 + C45734) * C34895 +
           (C45735 + C45736) * C153871) *
              C2106 -
          (((C28212 * C32677 - C28213 * C32676 - C28212 * C32678 +
             C153462 * C32679) *
                C153724 +
            C32705 * C153864) *
               C153871 +
           (C32704 * C153724 + C31292 * C153864) * C34895 +
           (C32703 * C153724 + C31293 * C153864) * C34894 +
           (C34035 * C153724 + C31294 * C153864) * C34893) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C63414 +
             C31290 * C63415 + C31291 * C63416 + C31294 * C153878) *
                C153863 +
            (C67150 + C67151 + C67152 + C67153) * C153684) *
               C1898 -
           ((C68017 + C68018 + C68019 + C68020) * C153684 +
            (C34035 * C153878 + C31294 * C63416 + C31291 * C63415 +
             C31290 * C63414) *
                C153863) *
               C153601) *
              C153521 * C1093 +
          (((C31295 * C63414 + C31296 * C63415 + C31297 * C63416 +
             C56055 * C153878) *
                C153863 +
            (C68021 + C68022 + C68023 + C68024) * C153684) *
               C153601 -
           ((C67161 + C67160 + C67159 + C67158) * C153684 +
            (C31297 * C153878 + C31296 * C63416 + C31295 * C63415 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C63414) *
                C153863) *
               C1898) *
              C153521 * C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C63414 +
             C31782 * C63415 + C31783 * C63416 + C56313 * C153878) *
                C153863 +
            (C67554 + C67555 + C67556 + C67564) * C153684) *
               C1898 -
           (((C28212 * C9038 - C28213 * C9035 - C28212 * C9039 +
              C153462 * C9044) *
                 C153878 +
             C67563 * C63416 + C31545 * C63415 + C31544 * C63414) *
                C153684 +
            (C56314 * C153878 + C56313 * C63416 + C31783 * C63415 +
             C31782 * C63414) *
                C153863) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C63414 +
             C31290 * C63415 + C31291 * C63416 + C31294 * C153878) *
                C153863 +
            (C67150 + C67151 + C67152 + C67153) * C153684) *
               C1898 -
           ((C68017 + C68018 + C68019 + C68020) * C153684 +
            (C34035 * C153878 + C31294 * C63416 + C31291 * C63415 +
             C31290 * C63414) *
                C153863) *
               C153601) *
              C298 +
          (((C68020 + C68019 + C68018 + C68017) * C153863 +
            (C69197 + C69198 + C69199 + C69200) * C153684) *
               C153601 -
           ((C67154 + C67155 + C67156 + C67157) * C153684 +
            (C67153 + C67152 + C67151 + C67150) * C153863) *
               C1898) *
              C299 +
          (((C67157 + C67156 + C67155 + C67154) * C153863 +
            (C68349 + C68350 + C68351 + C68352) * C153684) *
               C1898 -
           (((C28212 * C32677 - C28213 * C32676 - C28212 * C32678 +
              C153462 * C32679) *
                 C153878 +
             C32705 * C63416 + C29433 * C63415 + C29050 * C63414) *
                C153684 +
            (C69200 + C69199 + C69198 + C69197) * C153863) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C63414 +
            C31290 * C63415 + C31291 * C63416 + C31294 * C153878) *
               C153863 +
           (C67150 + C67151 + C67152 + C67153) * C153684) *
              C2104 -
          ((C68017 + C68018 + C68019 + C68020) * C153684 +
           (C34035 * C153878 + C31294 * C63416 + C31291 * C63415 +
            C31290 * C63414) *
               C153863) *
              C2105 +
          ((C31291 * C63414 + C31294 * C63415 + C34035 * C63416 +
            C56054 * C153878) *
               C153863 +
           (C68547 + C68548 + C68549 + C68550) * C153684) *
              C2106 -
          (((C28212 * C56814 - C28213 * C56813 - C28212 * C56815 +
             C153462 * C56816) *
                C153878 +
            C56824 * C63416 + C32703 * C63415 + C31293 * C63414) *
               C153684 +
           (C57567 * C153878 + C56054 * C63416 + C34035 * C63415 +
            C31294 * C63414) *
               C153863) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[178] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153864 +
             C31290 * C153724) *
                C34893 +
            (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
               C153921 -
           (C46383 * C153871 + C46384 * C34895 + (C45201 + C45202) * C34894 +
            (C31291 * C153724 + C31290 * C153864) * C34893) *
               C153922 +
           ((C31291 * C153864 + C31294 * C153724) * C34893 +
            (C45731 + C45732) * C34894 + (C45733 + C45734) * C34895 +
            (C45735 + C45736) * C153871) *
               C2414) *
              C153521 * C153840 +
          (((C31295 * C153864 + C31296 * C153724) * C34893 +
            (C45203 + C45204) * C34894 + (C45205 + C45206) * C34895 +
            (C45207 + C45208) * C153871) *
               C153922 -
           (C44342 * C153871 + C44343 * C34895 + (C44333 + C44332) * C34894 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153864) *
                C34893) *
               C153921 -
           (((C28212 * C32074 - C28213 * C32073 - C28212 * C32075 +
              C153462 * C32076) *
                 C153724 +
             C30999 * C153864) *
                C153871 +
            (C31299 * C153724 + C30998 * C153864) * C34895 +
            (C31298 * C153724 + C30997 * C153864) * C34894 +
            (C31297 * C153724 + C31296 * C153864) * C34893) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153864 +
             (C7639 + C7640 + C7641) * C153724) *
                C153863 +
            ((C3038 + C3039 + C3040) * C153864 + C20353 * C153724) * C153684) *
               C153921 -
           ((C9064 * C153724 + C20354 * C153864) * C153684 +
            ((C7644 + C7643 + C7642) * C153724 +
             (C7641 + C7640 + C7639) * C153864) *
                C153863) *
               C153922 +
           ((C7659 * C153864 + (C7647 + C7646 + C7645) * C153724) * C153863 +
            (C21132 * C153864 + (C9068 + C9069 + C9070) * C153724) * C153684) *
               C2414) *
              C153521 * C153840 +
          ((((C7648 + C7649 + C7650) * C153864 +
             (C7651 + C7652 + C7653) * C153724) *
                C153863 +
            (C20355 * C153864 + (C8451 + C8452 + C8453) * C153724) * C153684) *
               C153922 -
           ((C20356 * C153724 + (C3049 + C3048 + C3047) * C153864) * C153684 +
            ((C7650 + C7649 + C7648) * C153724 +
             (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
              C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
              C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                 C153864) *
                C153863) *
               C153921 -
           (((C2693 * C8429 - C2694 * C8428 - C2693 * C8430 + C153885 * C8431 +
              C2691 * C6191 - C2692 * C6182 - C2691 * C6192 + C2684 * C6200 +
              C2689 * C6193 - C2690 * C6183 - C2689 * C6194 + C2683 * C6201) *
                 C153724 +
             (C8453 + C8452 + C8451) * C153864) *
                C153684 +
            ((C7656 + C7655 + C7654) * C153724 + C7660 * C153864) * C153863) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C63414 +
             C31290 * C63415 + C31291 * C63416 + C31294 * C153878) *
                C153863 +
            (C67150 + C67151 + C67152 + C67153) * C153684) *
               C153921 -
           ((C68017 + C68018 + C68019 + C68020) * C153684 +
            (C34035 * C153878 + C31294 * C63416 + C31291 * C63415 +
             C31290 * C63414) *
                C153863) *
               C153922 +
           ((C31291 * C63414 + C31294 * C63415 + C34035 * C63416 +
             C56054 * C153878) *
                C153863 +
            (C68547 + C68548 + C68549 + C68550) * C153684) *
               C2414) *
              C153521 * C153840 +
          (((C31295 * C63414 + C31296 * C63415 + C31297 * C63416 +
             C56055 * C153878) *
                C153863 +
            (C68021 + C68022 + C68023 + C68024) * C153684) *
               C153922 -
           ((C67161 + C67160 + C67159 + C67158) * C153684 +
            (C31297 * C153878 + C31296 * C63416 + C31295 * C63415 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C63414) *
                C153863) *
               C153921 -
           (((C28212 * C56477 - C28213 * C56476 - C28212 * C56478 +
              C153462 * C56479) *
                 C153878 +
             C56487 * C63416 + C31298 * C63415 + C30997 * C63414) *
                C153684 +
            (C56056 * C153878 + C56055 * C63416 + C31297 * C63415 +
             C31296 * C63414) *
                C153863) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153864 +
             (C7639 + C7640 + C7641) * C153724) *
                C153863 +
            ((C3038 + C3039 + C3040) * C153864 + C20353 * C153724) * C153684) *
               C1898 -
           ((C9064 * C153724 + C20354 * C153864) * C153684 +
            ((C7644 + C7643 + C7642) * C153724 +
             (C7641 + C7640 + C7639) * C153864) *
                C153863) *
               C153601) *
              C298 +
          (((C20353 * C153864 + C21132 * C153724) * C153863 +
            (C22100 * C153864 + (C4833 + C4834 + C4835) * C153724) * C153684) *
               C153601 -
           ((C5587 * C153724 + (C3043 + C3042 + C3041) * C153864) * C153684 +
            (C20354 * C153724 + (C3040 + C3039 + C3038) * C153864) * C153863) *
               C1898) *
              C299 +
          (((C3058 * C153864 + C22100 * C153724) * C153863 +
            ((C3046 + C3045 + C3044) * C153864 +
             (C5595 + C5596 + C5597) * C153724) *
                C153684) *
               C1898 -
           (((C2693 * C4784 - C2694 * C4781 - C2693 * C4785 + C153885 * C4790 +
              C2691 * C4786 - C2692 * C4782 - C2691 * C4787 + C2684 * C4791 +
              C2689 * C4788 - C2690 * C4783 - C2689 * C4789 + C2683 * C4792) *
                 C153724 +
             (C5597 + C5596 + C5595) * C153864) *
                C153684 +
            ((C4835 + C4834 + C4833) * C153724 + C5587 * C153864) * C153863) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153864 +
             (C7639 + C7640 + C7641) * C153724) *
                C153863 +
            ((C3038 + C3039 + C3040) * C153864 + C20353 * C153724) * C153684) *
               C1898 -
           ((C9064 * C153724 + C20354 * C153864) * C153684 +
            ((C7644 + C7643 + C7642) * C153724 +
             (C7641 + C7640 + C7639) * C153864) *
                C153863) *
               C153601) *
              C153521 * C1093 +
          ((((C7648 + C7649 + C7650) * C153864 +
             (C7651 + C7652 + C7653) * C153724) *
                C153863 +
            (C20355 * C153864 + (C8451 + C8452 + C8453) * C153724) * C153684) *
               C153601 -
           ((C20356 * C153724 + (C3049 + C3048 + C3047) * C153864) * C153684 +
            ((C7650 + C7649 + C7648) * C153724 +
             (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
              C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
              C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                 C153864) *
                C153863) *
               C1898) *
              C153521 * C1094 +
          ((((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
              C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
              C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                 C153864 +
             (C8133 + C8134 + C8135) * C153724) *
                C153863 +
            ((C3550 + C3551 + C3552) * C153864 +
             (C19670 + C19671 + C19672) * C153724) *
                C153684) *
               C1898 -
           (((C2693 * C1330 - C2694 * C1325 - C2693 * C1331 + C153885 * C1340 +
              C2691 * C1332 - C2692 * C1326 - C2691 * C1333 + C2684 * C1341 +
              C2689 * C1334 - C2690 * C1327 - C2689 * C1335 + C2683 * C1342) *
                 C153724 +
             (C19672 + C19671 + C19670) * C153864) *
                C153684 +
            ((C8138 + C8137 + C8136) * C153724 +
             (C8135 + C8134 + C8133) * C153864) *
                C153863) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153864 +
             C31290 * C153724) *
                C34893 +
            (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
               C1898 -
           (C46383 * C153871 + C46384 * C34895 + (C45201 + C45202) * C34894 +
            (C31291 * C153724 + C31290 * C153864) * C34893) *
               C153601) *
              C153521 * C1093 +
          (((C31295 * C153864 + C31296 * C153724) * C34893 +
            (C45203 + C45204) * C34894 + (C45205 + C45206) * C34895 +
            (C45207 + C45208) * C153871) *
               C153601 -
           (C44342 * C153871 + C44343 * C34895 + (C44333 + C44332) * C34894 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153864) *
                C34893) *
               C1898) *
              C153521 * C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C153864 +
             C31782 * C153724) *
                C34893 +
            (C44732 + C44733) * C34894 + (C44734 + C44735) * C34895 +
            (C44736 + C44744) * C153871) *
               C1898 -
           (((C28212 * C4784 - C28213 * C4781 - C28212 * C4785 +
              C153462 * C4790) *
                 C153724 +
             C44743 * C153864) *
                C153871 +
            (C31547 * C153724 + C31546 * C153864) * C34895 +
            (C31545 * C153724 + C31544 * C153864) * C34894 +
            (C31783 * C153724 + C31782 * C153864) * C34893) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153864 +
             C31290 * C153724) *
                C34893 +
            (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
               C1898 -
           (C46383 * C153871 + C46384 * C34895 + (C45201 + C45202) * C34894 +
            (C31291 * C153724 + C31290 * C153864) * C34893) *
               C153601) *
              C298 +
          (((C45202 + C45201) * C34893 + (C45200 + C45199) * C34894 +
            (C45198 + C45197) * C34895 + (C46385 + C46386) * C153871) *
               C153601 -
           (C45533 * C153871 + C45534 * C34895 + (C44327 + C44326) * C34894 +
            (C44325 + C44324) * C34893) *
               C1898) *
              C299 +
          ((C44340 * C34893 + C44341 * C34894 + (C44331 + C44330) * C34895 +
            (C45535 + C45536) * C153871) *
               C1898 -
           (((C28212 * C29403 - C28213 * C29402 - C28212 * C29404 +
              C153462 * C29405) *
                 C153724 +
             C29855 * C153864) *
                C153871 +
            (C46386 + C46385) * C34895 + C46383 * C34894 + C46384 * C34893) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C63414 +
             C31290 * C63415 + C31291 * C63416 + C31294 * C153878) *
                C153863 +
            (C67150 + C67151 + C67152 + C67153) * C153684) *
               C1898 -
           ((C68017 + C68018 + C68019 + C68020) * C153684 +
            (C34035 * C153878 + C31294 * C63416 + C31291 * C63415 +
             C31290 * C63414) *
                C153863) *
               C153601) *
              C153521 * C1093 +
          (((C31295 * C63414 + C31296 * C63415 + C31297 * C63416 +
             C56055 * C153878) *
                C153863 +
            (C68021 + C68022 + C68023 + C68024) * C153684) *
               C153601 -
           ((C67161 + C67160 + C67159 + C67158) * C153684 +
            (C31297 * C153878 + C31296 * C63416 + C31295 * C63415 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C63414) *
                C153863) *
               C1898) *
              C153521 * C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C63414 +
             C31782 * C63415 + C31783 * C63416 + C56313 * C153878) *
                C153863 +
            (C67554 + C67555 + C67556 + C67564) * C153684) *
               C1898 -
           (((C28212 * C9038 - C28213 * C9035 - C28212 * C9039 +
              C153462 * C9044) *
                 C153878 +
             C67563 * C63416 + C31545 * C63415 + C31544 * C63414) *
                C153684 +
            (C56314 * C153878 + C56313 * C63416 + C31783 * C63415 +
             C31782 * C63414) *
                C153863) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C63414 +
             C31290 * C63415 + C31291 * C63416 + C31294 * C153878) *
                C153863 +
            (C67150 + C67151 + C67152 + C67153) * C153684) *
               C1898 -
           ((C68017 + C68018 + C68019 + C68020) * C153684 +
            (C34035 * C153878 + C31294 * C63416 + C31291 * C63415 +
             C31290 * C63414) *
                C153863) *
               C153601) *
              C298 +
          (((C68020 + C68019 + C68018 + C68017) * C153863 +
            (C69197 + C69198 + C69199 + C69200) * C153684) *
               C153601 -
           ((C67154 + C67155 + C67156 + C67157) * C153684 +
            (C67153 + C67152 + C67151 + C67150) * C153863) *
               C1898) *
              C299 +
          (((C67157 + C67156 + C67155 + C67154) * C153863 +
            (C68349 + C68350 + C68351 + C68352) * C153684) *
               C1898 -
           (((C28212 * C32677 - C28213 * C32676 - C28212 * C32678 +
              C153462 * C32679) *
                 C153878 +
             C32705 * C63416 + C29433 * C63415 + C29050 * C63414) *
                C153684 +
            (C69200 + C69199 + C69198 + C69197) * C153863) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
                C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
                C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
                C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
                C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                   C153637 * C153625 * C153537 * C153848 -
               (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
                C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
                C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
                C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
                C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
                   C153637 * C153625 * C153537 * C153573) *
                  C153917 +
              ((C134 * C321 - C135 * C306 - C134 * C322 + C121 * C342 +
                C136 * C319 - C137 * C305 - C136 * C320 + C122 * C341 +
                C138 * C317 - C139 * C304 - C138 * C318 + C123 * C340 +
                C140 * C315 - C141 * C303 - C140 * C316 + C124 * C339 +
                C142 * C335 - C143 * C313 - C142 * C336 + C125 * C349) *
                   C153637 * C153625 * C153537 * C153573 -
               (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
                C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
                C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
                C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
                C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
                   C153637 * C153625 * C153537 * C153848) *
                  C153918 +
              ((C134 * C156 - C135 * C146 - C134 * C157 + C121 * C170 +
                C136 * C158 - C137 * C147 - C136 * C159 + C122 * C171 +
                C138 * C160 - C139 * C148 - C138 * C161 + C123 * C172 +
                C140 * C162 - C141 * C149 - C140 * C163 + C124 * C173 +
                C142 * C164 - C143 * C150 - C142 * C165 + C125 * C174) *
                   C153637 * C153625 * C153537 * C153848 -
               (C142 * C652 - C143 * C651 - C142 * C653 + C125 * C654 +
                C140 * C335 - C141 * C313 - C140 * C336 + C124 * C349 +
                C138 * C315 - C139 * C303 - C138 * C316 + C123 * C339 +
                C136 * C317 - C137 * C304 - C136 * C318 + C122 * C340 +
                C134 * C319 - C135 * C305 - C134 * C320 + C121 * C341) *
                   C153637 * C153625 * C153537 * C153573) *
                  C650) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
                 C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
                 C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                    C153637 * C153936 +
                (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
                   C153537 * C153848 -
               ((C3044 + C3045 + C3046) * C153637 * C153898 +
                (C3043 + C3042 + C3041) * C153637 * C153924 +
                (C3040 + C3039 + C3038) * C153637 * C153936) *
                   C153537 * C153573) *
                  C153917 +
              (((C3047 + C3048 + C3049) * C153637 * C153936 +
                (C3050 + C3051 + C3052) * C153637 * C153924 +
                (C3053 + C3054 + C3055) * C153637 * C153898) *
                   C153537 * C153573 -
               (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
                (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
                 C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
                 C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                    C153637 * C153936) *
                   C153537 * C153848) *
                  C153918 +
              (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
                 C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
                 C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                    C153637 * C153936 +
                (C3550 + C3551 + C3552) * C153637 * C153924 +
                (C3553 + C3554 + C3555) * C153637 * C153898) *
                   C153537 * C153848 -
               ((C2693 * C1188 - C2694 * C1183 - C2693 * C1189 +
                 C153885 * C1198 + C2691 * C1190 - C2692 * C1184 -
                 C2691 * C1191 + C2684 * C1199 + C2689 * C1192 - C2690 * C1185 -
                 C2689 * C1193 + C2683 * C1200) *
                    C153637 * C153898 +
                (C3555 + C3554 + C3553) * C153637 * C153924 +
                (C3552 + C3551 + C3550) * C153637 * C153936) *
                   C153537 * C153573) *
                  C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153937 +
            (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
               C153625 * C153537 * C153848 -
           ((C4832 + C4831 + C4830) * C153901 +
            (C4155 + C4156 + C4157) * C153926 +
            (C3040 + C3039 + C3038) * C153937) *
               C153625 * C153537 * C153573) *
              C153917 +
          (((C3047 + C3048 + C3049) * C153937 +
            (C4158 + C4159 + C4160) * C153926 +
            (C2689 * C1336 - C2690 * C1328 - C2689 * C1337 + C2683 * C1343 +
             C2691 * C1334 - C2692 * C1327 - C2691 * C1335 + C2684 * C1342 +
             C2693 * C1332 - C2694 * C1326 - C2693 * C1333 + C153885 * C1341) *
                C153901) *
               C153625 * C153537 * C153573 -
           (C7660 * C153901 + (C7650 + C7649 + C7648) * C153926 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153937) *
               C153625 * C153537 * C153848) *
              C153918 +
          (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
             C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
             C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                C153937 +
            (C2689 * C492 - C2690 * C478 - C2689 * C493 + C2683 * C514 +
             C2691 * C490 - C2692 * C477 - C2691 * C491 + C2684 * C513 +
             C2693 * C488 - C2694 * C476 - C2693 * C489 + C153885 * C512) *
                C153926 +
            (C2689 * C502 - C2690 * C483 - C2689 * C503 + C2683 * C519 +
             C2691 * C504 - C2692 * C484 - C2691 * C505 + C2684 * C520 +
             C2693 * C506 - C2694 * C485 - C2693 * C507 + C153885 * C521) *
                C153901) *
               C153625 * C153537 * C153848 -
           ((C2693 * C1330 - C2694 * C1325 - C2693 * C1331 + C153885 * C1340 +
             C2691 * C1332 - C2692 * C1326 - C2691 * C1333 + C2684 * C1341 +
             C2689 * C1334 - C2690 * C1327 - C2689 * C1335 + C2683 * C1342) *
                C153901 +
            (C2693 * C959 - C2694 * C949 - C2693 * C960 + C153885 * C967 +
             C2691 * C957 - C2692 * C948 - C2691 * C958 + C2684 * C966 +
             C2689 * C955 - C2690 * C947 - C2689 * C956 + C2683 * C965) *
                C153926 +
            (C3552 + C3551 + C3550) * C153937) *
               C153625 * C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153537 * C153848 -
           ((C24331 + C24332 + C24333) * C153637 * C153898 +
            (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C153537 * C153573) *
              C153917 +
          (((C24334 + C24335 + C24336) * C153637 * C23989 +
            (C24337 + C24338 + C24339) * C153637 * C23990 +
            (C24340 + C24341 + C24342) * C153637 * C153898) *
               C153537 * C153573 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C153537 * C153848) *
              C153918 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C153637 * C23989 +
            (C24821 + C24822 + C24823) * C153637 * C23990 +
            (C24824 + C24825 + C24826) * C153637 * C153898) *
               C153537 * C153848 -
           ((C23996 * C1188 - C23997 * C1183 - C23996 * C1189 +
             C153885 * C1198 + C23994 * C1190 - C23995 * C1184 -
             C23994 * C1191 + C153914 * C1199 + C23992 * C1192 -
             C23993 * C1185 - C23992 * C1193 + C153933 * C1200) *
                C153637 * C153898 +
            (C24826 + C24825 + C24824) * C153637 * C23990 +
            (C24823 + C24822 + C24821) * C153637 * C23989) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153537 * C153848 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C153537 * C153573) *
              C153917 +
          ((C28420 * C28207 + C28421 * C28208 + C28422 * C28209 +
            C28423 * C28210 + C28424 * C28211) *
               C153537 * C153573 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C153537 * C153848) *
              C153918 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C153637 * C28207 +
            C28705 * C28208 + C28706 * C28209 + C28707 * C28210 +
            C28708 * C28211) *
               C153537 * C153848 -
           ((C28212 * C4530 - C28213 * C4527 - C28212 * C4531 +
             C153462 * C4536) *
                C153637 * C28211 +
            C28708 * C28210 + C28707 * C28209 + C28706 * C28208 +
            C28705 * C28207) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153937 +
             C31290 * C153926 + C31291 * C153901) *
                C23989 +
            (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
               C153537 * C153848 -
           ((C30967 + C30968 + C30969) * C153898 +
            (C30966 + C30965 + C30964) * C23990 +
            (C30963 + C30962 + C30961) * C23989) *
               C153537 * C153573) *
              C153917 +
          (((C30970 + C30971 + C31000) * C23989 +
            (C30976 + C30977 + C31001) * C23990 +
            (C30982 + C30983 + C31002) * C153898) *
               C153537 * C153573 -
           (C31003 * C153898 + (C31000 + C30971 + C30970) * C23990 +
            (C31296 * C153901 + C31295 * C153926 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153937) *
                C23989) *
               C153537 * C153848) *
              C153918 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C153937 +
             (C28212 * C492 - C28213 * C478 - C28212 * C493 + C153462 * C514) *
                 C153926 +
             (C28212 * C502 - C28213 * C483 - C28212 * C503 + C153462 * C519) *
                 C153901) *
                C23989 +
            (C31518 + C31548 + C31549) * C23990 +
            (C31527 + C31550 + C31551) * C153898) *
               C153537 * C153848 -
           (((C28212 * C4784 - C28213 * C4781 - C28212 * C4785 +
              C153462 * C4790) *
                 C153901 +
             (C28212 * C4071 - C28213 * C4065 - C28212 * C4072 +
              C153462 * C4077) *
                 C153926 +
             C28703 * C153937) *
                C153898 +
            (C31551 + C31550 + C31527) * C23990 +
            (C31549 + C31548 + C31518) * C23989) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C47696 +
            (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
               C153625 * C153537 * C153848 -
           ((C26063 + C26062 + C26061) * C153901 +
            (C25410 + C25411 + C25412) * C47697 +
            (C24327 + C24326 + C24325) * C47696) *
               C153625 * C153537 * C153573) *
              C153917 +
          (((C24334 + C24335 + C24336) * C47696 +
            (C25413 + C25414 + C25415) * C47697 +
            (C23992 * C1336 - C23993 * C1328 - C23992 * C1337 +
             C153933 * C1343 + C23994 * C1334 - C23995 * C1327 -
             C23994 * C1335 + C153914 * C1342 + C23996 * C1332 -
             C23997 * C1326 - C23996 * C1333 + C153885 * C1341) *
                C153901) *
               C153625 * C153537 * C153573 -
           (C48265 * C153901 + (C48255 + C48254 + C48253) * C47697 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C47696) *
               C153625 * C153537 * C153848) *
              C153918 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C47696 +
            (C23992 * C492 - C23993 * C478 - C23992 * C493 + C153933 * C514 +
             C23994 * C490 - C23995 * C477 - C23994 * C491 + C153914 * C513 +
             C23996 * C488 - C23997 * C476 - C23996 * C489 + C153885 * C512) *
                C47697 +
            (C23992 * C502 - C23993 * C483 - C23992 * C503 + C153933 * C519 +
             C23994 * C504 - C23995 * C484 - C23994 * C505 + C153914 * C520 +
             C23996 * C506 - C23997 * C485 - C23996 * C507 + C153885 * C521) *
                C153901) *
               C153625 * C153537 * C153848 -
           ((C23996 * C1330 - C23997 * C1325 - C23996 * C1331 +
             C153885 * C1340 + C23994 * C1332 - C23995 * C1326 -
             C23994 * C1333 + C153914 * C1341 + C23992 * C1334 -
             C23993 * C1327 - C23992 * C1335 + C153933 * C1342) *
                C153901 +
            (C23996 * C959 - C23997 * C949 - C23996 * C960 + C153885 * C967 +
             C23994 * C957 - C23995 * C948 - C23994 * C958 + C153914 * C966 +
             C23992 * C955 - C23993 * C947 - C23992 * C956 + C153933 * C965) *
                C47697 +
            (C24823 + C24822 + C24821) * C47696) *
               C153625 * C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C47696 +
             C31290 * C47697 + C31291 * C153901) *
                C153936 +
            (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
               C153537 * C153848 -
           ((C52087 + C52088 + C52089) * C153898 +
            (C52086 + C52085 + C52084) * C153924 +
            (C52083 + C52082 + C52081) * C153936) *
               C153537 * C153573) *
              C153917 +
          (((C52090 + C52091 + C52092) * C153936 +
            (C52093 + C52094 + C52095) * C153924 +
            (C52096 + C52097 + C52098) * C153898) *
               C153537 * C153573 -
           (C52102 * C153898 + (C52092 + C52091 + C52090) * C153924 +
            (C31296 * C153901 + C31295 * C47697 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C47696) *
                C153936) *
               C153537 * C153848) *
              C153918 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C47696 +
             C31782 * C47697 + C31783 * C153901) *
                C153936 +
            (C52539 + C52540 + C52541) * C153924 +
            (C52542 + C52543 + C52544) * C153898) *
               C153537 * C153848 -
           (((C28212 * C4784 - C28213 * C4781 - C28212 * C4785 +
              C153462 * C4790) *
                 C153901 +
             C44743 * C47697 + C28703 * C47696) *
                C153898 +
            (C52544 + C52543 + C52542) * C153924 +
            (C52541 + C52540 + C52539) * C153936) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C55778 +
            C31290 * C55779 + C31291 * C55780 + C31294 * C55781 +
            C34035 * C55782) *
               C153625 * C153537 * C153848 -
           (C32703 * C55782 + C31293 * C55781 + C29431 * C55780 +
            C29052 * C55779 + C28405 * C55778) *
               C153625 * C153537 * C153573) *
              C153917 +
          ((C28410 * C55778 + C29053 * C55779 + C30997 * C55780 +
            C31298 * C55781 +
            (C28212 * C9040 - C28213 * C9036 - C28212 * C9041 +
             C153462 * C9045) *
                C55782) *
               C153625 * C153537 * C153573 -
           (C56055 * C55782 + C31297 * C55781 + C31296 * C55780 +
            C31295 * C55779 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C55778) *
               C153625 * C153537 * C153848) *
              C153918 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C55778 +
            C31782 * C55779 + C31783 * C55780 +
            (C28212 * C2117 - C28213 * C2110 - C28212 * C2118 +
             C153462 * C2125) *
                C55781 +
            (C28212 * C7522 - C28213 * C7516 - C28212 * C7523 +
             C153462 * C7528) *
                C55782) *
               C153625 * C153537 * C153848 -
           ((C28212 * C9038 - C28213 * C9035 - C28212 * C9039 +
             C153462 * C9044) *
                C55782 +
            (C28212 * C6191 - C28213 * C6182 - C28212 * C6192 +
             C153462 * C6200) *
                C55781 +
            C31545 * C55780 + C31544 * C55779 + C28701 * C55778) *
               C153625 * C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
                 C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
                 C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
                 C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
                 C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                    C153637 * C153625 * C153849 -
                (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
                 C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
                 C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
                 C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
                 C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
                    C153637 * C153625 * C153601) *
                   C153848 +
               ((C134 * C951 - C135 * C945 - C134 * C952 + C121 * C963 +
                 C136 * C953 - C137 * C946 - C136 * C954 + C122 * C964 +
                 C138 * C955 - C139 * C947 - C138 * C956 + C123 * C965 +
                 C140 * C957 - C141 * C948 - C140 * C958 + C124 * C966 +
                 C142 * C959 - C143 * C949 - C142 * C960 + C125 * C967) *
                    C153637 * C153625 * C153601 -
                (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
                 C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
                 C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
                 C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
                 C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
                    C153637 * C153625 * C153849) *
                   C153573) *
                  C301 +
              (((C134 * C494 - C135 * C479 - C134 * C495 + C121 * C515 +
                 C136 * C492 - C137 * C478 - C136 * C493 + C122 * C514 +
                 C138 * C490 - C139 * C477 - C138 * C491 + C123 * C513 +
                 C140 * C488 - C141 * C476 - C140 * C489 + C124 * C512 +
                 C142 * C508 - C143 * C486 - C142 * C509 + C125 * C522) *
                    C153637 * C153625 * C153601 -
                (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
                 C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
                 C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
                 C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
                 C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
                    C153637 * C153625 * C153849) *
                   C153848 +
               ((C134 * C321 - C135 * C306 - C134 * C322 + C121 * C342 +
                 C136 * C319 - C137 * C305 - C136 * C320 + C122 * C341 +
                 C138 * C317 - C139 * C304 - C138 * C318 + C123 * C340 +
                 C140 * C315 - C141 * C303 - C140 * C316 + C124 * C339 +
                 C142 * C335 - C143 * C313 - C142 * C336 + C125 * C349) *
                    C153637 * C153625 * C153849 -
                (C142 * C961 - C143 * C950 - C142 * C962 + C125 * C968 +
                 C140 * C959 - C141 * C949 - C140 * C960 + C124 * C967 +
                 C138 * C957 - C139 * C948 - C138 * C958 + C123 * C966 +
                 C136 * C955 - C137 * C947 - C136 * C956 + C122 * C965 +
                 C134 * C953 - C135 * C946 - C134 * C954 + C121 * C964) *
                    C153637 * C153625 * C153601) *
                   C153573) *
                  C153508) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
                  C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
                  C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                     C153637 * C153936 +
                 (C3038 + C3039 + C3040) * C153637 * C153924 +
                 C3060 * C153898) *
                    C153849 -
                ((C4152 + C4153 + C4154) * C153637 * C153898 +
                 (C4155 + C4156 + C4157) * C153637 * C153924 +
                 (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
                  C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
                  C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                     C153637 * C153936) *
                    C153601) *
                   C153848 +
               (((C4157 + C4156 + C4155) * C153637 * C153936 +
                 (C4154 + C4153 + C4152) * C153637 * C153924 +
                 (C2689 * C4067 - C2690 * C4063 - C2689 * C4068 +
                  C2683 * C4075 + C2691 * C4069 - C2692 * C4064 -
                  C2691 * C4070 + C2684 * C4076 + C2693 * C4071 -
                  C2694 * C4065 - C2693 * C4072 + C153885 * C4077) *
                     C153637 * C153898) *
                    C153601 -
                ((C3044 + C3045 + C3046) * C153637 * C153898 +
                 (C3043 + C3042 + C3041) * C153637 * C153924 +
                 (C3040 + C3039 + C3038) * C153637 * C153936) *
                    C153849) *
                   C153573) *
                  C301 +
              ((((C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515 +
                  C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
                  C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513) *
                     C153637 * C153936 +
                 (C4158 + C4159 + C4160) * C153637 * C153924 +
                 (C4161 + C4162 + C4163) * C153637 * C153898) *
                    C153601 -
                (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
                 (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
                  C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
                  C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                     C153637 * C153936) *
                    C153849) *
                   C153848 +
               (((C3047 + C3048 + C3049) * C153637 * C153936 +
                 (C3050 + C3051 + C3052) * C153637 * C153924 +
                 (C3053 + C3054 + C3055) * C153637 * C153898) *
                    C153849 -
                ((C2693 * C4073 - C2694 * C4066 - C2693 * C4074 +
                  C153885 * C4078 + C2691 * C4071 - C2692 * C4065 -
                  C2691 * C4072 + C2684 * C4077 + C2689 * C4069 -
                  C2690 * C4064 - C2689 * C4070 + C2683 * C4076) *
                     C153637 * C153898 +
                 (C4163 + C4162 + C4161) * C153637 * C153924 +
                 (C4160 + C4159 + C4158) * C153637 * C153936) *
                    C153601) *
                   C153573) *
                  C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153937 +
             (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
                C153625 * C153849 -
            ((C7645 + C7646 + C7647) * C153901 +
             (C7644 + C7643 + C7642) * C153926 +
             (C7641 + C7640 + C7639) * C153937) *
                C153625 * C153601) *
               C153848 +
           (((C4157 + C4156 + C4155) * C153937 +
             (C4830 + C4831 + C4832) * C153926 +
             (C2689 * C6195 - C2690 * C6184 - C2689 * C6196 + C2683 * C6202 +
              C2691 * C6193 - C2692 * C6183 - C2691 * C6194 + C2684 * C6201 +
              C2693 * C6191 - C2694 * C6182 - C2693 * C6192 + C153885 * C6200) *
                 C153901) *
                C153625 * C153601 -
            ((C4832 + C4831 + C4830) * C153901 +
             (C4155 + C4156 + C4157) * C153926 +
             (C3040 + C3039 + C3038) * C153937) *
                C153625 * C153849) *
               C153573) *
              C301 +
          ((((C7648 + C7649 + C7650) * C153937 +
             (C7651 + C7652 + C7653) * C153926 +
             (C7654 + C7655 + C7656) * C153901) *
                C153625 * C153601 -
            (C7660 * C153901 + (C7650 + C7649 + C7648) * C153926 +
             (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
              C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
              C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                 C153937) *
                C153625 * C153849) *
               C153848 +
           (((C3047 + C3048 + C3049) * C153937 +
             (C4158 + C4159 + C4160) * C153926 +
             (C8451 + C8452 + C8453) * C153901) *
                C153625 * C153849 -
            ((C2693 * C8429 - C2694 * C8428 - C2693 * C8430 + C153885 * C8431 +
              C2691 * C6191 - C2692 * C6182 - C2691 * C6192 + C2684 * C6200 +
              C2689 * C6193 - C2690 * C6183 - C2689 * C6194 + C2683 * C6201) *
                 C153901 +
             (C8453 + C8452 + C8451) * C153926 +
             (C4160 + C4159 + C4158) * C153937) *
                C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C153637 * C23989 +
             (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
                C153849 -
            ((C25407 + C25408 + C25409) * C153637 * C153898 +
             (C25410 + C25411 + C25412) * C153637 * C23990 +
             (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
              C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
              C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                 C153637 * C23989) *
                C153601) *
               C153848 +
           (((C25412 + C25411 + C25410) * C153637 * C23989 +
             (C25409 + C25408 + C25407) * C153637 * C23990 +
             (C23992 * C4067 - C23993 * C4063 - C23992 * C4068 +
              C153933 * C4075 + C23994 * C4069 - C23995 * C4064 -
              C23994 * C4070 + C153914 * C4076 + C23996 * C4071 -
              C23997 * C4065 - C23996 * C4072 + C153885 * C4077) *
                 C153637 * C153898) *
                C153601 -
            ((C24331 + C24332 + C24333) * C153637 * C153898 +
             (C24330 + C24329 + C24328) * C153637 * C23990 +
             (C24327 + C24326 + C24325) * C153637 * C23989) *
                C153849) *
               C153573) *
              C301 +
          ((((C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515 +
              C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
              C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513) *
                 C153637 * C23989 +
             (C25413 + C25414 + C25415) * C153637 * C23990 +
             (C25416 + C25417 + C25418) * C153637 * C153898) *
                C153601 -
            (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C153637 * C23989) *
                C153849) *
               C153848 +
           (((C24334 + C24335 + C24336) * C153637 * C23989 +
             (C24337 + C24338 + C24339) * C153637 * C23990 +
             (C24340 + C24341 + C24342) * C153637 * C153898) *
                C153849 -
            ((C23996 * C4073 - C23997 * C4066 - C23996 * C4074 +
              C153885 * C4078 + C23994 * C4071 - C23995 * C4065 -
              C23994 * C4072 + C153914 * C4077 + C23992 * C4069 -
              C23993 * C4064 - C23992 * C4070 + C153933 * C4076) *
                 C153637 * C153898 +
             (C25418 + C25417 + C25416) * C153637 * C23990 +
             (C25415 + C25414 + C25413) * C153637 * C23989) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153637 * C28207 +
             C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
             C28418 * C28211) *
                C153849 -
            (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
             C29060 * C28208 +
             (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                 C153637 * C28207) *
                C153601) *
               C153848 +
           ((C29060 * C28207 + C29059 * C28208 + C29058 * C28209 +
             C29057 * C28210 +
             (C28212 * C28994 - C28213 * C28992 - C28212 * C28995 +
              C153462 * C28998) *
                 C153637 * C28211) *
                C153601 -
            (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
             C28416 * C28208 + C28415 * C28207) *
                C153849) *
               C153573) *
              C301 +
          ((((C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                 C153637 * C28207 +
             C29061 * C28208 + C29062 * C28209 + C29063 * C28210 +
             C29064 * C28211) *
                C153601 -
            (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
             C28420 * C28208 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153637 * C28207) *
                C153849) *
               C153848 +
           ((C28420 * C28207 + C28421 * C28208 + C28422 * C28209 +
             C28423 * C28210 + C28424 * C28211) *
                C153849 -
            ((C28212 * C28996 - C28213 * C28993 - C28212 * C28997 +
              C153462 * C28999) *
                 C153637 * C28211 +
             C29064 * C28210 + C29063 * C28209 + C29062 * C28208 +
             C29061 * C28207) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                  C153937 +
              C31290 * C153926 + C31291 * C153901) *
                 C23989 +
             (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
                C153849 -
            ((C32078 + C32079 + C32080) * C153898 +
             (C32081 + C32082 + C32083) * C23990 +
             (C31294 * C153901 + C31291 * C153926 + C31290 * C153937) *
                 C23989) *
                C153601) *
               C153848 +
           (((C32083 + C32082 + C32081) * C23989 +
             (C32080 + C32079 + C32078) * C23990 +
             (C29050 * C153937 + C29433 * C153926 +
              (C28212 * C30186 - C28213 * C30183 - C28212 * C30187 +
               C153462 * C30189) *
                  C153901) *
                 C153898) *
                C153601 -
            ((C30967 + C30968 + C30969) * C153898 +
             (C30966 + C30965 + C30964) * C23990 +
             (C30963 + C30962 + C30961) * C23989) *
                C153849) *
               C153573) *
              C301 +
          ((((C31295 * C153937 + C31296 * C153926 + C31297 * C153901) * C23989 +
             (C32084 + C32085 + C32086) * C23990 +
             (C32087 + C32088 + C32089) * C153898) *
                C153601 -
            (C31003 * C153898 + (C31000 + C30971 + C30970) * C23990 +
             (C31296 * C153901 + C31295 * C153926 +
              (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                  C153937) *
                 C23989) *
                C153849) *
               C153848 +
           (((C30970 + C30971 + C31000) * C23989 +
             (C30976 + C30977 + C31001) * C23990 +
             (C30982 + C30983 + C31002) * C153898) *
                C153849 -
            (((C28212 * C32074 - C28213 * C32073 - C28212 * C32075 +
               C153462 * C32076) *
                  C153901 +
              C30999 * C153926 + C29055 * C153937) *
                 C153898 +
             (C32089 + C32088 + C32087) * C23990 +
             (C32086 + C32085 + C32084) * C23989) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C47696 +
             (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
                C153625 * C153849 -
            ((C48250 + C48251 + C48252) * C153901 +
             (C48249 + C48248 + C48247) * C47697 +
             (C48246 + C48245 + C48244) * C47696) *
                C153625 * C153601) *
               C153848 +
           (((C25412 + C25411 + C25410) * C47696 +
             (C26061 + C26062 + C26063) * C47697 +
             (C23992 * C6195 - C23993 * C6184 - C23992 * C6196 +
              C153933 * C6202 + C23994 * C6193 - C23995 * C6183 -
              C23994 * C6194 + C153914 * C6201 + C23996 * C6191 -
              C23997 * C6182 - C23996 * C6192 + C153885 * C6200) *
                 C153901) *
                C153625 * C153601 -
            ((C26063 + C26062 + C26061) * C153901 +
             (C25410 + C25411 + C25412) * C47697 +
             (C24327 + C24326 + C24325) * C47696) *
                C153625 * C153849) *
               C153573) *
              C301 +
          ((((C48253 + C48254 + C48255) * C47696 +
             (C48256 + C48257 + C48258) * C47697 +
             (C48259 + C48260 + C48261) * C153901) *
                C153625 * C153601 -
            (C48265 * C153901 + (C48255 + C48254 + C48253) * C47697 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C47696) *
                C153625 * C153849) *
               C153848 +
           (((C24334 + C24335 + C24336) * C47696 +
             (C25413 + C25414 + C25415) * C47697 +
             (C49052 + C49053 + C49054) * C153901) *
                C153625 * C153849 -
            ((C23996 * C8429 - C23997 * C8428 - C23996 * C8430 +
              C153885 * C8431 + C23994 * C6191 - C23995 * C6182 -
              C23994 * C6192 + C153914 * C6200 + C23992 * C6193 -
              C23993 * C6183 - C23992 * C6194 + C153933 * C6201) *
                 C153901 +
             (C49054 + C49053 + C49052) * C47697 +
             (C25415 + C25414 + C25413) * C47696) *
                C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                  C47696 +
              C31290 * C47697 + C31291 * C153901) *
                 C153936 +
             (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
                C153849 -
            ((C53053 + C53054 + C53055) * C153898 +
             (C53056 + C53057 + C53058) * C153924 +
             (C31294 * C153901 + C31291 * C47697 + C31290 * C47696) * C153936) *
                C153601) *
               C153848 +
           (((C53058 + C53057 + C53056) * C153936 +
             (C53055 + C53054 + C53053) * C153924 +
             (C29050 * C47696 + C29433 * C47697 + C32705 * C153901) * C153898) *
                C153601 -
            ((C52087 + C52088 + C52089) * C153898 +
             (C52086 + C52085 + C52084) * C153924 +
             (C52083 + C52082 + C52081) * C153936) *
                C153849) *
               C153573) *
              C301 +
          ((((C31295 * C47696 + C31296 * C47697 + C31297 * C153901) * C153936 +
             (C53059 + C53060 + C53061) * C153924 +
             (C53062 + C53063 + C53064) * C153898) *
                C153601 -
            (C52102 * C153898 + (C52092 + C52091 + C52090) * C153924 +
             (C31296 * C153901 + C31295 * C47697 +
              (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                  C47696) *
                 C153936) *
                C153849) *
               C153848 +
           (((C52090 + C52091 + C52092) * C153936 +
             (C52093 + C52094 + C52095) * C153924 +
             (C52096 + C52097 + C52098) * C153898) *
                C153849 -
            (((C28212 * C32074 - C28213 * C32073 - C28212 * C32075 +
               C153462 * C32076) *
                  C153901 +
              C30999 * C47697 + C29055 * C47696) *
                 C153898 +
             (C53064 + C53063 + C53062) * C153924 +
             (C53061 + C53060 + C53059) * C153936) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C55778 +
             C31290 * C55779 + C31291 * C55780 + C31294 * C55781 +
             C34035 * C55782) *
                C153625 * C153849 -
            (C56054 * C55782 + C34035 * C55781 + C31294 * C55780 +
             C31291 * C55779 + C31290 * C55778) *
                C153625 * C153601) *
               C153848 +
           ((C29052 * C55778 + C29431 * C55779 + C31293 * C55780 +
             C32703 * C55781 +
             (C28212 * C34024 - C28213 * C34021 - C28212 * C34025 +
              C153462 * C34027) *
                 C55782) *
                C153625 * C153601 -
            (C32703 * C55782 + C31293 * C55781 + C29431 * C55780 +
             C29052 * C55779 + C28405 * C55778) *
                C153625 * C153849) *
               C153573) *
              C301 +
          (((C31295 * C55778 + C31296 * C55779 + C31297 * C55780 +
             C56055 * C55781 + C56056 * C55782) *
                C153625 * C153601 -
            (C56055 * C55782 + C31297 * C55781 + C31296 * C55780 +
             C31295 * C55779 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C55778) *
                C153625 * C153849) *
               C153848 +
           ((C28410 * C55778 + C29053 * C55779 + C30997 * C55780 +
             C31298 * C55781 + C56487 * C55782) *
                C153625 * C153849 -
            ((C28212 * C56477 - C28213 * C56476 - C28212 * C56478 +
              C153462 * C56479) *
                 C55782 +
             C56487 * C55781 + C31298 * C55780 + C30997 * C55779 +
             C29053 * C55778) *
                C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (-0.25 * std::pow(Pi, 2.5) *
             ((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
               C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
               C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
               C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
               C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                  C153637 * C153625 * C153537 * C153521 * C130 -
              (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
               C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
               C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
               C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
               C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
                  C153637 * C153625 * C153537 * C153521 * C131 +
              (C134 * C156 - C135 * C146 - C134 * C157 + C121 * C170 +
               C136 * C158 - C137 * C147 - C136 * C159 + C122 * C171 +
               C138 * C160 - C139 * C148 - C138 * C161 + C123 * C172 +
               C140 * C162 - C141 * C149 - C140 * C163 + C124 * C173 +
               C142 * C164 - C143 * C150 - C142 * C165 + C125 * C174) *
                  C153637 * C153625 * C153537 * C153521 * C132 -
              (C142 * C166 - C143 * C151 - C142 * C167 + C125 * C175 +
               C140 * C164 - C141 * C150 - C140 * C165 + C124 * C174 +
               C138 * C162 - C139 * C149 - C138 * C163 + C123 * C173 +
               C136 * C160 - C137 * C148 - C136 * C161 + C122 * C172 +
               C134 * C158 - C135 * C147 - C134 * C159 + C121 * C171) *
                  C153637 * C153625 * C153537 * C153521 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
                C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
                C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
                C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
                C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                   C153637 * C153625 * C153537 * C298 -
               (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
                C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
                C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
                C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
                C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
                   C153637 * C153625 * C153537 * C299 +
               (C134 * C325 - C135 * C308 - C134 * C326 + C121 * C344 +
                C136 * C327 - C137 * C309 - C136 * C328 + C122 * C345 +
                C138 * C329 - C139 * C310 - C138 * C330 + C123 * C346 +
                C140 * C331 - C141 * C311 - C140 * C332 + C124 * C347 +
                C142 * C333 - C143 * C312 - C142 * C334 + C125 * C348) *
                   C153637 * C153625 * C153537 * C300) *
                  C301 +
              ((C134 * C321 - C135 * C306 - C134 * C322 + C121 * C342 +
                C136 * C319 - C137 * C305 - C136 * C320 + C122 * C341 +
                C138 * C317 - C139 * C304 - C138 * C318 + C123 * C340 +
                C140 * C315 - C141 * C303 - C140 * C316 + C124 * C339 +
                C142 * C335 - C143 * C313 - C142 * C336 + C125 * C349) *
                   C153637 * C153625 * C153537 * C299 -
               (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
                C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
                C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
                C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
                C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
                   C153637 * C153625 * C153537 * C298 -
               (C142 * C337 - C143 * C314 - C142 * C338 + C125 * C350 +
                C140 * C333 - C141 * C312 - C140 * C334 + C124 * C348 +
                C138 * C331 - C139 * C311 - C138 * C332 + C123 * C347 +
                C136 * C329 - C137 * C310 - C136 * C330 + C122 * C346 +
                C134 * C327 - C135 * C309 - C134 * C328 + C121 * C345) *
                   C153637 * C153625 * C153537 * C300) *
                  C153508) +
         0.5 * std::pow(Pi, 2.5) *
             (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
                C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
                C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
                C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
                C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                   C153637 * C153625 * C473 -
               (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
                C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
                C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
                C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
                C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
                   C153637 * C153625 * C474 +
               (C134 * C498 - C135 * C481 - C134 * C499 + C121 * C517 +
                C136 * C500 - C137 * C482 - C136 * C501 + C122 * C518 +
                C138 * C502 - C139 * C483 - C138 * C503 + C123 * C519 +
                C140 * C504 - C141 * C484 - C140 * C505 + C124 * C520 +
                C142 * C506 - C143 * C485 - C142 * C507 + C125 * C521) *
                   C153637 * C153625 * C475) *
                  C153521 * C301 +
              ((C134 * C494 - C135 * C479 - C134 * C495 + C121 * C515 +
                C136 * C492 - C137 * C478 - C136 * C493 + C122 * C514 +
                C138 * C490 - C139 * C477 - C138 * C491 + C123 * C513 +
                C140 * C488 - C141 * C476 - C140 * C489 + C124 * C512 +
                C142 * C508 - C143 * C486 - C142 * C509 + C125 * C522) *
                   C153637 * C153625 * C474 -
               (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
                C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
                C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
                C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
                C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
                   C153637 * C153625 * C473 -
               (C142 * C510 - C143 * C487 - C142 * C511 + C125 * C523 +
                C140 * C506 - C141 * C485 - C140 * C507 + C124 * C521 +
                C138 * C504 - C139 * C484 - C138 * C505 + C123 * C520 +
                C136 * C502 - C137 * C483 - C136 * C503 + C122 * C519 +
                C134 * C500 - C135 * C482 - C134 * C501 + C121 * C518) *
                   C153637 * C153625 * C475) *
                  C153521 * C153508) -
         0.25 * std::pow(Pi, 2.5) *
             (((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
                C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
                C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                   C153637 * C153936 +
               (C2689 * C323 - C2690 * C307 - C2689 * C324 + C2683 * C343 +
                C2691 * C321 - C2692 * C306 - C2691 * C322 + C2684 * C342 +
                C2693 * C319 - C2694 * C305 - C2693 * C320 + C153885 * C341) *
                   C153637 * C153924 +
               (C2689 * C325 - C2690 * C308 - C2689 * C326 + C2683 * C344 +
                C2691 * C327 - C2692 * C309 - C2691 * C328 + C2684 * C345 +
                C2693 * C329 - C2694 * C310 - C2693 * C330 + C153885 * C346) *
                   C153637 * C153898) *
                  C153537 * C153521 * C130 -
              ((C2693 * C331 - C2694 * C311 - C2693 * C332 + C153885 * C347 +
                C2691 * C329 - C2692 * C310 - C2691 * C330 + C2684 * C346 +
                C2689 * C327 - C2690 * C309 - C2689 * C328 + C2683 * C345) *
                   C153637 * C153898 +
               (C2693 * C317 - C2694 * C304 - C2693 * C318 + C153885 * C340 +
                C2691 * C319 - C2692 * C305 - C2691 * C320 + C2684 * C341 +
                C2689 * C321 - C2690 * C306 - C2689 * C322 + C2683 * C342) *
                   C153637 * C153924 +
               (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
                C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
                C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                   C153637 * C153936) *
                  C153537 * C153521 * C131 +
              ((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
                C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
                C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                   C153637 * C153936 +
               (C2689 * C319 - C2690 * C305 - C2689 * C320 + C2683 * C341 +
                C2691 * C317 - C2692 * C304 - C2691 * C318 + C2684 * C340 +
                C2693 * C315 - C2694 * C303 - C2693 * C316 + C153885 * C339) *
                   C153637 * C153924 +
               (C2689 * C329 - C2690 * C310 - C2689 * C330 + C2683 * C346 +
                C2691 * C331 - C2692 * C311 - C2691 * C332 + C2684 * C347 +
                C2693 * C333 - C2694 * C312 - C2693 * C334 + C153885 * C348) *
                   C153637 * C153898) *
                  C153537 * C153521 * C132 -
              ((C2693 * C337 - C2694 * C314 - C2693 * C338 + C153885 * C350 +
                C2691 * C333 - C2692 * C312 - C2691 * C334 + C2684 * C348 +
                C2689 * C331 - C2690 * C311 - C2689 * C332 + C2683 * C347) *
                   C153637 * C153898 +
               (C2693 * C335 - C2694 * C313 - C2693 * C336 + C153885 * C349 +
                C2691 * C315 - C2692 * C303 - C2691 * C316 + C2684 * C339 +
                C2689 * C317 - C2690 * C304 - C2689 * C318 + C2683 * C340) *
                   C153637 * C153924 +
               (C2693 * C162 - C2694 * C149 - C2693 * C163 + C153885 * C173 +
                C2691 * C160 - C2692 * C148 - C2691 * C161 + C2684 * C172 +
                C2689 * C158 - C2690 * C147 - C2689 * C159 + C2683 * C171) *
                   C153637 * C153936) *
                  C153537 * C153521 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
                 C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
                 C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                    C153637 * C153936 +
                (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
                   C153537 * C298 -
               ((C3044 + C3045 + C3046) * C153637 * C153898 +
                (C3043 + C3042 + C3041) * C153637 * C153924 +
                (C3040 + C3039 + C3038) * C153637 * C153936) *
                   C153537 * C299 +
               (C3060 * C153936 + (C3046 + C3045 + C3044) * C153637 * C153924 +
                (C2689 * C2917 - C2690 * C2913 - C2689 * C2918 + C2683 * C2925 +
                 C2691 * C2919 - C2692 * C2914 - C2691 * C2920 + C2684 * C2926 +
                 C2693 * C2921 - C2694 * C2915 - C2693 * C2922 +
                 C153885 * C2927) *
                    C153637 * C153898) *
                   C153537 * C300) *
                  C301 +
              (((C3047 + C3048 + C3049) * C153637 * C153936 +
                (C3050 + C3051 + C3052) * C153637 * C153924 +
                (C3053 + C3054 + C3055) * C153637 * C153898) *
                   C153537 * C299 -
               (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
                (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
                 C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
                 C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                    C153637 * C153936) *
                   C153537 * C298 -
               ((C2693 * C2923 - C2694 * C2916 - C2693 * C2924 +
                 C153885 * C2928 + C2691 * C2921 - C2692 * C2915 -
                 C2691 * C2922 + C2684 * C2927 + C2689 * C2919 - C2690 * C2914 -
                 C2689 * C2920 + C2683 * C2926) *
                    C153637 * C153898 +
                (C3055 + C3054 + C3053) * C153637 * C153924 + C3061 * C153936) *
                   C153537 * C300) *
                  C153508) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
                 C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
                 C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                    C153637 * C153936 +
                (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
                   C473 -
               ((C2693 * C1765 - C2694 * C1758 - C2693 * C1766 +
                 C153885 * C1773 + C2691 * C1767 - C2692 * C1759 -
                 C2691 * C1768 + C2684 * C1774 + C2689 * C1769 - C2690 * C1760 -
                 C2689 * C1770 + C2683 * C1775) *
                    C153637 * C153898 +
                (C2693 * C955 - C2694 * C947 - C2693 * C956 + C153885 * C965 +
                 C2691 * C953 - C2692 * C946 - C2691 * C954 + C2684 * C964 +
                 C2689 * C951 - C2690 * C945 - C2689 * C952 + C2683 * C963) *
                    C153637 * C153924 +
                (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
                 C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
                 C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                    C153637 * C153936) *
                   C474 +
               ((C2689 * C498 - C2690 * C481 - C2689 * C499 + C2683 * C517 +
                 C2691 * C500 - C2692 * C482 - C2691 * C501 + C2684 * C518 +
                 C2693 * C502 - C2694 * C483 - C2693 * C503 + C153885 * C519) *
                    C153637 * C153936 +
                (C2689 * C1338 - C2690 * C1329 - C2689 * C1339 + C2683 * C1344 +
                 C2691 * C1336 - C2692 * C1328 - C2691 * C1337 + C2684 * C1343 +
                 C2693 * C1334 - C2694 * C1327 - C2693 * C1335 +
                 C153885 * C1342) *
                    C153637 * C153924 +
                (C2689 * C3283 - C2690 * C3279 - C2689 * C3284 + C2683 * C3291 +
                 C2691 * C3285 - C2692 * C3280 - C2691 * C3286 + C2684 * C3292 +
                 C2693 * C3287 - C2694 * C3281 - C2693 * C3288 +
                 C153885 * C3293) *
                    C153637 * C153898) *
                   C475) *
                  C153521 * C301 +
              (((C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515 +
                 C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
                 C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513) *
                    C153637 * C153936 +
                (C2689 * C953 - C2690 * C946 - C2689 * C954 + C2683 * C964 +
                 C2691 * C955 - C2692 * C947 - C2691 * C956 + C2684 * C965 +
                 C2693 * C957 - C2694 * C948 - C2693 * C958 + C153885 * C966) *
                    C153637 * C153924 +
                (C2689 * C1767 - C2690 * C1759 - C2689 * C1768 + C2683 * C1774 +
                 C2691 * C1765 - C2692 * C1758 - C2691 * C1766 + C2684 * C1773 +
                 C2693 * C1763 - C2694 * C1757 - C2693 * C1764 +
                 C153885 * C1772) *
                    C153637 * C153898) *
                   C474 -
               (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
                (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
                 C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
                 C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                    C153637 * C153936) *
                   C473 -
               ((C2693 * C3289 - C2694 * C3282 - C2693 * C3290 +
                 C153885 * C3294 + C2691 * C3287 - C2692 * C3281 -
                 C2691 * C3288 + C2684 * C3293 + C2689 * C3285 - C2690 * C3280 -
                 C2689 * C3286 + C2683 * C3292) *
                    C153637 * C153898 +
                (C2693 * C1332 - C2694 * C1326 - C2693 * C1333 +
                 C153885 * C1341 + C2691 * C1334 - C2692 * C1327 -
                 C2691 * C1335 + C2684 * C1342 + C2689 * C1336 - C2690 * C1328 -
                 C2689 * C1337 + C2683 * C1343) *
                    C153637 * C153924 +
                (C2693 * C504 - C2694 * C484 - C2693 * C505 + C153885 * C520 +
                 C2691 * C502 - C2692 * C483 - C2691 * C503 + C2684 * C519 +
                 C2689 * C500 - C2690 * C482 - C2689 * C501 + C2683 * C518) *
                    C153637 * C153936) *
                   C475) *
                  C153521 * C153508) +
         0.5 * std::pow(Pi, 2.5) *
             (((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
                C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
                C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                   C153937 +
               (C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516 +
                C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
                C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514) *
                   C153926 +
               (C2689 * C498 - C2690 * C481 - C2689 * C499 + C2683 * C517 +
                C2691 * C500 - C2692 * C482 - C2691 * C501 + C2684 * C518 +
                C2693 * C502 - C2694 * C483 - C2693 * C503 + C153885 * C519) *
                   C153901) *
                  C153625 * C153537 * C153521 * C130 -
              ((C2693 * C504 - C2694 * C484 - C2693 * C505 + C153885 * C520 +
                C2691 * C502 - C2692 * C483 - C2691 * C503 + C2684 * C519 +
                C2689 * C500 - C2690 * C482 - C2689 * C501 + C2683 * C518) *
                   C153901 +
               (C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513 +
                C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
                C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515) *
                   C153926 +
               (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
                C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
                C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                   C153937) *
                  C153625 * C153537 * C153521 * C131 +
              ((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
                C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
                C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                   C153937 +
               (C2689 * C492 - C2690 * C478 - C2689 * C493 + C2683 * C514 +
                C2691 * C490 - C2692 * C477 - C2691 * C491 + C2684 * C513 +
                C2693 * C488 - C2694 * C476 - C2693 * C489 + C153885 * C512) *
                   C153926 +
               (C2689 * C502 - C2690 * C483 - C2689 * C503 + C2683 * C519 +
                C2691 * C504 - C2692 * C484 - C2691 * C505 + C2684 * C520 +
                C2693 * C506 - C2694 * C485 - C2693 * C507 + C153885 * C521) *
                   C153901) *
                  C153625 * C153537 * C153521 * C132 -
              ((C2693 * C510 - C2694 * C487 - C2693 * C511 + C153885 * C523 +
                C2691 * C506 - C2692 * C485 - C2691 * C507 + C2684 * C521 +
                C2689 * C504 - C2690 * C484 - C2689 * C505 + C2683 * C520) *
                   C153901 +
               (C2693 * C508 - C2694 * C486 - C2693 * C509 + C153885 * C522 +
                C2691 * C488 - C2692 * C476 - C2691 * C489 + C2684 * C512 +
                C2689 * C490 - C2690 * C477 - C2689 * C491 + C2683 * C513) *
                   C153926 +
               (C2693 * C162 - C2694 * C149 - C2693 * C163 + C153885 * C173 +
                C2691 * C160 - C2692 * C148 - C2691 * C161 + C2684 * C172 +
                C2689 * C158 - C2690 * C147 - C2689 * C159 + C2683 * C171) *
                   C153937) *
                  C153625 * C153537 * C153521 * C133) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
                 C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
                 C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                    C153937 +
                (C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516 +
                 C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
                 C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514) *
                    C153926 +
                (C2689 * C498 - C2690 * C481 - C2689 * C499 + C2683 * C517 +
                 C2691 * C500 - C2692 * C482 - C2691 * C501 + C2684 * C518 +
                 C2693 * C502 - C2694 * C483 - C2693 * C503 + C153885 * C519) *
                    C153901) *
                   C153625 * C153537 * C298 -
               ((C4832 + C4831 + C4830) * C153901 +
                (C4155 + C4156 + C4157) * C153926 +
                (C3040 + C3039 + C3038) * C153937) *
                   C153625 * C153537 * C299 +
               (C3058 * C153937 + (C4154 + C4153 + C4152) * C153926 +
                (C4833 + C4834 + C4835) * C153901) *
                   C153625 * C153537 * C300) *
                  C301 +
              (((C3047 + C3048 + C3049) * C153937 +
                (C4158 + C4159 + C4160) * C153926 +
                (C2689 * C1336 - C2690 * C1328 - C2689 * C1337 + C2683 * C1343 +
                 C2691 * C1334 - C2692 * C1327 - C2691 * C1335 + C2684 * C1342 +
                 C2693 * C1332 - C2694 * C1326 - C2693 * C1333 +
                 C153885 * C1341) *
                    C153901) *
                   C153625 * C153537 * C299 -
               ((C2693 * C504 - C2694 * C484 - C2693 * C505 + C153885 * C520 +
                 C2691 * C502 - C2692 * C483 - C2691 * C503 + C2684 * C519 +
                 C2689 * C500 - C2690 * C482 - C2689 * C501 + C2683 * C518) *
                    C153901 +
                (C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513 +
                 C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
                 C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515) *
                    C153926 +
                (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
                 C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
                 C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                    C153937) *
                   C153625 * C153537 * C298 -
               ((C2693 * C3289 - C2694 * C3282 - C2693 * C3290 +
                 C153885 * C3294 + C2691 * C3287 - C2692 * C3281 -
                 C2691 * C3288 + C2684 * C3293 + C2689 * C3285 - C2690 * C3280 -
                 C2689 * C3286 + C2683 * C3292) *
                    C153901 +
                (C4163 + C4162 + C4161) * C153926 + C3059 * C153937) *
                   C153625 * C153537 * C300) *
                  C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153937 +
            (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
               C153625 * C473 -
           ((C7645 + C7646 + C7647) * C153901 +
            (C7644 + C7643 + C7642) * C153926 +
            (C7641 + C7640 + C7639) * C153937) *
               C153625 * C474 +
           (C7659 * C153937 + (C7647 + C7646 + C7645) * C153926 +
            (C2689 * C7518 - C2690 * C7514 - C2689 * C7519 + C2683 * C7526 +
             C2691 * C7520 - C2692 * C7515 - C2691 * C7521 + C2684 * C7527 +
             C2693 * C7522 - C2694 * C7516 - C2693 * C7523 + C153885 * C7528) *
                C153901) *
               C153625 * C475) *
              C153521 * C301 +
          (((C7648 + C7649 + C7650) * C153937 +
            (C7651 + C7652 + C7653) * C153926 +
            (C7654 + C7655 + C7656) * C153901) *
               C153625 * C474 -
           (C7660 * C153901 + (C7650 + C7649 + C7648) * C153926 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153937) *
               C153625 * C473 -
           ((C2693 * C7524 - C2694 * C7517 - C2693 * C7525 + C153885 * C7529 +
             C2691 * C7522 - C2692 * C7516 - C2691 * C7523 + C2684 * C7528 +
             C2689 * C7520 - C2690 * C7515 - C2689 * C7521 + C2683 * C7527) *
                C153901 +
            (C7656 + C7655 + C7654) * C153926 + C7660 * C153937) *
               C153625 * C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
            C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
            C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
               C153637 * C23989 +
           (C23992 * C323 - C23993 * C307 - C23992 * C324 + C153933 * C343 +
            C23994 * C321 - C23995 * C306 - C23994 * C322 + C153914 * C342 +
            C23996 * C319 - C23997 * C305 - C23996 * C320 + C153885 * C341) *
               C153637 * C23990 +
           (C23992 * C325 - C23993 * C308 - C23992 * C326 + C153933 * C344 +
            C23994 * C327 - C23995 * C309 - C23994 * C328 + C153914 * C345 +
            C23996 * C329 - C23997 * C310 - C23996 * C330 + C153885 * C346) *
               C153637 * C153898) *
              C153537 * C153521 * C130 -
          ((C23996 * C331 - C23997 * C311 - C23996 * C332 + C153885 * C347 +
            C23994 * C329 - C23995 * C310 - C23994 * C330 + C153914 * C346 +
            C23992 * C327 - C23993 * C309 - C23992 * C328 + C153933 * C345) *
               C153637 * C153898 +
           (C23996 * C317 - C23997 * C304 - C23996 * C318 + C153885 * C340 +
            C23994 * C319 - C23995 * C305 - C23994 * C320 + C153914 * C341 +
            C23992 * C321 - C23993 * C306 - C23992 * C322 + C153933 * C342) *
               C153637 * C23990 +
           (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
            C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
            C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
               C153637 * C23989) *
              C153537 * C153521 * C131 +
          ((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
            C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
            C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
               C153637 * C23989 +
           (C23992 * C319 - C23993 * C305 - C23992 * C320 + C153933 * C341 +
            C23994 * C317 - C23995 * C304 - C23994 * C318 + C153914 * C340 +
            C23996 * C315 - C23997 * C303 - C23996 * C316 + C153885 * C339) *
               C153637 * C23990 +
           (C23992 * C329 - C23993 * C310 - C23992 * C330 + C153933 * C346 +
            C23994 * C331 - C23995 * C311 - C23994 * C332 + C153914 * C347 +
            C23996 * C333 - C23997 * C312 - C23996 * C334 + C153885 * C348) *
               C153637 * C153898) *
              C153537 * C153521 * C132 -
          ((C23996 * C337 - C23997 * C314 - C23996 * C338 + C153885 * C350 +
            C23994 * C333 - C23995 * C312 - C23994 * C334 + C153914 * C348 +
            C23992 * C331 - C23993 * C311 - C23992 * C332 + C153933 * C347) *
               C153637 * C153898 +
           (C23996 * C335 - C23997 * C313 - C23996 * C336 + C153885 * C349 +
            C23994 * C315 - C23995 * C303 - C23994 * C316 + C153914 * C339 +
            C23992 * C317 - C23993 * C304 - C23992 * C318 + C153933 * C340) *
               C153637 * C23990 +
           (C23996 * C162 - C23997 * C149 - C23996 * C163 + C153885 * C173 +
            C23994 * C160 - C23995 * C148 - C23994 * C161 + C153914 * C172 +
            C23992 * C158 - C23993 * C147 - C23992 * C159 + C153933 * C171) *
               C153637 * C23989) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153537 * C298 -
           ((C24331 + C24332 + C24333) * C153637 * C153898 +
            (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C153537 * C299 +
           (C24347 * C23989 + (C24333 + C24332 + C24331) * C153637 * C23990 +
            (C23992 * C2917 - C23993 * C2913 - C23992 * C2918 +
             C153933 * C2925 + C23994 * C2919 - C23995 * C2914 -
             C23994 * C2920 + C153914 * C2926 + C23996 * C2921 -
             C23997 * C2915 - C23996 * C2922 + C153885 * C2927) *
                C153637 * C153898) *
               C153537 * C300) *
              C301 +
          (((C24334 + C24335 + C24336) * C153637 * C23989 +
            (C24337 + C24338 + C24339) * C153637 * C23990 +
            (C24340 + C24341 + C24342) * C153637 * C153898) *
               C153537 * C299 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C153537 * C298 -
           ((C23996 * C2923 - C23997 * C2916 - C23996 * C2924 +
             C153885 * C2928 + C23994 * C2921 - C23995 * C2915 -
             C23994 * C2922 + C153914 * C2927 + C23992 * C2919 -
             C23993 * C2914 - C23992 * C2920 + C153933 * C2926) *
                C153637 * C153898 +
            (C24342 + C24341 + C24340) * C153637 * C23990 + C24348 * C23989) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C473 -
           ((C23996 * C1765 - C23997 * C1758 - C23996 * C1766 +
             C153885 * C1773 + C23994 * C1767 - C23995 * C1759 -
             C23994 * C1768 + C153914 * C1774 + C23992 * C1769 -
             C23993 * C1760 - C23992 * C1770 + C153933 * C1775) *
                C153637 * C153898 +
            (C23996 * C955 - C23997 * C947 - C23996 * C956 + C153885 * C965 +
             C23994 * C953 - C23995 * C946 - C23994 * C954 + C153914 * C964 +
             C23992 * C951 - C23993 * C945 - C23992 * C952 + C153933 * C963) *
                C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C474 +
           ((C23992 * C498 - C23993 * C481 - C23992 * C499 + C153933 * C517 +
             C23994 * C500 - C23995 * C482 - C23994 * C501 + C153914 * C518 +
             C23996 * C502 - C23997 * C483 - C23996 * C503 + C153885 * C519) *
                C153637 * C23989 +
            (C23992 * C1338 - C23993 * C1329 - C23992 * C1339 +
             C153933 * C1344 + C23994 * C1336 - C23995 * C1328 -
             C23994 * C1337 + C153914 * C1343 + C23996 * C1334 -
             C23997 * C1327 - C23996 * C1335 + C153885 * C1342) *
                C153637 * C23990 +
            (C23992 * C3283 - C23993 * C3279 - C23992 * C3284 +
             C153933 * C3291 + C23994 * C3285 - C23995 * C3280 -
             C23994 * C3286 + C153914 * C3292 + C23996 * C3287 -
             C23997 * C3281 - C23996 * C3288 + C153885 * C3293) *
                C153637 * C153898) *
               C475) *
              C153521 * C301 +
          (((C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515 +
             C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
             C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513) *
                C153637 * C23989 +
            (C23992 * C953 - C23993 * C946 - C23992 * C954 + C153933 * C964 +
             C23994 * C955 - C23995 * C947 - C23994 * C956 + C153914 * C965 +
             C23996 * C957 - C23997 * C948 - C23996 * C958 + C153885 * C966) *
                C153637 * C23990 +
            (C23992 * C1767 - C23993 * C1759 - C23992 * C1768 +
             C153933 * C1774 + C23994 * C1765 - C23995 * C1758 -
             C23994 * C1766 + C153914 * C1773 + C23996 * C1763 -
             C23997 * C1757 - C23996 * C1764 + C153885 * C1772) *
                C153637 * C153898) *
               C474 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C473 -
           ((C23996 * C3289 - C23997 * C3282 - C23996 * C3290 +
             C153885 * C3294 + C23994 * C3287 - C23995 * C3281 -
             C23994 * C3288 + C153914 * C3293 + C23992 * C3285 -
             C23993 * C3280 - C23992 * C3286 + C153933 * C3292) *
                C153637 * C153898 +
            (C23996 * C1332 - C23997 * C1326 - C23996 * C1333 +
             C153885 * C1341 + C23994 * C1334 - C23995 * C1327 -
             C23994 * C1335 + C153914 * C1342 + C23992 * C1336 -
             C23993 * C1328 - C23992 * C1337 + C153933 * C1343) *
                C153637 * C23990 +
            (C23996 * C504 - C23997 * C484 - C23996 * C505 + C153885 * C520 +
             C23994 * C502 - C23995 * C483 - C23994 * C503 + C153914 * C519 +
             C23992 * C500 - C23993 * C482 - C23992 * C501 + C153933 * C518) *
                C153637 * C23989) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
               C153637 * C28207 +
           (C28212 * C323 - C28213 * C307 - C28212 * C324 + C153462 * C343) *
               C153637 * C28208 +
           (C28212 * C325 - C28213 * C308 - C28212 * C326 + C153462 * C344) *
               C153637 * C28209 +
           (C28212 * C1196 - C28213 * C1187 - C28212 * C1197 +
            C153462 * C1202) *
               C153637 * C28210 +
           (C28212 * C2917 - C28213 * C2913 - C28212 * C2918 +
            C153462 * C2925) *
               C153637 * C28211) *
              C153537 * C153521 * C130 -
          ((C28212 * C2919 - C28213 * C2914 - C28212 * C2920 +
            C153462 * C2926) *
               C153637 * C28211 +
           (C28212 * C1194 - C28213 * C1186 - C28212 * C1195 +
            C153462 * C1201) *
               C153637 * C28210 +
           (C28212 * C327 - C28213 * C309 - C28212 * C328 + C153462 * C345) *
               C153637 * C28209 +
           (C28212 * C321 - C28213 * C306 - C28212 * C322 + C153462 * C342) *
               C153637 * C28208 +
           (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
               C153637 * C28207) *
              C153537 * C153521 * C131 +
          ((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
               C153637 * C28207 +
           (C28212 * C319 - C28213 * C305 - C28212 * C320 + C153462 * C341) *
               C153637 * C28208 +
           (C28212 * C329 - C28213 * C310 - C28212 * C330 + C153462 * C346) *
               C153637 * C28209 +
           (C28212 * C1192 - C28213 * C1185 - C28212 * C1193 +
            C153462 * C1200) *
               C153637 * C28210 +
           (C28212 * C2921 - C28213 * C2915 - C28212 * C2922 +
            C153462 * C2927) *
               C153637 * C28211) *
              C153537 * C153521 * C132 -
          ((C28212 * C2923 - C28213 * C2916 - C28212 * C2924 +
            C153462 * C2928) *
               C153637 * C28211 +
           (C28212 * C1190 - C28213 * C1184 - C28212 * C1191 +
            C153462 * C1199) *
               C153637 * C28210 +
           (C28212 * C331 - C28213 * C311 - C28212 * C332 + C153462 * C347) *
               C153637 * C28209 +
           (C28212 * C317 - C28213 * C304 - C28212 * C318 + C153462 * C340) *
               C153637 * C28208 +
           (C28212 * C158 - C28213 * C147 - C28212 * C159 + C153462 * C171) *
               C153637 * C28207) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153537 * C298 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C153537 * C299 +
           (C28416 * C28207 + C28417 * C28208 + C28418 * C28209 +
            C28419 * C28210 +
            (C28212 * C28338 - C28213 * C28336 - C28212 * C28339 +
             C153462 * C28342) *
                C153637 * C28211) *
               C153537 * C300) *
              C301 +
          ((C28420 * C28207 + C28421 * C28208 + C28422 * C28209 +
            C28423 * C28210 + C28424 * C28211) *
               C153537 * C299 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C153537 * C298 -
           ((C28212 * C28340 - C28213 * C28337 - C28212 * C28341 +
             C153462 * C28343) *
                C153637 * C28211 +
            C28424 * C28210 + C28423 * C28209 + C28422 * C28208 +
            C28421 * C28207) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C473 -
           ((C28212 * C5568 - C28213 * C5563 - C28212 * C5569 +
             C153462 * C5572) *
                C153637 * C28211 +
            (C28212 * C4067 - C28213 * C4063 - C28212 * C4068 +
             C153462 * C4075) *
                C153637 * C28210 +
            (C28212 * C1769 - C28213 * C1760 - C28212 * C1770 +
             C153462 * C1775) *
                C153637 * C28209 +
            (C28212 * C951 - C28213 * C945 - C28212 * C952 + C153462 * C963) *
                C153637 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C474 +
           ((C28212 * C498 - C28213 * C481 - C28212 * C499 + C153462 * C517) *
                C153637 * C28207 +
            (C28212 * C1338 - C28213 * C1329 - C28212 * C1339 +
             C153462 * C1344) *
                C153637 * C28208 +
            (C28212 * C3283 - C28213 * C3279 - C28212 * C3284 +
             C153462 * C3291) *
                C153637 * C28209 +
            (C28212 * C4788 - C28213 * C4783 - C28212 * C4789 +
             C153462 * C4792) *
                C153637 * C28210 +
            (C28212 * C28548 - C28213 * C28546 - C28212 * C28549 +
             C153462 * C28552) *
                C153637 * C28211) *
               C475) *
              C153521 * C301 +
          (((C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                C153637 * C28207 +
            (C28212 * C953 - C28213 * C946 - C28212 * C954 + C153462 * C964) *
                C153637 * C28208 +
            (C28212 * C1767 - C28213 * C1759 - C28212 * C1768 +
             C153462 * C1774) *
                C153637 * C28209 +
            (C28212 * C4069 - C28213 * C4064 - C28212 * C4070 +
             C153462 * C4076) *
                C153637 * C28210 +
            (C28212 * C5566 - C28213 * C5562 - C28212 * C5567 +
             C153462 * C5571) *
                C153637 * C28211) *
               C474 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C473 -
           ((C28212 * C28550 - C28213 * C28547 - C28212 * C28551 +
             C153462 * C28553) *
                C153637 * C28211 +
            (C28212 * C4786 - C28213 * C4782 - C28212 * C4787 +
             C153462 * C4791) *
                C153637 * C28210 +
            (C28212 * C3285 - C28213 * C3280 - C28212 * C3286 +
             C153462 * C3292) *
                C153637 * C28209 +
            (C28212 * C1336 - C28213 * C1328 - C28212 * C1337 +
             C153462 * C1343) *
                C153637 * C28208 +
            (C28212 * C500 - C28213 * C482 - C28212 * C501 + C153462 * C518) *
                C153637 * C28207) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153937 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153926 +
            (C28212 * C498 - C28213 * C481 - C28212 * C499 + C153462 * C517) *
                C153901) *
               C23989 +
           (C28405 * C153937 + C29052 * C153926 + C29431 * C153901) * C23990 +
           (C28406 * C153937 + C29051 * C153926 + C29432 * C153901) * C153898) *
              C153537 * C153521 * C130 -
          (((C28212 * C3285 - C28213 * C3280 - C28212 * C3286 +
             C153462 * C3292) *
                C153901 +
            C29054 * C153926 + C28411 * C153937) *
               C153898 +
           ((C28212 * C1336 - C28213 * C1328 - C28212 * C1337 +
             C153462 * C1343) *
                C153901 +
            C29053 * C153926 + C28410 * C153937) *
               C23990 +
           ((C28212 * C500 - C28213 * C482 - C28212 * C501 + C153462 * C518) *
                C153901 +
            (C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                C153926 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153937) *
               C23989) *
              C153537 * C153521 * C131 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C153937 +
            (C28212 * C492 - C28213 * C478 - C28212 * C493 + C153462 * C514) *
                C153926 +
            (C28212 * C502 - C28213 * C483 - C28212 * C503 + C153462 * C519) *
                C153901) *
               C23989 +
           (C28701 * C153937 +
            (C28212 * C955 - C28213 * C947 - C28212 * C956 + C153462 * C965) *
                C153926 +
            (C28212 * C1334 - C28213 * C1327 - C28212 * C1335 +
             C153462 * C1342) *
                C153901) *
               C23990 +
           (C28702 * C153937 +
            (C28212 * C1765 - C28213 * C1758 - C28212 * C1766 +
             C153462 * C1773) *
                C153926 +
            (C28212 * C3287 - C28213 * C3281 - C28212 * C3288 +
             C153462 * C3293) *
                C153901) *
               C153898) *
              C153537 * C153521 * C132 -
          (((C28212 * C3289 - C28213 * C3282 - C28212 * C3290 +
             C153462 * C3294) *
                C153901 +
            (C28212 * C1763 - C28213 * C1757 - C28212 * C1764 +
             C153462 * C1772) *
                C153926 +
            (C28212 * C331 - C28213 * C311 - C28212 * C332 + C153462 * C347) *
                C153937) *
               C153898 +
           ((C28212 * C1332 - C28213 * C1326 - C28212 * C1333 +
             C153462 * C1341) *
                C153901 +
            (C28212 * C957 - C28213 * C948 - C28212 * C958 + C153462 * C966) *
                C153926 +
            (C28212 * C317 - C28213 * C304 - C28212 * C318 + C153462 * C340) *
                C153937) *
               C23990 +
           ((C28212 * C504 - C28213 * C484 - C28212 * C505 + C153462 * C520) *
                C153901 +
            (C28212 * C490 - C28213 * C477 - C28212 * C491 + C153462 * C513) *
                C153926 +
            (C28212 * C158 - C28213 * C147 - C28212 * C159 + C153462 * C171) *
                C153937) *
               C23989) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153937 +
             (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                 C153926 +
             (C28212 * C498 - C28213 * C481 - C28212 * C499 + C153462 * C517) *
                 C153901) *
                C23989 +
            (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
               C153537 * C298 -
           ((C30967 + C30968 + C30969) * C153898 +
            (C30966 + C30965 + C30964) * C23990 +
            (C30963 + C30962 + C30961) * C23989) *
               C153537 * C299 +
           (C30993 * C23989 + (C30969 + C30968 + C30967) * C23990 +
            (C28408 * C153937 + C29049 * C153926 + C29434 * C153901) *
                C153898) *
               C153537 * C300) *
              C301 +
          (((C30970 + C30971 + C31000) * C23989 +
            (C30976 + C30977 + C31001) * C23990 +
            (C30982 + C30983 + C31002) * C153898) *
               C153537 * C299 -
           (C31003 * C153898 + (C31000 + C30971 + C30970) * C23990 +
            ((C28212 * C500 - C28213 * C482 - C28212 * C501 + C153462 * C518) *
                 C153901 +
             (C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                 C153926 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153937) *
                C23989) *
               C153537 * C298 -
           (((C28212 * C28550 - C28213 * C28547 - C28212 * C28551 +
              C153462 * C28553) *
                 C153901 +
             C29056 * C153926 + C28413 * C153937) *
                C153898 +
            (C31002 + C30983 + C30982) * C23990 + C31003 * C23989) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153937 +
             C31290 * C153926 + C31291 * C153901) *
                C23989 +
            (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
               C473 -
           ((C31292 * C153901 + C29432 * C153926 + C29051 * C153937) * C153898 +
            (C31293 * C153901 + C29431 * C153926 + C29052 * C153937) * C23990 +
            (C31294 * C153901 + C31291 * C153926 + C31290 * C153937) * C23989) *
               C474 +
           ((C31291 * C153937 + C31294 * C153926 +
             (C28212 * C7518 - C28213 * C7514 - C28212 * C7519 +
              C153462 * C7526) *
                 C153901) *
                C23989 +
            (C29431 * C153937 + C31293 * C153926 +
             (C28212 * C9042 - C28213 * C9037 - C28212 * C9043 +
              C153462 * C9046) *
                 C153901) *
                C23990 +
            (C29432 * C153937 + C31292 * C153926 +
             (C28212 * C31223 - C28213 * C31221 - C28212 * C31224 +
              C153462 * C31227) *
                 C153901) *
                C153898) *
               C475) *
              C153521 * C301 +
          (((C31295 * C153937 + C31296 * C153926 + C31297 * C153901) * C23989 +
            (C29053 * C153937 + C30997 * C153926 + C31298 * C153901) * C23990 +
            (C29054 * C153937 + C30998 * C153926 + C31299 * C153901) *
                C153898) *
               C474 -
           (C31003 * C153898 + (C31000 + C30971 + C30970) * C23990 +
            (C31296 * C153901 + C31295 * C153926 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153937) *
                C23989) *
               C473 -
           (((C28212 * C31225 - C28213 * C31222 - C28212 * C31226 +
              C153462 * C31228) *
                 C153901 +
             C31299 * C153926 + C30998 * C153937) *
                C153898 +
            ((C28212 * C9040 - C28213 * C9036 - C28212 * C9041 +
              C153462 * C9045) *
                 C153901 +
             C31298 * C153926 + C30997 * C153937) *
                C23990 +
            ((C28212 * C7520 - C28213 * C7515 - C28212 * C7521 +
              C153462 * C7527) *
                 C153901 +
             C31297 * C153926 + C31296 * C153937) *
                C23989) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
            C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
            C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
               C47696 +
           (C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516 +
            C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
            C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514) *
               C47697 +
           (C23992 * C498 - C23993 * C481 - C23992 * C499 + C153933 * C517 +
            C23994 * C500 - C23995 * C482 - C23994 * C501 + C153914 * C518 +
            C23996 * C502 - C23997 * C483 - C23996 * C503 + C153885 * C519) *
               C153901) *
              C153625 * C153537 * C153521 * C130 -
          ((C23996 * C504 - C23997 * C484 - C23996 * C505 + C153885 * C520 +
            C23994 * C502 - C23995 * C483 - C23994 * C503 + C153914 * C519 +
            C23992 * C500 - C23993 * C482 - C23992 * C501 + C153933 * C518) *
               C153901 +
           (C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513 +
            C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
            C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515) *
               C47697 +
           (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
            C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
            C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
               C47696) *
              C153625 * C153537 * C153521 * C131 +
          ((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
            C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
            C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
               C47696 +
           (C23992 * C492 - C23993 * C478 - C23992 * C493 + C153933 * C514 +
            C23994 * C490 - C23995 * C477 - C23994 * C491 + C153914 * C513 +
            C23996 * C488 - C23997 * C476 - C23996 * C489 + C153885 * C512) *
               C47697 +
           (C23992 * C502 - C23993 * C483 - C23992 * C503 + C153933 * C519 +
            C23994 * C504 - C23995 * C484 - C23994 * C505 + C153914 * C520 +
            C23996 * C506 - C23997 * C485 - C23996 * C507 + C153885 * C521) *
               C153901) *
              C153625 * C153537 * C153521 * C132 -
          ((C23996 * C510 - C23997 * C487 - C23996 * C511 + C153885 * C523 +
            C23994 * C506 - C23995 * C485 - C23994 * C507 + C153914 * C521 +
            C23992 * C504 - C23993 * C484 - C23992 * C505 + C153933 * C520) *
               C153901 +
           (C23996 * C508 - C23997 * C486 - C23996 * C509 + C153885 * C522 +
            C23994 * C488 - C23995 * C476 - C23994 * C489 + C153914 * C512 +
            C23992 * C490 - C23993 * C477 - C23992 * C491 + C153933 * C513) *
               C47697 +
           (C23996 * C162 - C23997 * C149 - C23996 * C163 + C153885 * C173 +
            C23994 * C160 - C23995 * C148 - C23994 * C161 + C153914 * C172 +
            C23992 * C158 - C23993 * C147 - C23992 * C159 + C153933 * C171) *
               C47696) *
              C153625 * C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C47696 +
            (C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514) *
                C47697 +
            (C23992 * C498 - C23993 * C481 - C23992 * C499 + C153933 * C517 +
             C23994 * C500 - C23995 * C482 - C23994 * C501 + C153914 * C518 +
             C23996 * C502 - C23997 * C483 - C23996 * C503 + C153885 * C519) *
                C153901) *
               C153625 * C153537 * C298 -
           ((C26063 + C26062 + C26061) * C153901 +
            (C25410 + C25411 + C25412) * C47697 +
            (C24327 + C24326 + C24325) * C47696) *
               C153625 * C153537 * C299 +
           (C24345 * C47696 + (C25409 + C25408 + C25407) * C47697 +
            (C26064 + C26065 + C26066) * C153901) *
               C153625 * C153537 * C300) *
              C301 +
          (((C24334 + C24335 + C24336) * C47696 +
            (C25413 + C25414 + C25415) * C47697 +
            (C23992 * C1336 - C23993 * C1328 - C23992 * C1337 +
             C153933 * C1343 + C23994 * C1334 - C23995 * C1327 -
             C23994 * C1335 + C153914 * C1342 + C23996 * C1332 -
             C23997 * C1326 - C23996 * C1333 + C153885 * C1341) *
                C153901) *
               C153625 * C153537 * C299 -
           ((C23996 * C504 - C23997 * C484 - C23996 * C505 + C153885 * C520 +
             C23994 * C502 - C23995 * C483 - C23994 * C503 + C153914 * C519 +
             C23992 * C500 - C23993 * C482 - C23992 * C501 + C153933 * C518) *
                C153901 +
            (C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513 +
             C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
             C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515) *
                C47697 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C47696) *
               C153625 * C153537 * C298 -
           ((C23996 * C3289 - C23997 * C3282 - C23996 * C3290 +
             C153885 * C3294 + C23994 * C3287 - C23995 * C3281 -
             C23994 * C3288 + C153914 * C3293 + C23992 * C3285 -
             C23993 * C3280 - C23992 * C3286 + C153933 * C3292) *
                C153901 +
            (C25418 + C25417 + C25416) * C47697 + C24346 * C47696) *
               C153625 * C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C47696 +
            (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
               C153625 * C473 -
           ((C48250 + C48251 + C48252) * C153901 +
            (C48249 + C48248 + C48247) * C47697 +
            (C48246 + C48245 + C48244) * C47696) *
               C153625 * C474 +
           (C48264 * C47696 + (C48252 + C48251 + C48250) * C47697 +
            (C23992 * C7518 - C23993 * C7514 - C23992 * C7519 +
             C153933 * C7526 + C23994 * C7520 - C23995 * C7515 -
             C23994 * C7521 + C153914 * C7527 + C23996 * C7522 -
             C23997 * C7516 - C23996 * C7523 + C153885 * C7528) *
                C153901) *
               C153625 * C475) *
              C153521 * C301 +
          (((C48253 + C48254 + C48255) * C47696 +
            (C48256 + C48257 + C48258) * C47697 +
            (C48259 + C48260 + C48261) * C153901) *
               C153625 * C474 -
           (C48265 * C153901 + (C48255 + C48254 + C48253) * C47697 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C47696) *
               C153625 * C473 -
           ((C23996 * C7524 - C23997 * C7517 - C23996 * C7525 +
             C153885 * C7529 + C23994 * C7522 - C23995 * C7516 -
             C23994 * C7523 + C153914 * C7528 + C23992 * C7520 -
             C23993 * C7515 - C23992 * C7521 + C153933 * C7527) *
                C153901 +
            (C48261 + C48260 + C48259) * C47697 + C48265 * C47696) *
               C153625 * C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C47696 +
            C31290 * C47697 + C31291 * C153901) *
               C153936 +
           (C28405 * C47696 + C29052 * C47697 + C29431 * C153901) * C153924 +
           (C28406 * C47696 + C29051 * C47697 + C29432 * C153901) * C153898) *
              C153537 * C153521 * C130 -
          ((C30998 * C153901 + C29054 * C47697 + C28411 * C47696) * C153898 +
           (C30997 * C153901 + C29053 * C47697 + C28410 * C47696) * C153924 +
           (C31296 * C153901 + C31295 * C47697 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C47696) *
               C153936) *
              C153537 * C153521 * C131 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C47696 +
            C31782 * C47697 + C31783 * C153901) *
               C153936 +
           (C28701 * C47696 + C31544 * C47697 + C31545 * C153901) * C153924 +
           (C28702 * C47696 + C31546 * C47697 + C31547 * C153901) * C153898) *
              C153537 * C153521 * C132 -
          (((C28212 * C3289 - C28213 * C3282 - C28212 * C3290 +
             C153462 * C3294) *
                C153901 +
            (C28212 * C1763 - C28213 * C1757 - C28212 * C1764 +
             C153462 * C1772) *
                C47697 +
            (C28212 * C331 - C28213 * C311 - C28212 * C332 + C153462 * C347) *
                C47696) *
               C153898 +
           ((C28212 * C1332 - C28213 * C1326 - C28212 * C1333 +
             C153462 * C1341) *
                C153901 +
            (C28212 * C957 - C28213 * C948 - C28212 * C958 + C153462 * C966) *
                C47697 +
            (C28212 * C317 - C28213 * C304 - C28212 * C318 + C153462 * C340) *
                C47696) *
               C153924 +
           ((C28212 * C504 - C28213 * C484 - C28212 * C505 + C153462 * C520) *
                C153901 +
            (C28212 * C490 - C28213 * C477 - C28212 * C491 + C153462 * C513) *
                C47697 +
            (C28212 * C158 - C28213 * C147 - C28212 * C159 + C153462 * C171) *
                C47696) *
               C153936) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C47696 +
             C31290 * C47697 + C31291 * C153901) *
                C153936 +
            (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
               C153537 * C298 -
           ((C52087 + C52088 + C52089) * C153898 +
            (C52086 + C52085 + C52084) * C153924 +
            (C52083 + C52082 + C52081) * C153936) *
               C153537 * C299 +
           (C52101 * C153936 + (C52089 + C52088 + C52087) * C153924 +
            (C28408 * C47696 + C29049 * C47697 + C29434 * C153901) * C153898) *
               C153537 * C300) *
              C301 +
          (((C52090 + C52091 + C52092) * C153936 +
            (C52093 + C52094 + C52095) * C153924 +
            (C52096 + C52097 + C52098) * C153898) *
               C153537 * C299 -
           (C52102 * C153898 + (C52092 + C52091 + C52090) * C153924 +
            (C31296 * C153901 + C31295 * C47697 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C47696) *
                C153936) *
               C153537 * C298 -
           (((C28212 * C28550 - C28213 * C28547 - C28212 * C28551 +
              C153462 * C28553) *
                 C153901 +
             C29056 * C47697 + C28413 * C47696) *
                C153898 +
            (C52098 + C52097 + C52096) * C153924 + C52102 * C153936) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C47696 +
             C31290 * C47697 + C31291 * C153901) *
                C153936 +
            (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
               C473 -
           ((C31292 * C153901 + C29432 * C47697 + C29051 * C47696) * C153898 +
            (C31293 * C153901 + C29431 * C47697 + C29052 * C47696) * C153924 +
            (C31294 * C153901 + C31291 * C47697 + C31290 * C47696) * C153936) *
               C474 +
           ((C31291 * C47696 + C31294 * C47697 + C34035 * C153901) * C153936 +
            (C29431 * C47696 + C31293 * C47697 + C32703 * C153901) * C153924 +
            (C29432 * C47696 + C31292 * C47697 + C32704 * C153901) * C153898) *
               C475) *
              C153521 * C301 +
          (((C31295 * C47696 + C31296 * C47697 + C31297 * C153901) * C153936 +
            (C29053 * C47696 + C30997 * C47697 + C31298 * C153901) * C153924 +
            (C29054 * C47696 + C30998 * C47697 + C31299 * C153901) * C153898) *
               C474 -
           (C52102 * C153898 + (C52092 + C52091 + C52090) * C153924 +
            (C31296 * C153901 + C31295 * C47697 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C47696) *
                C153936) *
               C473 -
           (((C28212 * C31225 - C28213 * C31222 - C28212 * C31226 +
              C153462 * C31228) *
                 C153901 +
             C31299 * C47697 + C30998 * C47696) *
                C153898 +
            ((C28212 * C9040 - C28213 * C9036 - C28212 * C9041 +
              C153462 * C9045) *
                 C153901 +
             C31298 * C47697 + C30997 * C47696) *
                C153924 +
            ((C28212 * C7520 - C28213 * C7515 - C28212 * C7521 +
              C153462 * C7527) *
                 C153901 +
             C31297 * C47697 + C31296 * C47696) *
                C153936) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
               C55778 +
           C31290 * C55779 + C31291 * C55780 + C31294 * C55781 +
           C34035 * C55782) *
              C153625 * C153537 * C153521 * C130 -
          ((C28212 * C7520 - C28213 * C7515 - C28212 * C7521 +
            C153462 * C7527) *
               C55782 +
           C31297 * C55781 + C31296 * C55780 + C31295 * C55779 +
           (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
               C55778) *
              C153625 * C153537 * C153521 * C131 +
          ((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
               C55778 +
           C31782 * C55779 + C31783 * C55780 +
           (C28212 * C2117 - C28213 * C2110 - C28212 * C2118 +
            C153462 * C2125) *
               C55781 +
           (C28212 * C7522 - C28213 * C7516 - C28212 * C7523 +
            C153462 * C7528) *
               C55782) *
              C153625 * C153537 * C153521 * C132 -
          ((C28212 * C7524 - C28213 * C7517 - C28212 * C7525 +
            C153462 * C7529) *
               C55782 +
           (C28212 * C2115 - C28213 * C2109 - C28212 * C2116 +
            C153462 * C2124) *
               C55781 +
           (C28212 * C504 - C28213 * C484 - C28212 * C505 + C153462 * C520) *
               C55780 +
           (C28212 * C490 - C28213 * C477 - C28212 * C491 + C153462 * C513) *
               C55779 +
           (C28212 * C158 - C28213 * C147 - C28212 * C159 + C153462 * C171) *
               C55778) *
              C153625 * C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C55778 +
            C31290 * C55779 + C31291 * C55780 + C31294 * C55781 +
            C34035 * C55782) *
               C153625 * C153537 * C298 -
           (C32703 * C55782 + C31293 * C55781 + C29431 * C55780 +
            C29052 * C55779 + C28405 * C55778) *
               C153625 * C153537 * C299 +
           (C28406 * C55778 + C29051 * C55779 + C29432 * C55780 +
            C31292 * C55781 + C32704 * C55782) *
               C153625 * C153537 * C300) *
              C301 +
          ((C28410 * C55778 + C29053 * C55779 + C30997 * C55780 +
            C31298 * C55781 +
            (C28212 * C9040 - C28213 * C9036 - C28212 * C9041 +
             C153462 * C9045) *
                C55782) *
               C153625 * C153537 * C299 -
           ((C28212 * C7520 - C28213 * C7515 - C28212 * C7521 +
             C153462 * C7527) *
                C55782 +
            C31297 * C55781 + C31296 * C55780 + C31295 * C55779 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C55778) *
               C153625 * C153537 * C298 -
           ((C28212 * C31225 - C28213 * C31222 - C28212 * C31226 +
             C153462 * C31228) *
                C55782 +
            C31299 * C55781 + C30998 * C55780 + C29054 * C55779 +
            C28411 * C55778) *
               C153625 * C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C55778 +
            C31290 * C55779 + C31291 * C55780 + C31294 * C55781 +
            C34035 * C55782) *
               C153625 * C473 -
           (C56054 * C55782 + C34035 * C55781 + C31294 * C55780 +
            C31291 * C55779 + C31290 * C55778) *
               C153625 * C474 +
           (C31291 * C55778 + C31294 * C55779 + C34035 * C55780 +
            C56054 * C55781 +
            (C28212 * C56029 - C28213 * C56027 - C28212 * C56030 +
             C153462 * C56033) *
                C55782) *
               C153625 * C475) *
              C153521 * C301 +
          ((C31295 * C55778 + C31296 * C55779 + C31297 * C55780 +
            C56055 * C55781 + C56056 * C55782) *
               C153625 * C474 -
           (C56055 * C55782 + C31297 * C55781 + C31296 * C55780 +
            C31295 * C55779 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C55778) *
               C153625 * C473 -
           ((C28212 * C56031 - C28213 * C56028 - C28212 * C56032 +
             C153462 * C56034) *
                C55782 +
            C56056 * C55781 + C56055 * C55780 + C31297 * C55779 +
            C31296 * C55778) *
               C153625 * C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
                C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
                C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
                C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
                C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                   C153637 * C153625 * C153849 -
               (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
                C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
                C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
                C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
                C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
                   C153637 * C153625 * C153601) *
                  C153521 * C153917 +
              ((C134 * C494 - C135 * C479 - C134 * C495 + C121 * C515 +
                C136 * C492 - C137 * C478 - C136 * C493 + C122 * C514 +
                C138 * C490 - C139 * C477 - C138 * C491 + C123 * C513 +
                C140 * C488 - C141 * C476 - C140 * C489 + C124 * C512 +
                C142 * C508 - C143 * C486 - C142 * C509 + C125 * C522) *
                   C153637 * C153625 * C153601 -
               (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
                C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
                C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
                C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
                C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
                   C153637 * C153625 * C153849) *
                  C153521 * C153918 +
              ((C134 * C156 - C135 * C146 - C134 * C157 + C121 * C170 +
                C136 * C158 - C137 * C147 - C136 * C159 + C122 * C171 +
                C138 * C160 - C139 * C148 - C138 * C161 + C123 * C172 +
                C140 * C162 - C141 * C149 - C140 * C163 + C124 * C173 +
                C142 * C164 - C143 * C150 - C142 * C165 + C125 * C174) *
                   C153637 * C153625 * C153849 -
               (C142 * C780 - C143 * C779 - C142 * C781 + C125 * C782 +
                C140 * C508 - C141 * C486 - C140 * C509 + C124 * C522 +
                C138 * C488 - C139 * C476 - C138 * C489 + C123 * C512 +
                C136 * C490 - C137 * C477 - C136 * C491 + C122 * C513 +
                C134 * C492 - C135 * C478 - C134 * C493 + C121 * C514) *
                   C153637 * C153625 * C153601) *
                  C153521 * C650) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
                 C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
                 C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                    C153637 * C153936 +
                (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
                   C153849 -
               ((C2693 * C1765 - C2694 * C1758 - C2693 * C1766 +
                 C153885 * C1773 + C2691 * C1767 - C2692 * C1759 -
                 C2691 * C1768 + C2684 * C1774 + C2689 * C1769 - C2690 * C1760 -
                 C2689 * C1770 + C2683 * C1775) *
                    C153637 * C153898 +
                (C2693 * C955 - C2694 * C947 - C2693 * C956 + C153885 * C965 +
                 C2691 * C953 - C2692 * C946 - C2691 * C954 + C2684 * C964 +
                 C2689 * C951 - C2690 * C945 - C2689 * C952 + C2683 * C963) *
                    C153637 * C153924 +
                (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
                 C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
                 C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                    C153637 * C153936) *
                   C153601) *
                  C153521 * C153917 +
              (((C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515 +
                 C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
                 C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513) *
                    C153637 * C153936 +
                (C2689 * C953 - C2690 * C946 - C2689 * C954 + C2683 * C964 +
                 C2691 * C955 - C2692 * C947 - C2691 * C956 + C2684 * C965 +
                 C2693 * C957 - C2694 * C948 - C2693 * C958 + C153885 * C966) *
                    C153637 * C153924 +
                (C2689 * C1767 - C2690 * C1759 - C2689 * C1768 + C2683 * C1774 +
                 C2691 * C1765 - C2692 * C1758 - C2691 * C1766 + C2684 * C1773 +
                 C2693 * C1763 - C2694 * C1757 - C2693 * C1764 +
                 C153885 * C1772) *
                    C153637 * C153898) *
                   C153601 -
               (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
                (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
                 C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
                 C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                    C153637 * C153936) *
                   C153849) *
                  C153521 * C153918 +
              (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
                 C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
                 C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                    C153637 * C153936 +
                (C3550 + C3551 + C3552) * C153637 * C153924 +
                (C3553 + C3554 + C3555) * C153637 * C153898) *
                   C153849 -
               ((C2693 * C1761 - C2694 * C1756 - C2693 * C1762 +
                 C153885 * C1771 + C2691 * C1763 - C2692 * C1757 -
                 C2691 * C1764 + C2684 * C1772 + C2689 * C1765 - C2690 * C1758 -
                 C2689 * C1766 + C2683 * C1773) *
                    C153637 * C153898 +
                (C2693 * C959 - C2694 * C949 - C2693 * C960 + C153885 * C967 +
                 C2691 * C957 - C2692 * C948 - C2691 * C958 + C2684 * C966 +
                 C2689 * C955 - C2690 * C947 - C2689 * C956 + C2683 * C965) *
                    C153637 * C153924 +
                (C2693 * C488 - C2694 * C476 - C2693 * C489 + C153885 * C512 +
                 C2691 * C490 - C2692 * C477 - C2691 * C491 + C2684 * C513 +
                 C2689 * C492 - C2690 * C478 - C2689 * C493 + C2683 * C514) *
                    C153637 * C153936) *
                   C153601) *
                  C153521 * C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153937 +
            (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
               C153625 * C153849 -
           ((C7645 + C7646 + C7647) * C153901 +
            (C7644 + C7643 + C7642) * C153926 +
            (C7641 + C7640 + C7639) * C153937) *
               C153625 * C153601) *
              C153521 * C153917 +
          (((C7648 + C7649 + C7650) * C153937 +
            (C7651 + C7652 + C7653) * C153926 +
            (C7654 + C7655 + C7656) * C153901) *
               C153625 * C153601 -
           (C7660 * C153901 + (C7650 + C7649 + C7648) * C153926 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153937) *
               C153625 * C153849) *
              C153521 * C153918 +
          (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
             C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
             C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                C153937 +
            (C8133 + C8134 + C8135) * C153926 +
            (C8136 + C8137 + C8138) * C153901) *
               C153625 * C153849 -
           ((C2693 * C2113 - C2694 * C2108 - C2693 * C2114 + C153885 * C2123 +
             C2691 * C2115 - C2692 * C2109 - C2691 * C2116 + C2684 * C2124 +
             C2689 * C2117 - C2690 * C2110 - C2689 * C2118 + C2683 * C2125) *
                C153901 +
            (C8138 + C8137 + C8136) * C153926 +
            (C8135 + C8134 + C8133) * C153937) *
               C153625 * C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153849 -
           ((C23996 * C1765 - C23997 * C1758 - C23996 * C1766 +
             C153885 * C1773 + C23994 * C1767 - C23995 * C1759 -
             C23994 * C1768 + C153914 * C1774 + C23992 * C1769 -
             C23993 * C1760 - C23992 * C1770 + C153933 * C1775) *
                C153637 * C153898 +
            (C23996 * C955 - C23997 * C947 - C23996 * C956 + C153885 * C965 +
             C23994 * C953 - C23995 * C946 - C23994 * C954 + C153914 * C964 +
             C23992 * C951 - C23993 * C945 - C23992 * C952 + C153933 * C963) *
                C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C153601) *
              C153521 * C153917 +
          (((C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515 +
             C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
             C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513) *
                C153637 * C23989 +
            (C23992 * C953 - C23993 * C946 - C23992 * C954 + C153933 * C964 +
             C23994 * C955 - C23995 * C947 - C23994 * C956 + C153914 * C965 +
             C23996 * C957 - C23997 * C948 - C23996 * C958 + C153885 * C966) *
                C153637 * C23990 +
            (C23992 * C1767 - C23993 * C1759 - C23992 * C1768 +
             C153933 * C1774 + C23994 * C1765 - C23995 * C1758 -
             C23994 * C1766 + C153914 * C1773 + C23996 * C1763 -
             C23997 * C1757 - C23996 * C1764 + C153885 * C1772) *
                C153637 * C153898) *
               C153601 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C153849) *
              C153521 * C153918 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C153637 * C23989 +
            (C24821 + C24822 + C24823) * C153637 * C23990 +
            (C24824 + C24825 + C24826) * C153637 * C153898) *
               C153849 -
           ((C23996 * C1761 - C23997 * C1756 - C23996 * C1762 +
             C153885 * C1771 + C23994 * C1763 - C23995 * C1757 -
             C23994 * C1764 + C153914 * C1772 + C23992 * C1765 -
             C23993 * C1758 - C23992 * C1766 + C153933 * C1773) *
                C153637 * C153898 +
            (C23996 * C959 - C23997 * C949 - C23996 * C960 + C153885 * C967 +
             C23994 * C957 - C23995 * C948 - C23994 * C958 + C153914 * C966 +
             C23992 * C955 - C23993 * C947 - C23992 * C956 + C153933 * C965) *
                C153637 * C23990 +
            (C23996 * C488 - C23997 * C476 - C23996 * C489 + C153885 * C512 +
             C23994 * C490 - C23995 * C477 - C23994 * C491 + C153914 * C513 +
             C23992 * C492 - C23993 * C478 - C23992 * C493 + C153933 * C514) *
                C153637 * C23989) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153849 -
           ((C28212 * C5568 - C28213 * C5563 - C28212 * C5569 +
             C153462 * C5572) *
                C153637 * C28211 +
            (C28212 * C4067 - C28213 * C4063 - C28212 * C4068 +
             C153462 * C4075) *
                C153637 * C28210 +
            (C28212 * C1769 - C28213 * C1760 - C28212 * C1770 +
             C153462 * C1775) *
                C153637 * C28209 +
            (C28212 * C951 - C28213 * C945 - C28212 * C952 + C153462 * C963) *
                C153637 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C153601) *
              C153521 * C153917 +
          (((C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                C153637 * C28207 +
            (C28212 * C953 - C28213 * C946 - C28212 * C954 + C153462 * C964) *
                C153637 * C28208 +
            (C28212 * C1767 - C28213 * C1759 - C28212 * C1768 +
             C153462 * C1774) *
                C153637 * C28209 +
            (C28212 * C4069 - C28213 * C4064 - C28212 * C4070 +
             C153462 * C4076) *
                C153637 * C28210 +
            (C28212 * C5566 - C28213 * C5562 - C28212 * C5567 +
             C153462 * C5571) *
                C153637 * C28211) *
               C153601 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C153849) *
              C153521 * C153918 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C153637 * C28207 +
            C28705 * C28208 + C28706 * C28209 + C28707 * C28210 +
            C28708 * C28211) *
               C153849 -
           ((C28212 * C5564 - C28213 * C5561 - C28212 * C5565 +
             C153462 * C5570) *
                C153637 * C28211 +
            (C28212 * C4071 - C28213 * C4065 - C28212 * C4072 +
             C153462 * C4077) *
                C153637 * C28210 +
            (C28212 * C1765 - C28213 * C1758 - C28212 * C1766 +
             C153462 * C1773) *
                C153637 * C28209 +
            (C28212 * C955 - C28213 * C947 - C28212 * C956 + C153462 * C965) *
                C153637 * C28208 +
            (C28212 * C492 - C28213 * C478 - C28212 * C493 + C153462 * C514) *
                C153637 * C28207) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153937 +
             C31290 * C153926 + C31291 * C153901) *
                C23989 +
            (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
               C153849 -
           ((C31292 * C153901 + C29432 * C153926 + C29051 * C153937) * C153898 +
            (C31293 * C153901 + C29431 * C153926 + C29052 * C153937) * C23990 +
            (C31294 * C153901 + C31291 * C153926 + C31290 * C153937) * C23989) *
               C153601) *
              C153521 * C153917 +
          (((C31295 * C153937 + C31296 * C153926 + C31297 * C153901) * C23989 +
            (C29053 * C153937 + C30997 * C153926 + C31298 * C153901) * C23990 +
            (C29054 * C153937 + C30998 * C153926 + C31299 * C153901) *
                C153898) *
               C153601 -
           (C31003 * C153898 + (C31000 + C30971 + C30970) * C23990 +
            (C31296 * C153901 + C31295 * C153926 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153937) *
                C23989) *
               C153849) *
              C153521 * C153918 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C153937 +
             C31782 * C153926 + C31783 * C153901) *
                C23989 +
            (C31518 + C31548 + C31549) * C23990 +
            (C31527 + C31550 + C31551) * C153898) *
               C153849 -
           (((C28212 * C6185 - C28213 * C6179 - C28212 * C6186 +
              C153462 * C6197) *
                 C153901 +
             C31547 * C153926 + C31546 * C153937) *
                C153898 +
            ((C28212 * C6191 - C28213 * C6182 - C28212 * C6192 +
              C153462 * C6200) *
                 C153901 +
             C31545 * C153926 + C31544 * C153937) *
                C23990 +
            ((C28212 * C2117 - C28213 * C2110 - C28212 * C2118 +
              C153462 * C2125) *
                 C153901 +
             C31783 * C153926 + C31782 * C153937) *
                C23989) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C47696 +
            (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
               C153625 * C153849 -
           ((C48250 + C48251 + C48252) * C153901 +
            (C48249 + C48248 + C48247) * C47697 +
            (C48246 + C48245 + C48244) * C47696) *
               C153625 * C153601) *
              C153521 * C153917 +
          (((C48253 + C48254 + C48255) * C47696 +
            (C48256 + C48257 + C48258) * C47697 +
            (C48259 + C48260 + C48261) * C153901) *
               C153625 * C153601 -
           (C48265 * C153901 + (C48255 + C48254 + C48253) * C47697 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C47696) *
               C153625 * C153849) *
              C153521 * C153918 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C47696 +
            (C48738 + C48739 + C48740) * C47697 +
            (C48741 + C48742 + C48743) * C153901) *
               C153625 * C153849 -
           ((C23996 * C2113 - C23997 * C2108 - C23996 * C2114 +
             C153885 * C2123 + C23994 * C2115 - C23995 * C2109 -
             C23994 * C2116 + C153914 * C2124 + C23992 * C2117 -
             C23993 * C2110 - C23992 * C2118 + C153933 * C2125) *
                C153901 +
            (C48743 + C48742 + C48741) * C47697 +
            (C48740 + C48739 + C48738) * C47696) *
               C153625 * C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C47696 +
             C31290 * C47697 + C31291 * C153901) *
                C153936 +
            (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
               C153849 -
           ((C31292 * C153901 + C29432 * C47697 + C29051 * C47696) * C153898 +
            (C31293 * C153901 + C29431 * C47697 + C29052 * C47696) * C153924 +
            (C31294 * C153901 + C31291 * C47697 + C31290 * C47696) * C153936) *
               C153601) *
              C153521 * C153917 +
          (((C31295 * C47696 + C31296 * C47697 + C31297 * C153901) * C153936 +
            (C29053 * C47696 + C30997 * C47697 + C31298 * C153901) * C153924 +
            (C29054 * C47696 + C30998 * C47697 + C31299 * C153901) * C153898) *
               C153601 -
           (C52102 * C153898 + (C52092 + C52091 + C52090) * C153924 +
            (C31296 * C153901 + C31295 * C47697 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C47696) *
                C153936) *
               C153849) *
              C153521 * C153918 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C47696 +
             C31782 * C47697 + C31783 * C153901) *
                C153936 +
            (C52539 + C52540 + C52541) * C153924 +
            (C52542 + C52543 + C52544) * C153898) *
               C153849 -
           (((C28212 * C6185 - C28213 * C6179 - C28212 * C6186 +
              C153462 * C6197) *
                 C153901 +
             C31547 * C47697 + C31546 * C47696) *
                C153898 +
            ((C28212 * C6191 - C28213 * C6182 - C28212 * C6192 +
              C153462 * C6200) *
                 C153901 +
             C31545 * C47697 + C31544 * C47696) *
                C153924 +
            ((C28212 * C2117 - C28213 * C2110 - C28212 * C2118 +
              C153462 * C2125) *
                 C153901 +
             C31783 * C47697 + C31782 * C47696) *
                C153936) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C55778 +
            C31290 * C55779 + C31291 * C55780 + C31294 * C55781 +
            C34035 * C55782) *
               C153625 * C153849 -
           (C56054 * C55782 + C34035 * C55781 + C31294 * C55780 +
            C31291 * C55779 + C31290 * C55778) *
               C153625 * C153601) *
              C153521 * C153917 +
          ((C31295 * C55778 + C31296 * C55779 + C31297 * C55780 +
            C56055 * C55781 + C56056 * C55782) *
               C153625 * C153601 -
           (C56055 * C55782 + C31297 * C55781 + C31296 * C55780 +
            C31295 * C55779 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C55778) *
               C153625 * C153849) *
              C153521 * C153918 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C55778 +
            C31782 * C55779 + C31783 * C55780 + C56313 * C55781 +
            C56314 * C55782) *
               C153625 * C153849 -
           ((C28212 * C10381 - C28213 * C10378 - C28212 * C10382 +
             C153462 * C10387) *
                C55782 +
            C56314 * C55781 + C56313 * C55780 + C31783 * C55779 +
            C31782 * C55778) *
               C153625 * C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 + C136 * C154 -
           C137 * C145 - C136 * C155 + C122 * C169 + C138 * C156 - C139 * C146 -
           C138 * C157 + C123 * C170 + C140 * C158 - C141 * C147 - C140 * C159 +
           C124 * C171 + C142 * C160 - C143 * C148 - C142 * C161 +
           C125 * C172) *
              C153637 * C153625 * C153537 * C153521 * C130 -
          (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 + C140 * C160 -
           C141 * C148 - C140 * C161 + C124 * C172 + C138 * C158 - C139 * C147 -
           C138 * C159 + C123 * C171 + C136 * C156 - C137 * C146 - C136 * C157 +
           C122 * C170 + C134 * C154 - C135 * C145 - C134 * C155 +
           C121 * C169) *
              C153637 * C153625 * C153537 * C153521 * C131 +
          (C134 * C156 - C135 * C146 - C134 * C157 + C121 * C170 + C136 * C158 -
           C137 * C147 - C136 * C159 + C122 * C171 + C138 * C160 - C139 * C148 -
           C138 * C161 + C123 * C172 + C140 * C162 - C141 * C149 - C140 * C163 +
           C124 * C173 + C142 * C164 - C143 * C150 - C142 * C165 +
           C125 * C174) *
              C153637 * C153625 * C153537 * C153521 * C132 -
          (C142 * C166 - C143 * C151 - C142 * C167 + C125 * C175 + C140 * C164 -
           C141 * C150 - C140 * C165 + C124 * C174 + C138 * C162 - C139 * C149 -
           C138 * C163 + C123 * C173 + C136 * C160 - C137 * C148 - C136 * C161 +
           C122 * C172 + C134 * C158 - C135 * C147 - C134 * C159 +
           C121 * C171) *
              C153637 * C153625 * C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C153537 * C298 -
           (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
            C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
            C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
            C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
            C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
               C153637 * C153625 * C153537 * C299 +
           (C134 * C325 - C135 * C308 - C134 * C326 + C121 * C344 +
            C136 * C327 - C137 * C309 - C136 * C328 + C122 * C345 +
            C138 * C329 - C139 * C310 - C138 * C330 + C123 * C346 +
            C140 * C331 - C141 * C311 - C140 * C332 + C124 * C347 +
            C142 * C333 - C143 * C312 - C142 * C334 + C125 * C348) *
               C153637 * C153625 * C153537 * C300) *
              C301 +
          ((C134 * C321 - C135 * C306 - C134 * C322 + C121 * C342 +
            C136 * C319 - C137 * C305 - C136 * C320 + C122 * C341 +
            C138 * C317 - C139 * C304 - C138 * C318 + C123 * C340 +
            C140 * C315 - C141 * C303 - C140 * C316 + C124 * C339 +
            C142 * C335 - C143 * C313 - C142 * C336 + C125 * C349) *
               C153637 * C153625 * C153537 * C299 -
           (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
            C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
            C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
            C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
            C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
               C153637 * C153625 * C153537 * C298 -
           (C142 * C337 - C143 * C314 - C142 * C338 + C125 * C350 +
            C140 * C333 - C141 * C312 - C140 * C334 + C124 * C348 +
            C138 * C331 - C139 * C311 - C138 * C332 + C123 * C347 +
            C136 * C329 - C137 * C310 - C136 * C330 + C122 * C346 +
            C134 * C327 - C135 * C309 - C134 * C328 + C121 * C345) *
               C153637 * C153625 * C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
            C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
            C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
               C153637 * C153936 +
           (C2689 * C323 - C2690 * C307 - C2689 * C324 + C2683 * C343 +
            C2691 * C321 - C2692 * C306 - C2691 * C322 + C2684 * C342 +
            C2693 * C319 - C2694 * C305 - C2693 * C320 + C153885 * C341) *
               C153637 * C153924 +
           (C2689 * C325 - C2690 * C308 - C2689 * C326 + C2683 * C344 +
            C2691 * C327 - C2692 * C309 - C2691 * C328 + C2684 * C345 +
            C2693 * C329 - C2694 * C310 - C2693 * C330 + C153885 * C346) *
               C153637 * C153898) *
              C153537 * C153521 * C130 -
          ((C2693 * C331 - C2694 * C311 - C2693 * C332 + C153885 * C347 +
            C2691 * C329 - C2692 * C310 - C2691 * C330 + C2684 * C346 +
            C2689 * C327 - C2690 * C309 - C2689 * C328 + C2683 * C345) *
               C153637 * C153898 +
           (C2693 * C317 - C2694 * C304 - C2693 * C318 + C153885 * C340 +
            C2691 * C319 - C2692 * C305 - C2691 * C320 + C2684 * C341 +
            C2689 * C321 - C2690 * C306 - C2689 * C322 + C2683 * C342) *
               C153637 * C153924 +
           (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
            C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
            C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
               C153637 * C153936) *
              C153537 * C153521 * C131 +
          ((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
            C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
            C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
               C153637 * C153936 +
           (C2689 * C319 - C2690 * C305 - C2689 * C320 + C2683 * C341 +
            C2691 * C317 - C2692 * C304 - C2691 * C318 + C2684 * C340 +
            C2693 * C315 - C2694 * C303 - C2693 * C316 + C153885 * C339) *
               C153637 * C153924 +
           (C2689 * C329 - C2690 * C310 - C2689 * C330 + C2683 * C346 +
            C2691 * C331 - C2692 * C311 - C2691 * C332 + C2684 * C347 +
            C2693 * C333 - C2694 * C312 - C2693 * C334 + C153885 * C348) *
               C153637 * C153898) *
              C153537 * C153521 * C132 -
          ((C2693 * C337 - C2694 * C314 - C2693 * C338 + C153885 * C350 +
            C2691 * C333 - C2692 * C312 - C2691 * C334 + C2684 * C348 +
            C2689 * C331 - C2690 * C311 - C2689 * C332 + C2683 * C347) *
               C153637 * C153898 +
           (C2693 * C335 - C2694 * C313 - C2693 * C336 + C153885 * C349 +
            C2691 * C315 - C2692 * C303 - C2691 * C316 + C2684 * C339 +
            C2689 * C317 - C2690 * C304 - C2689 * C318 + C2683 * C340) *
               C153637 * C153924 +
           (C2693 * C162 - C2694 * C149 - C2693 * C163 + C153885 * C173 +
            C2691 * C160 - C2692 * C148 - C2691 * C161 + C2684 * C172 +
            C2689 * C158 - C2690 * C147 - C2689 * C159 + C2683 * C171) *
               C153637 * C153936) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C153537 * C298 -
           ((C3044 + C3045 + C3046) * C153637 * C153898 +
            (C3043 + C3042 + C3041) * C153637 * C153924 +
            (C3040 + C3039 + C3038) * C153637 * C153936) *
               C153537 * C299 +
           (C3060 * C153936 + (C3046 + C3045 + C3044) * C153637 * C153924 +
            (C2689 * C2917 - C2690 * C2913 - C2689 * C2918 + C2683 * C2925 +
             C2691 * C2919 - C2692 * C2914 - C2691 * C2920 + C2684 * C2926 +
             C2693 * C2921 - C2694 * C2915 - C2693 * C2922 + C153885 * C2927) *
                C153637 * C153898) *
               C153537 * C300) *
              C301 +
          (((C3047 + C3048 + C3049) * C153637 * C153936 +
            (C3050 + C3051 + C3052) * C153637 * C153924 +
            (C3053 + C3054 + C3055) * C153637 * C153898) *
               C153537 * C299 -
           (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153637 * C153936) *
               C153537 * C298 -
           ((C2693 * C2923 - C2694 * C2916 - C2693 * C2924 + C153885 * C2928 +
             C2691 * C2921 - C2692 * C2915 - C2691 * C2922 + C2684 * C2927 +
             C2689 * C2919 - C2690 * C2914 - C2689 * C2920 + C2683 * C2926) *
                C153637 * C153898 +
            (C3055 + C3054 + C3053) * C153637 * C153924 + C3061 * C153936) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
            C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
            C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
               C153937 +
           (C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516 +
            C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
            C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514) *
               C153926 +
           (C2689 * C498 - C2690 * C481 - C2689 * C499 + C2683 * C517 +
            C2691 * C500 - C2692 * C482 - C2691 * C501 + C2684 * C518 +
            C2693 * C502 - C2694 * C483 - C2693 * C503 + C153885 * C519) *
               C153901) *
              C153625 * C153537 * C153521 * C130 -
          ((C2693 * C504 - C2694 * C484 - C2693 * C505 + C153885 * C520 +
            C2691 * C502 - C2692 * C483 - C2691 * C503 + C2684 * C519 +
            C2689 * C500 - C2690 * C482 - C2689 * C501 + C2683 * C518) *
               C153901 +
           (C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513 +
            C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
            C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515) *
               C153926 +
           (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
            C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
            C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
               C153937) *
              C153625 * C153537 * C153521 * C131 +
          ((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
            C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
            C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
               C153937 +
           (C2689 * C492 - C2690 * C478 - C2689 * C493 + C2683 * C514 +
            C2691 * C490 - C2692 * C477 - C2691 * C491 + C2684 * C513 +
            C2693 * C488 - C2694 * C476 - C2693 * C489 + C153885 * C512) *
               C153926 +
           (C2689 * C502 - C2690 * C483 - C2689 * C503 + C2683 * C519 +
            C2691 * C504 - C2692 * C484 - C2691 * C505 + C2684 * C520 +
            C2693 * C506 - C2694 * C485 - C2693 * C507 + C153885 * C521) *
               C153901) *
              C153625 * C153537 * C153521 * C132 -
          ((C2693 * C510 - C2694 * C487 - C2693 * C511 + C153885 * C523 +
            C2691 * C506 - C2692 * C485 - C2691 * C507 + C2684 * C521 +
            C2689 * C504 - C2690 * C484 - C2689 * C505 + C2683 * C520) *
               C153901 +
           (C2693 * C508 - C2694 * C486 - C2693 * C509 + C153885 * C522 +
            C2691 * C488 - C2692 * C476 - C2691 * C489 + C2684 * C512 +
            C2689 * C490 - C2690 * C477 - C2689 * C491 + C2683 * C513) *
               C153926 +
           (C2693 * C162 - C2694 * C149 - C2693 * C163 + C153885 * C173 +
            C2691 * C160 - C2692 * C148 - C2691 * C161 + C2684 * C172 +
            C2689 * C158 - C2690 * C147 - C2689 * C159 + C2683 * C171) *
               C153937) *
              C153625 * C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153937 +
            (C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516 +
             C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
             C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514) *
                C153926 +
            (C2689 * C498 - C2690 * C481 - C2689 * C499 + C2683 * C517 +
             C2691 * C500 - C2692 * C482 - C2691 * C501 + C2684 * C518 +
             C2693 * C502 - C2694 * C483 - C2693 * C503 + C153885 * C519) *
                C153901) *
               C153625 * C153537 * C298 -
           ((C4832 + C4831 + C4830) * C153901 +
            (C4155 + C4156 + C4157) * C153926 +
            (C3040 + C3039 + C3038) * C153937) *
               C153625 * C153537 * C299 +
           (C3058 * C153937 + (C4154 + C4153 + C4152) * C153926 +
            (C4833 + C4834 + C4835) * C153901) *
               C153625 * C153537 * C300) *
              C301 +
          (((C3047 + C3048 + C3049) * C153937 +
            (C4158 + C4159 + C4160) * C153926 +
            (C2689 * C1336 - C2690 * C1328 - C2689 * C1337 + C2683 * C1343 +
             C2691 * C1334 - C2692 * C1327 - C2691 * C1335 + C2684 * C1342 +
             C2693 * C1332 - C2694 * C1326 - C2693 * C1333 + C153885 * C1341) *
                C153901) *
               C153625 * C153537 * C299 -
           ((C2693 * C504 - C2694 * C484 - C2693 * C505 + C153885 * C520 +
             C2691 * C502 - C2692 * C483 - C2691 * C503 + C2684 * C519 +
             C2689 * C500 - C2690 * C482 - C2689 * C501 + C2683 * C518) *
                C153901 +
            (C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513 +
             C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
             C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515) *
                C153926 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153937) *
               C153625 * C153537 * C298 -
           ((C2693 * C3289 - C2694 * C3282 - C2693 * C3290 + C153885 * C3294 +
             C2691 * C3287 - C2692 * C3281 - C2691 * C3288 + C2684 * C3293 +
             C2689 * C3285 - C2690 * C3280 - C2689 * C3286 + C2683 * C3292) *
                C153901 +
            (C4163 + C4162 + C4161) * C153926 + C3059 * C153937) *
               C153625 * C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
            C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
            C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
               C153637 * C23989 +
           (C23992 * C323 - C23993 * C307 - C23992 * C324 + C153933 * C343 +
            C23994 * C321 - C23995 * C306 - C23994 * C322 + C153914 * C342 +
            C23996 * C319 - C23997 * C305 - C23996 * C320 + C153885 * C341) *
               C153637 * C23990 +
           (C23992 * C325 - C23993 * C308 - C23992 * C326 + C153933 * C344 +
            C23994 * C327 - C23995 * C309 - C23994 * C328 + C153914 * C345 +
            C23996 * C329 - C23997 * C310 - C23996 * C330 + C153885 * C346) *
               C153637 * C153898) *
              C153537 * C153521 * C130 -
          ((C23996 * C331 - C23997 * C311 - C23996 * C332 + C153885 * C347 +
            C23994 * C329 - C23995 * C310 - C23994 * C330 + C153914 * C346 +
            C23992 * C327 - C23993 * C309 - C23992 * C328 + C153933 * C345) *
               C153637 * C153898 +
           (C23996 * C317 - C23997 * C304 - C23996 * C318 + C153885 * C340 +
            C23994 * C319 - C23995 * C305 - C23994 * C320 + C153914 * C341 +
            C23992 * C321 - C23993 * C306 - C23992 * C322 + C153933 * C342) *
               C153637 * C23990 +
           (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
            C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
            C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
               C153637 * C23989) *
              C153537 * C153521 * C131 +
          ((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
            C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
            C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
               C153637 * C23989 +
           (C23992 * C319 - C23993 * C305 - C23992 * C320 + C153933 * C341 +
            C23994 * C317 - C23995 * C304 - C23994 * C318 + C153914 * C340 +
            C23996 * C315 - C23997 * C303 - C23996 * C316 + C153885 * C339) *
               C153637 * C23990 +
           (C23992 * C329 - C23993 * C310 - C23992 * C330 + C153933 * C346 +
            C23994 * C331 - C23995 * C311 - C23994 * C332 + C153914 * C347 +
            C23996 * C333 - C23997 * C312 - C23996 * C334 + C153885 * C348) *
               C153637 * C153898) *
              C153537 * C153521 * C132 -
          ((C23996 * C337 - C23997 * C314 - C23996 * C338 + C153885 * C350 +
            C23994 * C333 - C23995 * C312 - C23994 * C334 + C153914 * C348 +
            C23992 * C331 - C23993 * C311 - C23992 * C332 + C153933 * C347) *
               C153637 * C153898 +
           (C23996 * C335 - C23997 * C313 - C23996 * C336 + C153885 * C349 +
            C23994 * C315 - C23995 * C303 - C23994 * C316 + C153914 * C339 +
            C23992 * C317 - C23993 * C304 - C23992 * C318 + C153933 * C340) *
               C153637 * C23990 +
           (C23996 * C162 - C23997 * C149 - C23996 * C163 + C153885 * C173 +
            C23994 * C160 - C23995 * C148 - C23994 * C161 + C153914 * C172 +
            C23992 * C158 - C23993 * C147 - C23992 * C159 + C153933 * C171) *
               C153637 * C23989) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153537 * C298 -
           ((C24331 + C24332 + C24333) * C153637 * C153898 +
            (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C153537 * C299 +
           (C24347 * C23989 + (C24333 + C24332 + C24331) * C153637 * C23990 +
            (C23992 * C2917 - C23993 * C2913 - C23992 * C2918 +
             C153933 * C2925 + C23994 * C2919 - C23995 * C2914 -
             C23994 * C2920 + C153914 * C2926 + C23996 * C2921 -
             C23997 * C2915 - C23996 * C2922 + C153885 * C2927) *
                C153637 * C153898) *
               C153537 * C300) *
              C301 +
          (((C24334 + C24335 + C24336) * C153637 * C23989 +
            (C24337 + C24338 + C24339) * C153637 * C23990 +
            (C24340 + C24341 + C24342) * C153637 * C153898) *
               C153537 * C299 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C153537 * C298 -
           ((C23996 * C2923 - C23997 * C2916 - C23996 * C2924 +
             C153885 * C2928 + C23994 * C2921 - C23995 * C2915 -
             C23994 * C2922 + C153914 * C2927 + C23992 * C2919 -
             C23993 * C2914 - C23992 * C2920 + C153933 * C2926) *
                C153637 * C153898 +
            (C24342 + C24341 + C24340) * C153637 * C23990 + C24348 * C23989) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
               C153637 * C28207 +
           (C28212 * C323 - C28213 * C307 - C28212 * C324 + C153462 * C343) *
               C153637 * C28208 +
           (C28212 * C325 - C28213 * C308 - C28212 * C326 + C153462 * C344) *
               C153637 * C28209 +
           (C28212 * C1196 - C28213 * C1187 - C28212 * C1197 +
            C153462 * C1202) *
               C153637 * C28210 +
           (C28212 * C2917 - C28213 * C2913 - C28212 * C2918 +
            C153462 * C2925) *
               C153637 * C28211) *
              C153537 * C153521 * C130 -
          ((C28212 * C2919 - C28213 * C2914 - C28212 * C2920 +
            C153462 * C2926) *
               C153637 * C28211 +
           (C28212 * C1194 - C28213 * C1186 - C28212 * C1195 +
            C153462 * C1201) *
               C153637 * C28210 +
           (C28212 * C327 - C28213 * C309 - C28212 * C328 + C153462 * C345) *
               C153637 * C28209 +
           (C28212 * C321 - C28213 * C306 - C28212 * C322 + C153462 * C342) *
               C153637 * C28208 +
           (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
               C153637 * C28207) *
              C153537 * C153521 * C131 +
          ((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
               C153637 * C28207 +
           (C28212 * C319 - C28213 * C305 - C28212 * C320 + C153462 * C341) *
               C153637 * C28208 +
           (C28212 * C329 - C28213 * C310 - C28212 * C330 + C153462 * C346) *
               C153637 * C28209 +
           (C28212 * C1192 - C28213 * C1185 - C28212 * C1193 +
            C153462 * C1200) *
               C153637 * C28210 +
           (C28212 * C2921 - C28213 * C2915 - C28212 * C2922 +
            C153462 * C2927) *
               C153637 * C28211) *
              C153537 * C153521 * C132 -
          ((C28212 * C2923 - C28213 * C2916 - C28212 * C2924 +
            C153462 * C2928) *
               C153637 * C28211 +
           (C28212 * C1190 - C28213 * C1184 - C28212 * C1191 +
            C153462 * C1199) *
               C153637 * C28210 +
           (C28212 * C331 - C28213 * C311 - C28212 * C332 + C153462 * C347) *
               C153637 * C28209 +
           (C28212 * C317 - C28213 * C304 - C28212 * C318 + C153462 * C340) *
               C153637 * C28208 +
           (C28212 * C158 - C28213 * C147 - C28212 * C159 + C153462 * C171) *
               C153637 * C28207) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153537 * C298 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C153537 * C299 +
           (C28416 * C28207 + C28417 * C28208 + C28418 * C28209 +
            C28419 * C28210 +
            (C28212 * C28338 - C28213 * C28336 - C28212 * C28339 +
             C153462 * C28342) *
                C153637 * C28211) *
               C153537 * C300) *
              C301 +
          ((C28420 * C28207 + C28421 * C28208 + C28422 * C28209 +
            C28423 * C28210 + C28424 * C28211) *
               C153537 * C299 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C153537 * C298 -
           ((C28212 * C28340 - C28213 * C28337 - C28212 * C28341 +
             C153462 * C28343) *
                C153637 * C28211 +
            C28424 * C28210 + C28423 * C28209 + C28422 * C28208 +
            C28421 * C28207) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153937 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153926 +
            (C28212 * C498 - C28213 * C481 - C28212 * C499 + C153462 * C517) *
                C153901) *
               C23989 +
           (C28405 * C153937 + C29052 * C153926 + C29431 * C153901) * C23990 +
           (C28406 * C153937 + C29051 * C153926 + C29432 * C153901) * C153898) *
              C153537 * C153521 * C130 -
          (((C28212 * C3285 - C28213 * C3280 - C28212 * C3286 +
             C153462 * C3292) *
                C153901 +
            C29054 * C153926 + C28411 * C153937) *
               C153898 +
           ((C28212 * C1336 - C28213 * C1328 - C28212 * C1337 +
             C153462 * C1343) *
                C153901 +
            C29053 * C153926 + C28410 * C153937) *
               C23990 +
           ((C28212 * C500 - C28213 * C482 - C28212 * C501 + C153462 * C518) *
                C153901 +
            (C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                C153926 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153937) *
               C23989) *
              C153537 * C153521 * C131 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C153937 +
            (C28212 * C492 - C28213 * C478 - C28212 * C493 + C153462 * C514) *
                C153926 +
            (C28212 * C502 - C28213 * C483 - C28212 * C503 + C153462 * C519) *
                C153901) *
               C23989 +
           (C28701 * C153937 +
            (C28212 * C955 - C28213 * C947 - C28212 * C956 + C153462 * C965) *
                C153926 +
            (C28212 * C1334 - C28213 * C1327 - C28212 * C1335 +
             C153462 * C1342) *
                C153901) *
               C23990 +
           (C28702 * C153937 +
            (C28212 * C1765 - C28213 * C1758 - C28212 * C1766 +
             C153462 * C1773) *
                C153926 +
            (C28212 * C3287 - C28213 * C3281 - C28212 * C3288 +
             C153462 * C3293) *
                C153901) *
               C153898) *
              C153537 * C153521 * C132 -
          (((C28212 * C3289 - C28213 * C3282 - C28212 * C3290 +
             C153462 * C3294) *
                C153901 +
            (C28212 * C1763 - C28213 * C1757 - C28212 * C1764 +
             C153462 * C1772) *
                C153926 +
            (C28212 * C331 - C28213 * C311 - C28212 * C332 + C153462 * C347) *
                C153937) *
               C153898 +
           ((C28212 * C1332 - C28213 * C1326 - C28212 * C1333 +
             C153462 * C1341) *
                C153901 +
            (C28212 * C957 - C28213 * C948 - C28212 * C958 + C153462 * C966) *
                C153926 +
            (C28212 * C317 - C28213 * C304 - C28212 * C318 + C153462 * C340) *
                C153937) *
               C23990 +
           ((C28212 * C504 - C28213 * C484 - C28212 * C505 + C153462 * C520) *
                C153901 +
            (C28212 * C490 - C28213 * C477 - C28212 * C491 + C153462 * C513) *
                C153926 +
            (C28212 * C158 - C28213 * C147 - C28212 * C159 + C153462 * C171) *
                C153937) *
               C23989) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153937 +
             (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                 C153926 +
             (C28212 * C498 - C28213 * C481 - C28212 * C499 + C153462 * C517) *
                 C153901) *
                C23989 +
            (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
               C153537 * C298 -
           ((C30967 + C30968 + C30969) * C153898 +
            (C30966 + C30965 + C30964) * C23990 +
            (C30963 + C30962 + C30961) * C23989) *
               C153537 * C299 +
           (C30993 * C23989 + (C30969 + C30968 + C30967) * C23990 +
            (C28408 * C153937 + C29049 * C153926 + C29434 * C153901) *
                C153898) *
               C153537 * C300) *
              C301 +
          (((C30970 + C30971 + C31000) * C23989 +
            (C30976 + C30977 + C31001) * C23990 +
            (C30982 + C30983 + C31002) * C153898) *
               C153537 * C299 -
           (C31003 * C153898 + (C31000 + C30971 + C30970) * C23990 +
            ((C28212 * C500 - C28213 * C482 - C28212 * C501 + C153462 * C518) *
                 C153901 +
             (C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                 C153926 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153937) *
                C23989) *
               C153537 * C298 -
           (((C28212 * C28550 - C28213 * C28547 - C28212 * C28551 +
              C153462 * C28553) *
                 C153901 +
             C29056 * C153926 + C28413 * C153937) *
                C153898 +
            (C31002 + C30983 + C30982) * C23990 + C31003 * C23989) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
            C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
            C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
               C47696 +
           (C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516 +
            C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
            C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514) *
               C47697 +
           (C23992 * C498 - C23993 * C481 - C23992 * C499 + C153933 * C517 +
            C23994 * C500 - C23995 * C482 - C23994 * C501 + C153914 * C518 +
            C23996 * C502 - C23997 * C483 - C23996 * C503 + C153885 * C519) *
               C153901) *
              C153625 * C153537 * C153521 * C130 -
          ((C23996 * C504 - C23997 * C484 - C23996 * C505 + C153885 * C520 +
            C23994 * C502 - C23995 * C483 - C23994 * C503 + C153914 * C519 +
            C23992 * C500 - C23993 * C482 - C23992 * C501 + C153933 * C518) *
               C153901 +
           (C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513 +
            C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
            C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515) *
               C47697 +
           (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
            C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
            C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
               C47696) *
              C153625 * C153537 * C153521 * C131 +
          ((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
            C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
            C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
               C47696 +
           (C23992 * C492 - C23993 * C478 - C23992 * C493 + C153933 * C514 +
            C23994 * C490 - C23995 * C477 - C23994 * C491 + C153914 * C513 +
            C23996 * C488 - C23997 * C476 - C23996 * C489 + C153885 * C512) *
               C47697 +
           (C23992 * C502 - C23993 * C483 - C23992 * C503 + C153933 * C519 +
            C23994 * C504 - C23995 * C484 - C23994 * C505 + C153914 * C520 +
            C23996 * C506 - C23997 * C485 - C23996 * C507 + C153885 * C521) *
               C153901) *
              C153625 * C153537 * C153521 * C132 -
          ((C23996 * C510 - C23997 * C487 - C23996 * C511 + C153885 * C523 +
            C23994 * C506 - C23995 * C485 - C23994 * C507 + C153914 * C521 +
            C23992 * C504 - C23993 * C484 - C23992 * C505 + C153933 * C520) *
               C153901 +
           (C23996 * C508 - C23997 * C486 - C23996 * C509 + C153885 * C522 +
            C23994 * C488 - C23995 * C476 - C23994 * C489 + C153914 * C512 +
            C23992 * C490 - C23993 * C477 - C23992 * C491 + C153933 * C513) *
               C47697 +
           (C23996 * C162 - C23997 * C149 - C23996 * C163 + C153885 * C173 +
            C23994 * C160 - C23995 * C148 - C23994 * C161 + C153914 * C172 +
            C23992 * C158 - C23993 * C147 - C23992 * C159 + C153933 * C171) *
               C47696) *
              C153625 * C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C47696 +
            (C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514) *
                C47697 +
            (C23992 * C498 - C23993 * C481 - C23992 * C499 + C153933 * C517 +
             C23994 * C500 - C23995 * C482 - C23994 * C501 + C153914 * C518 +
             C23996 * C502 - C23997 * C483 - C23996 * C503 + C153885 * C519) *
                C153901) *
               C153625 * C153537 * C298 -
           ((C26063 + C26062 + C26061) * C153901 +
            (C25410 + C25411 + C25412) * C47697 +
            (C24327 + C24326 + C24325) * C47696) *
               C153625 * C153537 * C299 +
           (C24345 * C47696 + (C25409 + C25408 + C25407) * C47697 +
            (C26064 + C26065 + C26066) * C153901) *
               C153625 * C153537 * C300) *
              C301 +
          (((C24334 + C24335 + C24336) * C47696 +
            (C25413 + C25414 + C25415) * C47697 +
            (C23992 * C1336 - C23993 * C1328 - C23992 * C1337 +
             C153933 * C1343 + C23994 * C1334 - C23995 * C1327 -
             C23994 * C1335 + C153914 * C1342 + C23996 * C1332 -
             C23997 * C1326 - C23996 * C1333 + C153885 * C1341) *
                C153901) *
               C153625 * C153537 * C299 -
           ((C23996 * C504 - C23997 * C484 - C23996 * C505 + C153885 * C520 +
             C23994 * C502 - C23995 * C483 - C23994 * C503 + C153914 * C519 +
             C23992 * C500 - C23993 * C482 - C23992 * C501 + C153933 * C518) *
                C153901 +
            (C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513 +
             C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
             C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515) *
                C47697 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C47696) *
               C153625 * C153537 * C298 -
           ((C23996 * C3289 - C23997 * C3282 - C23996 * C3290 +
             C153885 * C3294 + C23994 * C3287 - C23995 * C3281 -
             C23994 * C3288 + C153914 * C3293 + C23992 * C3285 -
             C23993 * C3280 - C23992 * C3286 + C153933 * C3292) *
                C153901 +
            (C25418 + C25417 + C25416) * C47697 + C24346 * C47696) *
               C153625 * C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C47696 +
            C31290 * C47697 + C31291 * C153901) *
               C153936 +
           (C28405 * C47696 + C29052 * C47697 + C29431 * C153901) * C153924 +
           (C28406 * C47696 + C29051 * C47697 + C29432 * C153901) * C153898) *
              C153537 * C153521 * C130 -
          ((C30998 * C153901 + C29054 * C47697 + C28411 * C47696) * C153898 +
           (C30997 * C153901 + C29053 * C47697 + C28410 * C47696) * C153924 +
           (C31296 * C153901 + C31295 * C47697 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C47696) *
               C153936) *
              C153537 * C153521 * C131 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C47696 +
            C31782 * C47697 + C31783 * C153901) *
               C153936 +
           (C28701 * C47696 + C31544 * C47697 + C31545 * C153901) * C153924 +
           (C28702 * C47696 + C31546 * C47697 + C31547 * C153901) * C153898) *
              C153537 * C153521 * C132 -
          (((C28212 * C3289 - C28213 * C3282 - C28212 * C3290 +
             C153462 * C3294) *
                C153901 +
            (C28212 * C1763 - C28213 * C1757 - C28212 * C1764 +
             C153462 * C1772) *
                C47697 +
            (C28212 * C331 - C28213 * C311 - C28212 * C332 + C153462 * C347) *
                C47696) *
               C153898 +
           ((C28212 * C1332 - C28213 * C1326 - C28212 * C1333 +
             C153462 * C1341) *
                C153901 +
            (C28212 * C957 - C28213 * C948 - C28212 * C958 + C153462 * C966) *
                C47697 +
            (C28212 * C317 - C28213 * C304 - C28212 * C318 + C153462 * C340) *
                C47696) *
               C153924 +
           ((C28212 * C504 - C28213 * C484 - C28212 * C505 + C153462 * C520) *
                C153901 +
            (C28212 * C490 - C28213 * C477 - C28212 * C491 + C153462 * C513) *
                C47697 +
            (C28212 * C158 - C28213 * C147 - C28212 * C159 + C153462 * C171) *
                C47696) *
               C153936) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C47696 +
             C31290 * C47697 + C31291 * C153901) *
                C153936 +
            (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
               C153537 * C298 -
           ((C52087 + C52088 + C52089) * C153898 +
            (C52086 + C52085 + C52084) * C153924 +
            (C52083 + C52082 + C52081) * C153936) *
               C153537 * C299 +
           (C52101 * C153936 + (C52089 + C52088 + C52087) * C153924 +
            (C28408 * C47696 + C29049 * C47697 + C29434 * C153901) * C153898) *
               C153537 * C300) *
              C301 +
          (((C52090 + C52091 + C52092) * C153936 +
            (C52093 + C52094 + C52095) * C153924 +
            (C52096 + C52097 + C52098) * C153898) *
               C153537 * C299 -
           (C52102 * C153898 + (C52092 + C52091 + C52090) * C153924 +
            (C31296 * C153901 + C31295 * C47697 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C47696) *
                C153936) *
               C153537 * C298 -
           (((C28212 * C28550 - C28213 * C28547 - C28212 * C28551 +
              C153462 * C28553) *
                 C153901 +
             C29056 * C47697 + C28413 * C47696) *
                C153898 +
            (C52098 + C52097 + C52096) * C153924 + C52102 * C153936) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
               C55778 +
           C31290 * C55779 + C31291 * C55780 + C31294 * C55781 +
           C34035 * C55782) *
              C153625 * C153537 * C153521 * C130 -
          ((C28212 * C7520 - C28213 * C7515 - C28212 * C7521 +
            C153462 * C7527) *
               C55782 +
           C31297 * C55781 + C31296 * C55780 + C31295 * C55779 +
           (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
               C55778) *
              C153625 * C153537 * C153521 * C131 +
          ((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
               C55778 +
           C31782 * C55779 + C31783 * C55780 +
           (C28212 * C2117 - C28213 * C2110 - C28212 * C2118 +
            C153462 * C2125) *
               C55781 +
           (C28212 * C7522 - C28213 * C7516 - C28212 * C7523 +
            C153462 * C7528) *
               C55782) *
              C153625 * C153537 * C153521 * C132 -
          ((C28212 * C7524 - C28213 * C7517 - C28212 * C7525 +
            C153462 * C7529) *
               C55782 +
           (C28212 * C2115 - C28213 * C2109 - C28212 * C2116 +
            C153462 * C2124) *
               C55781 +
           (C28212 * C504 - C28213 * C484 - C28212 * C505 + C153462 * C520) *
               C55780 +
           (C28212 * C490 - C28213 * C477 - C28212 * C491 + C153462 * C513) *
               C55779 +
           (C28212 * C158 - C28213 * C147 - C28212 * C159 + C153462 * C171) *
               C55778) *
              C153625 * C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C55778 +
            C31290 * C55779 + C31291 * C55780 + C31294 * C55781 +
            C34035 * C55782) *
               C153625 * C153537 * C298 -
           (C32703 * C55782 + C31293 * C55781 + C29431 * C55780 +
            C29052 * C55779 + C28405 * C55778) *
               C153625 * C153537 * C299 +
           (C28406 * C55778 + C29051 * C55779 + C29432 * C55780 +
            C31292 * C55781 + C32704 * C55782) *
               C153625 * C153537 * C300) *
              C301 +
          ((C28410 * C55778 + C29053 * C55779 + C30997 * C55780 +
            C31298 * C55781 +
            (C28212 * C9040 - C28213 * C9036 - C28212 * C9041 +
             C153462 * C9045) *
                C55782) *
               C153625 * C153537 * C299 -
           ((C28212 * C7520 - C28213 * C7515 - C28212 * C7521 +
             C153462 * C7527) *
                C55782 +
            C31297 * C55781 + C31296 * C55780 + C31295 * C55779 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C55778) *
               C153625 * C153537 * C298 -
           ((C28212 * C31225 - C28213 * C31222 - C28212 * C31226 +
             C153462 * C31228) *
                C55782 +
            C31299 * C55781 + C30998 * C55780 + C29054 * C55779 +
            C28411 * C55778) *
               C153625 * C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
                C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
                C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
                C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
                C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                   C153637 * C153625 * C153537 * C153919 -
               (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
                C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
                C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
                C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
                C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
                   C153637 * C153625 * C153537 * C153920 +
               (C134 * C325 - C135 * C308 - C134 * C326 + C121 * C344 +
                C136 * C327 - C137 * C309 - C136 * C328 + C122 * C345 +
                C138 * C329 - C139 * C310 - C138 * C330 + C123 * C346 +
                C140 * C331 - C141 * C311 - C140 * C332 + C124 * C347 +
                C142 * C333 - C143 * C312 - C142 * C334 + C125 * C348) *
                   C153637 * C153625 * C153537 * C1469) *
                  C153840 +
              ((C134 * C321 - C135 * C306 - C134 * C322 + C121 * C342 +
                C136 * C319 - C137 * C305 - C136 * C320 + C122 * C341 +
                C138 * C317 - C139 * C304 - C138 * C318 + C123 * C340 +
                C140 * C315 - C141 * C303 - C140 * C316 + C124 * C339 +
                C142 * C335 - C143 * C313 - C142 * C336 + C125 * C349) *
                   C153637 * C153625 * C153537 * C153920 -
               (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
                C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
                C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
                C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
                C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
                   C153637 * C153625 * C153537 * C153919 -
               (C142 * C337 - C143 * C314 - C142 * C338 + C125 * C350 +
                C140 * C333 - C141 * C312 - C140 * C334 + C124 * C348 +
                C138 * C331 - C139 * C311 - C138 * C332 + C123 * C347 +
                C136 * C329 - C137 * C310 - C136 * C330 + C122 * C346 +
                C134 * C327 - C135 * C309 - C134 * C328 + C121 * C345) *
                   C153637 * C153625 * C153537 * C1469) *
                  C153508) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
                 C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
                 C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                    C153637 * C153936 +
                (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
                   C153537 * C153919 -
               (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
                (C3040 + C3039 + C3038) * C153637 * C153936) *
                   C153537 * C153920 +
               (C3060 * C153936 + (C3046 + C3045 + C3044) * C153637 * C153924 +
                (C4561 + C4562 + C4563) * C153637 * C153898) *
                   C153537 * C1469) *
                  C153840 +
              (((C3047 + C3048 + C3049) * C153637 * C153936 +
                (C3050 + C3051 + C3052) * C153637 * C153924 +
                (C3053 + C3054 + C3055) * C153637 * C153898) *
                   C153537 * C153920 -
               (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
                (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
                 C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
                 C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                    C153637 * C153936) *
                   C153537 * C153919 -
               ((C2693 * C2923 - C2694 * C2916 - C2693 * C2924 +
                 C153885 * C2928 + C2691 * C2921 - C2692 * C2915 -
                 C2691 * C2922 + C2684 * C2927 + C2689 * C2919 - C2690 * C2914 -
                 C2689 * C2920 + C2683 * C2926) *
                    C153637 * C153898 +
                (C3055 + C3054 + C3053) * C153637 * C153924 + C3061 * C153936) *
                   C153537 * C1469) *
                  C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153937 +
            (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
               C153625 * C153537 * C153919 -
           (C9064 * C153901 + (C4155 + C4156 + C4157) * C153926 +
            (C3040 + C3039 + C3038) * C153937) *
               C153625 * C153537 * C153920 +
           (C3058 * C153937 + (C4154 + C4153 + C4152) * C153926 +
            (C4833 + C4834 + C4835) * C153901) *
               C153625 * C153537 * C1469) *
              C153840 +
          (((C3047 + C3048 + C3049) * C153937 +
            (C4158 + C4159 + C4160) * C153926 +
            (C8451 + C8452 + C8453) * C153901) *
               C153625 * C153537 * C153920 -
           (C7660 * C153901 + (C7650 + C7649 + C7648) * C153926 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153937) *
               C153625 * C153537 * C153919 -
           ((C2693 * C3289 - C2694 * C3282 - C2693 * C3290 + C153885 * C3294 +
             C2691 * C3287 - C2692 * C3281 - C2691 * C3288 + C2684 * C3293 +
             C2689 * C3285 - C2690 * C3280 - C2689 * C3286 + C2683 * C3292) *
                C153901 +
            (C4163 + C4162 + C4161) * C153926 + C3059 * C153937) *
               C153625 * C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153537 * C153919 -
           (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C153537 * C153920 +
           (C24347 * C23989 + (C24333 + C24332 + C24331) * C153637 * C23990 +
            (C25804 + C25805 + C25806) * C153637 * C153898) *
               C153537 * C1469) *
              C153840 +
          (((C24334 + C24335 + C24336) * C153637 * C23989 +
            (C24337 + C24338 + C24339) * C153637 * C23990 +
            (C24340 + C24341 + C24342) * C153637 * C153898) *
               C153537 * C153920 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C153537 * C153919 -
           ((C23996 * C2923 - C23997 * C2916 - C23996 * C2924 +
             C153885 * C2928 + C23994 * C2921 - C23995 * C2915 -
             C23994 * C2922 + C153914 * C2927 + C23992 * C2919 -
             C23993 * C2914 - C23992 * C2920 + C153933 * C2926) *
                C153637 * C153898 +
            (C24342 + C24341 + C24340) * C153637 * C23990 + C24348 * C23989) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153537 * C153919 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C153537 * C153920 +
           (C28416 * C28207 + C28417 * C28208 + C28418 * C28209 +
            C28419 * C28210 + C29280 * C28211) *
               C153537 * C1469) *
              C153840 +
          ((C28420 * C28207 + C28421 * C28208 + C28422 * C28209 +
            C28423 * C28210 + C28424 * C28211) *
               C153537 * C153920 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C153537 * C153919 -
           ((C28212 * C28340 - C28213 * C28337 - C28212 * C28341 +
             C153462 * C28343) *
                C153637 * C28211 +
            C28424 * C28210 + C28423 * C28209 + C28422 * C28208 +
            C28421 * C28207) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153937 +
             C31290 * C153926 + C31291 * C153901) *
                C23989 +
            (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
               C153537 * C153919 -
           (C32458 * C153898 + (C30966 + C30965 + C30964) * C23990 +
            (C30963 + C30962 + C30961) * C23989) *
               C153537 * C153920 +
           (C30993 * C23989 + (C30969 + C30968 + C30967) * C23990 +
            (C32455 + C32456 + C32457) * C153898) *
               C153537 * C1469) *
              C153840 +
          (((C30970 + C30971 + C31000) * C23989 +
            (C30976 + C30977 + C31001) * C23990 +
            (C30982 + C30983 + C31002) * C153898) *
               C153537 * C153920 -
           (C31003 * C153898 + (C31000 + C30971 + C30970) * C23990 +
            (C31296 * C153901 + C31295 * C153926 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153937) *
                C23989) *
               C153537 * C153919 -
           (((C28212 * C28550 - C28213 * C28547 - C28212 * C28551 +
              C153462 * C28553) *
                 C153901 +
             C29056 * C153926 + C28413 * C153937) *
                C153898 +
            (C31002 + C30983 + C30982) * C23990 + C31003 * C23989) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C47696 +
            (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
               C153625 * C153537 * C153919 -
           (C49653 * C153901 + (C25410 + C25411 + C25412) * C47697 +
            (C24327 + C24326 + C24325) * C47696) *
               C153625 * C153537 * C153920 +
           (C24345 * C47696 + (C25409 + C25408 + C25407) * C47697 +
            (C26064 + C26065 + C26066) * C153901) *
               C153625 * C153537 * C1469) *
              C153840 +
          (((C24334 + C24335 + C24336) * C47696 +
            (C25413 + C25414 + C25415) * C47697 +
            (C49052 + C49053 + C49054) * C153901) *
               C153625 * C153537 * C153920 -
           (C48265 * C153901 + (C48255 + C48254 + C48253) * C47697 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C47696) *
               C153625 * C153537 * C153919 -
           ((C23996 * C3289 - C23997 * C3282 - C23996 * C3290 +
             C153885 * C3294 + C23994 * C3287 - C23995 * C3281 -
             C23994 * C3288 + C153914 * C3293 + C23992 * C3285 -
             C23993 * C3280 - C23992 * C3286 + C153933 * C3292) *
                C153901 +
            (C25418 + C25417 + C25416) * C47697 + C24346 * C47696) *
               C153625 * C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C47696 +
             C31290 * C47697 + C31291 * C153901) *
                C153936 +
            (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
               C153537 * C153919 -
           (C53433 * C153898 + (C52086 + C52085 + C52084) * C153924 +
            (C52083 + C52082 + C52081) * C153936) *
               C153537 * C153920 +
           (C52101 * C153936 + (C52089 + C52088 + C52087) * C153924 +
            (C53430 + C53431 + C53432) * C153898) *
               C153537 * C1469) *
              C153840 +
          (((C52090 + C52091 + C52092) * C153936 +
            (C52093 + C52094 + C52095) * C153924 +
            (C52096 + C52097 + C52098) * C153898) *
               C153537 * C153920 -
           (C52102 * C153898 + (C52092 + C52091 + C52090) * C153924 +
            (C31296 * C153901 + C31295 * C47697 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C47696) *
                C153936) *
               C153537 * C153919 -
           (((C28212 * C28550 - C28213 * C28547 - C28212 * C28551 +
              C153462 * C28553) *
                 C153901 +
             C29056 * C47697 + C28413 * C47696) *
                C153898 +
            (C52098 + C52097 + C52096) * C153924 + C52102 * C153936) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C55778 +
            C31290 * C55779 + C31291 * C55780 + C31294 * C55781 +
            C34035 * C55782) *
               C153625 * C153537 * C153919 -
           (C32703 * C55782 + C31293 * C55781 + C29431 * C55780 +
            C29052 * C55779 + C28405 * C55778) *
               C153625 * C153537 * C153920 +
           (C28406 * C55778 + C29051 * C55779 + C29432 * C55780 +
            C31292 * C55781 + C32704 * C55782) *
               C153625 * C153537 * C1469) *
              C153840 +
          ((C28410 * C55778 + C29053 * C55779 + C30997 * C55780 +
            C31298 * C55781 + C56487 * C55782) *
               C153625 * C153537 * C153920 -
           (C56055 * C55782 + C31297 * C55781 + C31296 * C55780 +
            C31295 * C55779 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C55778) *
               C153625 * C153537 * C153919 -
           ((C28212 * C31225 - C28213 * C31222 - C28212 * C31226 +
             C153462 * C31228) *
                C55782 +
            C31299 * C55781 + C30998 * C55780 + C29054 * C55779 +
            C28411 * C55778) *
               C153625 * C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
                C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
                C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
                C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
                C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                   C153637 * C153625 * C153849 -
               (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
                C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
                C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
                C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
                C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
                   C153637 * C153625 * C153601) *
                  C153919 +
              ((C134 * C951 - C135 * C945 - C134 * C952 + C121 * C963 +
                C136 * C953 - C137 * C946 - C136 * C954 + C122 * C964 +
                C138 * C955 - C139 * C947 - C138 * C956 + C123 * C965 +
                C140 * C957 - C141 * C948 - C140 * C958 + C124 * C966 +
                C142 * C959 - C143 * C949 - C142 * C960 + C125 * C967) *
                   C153637 * C153625 * C153601 -
               (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
                C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
                C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
                C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
                C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
                   C153637 * C153625 * C153849) *
                  C153920 +
              ((C134 * C325 - C135 * C308 - C134 * C326 + C121 * C344 +
                C136 * C327 - C137 * C309 - C136 * C328 + C122 * C345 +
                C138 * C329 - C139 * C310 - C138 * C330 + C123 * C346 +
                C140 * C331 - C141 * C311 - C140 * C332 + C124 * C347 +
                C142 * C333 - C143 * C312 - C142 * C334 + C125 * C348) *
                   C153637 * C153625 * C153849 -
               (C142 * C1761 - C143 * C1756 - C142 * C1762 + C125 * C1771 +
                C140 * C1763 - C141 * C1757 - C140 * C1764 + C124 * C1772 +
                C138 * C1765 - C139 * C1758 - C138 * C1766 + C123 * C1773 +
                C136 * C1767 - C137 * C1759 - C136 * C1768 + C122 * C1774 +
                C134 * C1769 - C135 * C1760 - C134 * C1770 + C121 * C1775) *
                   C153637 * C153625 * C153601) *
                  C1469) *
             C153502 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
                 C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
                 C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                    C153637 * C153936 +
                (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
                   C153849 -
               (C5591 * C153898 + (C4155 + C4156 + C4157) * C153637 * C153924 +
                (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
                 C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
                 C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                    C153637 * C153936) *
                   C153601) *
                  C153919 +
              (((C4157 + C4156 + C4155) * C153637 * C153936 +
                (C4154 + C4153 + C4152) * C153637 * C153924 +
                (C5595 + C5596 + C5597) * C153637 * C153898) *
                   C153601 -
               (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
                (C3040 + C3039 + C3038) * C153637 * C153936) *
                   C153849) *
                  C153920 +
              ((C3060 * C153936 + (C3046 + C3045 + C3044) * C153637 * C153924 +
                (C4561 + C4562 + C4563) * C153637 * C153898) *
                   C153849 -
               ((C2693 * C5564 - C2694 * C5561 - C2693 * C5565 +
                 C153885 * C5570 + C2691 * C5566 - C2692 * C5562 -
                 C2691 * C5567 + C2684 * C5571 + C2689 * C5568 - C2690 * C5563 -
                 C2689 * C5569 + C2683 * C5572) *
                    C153637 * C153898 +
                (C5597 + C5596 + C5595) * C153637 * C153924 + C5591 * C153936) *
                   C153601) *
                  C1469) *
             C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153937 +
            (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
               C153625 * C153849 -
           ((C7645 + C7646 + C7647) * C153901 +
            (C7644 + C7643 + C7642) * C153926 +
            (C7641 + C7640 + C7639) * C153937) *
               C153625 * C153601) *
              C153919 +
          (((C4157 + C4156 + C4155) * C153937 +
            (C4830 + C4831 + C4832) * C153926 +
            (C9068 + C9069 + C9070) * C153901) *
               C153625 * C153601 -
           (C9064 * C153901 + (C4155 + C4156 + C4157) * C153926 +
            (C3040 + C3039 + C3038) * C153937) *
               C153625 * C153849) *
              C153920 +
          ((C3058 * C153937 + (C4154 + C4153 + C4152) * C153926 +
            (C4833 + C4834 + C4835) * C153901) *
               C153625 * C153849 -
           ((C2693 * C6185 - C2694 * C6179 - C2693 * C6186 + C153885 * C6197 +
             C2691 * C6187 - C2692 * C6180 - C2691 * C6188 + C2684 * C6198 +
             C2689 * C6189 - C2690 * C6181 - C2689 * C6190 + C2683 * C6199) *
                C153901 +
            (C4835 + C4834 + C4833) * C153926 + C5587 * C153937) *
               C153625 * C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153849 -
           (C26810 * C153898 + (C25410 + C25411 + C25412) * C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C153601) *
              C153919 +
          (((C25412 + C25411 + C25410) * C153637 * C23989 +
            (C25409 + C25408 + C25407) * C153637 * C23990 +
            (C26814 + C26815 + C26816) * C153637 * C153898) *
               C153601 -
           (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C153849) *
              C153920 +
          ((C24347 * C23989 + (C24333 + C24332 + C24331) * C153637 * C23990 +
            (C25804 + C25805 + C25806) * C153637 * C153898) *
               C153849 -
           ((C23996 * C5564 - C23997 * C5561 - C23996 * C5565 +
             C153885 * C5570 + C23994 * C5566 - C23995 * C5562 -
             C23994 * C5567 + C153914 * C5571 + C23992 * C5568 -
             C23993 * C5563 - C23992 * C5569 + C153933 * C5572) *
                C153637 * C153898 +
            (C26816 + C26815 + C26814) * C153637 * C23990 + C26810 * C23989) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153849 -
           (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
            C29060 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C153601) *
              C153919 +
          ((C29060 * C28207 + C29059 * C28208 + C29058 * C28209 +
            C29057 * C28210 + C29856 * C28211) *
               C153601 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C153849) *
              C153920 +
          ((C28416 * C28207 + C28417 * C28208 + C28418 * C28209 +
            C28419 * C28210 + C29280 * C28211) *
               C153849 -
           ((C28212 * C29845 - C28213 * C29844 - C28212 * C29846 +
             C153462 * C29847) *
                C153637 * C28211 +
            C29856 * C28210 + C29057 * C28209 + C29058 * C28208 +
            C29059 * C28207) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153937 +
             C31290 * C153926 + C31291 * C153901) *
                C23989 +
            (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
               C153849 -
           (C33438 * C153898 + (C32081 + C32082 + C32083) * C23990 +
            (C31294 * C153901 + C31291 * C153926 + C31290 * C153937) * C23989) *
               C153601) *
              C153919 +
          (((C32083 + C32082 + C32081) * C23989 +
            (C32080 + C32079 + C32078) * C23990 +
            (C33435 + C33436 + C33437) * C153898) *
               C153601 -
           (C32458 * C153898 + (C30966 + C30965 + C30964) * C23990 +
            (C30963 + C30962 + C30961) * C23989) *
               C153849) *
              C153920 +
          ((C30993 * C23989 + (C30969 + C30968 + C30967) * C23990 +
            (C32455 + C32456 + C32457) * C153898) *
               C153849 -
           (((C28212 * C30184 - C28213 * C30182 - C28212 * C30185 +
              C153462 * C30188) *
                 C153901 +
             C29434 * C153926 + C29049 * C153937) *
                C153898 +
            (C33437 + C33436 + C33435) * C23990 + C33438 * C23989) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C47696 +
            (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
               C153625 * C153849 -
           ((C48250 + C48251 + C48252) * C153901 +
            (C48249 + C48248 + C48247) * C47697 +
            (C48246 + C48245 + C48244) * C47696) *
               C153625 * C153601) *
              C153919 +
          (((C25412 + C25411 + C25410) * C47696 +
            (C26061 + C26062 + C26063) * C47697 +
            (C49657 + C49658 + C49659) * C153901) *
               C153625 * C153601 -
           (C49653 * C153901 + (C25410 + C25411 + C25412) * C47697 +
            (C24327 + C24326 + C24325) * C47696) *
               C153625 * C153849) *
              C153920 +
          ((C24345 * C47696 + (C25409 + C25408 + C25407) * C47697 +
            (C26064 + C26065 + C26066) * C153901) *
               C153625 * C153849 -
           ((C23996 * C6185 - C23997 * C6179 - C23996 * C6186 +
             C153885 * C6197 + C23994 * C6187 - C23995 * C6180 -
             C23994 * C6188 + C153914 * C6198 + C23992 * C6189 -
             C23993 * C6181 - C23992 * C6190 + C153933 * C6199) *
                C153901 +
            (C26066 + C26065 + C26064) * C47697 + C26806 * C47696) *
               C153625 * C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C47696 +
             C31290 * C47697 + C31291 * C153901) *
                C153936 +
            (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
               C153849 -
           (C54388 * C153898 + (C53056 + C53057 + C53058) * C153924 +
            (C31294 * C153901 + C31291 * C47697 + C31290 * C47696) * C153936) *
               C153601) *
              C153919 +
          (((C53058 + C53057 + C53056) * C153936 +
            (C53055 + C53054 + C53053) * C153924 +
            (C54385 + C54386 + C54387) * C153898) *
               C153601 -
           (C53433 * C153898 + (C52086 + C52085 + C52084) * C153924 +
            (C52083 + C52082 + C52081) * C153936) *
               C153849) *
              C153920 +
          ((C52101 * C153936 + (C52089 + C52088 + C52087) * C153924 +
            (C53430 + C53431 + C53432) * C153898) *
               C153849 -
           (((C28212 * C30184 - C28213 * C30182 - C28212 * C30185 +
              C153462 * C30188) *
                 C153901 +
             C29434 * C47697 + C29049 * C47696) *
                C153898 +
            (C54387 + C54386 + C54385) * C153924 + C54388 * C153936) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C55778 +
            C31290 * C55779 + C31291 * C55780 + C31294 * C55781 +
            C34035 * C55782) *
               C153625 * C153849 -
           (C56054 * C55782 + C34035 * C55781 + C31294 * C55780 +
            C31291 * C55779 + C31290 * C55778) *
               C153625 * C153601) *
              C153919 +
          ((C29052 * C55778 + C29431 * C55779 + C31293 * C55780 +
            C32703 * C55781 + C56824 * C55782) *
               C153625 * C153601 -
           (C32703 * C55782 + C31293 * C55781 + C29431 * C55780 +
            C29052 * C55779 + C28405 * C55778) *
               C153625 * C153849) *
              C153920 +
          ((C28406 * C55778 + C29051 * C55779 + C29432 * C55780 +
            C31292 * C55781 + C32704 * C55782) *
               C153625 * C153849 -
           ((C28212 * C34022 - C28213 * C34020 - C28212 * C34023 +
             C153462 * C34026) *
                C55782 +
            C32704 * C55781 + C31292 * C55780 + C29432 * C55779 +
            C29051 * C55778) *
               C153625 * C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
                C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
                C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
                C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
                C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                   C153637 * C153625 * C153537 * C1091 -
               (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
                C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
                C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
                C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
                C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
                   C153637 * C153625 * C153537 * C153573) *
                  C1093 +
              ((C134 * C321 - C135 * C306 - C134 * C322 + C121 * C342 +
                C136 * C319 - C137 * C305 - C136 * C320 + C122 * C341 +
                C138 * C317 - C139 * C304 - C138 * C318 + C123 * C340 +
                C140 * C315 - C141 * C303 - C140 * C316 + C124 * C339 +
                C142 * C335 - C143 * C313 - C142 * C336 + C125 * C349) *
                   C153637 * C153625 * C153537 * C153573 -
               (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
                C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
                C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
                C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
                C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
                   C153637 * C153625 * C153537 * C1091) *
                  C1094 +
              ((C134 * C156 - C135 * C146 - C134 * C157 + C121 * C170 +
                C136 * C158 - C137 * C147 - C136 * C159 + C122 * C171 +
                C138 * C160 - C139 * C148 - C138 * C161 + C123 * C172 +
                C140 * C162 - C141 * C149 - C140 * C163 + C124 * C173 +
                C142 * C164 - C143 * C150 - C142 * C165 + C125 * C174) *
                   C153637 * C153625 * C153537 * C1091 -
               (C142 * C652 - C143 * C651 - C142 * C653 + C125 * C654 +
                C140 * C335 - C141 * C313 - C140 * C336 + C124 * C349 +
                C138 * C315 - C139 * C303 - C138 * C316 + C123 * C339 +
                C136 * C317 - C137 * C304 - C136 * C318 + C122 * C340 +
                C134 * C319 - C135 * C305 - C134 * C320 + C121 * C341) *
                   C153637 * C153625 * C153537 * C153573) *
                  C1095) -
         0.25 * std::pow(Pi, 2.5) *
             ((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
               C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
               C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
               C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
               C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                  C153637 * C153625 * C153537 * C1178 -
              (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
               C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
               C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
               C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
               C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
                  C153637 * C153625 * C153537 * C1179 +
              (C134 * C325 - C135 * C308 - C134 * C326 + C121 * C344 +
               C136 * C327 - C137 * C309 - C136 * C328 + C122 * C345 +
               C138 * C329 - C139 * C310 - C138 * C330 + C123 * C346 +
               C140 * C331 - C141 * C311 - C140 * C332 + C124 * C347 +
               C142 * C333 - C143 * C312 - C142 * C334 + C125 * C348) *
                  C153637 * C153625 * C153537 * C1180 -
              (C142 * C1188 - C143 * C1183 - C142 * C1189 + C125 * C1198 +
               C140 * C1190 - C141 * C1184 - C140 * C1191 + C124 * C1199 +
               C138 * C1192 - C139 * C1185 - C138 * C1193 + C123 * C1200 +
               C136 * C1194 - C137 * C1186 - C136 * C1195 + C122 * C1201 +
               C134 * C1196 - C135 * C1187 - C134 * C1197 + C121 * C1202) *
                  C153637 * C153625 * C153537 * C1181) *
             C153502 +
         0.5 * std::pow(Pi, 2.5) *
             (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
                C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
                C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
                C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
                C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                   C153637 * C153625 * C473 -
               (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
                C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
                C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
                C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
                C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
                   C153637 * C153625 * C474 +
               (C134 * C498 - C135 * C481 - C134 * C499 + C121 * C517 +
                C136 * C500 - C137 * C482 - C136 * C501 + C122 * C518 +
                C138 * C502 - C139 * C483 - C138 * C503 + C123 * C519 +
                C140 * C504 - C141 * C484 - C140 * C505 + C124 * C520 +
                C142 * C506 - C143 * C485 - C142 * C507 + C125 * C521) *
                   C153637 * C153625 * C475) *
                  C1091 +
              ((C134 * C951 - C135 * C945 - C134 * C952 + C121 * C963 +
                C136 * C953 - C137 * C946 - C136 * C954 + C122 * C964 +
                C138 * C955 - C139 * C947 - C138 * C956 + C123 * C965 +
                C140 * C957 - C141 * C948 - C140 * C958 + C124 * C966 +
                C142 * C959 - C143 * C949 - C142 * C960 + C125 * C967) *
                   C153637 * C153625 * C474 -
               (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
                C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
                C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
                C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
                C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
                   C153637 * C153625 * C473 -
               (C142 * C1330 - C143 * C1325 - C142 * C1331 + C125 * C1340 +
                C140 * C1332 - C141 * C1326 - C140 * C1333 + C124 * C1341 +
                C138 * C1334 - C139 * C1327 - C138 * C1335 + C123 * C1342 +
                C136 * C1336 - C137 * C1328 - C136 * C1337 + C122 * C1343 +
                C134 * C1338 - C135 * C1329 - C134 * C1339 + C121 * C1344) *
                   C153637 * C153625 * C475) *
                  C153573) *
             C153502 -
         0.25 * std::pow(Pi, 2.5) *
             ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
                 C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
                 C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                    C153637 * C153936 +
                (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
                   C153537 * C1091 -
               ((C3044 + C3045 + C3046) * C153637 * C153898 +
                (C3043 + C3042 + C3041) * C153637 * C153924 +
                (C3040 + C3039 + C3038) * C153637 * C153936) *
                   C153537 * C153573) *
                  C1093 +
              (((C3047 + C3048 + C3049) * C153637 * C153936 +
                (C3050 + C3051 + C3052) * C153637 * C153924 +
                (C3053 + C3054 + C3055) * C153637 * C153898) *
                   C153537 * C153573 -
               (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
                (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
                 C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
                 C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                    C153637 * C153936) *
                   C153537 * C1091) *
                  C1094 +
              (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
                 C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
                 C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                    C153637 * C153936 +
                (C3550 + C3551 + C3552) * C153637 * C153924 +
                (C3553 + C3554 + C3555) * C153637 * C153898) *
                   C153537 * C1091 -
               ((C2693 * C1188 - C2694 * C1183 - C2693 * C1189 +
                 C153885 * C1198 + C2691 * C1190 - C2692 * C1184 -
                 C2691 * C1191 + C2684 * C1199 + C2689 * C1192 - C2690 * C1185 -
                 C2689 * C1193 + C2683 * C1200) *
                    C153637 * C153898 +
                (C3555 + C3554 + C3553) * C153637 * C153924 +
                (C3552 + C3551 + C3550) * C153637 * C153936) *
                   C153537 * C153573) *
                  C1095) -
         0.25 * std::pow(Pi, 2.5) *
             (((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
                C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
                C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                   C153637 * C153936 +
               (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
                  C153537 * C1178 -
              (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
               (C3040 + C3039 + C3038) * C153637 * C153936) *
                  C153537 * C1179 +
              (C3060 * C153936 + (C3046 + C3045 + C3044) * C153637 * C153924 +
               (C4561 + C4562 + C4563) * C153637 * C153898) *
                  C153537 * C1180 -
              ((C2693 * C4530 - C2694 * C4527 - C2693 * C4531 +
                C153885 * C4536 + C2691 * C4532 - C2692 * C4528 -
                C2691 * C4533 + C2684 * C4537 + C2689 * C4534 - C2690 * C4529 -
                C2689 * C4535 + C2683 * C4538) *
                   C153637 * C153898 +
               (C4563 + C4562 + C4561) * C153637 * C153924 + C4557 * C153936) *
                  C153537 * C1181) *
             C153502 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
                 C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
                 C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                    C153637 * C153936 +
                (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
                   C473 -
               ((C4152 + C4153 + C4154) * C153637 * C153898 +
                (C4155 + C4156 + C4157) * C153637 * C153924 +
                (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
                 C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
                 C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                    C153637 * C153936) *
                   C474 +
               ((C2689 * C498 - C2690 * C481 - C2689 * C499 + C2683 * C517 +
                 C2691 * C500 - C2692 * C482 - C2691 * C501 + C2684 * C518 +
                 C2693 * C502 - C2694 * C483 - C2693 * C503 + C153885 * C519) *
                    C153637 * C153936 +
                (C4830 + C4831 + C4832) * C153637 * C153924 +
                (C4833 + C4834 + C4835) * C153637 * C153898) *
                   C475) *
                  C1091 +
              (((C4157 + C4156 + C4155) * C153637 * C153936 +
                (C4154 + C4153 + C4152) * C153637 * C153924 +
                (C2689 * C4067 - C2690 * C4063 - C2689 * C4068 + C2683 * C4075 +
                 C2691 * C4069 - C2692 * C4064 - C2691 * C4070 + C2684 * C4076 +
                 C2693 * C4071 - C2694 * C4065 - C2693 * C4072 +
                 C153885 * C4077) *
                    C153637 * C153898) *
                   C474 -
               (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
                (C3040 + C3039 + C3038) * C153637 * C153936) *
                   C473 -
               ((C2693 * C4784 - C2694 * C4781 - C2693 * C4785 +
                 C153885 * C4790 + C2691 * C4786 - C2692 * C4782 -
                 C2691 * C4787 + C2684 * C4791 + C2689 * C4788 - C2690 * C4783 -
                 C2689 * C4789 + C2683 * C4792) *
                    C153637 * C153898 +
                (C4835 + C4834 + C4833) * C153637 * C153924 +
                (C4832 + C4831 + C4830) * C153637 * C153936) *
                   C475) *
                  C153573) *
             C153502 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
                 C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
                 C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                    C153937 +
                (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
                   C153625 * C153537 * C1091 -
               ((C4832 + C4831 + C4830) * C153901 +
                (C4155 + C4156 + C4157) * C153926 +
                (C3040 + C3039 + C3038) * C153937) *
                   C153625 * C153537 * C153573) *
                  C1093 +
              (((C3047 + C3048 + C3049) * C153937 +
                (C4158 + C4159 + C4160) * C153926 +
                (C8451 + C8452 + C8453) * C153901) *
                   C153625 * C153537 * C153573 -
               (C7660 * C153901 + (C7650 + C7649 + C7648) * C153926 +
                (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
                 C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
                 C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                    C153937) *
                   C153625 * C153537 * C1091) *
                  C1094 +
              (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
                 C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
                 C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                    C153937 +
                (C8133 + C8134 + C8135) * C153926 +
                (C8136 + C8137 + C8138) * C153901) *
                   C153625 * C153537 * C1091 -
               ((C2693 * C1330 - C2694 * C1325 - C2693 * C1331 +
                 C153885 * C1340 + C2691 * C1332 - C2692 * C1326 -
                 C2691 * C1333 + C2684 * C1341 + C2689 * C1334 - C2690 * C1327 -
                 C2689 * C1335 + C2683 * C1342) *
                    C153901 +
                (C2693 * C959 - C2694 * C949 - C2693 * C960 + C153885 * C967 +
                 C2691 * C957 - C2692 * C948 - C2691 * C958 + C2684 * C966 +
                 C2689 * C955 - C2690 * C947 - C2689 * C956 + C2683 * C965) *
                    C153926 +
                (C3552 + C3551 + C3550) * C153937) *
                   C153625 * C153537 * C153573) *
                  C1095) +
         0.5 * std::pow(Pi, 2.5) *
             (((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
                C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
                C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                   C153937 +
               (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
                  C153625 * C153537 * C1178 -
              ((C4832 + C4831 + C4830) * C153901 +
               (C4155 + C4156 + C4157) * C153926 +
               (C3040 + C3039 + C3038) * C153937) *
                  C153625 * C153537 * C1179 +
              (C3058 * C153937 + (C4154 + C4153 + C4152) * C153926 +
               (C4833 + C4834 + C4835) * C153901) *
                  C153625 * C153537 * C1180 -
              ((C2693 * C4784 - C2694 * C4781 - C2693 * C4785 +
                C153885 * C4790 + C2691 * C4786 - C2692 * C4782 -
                C2691 * C4787 + C2684 * C4791 + C2689 * C4788 - C2690 * C4783 -
                C2689 * C4789 + C2683 * C4792) *
                   C153901 +
               (C5597 + C5596 + C5595) * C153926 + C4553 * C153937) *
                  C153625 * C153537 * C1181) *
             C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153937 +
            (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
               C153625 * C473 -
           ((C7645 + C7646 + C7647) * C153901 +
            (C7644 + C7643 + C7642) * C153926 +
            (C7641 + C7640 + C7639) * C153937) *
               C153625 * C474 +
           (C7659 * C153937 + (C7647 + C7646 + C7645) * C153926 +
            (C2689 * C7518 - C2690 * C7514 - C2689 * C7519 + C2683 * C7526 +
             C2691 * C7520 - C2692 * C7515 - C2691 * C7521 + C2684 * C7527 +
             C2693 * C7522 - C2694 * C7516 - C2693 * C7523 + C153885 * C7528) *
                C153901) *
               C153625 * C475) *
              C1091 +
          (((C4157 + C4156 + C4155) * C153937 +
            (C4830 + C4831 + C4832) * C153926 +
            (C9068 + C9069 + C9070) * C153901) *
               C153625 * C474 -
           (C9064 * C153901 + (C4155 + C4156 + C4157) * C153926 +
            (C3040 + C3039 + C3038) * C153937) *
               C153625 * C473 -
           ((C2693 * C9038 - C2694 * C9035 - C2693 * C9039 + C153885 * C9044 +
             C2691 * C9040 - C2692 * C9036 - C2691 * C9041 + C2684 * C9045 +
             C2689 * C9042 - C2690 * C9037 - C2689 * C9043 + C2683 * C9046) *
                C153901 +
            (C9070 + C9069 + C9068) * C153926 + C9064 * C153937) *
               C153625 * C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153537 * C1091 -
           ((C24331 + C24332 + C24333) * C153637 * C153898 +
            (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C153537 * C153573) *
              C1093 +
          (((C24334 + C24335 + C24336) * C153637 * C23989 +
            (C24337 + C24338 + C24339) * C153637 * C23990 +
            (C24340 + C24341 + C24342) * C153637 * C153898) *
               C153537 * C153573 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C153537 * C1091) *
              C1094 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C153637 * C23989 +
            (C24821 + C24822 + C24823) * C153637 * C23990 +
            (C24824 + C24825 + C24826) * C153637 * C153898) *
               C153537 * C1091 -
           ((C23996 * C1188 - C23997 * C1183 - C23996 * C1189 +
             C153885 * C1198 + C23994 * C1190 - C23995 * C1184 -
             C23994 * C1191 + C153914 * C1199 + C23992 * C1192 -
             C23993 * C1185 - C23992 * C1193 + C153933 * C1200) *
                C153637 * C153898 +
            (C24826 + C24825 + C24824) * C153637 * C23990 +
            (C24823 + C24822 + C24821) * C153637 * C23989) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
            C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
            C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
               C153637 * C23989 +
           (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
              C153537 * C1178 -
          (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
           (C24327 + C24326 + C24325) * C153637 * C23989) *
              C153537 * C1179 +
          (C24347 * C23989 + (C24333 + C24332 + C24331) * C153637 * C23990 +
           (C25804 + C25805 + C25806) * C153637 * C153898) *
              C153537 * C1180 -
          ((C23996 * C4530 - C23997 * C4527 - C23996 * C4531 + C153885 * C4536 +
            C23994 * C4532 - C23995 * C4528 - C23994 * C4533 + C153914 * C4537 +
            C23992 * C4534 - C23993 * C4529 - C23992 * C4535 +
            C153933 * C4538) *
               C153637 * C153898 +
           (C25806 + C25805 + C25804) * C153637 * C23990 + C25800 * C23989) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C473 -
           ((C25407 + C25408 + C25409) * C153637 * C153898 +
            (C25410 + C25411 + C25412) * C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C474 +
           ((C23992 * C498 - C23993 * C481 - C23992 * C499 + C153933 * C517 +
             C23994 * C500 - C23995 * C482 - C23994 * C501 + C153914 * C518 +
             C23996 * C502 - C23997 * C483 - C23996 * C503 + C153885 * C519) *
                C153637 * C23989 +
            (C26061 + C26062 + C26063) * C153637 * C23990 +
            (C26064 + C26065 + C26066) * C153637 * C153898) *
               C475) *
              C1091 +
          (((C25412 + C25411 + C25410) * C153637 * C23989 +
            (C25409 + C25408 + C25407) * C153637 * C23990 +
            (C23992 * C4067 - C23993 * C4063 - C23992 * C4068 +
             C153933 * C4075 + C23994 * C4069 - C23995 * C4064 -
             C23994 * C4070 + C153914 * C4076 + C23996 * C4071 -
             C23997 * C4065 - C23996 * C4072 + C153885 * C4077) *
                C153637 * C153898) *
               C474 -
           (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C473 -
           ((C23996 * C4784 - C23997 * C4781 - C23996 * C4785 +
             C153885 * C4790 + C23994 * C4786 - C23995 * C4782 -
             C23994 * C4787 + C153914 * C4791 + C23992 * C4788 -
             C23993 * C4783 - C23992 * C4789 + C153933 * C4792) *
                C153637 * C153898 +
            (C26066 + C26065 + C26064) * C153637 * C23990 +
            (C26063 + C26062 + C26061) * C153637 * C23989) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153537 * C1091 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C153537 * C153573) *
              C1093 +
          ((C28420 * C28207 + C28421 * C28208 + C28422 * C28209 +
            C28423 * C28210 + C28424 * C28211) *
               C153537 * C153573 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C153537 * C1091) *
              C1094 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C153637 * C28207 +
            C28705 * C28208 + C28706 * C28209 + C28707 * C28210 +
            C28708 * C28211) *
               C153537 * C1091 -
           ((C28212 * C4530 - C28213 * C4527 - C28212 * C4531 +
             C153462 * C4536) *
                C153637 * C28211 +
            C28708 * C28210 + C28707 * C28209 + C28706 * C28208 +
            C28705 * C28207) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
               C153637 * C28207 +
           C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
           C28418 * C28211) *
              C153537 * C1178 -
          (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
           C28416 * C28208 + C28415 * C28207) *
              C153537 * C1179 +
          (C28416 * C28207 + C28417 * C28208 + C28418 * C28209 +
           C28419 * C28210 + C29280 * C28211) *
              C153537 * C1180 -
          ((C28212 * C29269 - C28213 * C29268 - C28212 * C29270 +
            C153462 * C29271) *
               C153637 * C28211 +
           C29280 * C28210 + C28419 * C28209 + C28418 * C28208 +
           C28417 * C28207) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C473 -
           (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
            C29060 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C474 +
           ((C28212 * C498 - C28213 * C481 - C28212 * C499 + C153462 * C517) *
                C153637 * C28207 +
            C29435 * C28208 + C29436 * C28209 + C29437 * C28210 +
            C29438 * C28211) *
               C475) *
              C1091 +
          ((C29060 * C28207 + C29059 * C28208 + C29058 * C28209 +
            C29057 * C28210 +
            (C28212 * C28994 - C28213 * C28992 - C28212 * C28995 +
             C153462 * C28998) *
                C153637 * C28211) *
               C474 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C473 -
           ((C28212 * C29403 - C28213 * C29402 - C28212 * C29404 +
             C153462 * C29405) *
                C153637 * C28211 +
            C29438 * C28210 + C29437 * C28209 + C29436 * C28208 +
            C29435 * C28207) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153937 +
             C31290 * C153926 + C31291 * C153901) *
                C23989 +
            (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
               C153537 * C1091 -
           ((C30967 + C30968 + C30969) * C153898 +
            (C30966 + C30965 + C30964) * C23990 +
            (C30963 + C30962 + C30961) * C23989) *
               C153537 * C153573) *
              C1093 +
          (((C30970 + C30971 + C31000) * C23989 +
            (C30976 + C30977 + C31001) * C23990 +
            (C30982 + C30983 + C31002) * C153898) *
               C153537 * C153573 -
           (C31003 * C153898 + (C31000 + C30971 + C30970) * C23990 +
            (C31296 * C153901 + C31295 * C153926 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153937) *
                C23989) *
               C153537 * C1091) *
              C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C153937 +
             C31782 * C153926 + C31783 * C153901) *
                C23989 +
            (C31518 + C31548 + C31549) * C23990 +
            (C31527 + C31550 + C31551) * C153898) *
               C153537 * C1091 -
           (((C28212 * C4784 - C28213 * C4781 - C28212 * C4785 +
              C153462 * C4790) *
                 C153901 +
             (C28212 * C4071 - C28213 * C4065 - C28212 * C4072 +
              C153462 * C4077) *
                 C153926 +
             C28703 * C153937) *
                C153898 +
            (C31551 + C31550 + C31527) * C23990 +
            (C31549 + C31548 + C31518) * C23989) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153937 +
            C31290 * C153926 + C31291 * C153901) *
               C23989 +
           (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
              C153537 * C1178 -
          (C32458 * C153898 + (C30966 + C30965 + C30964) * C23990 +
           (C30963 + C30962 + C30961) * C23989) *
              C153537 * C1179 +
          (C30993 * C23989 + (C30969 + C30968 + C30967) * C23990 +
           (C32455 + C32456 + C32457) * C153898) *
              C153537 * C1180 -
          (((C28212 * C29403 - C28213 * C29402 - C28212 * C29404 +
             C153462 * C29405) *
                C153901 +
            C29855 * C153926 + C28409 * C153937) *
               C153898 +
           (C32457 + C32456 + C32455) * C23990 + C32458 * C23989) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153937 +
             C31290 * C153926 + C31291 * C153901) *
                C23989 +
            (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
               C473 -
           ((C32078 + C32079 + C32080) * C153898 +
            (C32081 + C32082 + C32083) * C23990 +
            (C31294 * C153901 + C31291 * C153926 + C31290 * C153937) * C23989) *
               C474 +
           ((C31291 * C153937 + C31294 * C153926 +
             (C28212 * C7518 - C28213 * C7514 - C28212 * C7519 +
              C153462 * C7526) *
                 C153901) *
                C23989 +
            (C32681 + C32682 + C32706) * C23990 +
            (C32687 + C32688 + C32707) * C153898) *
               C475) *
              C1091 +
          (((C32083 + C32082 + C32081) * C23989 +
            (C32080 + C32079 + C32078) * C23990 +
            (C29050 * C153937 + C29433 * C153926 + C32705 * C153901) *
                C153898) *
               C474 -
           (C32458 * C153898 + (C30966 + C30965 + C30964) * C23990 +
            (C30963 + C30962 + C30961) * C23989) *
               C473 -
           (((C28212 * C32677 - C28213 * C32676 - C28212 * C32678 +
              C153462 * C32679) *
                 C153901 +
             C32705 * C153926 + C29433 * C153937) *
                C153898 +
            (C32707 + C32688 + C32687) * C23990 +
            (C32706 + C32682 + C32681) * C23989) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C47696 +
            (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
               C153625 * C153537 * C1091 -
           ((C26063 + C26062 + C26061) * C153901 +
            (C25410 + C25411 + C25412) * C47697 +
            (C24327 + C24326 + C24325) * C47696) *
               C153625 * C153537 * C153573) *
              C1093 +
          (((C24334 + C24335 + C24336) * C47696 +
            (C25413 + C25414 + C25415) * C47697 +
            (C49052 + C49053 + C49054) * C153901) *
               C153625 * C153537 * C153573 -
           (C48265 * C153901 + (C48255 + C48254 + C48253) * C47697 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C47696) *
               C153625 * C153537 * C1091) *
              C1094 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C47696 +
            (C48738 + C48739 + C48740) * C47697 +
            (C48741 + C48742 + C48743) * C153901) *
               C153625 * C153537 * C1091 -
           ((C23996 * C1330 - C23997 * C1325 - C23996 * C1331 +
             C153885 * C1340 + C23994 * C1332 - C23995 * C1326 -
             C23994 * C1333 + C153914 * C1341 + C23992 * C1334 -
             C23993 * C1327 - C23992 * C1335 + C153933 * C1342) *
                C153901 +
            (C23996 * C959 - C23997 * C949 - C23996 * C960 + C153885 * C967 +
             C23994 * C957 - C23995 * C948 - C23994 * C958 + C153914 * C966 +
             C23992 * C955 - C23993 * C947 - C23992 * C956 + C153933 * C965) *
                C47697 +
            (C24823 + C24822 + C24821) * C47696) *
               C153625 * C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
            C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
            C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
               C47696 +
           (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
              C153625 * C153537 * C1178 -
          ((C26063 + C26062 + C26061) * C153901 +
           (C25410 + C25411 + C25412) * C47697 +
           (C24327 + C24326 + C24325) * C47696) *
              C153625 * C153537 * C1179 +
          (C24345 * C47696 + (C25409 + C25408 + C25407) * C47697 +
           (C26064 + C26065 + C26066) * C153901) *
              C153625 * C153537 * C1180 -
          ((C23996 * C4784 - C23997 * C4781 - C23996 * C4785 + C153885 * C4790 +
            C23994 * C4786 - C23995 * C4782 - C23994 * C4787 + C153914 * C4791 +
            C23992 * C4788 - C23993 * C4783 - C23992 * C4789 +
            C153933 * C4792) *
               C153901 +
           (C26816 + C26815 + C26814) * C47697 + C25796 * C47696) *
              C153625 * C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C47696 +
            (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
               C153625 * C473 -
           ((C48250 + C48251 + C48252) * C153901 +
            (C48249 + C48248 + C48247) * C47697 +
            (C48246 + C48245 + C48244) * C47696) *
               C153625 * C474 +
           (C48264 * C47696 + (C48252 + C48251 + C48250) * C47697 +
            (C23992 * C7518 - C23993 * C7514 - C23992 * C7519 +
             C153933 * C7526 + C23994 * C7520 - C23995 * C7515 -
             C23994 * C7521 + C153914 * C7527 + C23996 * C7522 -
             C23997 * C7516 - C23996 * C7523 + C153885 * C7528) *
                C153901) *
               C153625 * C475) *
              C1091 +
          (((C25412 + C25411 + C25410) * C47696 +
            (C26061 + C26062 + C26063) * C47697 +
            (C49657 + C49658 + C49659) * C153901) *
               C153625 * C474 -
           (C49653 * C153901 + (C25410 + C25411 + C25412) * C47697 +
            (C24327 + C24326 + C24325) * C47696) *
               C153625 * C473 -
           ((C23996 * C9038 - C23997 * C9035 - C23996 * C9039 +
             C153885 * C9044 + C23994 * C9040 - C23995 * C9036 -
             C23994 * C9041 + C153914 * C9045 + C23992 * C9042 -
             C23993 * C9037 - C23992 * C9043 + C153933 * C9046) *
                C153901 +
            (C49659 + C49658 + C49657) * C47697 + C49653 * C47696) *
               C153625 * C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C47696 +
             C31290 * C47697 + C31291 * C153901) *
                C153936 +
            (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
               C153537 * C1091 -
           ((C52087 + C52088 + C52089) * C153898 +
            (C52086 + C52085 + C52084) * C153924 +
            (C52083 + C52082 + C52081) * C153936) *
               C153537 * C153573) *
              C1093 +
          (((C52090 + C52091 + C52092) * C153936 +
            (C52093 + C52094 + C52095) * C153924 +
            (C52096 + C52097 + C52098) * C153898) *
               C153537 * C153573 -
           (C52102 * C153898 + (C52092 + C52091 + C52090) * C153924 +
            (C31296 * C153901 + C31295 * C47697 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C47696) *
                C153936) *
               C153537 * C1091) *
              C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C47696 +
             C31782 * C47697 + C31783 * C153901) *
                C153936 +
            (C52539 + C52540 + C52541) * C153924 +
            (C52542 + C52543 + C52544) * C153898) *
               C153537 * C1091 -
           (((C28212 * C4784 - C28213 * C4781 - C28212 * C4785 +
              C153462 * C4790) *
                 C153901 +
             C44743 * C47697 + C28703 * C47696) *
                C153898 +
            (C52544 + C52543 + C52542) * C153924 +
            (C52541 + C52540 + C52539) * C153936) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C47696 +
            C31290 * C47697 + C31291 * C153901) *
               C153936 +
           (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
              C153537 * C1178 -
          (C53433 * C153898 + (C52086 + C52085 + C52084) * C153924 +
           (C52083 + C52082 + C52081) * C153936) *
              C153537 * C1179 +
          (C52101 * C153936 + (C52089 + C52088 + C52087) * C153924 +
           (C53430 + C53431 + C53432) * C153898) *
              C153537 * C1180 -
          (((C28212 * C29403 - C28213 * C29402 - C28212 * C29404 +
             C153462 * C29405) *
                C153901 +
            C29855 * C47697 + C28409 * C47696) *
               C153898 +
           (C53432 + C53431 + C53430) * C153924 + C53433 * C153936) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C47696 +
             C31290 * C47697 + C31291 * C153901) *
                C153936 +
            (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
               C473 -
           ((C53053 + C53054 + C53055) * C153898 +
            (C53056 + C53057 + C53058) * C153924 +
            (C31294 * C153901 + C31291 * C47697 + C31290 * C47696) * C153936) *
               C474 +
           ((C31291 * C47696 + C31294 * C47697 + C34035 * C153901) * C153936 +
            (C53652 + C53653 + C53654) * C153924 +
            (C53655 + C53656 + C53657) * C153898) *
               C475) *
              C1091 +
          (((C53058 + C53057 + C53056) * C153936 +
            (C53055 + C53054 + C53053) * C153924 +
            (C29050 * C47696 + C29433 * C47697 + C32705 * C153901) * C153898) *
               C474 -
           (C53433 * C153898 + (C52086 + C52085 + C52084) * C153924 +
            (C52083 + C52082 + C52081) * C153936) *
               C473 -
           (((C28212 * C32677 - C28213 * C32676 - C28212 * C32678 +
              C153462 * C32679) *
                 C153901 +
             C32705 * C47697 + C29433 * C47696) *
                C153898 +
            (C53657 + C53656 + C53655) * C153924 +
            (C53654 + C53653 + C53652) * C153936) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C55778 +
            C31290 * C55779 + C31291 * C55780 + C31294 * C55781 +
            C34035 * C55782) *
               C153625 * C153537 * C1091 -
           (C32703 * C55782 + C31293 * C55781 + C29431 * C55780 +
            C29052 * C55779 + C28405 * C55778) *
               C153625 * C153537 * C153573) *
              C1093 +
          ((C28410 * C55778 + C29053 * C55779 + C30997 * C55780 +
            C31298 * C55781 + C56487 * C55782) *
               C153625 * C153537 * C153573 -
           (C56055 * C55782 + C31297 * C55781 + C31296 * C55780 +
            C31295 * C55779 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C55778) *
               C153625 * C153537 * C1091) *
              C1094 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C55778 +
            C31782 * C55779 + C31783 * C55780 + C56313 * C55781 +
            C56314 * C55782) *
               C153625 * C153537 * C1091 -
           ((C28212 * C9038 - C28213 * C9035 - C28212 * C9039 +
             C153462 * C9044) *
                C55782 +
            (C28212 * C6191 - C28213 * C6182 - C28212 * C6192 +
             C153462 * C6200) *
                C55781 +
            C31545 * C55780 + C31544 * C55779 + C28701 * C55778) *
               C153625 * C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
               C55778 +
           C31290 * C55779 + C31291 * C55780 + C31294 * C55781 +
           C34035 * C55782) *
              C153625 * C153537 * C1178 -
          (C32703 * C55782 + C31293 * C55781 + C29431 * C55780 +
           C29052 * C55779 + C28405 * C55778) *
              C153625 * C153537 * C1179 +
          (C28406 * C55778 + C29051 * C55779 + C29432 * C55780 +
           C31292 * C55781 + C32704 * C55782) *
              C153625 * C153537 * C1180 -
          ((C28212 * C32677 - C28213 * C32676 - C28212 * C32678 +
            C153462 * C32679) *
               C55782 +
           C32705 * C55781 + C29433 * C55780 + C29050 * C55779 +
           C28407 * C55778) *
              C153625 * C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C55778 +
            C31290 * C55779 + C31291 * C55780 + C31294 * C55781 +
            C34035 * C55782) *
               C153625 * C473 -
           (C56054 * C55782 + C34035 * C55781 + C31294 * C55780 +
            C31291 * C55779 + C31290 * C55778) *
               C153625 * C474 +
           (C31291 * C55778 + C31294 * C55779 + C34035 * C55780 +
            C56054 * C55781 +
            (C28212 * C56029 - C28213 * C56027 - C28212 * C56030 +
             C153462 * C56033) *
                C55782) *
               C153625 * C475) *
              C1091 +
          ((C29052 * C55778 + C29431 * C55779 + C31293 * C55780 +
            C32703 * C55781 + C56824 * C55782) *
               C153625 * C474 -
           (C32703 * C55782 + C31293 * C55781 + C29431 * C55780 +
            C29052 * C55779 + C28405 * C55778) *
               C153625 * C473 -
           ((C28212 * C56814 - C28213 * C56813 - C28212 * C56815 +
             C153462 * C56816) *
                C55782 +
            C56824 * C55781 + C32703 * C55780 + C31293 * C55779 +
            C29431 * C55778) *
               C153625 * C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
                 C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
                 C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
                 C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
                 C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                    C153637 * C153625 * C153849 -
                (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
                 C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
                 C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
                 C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
                 C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
                    C153637 * C153625 * C153601) *
                   C1091 +
               ((C134 * C951 - C135 * C945 - C134 * C952 + C121 * C963 +
                 C136 * C953 - C137 * C946 - C136 * C954 + C122 * C964 +
                 C138 * C955 - C139 * C947 - C138 * C956 + C123 * C965 +
                 C140 * C957 - C141 * C948 - C140 * C958 + C124 * C966 +
                 C142 * C959 - C143 * C949 - C142 * C960 + C125 * C967) *
                    C153637 * C153625 * C153601 -
                (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
                 C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
                 C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
                 C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
                 C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
                    C153637 * C153625 * C153849) *
                   C153573) *
                  C153840 +
              (((C134 * C494 - C135 * C479 - C134 * C495 + C121 * C515 +
                 C136 * C492 - C137 * C478 - C136 * C493 + C122 * C514 +
                 C138 * C490 - C139 * C477 - C138 * C491 + C123 * C513 +
                 C140 * C488 - C141 * C476 - C140 * C489 + C124 * C512 +
                 C142 * C508 - C143 * C486 - C142 * C509 + C125 * C522) *
                    C153637 * C153625 * C153601 -
                (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
                 C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
                 C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
                 C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
                 C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
                    C153637 * C153625 * C153849) *
                   C1091 +
               ((C134 * C321 - C135 * C306 - C134 * C322 + C121 * C342 +
                 C136 * C319 - C137 * C305 - C136 * C320 + C122 * C341 +
                 C138 * C317 - C139 * C304 - C138 * C318 + C123 * C340 +
                 C140 * C315 - C141 * C303 - C140 * C316 + C124 * C339 +
                 C142 * C335 - C143 * C313 - C142 * C336 + C125 * C349) *
                    C153637 * C153625 * C153849 -
                (C142 * C961 - C143 * C950 - C142 * C962 + C125 * C968 +
                 C140 * C959 - C141 * C949 - C140 * C960 + C124 * C967 +
                 C138 * C957 - C139 * C948 - C138 * C958 + C123 * C966 +
                 C136 * C955 - C137 * C947 - C136 * C956 + C122 * C965 +
                 C134 * C953 - C135 * C946 - C134 * C954 + C121 * C964) *
                    C153637 * C153625 * C153601) *
                   C153573) *
                  C153508) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
                  C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
                  C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                     C153637 * C153936 +
                 (C3038 + C3039 + C3040) * C153637 * C153924 +
                 C3060 * C153898) *
                    C153849 -
                ((C4152 + C4153 + C4154) * C153637 * C153898 +
                 (C4155 + C4156 + C4157) * C153637 * C153924 +
                 (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
                  C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
                  C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                     C153637 * C153936) *
                    C153601) *
                   C1091 +
               (((C4157 + C4156 + C4155) * C153637 * C153936 +
                 (C4154 + C4153 + C4152) * C153637 * C153924 +
                 (C2689 * C4067 - C2690 * C4063 - C2689 * C4068 +
                  C2683 * C4075 + C2691 * C4069 - C2692 * C4064 -
                  C2691 * C4070 + C2684 * C4076 + C2693 * C4071 -
                  C2694 * C4065 - C2693 * C4072 + C153885 * C4077) *
                     C153637 * C153898) *
                    C153601 -
                (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
                 (C3040 + C3039 + C3038) * C153637 * C153936) *
                    C153849) *
                   C153573) *
                  C153840 +
              ((((C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515 +
                  C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
                  C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513) *
                     C153637 * C153936 +
                 (C4158 + C4159 + C4160) * C153637 * C153924 +
                 (C4161 + C4162 + C4163) * C153637 * C153898) *
                    C153601 -
                (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
                 (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
                  C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
                  C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                     C153637 * C153936) *
                    C153849) *
                   C1091 +
               (((C3047 + C3048 + C3049) * C153637 * C153936 +
                 (C3050 + C3051 + C3052) * C153637 * C153924 +
                 (C3053 + C3054 + C3055) * C153637 * C153898) *
                    C153849 -
                ((C2693 * C4073 - C2694 * C4066 - C2693 * C4074 +
                  C153885 * C4078 + C2691 * C4071 - C2692 * C4065 -
                  C2691 * C4072 + C2684 * C4077 + C2689 * C4069 -
                  C2690 * C4064 - C2689 * C4070 + C2683 * C4076) *
                     C153637 * C153898 +
                 (C4163 + C4162 + C4161) * C153637 * C153924 +
                 (C4160 + C4159 + C4158) * C153637 * C153936) *
                    C153601) *
                   C153573) *
                  C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153937 +
             (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
                C153625 * C153849 -
            ((C7645 + C7646 + C7647) * C153901 +
             (C7644 + C7643 + C7642) * C153926 +
             (C7641 + C7640 + C7639) * C153937) *
                C153625 * C153601) *
               C1091 +
           (((C4157 + C4156 + C4155) * C153937 +
             (C4830 + C4831 + C4832) * C153926 +
             (C9068 + C9069 + C9070) * C153901) *
                C153625 * C153601 -
            (C9064 * C153901 + (C4155 + C4156 + C4157) * C153926 +
             (C3040 + C3039 + C3038) * C153937) *
                C153625 * C153849) *
               C153573) *
              C153840 +
          ((((C7648 + C7649 + C7650) * C153937 +
             (C7651 + C7652 + C7653) * C153926 +
             (C7654 + C7655 + C7656) * C153901) *
                C153625 * C153601 -
            (C7660 * C153901 + (C7650 + C7649 + C7648) * C153926 +
             (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
              C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
              C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                 C153937) *
                C153625 * C153849) *
               C1091 +
           (((C3047 + C3048 + C3049) * C153937 +
             (C4158 + C4159 + C4160) * C153926 +
             (C8451 + C8452 + C8453) * C153901) *
                C153625 * C153849 -
            ((C2693 * C8429 - C2694 * C8428 - C2693 * C8430 + C153885 * C8431 +
              C2691 * C6191 - C2692 * C6182 - C2691 * C6192 + C2684 * C6200 +
              C2689 * C6193 - C2690 * C6183 - C2689 * C6194 + C2683 * C6201) *
                 C153901 +
             (C8453 + C8452 + C8451) * C153926 +
             (C4160 + C4159 + C4158) * C153937) *
                C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C153637 * C23989 +
             (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
                C153849 -
            ((C25407 + C25408 + C25409) * C153637 * C153898 +
             (C25410 + C25411 + C25412) * C153637 * C23990 +
             (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
              C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
              C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                 C153637 * C23989) *
                C153601) *
               C1091 +
           (((C25412 + C25411 + C25410) * C153637 * C23989 +
             (C25409 + C25408 + C25407) * C153637 * C23990 +
             (C23992 * C4067 - C23993 * C4063 - C23992 * C4068 +
              C153933 * C4075 + C23994 * C4069 - C23995 * C4064 -
              C23994 * C4070 + C153914 * C4076 + C23996 * C4071 -
              C23997 * C4065 - C23996 * C4072 + C153885 * C4077) *
                 C153637 * C153898) *
                C153601 -
            (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
             (C24327 + C24326 + C24325) * C153637 * C23989) *
                C153849) *
               C153573) *
              C153840 +
          ((((C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515 +
              C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
              C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513) *
                 C153637 * C23989 +
             (C25413 + C25414 + C25415) * C153637 * C23990 +
             (C25416 + C25417 + C25418) * C153637 * C153898) *
                C153601 -
            (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C153637 * C23989) *
                C153849) *
               C1091 +
           (((C24334 + C24335 + C24336) * C153637 * C23989 +
             (C24337 + C24338 + C24339) * C153637 * C23990 +
             (C24340 + C24341 + C24342) * C153637 * C153898) *
                C153849 -
            ((C23996 * C4073 - C23997 * C4066 - C23996 * C4074 +
              C153885 * C4078 + C23994 * C4071 - C23995 * C4065 -
              C23994 * C4072 + C153914 * C4077 + C23992 * C4069 -
              C23993 * C4064 - C23992 * C4070 + C153933 * C4076) *
                 C153637 * C153898 +
             (C25418 + C25417 + C25416) * C153637 * C23990 +
             (C25415 + C25414 + C25413) * C153637 * C23989) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153637 * C28207 +
             C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
             C28418 * C28211) *
                C153849 -
            (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
             C29060 * C28208 +
             (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                 C153637 * C28207) *
                C153601) *
               C1091 +
           ((C29060 * C28207 + C29059 * C28208 + C29058 * C28209 +
             C29057 * C28210 +
             (C28212 * C28994 - C28213 * C28992 - C28212 * C28995 +
              C153462 * C28998) *
                 C153637 * C28211) *
                C153601 -
            (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
             C28416 * C28208 + C28415 * C28207) *
                C153849) *
               C153573) *
              C153840 +
          ((((C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                 C153637 * C28207 +
             C29061 * C28208 + C29062 * C28209 + C29063 * C28210 +
             C29064 * C28211) *
                C153601 -
            (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
             C28420 * C28208 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153637 * C28207) *
                C153849) *
               C1091 +
           ((C28420 * C28207 + C28421 * C28208 + C28422 * C28209 +
             C28423 * C28210 + C28424 * C28211) *
                C153849 -
            ((C28212 * C28996 - C28213 * C28993 - C28212 * C28997 +
              C153462 * C28999) *
                 C153637 * C28211 +
             C29064 * C28210 + C29063 * C28209 + C29062 * C28208 +
             C29061 * C28207) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                  C153937 +
              C31290 * C153926 + C31291 * C153901) *
                 C23989 +
             (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
                C153849 -
            ((C32078 + C32079 + C32080) * C153898 +
             (C32081 + C32082 + C32083) * C23990 +
             (C31294 * C153901 + C31291 * C153926 + C31290 * C153937) *
                 C23989) *
                C153601) *
               C1091 +
           (((C32083 + C32082 + C32081) * C23989 +
             (C32080 + C32079 + C32078) * C23990 +
             (C29050 * C153937 + C29433 * C153926 + C32705 * C153901) *
                 C153898) *
                C153601 -
            (C32458 * C153898 + (C30966 + C30965 + C30964) * C23990 +
             (C30963 + C30962 + C30961) * C23989) *
                C153849) *
               C153573) *
              C153840 +
          ((((C31295 * C153937 + C31296 * C153926 + C31297 * C153901) * C23989 +
             (C32084 + C32085 + C32086) * C23990 +
             (C32087 + C32088 + C32089) * C153898) *
                C153601 -
            (C31003 * C153898 + (C31000 + C30971 + C30970) * C23990 +
             (C31296 * C153901 + C31295 * C153926 +
              (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                  C153937) *
                 C23989) *
                C153849) *
               C1091 +
           (((C30970 + C30971 + C31000) * C23989 +
             (C30976 + C30977 + C31001) * C23990 +
             (C30982 + C30983 + C31002) * C153898) *
                C153849 -
            (((C28212 * C32074 - C28213 * C32073 - C28212 * C32075 +
               C153462 * C32076) *
                  C153901 +
              C30999 * C153926 + C29055 * C153937) *
                 C153898 +
             (C32089 + C32088 + C32087) * C23990 +
             (C32086 + C32085 + C32084) * C23989) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C47696 +
             (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
                C153625 * C153849 -
            ((C48250 + C48251 + C48252) * C153901 +
             (C48249 + C48248 + C48247) * C47697 +
             (C48246 + C48245 + C48244) * C47696) *
                C153625 * C153601) *
               C1091 +
           (((C25412 + C25411 + C25410) * C47696 +
             (C26061 + C26062 + C26063) * C47697 +
             (C49657 + C49658 + C49659) * C153901) *
                C153625 * C153601 -
            (C49653 * C153901 + (C25410 + C25411 + C25412) * C47697 +
             (C24327 + C24326 + C24325) * C47696) *
                C153625 * C153849) *
               C153573) *
              C153840 +
          ((((C48253 + C48254 + C48255) * C47696 +
             (C48256 + C48257 + C48258) * C47697 +
             (C48259 + C48260 + C48261) * C153901) *
                C153625 * C153601 -
            (C48265 * C153901 + (C48255 + C48254 + C48253) * C47697 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C47696) *
                C153625 * C153849) *
               C1091 +
           (((C24334 + C24335 + C24336) * C47696 +
             (C25413 + C25414 + C25415) * C47697 +
             (C49052 + C49053 + C49054) * C153901) *
                C153625 * C153849 -
            ((C23996 * C8429 - C23997 * C8428 - C23996 * C8430 +
              C153885 * C8431 + C23994 * C6191 - C23995 * C6182 -
              C23994 * C6192 + C153914 * C6200 + C23992 * C6193 -
              C23993 * C6183 - C23992 * C6194 + C153933 * C6201) *
                 C153901 +
             (C49054 + C49053 + C49052) * C47697 +
             (C25415 + C25414 + C25413) * C47696) *
                C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                  C47696 +
              C31290 * C47697 + C31291 * C153901) *
                 C153936 +
             (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
                C153849 -
            ((C53053 + C53054 + C53055) * C153898 +
             (C53056 + C53057 + C53058) * C153924 +
             (C31294 * C153901 + C31291 * C47697 + C31290 * C47696) * C153936) *
                C153601) *
               C1091 +
           (((C53058 + C53057 + C53056) * C153936 +
             (C53055 + C53054 + C53053) * C153924 +
             (C29050 * C47696 + C29433 * C47697 + C32705 * C153901) * C153898) *
                C153601 -
            (C53433 * C153898 + (C52086 + C52085 + C52084) * C153924 +
             (C52083 + C52082 + C52081) * C153936) *
                C153849) *
               C153573) *
              C153840 +
          ((((C31295 * C47696 + C31296 * C47697 + C31297 * C153901) * C153936 +
             (C53059 + C53060 + C53061) * C153924 +
             (C53062 + C53063 + C53064) * C153898) *
                C153601 -
            (C52102 * C153898 + (C52092 + C52091 + C52090) * C153924 +
             (C31296 * C153901 + C31295 * C47697 +
              (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                  C47696) *
                 C153936) *
                C153849) *
               C1091 +
           (((C52090 + C52091 + C52092) * C153936 +
             (C52093 + C52094 + C52095) * C153924 +
             (C52096 + C52097 + C52098) * C153898) *
                C153849 -
            (((C28212 * C32074 - C28213 * C32073 - C28212 * C32075 +
               C153462 * C32076) *
                  C153901 +
              C30999 * C47697 + C29055 * C47696) *
                 C153898 +
             (C53064 + C53063 + C53062) * C153924 +
             (C53061 + C53060 + C53059) * C153936) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C55778 +
             C31290 * C55779 + C31291 * C55780 + C31294 * C55781 +
             C34035 * C55782) *
                C153625 * C153849 -
            (C56054 * C55782 + C34035 * C55781 + C31294 * C55780 +
             C31291 * C55779 + C31290 * C55778) *
                C153625 * C153601) *
               C1091 +
           ((C29052 * C55778 + C29431 * C55779 + C31293 * C55780 +
             C32703 * C55781 + C56824 * C55782) *
                C153625 * C153601 -
            (C32703 * C55782 + C31293 * C55781 + C29431 * C55780 +
             C29052 * C55779 + C28405 * C55778) *
                C153625 * C153849) *
               C153573) *
              C153840 +
          (((C31295 * C55778 + C31296 * C55779 + C31297 * C55780 +
             C56055 * C55781 + C56056 * C55782) *
                C153625 * C153601 -
            (C56055 * C55782 + C31297 * C55781 + C31296 * C55780 +
             C31295 * C55779 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C55778) *
                C153625 * C153849) *
               C1091 +
           ((C28410 * C55778 + C29053 * C55779 + C30997 * C55780 +
             C31298 * C55781 + C56487 * C55782) *
                C153625 * C153849 -
            ((C28212 * C56477 - C28213 * C56476 - C28212 * C56478 +
              C153462 * C56479) *
                 C55782 +
             C56487 * C55781 + C31298 * C55780 + C30997 * C55779 +
             C29053 * C55778) *
                C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C153537 * C1091 -
           (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
            C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
            C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
            C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
            C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
               C153637 * C153625 * C153537 * C153573) *
              C1093 +
          ((C134 * C321 - C135 * C306 - C134 * C322 + C121 * C342 +
            C136 * C319 - C137 * C305 - C136 * C320 + C122 * C341 +
            C138 * C317 - C139 * C304 - C138 * C318 + C123 * C340 +
            C140 * C315 - C141 * C303 - C140 * C316 + C124 * C339 +
            C142 * C335 - C143 * C313 - C142 * C336 + C125 * C349) *
               C153637 * C153625 * C153537 * C153573 -
           (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
            C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
            C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
            C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
            C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
               C153637 * C153625 * C153537 * C1091) *
              C1094 +
          ((C134 * C156 - C135 * C146 - C134 * C157 + C121 * C170 +
            C136 * C158 - C137 * C147 - C136 * C159 + C122 * C171 +
            C138 * C160 - C139 * C148 - C138 * C161 + C123 * C172 +
            C140 * C162 - C141 * C149 - C140 * C163 + C124 * C173 +
            C142 * C164 - C143 * C150 - C142 * C165 + C125 * C174) *
               C153637 * C153625 * C153537 * C1091 -
           (C142 * C652 - C143 * C651 - C142 * C653 + C125 * C654 +
            C140 * C335 - C141 * C313 - C140 * C336 + C124 * C349 +
            C138 * C315 - C139 * C303 - C138 * C316 + C123 * C339 +
            C136 * C317 - C137 * C304 - C136 * C318 + C122 * C340 +
            C134 * C319 - C135 * C305 - C134 * C320 + C121 * C341) *
               C153637 * C153625 * C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 + C136 * C154 -
           C137 * C145 - C136 * C155 + C122 * C169 + C138 * C156 - C139 * C146 -
           C138 * C157 + C123 * C170 + C140 * C158 - C141 * C147 - C140 * C159 +
           C124 * C171 + C142 * C160 - C143 * C148 - C142 * C161 +
           C125 * C172) *
              C153637 * C153625 * C153537 * C1178 -
          (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 + C140 * C317 -
           C141 * C304 - C140 * C318 + C124 * C340 + C138 * C319 - C139 * C305 -
           C138 * C320 + C123 * C341 + C136 * C321 - C137 * C306 - C136 * C322 +
           C122 * C342 + C134 * C323 - C135 * C307 - C134 * C324 +
           C121 * C343) *
              C153637 * C153625 * C153537 * C1179 +
          (C134 * C325 - C135 * C308 - C134 * C326 + C121 * C344 + C136 * C327 -
           C137 * C309 - C136 * C328 + C122 * C345 + C138 * C329 - C139 * C310 -
           C138 * C330 + C123 * C346 + C140 * C331 - C141 * C311 - C140 * C332 +
           C124 * C347 + C142 * C333 - C143 * C312 - C142 * C334 +
           C125 * C348) *
              C153637 * C153625 * C153537 * C1180 -
          (C142 * C1188 - C143 * C1183 - C142 * C1189 + C125 * C1198 +
           C140 * C1190 - C141 * C1184 - C140 * C1191 + C124 * C1199 +
           C138 * C1192 - C139 * C1185 - C138 * C1193 + C123 * C1200 +
           C136 * C1194 - C137 * C1186 - C136 * C1195 + C122 * C1201 +
           C134 * C1196 - C135 * C1187 - C134 * C1197 + C121 * C1202) *
              C153637 * C153625 * C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C153537 * C1091 -
           ((C3044 + C3045 + C3046) * C153637 * C153898 +
            (C3043 + C3042 + C3041) * C153637 * C153924 +
            (C3040 + C3039 + C3038) * C153637 * C153936) *
               C153537 * C153573) *
              C1093 +
          (((C3047 + C3048 + C3049) * C153637 * C153936 +
            (C3050 + C3051 + C3052) * C153637 * C153924 +
            (C3053 + C3054 + C3055) * C153637 * C153898) *
               C153537 * C153573 -
           (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153637 * C153936) *
               C153537 * C1091) *
              C1094 +
          (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
             C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
             C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                C153637 * C153936 +
            (C3550 + C3551 + C3552) * C153637 * C153924 +
            (C3553 + C3554 + C3555) * C153637 * C153898) *
               C153537 * C1091 -
           ((C2693 * C1188 - C2694 * C1183 - C2693 * C1189 + C153885 * C1198 +
             C2691 * C1190 - C2692 * C1184 - C2691 * C1191 + C2684 * C1199 +
             C2689 * C1192 - C2690 * C1185 - C2689 * C1193 + C2683 * C1200) *
                C153637 * C153898 +
            (C3555 + C3554 + C3553) * C153637 * C153924 +
            (C3552 + C3551 + C3550) * C153637 * C153936) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
            C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
            C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
               C153637 * C153936 +
           (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
              C153537 * C1178 -
          (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
           (C3040 + C3039 + C3038) * C153637 * C153936) *
              C153537 * C1179 +
          (C3060 * C153936 + (C3046 + C3045 + C3044) * C153637 * C153924 +
           (C4561 + C4562 + C4563) * C153637 * C153898) *
              C153537 * C1180 -
          ((C2693 * C4530 - C2694 * C4527 - C2693 * C4531 + C153885 * C4536 +
            C2691 * C4532 - C2692 * C4528 - C2691 * C4533 + C2684 * C4537 +
            C2689 * C4534 - C2690 * C4529 - C2689 * C4535 + C2683 * C4538) *
               C153637 * C153898 +
           (C4563 + C4562 + C4561) * C153637 * C153924 + C4557 * C153936) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153937 +
            (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
               C153625 * C153537 * C1091 -
           ((C4832 + C4831 + C4830) * C153901 +
            (C4155 + C4156 + C4157) * C153926 +
            (C3040 + C3039 + C3038) * C153937) *
               C153625 * C153537 * C153573) *
              C1093 +
          (((C3047 + C3048 + C3049) * C153937 +
            (C4158 + C4159 + C4160) * C153926 +
            (C8451 + C8452 + C8453) * C153901) *
               C153625 * C153537 * C153573 -
           (C7660 * C153901 + (C7650 + C7649 + C7648) * C153926 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153937) *
               C153625 * C153537 * C1091) *
              C1094 +
          (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
             C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
             C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                C153937 +
            (C8133 + C8134 + C8135) * C153926 +
            (C8136 + C8137 + C8138) * C153901) *
               C153625 * C153537 * C1091 -
           ((C2693 * C1330 - C2694 * C1325 - C2693 * C1331 + C153885 * C1340 +
             C2691 * C1332 - C2692 * C1326 - C2691 * C1333 + C2684 * C1341 +
             C2689 * C1334 - C2690 * C1327 - C2689 * C1335 + C2683 * C1342) *
                C153901 +
            (C2693 * C959 - C2694 * C949 - C2693 * C960 + C153885 * C967 +
             C2691 * C957 - C2692 * C948 - C2691 * C958 + C2684 * C966 +
             C2689 * C955 - C2690 * C947 - C2689 * C956 + C2683 * C965) *
                C153926 +
            (C3552 + C3551 + C3550) * C153937) *
               C153625 * C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
            C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
            C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
               C153937 +
           (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
              C153625 * C153537 * C1178 -
          ((C4832 + C4831 + C4830) * C153901 +
           (C4155 + C4156 + C4157) * C153926 +
           (C3040 + C3039 + C3038) * C153937) *
              C153625 * C153537 * C1179 +
          (C3058 * C153937 + (C4154 + C4153 + C4152) * C153926 +
           (C4833 + C4834 + C4835) * C153901) *
              C153625 * C153537 * C1180 -
          ((C2693 * C4784 - C2694 * C4781 - C2693 * C4785 + C153885 * C4790 +
            C2691 * C4786 - C2692 * C4782 - C2691 * C4787 + C2684 * C4791 +
            C2689 * C4788 - C2690 * C4783 - C2689 * C4789 + C2683 * C4792) *
               C153901 +
           (C5597 + C5596 + C5595) * C153926 + C4553 * C153937) *
              C153625 * C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153537 * C1091 -
           ((C24331 + C24332 + C24333) * C153637 * C153898 +
            (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C153537 * C153573) *
              C1093 +
          (((C24334 + C24335 + C24336) * C153637 * C23989 +
            (C24337 + C24338 + C24339) * C153637 * C23990 +
            (C24340 + C24341 + C24342) * C153637 * C153898) *
               C153537 * C153573 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C153537 * C1091) *
              C1094 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C153637 * C23989 +
            (C24821 + C24822 + C24823) * C153637 * C23990 +
            (C24824 + C24825 + C24826) * C153637 * C153898) *
               C153537 * C1091 -
           ((C23996 * C1188 - C23997 * C1183 - C23996 * C1189 +
             C153885 * C1198 + C23994 * C1190 - C23995 * C1184 -
             C23994 * C1191 + C153914 * C1199 + C23992 * C1192 -
             C23993 * C1185 - C23992 * C1193 + C153933 * C1200) *
                C153637 * C153898 +
            (C24826 + C24825 + C24824) * C153637 * C23990 +
            (C24823 + C24822 + C24821) * C153637 * C23989) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
            C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
            C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
               C153637 * C23989 +
           (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
              C153537 * C1178 -
          (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
           (C24327 + C24326 + C24325) * C153637 * C23989) *
              C153537 * C1179 +
          (C24347 * C23989 + (C24333 + C24332 + C24331) * C153637 * C23990 +
           (C25804 + C25805 + C25806) * C153637 * C153898) *
              C153537 * C1180 -
          ((C23996 * C4530 - C23997 * C4527 - C23996 * C4531 + C153885 * C4536 +
            C23994 * C4532 - C23995 * C4528 - C23994 * C4533 + C153914 * C4537 +
            C23992 * C4534 - C23993 * C4529 - C23992 * C4535 +
            C153933 * C4538) *
               C153637 * C153898 +
           (C25806 + C25805 + C25804) * C153637 * C23990 + C25800 * C23989) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153537 * C1091 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C153537 * C153573) *
              C1093 +
          ((C28420 * C28207 + C28421 * C28208 + C28422 * C28209 +
            C28423 * C28210 + C28424 * C28211) *
               C153537 * C153573 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C153537 * C1091) *
              C1094 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C153637 * C28207 +
            C28705 * C28208 + C28706 * C28209 + C28707 * C28210 +
            C28708 * C28211) *
               C153537 * C1091 -
           ((C28212 * C4530 - C28213 * C4527 - C28212 * C4531 +
             C153462 * C4536) *
                C153637 * C28211 +
            C28708 * C28210 + C28707 * C28209 + C28706 * C28208 +
            C28705 * C28207) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
               C153637 * C28207 +
           C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
           C28418 * C28211) *
              C153537 * C1178 -
          (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
           C28416 * C28208 + C28415 * C28207) *
              C153537 * C1179 +
          (C28416 * C28207 + C28417 * C28208 + C28418 * C28209 +
           C28419 * C28210 + C29280 * C28211) *
              C153537 * C1180 -
          ((C28212 * C29269 - C28213 * C29268 - C28212 * C29270 +
            C153462 * C29271) *
               C153637 * C28211 +
           C29280 * C28210 + C28419 * C28209 + C28418 * C28208 +
           C28417 * C28207) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153937 +
             C31290 * C153926 + C31291 * C153901) *
                C23989 +
            (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
               C153537 * C1091 -
           ((C30967 + C30968 + C30969) * C153898 +
            (C30966 + C30965 + C30964) * C23990 +
            (C30963 + C30962 + C30961) * C23989) *
               C153537 * C153573) *
              C1093 +
          (((C30970 + C30971 + C31000) * C23989 +
            (C30976 + C30977 + C31001) * C23990 +
            (C30982 + C30983 + C31002) * C153898) *
               C153537 * C153573 -
           (C31003 * C153898 + (C31000 + C30971 + C30970) * C23990 +
            (C31296 * C153901 + C31295 * C153926 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153937) *
                C23989) *
               C153537 * C1091) *
              C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C153937 +
             C31782 * C153926 + C31783 * C153901) *
                C23989 +
            (C31518 + C31548 + C31549) * C23990 +
            (C31527 + C31550 + C31551) * C153898) *
               C153537 * C1091 -
           (((C28212 * C4784 - C28213 * C4781 - C28212 * C4785 +
              C153462 * C4790) *
                 C153901 +
             (C28212 * C4071 - C28213 * C4065 - C28212 * C4072 +
              C153462 * C4077) *
                 C153926 +
             C28703 * C153937) *
                C153898 +
            (C31551 + C31550 + C31527) * C23990 +
            (C31549 + C31548 + C31518) * C23989) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153937 +
            C31290 * C153926 + C31291 * C153901) *
               C23989 +
           (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
              C153537 * C1178 -
          (C32458 * C153898 + (C30966 + C30965 + C30964) * C23990 +
           (C30963 + C30962 + C30961) * C23989) *
              C153537 * C1179 +
          (C30993 * C23989 + (C30969 + C30968 + C30967) * C23990 +
           (C32455 + C32456 + C32457) * C153898) *
              C153537 * C1180 -
          (((C28212 * C29403 - C28213 * C29402 - C28212 * C29404 +
             C153462 * C29405) *
                C153901 +
            C29855 * C153926 + C28409 * C153937) *
               C153898 +
           (C32457 + C32456 + C32455) * C23990 + C32458 * C23989) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C47696 +
            (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
               C153625 * C153537 * C1091 -
           ((C26063 + C26062 + C26061) * C153901 +
            (C25410 + C25411 + C25412) * C47697 +
            (C24327 + C24326 + C24325) * C47696) *
               C153625 * C153537 * C153573) *
              C1093 +
          (((C24334 + C24335 + C24336) * C47696 +
            (C25413 + C25414 + C25415) * C47697 +
            (C49052 + C49053 + C49054) * C153901) *
               C153625 * C153537 * C153573 -
           (C48265 * C153901 + (C48255 + C48254 + C48253) * C47697 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C47696) *
               C153625 * C153537 * C1091) *
              C1094 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C47696 +
            (C48738 + C48739 + C48740) * C47697 +
            (C48741 + C48742 + C48743) * C153901) *
               C153625 * C153537 * C1091 -
           ((C23996 * C1330 - C23997 * C1325 - C23996 * C1331 +
             C153885 * C1340 + C23994 * C1332 - C23995 * C1326 -
             C23994 * C1333 + C153914 * C1341 + C23992 * C1334 -
             C23993 * C1327 - C23992 * C1335 + C153933 * C1342) *
                C153901 +
            (C23996 * C959 - C23997 * C949 - C23996 * C960 + C153885 * C967 +
             C23994 * C957 - C23995 * C948 - C23994 * C958 + C153914 * C966 +
             C23992 * C955 - C23993 * C947 - C23992 * C956 + C153933 * C965) *
                C47697 +
            (C24823 + C24822 + C24821) * C47696) *
               C153625 * C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
            C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
            C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
               C47696 +
           (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
              C153625 * C153537 * C1178 -
          ((C26063 + C26062 + C26061) * C153901 +
           (C25410 + C25411 + C25412) * C47697 +
           (C24327 + C24326 + C24325) * C47696) *
              C153625 * C153537 * C1179 +
          (C24345 * C47696 + (C25409 + C25408 + C25407) * C47697 +
           (C26064 + C26065 + C26066) * C153901) *
              C153625 * C153537 * C1180 -
          ((C23996 * C4784 - C23997 * C4781 - C23996 * C4785 + C153885 * C4790 +
            C23994 * C4786 - C23995 * C4782 - C23994 * C4787 + C153914 * C4791 +
            C23992 * C4788 - C23993 * C4783 - C23992 * C4789 +
            C153933 * C4792) *
               C153901 +
           (C26816 + C26815 + C26814) * C47697 + C25796 * C47696) *
              C153625 * C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C47696 +
             C31290 * C47697 + C31291 * C153901) *
                C153936 +
            (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
               C153537 * C1091 -
           ((C52087 + C52088 + C52089) * C153898 +
            (C52086 + C52085 + C52084) * C153924 +
            (C52083 + C52082 + C52081) * C153936) *
               C153537 * C153573) *
              C1093 +
          (((C52090 + C52091 + C52092) * C153936 +
            (C52093 + C52094 + C52095) * C153924 +
            (C52096 + C52097 + C52098) * C153898) *
               C153537 * C153573 -
           (C52102 * C153898 + (C52092 + C52091 + C52090) * C153924 +
            (C31296 * C153901 + C31295 * C47697 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C47696) *
                C153936) *
               C153537 * C1091) *
              C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C47696 +
             C31782 * C47697 + C31783 * C153901) *
                C153936 +
            (C52539 + C52540 + C52541) * C153924 +
            (C52542 + C52543 + C52544) * C153898) *
               C153537 * C1091 -
           (((C28212 * C4784 - C28213 * C4781 - C28212 * C4785 +
              C153462 * C4790) *
                 C153901 +
             C44743 * C47697 + C28703 * C47696) *
                C153898 +
            (C52544 + C52543 + C52542) * C153924 +
            (C52541 + C52540 + C52539) * C153936) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C47696 +
            C31290 * C47697 + C31291 * C153901) *
               C153936 +
           (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
              C153537 * C1178 -
          (C53433 * C153898 + (C52086 + C52085 + C52084) * C153924 +
           (C52083 + C52082 + C52081) * C153936) *
              C153537 * C1179 +
          (C52101 * C153936 + (C52089 + C52088 + C52087) * C153924 +
           (C53430 + C53431 + C53432) * C153898) *
              C153537 * C1180 -
          (((C28212 * C29403 - C28213 * C29402 - C28212 * C29404 +
             C153462 * C29405) *
                C153901 +
            C29855 * C47697 + C28409 * C47696) *
               C153898 +
           (C53432 + C53431 + C53430) * C153924 + C53433 * C153936) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C55778 +
            C31290 * C55779 + C31291 * C55780 + C31294 * C55781 +
            C34035 * C55782) *
               C153625 * C153537 * C1091 -
           (C32703 * C55782 + C31293 * C55781 + C29431 * C55780 +
            C29052 * C55779 + C28405 * C55778) *
               C153625 * C153537 * C153573) *
              C1093 +
          ((C28410 * C55778 + C29053 * C55779 + C30997 * C55780 +
            C31298 * C55781 + C56487 * C55782) *
               C153625 * C153537 * C153573 -
           (C56055 * C55782 + C31297 * C55781 + C31296 * C55780 +
            C31295 * C55779 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C55778) *
               C153625 * C153537 * C1091) *
              C1094 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C55778 +
            C31782 * C55779 + C31783 * C55780 + C56313 * C55781 +
            C56314 * C55782) *
               C153625 * C153537 * C1091 -
           ((C28212 * C9038 - C28213 * C9035 - C28212 * C9039 +
             C153462 * C9044) *
                C55782 +
            (C28212 * C6191 - C28213 * C6182 - C28212 * C6192 +
             C153462 * C6200) *
                C55781 +
            C31545 * C55780 + C31544 * C55779 + C28701 * C55778) *
               C153625 * C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
               C55778 +
           C31290 * C55779 + C31291 * C55780 + C31294 * C55781 +
           C34035 * C55782) *
              C153625 * C153537 * C1178 -
          (C32703 * C55782 + C31293 * C55781 + C29431 * C55780 +
           C29052 * C55779 + C28405 * C55778) *
              C153625 * C153537 * C1179 +
          (C28406 * C55778 + C29051 * C55779 + C29432 * C55780 +
           C31292 * C55781 + C32704 * C55782) *
              C153625 * C153537 * C1180 -
          ((C28212 * C32677 - C28213 * C32676 - C28212 * C32678 +
            C153462 * C32679) *
               C55782 +
           C32705 * C55781 + C29433 * C55780 + C29050 * C55779 +
           C28407 * C55778) *
              C153625 * C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
                 C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
                 C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
                 C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
                 C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                    C153637 * C153625 * C1898 -
                (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
                 C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
                 C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
                 C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
                 C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
                    C153637 * C153625 * C153601) *
                   C153848 +
               ((C134 * C951 - C135 * C945 - C134 * C952 + C121 * C963 +
                 C136 * C953 - C137 * C946 - C136 * C954 + C122 * C964 +
                 C138 * C955 - C139 * C947 - C138 * C956 + C123 * C965 +
                 C140 * C957 - C141 * C948 - C140 * C958 + C124 * C966 +
                 C142 * C959 - C143 * C949 - C142 * C960 + C125 * C967) *
                    C153637 * C153625 * C153601 -
                (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
                 C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
                 C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
                 C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
                 C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
                    C153637 * C153625 * C1898) *
                   C153573) *
                  C153840 +
              (((C134 * C494 - C135 * C479 - C134 * C495 + C121 * C515 +
                 C136 * C492 - C137 * C478 - C136 * C493 + C122 * C514 +
                 C138 * C490 - C139 * C477 - C138 * C491 + C123 * C513 +
                 C140 * C488 - C141 * C476 - C140 * C489 + C124 * C512 +
                 C142 * C508 - C143 * C486 - C142 * C509 + C125 * C522) *
                    C153637 * C153625 * C153601 -
                (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
                 C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
                 C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
                 C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
                 C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
                    C153637 * C153625 * C1898) *
                   C153848 +
               ((C134 * C321 - C135 * C306 - C134 * C322 + C121 * C342 +
                 C136 * C319 - C137 * C305 - C136 * C320 + C122 * C341 +
                 C138 * C317 - C139 * C304 - C138 * C318 + C123 * C340 +
                 C140 * C315 - C141 * C303 - C140 * C316 + C124 * C339 +
                 C142 * C335 - C143 * C313 - C142 * C336 + C125 * C349) *
                    C153637 * C153625 * C1898 -
                (C142 * C961 - C143 * C950 - C142 * C962 + C125 * C968 +
                 C140 * C959 - C141 * C949 - C140 * C960 + C124 * C967 +
                 C138 * C957 - C139 * C948 - C138 * C958 + C123 * C966 +
                 C136 * C955 - C137 * C947 - C136 * C956 + C122 * C965 +
                 C134 * C953 - C135 * C946 - C134 * C954 + C121 * C964) *
                    C153637 * C153625 * C153601) *
                   C153573) *
                  C153508) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
                  C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
                  C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                     C153637 * C153936 +
                 (C3038 + C3039 + C3040) * C153637 * C153924 +
                 C3060 * C153898) *
                    C1898 -
                (C5591 * C153898 + (C4155 + C4156 + C4157) * C153637 * C153924 +
                 (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
                  C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
                  C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                     C153637 * C153936) *
                    C153601) *
                   C153848 +
               (((C4157 + C4156 + C4155) * C153637 * C153936 +
                 (C4154 + C4153 + C4152) * C153637 * C153924 +
                 (C5595 + C5596 + C5597) * C153637 * C153898) *
                    C153601 -
                (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
                 (C3040 + C3039 + C3038) * C153637 * C153936) *
                    C1898) *
                   C153573) *
                  C153840 +
              ((((C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515 +
                  C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
                  C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513) *
                     C153637 * C153936 +
                 (C4158 + C4159 + C4160) * C153637 * C153924 +
                 (C4161 + C4162 + C4163) * C153637 * C153898) *
                    C153601 -
                (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
                 (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
                  C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
                  C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                     C153637 * C153936) *
                    C1898) *
                   C153848 +
               (((C3047 + C3048 + C3049) * C153637 * C153936 +
                 (C3050 + C3051 + C3052) * C153637 * C153924 +
                 (C3053 + C3054 + C3055) * C153637 * C153898) *
                    C1898 -
                ((C2693 * C4073 - C2694 * C4066 - C2693 * C4074 +
                  C153885 * C4078 + C2691 * C4071 - C2692 * C4065 -
                  C2691 * C4072 + C2684 * C4077 + C2689 * C4069 -
                  C2690 * C4064 - C2689 * C4070 + C2683 * C4076) *
                     C153637 * C153898 +
                 (C4163 + C4162 + C4161) * C153637 * C153924 +
                 (C4160 + C4159 + C4158) * C153637 * C153936) *
                    C153601) *
                   C153573) *
                  C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153937 +
             (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
                C153625 * C1898 -
            (C10404 * C153901 + (C7644 + C7643 + C7642) * C153926 +
             (C7641 + C7640 + C7639) * C153937) *
                C153625 * C153601) *
               C153848 +
           (((C4157 + C4156 + C4155) * C153937 +
             (C4830 + C4831 + C4832) * C153926 +
             (C9068 + C9069 + C9070) * C153901) *
                C153625 * C153601 -
            (C9064 * C153901 + (C4155 + C4156 + C4157) * C153926 +
             (C3040 + C3039 + C3038) * C153937) *
                C153625 * C1898) *
               C153573) *
              C153840 +
          ((((C7648 + C7649 + C7650) * C153937 +
             (C7651 + C7652 + C7653) * C153926 +
             (C7654 + C7655 + C7656) * C153901) *
                C153625 * C153601 -
            (C7660 * C153901 + (C7650 + C7649 + C7648) * C153926 +
             (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
              C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
              C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                 C153937) *
                C153625 * C1898) *
               C153848 +
           (((C3047 + C3048 + C3049) * C153937 +
             (C4158 + C4159 + C4160) * C153926 +
             (C8451 + C8452 + C8453) * C153901) *
                C153625 * C1898 -
            ((C2693 * C8429 - C2694 * C8428 - C2693 * C8430 + C153885 * C8431 +
              C2691 * C6191 - C2692 * C6182 - C2691 * C6192 + C2684 * C6200 +
              C2689 * C6193 - C2690 * C6183 - C2689 * C6194 + C2683 * C6201) *
                 C153901 +
             (C8453 + C8452 + C8451) * C153926 +
             (C4160 + C4159 + C4158) * C153937) *
                C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C153637 * C23989 +
             (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
                C1898 -
            (C26810 * C153898 + (C25410 + C25411 + C25412) * C153637 * C23990 +
             (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
              C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
              C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                 C153637 * C23989) *
                C153601) *
               C153848 +
           (((C25412 + C25411 + C25410) * C153637 * C23989 +
             (C25409 + C25408 + C25407) * C153637 * C23990 +
             (C26814 + C26815 + C26816) * C153637 * C153898) *
                C153601 -
            (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
             (C24327 + C24326 + C24325) * C153637 * C23989) *
                C1898) *
               C153573) *
              C153840 +
          ((((C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515 +
              C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
              C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513) *
                 C153637 * C23989 +
             (C25413 + C25414 + C25415) * C153637 * C23990 +
             (C25416 + C25417 + C25418) * C153637 * C153898) *
                C153601 -
            (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C153637 * C23989) *
                C1898) *
               C153848 +
           (((C24334 + C24335 + C24336) * C153637 * C23989 +
             (C24337 + C24338 + C24339) * C153637 * C23990 +
             (C24340 + C24341 + C24342) * C153637 * C153898) *
                C1898 -
            ((C23996 * C4073 - C23997 * C4066 - C23996 * C4074 +
              C153885 * C4078 + C23994 * C4071 - C23995 * C4065 -
              C23994 * C4072 + C153914 * C4077 + C23992 * C4069 -
              C23993 * C4064 - C23992 * C4070 + C153933 * C4076) *
                 C153637 * C153898 +
             (C25418 + C25417 + C25416) * C153637 * C23990 +
             (C25415 + C25414 + C25413) * C153637 * C23989) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153637 * C28207 +
             C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
             C28418 * C28211) *
                C1898 -
            (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
             C29060 * C28208 +
             (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                 C153637 * C28207) *
                C153601) *
               C153848 +
           ((C29060 * C28207 + C29059 * C28208 + C29058 * C28209 +
             C29057 * C28210 + C29856 * C28211) *
                C153601 -
            (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
             C28416 * C28208 + C28415 * C28207) *
                C1898) *
               C153573) *
              C153840 +
          ((((C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                 C153637 * C28207 +
             C29061 * C28208 + C29062 * C28209 + C29063 * C28210 +
             C29064 * C28211) *
                C153601 -
            (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
             C28420 * C28208 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153637 * C28207) *
                C1898) *
               C153848 +
           ((C28420 * C28207 + C28421 * C28208 + C28422 * C28209 +
             C28423 * C28210 + C28424 * C28211) *
                C1898 -
            ((C28212 * C28996 - C28213 * C28993 - C28212 * C28997 +
              C153462 * C28999) *
                 C153637 * C28211 +
             C29064 * C28210 + C29063 * C28209 + C29062 * C28208 +
             C29061 * C28207) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                  C153937 +
              C31290 * C153926 + C31291 * C153901) *
                 C23989 +
             (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
                C1898 -
            (C33438 * C153898 + (C32081 + C32082 + C32083) * C23990 +
             (C31294 * C153901 + C31291 * C153926 + C31290 * C153937) *
                 C23989) *
                C153601) *
               C153848 +
           (((C32083 + C32082 + C32081) * C23989 +
             (C32080 + C32079 + C32078) * C23990 +
             (C33435 + C33436 + C33437) * C153898) *
                C153601 -
            (C32458 * C153898 + (C30966 + C30965 + C30964) * C23990 +
             (C30963 + C30962 + C30961) * C23989) *
                C1898) *
               C153573) *
              C153840 +
          ((((C31295 * C153937 + C31296 * C153926 + C31297 * C153901) * C23989 +
             (C32084 + C32085 + C32086) * C23990 +
             (C32087 + C32088 + C32089) * C153898) *
                C153601 -
            (C31003 * C153898 + (C31000 + C30971 + C30970) * C23990 +
             (C31296 * C153901 + C31295 * C153926 +
              (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                  C153937) *
                 C23989) *
                C1898) *
               C153848 +
           (((C30970 + C30971 + C31000) * C23989 +
             (C30976 + C30977 + C31001) * C23990 +
             (C30982 + C30983 + C31002) * C153898) *
                C1898 -
            (((C28212 * C32074 - C28213 * C32073 - C28212 * C32075 +
               C153462 * C32076) *
                  C153901 +
              C30999 * C153926 + C29055 * C153937) *
                 C153898 +
             (C32089 + C32088 + C32087) * C23990 +
             (C32086 + C32085 + C32084) * C23989) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C47696 +
             (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
                C153625 * C1898 -
            (C50981 * C153901 + (C48249 + C48248 + C48247) * C47697 +
             (C48246 + C48245 + C48244) * C47696) *
                C153625 * C153601) *
               C153848 +
           (((C25412 + C25411 + C25410) * C47696 +
             (C26061 + C26062 + C26063) * C47697 +
             (C49657 + C49658 + C49659) * C153901) *
                C153625 * C153601 -
            (C49653 * C153901 + (C25410 + C25411 + C25412) * C47697 +
             (C24327 + C24326 + C24325) * C47696) *
                C153625 * C1898) *
               C153573) *
              C153840 +
          ((((C48253 + C48254 + C48255) * C47696 +
             (C48256 + C48257 + C48258) * C47697 +
             (C48259 + C48260 + C48261) * C153901) *
                C153625 * C153601 -
            (C48265 * C153901 + (C48255 + C48254 + C48253) * C47697 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C47696) *
                C153625 * C1898) *
               C153848 +
           (((C24334 + C24335 + C24336) * C47696 +
             (C25413 + C25414 + C25415) * C47697 +
             (C49052 + C49053 + C49054) * C153901) *
                C153625 * C1898 -
            ((C23996 * C8429 - C23997 * C8428 - C23996 * C8430 +
              C153885 * C8431 + C23994 * C6191 - C23995 * C6182 -
              C23994 * C6192 + C153914 * C6200 + C23992 * C6193 -
              C23993 * C6183 - C23992 * C6194 + C153933 * C6201) *
                 C153901 +
             (C49054 + C49053 + C49052) * C47697 +
             (C25415 + C25414 + C25413) * C47696) *
                C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                  C47696 +
              C31290 * C47697 + C31291 * C153901) *
                 C153936 +
             (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
                C1898 -
            (C54388 * C153898 + (C53056 + C53057 + C53058) * C153924 +
             (C31294 * C153901 + C31291 * C47697 + C31290 * C47696) * C153936) *
                C153601) *
               C153848 +
           (((C53058 + C53057 + C53056) * C153936 +
             (C53055 + C53054 + C53053) * C153924 +
             (C54385 + C54386 + C54387) * C153898) *
                C153601 -
            (C53433 * C153898 + (C52086 + C52085 + C52084) * C153924 +
             (C52083 + C52082 + C52081) * C153936) *
                C1898) *
               C153573) *
              C153840 +
          ((((C31295 * C47696 + C31296 * C47697 + C31297 * C153901) * C153936 +
             (C53059 + C53060 + C53061) * C153924 +
             (C53062 + C53063 + C53064) * C153898) *
                C153601 -
            (C52102 * C153898 + (C52092 + C52091 + C52090) * C153924 +
             (C31296 * C153901 + C31295 * C47697 +
              (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                  C47696) *
                 C153936) *
                C1898) *
               C153848 +
           (((C52090 + C52091 + C52092) * C153936 +
             (C52093 + C52094 + C52095) * C153924 +
             (C52096 + C52097 + C52098) * C153898) *
                C1898 -
            (((C28212 * C32074 - C28213 * C32073 - C28212 * C32075 +
               C153462 * C32076) *
                  C153901 +
              C30999 * C47697 + C29055 * C47696) *
                 C153898 +
             (C53064 + C53063 + C53062) * C153924 +
             (C53061 + C53060 + C53059) * C153936) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C55778 +
             C31290 * C55779 + C31291 * C55780 + C31294 * C55781 +
             C34035 * C55782) *
                C153625 * C1898 -
            (C56054 * C55782 + C34035 * C55781 + C31294 * C55780 +
             C31291 * C55779 + C31290 * C55778) *
                C153625 * C153601) *
               C153848 +
           ((C29052 * C55778 + C29431 * C55779 + C31293 * C55780 +
             C32703 * C55781 + C56824 * C55782) *
                C153625 * C153601 -
            (C32703 * C55782 + C31293 * C55781 + C29431 * C55780 +
             C29052 * C55779 + C28405 * C55778) *
                C153625 * C1898) *
               C153573) *
              C153840 +
          (((C31295 * C55778 + C31296 * C55779 + C31297 * C55780 +
             C56055 * C55781 + C56056 * C55782) *
                C153625 * C153601 -
            (C56055 * C55782 + C31297 * C55781 + C31296 * C55780 +
             C31295 * C55779 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C55778) *
                C153625 * C1898) *
               C153848 +
           ((C28410 * C55778 + C29053 * C55779 + C30997 * C55780 +
             C31298 * C55781 + C56487 * C55782) *
                C153625 * C1898 -
            ((C28212 * C56477 - C28213 * C56476 - C28212 * C56478 +
              C153462 * C56479) *
                 C55782 +
             C56487 * C55781 + C31298 * C55780 + C30997 * C55779 +
             C29053 * C55778) *
                C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
                C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
                C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
                C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
                C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                   C153637 * C153625 * C153921 -
               (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
                C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
                C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
                C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
                C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
                   C153637 * C153625 * C153922 +
               (C134 * C498 - C135 * C481 - C134 * C499 + C121 * C517 +
                C136 * C500 - C137 * C482 - C136 * C501 + C122 * C518 +
                C138 * C502 - C139 * C483 - C138 * C503 + C123 * C519 +
                C140 * C504 - C141 * C484 - C140 * C505 + C124 * C520 +
                C142 * C506 - C143 * C485 - C142 * C507 + C125 * C521) *
                   C153637 * C153625 * C2414) *
                  C153848 +
              ((C134 * C951 - C135 * C945 - C134 * C952 + C121 * C963 +
                C136 * C953 - C137 * C946 - C136 * C954 + C122 * C964 +
                C138 * C955 - C139 * C947 - C138 * C956 + C123 * C965 +
                C140 * C957 - C141 * C948 - C140 * C958 + C124 * C966 +
                C142 * C959 - C143 * C949 - C142 * C960 + C125 * C967) *
                   C153637 * C153625 * C153922 -
               (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
                C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
                C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
                C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
                C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
                   C153637 * C153625 * C153921 -
               (C142 * C1330 - C143 * C1325 - C142 * C1331 + C125 * C1340 +
                C140 * C1332 - C141 * C1326 - C140 * C1333 + C124 * C1341 +
                C138 * C1334 - C139 * C1327 - C138 * C1335 + C123 * C1342 +
                C136 * C1336 - C137 * C1328 - C136 * C1337 + C122 * C1343 +
                C134 * C1338 - C135 * C1329 - C134 * C1339 + C121 * C1344) *
                   C153637 * C153625 * C2414) *
                  C153573) *
             C153502 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
                 C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
                 C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                    C153637 * C153936 +
                (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
                   C153921 -
               (C5591 * C153898 + (C4155 + C4156 + C4157) * C153637 * C153924 +
                (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
                 C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
                 C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                    C153637 * C153936) *
                   C153922 +
               ((C2689 * C498 - C2690 * C481 - C2689 * C499 + C2683 * C517 +
                 C2691 * C500 - C2692 * C482 - C2691 * C501 + C2684 * C518 +
                 C2693 * C502 - C2694 * C483 - C2693 * C503 + C153885 * C519) *
                    C153637 * C153936 +
                (C4830 + C4831 + C4832) * C153637 * C153924 +
                (C4833 + C4834 + C4835) * C153637 * C153898) *
                   C2414) *
                  C153848 +
              (((C4157 + C4156 + C4155) * C153637 * C153936 +
                (C4154 + C4153 + C4152) * C153637 * C153924 +
                (C5595 + C5596 + C5597) * C153637 * C153898) *
                   C153922 -
               (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
                (C3040 + C3039 + C3038) * C153637 * C153936) *
                   C153921 -
               ((C2693 * C4784 - C2694 * C4781 - C2693 * C4785 +
                 C153885 * C4790 + C2691 * C4786 - C2692 * C4782 -
                 C2691 * C4787 + C2684 * C4791 + C2689 * C4788 - C2690 * C4783 -
                 C2689 * C4789 + C2683 * C4792) *
                    C153637 * C153898 +
                (C4835 + C4834 + C4833) * C153637 * C153924 +
                (C4832 + C4831 + C4830) * C153637 * C153936) *
                   C2414) *
                  C153573) *
             C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153937 +
            (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
               C153625 * C153921 -
           (C10404 * C153901 + (C7644 + C7643 + C7642) * C153926 +
            (C7641 + C7640 + C7639) * C153937) *
               C153625 * C153922 +
           (C7659 * C153937 + (C7647 + C7646 + C7645) * C153926 +
            (C10411 + C10412 + C10413) * C153901) *
               C153625 * C2414) *
              C153848 +
          (((C4157 + C4156 + C4155) * C153937 +
            (C4830 + C4831 + C4832) * C153926 +
            (C9068 + C9069 + C9070) * C153901) *
               C153625 * C153922 -
           (C9064 * C153901 + (C4155 + C4156 + C4157) * C153926 +
            (C3040 + C3039 + C3038) * C153937) *
               C153625 * C153921 -
           ((C2693 * C9038 - C2694 * C9035 - C2693 * C9039 + C153885 * C9044 +
             C2691 * C9040 - C2692 * C9036 - C2691 * C9041 + C2684 * C9045 +
             C2689 * C9042 - C2690 * C9037 - C2689 * C9043 + C2683 * C9046) *
                C153901 +
            (C9070 + C9069 + C9068) * C153926 + C9064 * C153937) *
               C153625 * C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153921 -
           (C26810 * C153898 + (C25410 + C25411 + C25412) * C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C153922 +
           ((C23992 * C498 - C23993 * C481 - C23992 * C499 + C153933 * C517 +
             C23994 * C500 - C23995 * C482 - C23994 * C501 + C153914 * C518 +
             C23996 * C502 - C23997 * C483 - C23996 * C503 + C153885 * C519) *
                C153637 * C23989 +
            (C26061 + C26062 + C26063) * C153637 * C23990 +
            (C26064 + C26065 + C26066) * C153637 * C153898) *
               C2414) *
              C153848 +
          (((C25412 + C25411 + C25410) * C153637 * C23989 +
            (C25409 + C25408 + C25407) * C153637 * C23990 +
            (C26814 + C26815 + C26816) * C153637 * C153898) *
               C153922 -
           (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C153921 -
           ((C23996 * C4784 - C23997 * C4781 - C23996 * C4785 +
             C153885 * C4790 + C23994 * C4786 - C23995 * C4782 -
             C23994 * C4787 + C153914 * C4791 + C23992 * C4788 -
             C23993 * C4783 - C23992 * C4789 + C153933 * C4792) *
                C153637 * C153898 +
            (C26066 + C26065 + C26064) * C153637 * C23990 +
            (C26063 + C26062 + C26061) * C153637 * C23989) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153921 -
           (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
            C29060 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C153922 +
           ((C28212 * C498 - C28213 * C481 - C28212 * C499 + C153462 * C517) *
                C153637 * C28207 +
            C29435 * C28208 + C29436 * C28209 + C29437 * C28210 +
            C29438 * C28211) *
               C2414) *
              C153848 +
          ((C29060 * C28207 + C29059 * C28208 + C29058 * C28209 +
            C29057 * C28210 + C29856 * C28211) *
               C153922 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C153921 -
           ((C28212 * C29403 - C28213 * C29402 - C28212 * C29404 +
             C153462 * C29405) *
                C153637 * C28211 +
            C29438 * C28210 + C29437 * C28209 + C29436 * C28208 +
            C29435 * C28207) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153937 +
             C31290 * C153926 + C31291 * C153901) *
                C23989 +
            (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
               C153921 -
           (C33438 * C153898 + (C32081 + C32082 + C32083) * C23990 +
            (C31294 * C153901 + C31291 * C153926 + C31290 * C153937) * C23989) *
               C153922 +
           ((C31291 * C153937 + C31294 * C153926 + C34035 * C153901) * C23989 +
            (C32681 + C32682 + C32706) * C23990 +
            (C32687 + C32688 + C32707) * C153898) *
               C2414) *
              C153848 +
          (((C32083 + C32082 + C32081) * C23989 +
            (C32080 + C32079 + C32078) * C23990 +
            (C33435 + C33436 + C33437) * C153898) *
               C153922 -
           (C32458 * C153898 + (C30966 + C30965 + C30964) * C23990 +
            (C30963 + C30962 + C30961) * C23989) *
               C153921 -
           (((C28212 * C32677 - C28213 * C32676 - C28212 * C32678 +
              C153462 * C32679) *
                 C153901 +
             C32705 * C153926 + C29433 * C153937) *
                C153898 +
            (C32707 + C32688 + C32687) * C23990 +
            (C32706 + C32682 + C32681) * C23989) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C47696 +
            (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
               C153625 * C153921 -
           (C50981 * C153901 + (C48249 + C48248 + C48247) * C47697 +
            (C48246 + C48245 + C48244) * C47696) *
               C153625 * C153922 +
           (C48264 * C47696 + (C48252 + C48251 + C48250) * C47697 +
            (C50988 + C50989 + C50990) * C153901) *
               C153625 * C2414) *
              C153848 +
          (((C25412 + C25411 + C25410) * C47696 +
            (C26061 + C26062 + C26063) * C47697 +
            (C49657 + C49658 + C49659) * C153901) *
               C153625 * C153922 -
           (C49653 * C153901 + (C25410 + C25411 + C25412) * C47697 +
            (C24327 + C24326 + C24325) * C47696) *
               C153625 * C153921 -
           ((C23996 * C9038 - C23997 * C9035 - C23996 * C9039 +
             C153885 * C9044 + C23994 * C9040 - C23995 * C9036 -
             C23994 * C9041 + C153914 * C9045 + C23992 * C9042 -
             C23993 * C9037 - C23992 * C9043 + C153933 * C9046) *
                C153901 +
            (C49659 + C49658 + C49657) * C47697 + C49653 * C47696) *
               C153625 * C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C47696 +
             C31290 * C47697 + C31291 * C153901) *
                C153936 +
            (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
               C153921 -
           (C54388 * C153898 + (C53056 + C53057 + C53058) * C153924 +
            (C31294 * C153901 + C31291 * C47697 + C31290 * C47696) * C153936) *
               C153922 +
           ((C31291 * C47696 + C31294 * C47697 + C34035 * C153901) * C153936 +
            (C53652 + C53653 + C53654) * C153924 +
            (C53655 + C53656 + C53657) * C153898) *
               C2414) *
              C153848 +
          (((C53058 + C53057 + C53056) * C153936 +
            (C53055 + C53054 + C53053) * C153924 +
            (C54385 + C54386 + C54387) * C153898) *
               C153922 -
           (C53433 * C153898 + (C52086 + C52085 + C52084) * C153924 +
            (C52083 + C52082 + C52081) * C153936) *
               C153921 -
           (((C28212 * C32677 - C28213 * C32676 - C28212 * C32678 +
              C153462 * C32679) *
                 C153901 +
             C32705 * C47697 + C29433 * C47696) *
                C153898 +
            (C53657 + C53656 + C53655) * C153924 +
            (C53654 + C53653 + C53652) * C153936) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C55778 +
            C31290 * C55779 + C31291 * C55780 + C31294 * C55781 +
            C34035 * C55782) *
               C153625 * C153921 -
           (C56054 * C55782 + C34035 * C55781 + C31294 * C55780 +
            C31291 * C55779 + C31290 * C55778) *
               C153625 * C153922 +
           (C31291 * C55778 + C31294 * C55779 + C34035 * C55780 +
            C56054 * C55781 + C57567 * C55782) *
               C153625 * C2414) *
              C153848 +
          ((C29052 * C55778 + C29431 * C55779 + C31293 * C55780 +
            C32703 * C55781 + C56824 * C55782) *
               C153625 * C153922 -
           (C32703 * C55782 + C31293 * C55781 + C29431 * C55780 +
            C29052 * C55779 + C28405 * C55778) *
               C153625 * C153921 -
           ((C28212 * C56814 - C28213 * C56813 - C28212 * C56815 +
             C153462 * C56816) *
                C55782 +
            C56824 * C55781 + C32703 * C55780 + C31293 * C55779 +
            C29431 * C55778) *
               C153625 * C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
                C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
                C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
                C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
                C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                   C153637 * C153625 * C1898 -
               (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
                C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
                C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
                C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
                C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
                   C153637 * C153625 * C153601) *
                  C153521 * C1093 +
              ((C134 * C494 - C135 * C479 - C134 * C495 + C121 * C515 +
                C136 * C492 - C137 * C478 - C136 * C493 + C122 * C514 +
                C138 * C490 - C139 * C477 - C138 * C491 + C123 * C513 +
                C140 * C488 - C141 * C476 - C140 * C489 + C124 * C512 +
                C142 * C508 - C143 * C486 - C142 * C509 + C125 * C522) *
                   C153637 * C153625 * C153601 -
               (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
                C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
                C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
                C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
                C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
                   C153637 * C153625 * C1898) *
                  C153521 * C1094 +
              ((C134 * C156 - C135 * C146 - C134 * C157 + C121 * C170 +
                C136 * C158 - C137 * C147 - C136 * C159 + C122 * C171 +
                C138 * C160 - C139 * C148 - C138 * C161 + C123 * C172 +
                C140 * C162 - C141 * C149 - C140 * C163 + C124 * C173 +
                C142 * C164 - C143 * C150 - C142 * C165 + C125 * C174) *
                   C153637 * C153625 * C1898 -
               (C142 * C780 - C143 * C779 - C142 * C781 + C125 * C782 +
                C140 * C508 - C141 * C486 - C140 * C509 + C124 * C522 +
                C138 * C488 - C139 * C476 - C138 * C489 + C123 * C512 +
                C136 * C490 - C137 * C477 - C136 * C491 + C122 * C513 +
                C134 * C492 - C135 * C478 - C134 * C493 + C121 * C514) *
                   C153637 * C153625 * C153601) *
                  C153521 * C1095) -
         0.25 * std::pow(Pi, 2.5) *
             (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
                C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
                C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
                C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
                C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                   C153637 * C153625 * C1898 -
               (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
                C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
                C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
                C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
                C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
                   C153637 * C153625 * C153601) *
                  C298 +
              ((C134 * C951 - C135 * C945 - C134 * C952 + C121 * C963 +
                C136 * C953 - C137 * C946 - C136 * C954 + C122 * C964 +
                C138 * C955 - C139 * C947 - C138 * C956 + C123 * C965 +
                C140 * C957 - C141 * C948 - C140 * C958 + C124 * C966 +
                C142 * C959 - C143 * C949 - C142 * C960 + C125 * C967) *
                   C153637 * C153625 * C153601 -
               (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
                C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
                C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
                C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
                C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
                   C153637 * C153625 * C1898) *
                  C299 +
              ((C134 * C325 - C135 * C308 - C134 * C326 + C121 * C344 +
                C136 * C327 - C137 * C309 - C136 * C328 + C122 * C345 +
                C138 * C329 - C139 * C310 - C138 * C330 + C123 * C346 +
                C140 * C331 - C141 * C311 - C140 * C332 + C124 * C347 +
                C142 * C333 - C143 * C312 - C142 * C334 + C125 * C348) *
                   C153637 * C153625 * C1898 -
               (C142 * C1761 - C143 * C1756 - C142 * C1762 + C125 * C1771 +
                C140 * C1763 - C141 * C1757 - C140 * C1764 + C124 * C1772 +
                C138 * C1765 - C139 * C1758 - C138 * C1766 + C123 * C1773 +
                C136 * C1767 - C137 * C1759 - C136 * C1768 + C122 * C1774 +
                C134 * C1769 - C135 * C1760 - C134 * C1770 + C121 * C1775) *
                   C153637 * C153625 * C153601) *
                  C300) *
             C153502 +
         0.5 * std::pow(Pi, 2.5) *
             ((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
               C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
               C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
               C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
               C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                  C153637 * C153625 * C2104 -
              (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
               C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
               C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
               C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
               C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
                  C153637 * C153625 * C2105 +
              (C134 * C498 - C135 * C481 - C134 * C499 + C121 * C517 +
               C136 * C500 - C137 * C482 - C136 * C501 + C122 * C518 +
               C138 * C502 - C139 * C483 - C138 * C503 + C123 * C519 +
               C140 * C504 - C141 * C484 - C140 * C505 + C124 * C520 +
               C142 * C506 - C143 * C485 - C142 * C507 + C125 * C521) *
                  C153637 * C153625 * C2106 -
              (C142 * C2113 - C143 * C2108 - C142 * C2114 + C125 * C2123 +
               C140 * C2115 - C141 * C2109 - C140 * C2116 + C124 * C2124 +
               C138 * C2117 - C139 * C2110 - C138 * C2118 + C123 * C2125 +
               C136 * C2119 - C137 * C2111 - C136 * C2120 + C122 * C2126 +
               C134 * C2121 - C135 * C2112 - C134 * C2122 + C121 * C2127) *
                  C153637 * C153625 * C2107) *
             C153521 * C153502 -
         0.25 * std::pow(Pi, 2.5) *
             ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
                 C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
                 C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                    C153637 * C153936 +
                (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
                   C1898 -
               (C5591 * C153898 + (C4155 + C4156 + C4157) * C153637 * C153924 +
                (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
                 C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
                 C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                    C153637 * C153936) *
                   C153601) *
                  C153521 * C1093 +
              (((C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515 +
                 C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
                 C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513) *
                    C153637 * C153936 +
                (C4158 + C4159 + C4160) * C153637 * C153924 +
                (C4161 + C4162 + C4163) * C153637 * C153898) *
                   C153601 -
               (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
                (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
                 C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
                 C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                    C153637 * C153936) *
                   C1898) *
                  C153521 * C1094 +
              (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
                 C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
                 C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                    C153637 * C153936 +
                (C3550 + C3551 + C3552) * C153637 * C153924 +
                (C3553 + C3554 + C3555) * C153637 * C153898) *
                   C1898 -
               ((C2693 * C1761 - C2694 * C1756 - C2693 * C1762 +
                 C153885 * C1771 + C2691 * C1763 - C2692 * C1757 -
                 C2691 * C1764 + C2684 * C1772 + C2689 * C1765 - C2690 * C1758 -
                 C2689 * C1766 + C2683 * C1773) *
                    C153637 * C153898 +
                (C2693 * C959 - C2694 * C949 - C2693 * C960 + C153885 * C967 +
                 C2691 * C957 - C2692 * C948 - C2691 * C958 + C2684 * C966 +
                 C2689 * C955 - C2690 * C947 - C2689 * C956 + C2683 * C965) *
                    C153637 * C153924 +
                (C2693 * C488 - C2694 * C476 - C2693 * C489 + C153885 * C512 +
                 C2691 * C490 - C2692 * C477 - C2691 * C491 + C2684 * C513 +
                 C2689 * C492 - C2690 * C478 - C2689 * C493 + C2683 * C514) *
                    C153637 * C153936) *
                   C153601) *
                  C153521 * C1095) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
                 C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
                 C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                    C153637 * C153936 +
                (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
                   C1898 -
               (C5591 * C153898 + (C4155 + C4156 + C4157) * C153637 * C153924 +
                (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
                 C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
                 C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                    C153637 * C153936) *
                   C153601) *
                  C298 +
              (((C4157 + C4156 + C4155) * C153637 * C153936 +
                (C4154 + C4153 + C4152) * C153637 * C153924 +
                (C5595 + C5596 + C5597) * C153637 * C153898) *
                   C153601 -
               (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
                (C3040 + C3039 + C3038) * C153637 * C153936) *
                   C1898) *
                  C299 +
              ((C3060 * C153936 + (C3046 + C3045 + C3044) * C153637 * C153924 +
                (C4561 + C4562 + C4563) * C153637 * C153898) *
                   C1898 -
               ((C2693 * C5564 - C2694 * C5561 - C2693 * C5565 +
                 C153885 * C5570 + C2691 * C5566 - C2692 * C5562 -
                 C2691 * C5567 + C2684 * C5571 + C2689 * C5568 - C2690 * C5563 -
                 C2689 * C5569 + C2683 * C5572) *
                    C153637 * C153898 +
                (C5597 + C5596 + C5595) * C153637 * C153924 + C5591 * C153936) *
                   C153601) *
                  C300) *
             C153502 +
         0.5 * std::pow(Pi, 2.5) *
             (((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
                C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
                C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                   C153637 * C153936 +
               (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
                  C2104 -
              (C5591 * C153898 + (C4155 + C4156 + C4157) * C153637 * C153924 +
               (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
                C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
                C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                   C153637 * C153936) *
                  C2105 +
              ((C2689 * C498 - C2690 * C481 - C2689 * C499 + C2683 * C517 +
                C2691 * C500 - C2692 * C482 - C2691 * C501 + C2684 * C518 +
                C2693 * C502 - C2694 * C483 - C2693 * C503 + C153885 * C519) *
                   C153637 * C153936 +
               (C4830 + C4831 + C4832) * C153637 * C153924 +
               (C4833 + C4834 + C4835) * C153637 * C153898) *
                  C2106 -
              ((C2693 * C6185 - C2694 * C6179 - C2693 * C6186 +
                C153885 * C6197 + C2691 * C6187 - C2692 * C6180 -
                C2691 * C6188 + C2684 * C6198 + C2689 * C6189 - C2690 * C6181 -
                C2689 * C6190 + C2683 * C6199) *
                   C153637 * C153898 +
               (C2693 * C6191 - C2694 * C6182 - C2693 * C6192 +
                C153885 * C6200 + C2691 * C6193 - C2692 * C6183 -
                C2691 * C6194 + C2684 * C6201 + C2689 * C6195 - C2690 * C6184 -
                C2689 * C6196 + C2683 * C6202) *
                   C153637 * C153924 +
               (C2693 * C2117 - C2694 * C2110 - C2693 * C2118 +
                C153885 * C2125 + C2691 * C2119 - C2692 * C2111 -
                C2691 * C2120 + C2684 * C2126 + C2689 * C2121 - C2690 * C2112 -
                C2689 * C2122 + C2683 * C2127) *
                   C153637 * C153936) *
                  C2107) *
             C153521 * C153502 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
                 C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
                 C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                    C153937 +
                (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
                   C153625 * C1898 -
               ((C7645 + C7646 + C7647) * C153901 +
                (C7644 + C7643 + C7642) * C153926 +
                (C7641 + C7640 + C7639) * C153937) *
                   C153625 * C153601) *
                  C153521 * C1093 +
              (((C7648 + C7649 + C7650) * C153937 +
                (C7651 + C7652 + C7653) * C153926 +
                (C7654 + C7655 + C7656) * C153901) *
                   C153625 * C153601 -
               (C7660 * C153901 + (C7650 + C7649 + C7648) * C153926 +
                (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
                 C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
                 C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                    C153937) *
                   C153625 * C1898) *
                  C153521 * C1094 +
              (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
                 C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
                 C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                    C153937 +
                (C8133 + C8134 + C8135) * C153926 +
                (C8136 + C8137 + C8138) * C153901) *
                   C153625 * C1898 -
               ((C2693 * C2113 - C2694 * C2108 - C2693 * C2114 +
                 C153885 * C2123 + C2691 * C2115 - C2692 * C2109 -
                 C2691 * C2116 + C2684 * C2124 + C2689 * C2117 - C2690 * C2110 -
                 C2689 * C2118 + C2683 * C2125) *
                    C153901 +
                (C8138 + C8137 + C8136) * C153926 +
                (C8135 + C8134 + C8133) * C153937) *
                   C153625 * C153601) *
                  C153521 * C1095) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
                 C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
                 C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                    C153937 +
                (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
                   C153625 * C1898 -
               ((C7645 + C7646 + C7647) * C153901 +
                (C7644 + C7643 + C7642) * C153926 +
                (C7641 + C7640 + C7639) * C153937) *
                   C153625 * C153601) *
                  C298 +
              (((C4157 + C4156 + C4155) * C153937 +
                (C4830 + C4831 + C4832) * C153926 +
                (C9068 + C9069 + C9070) * C153901) *
                   C153625 * C153601 -
               (C9064 * C153901 + (C4155 + C4156 + C4157) * C153926 +
                (C3040 + C3039 + C3038) * C153937) *
                   C153625 * C1898) *
                  C299 +
              ((C3058 * C153937 + (C4154 + C4153 + C4152) * C153926 +
                (C4833 + C4834 + C4835) * C153901) *
                   C153625 * C1898 -
               ((C2693 * C6185 - C2694 * C6179 - C2693 * C6186 +
                 C153885 * C6197 + C2691 * C6187 - C2692 * C6180 -
                 C2691 * C6188 + C2684 * C6198 + C2689 * C6189 - C2690 * C6181 -
                 C2689 * C6190 + C2683 * C6199) *
                    C153901 +
                (C4835 + C4834 + C4833) * C153926 + C5587 * C153937) *
                   C153625 * C153601) *
                  C300) *
             C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
            C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
            C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
               C153937 +
           (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
              C153625 * C2104 -
          (C10404 * C153901 + (C7644 + C7643 + C7642) * C153926 +
           (C7641 + C7640 + C7639) * C153937) *
              C153625 * C2105 +
          (C7659 * C153937 + (C7647 + C7646 + C7645) * C153926 +
           (C10411 + C10412 + C10413) * C153901) *
              C153625 * C2106 -
          ((C2693 * C10381 - C2694 * C10378 - C2693 * C10382 +
            C153885 * C10387 + C2691 * C10383 - C2692 * C10379 -
            C2691 * C10384 + C2684 * C10388 + C2689 * C10385 - C2690 * C10380 -
            C2689 * C10386 + C2683 * C10389) *
               C153901 +
           (C10413 + C10412 + C10411) * C153926 + C10404 * C153937) *
              C153625 * C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C1898 -
           (C26810 * C153898 + (C25410 + C25411 + C25412) * C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C153601) *
              C153521 * C1093 +
          (((C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515 +
             C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
             C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513) *
                C153637 * C23989 +
            (C25413 + C25414 + C25415) * C153637 * C23990 +
            (C25416 + C25417 + C25418) * C153637 * C153898) *
               C153601 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C1898) *
              C153521 * C1094 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C153637 * C23989 +
            (C24821 + C24822 + C24823) * C153637 * C23990 +
            (C24824 + C24825 + C24826) * C153637 * C153898) *
               C1898 -
           ((C23996 * C1761 - C23997 * C1756 - C23996 * C1762 +
             C153885 * C1771 + C23994 * C1763 - C23995 * C1757 -
             C23994 * C1764 + C153914 * C1772 + C23992 * C1765 -
             C23993 * C1758 - C23992 * C1766 + C153933 * C1773) *
                C153637 * C153898 +
            (C23996 * C959 - C23997 * C949 - C23996 * C960 + C153885 * C967 +
             C23994 * C957 - C23995 * C948 - C23994 * C958 + C153914 * C966 +
             C23992 * C955 - C23993 * C947 - C23992 * C956 + C153933 * C965) *
                C153637 * C23990 +
            (C23996 * C488 - C23997 * C476 - C23996 * C489 + C153885 * C512 +
             C23994 * C490 - C23995 * C477 - C23994 * C491 + C153914 * C513 +
             C23992 * C492 - C23993 * C478 - C23992 * C493 + C153933 * C514) *
                C153637 * C23989) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C1898 -
           (C26810 * C153898 + (C25410 + C25411 + C25412) * C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C153601) *
              C298 +
          (((C25412 + C25411 + C25410) * C153637 * C23989 +
            (C25409 + C25408 + C25407) * C153637 * C23990 +
            (C26814 + C26815 + C26816) * C153637 * C153898) *
               C153601 -
           (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C1898) *
              C299 +
          ((C24347 * C23989 + (C24333 + C24332 + C24331) * C153637 * C23990 +
            (C25804 + C25805 + C25806) * C153637 * C153898) *
               C1898 -
           ((C23996 * C5564 - C23997 * C5561 - C23996 * C5565 +
             C153885 * C5570 + C23994 * C5566 - C23995 * C5562 -
             C23994 * C5567 + C153914 * C5571 + C23992 * C5568 -
             C23993 * C5563 - C23992 * C5569 + C153933 * C5572) *
                C153637 * C153898 +
            (C26816 + C26815 + C26814) * C153637 * C23990 + C26810 * C23989) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
            C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
            C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
               C153637 * C23989 +
           (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
              C2104 -
          (C26810 * C153898 + (C25410 + C25411 + C25412) * C153637 * C23990 +
           (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
            C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
            C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
               C153637 * C23989) *
              C2105 +
          ((C23992 * C498 - C23993 * C481 - C23992 * C499 + C153933 * C517 +
            C23994 * C500 - C23995 * C482 - C23994 * C501 + C153914 * C518 +
            C23996 * C502 - C23997 * C483 - C23996 * C503 + C153885 * C519) *
               C153637 * C23989 +
           (C26061 + C26062 + C26063) * C153637 * C23990 +
           (C26064 + C26065 + C26066) * C153637 * C153898) *
              C2106 -
          ((C23996 * C6185 - C23997 * C6179 - C23996 * C6186 + C153885 * C6197 +
            C23994 * C6187 - C23995 * C6180 - C23994 * C6188 + C153914 * C6198 +
            C23992 * C6189 - C23993 * C6181 - C23992 * C6190 +
            C153933 * C6199) *
               C153637 * C153898 +
           (C23996 * C6191 - C23997 * C6182 - C23996 * C6192 + C153885 * C6200 +
            C23994 * C6193 - C23995 * C6183 - C23994 * C6194 + C153914 * C6201 +
            C23992 * C6195 - C23993 * C6184 - C23992 * C6196 +
            C153933 * C6202) *
               C153637 * C23990 +
           (C23996 * C2117 - C23997 * C2110 - C23996 * C2118 + C153885 * C2125 +
            C23994 * C2119 - C23995 * C2111 - C23994 * C2120 + C153914 * C2126 +
            C23992 * C2121 - C23993 * C2112 - C23992 * C2122 +
            C153933 * C2127) *
               C153637 * C23989) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C1898 -
           (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
            C29060 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C153601) *
              C153521 * C1093 +
          (((C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                C153637 * C28207 +
            C29061 * C28208 + C29062 * C28209 + C29063 * C28210 +
            C29064 * C28211) *
               C153601 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C1898) *
              C153521 * C1094 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C153637 * C28207 +
            C28705 * C28208 + C28706 * C28209 + C28707 * C28210 +
            C28708 * C28211) *
               C1898 -
           ((C28212 * C5564 - C28213 * C5561 - C28212 * C5565 +
             C153462 * C5570) *
                C153637 * C28211 +
            (C28212 * C4071 - C28213 * C4065 - C28212 * C4072 +
             C153462 * C4077) *
                C153637 * C28210 +
            (C28212 * C1765 - C28213 * C1758 - C28212 * C1766 +
             C153462 * C1773) *
                C153637 * C28209 +
            (C28212 * C955 - C28213 * C947 - C28212 * C956 + C153462 * C965) *
                C153637 * C28208 +
            (C28212 * C492 - C28213 * C478 - C28212 * C493 + C153462 * C514) *
                C153637 * C28207) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C1898 -
           (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
            C29060 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C153601) *
              C298 +
          ((C29060 * C28207 + C29059 * C28208 + C29058 * C28209 +
            C29057 * C28210 + C29856 * C28211) *
               C153601 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C1898) *
              C299 +
          ((C28416 * C28207 + C28417 * C28208 + C28418 * C28209 +
            C28419 * C28210 + C29280 * C28211) *
               C1898 -
           ((C28212 * C29845 - C28213 * C29844 - C28212 * C29846 +
             C153462 * C29847) *
                C153637 * C28211 +
            C29856 * C28210 + C29057 * C28209 + C29058 * C28208 +
            C29059 * C28207) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
               C153637 * C28207 +
           C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
           C28418 * C28211) *
              C2104 -
          (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
           C29060 * C28208 +
           (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
               C153637 * C28207) *
              C2105 +
          ((C28212 * C498 - C28213 * C481 - C28212 * C499 + C153462 * C517) *
               C153637 * C28207 +
           C29435 * C28208 + C29436 * C28209 + C29437 * C28210 +
           C29438 * C28211) *
              C2106 -
          ((C28212 * C30184 - C28213 * C30182 - C28212 * C30185 +
            C153462 * C30188) *
               C153637 * C28211 +
           (C28212 * C30186 - C28213 * C30183 - C28212 * C30187 +
            C153462 * C30189) *
               C153637 * C28210 +
           (C28212 * C6189 - C28213 * C6181 - C28212 * C6190 +
            C153462 * C6199) *
               C153637 * C28209 +
           (C28212 * C6195 - C28213 * C6184 - C28212 * C6196 +
            C153462 * C6202) *
               C153637 * C28208 +
           (C28212 * C2121 - C28213 * C2112 - C28212 * C2122 +
            C153462 * C2127) *
               C153637 * C28207) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153937 +
             C31290 * C153926 + C31291 * C153901) *
                C23989 +
            (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
               C1898 -
           (C33438 * C153898 + (C32081 + C32082 + C32083) * C23990 +
            (C31294 * C153901 + C31291 * C153926 + C31290 * C153937) * C23989) *
               C153601) *
              C153521 * C1093 +
          (((C31295 * C153937 + C31296 * C153926 + C31297 * C153901) * C23989 +
            (C32084 + C32085 + C32086) * C23990 +
            (C32087 + C32088 + C32089) * C153898) *
               C153601 -
           (C31003 * C153898 + (C31000 + C30971 + C30970) * C23990 +
            (C31296 * C153901 + C31295 * C153926 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153937) *
                C23989) *
               C1898) *
              C153521 * C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C153937 +
             C31782 * C153926 + C31783 * C153901) *
                C23989 +
            (C31518 + C31548 + C31549) * C23990 +
            (C31527 + C31550 + C31551) * C153898) *
               C1898 -
           (((C28212 * C6185 - C28213 * C6179 - C28212 * C6186 +
              C153462 * C6197) *
                 C153901 +
             C31547 * C153926 + C31546 * C153937) *
                C153898 +
            ((C28212 * C6191 - C28213 * C6182 - C28212 * C6192 +
              C153462 * C6200) *
                 C153901 +
             C31545 * C153926 + C31544 * C153937) *
                C23990 +
            ((C28212 * C2117 - C28213 * C2110 - C28212 * C2118 +
              C153462 * C2125) *
                 C153901 +
             C31783 * C153926 + C31782 * C153937) *
                C23989) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153937 +
             C31290 * C153926 + C31291 * C153901) *
                C23989 +
            (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
               C1898 -
           (C33438 * C153898 + (C32081 + C32082 + C32083) * C23990 +
            (C31294 * C153901 + C31291 * C153926 + C31290 * C153937) * C23989) *
               C153601) *
              C298 +
          (((C32083 + C32082 + C32081) * C23989 +
            (C32080 + C32079 + C32078) * C23990 +
            (C33435 + C33436 + C33437) * C153898) *
               C153601 -
           (C32458 * C153898 + (C30966 + C30965 + C30964) * C23990 +
            (C30963 + C30962 + C30961) * C23989) *
               C1898) *
              C299 +
          ((C30993 * C23989 + (C30969 + C30968 + C30967) * C23990 +
            (C32455 + C32456 + C32457) * C153898) *
               C1898 -
           (((C28212 * C30184 - C28213 * C30182 - C28212 * C30185 +
              C153462 * C30188) *
                 C153901 +
             C29434 * C153926 + C29049 * C153937) *
                C153898 +
            (C33437 + C33436 + C33435) * C23990 + C33438 * C23989) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153937 +
            C31290 * C153926 + C31291 * C153901) *
               C23989 +
           (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
              C2104 -
          (C33438 * C153898 + (C32081 + C32082 + C32083) * C23990 +
           (C31294 * C153901 + C31291 * C153926 + C31290 * C153937) * C23989) *
              C2105 +
          ((C31291 * C153937 + C31294 * C153926 + C34035 * C153901) * C23989 +
           (C32681 + C32682 + C32706) * C23990 +
           (C32687 + C32688 + C32707) * C153898) *
              C2106 -
          (((C28212 * C34022 - C28213 * C34020 - C28212 * C34023 +
             C153462 * C34026) *
                C153901 +
            C32704 * C153926 + C31292 * C153937) *
               C153898 +
           ((C28212 * C34024 - C28213 * C34021 - C28212 * C34025 +
             C153462 * C34027) *
                C153901 +
            C32703 * C153926 + C31293 * C153937) *
               C23990 +
           ((C28212 * C10385 - C28213 * C10380 - C28212 * C10386 +
             C153462 * C10389) *
                C153901 +
            C34035 * C153926 + C31294 * C153937) *
               C23989) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C47696 +
            (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
               C153625 * C1898 -
           ((C48250 + C48251 + C48252) * C153901 +
            (C48249 + C48248 + C48247) * C47697 +
            (C48246 + C48245 + C48244) * C47696) *
               C153625 * C153601) *
              C153521 * C1093 +
          (((C48253 + C48254 + C48255) * C47696 +
            (C48256 + C48257 + C48258) * C47697 +
            (C48259 + C48260 + C48261) * C153901) *
               C153625 * C153601 -
           (C48265 * C153901 + (C48255 + C48254 + C48253) * C47697 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C47696) *
               C153625 * C1898) *
              C153521 * C1094 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C47696 +
            (C48738 + C48739 + C48740) * C47697 +
            (C48741 + C48742 + C48743) * C153901) *
               C153625 * C1898 -
           ((C23996 * C2113 - C23997 * C2108 - C23996 * C2114 +
             C153885 * C2123 + C23994 * C2115 - C23995 * C2109 -
             C23994 * C2116 + C153914 * C2124 + C23992 * C2117 -
             C23993 * C2110 - C23992 * C2118 + C153933 * C2125) *
                C153901 +
            (C48743 + C48742 + C48741) * C47697 +
            (C48740 + C48739 + C48738) * C47696) *
               C153625 * C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C47696 +
            (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
               C153625 * C1898 -
           ((C48250 + C48251 + C48252) * C153901 +
            (C48249 + C48248 + C48247) * C47697 +
            (C48246 + C48245 + C48244) * C47696) *
               C153625 * C153601) *
              C298 +
          (((C25412 + C25411 + C25410) * C47696 +
            (C26061 + C26062 + C26063) * C47697 +
            (C49657 + C49658 + C49659) * C153901) *
               C153625 * C153601 -
           (C49653 * C153901 + (C25410 + C25411 + C25412) * C47697 +
            (C24327 + C24326 + C24325) * C47696) *
               C153625 * C1898) *
              C299 +
          ((C24345 * C47696 + (C25409 + C25408 + C25407) * C47697 +
            (C26064 + C26065 + C26066) * C153901) *
               C153625 * C1898 -
           ((C23996 * C6185 - C23997 * C6179 - C23996 * C6186 +
             C153885 * C6197 + C23994 * C6187 - C23995 * C6180 -
             C23994 * C6188 + C153914 * C6198 + C23992 * C6189 -
             C23993 * C6181 - C23992 * C6190 + C153933 * C6199) *
                C153901 +
            (C26066 + C26065 + C26064) * C47697 + C26806 * C47696) *
               C153625 * C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
            C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
            C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
               C47696 +
           (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
              C153625 * C2104 -
          (C50981 * C153901 + (C48249 + C48248 + C48247) * C47697 +
           (C48246 + C48245 + C48244) * C47696) *
              C153625 * C2105 +
          (C48264 * C47696 + (C48252 + C48251 + C48250) * C47697 +
           (C50988 + C50989 + C50990) * C153901) *
              C153625 * C2106 -
          ((C23996 * C10381 - C23997 * C10378 - C23996 * C10382 +
            C153885 * C10387 + C23994 * C10383 - C23995 * C10379 -
            C23994 * C10384 + C153914 * C10388 + C23992 * C10385 -
            C23993 * C10380 - C23992 * C10386 + C153933 * C10389) *
               C153901 +
           (C50990 + C50989 + C50988) * C47697 + C50981 * C47696) *
              C153625 * C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C47696 +
             C31290 * C47697 + C31291 * C153901) *
                C153936 +
            (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
               C1898 -
           (C54388 * C153898 + (C53056 + C53057 + C53058) * C153924 +
            (C31294 * C153901 + C31291 * C47697 + C31290 * C47696) * C153936) *
               C153601) *
              C153521 * C1093 +
          (((C31295 * C47696 + C31296 * C47697 + C31297 * C153901) * C153936 +
            (C53059 + C53060 + C53061) * C153924 +
            (C53062 + C53063 + C53064) * C153898) *
               C153601 -
           (C52102 * C153898 + (C52092 + C52091 + C52090) * C153924 +
            (C31296 * C153901 + C31295 * C47697 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C47696) *
                C153936) *
               C1898) *
              C153521 * C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C47696 +
             C31782 * C47697 + C31783 * C153901) *
                C153936 +
            (C52539 + C52540 + C52541) * C153924 +
            (C52542 + C52543 + C52544) * C153898) *
               C1898 -
           (((C28212 * C6185 - C28213 * C6179 - C28212 * C6186 +
              C153462 * C6197) *
                 C153901 +
             C31547 * C47697 + C31546 * C47696) *
                C153898 +
            ((C28212 * C6191 - C28213 * C6182 - C28212 * C6192 +
              C153462 * C6200) *
                 C153901 +
             C31545 * C47697 + C31544 * C47696) *
                C153924 +
            ((C28212 * C2117 - C28213 * C2110 - C28212 * C2118 +
              C153462 * C2125) *
                 C153901 +
             C31783 * C47697 + C31782 * C47696) *
                C153936) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C47696 +
             C31290 * C47697 + C31291 * C153901) *
                C153936 +
            (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
               C1898 -
           (C54388 * C153898 + (C53056 + C53057 + C53058) * C153924 +
            (C31294 * C153901 + C31291 * C47697 + C31290 * C47696) * C153936) *
               C153601) *
              C298 +
          (((C53058 + C53057 + C53056) * C153936 +
            (C53055 + C53054 + C53053) * C153924 +
            (C54385 + C54386 + C54387) * C153898) *
               C153601 -
           (C53433 * C153898 + (C52086 + C52085 + C52084) * C153924 +
            (C52083 + C52082 + C52081) * C153936) *
               C1898) *
              C299 +
          ((C52101 * C153936 + (C52089 + C52088 + C52087) * C153924 +
            (C53430 + C53431 + C53432) * C153898) *
               C1898 -
           (((C28212 * C30184 - C28213 * C30182 - C28212 * C30185 +
              C153462 * C30188) *
                 C153901 +
             C29434 * C47697 + C29049 * C47696) *
                C153898 +
            (C54387 + C54386 + C54385) * C153924 + C54388 * C153936) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C47696 +
            C31290 * C47697 + C31291 * C153901) *
               C153936 +
           (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
              C2104 -
          (C54388 * C153898 + (C53056 + C53057 + C53058) * C153924 +
           (C31294 * C153901 + C31291 * C47697 + C31290 * C47696) * C153936) *
              C2105 +
          ((C31291 * C47696 + C31294 * C47697 + C34035 * C153901) * C153936 +
           (C53652 + C53653 + C53654) * C153924 +
           (C53655 + C53656 + C53657) * C153898) *
              C2106 -
          (((C28212 * C34022 - C28213 * C34020 - C28212 * C34023 +
             C153462 * C34026) *
                C153901 +
            C32704 * C47697 + C31292 * C47696) *
               C153898 +
           ((C28212 * C34024 - C28213 * C34021 - C28212 * C34025 +
             C153462 * C34027) *
                C153901 +
            C32703 * C47697 + C31293 * C47696) *
               C153924 +
           ((C28212 * C10385 - C28213 * C10380 - C28212 * C10386 +
             C153462 * C10389) *
                C153901 +
            C34035 * C47697 + C31294 * C47696) *
               C153936) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C55778 +
            C31290 * C55779 + C31291 * C55780 + C31294 * C55781 +
            C34035 * C55782) *
               C153625 * C1898 -
           (C56054 * C55782 + C34035 * C55781 + C31294 * C55780 +
            C31291 * C55779 + C31290 * C55778) *
               C153625 * C153601) *
              C153521 * C1093 +
          ((C31295 * C55778 + C31296 * C55779 + C31297 * C55780 +
            C56055 * C55781 + C56056 * C55782) *
               C153625 * C153601 -
           (C56055 * C55782 + C31297 * C55781 + C31296 * C55780 +
            C31295 * C55779 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C55778) *
               C153625 * C1898) *
              C153521 * C1094 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C55778 +
            C31782 * C55779 + C31783 * C55780 + C56313 * C55781 +
            C56314 * C55782) *
               C153625 * C1898 -
           ((C28212 * C10381 - C28213 * C10378 - C28212 * C10382 +
             C153462 * C10387) *
                C55782 +
            C56314 * C55781 + C56313 * C55780 + C31783 * C55779 +
            C31782 * C55778) *
               C153625 * C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C55778 +
            C31290 * C55779 + C31291 * C55780 + C31294 * C55781 +
            C34035 * C55782) *
               C153625 * C1898 -
           (C56054 * C55782 + C34035 * C55781 + C31294 * C55780 +
            C31291 * C55779 + C31290 * C55778) *
               C153625 * C153601) *
              C298 +
          ((C29052 * C55778 + C29431 * C55779 + C31293 * C55780 +
            C32703 * C55781 + C56824 * C55782) *
               C153625 * C153601 -
           (C32703 * C55782 + C31293 * C55781 + C29431 * C55780 +
            C29052 * C55779 + C28405 * C55778) *
               C153625 * C1898) *
              C299 +
          ((C28406 * C55778 + C29051 * C55779 + C29432 * C55780 +
            C31292 * C55781 + C32704 * C55782) *
               C153625 * C1898 -
           ((C28212 * C34022 - C28213 * C34020 - C28212 * C34023 +
             C153462 * C34026) *
                C55782 +
            C32704 * C55781 + C31292 * C55780 + C29432 * C55779 +
            C29051 * C55778) *
               C153625 * C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
               C55778 +
           C31290 * C55779 + C31291 * C55780 + C31294 * C55781 +
           C34035 * C55782) *
              C153625 * C2104 -
          (C56054 * C55782 + C34035 * C55781 + C31294 * C55780 +
           C31291 * C55779 + C31290 * C55778) *
              C153625 * C2105 +
          (C31291 * C55778 + C31294 * C55779 + C34035 * C55780 +
           C56054 * C55781 + C57567 * C55782) *
              C153625 * C2106 -
          ((C28212 * C57557 - C28213 * C57556 - C28212 * C57558 +
            C153462 * C57559) *
               C55782 +
           C57567 * C55781 + C56054 * C55780 + C34035 * C55779 +
           C31294 * C55778) *
              C153625 * C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
                C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
                C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
                C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
                C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                   C153637 * C153625 * C153921 -
               (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
                C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
                C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
                C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
                C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
                   C153637 * C153625 * C153922 +
               (C134 * C498 - C135 * C481 - C134 * C499 + C121 * C517 +
                C136 * C500 - C137 * C482 - C136 * C501 + C122 * C518 +
                C138 * C502 - C139 * C483 - C138 * C503 + C123 * C519 +
                C140 * C504 - C141 * C484 - C140 * C505 + C124 * C520 +
                C142 * C506 - C143 * C485 - C142 * C507 + C125 * C521) *
                   C153637 * C153625 * C2414) *
                  C153521 * C153840 +
              ((C134 * C494 - C135 * C479 - C134 * C495 + C121 * C515 +
                C136 * C492 - C137 * C478 - C136 * C493 + C122 * C514 +
                C138 * C490 - C139 * C477 - C138 * C491 + C123 * C513 +
                C140 * C488 - C141 * C476 - C140 * C489 + C124 * C512 +
                C142 * C508 - C143 * C486 - C142 * C509 + C125 * C522) *
                   C153637 * C153625 * C153922 -
               (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
                C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
                C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
                C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
                C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
                   C153637 * C153625 * C153921 -
               (C142 * C510 - C143 * C487 - C142 * C511 + C125 * C523 +
                C140 * C506 - C141 * C485 - C140 * C507 + C124 * C521 +
                C138 * C504 - C139 * C484 - C138 * C505 + C123 * C520 +
                C136 * C502 - C137 * C483 - C136 * C503 + C122 * C519 +
                C134 * C500 - C135 * C482 - C134 * C501 + C121 * C518) *
                   C153637 * C153625 * C2414) *
                  C153521 * C153508) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
                 C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
                 C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                    C153637 * C153936 +
                (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
                   C153921 -
               (C5591 * C153898 + (C4155 + C4156 + C4157) * C153637 * C153924 +
                (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
                 C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
                 C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                    C153637 * C153936) *
                   C153922 +
               ((C2689 * C498 - C2690 * C481 - C2689 * C499 + C2683 * C517 +
                 C2691 * C500 - C2692 * C482 - C2691 * C501 + C2684 * C518 +
                 C2693 * C502 - C2694 * C483 - C2693 * C503 + C153885 * C519) *
                    C153637 * C153936 +
                (C4830 + C4831 + C4832) * C153637 * C153924 +
                (C4833 + C4834 + C4835) * C153637 * C153898) *
                   C2414) *
                  C153521 * C153840 +
              (((C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515 +
                 C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
                 C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513) *
                    C153637 * C153936 +
                (C4158 + C4159 + C4160) * C153637 * C153924 +
                (C4161 + C4162 + C4163) * C153637 * C153898) *
                   C153922 -
               (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
                (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
                 C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
                 C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                    C153637 * C153936) *
                   C153921 -
               ((C2693 * C3289 - C2694 * C3282 - C2693 * C3290 +
                 C153885 * C3294 + C2691 * C3287 - C2692 * C3281 -
                 C2691 * C3288 + C2684 * C3293 + C2689 * C3285 - C2690 * C3280 -
                 C2689 * C3286 + C2683 * C3292) *
                    C153637 * C153898 +
                (C2693 * C1332 - C2694 * C1326 - C2693 * C1333 +
                 C153885 * C1341 + C2691 * C1334 - C2692 * C1327 -
                 C2691 * C1335 + C2684 * C1342 + C2689 * C1336 - C2690 * C1328 -
                 C2689 * C1337 + C2683 * C1343) *
                    C153637 * C153924 +
                (C2693 * C504 - C2694 * C484 - C2693 * C505 + C153885 * C520 +
                 C2691 * C502 - C2692 * C483 - C2691 * C503 + C2684 * C519 +
                 C2689 * C500 - C2690 * C482 - C2689 * C501 + C2683 * C518) *
                    C153637 * C153936) *
                   C2414) *
                  C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153937 +
            (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
               C153625 * C153921 -
           (C10404 * C153901 + (C7644 + C7643 + C7642) * C153926 +
            (C7641 + C7640 + C7639) * C153937) *
               C153625 * C153922 +
           (C7659 * C153937 + (C7647 + C7646 + C7645) * C153926 +
            (C10411 + C10412 + C10413) * C153901) *
               C153625 * C2414) *
              C153521 * C153840 +
          (((C7648 + C7649 + C7650) * C153937 +
            (C7651 + C7652 + C7653) * C153926 +
            (C7654 + C7655 + C7656) * C153901) *
               C153625 * C153922 -
           (C7660 * C153901 + (C7650 + C7649 + C7648) * C153926 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153937) *
               C153625 * C153921 -
           ((C2693 * C7524 - C2694 * C7517 - C2693 * C7525 + C153885 * C7529 +
             C2691 * C7522 - C2692 * C7516 - C2691 * C7523 + C2684 * C7528 +
             C2689 * C7520 - C2690 * C7515 - C2689 * C7521 + C2683 * C7527) *
                C153901 +
            (C7656 + C7655 + C7654) * C153926 + C7660 * C153937) *
               C153625 * C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153921 -
           (C26810 * C153898 + (C25410 + C25411 + C25412) * C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C153922 +
           ((C23992 * C498 - C23993 * C481 - C23992 * C499 + C153933 * C517 +
             C23994 * C500 - C23995 * C482 - C23994 * C501 + C153914 * C518 +
             C23996 * C502 - C23997 * C483 - C23996 * C503 + C153885 * C519) *
                C153637 * C23989 +
            (C26061 + C26062 + C26063) * C153637 * C23990 +
            (C26064 + C26065 + C26066) * C153637 * C153898) *
               C2414) *
              C153521 * C153840 +
          (((C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515 +
             C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
             C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513) *
                C153637 * C23989 +
            (C25413 + C25414 + C25415) * C153637 * C23990 +
            (C25416 + C25417 + C25418) * C153637 * C153898) *
               C153922 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C153921 -
           ((C23996 * C3289 - C23997 * C3282 - C23996 * C3290 +
             C153885 * C3294 + C23994 * C3287 - C23995 * C3281 -
             C23994 * C3288 + C153914 * C3293 + C23992 * C3285 -
             C23993 * C3280 - C23992 * C3286 + C153933 * C3292) *
                C153637 * C153898 +
            (C23996 * C1332 - C23997 * C1326 - C23996 * C1333 +
             C153885 * C1341 + C23994 * C1334 - C23995 * C1327 -
             C23994 * C1335 + C153914 * C1342 + C23992 * C1336 -
             C23993 * C1328 - C23992 * C1337 + C153933 * C1343) *
                C153637 * C23990 +
            (C23996 * C504 - C23997 * C484 - C23996 * C505 + C153885 * C520 +
             C23994 * C502 - C23995 * C483 - C23994 * C503 + C153914 * C519 +
             C23992 * C500 - C23993 * C482 - C23992 * C501 + C153933 * C518) *
                C153637 * C23989) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153921 -
           (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
            C29060 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C153922 +
           ((C28212 * C498 - C28213 * C481 - C28212 * C499 + C153462 * C517) *
                C153637 * C28207 +
            C29435 * C28208 + C29436 * C28209 + C29437 * C28210 +
            C29438 * C28211) *
               C2414) *
              C153521 * C153840 +
          (((C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                C153637 * C28207 +
            C29061 * C28208 + C29062 * C28209 + C29063 * C28210 +
            C29064 * C28211) *
               C153922 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C153921 -
           ((C28212 * C28550 - C28213 * C28547 - C28212 * C28551 +
             C153462 * C28553) *
                C153637 * C28211 +
            (C28212 * C4786 - C28213 * C4782 - C28212 * C4787 +
             C153462 * C4791) *
                C153637 * C28210 +
            (C28212 * C3285 - C28213 * C3280 - C28212 * C3286 +
             C153462 * C3292) *
                C153637 * C28209 +
            (C28212 * C1336 - C28213 * C1328 - C28212 * C1337 +
             C153462 * C1343) *
                C153637 * C28208 +
            (C28212 * C500 - C28213 * C482 - C28212 * C501 + C153462 * C518) *
                C153637 * C28207) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153937 +
             C31290 * C153926 + C31291 * C153901) *
                C23989 +
            (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
               C153921 -
           (C33438 * C153898 + (C32081 + C32082 + C32083) * C23990 +
            (C31294 * C153901 + C31291 * C153926 + C31290 * C153937) * C23989) *
               C153922 +
           ((C31291 * C153937 + C31294 * C153926 + C34035 * C153901) * C23989 +
            (C32681 + C32682 + C32706) * C23990 +
            (C32687 + C32688 + C32707) * C153898) *
               C2414) *
              C153521 * C153840 +
          (((C31295 * C153937 + C31296 * C153926 + C31297 * C153901) * C23989 +
            (C32084 + C32085 + C32086) * C23990 +
            (C32087 + C32088 + C32089) * C153898) *
               C153922 -
           (C31003 * C153898 + (C31000 + C30971 + C30970) * C23990 +
            (C31296 * C153901 + C31295 * C153926 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153937) *
                C23989) *
               C153921 -
           (((C28212 * C31225 - C28213 * C31222 - C28212 * C31226 +
              C153462 * C31228) *
                 C153901 +
             C31299 * C153926 + C30998 * C153937) *
                C153898 +
            ((C28212 * C9040 - C28213 * C9036 - C28212 * C9041 +
              C153462 * C9045) *
                 C153901 +
             C31298 * C153926 + C30997 * C153937) *
                C23990 +
            ((C28212 * C7520 - C28213 * C7515 - C28212 * C7521 +
              C153462 * C7527) *
                 C153901 +
             C31297 * C153926 + C31296 * C153937) *
                C23989) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C47696 +
            (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
               C153625 * C153921 -
           (C50981 * C153901 + (C48249 + C48248 + C48247) * C47697 +
            (C48246 + C48245 + C48244) * C47696) *
               C153625 * C153922 +
           (C48264 * C47696 + (C48252 + C48251 + C48250) * C47697 +
            (C50988 + C50989 + C50990) * C153901) *
               C153625 * C2414) *
              C153521 * C153840 +
          (((C48253 + C48254 + C48255) * C47696 +
            (C48256 + C48257 + C48258) * C47697 +
            (C48259 + C48260 + C48261) * C153901) *
               C153625 * C153922 -
           (C48265 * C153901 + (C48255 + C48254 + C48253) * C47697 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C47696) *
               C153625 * C153921 -
           ((C23996 * C7524 - C23997 * C7517 - C23996 * C7525 +
             C153885 * C7529 + C23994 * C7522 - C23995 * C7516 -
             C23994 * C7523 + C153914 * C7528 + C23992 * C7520 -
             C23993 * C7515 - C23992 * C7521 + C153933 * C7527) *
                C153901 +
            (C48261 + C48260 + C48259) * C47697 + C48265 * C47696) *
               C153625 * C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C47696 +
             C31290 * C47697 + C31291 * C153901) *
                C153936 +
            (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
               C153921 -
           (C54388 * C153898 + (C53056 + C53057 + C53058) * C153924 +
            (C31294 * C153901 + C31291 * C47697 + C31290 * C47696) * C153936) *
               C153922 +
           ((C31291 * C47696 + C31294 * C47697 + C34035 * C153901) * C153936 +
            (C53652 + C53653 + C53654) * C153924 +
            (C53655 + C53656 + C53657) * C153898) *
               C2414) *
              C153521 * C153840 +
          (((C31295 * C47696 + C31296 * C47697 + C31297 * C153901) * C153936 +
            (C53059 + C53060 + C53061) * C153924 +
            (C53062 + C53063 + C53064) * C153898) *
               C153922 -
           (C52102 * C153898 + (C52092 + C52091 + C52090) * C153924 +
            (C31296 * C153901 + C31295 * C47697 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C47696) *
                C153936) *
               C153921 -
           (((C28212 * C31225 - C28213 * C31222 - C28212 * C31226 +
              C153462 * C31228) *
                 C153901 +
             C31299 * C47697 + C30998 * C47696) *
                C153898 +
            ((C28212 * C9040 - C28213 * C9036 - C28212 * C9041 +
              C153462 * C9045) *
                 C153901 +
             C31298 * C47697 + C30997 * C47696) *
                C153924 +
            ((C28212 * C7520 - C28213 * C7515 - C28212 * C7521 +
              C153462 * C7527) *
                 C153901 +
             C31297 * C47697 + C31296 * C47696) *
                C153936) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C55778 +
            C31290 * C55779 + C31291 * C55780 + C31294 * C55781 +
            C34035 * C55782) *
               C153625 * C153921 -
           (C56054 * C55782 + C34035 * C55781 + C31294 * C55780 +
            C31291 * C55779 + C31290 * C55778) *
               C153625 * C153922 +
           (C31291 * C55778 + C31294 * C55779 + C34035 * C55780 +
            C56054 * C55781 + C57567 * C55782) *
               C153625 * C2414) *
              C153521 * C153840 +
          ((C31295 * C55778 + C31296 * C55779 + C31297 * C55780 +
            C56055 * C55781 + C56056 * C55782) *
               C153625 * C153922 -
           (C56055 * C55782 + C31297 * C55781 + C31296 * C55780 +
            C31295 * C55779 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C55778) *
               C153625 * C153921 -
           ((C28212 * C56031 - C28213 * C56028 - C28212 * C56032 +
             C153462 * C56034) *
                C55782 +
            C56056 * C55781 + C56055 * C55780 + C31297 * C55779 +
            C31296 * C55778) *
               C153625 * C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C1898 -
           (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
            C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
            C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
            C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
            C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
               C153637 * C153625 * C153601) *
              C153521 * C1093 +
          ((C134 * C494 - C135 * C479 - C134 * C495 + C121 * C515 +
            C136 * C492 - C137 * C478 - C136 * C493 + C122 * C514 +
            C138 * C490 - C139 * C477 - C138 * C491 + C123 * C513 +
            C140 * C488 - C141 * C476 - C140 * C489 + C124 * C512 +
            C142 * C508 - C143 * C486 - C142 * C509 + C125 * C522) *
               C153637 * C153625 * C153601 -
           (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
            C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
            C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
            C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
            C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
               C153637 * C153625 * C1898) *
              C153521 * C1094 +
          ((C134 * C156 - C135 * C146 - C134 * C157 + C121 * C170 +
            C136 * C158 - C137 * C147 - C136 * C159 + C122 * C171 +
            C138 * C160 - C139 * C148 - C138 * C161 + C123 * C172 +
            C140 * C162 - C141 * C149 - C140 * C163 + C124 * C173 +
            C142 * C164 - C143 * C150 - C142 * C165 + C125 * C174) *
               C153637 * C153625 * C1898 -
           (C142 * C780 - C143 * C779 - C142 * C781 + C125 * C782 +
            C140 * C508 - C141 * C486 - C140 * C509 + C124 * C522 +
            C138 * C488 - C139 * C476 - C138 * C489 + C123 * C512 +
            C136 * C490 - C137 * C477 - C136 * C491 + C122 * C513 +
            C134 * C492 - C135 * C478 - C134 * C493 + C121 * C514) *
               C153637 * C153625 * C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C1898 -
           (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
            C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
            C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
            C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
            C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
               C153637 * C153625 * C153601) *
              C298 +
          ((C134 * C951 - C135 * C945 - C134 * C952 + C121 * C963 +
            C136 * C953 - C137 * C946 - C136 * C954 + C122 * C964 +
            C138 * C955 - C139 * C947 - C138 * C956 + C123 * C965 +
            C140 * C957 - C141 * C948 - C140 * C958 + C124 * C966 +
            C142 * C959 - C143 * C949 - C142 * C960 + C125 * C967) *
               C153637 * C153625 * C153601 -
           (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
            C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
            C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
            C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
            C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
               C153637 * C153625 * C1898) *
              C299 +
          ((C134 * C325 - C135 * C308 - C134 * C326 + C121 * C344 +
            C136 * C327 - C137 * C309 - C136 * C328 + C122 * C345 +
            C138 * C329 - C139 * C310 - C138 * C330 + C123 * C346 +
            C140 * C331 - C141 * C311 - C140 * C332 + C124 * C347 +
            C142 * C333 - C143 * C312 - C142 * C334 + C125 * C348) *
               C153637 * C153625 * C1898 -
           (C142 * C1761 - C143 * C1756 - C142 * C1762 + C125 * C1771 +
            C140 * C1763 - C141 * C1757 - C140 * C1764 + C124 * C1772 +
            C138 * C1765 - C139 * C1758 - C138 * C1766 + C123 * C1773 +
            C136 * C1767 - C137 * C1759 - C136 * C1768 + C122 * C1774 +
            C134 * C1769 - C135 * C1760 - C134 * C1770 + C121 * C1775) *
               C153637 * C153625 * C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C1898 -
           (C5591 * C153898 + (C4155 + C4156 + C4157) * C153637 * C153924 +
            (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
             C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
             C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                C153637 * C153936) *
               C153601) *
              C153521 * C1093 +
          (((C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515 +
             C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
             C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513) *
                C153637 * C153936 +
            (C4158 + C4159 + C4160) * C153637 * C153924 +
            (C4161 + C4162 + C4163) * C153637 * C153898) *
               C153601 -
           (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153637 * C153936) *
               C1898) *
              C153521 * C1094 +
          (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
             C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
             C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                C153637 * C153936 +
            (C3550 + C3551 + C3552) * C153637 * C153924 +
            (C3553 + C3554 + C3555) * C153637 * C153898) *
               C1898 -
           ((C2693 * C1761 - C2694 * C1756 - C2693 * C1762 + C153885 * C1771 +
             C2691 * C1763 - C2692 * C1757 - C2691 * C1764 + C2684 * C1772 +
             C2689 * C1765 - C2690 * C1758 - C2689 * C1766 + C2683 * C1773) *
                C153637 * C153898 +
            (C2693 * C959 - C2694 * C949 - C2693 * C960 + C153885 * C967 +
             C2691 * C957 - C2692 * C948 - C2691 * C958 + C2684 * C966 +
             C2689 * C955 - C2690 * C947 - C2689 * C956 + C2683 * C965) *
                C153637 * C153924 +
            (C2693 * C488 - C2694 * C476 - C2693 * C489 + C153885 * C512 +
             C2691 * C490 - C2692 * C477 - C2691 * C491 + C2684 * C513 +
             C2689 * C492 - C2690 * C478 - C2689 * C493 + C2683 * C514) *
                C153637 * C153936) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C1898 -
           (C5591 * C153898 + (C4155 + C4156 + C4157) * C153637 * C153924 +
            (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
             C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
             C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                C153637 * C153936) *
               C153601) *
              C298 +
          (((C4157 + C4156 + C4155) * C153637 * C153936 +
            (C4154 + C4153 + C4152) * C153637 * C153924 +
            (C5595 + C5596 + C5597) * C153637 * C153898) *
               C153601 -
           (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
            (C3040 + C3039 + C3038) * C153637 * C153936) *
               C1898) *
              C299 +
          ((C3060 * C153936 + (C3046 + C3045 + C3044) * C153637 * C153924 +
            (C4561 + C4562 + C4563) * C153637 * C153898) *
               C1898 -
           ((C2693 * C5564 - C2694 * C5561 - C2693 * C5565 + C153885 * C5570 +
             C2691 * C5566 - C2692 * C5562 - C2691 * C5567 + C2684 * C5571 +
             C2689 * C5568 - C2690 * C5563 - C2689 * C5569 + C2683 * C5572) *
                C153637 * C153898 +
            (C5597 + C5596 + C5595) * C153637 * C153924 + C5591 * C153936) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153937 +
            (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
               C153625 * C1898 -
           ((C7645 + C7646 + C7647) * C153901 +
            (C7644 + C7643 + C7642) * C153926 +
            (C7641 + C7640 + C7639) * C153937) *
               C153625 * C153601) *
              C153521 * C1093 +
          (((C7648 + C7649 + C7650) * C153937 +
            (C7651 + C7652 + C7653) * C153926 +
            (C7654 + C7655 + C7656) * C153901) *
               C153625 * C153601 -
           (C7660 * C153901 + (C7650 + C7649 + C7648) * C153926 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153937) *
               C153625 * C1898) *
              C153521 * C1094 +
          (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
             C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
             C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                C153937 +
            (C8133 + C8134 + C8135) * C153926 +
            (C8136 + C8137 + C8138) * C153901) *
               C153625 * C1898 -
           ((C2693 * C2113 - C2694 * C2108 - C2693 * C2114 + C153885 * C2123 +
             C2691 * C2115 - C2692 * C2109 - C2691 * C2116 + C2684 * C2124 +
             C2689 * C2117 - C2690 * C2110 - C2689 * C2118 + C2683 * C2125) *
                C153901 +
            (C8138 + C8137 + C8136) * C153926 +
            (C8135 + C8134 + C8133) * C153937) *
               C153625 * C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153937 +
            (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
               C153625 * C1898 -
           ((C7645 + C7646 + C7647) * C153901 +
            (C7644 + C7643 + C7642) * C153926 +
            (C7641 + C7640 + C7639) * C153937) *
               C153625 * C153601) *
              C298 +
          (((C4157 + C4156 + C4155) * C153937 +
            (C4830 + C4831 + C4832) * C153926 +
            (C9068 + C9069 + C9070) * C153901) *
               C153625 * C153601 -
           (C9064 * C153901 + (C4155 + C4156 + C4157) * C153926 +
            (C3040 + C3039 + C3038) * C153937) *
               C153625 * C1898) *
              C299 +
          ((C3058 * C153937 + (C4154 + C4153 + C4152) * C153926 +
            (C4833 + C4834 + C4835) * C153901) *
               C153625 * C1898 -
           ((C2693 * C6185 - C2694 * C6179 - C2693 * C6186 + C153885 * C6197 +
             C2691 * C6187 - C2692 * C6180 - C2691 * C6188 + C2684 * C6198 +
             C2689 * C6189 - C2690 * C6181 - C2689 * C6190 + C2683 * C6199) *
                C153901 +
            (C4835 + C4834 + C4833) * C153926 + C5587 * C153937) *
               C153625 * C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C1898 -
           (C26810 * C153898 + (C25410 + C25411 + C25412) * C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C153601) *
              C153521 * C1093 +
          (((C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515 +
             C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
             C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513) *
                C153637 * C23989 +
            (C25413 + C25414 + C25415) * C153637 * C23990 +
            (C25416 + C25417 + C25418) * C153637 * C153898) *
               C153601 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C1898) *
              C153521 * C1094 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C153637 * C23989 +
            (C24821 + C24822 + C24823) * C153637 * C23990 +
            (C24824 + C24825 + C24826) * C153637 * C153898) *
               C1898 -
           ((C23996 * C1761 - C23997 * C1756 - C23996 * C1762 +
             C153885 * C1771 + C23994 * C1763 - C23995 * C1757 -
             C23994 * C1764 + C153914 * C1772 + C23992 * C1765 -
             C23993 * C1758 - C23992 * C1766 + C153933 * C1773) *
                C153637 * C153898 +
            (C23996 * C959 - C23997 * C949 - C23996 * C960 + C153885 * C967 +
             C23994 * C957 - C23995 * C948 - C23994 * C958 + C153914 * C966 +
             C23992 * C955 - C23993 * C947 - C23992 * C956 + C153933 * C965) *
                C153637 * C23990 +
            (C23996 * C488 - C23997 * C476 - C23996 * C489 + C153885 * C512 +
             C23994 * C490 - C23995 * C477 - C23994 * C491 + C153914 * C513 +
             C23992 * C492 - C23993 * C478 - C23992 * C493 + C153933 * C514) *
                C153637 * C23989) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C1898 -
           (C26810 * C153898 + (C25410 + C25411 + C25412) * C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C153601) *
              C298 +
          (((C25412 + C25411 + C25410) * C153637 * C23989 +
            (C25409 + C25408 + C25407) * C153637 * C23990 +
            (C26814 + C26815 + C26816) * C153637 * C153898) *
               C153601 -
           (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C1898) *
              C299 +
          ((C24347 * C23989 + (C24333 + C24332 + C24331) * C153637 * C23990 +
            (C25804 + C25805 + C25806) * C153637 * C153898) *
               C1898 -
           ((C23996 * C5564 - C23997 * C5561 - C23996 * C5565 +
             C153885 * C5570 + C23994 * C5566 - C23995 * C5562 -
             C23994 * C5567 + C153914 * C5571 + C23992 * C5568 -
             C23993 * C5563 - C23992 * C5569 + C153933 * C5572) *
                C153637 * C153898 +
            (C26816 + C26815 + C26814) * C153637 * C23990 + C26810 * C23989) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C1898 -
           (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
            C29060 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C153601) *
              C153521 * C1093 +
          (((C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                C153637 * C28207 +
            C29061 * C28208 + C29062 * C28209 + C29063 * C28210 +
            C29064 * C28211) *
               C153601 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C1898) *
              C153521 * C1094 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C153637 * C28207 +
            C28705 * C28208 + C28706 * C28209 + C28707 * C28210 +
            C28708 * C28211) *
               C1898 -
           ((C28212 * C5564 - C28213 * C5561 - C28212 * C5565 +
             C153462 * C5570) *
                C153637 * C28211 +
            (C28212 * C4071 - C28213 * C4065 - C28212 * C4072 +
             C153462 * C4077) *
                C153637 * C28210 +
            (C28212 * C1765 - C28213 * C1758 - C28212 * C1766 +
             C153462 * C1773) *
                C153637 * C28209 +
            (C28212 * C955 - C28213 * C947 - C28212 * C956 + C153462 * C965) *
                C153637 * C28208 +
            (C28212 * C492 - C28213 * C478 - C28212 * C493 + C153462 * C514) *
                C153637 * C28207) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C1898 -
           (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
            C29060 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C153601) *
              C298 +
          ((C29060 * C28207 + C29059 * C28208 + C29058 * C28209 +
            C29057 * C28210 + C29856 * C28211) *
               C153601 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C1898) *
              C299 +
          ((C28416 * C28207 + C28417 * C28208 + C28418 * C28209 +
            C28419 * C28210 + C29280 * C28211) *
               C1898 -
           ((C28212 * C29845 - C28213 * C29844 - C28212 * C29846 +
             C153462 * C29847) *
                C153637 * C28211 +
            C29856 * C28210 + C29057 * C28209 + C29058 * C28208 +
            C29059 * C28207) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153937 +
             C31290 * C153926 + C31291 * C153901) *
                C23989 +
            (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
               C1898 -
           (C33438 * C153898 + (C32081 + C32082 + C32083) * C23990 +
            (C31294 * C153901 + C31291 * C153926 + C31290 * C153937) * C23989) *
               C153601) *
              C153521 * C1093 +
          (((C31295 * C153937 + C31296 * C153926 + C31297 * C153901) * C23989 +
            (C32084 + C32085 + C32086) * C23990 +
            (C32087 + C32088 + C32089) * C153898) *
               C153601 -
           (C31003 * C153898 + (C31000 + C30971 + C30970) * C23990 +
            (C31296 * C153901 + C31295 * C153926 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153937) *
                C23989) *
               C1898) *
              C153521 * C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C153937 +
             C31782 * C153926 + C31783 * C153901) *
                C23989 +
            (C31518 + C31548 + C31549) * C23990 +
            (C31527 + C31550 + C31551) * C153898) *
               C1898 -
           (((C28212 * C6185 - C28213 * C6179 - C28212 * C6186 +
              C153462 * C6197) *
                 C153901 +
             C31547 * C153926 + C31546 * C153937) *
                C153898 +
            ((C28212 * C6191 - C28213 * C6182 - C28212 * C6192 +
              C153462 * C6200) *
                 C153901 +
             C31545 * C153926 + C31544 * C153937) *
                C23990 +
            ((C28212 * C2117 - C28213 * C2110 - C28212 * C2118 +
              C153462 * C2125) *
                 C153901 +
             C31783 * C153926 + C31782 * C153937) *
                C23989) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153937 +
             C31290 * C153926 + C31291 * C153901) *
                C23989 +
            (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
               C1898 -
           (C33438 * C153898 + (C32081 + C32082 + C32083) * C23990 +
            (C31294 * C153901 + C31291 * C153926 + C31290 * C153937) * C23989) *
               C153601) *
              C298 +
          (((C32083 + C32082 + C32081) * C23989 +
            (C32080 + C32079 + C32078) * C23990 +
            (C33435 + C33436 + C33437) * C153898) *
               C153601 -
           (C32458 * C153898 + (C30966 + C30965 + C30964) * C23990 +
            (C30963 + C30962 + C30961) * C23989) *
               C1898) *
              C299 +
          ((C30993 * C23989 + (C30969 + C30968 + C30967) * C23990 +
            (C32455 + C32456 + C32457) * C153898) *
               C1898 -
           (((C28212 * C30184 - C28213 * C30182 - C28212 * C30185 +
              C153462 * C30188) *
                 C153901 +
             C29434 * C153926 + C29049 * C153937) *
                C153898 +
            (C33437 + C33436 + C33435) * C23990 + C33438 * C23989) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C47696 +
            (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
               C153625 * C1898 -
           ((C48250 + C48251 + C48252) * C153901 +
            (C48249 + C48248 + C48247) * C47697 +
            (C48246 + C48245 + C48244) * C47696) *
               C153625 * C153601) *
              C153521 * C1093 +
          (((C48253 + C48254 + C48255) * C47696 +
            (C48256 + C48257 + C48258) * C47697 +
            (C48259 + C48260 + C48261) * C153901) *
               C153625 * C153601 -
           (C48265 * C153901 + (C48255 + C48254 + C48253) * C47697 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C47696) *
               C153625 * C1898) *
              C153521 * C1094 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C47696 +
            (C48738 + C48739 + C48740) * C47697 +
            (C48741 + C48742 + C48743) * C153901) *
               C153625 * C1898 -
           ((C23996 * C2113 - C23997 * C2108 - C23996 * C2114 +
             C153885 * C2123 + C23994 * C2115 - C23995 * C2109 -
             C23994 * C2116 + C153914 * C2124 + C23992 * C2117 -
             C23993 * C2110 - C23992 * C2118 + C153933 * C2125) *
                C153901 +
            (C48743 + C48742 + C48741) * C47697 +
            (C48740 + C48739 + C48738) * C47696) *
               C153625 * C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C47696 +
            (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
               C153625 * C1898 -
           ((C48250 + C48251 + C48252) * C153901 +
            (C48249 + C48248 + C48247) * C47697 +
            (C48246 + C48245 + C48244) * C47696) *
               C153625 * C153601) *
              C298 +
          (((C25412 + C25411 + C25410) * C47696 +
            (C26061 + C26062 + C26063) * C47697 +
            (C49657 + C49658 + C49659) * C153901) *
               C153625 * C153601 -
           (C49653 * C153901 + (C25410 + C25411 + C25412) * C47697 +
            (C24327 + C24326 + C24325) * C47696) *
               C153625 * C1898) *
              C299 +
          ((C24345 * C47696 + (C25409 + C25408 + C25407) * C47697 +
            (C26064 + C26065 + C26066) * C153901) *
               C153625 * C1898 -
           ((C23996 * C6185 - C23997 * C6179 - C23996 * C6186 +
             C153885 * C6197 + C23994 * C6187 - C23995 * C6180 -
             C23994 * C6188 + C153914 * C6198 + C23992 * C6189 -
             C23993 * C6181 - C23992 * C6190 + C153933 * C6199) *
                C153901 +
            (C26066 + C26065 + C26064) * C47697 + C26806 * C47696) *
               C153625 * C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C47696 +
             C31290 * C47697 + C31291 * C153901) *
                C153936 +
            (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
               C1898 -
           (C54388 * C153898 + (C53056 + C53057 + C53058) * C153924 +
            (C31294 * C153901 + C31291 * C47697 + C31290 * C47696) * C153936) *
               C153601) *
              C153521 * C1093 +
          (((C31295 * C47696 + C31296 * C47697 + C31297 * C153901) * C153936 +
            (C53059 + C53060 + C53061) * C153924 +
            (C53062 + C53063 + C53064) * C153898) *
               C153601 -
           (C52102 * C153898 + (C52092 + C52091 + C52090) * C153924 +
            (C31296 * C153901 + C31295 * C47697 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C47696) *
                C153936) *
               C1898) *
              C153521 * C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C47696 +
             C31782 * C47697 + C31783 * C153901) *
                C153936 +
            (C52539 + C52540 + C52541) * C153924 +
            (C52542 + C52543 + C52544) * C153898) *
               C1898 -
           (((C28212 * C6185 - C28213 * C6179 - C28212 * C6186 +
              C153462 * C6197) *
                 C153901 +
             C31547 * C47697 + C31546 * C47696) *
                C153898 +
            ((C28212 * C6191 - C28213 * C6182 - C28212 * C6192 +
              C153462 * C6200) *
                 C153901 +
             C31545 * C47697 + C31544 * C47696) *
                C153924 +
            ((C28212 * C2117 - C28213 * C2110 - C28212 * C2118 +
              C153462 * C2125) *
                 C153901 +
             C31783 * C47697 + C31782 * C47696) *
                C153936) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C47696 +
             C31290 * C47697 + C31291 * C153901) *
                C153936 +
            (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
               C1898 -
           (C54388 * C153898 + (C53056 + C53057 + C53058) * C153924 +
            (C31294 * C153901 + C31291 * C47697 + C31290 * C47696) * C153936) *
               C153601) *
              C298 +
          (((C53058 + C53057 + C53056) * C153936 +
            (C53055 + C53054 + C53053) * C153924 +
            (C54385 + C54386 + C54387) * C153898) *
               C153601 -
           (C53433 * C153898 + (C52086 + C52085 + C52084) * C153924 +
            (C52083 + C52082 + C52081) * C153936) *
               C1898) *
              C299 +
          ((C52101 * C153936 + (C52089 + C52088 + C52087) * C153924 +
            (C53430 + C53431 + C53432) * C153898) *
               C1898 -
           (((C28212 * C30184 - C28213 * C30182 - C28212 * C30185 +
              C153462 * C30188) *
                 C153901 +
             C29434 * C47697 + C29049 * C47696) *
                C153898 +
            (C54387 + C54386 + C54385) * C153924 + C54388 * C153936) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C55778 +
            C31290 * C55779 + C31291 * C55780 + C31294 * C55781 +
            C34035 * C55782) *
               C153625 * C1898 -
           (C56054 * C55782 + C34035 * C55781 + C31294 * C55780 +
            C31291 * C55779 + C31290 * C55778) *
               C153625 * C153601) *
              C153521 * C1093 +
          ((C31295 * C55778 + C31296 * C55779 + C31297 * C55780 +
            C56055 * C55781 + C56056 * C55782) *
               C153625 * C153601 -
           (C56055 * C55782 + C31297 * C55781 + C31296 * C55780 +
            C31295 * C55779 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C55778) *
               C153625 * C1898) *
              C153521 * C1094 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C55778 +
            C31782 * C55779 + C31783 * C55780 + C56313 * C55781 +
            C56314 * C55782) *
               C153625 * C1898 -
           ((C28212 * C10381 - C28213 * C10378 - C28212 * C10382 +
             C153462 * C10387) *
                C55782 +
            C56314 * C55781 + C56313 * C55780 + C31783 * C55779 +
            C31782 * C55778) *
               C153625 * C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C55778 +
            C31290 * C55779 + C31291 * C55780 + C31294 * C55781 +
            C34035 * C55782) *
               C153625 * C1898 -
           (C56054 * C55782 + C34035 * C55781 + C31294 * C55780 +
            C31291 * C55779 + C31290 * C55778) *
               C153625 * C153601) *
              C298 +
          ((C29052 * C55778 + C29431 * C55779 + C31293 * C55780 +
            C32703 * C55781 + C56824 * C55782) *
               C153625 * C153601 -
           (C32703 * C55782 + C31293 * C55781 + C29431 * C55780 +
            C29052 * C55779 + C28405 * C55778) *
               C153625 * C1898) *
              C299 +
          ((C28406 * C55778 + C29051 * C55779 + C29432 * C55780 +
            C31292 * C55781 + C32704 * C55782) *
               C153625 * C1898 -
           ((C28212 * C34022 - C28213 * C34020 - C28212 * C34023 +
             C153462 * C34026) *
                C55782 +
            C32704 * C55781 + C31292 * C55780 + C29432 * C55779 +
            C29051 * C55778) *
               C153625 * C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153864 +
             (C39442 + C39443) * C153724) *
                C23989 +
            ((C35192 + C35193) * C153864 + (C36175 + C36174) * C153724) *
                C23990 +
            C39078 * C153898) *
               C153537 * C153848 -
           ((C37406 * C153724 + C36507 * C153864) * C153898 +
            (C37407 * C153724 + (C35195 + C35194) * C153864) * C23990 +
            ((C36174 + C36175) * C153724 + (C35193 + C35192) * C153864) *
                C23989) *
               C153537 * C153573) *
              C153917 +
          ((((C35200 + C35201) * C153864 + (C36176 + C36177) * C153724) *
                C23989 +
            ((C35202 + C35203) * C153864 + (C36178 + C36179) * C153724) *
                C23990 +
            ((C35204 + C35205) * C153864 + (C36180 + C36181) * C153724) *
                C153898) *
               C153537 * C153573 -
           (C39079 * C153898 +
            ((C36177 + C36176) * C153724 + (C35201 + C35200) * C153864) *
                C23990 +
            ((C39447 + C39446) * C153724 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153864) *
                C23989) *
               C153537 * C153848) *
              C153918 +
          ((((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
              C152081 * C158 - C34900 * C147 - C152081 * C159 +
              C153472 * C171) *
                 C153864 +
             (C152100 * C492 - C34898 * C478 - C152100 * C493 + C153829 * C514 +
              C152081 * C490 - C34900 * C477 - C152081 * C491 +
              C153472 * C513) *
                 C153724) *
                C23989 +
            ((C35640 + C35641) * C153864 + (C39768 + C39769) * C153724) *
                C23990 +
            ((C35642 + C35643) * C153864 + (C39770 + C39771) * C153724) *
                C153898) *
               C153537 * C153848 -
           (((C152081 * C4073 - C34900 * C4066 - C152081 * C4074 +
              C153472 * C4078 + C152100 * C4071 - C34898 * C4065 -
              C152100 * C4072 + C153829 * C4077) *
                 C153724 +
             (C35645 + C35644) * C153864) *
                C153898 +
            ((C39771 + C39770) * C153724 + (C35643 + C35642) * C153864) *
                C23990 +
            ((C39769 + C39768) * C153724 + (C35641 + C35640) * C153864) *
                C23989) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153864 +
            (C15542 + C15543 + C15544 + C15545) * C153724) *
               C153625 * C153537 * C153848 -
           ((C12506 + C12507 + C12508 + C12509) * C153724 +
            (C11577 + C11576 + C11575 + C11574) * C153864) *
               C153625 * C153537 * C153573) *
              C153917 +
          (((C11582 + C11583 + C11584 + C11585) * C153864 +
            (C12510 + C12511 + C12512 + C12513) * C153724) *
               C153625 * C153537 * C153573 -
           ((C15553 + C15552 + C15551 + C15550) * C153724 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153864) *
               C153625 * C153537 * C153848) *
              C153918 +
          (((C11275 * C156 - C11276 * C146 - C11275 * C157 + C11269 * C170 +
             C11277 * C158 - C11278 * C147 - C11277 * C159 + C11270 * C171 +
             C11279 * C160 - C11280 * C148 - C11279 * C161 + C11271 * C172 +
             C11281 * C162 - C11282 * C149 - C11281 * C163 + C153862 * C173) *
                C153864 +
            (C11275 * C492 - C11276 * C478 - C11275 * C493 + C11269 * C514 +
             C11277 * C490 - C11278 * C477 - C11277 * C491 + C11270 * C513 +
             C11279 * C488 - C11280 * C476 - C11279 * C489 + C11271 * C512 +
             C11281 * C508 - C11282 * C486 - C11281 * C509 + C153862 * C522) *
                C153724) *
               C153625 * C153537 * C153848 -
           ((C11281 * C961 - C11282 * C950 - C11281 * C962 + C153862 * C968 +
             C11279 * C959 - C11280 * C949 - C11279 * C960 + C11271 * C967 +
             C11277 * C957 - C11278 * C948 - C11277 * C958 + C11270 * C966 +
             C11275 * C955 - C11276 * C947 - C11275 * C956 + C11269 * C965) *
                C153724 +
            (C12005 + C12004 + C12003 + C12002) * C153864) *
               C153625 * C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C63414 +
            (C39442 + C39443) * C63415 + C58748 * C63416 + C63807 * C153878) *
               C153625 * C153537 * C153848 -
           (C60548 * C153878 + C41245 * C63416 + C40463 * C63415 +
            (C35193 + C35192) * C63414) *
               C153625 * C153537 * C153573) *
              C153917 +
          (((C35200 + C35201) * C63414 + C40464 * C63415 + C59773 * C63416 +
            (C58777 + C58778) * C153878) *
               C153625 * C153537 * C153573 -
           (C63816 * C153878 + C58766 * C63416 + (C39447 + C39446) * C63415 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C63414) *
               C153625 * C153537 * C153848) *
              C153918 +
          (((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
             C152081 * C158 - C34900 * C147 - C152081 * C159 + C153472 * C171) *
                C63414 +
            (C40074 + C40075) * C63415 + (C59385 + C59386) * C63416 +
            (C152100 * C2117 - C34898 * C2110 - C152100 * C2118 +
             C153829 * C2125 + C152081 * C2115 - C34900 * C2109 -
             C152081 * C2116 + C153472 * C2124) *
                C153878) *
               C153625 * C153537 * C153848 -
           ((C152081 * C8429 - C34900 * C8428 - C152081 * C8430 +
             C153472 * C8431 + C152100 * C6191 - C34898 * C6182 -
             C152100 * C6192 + C153829 * C6200) *
                C153878 +
            (C59082 + C59081) * C63416 + (C39769 + C39768) * C63415 +
            (C35641 + C35640) * C63414) *
               C153625 * C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C152100 * C152 - C34898 * C144 - C152100 * C153 +
               C153829 * C168 + C152081 * C154 - C34900 * C145 -
               C152081 * C155 + C153472 * C169) *
                  C153864 +
              (C39442 + C39443) * C153724) *
                 C23989 +
             ((C35192 + C35193) * C153864 + C40462 * C153724) * C23990 +
             C39078 * C153898) *
                C153849 -
            (((C36757 + C36756) * C153724 + C37407 * C153864) * C153898 +
             ((C36755 + C36754) * C153724 + C40463 * C153864) * C23990 +
             ((C39444 + C39445) * C153724 + (C39443 + C39442) * C153864) *
                 C23989) *
                C153601) *
               C153848 +
           (((C40462 * C153864 + (C36754 + C36755) * C153724) * C23989 +
             (C39073 * C153864 + (C36756 + C36757) * C153724) * C23990 +
             ((C36171 + C36170) * C153864 + (C36758 + C36759) * C153724) *
                 C153898) *
                C153601 -
            ((C37406 * C153724 + C36507 * C153864) * C153898 +
             (C37407 * C153724 + (C35195 + C35194) * C153864) * C23990 +
             (C40463 * C153724 + (C35193 + C35192) * C153864) * C23989) *
                C153849) *
               C153573) *
              C301 +
          (((((C39446 + C39447) * C153864 + (C39448 + C39449) * C153724) *
                 C23989 +
             (C40464 * C153864 + (C39450 + C39451) * C153724) * C23990 +
             (C40465 * C153864 + (C39452 + C39453) * C153724) * C153898) *
                C153601 -
            (C39079 * C153898 +
             (C40466 * C153724 + (C35201 + C35200) * C153864) * C23990 +
             ((C39447 + C39446) * C153724 +
              (C152081 * C156 - C34900 * C146 - C152081 * C157 +
               C153472 * C170 + C152100 * C154 - C34898 * C145 -
               C152100 * C155 + C153829 * C169) *
                  C153864) *
                 C23989) *
                C153849) *
               C153848 +
           ((((C35200 + C35201) * C153864 + C40464 * C153724) * C23989 +
             ((C35202 + C35203) * C153864 + C40465 * C153724) * C23990 +
             ((C35204 + C35205) * C153864 + (C36180 + C36181) * C153724) *
                 C153898) *
                C153849 -
            (((C152081 * C4784 - C34900 * C4781 - C152081 * C4785 +
               C153472 * C4790 + C152100 * C4786 - C34898 * C4782 -
               C152100 * C4787 + C153829 * C4791) *
                  C153724 +
              (C36181 + C36180) * C153864) *
                 C153898 +
             ((C39453 + C39452) * C153724 + C39074 * C153864) * C23990 +
             ((C39451 + C39450) * C153724 + C40466 * C153864) * C23989) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
              C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
              C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
              C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                 C153864 +
             (C15542 + C15543 + C15544 + C15545) * C153724) *
                C153625 * C153849 -
            ((C15546 + C15547 + C15548 + C15549) * C153724 +
             (C15545 + C15544 + C15543 + C15542) * C153864) *
                C153625 * C153601) *
               C153848 +
           (((C12509 + C12508 + C12507 + C12506) * C153864 +
             (C13084 + C13085 + C13086 + C13087) * C153724) *
                C153625 * C153601 -
            ((C12506 + C12507 + C12508 + C12509) * C153724 +
             (C11577 + C11576 + C11575 + C11574) * C153864) *
                C153625 * C153849) *
               C153573) *
              C301 +
          ((((C15550 + C15551 + C15552 + C15553) * C153864 +
             (C15554 + C15555 + C15556 + C15557) * C153724) *
                C153625 * C153601 -
            ((C15553 + C15552 + C15551 + C15550) * C153724 +
             (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
              C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
              C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
              C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                 C153864) *
                C153625 * C153849) *
               C153848 +
           (((C11582 + C11583 + C11584 + C11585) * C153864 +
             (C12510 + C12511 + C12512 + C12513) * C153724) *
                C153625 * C153849 -
            ((C11281 * C1330 - C11282 * C1325 - C11281 * C1331 +
              C153862 * C1340 + C11279 * C1332 - C11280 * C1326 -
              C11279 * C1333 + C11271 * C1341 + C11277 * C1334 -
              C11278 * C1327 - C11277 * C1335 + C11270 * C1342 +
              C11275 * C1336 - C11276 * C1328 - C11275 * C1337 +
              C11269 * C1343) *
                 C153724 +
             (C12513 + C12512 + C12511 + C12510) * C153864) *
                C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C63414 +
             (C39442 + C39443) * C63415 + C58748 * C63416 + C63807 * C153878) *
                C153625 * C153849 -
            ((C62318 + C62317) * C153878 + C62304 * C63416 +
             (C39444 + C39445) * C63415 + (C39443 + C39442) * C63414) *
                C153625 * C153601) *
               C153848 +
           ((C40462 * C63414 + C41246 * C63415 + C60549 * C63416 +
             (C60562 + C60563) * C153878) *
                C153625 * C153601 -
            (C60548 * C153878 + C41245 * C63416 + C40463 * C63415 +
             (C35193 + C35192) * C63414) *
                C153625 * C153849) *
               C153573) *
              C301 +
          ((((C39446 + C39447) * C63414 + (C39448 + C39449) * C63415 +
             (C58775 + C58776) * C63416 + (C63821 + C63822) * C153878) *
                C153625 * C153601 -
            (C63816 * C153878 + C58766 * C63416 + (C39447 + C39446) * C63415 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C63414) *
                C153625 * C153849) *
               C153848 +
           (((C35200 + C35201) * C63414 + C40464 * C63415 + C59773 * C63416 +
             (C58777 + C58778) * C153878) *
                C153625 * C153849 -
            ((C152081 * C9038 - C34900 * C9035 - C152081 * C9039 +
              C153472 * C9044 + C152100 * C9040 - C34898 * C9036 -
              C152100 * C9041 + C153829 * C9045) *
                 C153878 +
             (C58778 + C58777) * C63416 + C58765 * C63415 + C40466 * C63414) *
                C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
                C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
                C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
                C11281 * C158 - C11282 * C147 - C11281 * C159 +
                C153862 * C171) *
                   C153864 +
               (C11275 * C496 - C11276 * C480 - C11275 * C497 + C11269 * C516 +
                C11277 * C494 - C11278 * C479 - C11277 * C495 + C11270 * C515 +
                C11279 * C492 - C11280 * C478 - C11279 * C493 + C11271 * C514 +
                C11281 * C490 - C11282 * C477 - C11281 * C491 +
                C153862 * C513) *
                   C153724) *
                  C153625 * C153537 * C153521 * C130 -
              ((C11281 * C488 - C11282 * C476 - C11281 * C489 + C153862 * C512 +
                C11279 * C490 - C11280 * C477 - C11279 * C491 + C11271 * C513 +
                C11277 * C492 - C11278 * C478 - C11277 * C493 + C11270 * C514 +
                C11275 * C494 - C11276 * C479 - C11275 * C495 + C11269 * C515) *
                   C153724 +
               (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
                C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
                C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
                C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                   C153864) *
                  C153625 * C153537 * C153521 * C131 +
              ((C11275 * C156 - C11276 * C146 - C11275 * C157 + C11269 * C170 +
                C11277 * C158 - C11278 * C147 - C11277 * C159 + C11270 * C171 +
                C11279 * C160 - C11280 * C148 - C11279 * C161 + C11271 * C172 +
                C11281 * C162 - C11282 * C149 - C11281 * C163 +
                C153862 * C173) *
                   C153864 +
               (C11275 * C492 - C11276 * C478 - C11275 * C493 + C11269 * C514 +
                C11277 * C490 - C11278 * C477 - C11277 * C491 + C11270 * C513 +
                C11279 * C488 - C11280 * C476 - C11279 * C489 + C11271 * C512 +
                C11281 * C508 - C11282 * C486 - C11281 * C509 +
                C153862 * C522) *
                   C153724) *
                  C153625 * C153537 * C153521 * C132 -
              ((C11281 * C780 - C11282 * C779 - C11281 * C781 + C153862 * C782 +
                C11279 * C508 - C11280 * C486 - C11279 * C509 + C11271 * C522 +
                C11277 * C488 - C11278 * C476 - C11277 * C489 + C11270 * C512 +
                C11275 * C490 - C11276 * C477 - C11275 * C491 + C11269 * C513) *
                   C153724 +
               (C11281 * C164 - C11282 * C150 - C11281 * C165 + C153862 * C174 +
                C11279 * C162 - C11280 * C149 - C11279 * C163 + C11271 * C173 +
                C11277 * C160 - C11278 * C148 - C11277 * C161 + C11270 * C172 +
                C11275 * C158 - C11276 * C147 - C11275 * C159 + C11269 * C171) *
                   C153864) *
                  C153625 * C153537 * C153521 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
                 C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
                 C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
                 C11281 * C158 - C11282 * C147 - C11281 * C159 +
                 C153862 * C171) *
                    C153864 +
                (C11275 * C496 - C11276 * C480 - C11275 * C497 + C11269 * C516 +
                 C11277 * C494 - C11278 * C479 - C11277 * C495 + C11270 * C515 +
                 C11279 * C492 - C11280 * C478 - C11279 * C493 + C11271 * C514 +
                 C11281 * C490 - C11282 * C477 - C11281 * C491 +
                 C153862 * C513) *
                    C153724) *
                   C153625 * C153537 * C298 -
               ((C12506 + C12507 + C12508 + C12509) * C153724 +
                (C11577 + C11576 + C11575 + C11574) * C153864) *
                   C153625 * C153537 * C299 +
               ((C11581 + C11580 + C11579 + C11578) * C153864 +
                (C13758 + C13759 + C13760 + C13761) * C153724) *
                   C153625 * C153537 * C300) *
                  C301 +
              (((C11582 + C11583 + C11584 + C11585) * C153864 +
                (C12510 + C12511 + C12512 + C12513) * C153724) *
                   C153625 * C153537 * C299 -
               ((C11281 * C488 - C11282 * C476 - C11281 * C489 +
                 C153862 * C512 + C11279 * C490 - C11280 * C477 -
                 C11279 * C491 + C11271 * C513 + C11277 * C492 - C11278 * C478 -
                 C11277 * C493 + C11270 * C514 + C11275 * C494 - C11276 * C479 -
                 C11275 * C495 + C11269 * C515) *
                    C153724 +
                (C11281 * C160 - C11282 * C148 - C11281 * C161 +
                 C153862 * C172 + C11279 * C158 - C11280 * C147 -
                 C11279 * C159 + C11271 * C171 + C11277 * C156 - C11278 * C146 -
                 C11277 * C157 + C11270 * C170 + C11275 * C154 - C11276 * C145 -
                 C11275 * C155 + C11269 * C169) *
                    C153864) *
                   C153625 * C153537 * C298 -
               ((C11281 * C1761 - C11282 * C1756 - C11281 * C1762 +
                 C153862 * C1771 + C11279 * C1763 - C11280 * C1757 -
                 C11279 * C1764 + C11271 * C1772 + C11277 * C1765 -
                 C11278 * C1758 - C11277 * C1766 + C11270 * C1773 +
                 C11275 * C1767 - C11276 * C1759 - C11275 * C1768 +
                 C11269 * C1774) *
                    C153724 +
                (C11589 + C11588 + C11587 + C11586) * C153864) *
                   C153625 * C153537 * C300) *
                  C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153864 +
            (C15542 + C15543 + C15544 + C15545) * C153724) *
               C153625 * C473 -
           ((C15546 + C15547 + C15548 + C15549) * C153724 +
            (C15545 + C15544 + C15543 + C15542) * C153864) *
               C153625 * C474 +
           ((C15549 + C15548 + C15547 + C15546) * C153864 +
            (C11275 * C2121 - C11276 * C2112 - C11275 * C2122 + C11269 * C2127 +
             C11277 * C2119 - C11278 * C2111 - C11277 * C2120 + C11270 * C2126 +
             C11279 * C2117 - C11280 * C2110 - C11279 * C2118 + C11271 * C2125 +
             C11281 * C2115 - C11282 * C2109 - C11281 * C2116 +
             C153862 * C2124) *
                C153724) *
               C153625 * C475) *
              C153521 * C301 +
          (((C15550 + C15551 + C15552 + C15553) * C153864 +
            (C15554 + C15555 + C15556 + C15557) * C153724) *
               C153625 * C474 -
           ((C15553 + C15552 + C15551 + C15550) * C153724 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153864) *
               C153625 * C473 -
           ((C11281 * C2113 - C11282 * C2108 - C11281 * C2114 +
             C153862 * C2123 + C11279 * C2115 - C11280 * C2109 -
             C11279 * C2116 + C11271 * C2124 + C11277 * C2117 - C11278 * C2110 -
             C11277 * C2118 + C11270 * C2125 + C11275 * C2119 - C11276 * C2111 -
             C11275 * C2120 + C11269 * C2126) *
                C153724 +
            (C15557 + C15556 + C15555 + C15554) * C153864) *
               C153625 * C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153864 +
            (C152100 * C496 - C34898 * C480 - C152100 * C497 + C153829 * C516 +
             C152081 * C494 - C34900 * C479 - C152081 * C495 + C153472 * C515) *
                C153724) *
               C23989 +
           ((C35192 + C35193) * C153864 + (C36175 + C36174) * C153724) *
               C23990 +
           (C35208 * C153864 + (C36173 + C36172) * C153724) * C153898) *
              C153537 * C153521 * C130 -
          (((C36179 + C36178) * C153724 + C35211 * C153864) * C153898 +
           ((C36177 + C36176) * C153724 + (C35201 + C35200) * C153864) *
               C23990 +
           ((C152081 * C492 - C34900 * C478 - C152081 * C493 + C153472 * C514 +
             C152100 * C494 - C34898 * C479 - C152100 * C495 + C153829 * C515) *
                C153724 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C153864) *
               C23989) *
              C153537 * C153521 * C131 +
          (((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
             C152081 * C158 - C34900 * C147 - C152081 * C159 + C153472 * C171) *
                C153864 +
            (C152100 * C492 - C34898 * C478 - C152100 * C493 + C153829 * C514 +
             C152081 * C490 - C34900 * C477 - C152081 * C491 + C153472 * C513) *
                C153724) *
               C23989 +
           ((C35640 + C35641) * C153864 +
            (C152100 * C955 - C34898 * C947 - C152100 * C956 + C153829 * C965 +
             C152081 * C957 - C34900 * C948 - C152081 * C958 + C153472 * C966) *
                C153724) *
               C23990 +
           ((C35642 + C35643) * C153864 +
            (C152100 * C1765 - C34898 * C1758 - C152100 * C1766 +
             C153829 * C1773 + C152081 * C1763 - C34900 * C1757 -
             C152081 * C1764 + C153472 * C1772) *
                C153724) *
               C153898) *
              C153537 * C153521 * C132 -
          (((C152081 * C1761 - C34900 * C1756 - C152081 * C1762 +
             C153472 * C1771 + C152100 * C1763 - C34898 * C1757 -
             C152100 * C1764 + C153829 * C1772) *
                C153724 +
            (C152081 * C333 - C34900 * C312 - C152081 * C334 + C153472 * C348 +
             C152100 * C331 - C34898 * C311 - C152100 * C332 + C153829 * C347) *
                C153864) *
               C153898 +
           ((C152081 * C959 - C34900 * C949 - C152081 * C960 + C153472 * C967 +
             C152100 * C957 - C34898 * C948 - C152100 * C958 + C153829 * C966) *
                C153724 +
            (C152081 * C315 - C34900 * C303 - C152081 * C316 + C153472 * C339 +
             C152100 * C317 - C34898 * C304 - C152100 * C318 + C153829 * C340) *
                C153864) *
               C23990 +
           ((C152081 * C488 - C34900 * C476 - C152081 * C489 + C153472 * C512 +
             C152100 * C490 - C34898 * C477 - C152100 * C491 + C153829 * C513) *
                C153724 +
            (C152081 * C160 - C34900 * C148 - C152081 * C161 + C153472 * C172 +
             C152100 * C158 - C34898 * C147 - C152100 * C159 + C153829 * C171) *
                C153864) *
               C23989) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153864 +
             (C152100 * C496 - C34898 * C480 - C152100 * C497 + C153829 * C516 +
              C152081 * C494 - C34900 * C479 - C152081 * C495 +
              C153472 * C515) *
                 C153724) *
                C23989 +
            ((C35192 + C35193) * C153864 + (C36175 + C36174) * C153724) *
                C23990 +
            C39078 * C153898) *
               C153537 * C298 -
           ((C37406 * C153724 + C36507 * C153864) * C153898 +
            (C37407 * C153724 + (C35195 + C35194) * C153864) * C23990 +
            ((C36174 + C36175) * C153724 + (C35193 + C35192) * C153864) *
                C23989) *
               C153537 * C299 +
           (C39078 * C23989 +
            (C35209 * C153864 + (C36171 + C36170) * C153724) * C23990 +
            ((C35199 + C35198) * C153864 + (C37422 + C37423) * C153724) *
                C153898) *
               C153537 * C300) *
              C301 +
          ((((C35200 + C35201) * C153864 + (C36176 + C36177) * C153724) *
                C23989 +
            ((C35202 + C35203) * C153864 + (C36178 + C36179) * C153724) *
                C23990 +
            ((C35204 + C35205) * C153864 + (C36180 + C36181) * C153724) *
                C153898) *
               C153537 * C299 -
           (C39079 * C153898 +
            ((C36177 + C36176) * C153724 + (C35201 + C35200) * C153864) *
                C23990 +
            ((C152081 * C492 - C34900 * C478 - C152081 * C493 + C153472 * C514 +
              C152100 * C494 - C34898 * C479 - C152100 * C495 +
              C153829 * C515) *
                 C153724 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153864) *
                C23989) *
               C153537 * C298 -
           (((C152081 * C5564 - C34900 * C5561 - C152081 * C5565 +
              C153472 * C5570 + C152100 * C5566 - C34898 * C5562 -
              C152100 * C5567 + C153829 * C5571) *
                 C153724 +
             (C35207 + C35206) * C153864) *
                C153898 +
            ((C36181 + C36180) * C153724 + C35210 * C153864) * C23990 +
            C39079 * C23989) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153864 +
             (C39442 + C39443) * C153724) *
                C23989 +
            ((C35192 + C35193) * C153864 + (C36175 + C36174) * C153724) *
                C23990 +
            C39078 * C153898) *
               C473 -
           (((C36757 + C36756) * C153724 + C37407 * C153864) * C153898 +
            ((C36755 + C36754) * C153724 + (C36174 + C36175) * C153864) *
                C23990 +
            ((C39444 + C39445) * C153724 + (C39443 + C39442) * C153864) *
                C23989) *
               C474 +
           (((C39445 + C39444) * C153864 +
             (C152100 * C2121 - C34898 * C2112 - C152100 * C2122 +
              C153829 * C2127 + C152081 * C2119 - C34900 * C2111 -
              C152081 * C2120 + C153472 * C2126) *
                 C153724) *
                C23989 +
            ((C36754 + C36755) * C153864 +
             (C152100 * C6195 - C34898 * C6184 - C152100 * C6196 +
              C153829 * C6202 + C152081 * C6193 - C34900 * C6183 -
              C152081 * C6194 + C153472 * C6201) *
                 C153724) *
                C23990 +
            ((C36756 + C36757) * C153864 +
             (C152100 * C6189 - C34898 * C6181 - C152100 * C6190 +
              C153829 * C6199 + C152081 * C6187 - C34900 * C6180 -
              C152081 * C6188 + C153472 * C6198) *
                 C153724) *
                C153898) *
               C475) *
              C153521 * C301 +
          ((((C39446 + C39447) * C153864 + (C39448 + C39449) * C153724) *
                C23989 +
            ((C36176 + C36177) * C153864 + (C39450 + C39451) * C153724) *
                C23990 +
            ((C36178 + C36179) * C153864 + (C39452 + C39453) * C153724) *
                C153898) *
               C474 -
           (C39079 * C153898 +
            ((C36177 + C36176) * C153724 + (C35201 + C35200) * C153864) *
                C23990 +
            ((C39447 + C39446) * C153724 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153864) *
                C23989) *
               C473 -
           (((C152081 * C6185 - C34900 * C6179 - C152081 * C6186 +
              C153472 * C6197 + C152100 * C6187 - C34898 * C6180 -
              C152100 * C6188 + C153829 * C6198) *
                 C153724 +
             (C39453 + C39452) * C153864) *
                C153898 +
            ((C152081 * C6191 - C34900 * C6182 - C152081 * C6192 +
              C153472 * C6200 + C152100 * C6193 - C34898 * C6183 -
              C152100 * C6194 + C153829 * C6201) *
                 C153724 +
             (C39451 + C39450) * C153864) *
                C23990 +
            ((C152081 * C2117 - C34900 * C2110 - C152081 * C2118 +
              C153472 * C2125 + C152100 * C2119 - C34898 * C2111 -
              C152100 * C2120 + C153829 * C2126) *
                 C153724 +
             (C39449 + C39448) * C153864) *
                C23989) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
            C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
               C63414 +
           (C39442 + C39443) * C63415 + C58748 * C63416 +
           (C43032 + C43033) * C153878) *
              C153625 * C153537 * C153521 * C130 -
          ((C58776 + C58775) * C153878 + C58766 * C63416 +
           (C39447 + C39446) * C63415 +
           (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
            C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
               C63414) *
              C153625 * C153537 * C153521 * C131 +
          ((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
            C152081 * C158 - C34900 * C147 - C152081 * C159 + C153472 * C171) *
               C63414 +
           (C40074 + C40075) * C63415 + (C59385 + C59386) * C63416 +
           (C152100 * C2117 - C34898 * C2110 - C152100 * C2118 +
            C153829 * C2125 + C152081 * C2115 - C34900 * C2109 -
            C152081 * C2116 + C153472 * C2124) *
               C153878) *
              C153625 * C153537 * C153521 * C132 -
          ((C152081 * C2113 - C34900 * C2108 - C152081 * C2114 +
            C153472 * C2123 + C152100 * C2115 - C34898 * C2109 -
            C152100 * C2116 + C153829 * C2124) *
               C153878 +
           (C152081 * C506 - C34900 * C485 - C152081 * C507 + C153472 * C521 +
            C152100 * C504 - C34898 * C484 - C152100 * C505 + C153829 * C520) *
               C63416 +
           (C152081 * C488 - C34900 * C476 - C152081 * C489 + C153472 * C512 +
            C152100 * C490 - C34898 * C477 - C152100 * C491 + C153829 * C513) *
               C63415 +
           (C152081 * C160 - C34900 * C148 - C152081 * C161 + C153472 * C172 +
            C152100 * C158 - C34898 * C147 - C152100 * C159 + C153829 * C171) *
               C63414) *
              C153625 * C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C63414 +
            (C39442 + C39443) * C63415 + C58748 * C63416 +
            (C43032 + C43033) * C153878) *
               C153625 * C153537 * C298 -
           (C60548 * C153878 + C41245 * C63416 + C40463 * C63415 +
            (C35193 + C35192) * C63414) *
               C153625 * C153537 * C299 +
           (C35208 * C63414 + C39073 * C63415 + C41255 * C63416 +
            (C41274 + C41275) * C153878) *
               C153625 * C153537 * C300) *
              C301 +
          (((C35200 + C35201) * C63414 + C40464 * C63415 + C59773 * C63416 +
            (C58777 + C58778) * C153878) *
               C153625 * C153537 * C299 -
           ((C58776 + C58775) * C153878 + C58766 * C63416 +
            (C39447 + C39446) * C63415 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C63414) *
               C153625 * C153537 * C298 -
           ((C152081 * C6185 - C34900 * C6179 - C152081 * C6186 +
             C153472 * C6197 + C152100 * C6187 - C34898 * C6180 -
             C152100 * C6188 + C153829 * C6198) *
                C153878 +
            (C39453 + C39452) * C63416 + C39074 * C63415 + C35211 * C63414) *
               C153625 * C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C63414 +
            (C39442 + C39443) * C63415 + C58748 * C63416 + C63807 * C153878) *
               C153625 * C473 -
           ((C62318 + C62317) * C153878 + C62304 * C63416 +
            (C39444 + C39445) * C63415 + (C39443 + C39442) * C63414) *
               C153625 * C474 +
           (C58748 * C63414 + C63807 * C63415 + (C62317 + C62318) * C63416 +
            (C152100 * C10385 - C34898 * C10380 - C152100 * C10386 +
             C153829 * C10389 + C152081 * C10383 - C34900 * C10379 -
             C152081 * C10384 + C153472 * C10388) *
                C153878) *
               C153625 * C475) *
              C153521 * C301 +
          (((C39446 + C39447) * C63414 + (C39448 + C39449) * C63415 +
            (C58775 + C58776) * C63416 + (C63821 + C63822) * C153878) *
               C153625 * C474 -
           (C63816 * C153878 + C58766 * C63416 + (C39447 + C39446) * C63415 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C63414) *
               C153625 * C473 -
           ((C152081 * C10381 - C34900 * C10378 - C152081 * C10382 +
             C153472 * C10387 + C152100 * C10383 - C34898 * C10379 -
             C152100 * C10384 + C153829 * C10388) *
                C153878 +
            (C63822 + C63821) * C63416 + C63816 * C63415 + C58766 * C63414) *
               C153625 * C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153864 +
             (C39442 + C39443) * C153724) *
                C23989 +
            ((C35192 + C35193) * C153864 + (C36175 + C36174) * C153724) *
                C23990 +
            C39078 * C153898) *
               C153849 -
           (((C36757 + C36756) * C153724 + C37407 * C153864) * C153898 +
            ((C36755 + C36754) * C153724 + (C36174 + C36175) * C153864) *
                C23990 +
            ((C39444 + C39445) * C153724 + (C39443 + C39442) * C153864) *
                C23989) *
               C153601) *
              C153521 * C153917 +
          ((((C39446 + C39447) * C153864 + (C39448 + C39449) * C153724) *
                C23989 +
            ((C36176 + C36177) * C153864 + (C39450 + C39451) * C153724) *
                C23990 +
            ((C36178 + C36179) * C153864 + (C39452 + C39453) * C153724) *
                C153898) *
               C153601 -
           (C39079 * C153898 +
            ((C36177 + C36176) * C153724 + (C35201 + C35200) * C153864) *
                C23990 +
            ((C39447 + C39446) * C153724 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153864) *
                C23989) *
               C153849) *
              C153521 * C153918 +
          ((((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
              C152081 * C158 - C34900 * C147 - C152081 * C159 +
              C153472 * C171) *
                 C153864 +
             (C40074 + C40075) * C153724) *
                C23989 +
            ((C35640 + C35641) * C153864 + (C39768 + C39769) * C153724) *
                C23990 +
            ((C35642 + C35643) * C153864 + (C39770 + C39771) * C153724) *
                C153898) *
               C153849 -
           (((C152081 * C3289 - C34900 * C3282 - C152081 * C3290 +
              C153472 * C3294 + C152100 * C3287 - C34898 * C3281 -
              C152100 * C3288 + C153829 * C3293) *
                 C153724 +
             (C39771 + C39770) * C153864) *
                C153898 +
            ((C152081 * C1332 - C34900 * C1326 - C152081 * C1333 +
              C153472 * C1341 + C152100 * C1334 - C34898 * C1327 -
              C152100 * C1335 + C153829 * C1342) *
                 C153724 +
             (C39769 + C39768) * C153864) *
                C23990 +
            ((C152081 * C504 - C34900 * C484 - C152081 * C505 + C153472 * C520 +
              C152100 * C502 - C34898 * C483 - C152100 * C503 +
              C153829 * C519) *
                 C153724 +
             (C40075 + C40074) * C153864) *
                C23989) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153864 +
            (C15542 + C15543 + C15544 + C15545) * C153724) *
               C153625 * C153849 -
           ((C15546 + C15547 + C15548 + C15549) * C153724 +
            (C15545 + C15544 + C15543 + C15542) * C153864) *
               C153625 * C153601) *
              C153521 * C153917 +
          (((C15550 + C15551 + C15552 + C15553) * C153864 +
            (C15554 + C15555 + C15556 + C15557) * C153724) *
               C153625 * C153601 -
           ((C15553 + C15552 + C15551 + C15550) * C153724 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153864) *
               C153625 * C153849) *
              C153521 * C153918 +
          (((C11275 * C156 - C11276 * C146 - C11275 * C157 + C11269 * C170 +
             C11277 * C158 - C11278 * C147 - C11277 * C159 + C11270 * C171 +
             C11279 * C160 - C11280 * C148 - C11279 * C161 + C11271 * C172 +
             C11281 * C162 - C11282 * C149 - C11281 * C163 + C153862 * C173) *
                C153864 +
            (C15970 + C15971 + C15972 + C15973) * C153724) *
               C153625 * C153849 -
           ((C11281 * C510 - C11282 * C487 - C11281 * C511 + C153862 * C523 +
             C11279 * C506 - C11280 * C485 - C11279 * C507 + C11271 * C521 +
             C11277 * C504 - C11278 * C484 - C11277 * C505 + C11270 * C520 +
             C11275 * C502 - C11276 * C483 - C11275 * C503 + C11269 * C519) *
                C153724 +
            (C15973 + C15972 + C15971 + C15970) * C153864) *
               C153625 * C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C63414 +
            (C39442 + C39443) * C63415 + C58748 * C63416 + C63807 * C153878) *
               C153625 * C153849 -
           ((C62318 + C62317) * C153878 + C62304 * C63416 +
            (C39444 + C39445) * C63415 + (C39443 + C39442) * C63414) *
               C153625 * C153601) *
              C153521 * C153917 +
          (((C39446 + C39447) * C63414 + (C39448 + C39449) * C63415 +
            (C58775 + C58776) * C63416 + (C63821 + C63822) * C153878) *
               C153625 * C153601 -
           (C63816 * C153878 + C58766 * C63416 + (C39447 + C39446) * C63415 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C63414) *
               C153625 * C153849) *
              C153521 * C153918 +
          (((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
             C152081 * C158 - C34900 * C147 - C152081 * C159 + C153472 * C171) *
                C63414 +
            (C40074 + C40075) * C63415 + (C59385 + C59386) * C63416 +
            (C64223 + C64224) * C153878) *
               C153625 * C153849 -
           ((C152081 * C7524 - C34900 * C7517 - C152081 * C7525 +
             C153472 * C7529 + C152100 * C7522 - C34898 * C7516 -
             C152100 * C7523 + C153829 * C7528) *
                C153878 +
            (C64224 + C64223) * C63416 + (C59386 + C59385) * C63415 +
            (C40075 + C40074) * C63414) *
               C153625 * C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153864 +
            (C11275 * C496 - C11276 * C480 - C11275 * C497 + C11269 * C516 +
             C11277 * C494 - C11278 * C479 - C11277 * C495 + C11270 * C515 +
             C11279 * C492 - C11280 * C478 - C11279 * C493 + C11271 * C514 +
             C11281 * C490 - C11282 * C477 - C11281 * C491 + C153862 * C513) *
                C153724) *
               C153625 * C153537 * C298 -
           ((C12506 + C12507 + C12508 + C12509) * C153724 +
            (C11577 + C11576 + C11575 + C11574) * C153864) *
               C153625 * C153537 * C299 +
           ((C11581 + C11580 + C11579 + C11578) * C153864 +
            (C13758 + C13759 + C13760 + C13761) * C153724) *
               C153625 * C153537 * C300) *
              C301 +
          (((C11582 + C11583 + C11584 + C11585) * C153864 +
            (C12510 + C12511 + C12512 + C12513) * C153724) *
               C153625 * C153537 * C299 -
           ((C11281 * C488 - C11282 * C476 - C11281 * C489 + C153862 * C512 +
             C11279 * C490 - C11280 * C477 - C11279 * C491 + C11271 * C513 +
             C11277 * C492 - C11278 * C478 - C11277 * C493 + C11270 * C514 +
             C11275 * C494 - C11276 * C479 - C11275 * C495 + C11269 * C515) *
                C153724 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153864) *
               C153625 * C153537 * C298 -
           ((C11281 * C1761 - C11282 * C1756 - C11281 * C1762 +
             C153862 * C1771 + C11279 * C1763 - C11280 * C1757 -
             C11279 * C1764 + C11271 * C1772 + C11277 * C1765 - C11278 * C1758 -
             C11277 * C1766 + C11270 * C1773 + C11275 * C1767 - C11276 * C1759 -
             C11275 * C1768 + C11269 * C1774) *
                C153724 +
            (C11589 + C11588 + C11587 + C11586) * C153864) *
               C153625 * C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
            C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
            C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
            C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
               C153864 +
           (C11275 * C496 - C11276 * C480 - C11275 * C497 + C11269 * C516 +
            C11277 * C494 - C11278 * C479 - C11277 * C495 + C11270 * C515 +
            C11279 * C492 - C11280 * C478 - C11279 * C493 + C11271 * C514 +
            C11281 * C490 - C11282 * C477 - C11281 * C491 + C153862 * C513) *
               C153724) *
              C153625 * C153537 * C153521 * C130 -
          ((C11281 * C488 - C11282 * C476 - C11281 * C489 + C153862 * C512 +
            C11279 * C490 - C11280 * C477 - C11279 * C491 + C11271 * C513 +
            C11277 * C492 - C11278 * C478 - C11277 * C493 + C11270 * C514 +
            C11275 * C494 - C11276 * C479 - C11275 * C495 + C11269 * C515) *
               C153724 +
           (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
            C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
            C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
            C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
               C153864) *
              C153625 * C153537 * C153521 * C131 +
          ((C11275 * C156 - C11276 * C146 - C11275 * C157 + C11269 * C170 +
            C11277 * C158 - C11278 * C147 - C11277 * C159 + C11270 * C171 +
            C11279 * C160 - C11280 * C148 - C11279 * C161 + C11271 * C172 +
            C11281 * C162 - C11282 * C149 - C11281 * C163 + C153862 * C173) *
               C153864 +
           (C11275 * C492 - C11276 * C478 - C11275 * C493 + C11269 * C514 +
            C11277 * C490 - C11278 * C477 - C11277 * C491 + C11270 * C513 +
            C11279 * C488 - C11280 * C476 - C11279 * C489 + C11271 * C512 +
            C11281 * C508 - C11282 * C486 - C11281 * C509 + C153862 * C522) *
               C153724) *
              C153625 * C153537 * C153521 * C132 -
          ((C11281 * C780 - C11282 * C779 - C11281 * C781 + C153862 * C782 +
            C11279 * C508 - C11280 * C486 - C11279 * C509 + C11271 * C522 +
            C11277 * C488 - C11278 * C476 - C11277 * C489 + C11270 * C512 +
            C11275 * C490 - C11276 * C477 - C11275 * C491 + C11269 * C513) *
               C153724 +
           (C11281 * C164 - C11282 * C150 - C11281 * C165 + C153862 * C174 +
            C11279 * C162 - C11280 * C149 - C11279 * C163 + C11271 * C173 +
            C11277 * C160 - C11278 * C148 - C11277 * C161 + C11270 * C172 +
            C11275 * C158 - C11276 * C147 - C11275 * C159 + C11269 * C171) *
               C153864) *
              C153625 * C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153864 +
            (C152100 * C496 - C34898 * C480 - C152100 * C497 + C153829 * C516 +
             C152081 * C494 - C34900 * C479 - C152081 * C495 + C153472 * C515) *
                C153724) *
               C23989 +
           ((C35192 + C35193) * C153864 + (C36175 + C36174) * C153724) *
               C23990 +
           (C35208 * C153864 + (C36173 + C36172) * C153724) * C153898) *
              C153537 * C153521 * C130 -
          (((C36179 + C36178) * C153724 + C35211 * C153864) * C153898 +
           ((C36177 + C36176) * C153724 + (C35201 + C35200) * C153864) *
               C23990 +
           ((C152081 * C492 - C34900 * C478 - C152081 * C493 + C153472 * C514 +
             C152100 * C494 - C34898 * C479 - C152100 * C495 + C153829 * C515) *
                C153724 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C153864) *
               C23989) *
              C153537 * C153521 * C131 +
          (((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
             C152081 * C158 - C34900 * C147 - C152081 * C159 + C153472 * C171) *
                C153864 +
            (C152100 * C492 - C34898 * C478 - C152100 * C493 + C153829 * C514 +
             C152081 * C490 - C34900 * C477 - C152081 * C491 + C153472 * C513) *
                C153724) *
               C23989 +
           ((C35640 + C35641) * C153864 +
            (C152100 * C955 - C34898 * C947 - C152100 * C956 + C153829 * C965 +
             C152081 * C957 - C34900 * C948 - C152081 * C958 + C153472 * C966) *
                C153724) *
               C23990 +
           ((C35642 + C35643) * C153864 +
            (C152100 * C1765 - C34898 * C1758 - C152100 * C1766 +
             C153829 * C1773 + C152081 * C1763 - C34900 * C1757 -
             C152081 * C1764 + C153472 * C1772) *
                C153724) *
               C153898) *
              C153537 * C153521 * C132 -
          (((C152081 * C1761 - C34900 * C1756 - C152081 * C1762 +
             C153472 * C1771 + C152100 * C1763 - C34898 * C1757 -
             C152100 * C1764 + C153829 * C1772) *
                C153724 +
            (C152081 * C333 - C34900 * C312 - C152081 * C334 + C153472 * C348 +
             C152100 * C331 - C34898 * C311 - C152100 * C332 + C153829 * C347) *
                C153864) *
               C153898 +
           ((C152081 * C959 - C34900 * C949 - C152081 * C960 + C153472 * C967 +
             C152100 * C957 - C34898 * C948 - C152100 * C958 + C153829 * C966) *
                C153724 +
            (C152081 * C315 - C34900 * C303 - C152081 * C316 + C153472 * C339 +
             C152100 * C317 - C34898 * C304 - C152100 * C318 + C153829 * C340) *
                C153864) *
               C23990 +
           ((C152081 * C488 - C34900 * C476 - C152081 * C489 + C153472 * C512 +
             C152100 * C490 - C34898 * C477 - C152100 * C491 + C153829 * C513) *
                C153724 +
            (C152081 * C160 - C34900 * C148 - C152081 * C161 + C153472 * C172 +
             C152100 * C158 - C34898 * C147 - C152100 * C159 + C153829 * C171) *
                C153864) *
               C23989) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153864 +
             (C152100 * C496 - C34898 * C480 - C152100 * C497 + C153829 * C516 +
              C152081 * C494 - C34900 * C479 - C152081 * C495 +
              C153472 * C515) *
                 C153724) *
                C23989 +
            ((C35192 + C35193) * C153864 + (C36175 + C36174) * C153724) *
                C23990 +
            C39078 * C153898) *
               C153537 * C298 -
           ((C37406 * C153724 + C36507 * C153864) * C153898 +
            (C37407 * C153724 + (C35195 + C35194) * C153864) * C23990 +
            ((C36174 + C36175) * C153724 + (C35193 + C35192) * C153864) *
                C23989) *
               C153537 * C299 +
           (C39078 * C23989 +
            (C35209 * C153864 + (C36171 + C36170) * C153724) * C23990 +
            ((C35199 + C35198) * C153864 + (C37422 + C37423) * C153724) *
                C153898) *
               C153537 * C300) *
              C301 +
          ((((C35200 + C35201) * C153864 + (C36176 + C36177) * C153724) *
                C23989 +
            ((C35202 + C35203) * C153864 + (C36178 + C36179) * C153724) *
                C23990 +
            ((C35204 + C35205) * C153864 + (C36180 + C36181) * C153724) *
                C153898) *
               C153537 * C299 -
           (C39079 * C153898 +
            ((C36177 + C36176) * C153724 + (C35201 + C35200) * C153864) *
                C23990 +
            ((C152081 * C492 - C34900 * C478 - C152081 * C493 + C153472 * C514 +
              C152100 * C494 - C34898 * C479 - C152100 * C495 +
              C153829 * C515) *
                 C153724 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153864) *
                C23989) *
               C153537 * C298 -
           (((C152081 * C5564 - C34900 * C5561 - C152081 * C5565 +
              C153472 * C5570 + C152100 * C5566 - C34898 * C5562 -
              C152100 * C5567 + C153829 * C5571) *
                 C153724 +
             (C35207 + C35206) * C153864) *
                C153898 +
            ((C36181 + C36180) * C153724 + C35210 * C153864) * C23990 +
            C39079 * C23989) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
            C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
               C63414 +
           (C39442 + C39443) * C63415 + C58748 * C63416 +
           (C43032 + C43033) * C153878) *
              C153625 * C153537 * C153521 * C130 -
          ((C58776 + C58775) * C153878 + C58766 * C63416 +
           (C39447 + C39446) * C63415 +
           (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
            C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
               C63414) *
              C153625 * C153537 * C153521 * C131 +
          ((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
            C152081 * C158 - C34900 * C147 - C152081 * C159 + C153472 * C171) *
               C63414 +
           (C40074 + C40075) * C63415 + (C59385 + C59386) * C63416 +
           (C152100 * C2117 - C34898 * C2110 - C152100 * C2118 +
            C153829 * C2125 + C152081 * C2115 - C34900 * C2109 -
            C152081 * C2116 + C153472 * C2124) *
               C153878) *
              C153625 * C153537 * C153521 * C132 -
          ((C152081 * C2113 - C34900 * C2108 - C152081 * C2114 +
            C153472 * C2123 + C152100 * C2115 - C34898 * C2109 -
            C152100 * C2116 + C153829 * C2124) *
               C153878 +
           (C152081 * C506 - C34900 * C485 - C152081 * C507 + C153472 * C521 +
            C152100 * C504 - C34898 * C484 - C152100 * C505 + C153829 * C520) *
               C63416 +
           (C152081 * C488 - C34900 * C476 - C152081 * C489 + C153472 * C512 +
            C152100 * C490 - C34898 * C477 - C152100 * C491 + C153829 * C513) *
               C63415 +
           (C152081 * C160 - C34900 * C148 - C152081 * C161 + C153472 * C172 +
            C152100 * C158 - C34898 * C147 - C152100 * C159 + C153829 * C171) *
               C63414) *
              C153625 * C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C63414 +
            (C39442 + C39443) * C63415 + C58748 * C63416 +
            (C43032 + C43033) * C153878) *
               C153625 * C153537 * C298 -
           (C60548 * C153878 + C41245 * C63416 + C40463 * C63415 +
            (C35193 + C35192) * C63414) *
               C153625 * C153537 * C299 +
           (C35208 * C63414 + C39073 * C63415 + C41255 * C63416 +
            (C41274 + C41275) * C153878) *
               C153625 * C153537 * C300) *
              C301 +
          (((C35200 + C35201) * C63414 + C40464 * C63415 + C59773 * C63416 +
            (C58777 + C58778) * C153878) *
               C153625 * C153537 * C299 -
           ((C58776 + C58775) * C153878 + C58766 * C63416 +
            (C39447 + C39446) * C63415 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C63414) *
               C153625 * C153537 * C298 -
           ((C152081 * C6185 - C34900 * C6179 - C152081 * C6186 +
             C153472 * C6197 + C152100 * C6187 - C34898 * C6180 -
             C152100 * C6188 + C153829 * C6198) *
                C153878 +
            (C39453 + C39452) * C63416 + C39074 * C63415 + C35211 * C63414) *
               C153625 * C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153864 +
             (C39442 + C39443) * C153724) *
                C23989 +
            ((C35192 + C35193) * C153864 + C40462 * C153724) * C23990 +
            C39078 * C153898) *
               C153537 * C153919 -
           (C40953 * C153898 +
            (C37407 * C153724 + (C35195 + C35194) * C153864) * C23990 +
            (C40463 * C153724 + (C35193 + C35192) * C153864) * C23989) *
               C153537 * C153920 +
           (C39078 * C23989 +
            (C35209 * C153864 + (C36171 + C36170) * C153724) * C23990 +
            ((C35199 + C35198) * C153864 + (C37422 + C37423) * C153724) *
                C153898) *
               C153537 * C1469) *
              C153840 +
          ((((C35200 + C35201) * C153864 + C40464 * C153724) * C23989 +
            ((C35202 + C35203) * C153864 + C40465 * C153724) * C23990 +
            ((C35204 + C35205) * C153864 + (C36180 + C36181) * C153724) *
                C153898) *
               C153537 * C153920 -
           (C39079 * C153898 +
            (C40466 * C153724 + (C35201 + C35200) * C153864) * C23990 +
            ((C39447 + C39446) * C153724 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153864) *
                C23989) *
               C153537 * C153919 -
           (((C152081 * C5564 - C34900 * C5561 - C152081 * C5565 +
              C153472 * C5570 + C152100 * C5566 - C34898 * C5562 -
              C152100 * C5567 + C153829 * C5571) *
                 C153724 +
             (C35207 + C35206) * C153864) *
                C153898 +
            ((C36181 + C36180) * C153724 + C35210 * C153864) * C23990 +
            C39079 * C23989) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153864 +
            (C15542 + C15543 + C15544 + C15545) * C153724) *
               C153625 * C153537 * C153919 -
           ((C12506 + C12507 + C12508 + C12509) * C153724 +
            (C11577 + C11576 + C11575 + C11574) * C153864) *
               C153625 * C153537 * C153920 +
           ((C11581 + C11580 + C11579 + C11578) * C153864 +
            (C13758 + C13759 + C13760 + C13761) * C153724) *
               C153625 * C153537 * C1469) *
              C153840 +
          (((C11582 + C11583 + C11584 + C11585) * C153864 +
            (C12510 + C12511 + C12512 + C12513) * C153724) *
               C153625 * C153537 * C153920 -
           ((C15553 + C15552 + C15551 + C15550) * C153724 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153864) *
               C153625 * C153537 * C153919 -
           ((C11281 * C1761 - C11282 * C1756 - C11281 * C1762 +
             C153862 * C1771 + C11279 * C1763 - C11280 * C1757 -
             C11279 * C1764 + C11271 * C1772 + C11277 * C1765 - C11278 * C1758 -
             C11277 * C1766 + C11270 * C1773 + C11275 * C1767 - C11276 * C1759 -
             C11275 * C1768 + C11269 * C1774) *
                C153724 +
            (C11589 + C11588 + C11587 + C11586) * C153864) *
               C153625 * C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C63414 +
            (C39442 + C39443) * C63415 + C58748 * C63416 + C63807 * C153878) *
               C153625 * C153537 * C153919 -
           (C60548 * C153878 + C41245 * C63416 + C40463 * C63415 +
            (C35193 + C35192) * C63414) *
               C153625 * C153537 * C153920 +
           (C35208 * C63414 + C39073 * C63415 + C41255 * C63416 +
            (C41274 + C41275) * C153878) *
               C153625 * C153537 * C1469) *
              C153840 +
          (((C35200 + C35201) * C63414 + C40464 * C63415 + C59773 * C63416 +
            (C58777 + C58778) * C153878) *
               C153625 * C153537 * C153920 -
           (C63816 * C153878 + C58766 * C63416 + (C39447 + C39446) * C63415 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C63414) *
               C153625 * C153537 * C153919 -
           ((C152081 * C6185 - C34900 * C6179 - C152081 * C6186 +
             C153472 * C6197 + C152100 * C6187 - C34898 * C6180 -
             C152100 * C6188 + C153829 * C6198) *
                C153878 +
            (C39453 + C39452) * C63416 + C39074 * C63415 + C35211 * C63414) *
               C153625 * C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153864 +
             (C39442 + C39443) * C153724) *
                C23989 +
            ((C35192 + C35193) * C153864 + C40462 * C153724) * C23990 +
            C39078 * C153898) *
               C153849 -
           (C42245 * C153898 + (C41245 * C153724 + C40463 * C153864) * C23990 +
            ((C39444 + C39445) * C153724 + (C39443 + C39442) * C153864) *
                C23989) *
               C153601) *
              C153919 +
          (((C40462 * C153864 + C41246 * C153724) * C23989 +
            (C39073 * C153864 + C41255 * C153724) * C23990 +
            (C42244 * C153864 + (C36758 + C36759) * C153724) * C153898) *
               C153601 -
           (C40953 * C153898 +
            (C37407 * C153724 + (C35195 + C35194) * C153864) * C23990 +
            (C40463 * C153724 + (C35193 + C35192) * C153864) * C23989) *
               C153849) *
              C153920 +
          ((C39078 * C23989 + (C35209 * C153864 + C42244 * C153724) * C23990 +
            ((C35199 + C35198) * C153864 + (C37422 + C37423) * C153724) *
                C153898) *
               C153849 -
           (((C152081 * C28550 - C34900 * C28547 - C152081 * C28551 +
              C153472 * C28553 + C152100 * C28548 - C34898 * C28546 -
              C152100 * C28549 + C153829 * C28552) *
                 C153724 +
             (C37423 + C37422) * C153864) *
                C153898 +
            ((C36759 + C36758) * C153724 + C37406 * C153864) * C23990 +
            C42245 * C23989) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153864 +
            (C15542 + C15543 + C15544 + C15545) * C153724) *
               C153625 * C153849 -
           ((C15546 + C15547 + C15548 + C15549) * C153724 +
            (C15545 + C15544 + C15543 + C15542) * C153864) *
               C153625 * C153601) *
              C153919 +
          (((C12509 + C12508 + C12507 + C12506) * C153864 +
            (C13084 + C13085 + C13086 + C13087) * C153724) *
               C153625 * C153601 -
           ((C12506 + C12507 + C12508 + C12509) * C153724 +
            (C11577 + C11576 + C11575 + C11574) * C153864) *
               C153625 * C153849) *
              C153920 +
          (((C11581 + C11580 + C11579 + C11578) * C153864 +
            (C13758 + C13759 + C13760 + C13761) * C153724) *
               C153625 * C153849 -
           ((C11281 * C3289 - C11282 * C3282 - C11281 * C3290 +
             C153862 * C3294 + C11279 * C3287 - C11280 * C3281 -
             C11279 * C3288 + C11271 * C3293 + C11277 * C3285 - C11278 * C3280 -
             C11277 * C3286 + C11270 * C3292 + C11275 * C3283 - C11276 * C3279 -
             C11275 * C3284 + C11269 * C3291) *
                C153724 +
            (C13761 + C13760 + C13759 + C13758) * C153864) *
               C153625 * C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C63414 +
            (C39442 + C39443) * C63415 + C58748 * C63416 + C63807 * C153878) *
               C153625 * C153849 -
           ((C62318 + C62317) * C153878 + C62304 * C63416 +
            (C39444 + C39445) * C63415 + (C39443 + C39442) * C63414) *
               C153625 * C153601) *
              C153919 +
          ((C40462 * C63414 + C41246 * C63415 + C60549 * C63416 +
            (C60562 + C60563) * C153878) *
               C153625 * C153601 -
           (C60548 * C153878 + C41245 * C63416 + C40463 * C63415 +
            (C35193 + C35192) * C63414) *
               C153625 * C153849) *
              C153920 +
          ((C35208 * C63414 + C39073 * C63415 + C41255 * C63416 +
            (C41274 + C41275) * C153878) *
               C153625 * C153849 -
           ((C152081 * C31225 - C34900 * C31222 - C152081 * C31226 +
             C153472 * C31228 + C152100 * C31223 - C34898 * C31221 -
             C152100 * C31224 + C153829 * C31227) *
                C153878 +
            (C41275 + C41274) * C63416 + C41244 * C63415 + C37407 * C63414) *
               C153625 * C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
                 C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
                 C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
                 C11281 * C158 - C11282 * C147 - C11281 * C159 +
                 C153862 * C171) *
                    C153864 +
                (C15542 + C15543 + C15544 + C15545) * C153724) *
                   C153625 * C153537 * C1091 -
               ((C12506 + C12507 + C12508 + C12509) * C153724 +
                (C11577 + C11576 + C11575 + C11574) * C153864) *
                   C153625 * C153537 * C153573) *
                  C1093 +
              (((C11582 + C11583 + C11584 + C11585) * C153864 +
                (C12510 + C12511 + C12512 + C12513) * C153724) *
                   C153625 * C153537 * C153573 -
               ((C15553 + C15552 + C15551 + C15550) * C153724 +
                (C11281 * C160 - C11282 * C148 - C11281 * C161 +
                 C153862 * C172 + C11279 * C158 - C11280 * C147 -
                 C11279 * C159 + C11271 * C171 + C11277 * C156 - C11278 * C146 -
                 C11277 * C157 + C11270 * C170 + C11275 * C154 - C11276 * C145 -
                 C11275 * C155 + C11269 * C169) *
                    C153864) *
                   C153625 * C153537 * C1091) *
                  C1094 +
              (((C11275 * C156 - C11276 * C146 - C11275 * C157 + C11269 * C170 +
                 C11277 * C158 - C11278 * C147 - C11277 * C159 + C11270 * C171 +
                 C11279 * C160 - C11280 * C148 - C11279 * C161 + C11271 * C172 +
                 C11281 * C162 - C11282 * C149 - C11281 * C163 +
                 C153862 * C173) *
                    C153864 +
                (C15970 + C15971 + C15972 + C15973) * C153724) *
                   C153625 * C153537 * C1091 -
               ((C11281 * C961 - C11282 * C950 - C11281 * C962 +
                 C153862 * C968 + C11279 * C959 - C11280 * C949 -
                 C11279 * C960 + C11271 * C967 + C11277 * C957 - C11278 * C948 -
                 C11277 * C958 + C11270 * C966 + C11275 * C955 - C11276 * C947 -
                 C11275 * C956 + C11269 * C965) *
                    C153724 +
                (C12005 + C12004 + C12003 + C12002) * C153864) *
                   C153625 * C153537 * C153573) *
                  C1095) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
                C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
                C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
                C11281 * C158 - C11282 * C147 - C11281 * C159 +
                C153862 * C171) *
                   C153864 +
               (C15542 + C15543 + C15544 + C15545) * C153724) *
                  C153625 * C153537 * C1178 -
              ((C12506 + C12507 + C12508 + C12509) * C153724 +
               (C11577 + C11576 + C11575 + C11574) * C153864) *
                  C153625 * C153537 * C1179 +
              ((C11581 + C11580 + C11579 + C11578) * C153864 +
               (C13758 + C13759 + C13760 + C13761) * C153724) *
                  C153625 * C153537 * C1180 -
              ((C11281 * C4073 - C11282 * C4066 - C11281 * C4074 +
                C153862 * C4078 + C11279 * C4071 - C11280 * C4065 -
                C11279 * C4072 + C11271 * C4077 + C11277 * C4069 -
                C11278 * C4064 - C11277 * C4070 + C11270 * C4076 +
                C11275 * C4067 - C11276 * C4063 - C11275 * C4068 +
                C11269 * C4075) *
                   C153724 +
               (C12865 + C12864 + C12863 + C12862) * C153864) *
                  C153625 * C153537 * C1181) *
             C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153864 +
            (C15542 + C15543 + C15544 + C15545) * C153724) *
               C153625 * C473 -
           ((C15546 + C15547 + C15548 + C15549) * C153724 +
            (C15545 + C15544 + C15543 + C15542) * C153864) *
               C153625 * C474 +
           ((C15549 + C15548 + C15547 + C15546) * C153864 +
            (C11275 * C2121 - C11276 * C2112 - C11275 * C2122 + C11269 * C2127 +
             C11277 * C2119 - C11278 * C2111 - C11277 * C2120 + C11270 * C2126 +
             C11279 * C2117 - C11280 * C2110 - C11279 * C2118 + C11271 * C2125 +
             C11281 * C2115 - C11282 * C2109 - C11281 * C2116 +
             C153862 * C2124) *
                C153724) *
               C153625 * C475) *
              C1091 +
          (((C12509 + C12508 + C12507 + C12506) * C153864 +
            (C13084 + C13085 + C13086 + C13087) * C153724) *
               C153625 * C474 -
           ((C12506 + C12507 + C12508 + C12509) * C153724 +
            (C11577 + C11576 + C11575 + C11574) * C153864) *
               C153625 * C473 -
           ((C11281 * C8429 - C11282 * C8428 - C11281 * C8430 +
             C153862 * C8431 + C11279 * C6191 - C11280 * C6182 -
             C11279 * C6192 + C11271 * C6200 + C11277 * C6193 - C11278 * C6183 -
             C11277 * C6194 + C11270 * C6201 + C11275 * C6195 - C11276 * C6184 -
             C11275 * C6196 + C11269 * C6202) *
                C153724 +
            (C13087 + C13086 + C13085 + C13084) * C153864) *
               C153625 * C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153864 +
             (C39442 + C39443) * C153724) *
                C23989 +
            ((C35192 + C35193) * C153864 + C40462 * C153724) * C23990 +
            C39078 * C153898) *
               C153537 * C1091 -
           ((C37406 * C153724 + C36507 * C153864) * C153898 +
            (C37407 * C153724 + (C35195 + C35194) * C153864) * C23990 +
            (C40463 * C153724 + (C35193 + C35192) * C153864) * C23989) *
               C153537 * C153573) *
              C1093 +
          ((((C35200 + C35201) * C153864 + C40464 * C153724) * C23989 +
            ((C35202 + C35203) * C153864 + C40465 * C153724) * C23990 +
            ((C35204 + C35205) * C153864 + (C36180 + C36181) * C153724) *
                C153898) *
               C153537 * C153573 -
           (C39079 * C153898 +
            (C40466 * C153724 + (C35201 + C35200) * C153864) * C23990 +
            ((C39447 + C39446) * C153724 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153864) *
                C23989) *
               C153537 * C1091) *
              C1094 +
          ((((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
              C152081 * C158 - C34900 * C147 - C152081 * C159 +
              C153472 * C171) *
                 C153864 +
             (C40074 + C40075) * C153724) *
                C23989 +
            ((C35640 + C35641) * C153864 + (C39768 + C39769) * C153724) *
                C23990 +
            ((C35642 + C35643) * C153864 + (C39770 + C39771) * C153724) *
                C153898) *
               C153537 * C1091 -
           (((C152081 * C4073 - C34900 * C4066 - C152081 * C4074 +
              C153472 * C4078 + C152100 * C4071 - C34898 * C4065 -
              C152100 * C4072 + C153829 * C4077) *
                 C153724 +
             (C35645 + C35644) * C153864) *
                C153898 +
            ((C39771 + C39770) * C153724 + (C35643 + C35642) * C153864) *
                C23990 +
            ((C39769 + C39768) * C153724 + (C35641 + C35640) * C153864) *
                C23989) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153864 +
            (C39442 + C39443) * C153724) *
               C23989 +
           ((C35192 + C35193) * C153864 + C40462 * C153724) * C23990 +
           C39078 * C153898) *
              C153537 * C1178 -
          (C40953 * C153898 +
           (C37407 * C153724 + (C35195 + C35194) * C153864) * C23990 +
           (C40463 * C153724 + (C35193 + C35192) * C153864) * C23989) *
              C153537 * C1179 +
          (C39078 * C23989 +
           (C35209 * C153864 + (C36171 + C36170) * C153724) * C23990 +
           ((C35199 + C35198) * C153864 + (C37422 + C37423) * C153724) *
               C153898) *
              C153537 * C1180 -
          (((C152081 * C28996 - C34900 * C28993 - C152081 * C28997 +
             C153472 * C28999 + C152100 * C28994 - C34898 * C28992 -
             C152100 * C28995 + C153829 * C28998) *
                C153724 +
            (C36523 + C36522) * C153864) *
               C153898 +
           ((C37423 + C37422) * C153724 + C36506 * C153864) * C23990 +
           C40953 * C23989) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153864 +
             (C39442 + C39443) * C153724) *
                C23989 +
            ((C35192 + C35193) * C153864 + C40462 * C153724) * C23990 +
            C39078 * C153898) *
               C473 -
           ((C41244 * C153724 + C37407 * C153864) * C153898 +
            (C41245 * C153724 + C40463 * C153864) * C23990 +
            ((C39444 + C39445) * C153724 + (C39443 + C39442) * C153864) *
                C23989) *
               C474 +
           (((C39445 + C39444) * C153864 +
             (C152100 * C2121 - C34898 * C2112 - C152100 * C2122 +
              C153829 * C2127 + C152081 * C2119 - C34900 * C2111 -
              C152081 * C2120 + C153472 * C2126) *
                 C153724) *
                C23989 +
            (C41246 * C153864 + (C41272 + C41273) * C153724) * C23990 +
            (C41255 * C153864 + (C41274 + C41275) * C153724) * C153898) *
               C475) *
              C1091 +
          (((C40462 * C153864 + C41246 * C153724) * C23989 +
            (C39073 * C153864 + C41255 * C153724) * C23990 +
            ((C36171 + C36170) * C153864 + (C36758 + C36759) * C153724) *
                C153898) *
               C474 -
           (C40953 * C153898 +
            (C37407 * C153724 + (C35195 + C35194) * C153864) * C23990 +
            (C40463 * C153724 + (C35193 + C35192) * C153864) * C23989) *
               C473 -
           (((C152081 * C32074 - C34900 * C32073 - C152081 * C32075 +
              C153472 * C32076 + C152100 * C30186 - C34898 * C30183 -
              C152100 * C30187 + C153829 * C30189) *
                 C153724 +
             (C36759 + C36758) * C153864) *
                C153898 +
            ((C41275 + C41274) * C153724 + C41244 * C153864) * C23990 +
            ((C41273 + C41272) * C153724 + C41245 * C153864) * C23989) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C63414 +
            (C39442 + C39443) * C63415 + C58748 * C63416 + C63807 * C153878) *
               C153625 * C153537 * C1091 -
           (C60548 * C153878 + C41245 * C63416 + C40463 * C63415 +
            (C35193 + C35192) * C63414) *
               C153625 * C153537 * C153573) *
              C1093 +
          (((C35200 + C35201) * C63414 + C40464 * C63415 + C59773 * C63416 +
            (C58777 + C58778) * C153878) *
               C153625 * C153537 * C153573 -
           (C63816 * C153878 + C58766 * C63416 + (C39447 + C39446) * C63415 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C63414) *
               C153625 * C153537 * C1091) *
              C1094 +
          (((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
             C152081 * C158 - C34900 * C147 - C152081 * C159 + C153472 * C171) *
                C63414 +
            (C40074 + C40075) * C63415 + (C59385 + C59386) * C63416 +
            (C64223 + C64224) * C153878) *
               C153625 * C153537 * C1091 -
           ((C152081 * C8429 - C34900 * C8428 - C152081 * C8430 +
             C153472 * C8431 + C152100 * C6191 - C34898 * C6182 -
             C152100 * C6192 + C153829 * C6200) *
                C153878 +
            (C59082 + C59081) * C63416 + (C39769 + C39768) * C63415 +
            (C35641 + C35640) * C63414) *
               C153625 * C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
            C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
               C63414 +
           (C39442 + C39443) * C63415 + C58748 * C63416 + C63807 * C153878) *
              C153625 * C153537 * C1178 -
          (C60548 * C153878 + C41245 * C63416 + C40463 * C63415 +
           (C35193 + C35192) * C63414) *
              C153625 * C153537 * C1179 +
          (C35208 * C63414 + C39073 * C63415 + C41255 * C63416 +
           (C41274 + C41275) * C153878) *
              C153625 * C153537 * C1180 -
          ((C152081 * C32074 - C34900 * C32073 - C152081 * C32075 +
            C153472 * C32076 + C152100 * C30186 - C34898 * C30183 -
            C152100 * C30187 + C153829 * C30189) *
               C153878 +
           (C36759 + C36758) * C63416 + C37406 * C63415 + C36507 * C63414) *
              C153625 * C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C63414 +
            (C39442 + C39443) * C63415 + C58748 * C63416 + C63807 * C153878) *
               C153625 * C473 -
           ((C62318 + C62317) * C153878 + C62304 * C63416 +
            (C39444 + C39445) * C63415 + (C39443 + C39442) * C63414) *
               C153625 * C474 +
           (C58748 * C63414 + C63807 * C63415 + (C62317 + C62318) * C63416 +
            (C152100 * C10385 - C34898 * C10380 - C152100 * C10386 +
             C153829 * C10389 + C152081 * C10383 - C34900 * C10379 -
             C152081 * C10384 + C153472 * C10388) *
                C153878) *
               C153625 * C475) *
              C1091 +
          ((C40462 * C63414 + C41246 * C63415 + C60549 * C63416 +
            (C60562 + C60563) * C153878) *
               C153625 * C474 -
           (C60548 * C153878 + C41245 * C63416 + C40463 * C63415 +
            (C35193 + C35192) * C63414) *
               C153625 * C473 -
           ((C152081 * C56477 - C34900 * C56476 - C152081 * C56478 +
             C153472 * C56479 + C152100 * C34024 - C34898 * C34021 -
             C152100 * C34025 + C153829 * C34027) *
                C153878 +
            (C60563 + C60562) * C63416 + C60548 * C63415 + C41245 * C63414) *
               C153625 * C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C152100 * C152 - C34898 * C144 - C152100 * C153 +
               C153829 * C168 + C152081 * C154 - C34900 * C145 -
               C152081 * C155 + C153472 * C169) *
                  C153864 +
              (C39442 + C39443) * C153724) *
                 C23989 +
             ((C35192 + C35193) * C153864 + C40462 * C153724) * C23990 +
             C39078 * C153898) *
                C153849 -
            ((C41244 * C153724 + C37407 * C153864) * C153898 +
             (C41245 * C153724 + C40463 * C153864) * C23990 +
             ((C39444 + C39445) * C153724 + (C39443 + C39442) * C153864) *
                 C23989) *
                C153601) *
               C1091 +
           (((C40462 * C153864 + C41246 * C153724) * C23989 +
             (C39073 * C153864 + C41255 * C153724) * C23990 +
             ((C36171 + C36170) * C153864 + (C36758 + C36759) * C153724) *
                 C153898) *
                C153601 -
            (C40953 * C153898 +
             (C37407 * C153724 + (C35195 + C35194) * C153864) * C23990 +
             (C40463 * C153724 + (C35193 + C35192) * C153864) * C23989) *
                C153849) *
               C153573) *
              C153840 +
          (((((C39446 + C39447) * C153864 + (C39448 + C39449) * C153724) *
                 C23989 +
             (C40464 * C153864 + (C39450 + C39451) * C153724) * C23990 +
             (C40465 * C153864 + (C39452 + C39453) * C153724) * C153898) *
                C153601 -
            (C39079 * C153898 +
             (C40466 * C153724 + (C35201 + C35200) * C153864) * C23990 +
             ((C39447 + C39446) * C153724 +
              (C152081 * C156 - C34900 * C146 - C152081 * C157 +
               C153472 * C170 + C152100 * C154 - C34898 * C145 -
               C152100 * C155 + C153829 * C169) *
                  C153864) *
                 C23989) *
                C153849) *
               C1091 +
           ((((C35200 + C35201) * C153864 + C40464 * C153724) * C23989 +
             ((C35202 + C35203) * C153864 + C40465 * C153724) * C23990 +
             ((C35204 + C35205) * C153864 + (C36180 + C36181) * C153724) *
                 C153898) *
                C153849 -
            (((C152081 * C4784 - C34900 * C4781 - C152081 * C4785 +
               C153472 * C4790 + C152100 * C4786 - C34898 * C4782 -
               C152100 * C4787 + C153829 * C4791) *
                  C153724 +
              (C36181 + C36180) * C153864) *
                 C153898 +
             ((C39453 + C39452) * C153724 + C39074 * C153864) * C23990 +
             ((C39451 + C39450) * C153724 + C40466 * C153864) * C23989) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
              C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
              C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
              C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                 C153864 +
             (C15542 + C15543 + C15544 + C15545) * C153724) *
                C153625 * C153849 -
            ((C15546 + C15547 + C15548 + C15549) * C153724 +
             (C15545 + C15544 + C15543 + C15542) * C153864) *
                C153625 * C153601) *
               C1091 +
           (((C12509 + C12508 + C12507 + C12506) * C153864 +
             (C13084 + C13085 + C13086 + C13087) * C153724) *
                C153625 * C153601 -
            ((C12506 + C12507 + C12508 + C12509) * C153724 +
             (C11577 + C11576 + C11575 + C11574) * C153864) *
                C153625 * C153849) *
               C153573) *
              C153840 +
          ((((C15550 + C15551 + C15552 + C15553) * C153864 +
             (C15554 + C15555 + C15556 + C15557) * C153724) *
                C153625 * C153601 -
            ((C15553 + C15552 + C15551 + C15550) * C153724 +
             (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
              C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
              C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
              C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                 C153864) *
                C153625 * C153849) *
               C1091 +
           (((C11582 + C11583 + C11584 + C11585) * C153864 +
             (C12510 + C12511 + C12512 + C12513) * C153724) *
                C153625 * C153849 -
            ((C11281 * C1330 - C11282 * C1325 - C11281 * C1331 +
              C153862 * C1340 + C11279 * C1332 - C11280 * C1326 -
              C11279 * C1333 + C11271 * C1341 + C11277 * C1334 -
              C11278 * C1327 - C11277 * C1335 + C11270 * C1342 +
              C11275 * C1336 - C11276 * C1328 - C11275 * C1337 +
              C11269 * C1343) *
                 C153724 +
             (C12513 + C12512 + C12511 + C12510) * C153864) *
                C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C63414 +
             (C39442 + C39443) * C63415 + C58748 * C63416 + C63807 * C153878) *
                C153625 * C153849 -
            ((C62318 + C62317) * C153878 + C62304 * C63416 +
             (C39444 + C39445) * C63415 + (C39443 + C39442) * C63414) *
                C153625 * C153601) *
               C1091 +
           ((C40462 * C63414 + C41246 * C63415 + C60549 * C63416 +
             (C60562 + C60563) * C153878) *
                C153625 * C153601 -
            (C60548 * C153878 + C41245 * C63416 + C40463 * C63415 +
             (C35193 + C35192) * C63414) *
                C153625 * C153849) *
               C153573) *
              C153840 +
          ((((C39446 + C39447) * C63414 + (C39448 + C39449) * C63415 +
             (C58775 + C58776) * C63416 + (C63821 + C63822) * C153878) *
                C153625 * C153601 -
            (C63816 * C153878 + C58766 * C63416 + (C39447 + C39446) * C63415 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C63414) *
                C153625 * C153849) *
               C1091 +
           (((C35200 + C35201) * C63414 + C40464 * C63415 + C59773 * C63416 +
             (C58777 + C58778) * C153878) *
                C153625 * C153849 -
            ((C152081 * C9038 - C34900 * C9035 - C152081 * C9039 +
              C153472 * C9044 + C152100 * C9040 - C34898 * C9036 -
              C152100 * C9041 + C153829 * C9045) *
                 C153878 +
             (C58778 + C58777) * C63416 + C58765 * C63415 + C40466 * C63414) *
                C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
            C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
            C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
            C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
               C153864 +
           (C15542 + C15543 + C15544 + C15545) * C153724) *
              C153625 * C153537 * C1178 -
          ((C12506 + C12507 + C12508 + C12509) * C153724 +
           (C11577 + C11576 + C11575 + C11574) * C153864) *
              C153625 * C153537 * C1179 +
          ((C11581 + C11580 + C11579 + C11578) * C153864 +
           (C13758 + C13759 + C13760 + C13761) * C153724) *
              C153625 * C153537 * C1180 -
          ((C11281 * C4073 - C11282 * C4066 - C11281 * C4074 + C153862 * C4078 +
            C11279 * C4071 - C11280 * C4065 - C11279 * C4072 + C11271 * C4077 +
            C11277 * C4069 - C11278 * C4064 - C11277 * C4070 + C11270 * C4076 +
            C11275 * C4067 - C11276 * C4063 - C11275 * C4068 + C11269 * C4075) *
               C153724 +
           (C12865 + C12864 + C12863 + C12862) * C153864) *
              C153625 * C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153864 +
            (C15542 + C15543 + C15544 + C15545) * C153724) *
               C153625 * C153537 * C1091 -
           ((C12506 + C12507 + C12508 + C12509) * C153724 +
            (C11577 + C11576 + C11575 + C11574) * C153864) *
               C153625 * C153537 * C153573) *
              C1093 +
          (((C11582 + C11583 + C11584 + C11585) * C153864 +
            (C12510 + C12511 + C12512 + C12513) * C153724) *
               C153625 * C153537 * C153573 -
           ((C15553 + C15552 + C15551 + C15550) * C153724 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153864) *
               C153625 * C153537 * C1091) *
              C1094 +
          (((C11275 * C156 - C11276 * C146 - C11275 * C157 + C11269 * C170 +
             C11277 * C158 - C11278 * C147 - C11277 * C159 + C11270 * C171 +
             C11279 * C160 - C11280 * C148 - C11279 * C161 + C11271 * C172 +
             C11281 * C162 - C11282 * C149 - C11281 * C163 + C153862 * C173) *
                C153864 +
            (C15970 + C15971 + C15972 + C15973) * C153724) *
               C153625 * C153537 * C1091 -
           ((C11281 * C961 - C11282 * C950 - C11281 * C962 + C153862 * C968 +
             C11279 * C959 - C11280 * C949 - C11279 * C960 + C11271 * C967 +
             C11277 * C957 - C11278 * C948 - C11277 * C958 + C11270 * C966 +
             C11275 * C955 - C11276 * C947 - C11275 * C956 + C11269 * C965) *
                C153724 +
            (C12005 + C12004 + C12003 + C12002) * C153864) *
               C153625 * C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153864 +
             (C39442 + C39443) * C153724) *
                C23989 +
            ((C35192 + C35193) * C153864 + C40462 * C153724) * C23990 +
            C39078 * C153898) *
               C153537 * C1091 -
           ((C37406 * C153724 + C36507 * C153864) * C153898 +
            (C37407 * C153724 + (C35195 + C35194) * C153864) * C23990 +
            (C40463 * C153724 + (C35193 + C35192) * C153864) * C23989) *
               C153537 * C153573) *
              C1093 +
          ((((C35200 + C35201) * C153864 + C40464 * C153724) * C23989 +
            ((C35202 + C35203) * C153864 + C40465 * C153724) * C23990 +
            ((C35204 + C35205) * C153864 + (C36180 + C36181) * C153724) *
                C153898) *
               C153537 * C153573 -
           (C39079 * C153898 +
            (C40466 * C153724 + (C35201 + C35200) * C153864) * C23990 +
            ((C39447 + C39446) * C153724 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153864) *
                C23989) *
               C153537 * C1091) *
              C1094 +
          ((((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
              C152081 * C158 - C34900 * C147 - C152081 * C159 +
              C153472 * C171) *
                 C153864 +
             (C40074 + C40075) * C153724) *
                C23989 +
            ((C35640 + C35641) * C153864 + (C39768 + C39769) * C153724) *
                C23990 +
            ((C35642 + C35643) * C153864 + (C39770 + C39771) * C153724) *
                C153898) *
               C153537 * C1091 -
           (((C152081 * C4073 - C34900 * C4066 - C152081 * C4074 +
              C153472 * C4078 + C152100 * C4071 - C34898 * C4065 -
              C152100 * C4072 + C153829 * C4077) *
                 C153724 +
             (C35645 + C35644) * C153864) *
                C153898 +
            ((C39771 + C39770) * C153724 + (C35643 + C35642) * C153864) *
                C23990 +
            ((C39769 + C39768) * C153724 + (C35641 + C35640) * C153864) *
                C23989) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153864 +
            (C39442 + C39443) * C153724) *
               C23989 +
           ((C35192 + C35193) * C153864 + C40462 * C153724) * C23990 +
           C39078 * C153898) *
              C153537 * C1178 -
          (C40953 * C153898 +
           (C37407 * C153724 + (C35195 + C35194) * C153864) * C23990 +
           (C40463 * C153724 + (C35193 + C35192) * C153864) * C23989) *
              C153537 * C1179 +
          (C39078 * C23989 +
           (C35209 * C153864 + (C36171 + C36170) * C153724) * C23990 +
           ((C35199 + C35198) * C153864 + (C37422 + C37423) * C153724) *
               C153898) *
              C153537 * C1180 -
          (((C152081 * C28996 - C34900 * C28993 - C152081 * C28997 +
             C153472 * C28999 + C152100 * C28994 - C34898 * C28992 -
             C152100 * C28995 + C153829 * C28998) *
                C153724 +
            (C36523 + C36522) * C153864) *
               C153898 +
           ((C37423 + C37422) * C153724 + C36506 * C153864) * C23990 +
           C40953 * C23989) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C63414 +
            (C39442 + C39443) * C63415 + C58748 * C63416 + C63807 * C153878) *
               C153625 * C153537 * C1091 -
           (C60548 * C153878 + C41245 * C63416 + C40463 * C63415 +
            (C35193 + C35192) * C63414) *
               C153625 * C153537 * C153573) *
              C1093 +
          (((C35200 + C35201) * C63414 + C40464 * C63415 + C59773 * C63416 +
            (C58777 + C58778) * C153878) *
               C153625 * C153537 * C153573 -
           (C63816 * C153878 + C58766 * C63416 + (C39447 + C39446) * C63415 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C63414) *
               C153625 * C153537 * C1091) *
              C1094 +
          (((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
             C152081 * C158 - C34900 * C147 - C152081 * C159 + C153472 * C171) *
                C63414 +
            (C40074 + C40075) * C63415 + (C59385 + C59386) * C63416 +
            (C64223 + C64224) * C153878) *
               C153625 * C153537 * C1091 -
           ((C152081 * C8429 - C34900 * C8428 - C152081 * C8430 +
             C153472 * C8431 + C152100 * C6191 - C34898 * C6182 -
             C152100 * C6192 + C153829 * C6200) *
                C153878 +
            (C59082 + C59081) * C63416 + (C39769 + C39768) * C63415 +
            (C35641 + C35640) * C63414) *
               C153625 * C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
            C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
               C63414 +
           (C39442 + C39443) * C63415 + C58748 * C63416 + C63807 * C153878) *
              C153625 * C153537 * C1178 -
          (C60548 * C153878 + C41245 * C63416 + C40463 * C63415 +
           (C35193 + C35192) * C63414) *
              C153625 * C153537 * C1179 +
          (C35208 * C63414 + C39073 * C63415 + C41255 * C63416 +
           (C41274 + C41275) * C153878) *
              C153625 * C153537 * C1180 -
          ((C152081 * C32074 - C34900 * C32073 - C152081 * C32075 +
            C153472 * C32076 + C152100 * C30186 - C34898 * C30183 -
            C152100 * C30187 + C153829 * C30189) *
               C153878 +
           (C36759 + C36758) * C63416 + C37406 * C63415 + C36507 * C63414) *
              C153625 * C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C152100 * C152 - C34898 * C144 - C152100 * C153 +
               C153829 * C168 + C152081 * C154 - C34900 * C145 -
               C152081 * C155 + C153472 * C169) *
                  C153864 +
              (C39442 + C39443) * C153724) *
                 C23989 +
             ((C35192 + C35193) * C153864 + C40462 * C153724) * C23990 +
             C39078 * C153898) *
                C1898 -
            (C42245 * C153898 + (C41245 * C153724 + C40463 * C153864) * C23990 +
             ((C39444 + C39445) * C153724 + (C39443 + C39442) * C153864) *
                 C23989) *
                C153601) *
               C153848 +
           (((C40462 * C153864 + C41246 * C153724) * C23989 +
             (C39073 * C153864 + C41255 * C153724) * C23990 +
             (C42244 * C153864 + (C36758 + C36759) * C153724) * C153898) *
                C153601 -
            (C40953 * C153898 +
             (C37407 * C153724 + (C35195 + C35194) * C153864) * C23990 +
             (C40463 * C153724 + (C35193 + C35192) * C153864) * C23989) *
                C1898) *
               C153573) *
              C153840 +
          (((((C39446 + C39447) * C153864 + (C39448 + C39449) * C153724) *
                 C23989 +
             (C40464 * C153864 + (C39450 + C39451) * C153724) * C23990 +
             (C40465 * C153864 + (C39452 + C39453) * C153724) * C153898) *
                C153601 -
            (C39079 * C153898 +
             (C40466 * C153724 + (C35201 + C35200) * C153864) * C23990 +
             ((C39447 + C39446) * C153724 +
              (C152081 * C156 - C34900 * C146 - C152081 * C157 +
               C153472 * C170 + C152100 * C154 - C34898 * C145 -
               C152100 * C155 + C153829 * C169) *
                  C153864) *
                 C23989) *
                C1898) *
               C153848 +
           ((((C35200 + C35201) * C153864 + C40464 * C153724) * C23989 +
             ((C35202 + C35203) * C153864 + C40465 * C153724) * C23990 +
             ((C35204 + C35205) * C153864 + (C36180 + C36181) * C153724) *
                 C153898) *
                C1898 -
            (((C152081 * C4784 - C34900 * C4781 - C152081 * C4785 +
               C153472 * C4790 + C152100 * C4786 - C34898 * C4782 -
               C152100 * C4787 + C153829 * C4791) *
                  C153724 +
              (C36181 + C36180) * C153864) *
                 C153898 +
             ((C39453 + C39452) * C153724 + C39074 * C153864) * C23990 +
             ((C39451 + C39450) * C153724 + C40466 * C153864) * C23989) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
              C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
              C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
              C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                 C153864 +
             (C15542 + C15543 + C15544 + C15545) * C153724) *
                C153625 * C1898 -
            ((C15546 + C15547 + C15548 + C15549) * C153724 +
             (C15545 + C15544 + C15543 + C15542) * C153864) *
                C153625 * C153601) *
               C153848 +
           (((C12509 + C12508 + C12507 + C12506) * C153864 +
             (C13084 + C13085 + C13086 + C13087) * C153724) *
                C153625 * C153601 -
            ((C12506 + C12507 + C12508 + C12509) * C153724 +
             (C11577 + C11576 + C11575 + C11574) * C153864) *
                C153625 * C1898) *
               C153573) *
              C153840 +
          ((((C15550 + C15551 + C15552 + C15553) * C153864 +
             (C15554 + C15555 + C15556 + C15557) * C153724) *
                C153625 * C153601 -
            ((C15553 + C15552 + C15551 + C15550) * C153724 +
             (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
              C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
              C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
              C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                 C153864) *
                C153625 * C1898) *
               C153848 +
           (((C11582 + C11583 + C11584 + C11585) * C153864 +
             (C12510 + C12511 + C12512 + C12513) * C153724) *
                C153625 * C1898 -
            ((C11281 * C1330 - C11282 * C1325 - C11281 * C1331 +
              C153862 * C1340 + C11279 * C1332 - C11280 * C1326 -
              C11279 * C1333 + C11271 * C1341 + C11277 * C1334 -
              C11278 * C1327 - C11277 * C1335 + C11270 * C1342 +
              C11275 * C1336 - C11276 * C1328 - C11275 * C1337 +
              C11269 * C1343) *
                 C153724 +
             (C12513 + C12512 + C12511 + C12510) * C153864) *
                C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C63414 +
             (C39442 + C39443) * C63415 + C58748 * C63416 + C63807 * C153878) *
                C153625 * C1898 -
            (C66165 * C153878 + C62304 * C63416 + (C39444 + C39445) * C63415 +
             (C39443 + C39442) * C63414) *
                C153625 * C153601) *
               C153848 +
           ((C40462 * C63414 + C41246 * C63415 + C60549 * C63416 +
             (C60562 + C60563) * C153878) *
                C153625 * C153601 -
            (C60548 * C153878 + C41245 * C63416 + C40463 * C63415 +
             (C35193 + C35192) * C63414) *
                C153625 * C1898) *
               C153573) *
              C153840 +
          ((((C39446 + C39447) * C63414 + (C39448 + C39449) * C63415 +
             (C58775 + C58776) * C63416 + (C63821 + C63822) * C153878) *
                C153625 * C153601 -
            (C63816 * C153878 + C58766 * C63416 + (C39447 + C39446) * C63415 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C63414) *
                C153625 * C1898) *
               C153848 +
           (((C35200 + C35201) * C63414 + C40464 * C63415 + C59773 * C63416 +
             (C58777 + C58778) * C153878) *
                C153625 * C1898 -
            ((C152081 * C9038 - C34900 * C9035 - C152081 * C9039 +
              C153472 * C9044 + C152100 * C9040 - C34898 * C9036 -
              C152100 * C9041 + C153829 * C9045) *
                 C153878 +
             (C58778 + C58777) * C63416 + C58765 * C63415 + C40466 * C63414) *
                C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153864 +
             (C39442 + C39443) * C153724) *
                C23989 +
            ((C35192 + C35193) * C153864 + C40462 * C153724) * C23990 +
            C39078 * C153898) *
               C153921 -
           (C42245 * C153898 + (C41245 * C153724 + C40463 * C153864) * C23990 +
            ((C39444 + C39445) * C153724 + (C39443 + C39442) * C153864) *
                C23989) *
               C153922 +
           (((C39445 + C39444) * C153864 + (C43032 + C43033) * C153724) *
                C23989 +
            (C41246 * C153864 + (C41272 + C41273) * C153724) * C23990 +
            (C41255 * C153864 + (C41274 + C41275) * C153724) * C153898) *
               C2414) *
              C153848 +
          (((C40462 * C153864 + C41246 * C153724) * C23989 +
            (C39073 * C153864 + C41255 * C153724) * C23990 +
            (C42244 * C153864 + (C36758 + C36759) * C153724) * C153898) *
               C153922 -
           (C40953 * C153898 +
            (C37407 * C153724 + (C35195 + C35194) * C153864) * C23990 +
            (C40463 * C153724 + (C35193 + C35192) * C153864) * C23989) *
               C153921 -
           (((C152081 * C32074 - C34900 * C32073 - C152081 * C32075 +
              C153472 * C32076 + C152100 * C30186 - C34898 * C30183 -
              C152100 * C30187 + C153829 * C30189) *
                 C153724 +
             (C36759 + C36758) * C153864) *
                C153898 +
            ((C41275 + C41274) * C153724 + C41244 * C153864) * C23990 +
            ((C41273 + C41272) * C153724 + C41245 * C153864) * C23989) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153864 +
            (C15542 + C15543 + C15544 + C15545) * C153724) *
               C153625 * C153921 -
           ((C15546 + C15547 + C15548 + C15549) * C153724 +
            (C15545 + C15544 + C15543 + C15542) * C153864) *
               C153625 * C153922 +
           ((C15549 + C15548 + C15547 + C15546) * C153864 +
            (C17938 + C17939 + C17940 + C17941) * C153724) *
               C153625 * C2414) *
              C153848 +
          (((C12509 + C12508 + C12507 + C12506) * C153864 +
            (C13084 + C13085 + C13086 + C13087) * C153724) *
               C153625 * C153922 -
           ((C12506 + C12507 + C12508 + C12509) * C153724 +
            (C11577 + C11576 + C11575 + C11574) * C153864) *
               C153625 * C153921 -
           ((C11281 * C8429 - C11282 * C8428 - C11281 * C8430 +
             C153862 * C8431 + C11279 * C6191 - C11280 * C6182 -
             C11279 * C6192 + C11271 * C6200 + C11277 * C6193 - C11278 * C6183 -
             C11277 * C6194 + C11270 * C6201 + C11275 * C6195 - C11276 * C6184 -
             C11275 * C6196 + C11269 * C6202) *
                C153724 +
            (C13087 + C13086 + C13085 + C13084) * C153864) *
               C153625 * C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C63414 +
            (C39442 + C39443) * C63415 + C58748 * C63416 + C63807 * C153878) *
               C153625 * C153921 -
           (C66165 * C153878 + C62304 * C63416 + (C39444 + C39445) * C63415 +
            (C39443 + C39442) * C63414) *
               C153625 * C153922 +
           (C58748 * C63414 + C63807 * C63415 + (C62317 + C62318) * C63416 +
            (C66178 + C66179) * C153878) *
               C153625 * C2414) *
              C153848 +
          ((C40462 * C63414 + C41246 * C63415 + C60549 * C63416 +
            (C60562 + C60563) * C153878) *
               C153625 * C153922 -
           (C60548 * C153878 + C41245 * C63416 + C40463 * C63415 +
            (C35193 + C35192) * C63414) *
               C153625 * C153921 -
           ((C152081 * C56477 - C34900 * C56476 - C152081 * C56478 +
             C153472 * C56479 + C152100 * C34024 - C34898 * C34021 -
             C152100 * C34025 + C153829 * C34027) *
                C153878 +
            (C60563 + C60562) * C63416 + C60548 * C63415 + C41245 * C63414) *
               C153625 * C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
                 C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
                 C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
                 C11281 * C158 - C11282 * C147 - C11281 * C159 +
                 C153862 * C171) *
                    C153864 +
                (C15542 + C15543 + C15544 + C15545) * C153724) *
                   C153625 * C1898 -
               ((C15546 + C15547 + C15548 + C15549) * C153724 +
                (C15545 + C15544 + C15543 + C15542) * C153864) *
                   C153625 * C153601) *
                  C153521 * C1093 +
              (((C15550 + C15551 + C15552 + C15553) * C153864 +
                (C15554 + C15555 + C15556 + C15557) * C153724) *
                   C153625 * C153601 -
               ((C15553 + C15552 + C15551 + C15550) * C153724 +
                (C11281 * C160 - C11282 * C148 - C11281 * C161 +
                 C153862 * C172 + C11279 * C158 - C11280 * C147 -
                 C11279 * C159 + C11271 * C171 + C11277 * C156 - C11278 * C146 -
                 C11277 * C157 + C11270 * C170 + C11275 * C154 - C11276 * C145 -
                 C11275 * C155 + C11269 * C169) *
                    C153864) *
                   C153625 * C1898) *
                  C153521 * C1094 +
              (((C11275 * C156 - C11276 * C146 - C11275 * C157 + C11269 * C170 +
                 C11277 * C158 - C11278 * C147 - C11277 * C159 + C11270 * C171 +
                 C11279 * C160 - C11280 * C148 - C11279 * C161 + C11271 * C172 +
                 C11281 * C162 - C11282 * C149 - C11281 * C163 +
                 C153862 * C173) *
                    C153864 +
                (C15970 + C15971 + C15972 + C15973) * C153724) *
                   C153625 * C1898 -
               ((C11281 * C510 - C11282 * C487 - C11281 * C511 +
                 C153862 * C523 + C11279 * C506 - C11280 * C485 -
                 C11279 * C507 + C11271 * C521 + C11277 * C504 - C11278 * C484 -
                 C11277 * C505 + C11270 * C520 + C11275 * C502 - C11276 * C483 -
                 C11275 * C503 + C11269 * C519) *
                    C153724 +
                (C15973 + C15972 + C15971 + C15970) * C153864) *
                   C153625 * C153601) *
                  C153521 * C1095) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
                 C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
                 C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
                 C11281 * C158 - C11282 * C147 - C11281 * C159 +
                 C153862 * C171) *
                    C153864 +
                (C15542 + C15543 + C15544 + C15545) * C153724) *
                   C153625 * C1898 -
               ((C15546 + C15547 + C15548 + C15549) * C153724 +
                (C15545 + C15544 + C15543 + C15542) * C153864) *
                   C153625 * C153601) *
                  C298 +
              (((C12509 + C12508 + C12507 + C12506) * C153864 +
                (C13084 + C13085 + C13086 + C13087) * C153724) *
                   C153625 * C153601 -
               ((C12506 + C12507 + C12508 + C12509) * C153724 +
                (C11577 + C11576 + C11575 + C11574) * C153864) *
                   C153625 * C1898) *
                  C299 +
              (((C11581 + C11580 + C11579 + C11578) * C153864 +
                (C13758 + C13759 + C13760 + C13761) * C153724) *
                   C153625 * C1898 -
               ((C11281 * C3289 - C11282 * C3282 - C11281 * C3290 +
                 C153862 * C3294 + C11279 * C3287 - C11280 * C3281 -
                 C11279 * C3288 + C11271 * C3293 + C11277 * C3285 -
                 C11278 * C3280 - C11277 * C3286 + C11270 * C3292 +
                 C11275 * C3283 - C11276 * C3279 - C11275 * C3284 +
                 C11269 * C3291) *
                    C153724 +
                (C13761 + C13760 + C13759 + C13758) * C153864) *
                   C153625 * C153601) *
                  C300) *
             C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
            C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
            C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
            C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
               C153864 +
           (C15542 + C15543 + C15544 + C15545) * C153724) *
              C153625 * C2104 -
          ((C15546 + C15547 + C15548 + C15549) * C153724 +
           (C15545 + C15544 + C15543 + C15542) * C153864) *
              C153625 * C2105 +
          ((C15549 + C15548 + C15547 + C15546) * C153864 +
           (C17938 + C17939 + C17940 + C17941) * C153724) *
              C153625 * C2106 -
          ((C11281 * C7524 - C11282 * C7517 - C11281 * C7525 + C153862 * C7529 +
            C11279 * C7522 - C11280 * C7516 - C11279 * C7523 + C11271 * C7528 +
            C11277 * C7520 - C11278 * C7515 - C11277 * C7521 + C11270 * C7527 +
            C11275 * C7518 - C11276 * C7514 - C11275 * C7519 + C11269 * C7526) *
               C153724 +
           (C17941 + C17940 + C17939 + C17938) * C153864) *
              C153625 * C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153864 +
             (C39442 + C39443) * C153724) *
                C23989 +
            ((C35192 + C35193) * C153864 + C40462 * C153724) * C23990 +
            C39078 * C153898) *
               C1898 -
           (C42245 * C153898 + (C41245 * C153724 + C40463 * C153864) * C23990 +
            ((C39444 + C39445) * C153724 + (C39443 + C39442) * C153864) *
                C23989) *
               C153601) *
              C153521 * C1093 +
          ((((C39446 + C39447) * C153864 + (C39448 + C39449) * C153724) *
                C23989 +
            (C40464 * C153864 + (C39450 + C39451) * C153724) * C23990 +
            (C40465 * C153864 + (C39452 + C39453) * C153724) * C153898) *
               C153601 -
           (C39079 * C153898 +
            (C40466 * C153724 + (C35201 + C35200) * C153864) * C23990 +
            ((C39447 + C39446) * C153724 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153864) *
                C23989) *
               C1898) *
              C153521 * C1094 +
          ((((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
              C152081 * C158 - C34900 * C147 - C152081 * C159 +
              C153472 * C171) *
                 C153864 +
             (C40074 + C40075) * C153724) *
                C23989 +
            ((C35640 + C35641) * C153864 + (C39768 + C39769) * C153724) *
                C23990 +
            ((C35642 + C35643) * C153864 + (C39770 + C39771) * C153724) *
                C153898) *
               C1898 -
           (((C152081 * C3289 - C34900 * C3282 - C152081 * C3290 +
              C153472 * C3294 + C152100 * C3287 - C34898 * C3281 -
              C152100 * C3288 + C153829 * C3293) *
                 C153724 +
             (C39771 + C39770) * C153864) *
                C153898 +
            ((C152081 * C1332 - C34900 * C1326 - C152081 * C1333 +
              C153472 * C1341 + C152100 * C1334 - C34898 * C1327 -
              C152100 * C1335 + C153829 * C1342) *
                 C153724 +
             (C39769 + C39768) * C153864) *
                C23990 +
            ((C152081 * C504 - C34900 * C484 - C152081 * C505 + C153472 * C520 +
              C152100 * C502 - C34898 * C483 - C152100 * C503 +
              C153829 * C519) *
                 C153724 +
             (C40075 + C40074) * C153864) *
                C23989) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153864 +
             (C39442 + C39443) * C153724) *
                C23989 +
            ((C35192 + C35193) * C153864 + C40462 * C153724) * C23990 +
            C39078 * C153898) *
               C1898 -
           (C42245 * C153898 + (C41245 * C153724 + C40463 * C153864) * C23990 +
            ((C39444 + C39445) * C153724 + (C39443 + C39442) * C153864) *
                C23989) *
               C153601) *
              C298 +
          (((C40462 * C153864 + C41246 * C153724) * C23989 +
            (C39073 * C153864 + C41255 * C153724) * C23990 +
            (C42244 * C153864 + (C36758 + C36759) * C153724) * C153898) *
               C153601 -
           (C40953 * C153898 +
            (C37407 * C153724 + (C35195 + C35194) * C153864) * C23990 +
            (C40463 * C153724 + (C35193 + C35192) * C153864) * C23989) *
               C1898) *
              C299 +
          ((C39078 * C23989 + (C35209 * C153864 + C42244 * C153724) * C23990 +
            ((C35199 + C35198) * C153864 + (C37422 + C37423) * C153724) *
                C153898) *
               C1898 -
           (((C152081 * C28550 - C34900 * C28547 - C152081 * C28551 +
              C153472 * C28553 + C152100 * C28548 - C34898 * C28546 -
              C152100 * C28549 + C153829 * C28552) *
                 C153724 +
             (C37423 + C37422) * C153864) *
                C153898 +
            ((C36759 + C36758) * C153724 + C37406 * C153864) * C23990 +
            C42245 * C23989) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153864 +
            (C39442 + C39443) * C153724) *
               C23989 +
           ((C35192 + C35193) * C153864 + C40462 * C153724) * C23990 +
           C39078 * C153898) *
              C2104 -
          (C42245 * C153898 + (C41245 * C153724 + C40463 * C153864) * C23990 +
           ((C39444 + C39445) * C153724 + (C39443 + C39442) * C153864) *
               C23989) *
              C2105 +
          (((C39445 + C39444) * C153864 + (C43032 + C43033) * C153724) *
               C23989 +
           (C41246 * C153864 + (C41272 + C41273) * C153724) * C23990 +
           (C41255 * C153864 + (C41274 + C41275) * C153724) * C153898) *
              C2106 -
          (((C152081 * C31225 - C34900 * C31222 - C152081 * C31226 +
             C153472 * C31228 + C152100 * C31223 - C34898 * C31221 -
             C152100 * C31224 + C153829 * C31227) *
                C153724 +
            (C41275 + C41274) * C153864) *
               C153898 +
           ((C152081 * C9040 - C34900 * C9036 - C152081 * C9041 +
             C153472 * C9045 + C152100 * C9042 - C34898 * C9037 -
             C152100 * C9043 + C153829 * C9046) *
                C153724 +
            (C41273 + C41272) * C153864) *
               C23990 +
           ((C152081 * C7520 - C34900 * C7515 - C152081 * C7521 +
             C153472 * C7527 + C152100 * C7518 - C34898 * C7514 -
             C152100 * C7519 + C153829 * C7526) *
                C153724 +
            (C43033 + C43032) * C153864) *
               C23989) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C63414 +
            (C39442 + C39443) * C63415 + C58748 * C63416 + C63807 * C153878) *
               C153625 * C1898 -
           ((C62318 + C62317) * C153878 + C62304 * C63416 +
            (C39444 + C39445) * C63415 + (C39443 + C39442) * C63414) *
               C153625 * C153601) *
              C153521 * C1093 +
          (((C39446 + C39447) * C63414 + (C39448 + C39449) * C63415 +
            (C58775 + C58776) * C63416 + (C63821 + C63822) * C153878) *
               C153625 * C153601 -
           (C63816 * C153878 + C58766 * C63416 + (C39447 + C39446) * C63415 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C63414) *
               C153625 * C1898) *
              C153521 * C1094 +
          (((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
             C152081 * C158 - C34900 * C147 - C152081 * C159 + C153472 * C171) *
                C63414 +
            (C40074 + C40075) * C63415 + (C59385 + C59386) * C63416 +
            (C64223 + C64224) * C153878) *
               C153625 * C1898 -
           ((C152081 * C7524 - C34900 * C7517 - C152081 * C7525 +
             C153472 * C7529 + C152100 * C7522 - C34898 * C7516 -
             C152100 * C7523 + C153829 * C7528) *
                C153878 +
            (C64224 + C64223) * C63416 + (C59386 + C59385) * C63415 +
            (C40075 + C40074) * C63414) *
               C153625 * C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C63414 +
            (C39442 + C39443) * C63415 + C58748 * C63416 + C63807 * C153878) *
               C153625 * C1898 -
           ((C62318 + C62317) * C153878 + C62304 * C63416 +
            (C39444 + C39445) * C63415 + (C39443 + C39442) * C63414) *
               C153625 * C153601) *
              C298 +
          ((C40462 * C63414 + C41246 * C63415 + C60549 * C63416 +
            (C60562 + C60563) * C153878) *
               C153625 * C153601 -
           (C60548 * C153878 + C41245 * C63416 + C40463 * C63415 +
            (C35193 + C35192) * C63414) *
               C153625 * C1898) *
              C299 +
          ((C35208 * C63414 + C39073 * C63415 + C41255 * C63416 +
            (C41274 + C41275) * C153878) *
               C153625 * C1898 -
           ((C152081 * C31225 - C34900 * C31222 - C152081 * C31226 +
             C153472 * C31228 + C152100 * C31223 - C34898 * C31221 -
             C152100 * C31224 + C153829 * C31227) *
                C153878 +
            (C41275 + C41274) * C63416 + C41244 * C63415 + C37407 * C63414) *
               C153625 * C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
            C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
               C63414 +
           (C39442 + C39443) * C63415 + C58748 * C63416 + C63807 * C153878) *
              C153625 * C2104 -
          (C66165 * C153878 + C62304 * C63416 + (C39444 + C39445) * C63415 +
           (C39443 + C39442) * C63414) *
              C153625 * C2105 +
          (C58748 * C63414 + C63807 * C63415 + (C62317 + C62318) * C63416 +
           (C66178 + C66179) * C153878) *
              C153625 * C2106 -
          ((C152081 * C56031 - C34900 * C56028 - C152081 * C56032 +
            C153472 * C56034 + C152100 * C56029 - C34898 * C56027 -
            C152100 * C56030 + C153829 * C56033) *
               C153878 +
           (C66179 + C66178) * C63416 + C66165 * C63415 + C62304 * C63414) *
              C153625 * C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153864 +
             (C39442 + C39443) * C153724) *
                C23989 +
            ((C35192 + C35193) * C153864 + C40462 * C153724) * C23990 +
            C39078 * C153898) *
               C153921 -
           (C42245 * C153898 + (C41245 * C153724 + C40463 * C153864) * C23990 +
            ((C39444 + C39445) * C153724 + (C39443 + C39442) * C153864) *
                C23989) *
               C153922 +
           (((C39445 + C39444) * C153864 + (C43032 + C43033) * C153724) *
                C23989 +
            (C41246 * C153864 + (C41272 + C41273) * C153724) * C23990 +
            (C41255 * C153864 + (C41274 + C41275) * C153724) * C153898) *
               C2414) *
              C153521 * C153840 +
          ((((C39446 + C39447) * C153864 + (C39448 + C39449) * C153724) *
                C23989 +
            (C40464 * C153864 + (C39450 + C39451) * C153724) * C23990 +
            (C40465 * C153864 + (C39452 + C39453) * C153724) * C153898) *
               C153922 -
           (C39079 * C153898 +
            (C40466 * C153724 + (C35201 + C35200) * C153864) * C23990 +
            ((C39447 + C39446) * C153724 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153864) *
                C23989) *
               C153921 -
           (((C152081 * C6185 - C34900 * C6179 - C152081 * C6186 +
              C153472 * C6197 + C152100 * C6187 - C34898 * C6180 -
              C152100 * C6188 + C153829 * C6198) *
                 C153724 +
             (C39453 + C39452) * C153864) *
                C153898 +
            ((C152081 * C6191 - C34900 * C6182 - C152081 * C6192 +
              C153472 * C6200 + C152100 * C6193 - C34898 * C6183 -
              C152100 * C6194 + C153829 * C6201) *
                 C153724 +
             (C39451 + C39450) * C153864) *
                C23990 +
            ((C152081 * C2117 - C34900 * C2110 - C152081 * C2118 +
              C153472 * C2125 + C152100 * C2119 - C34898 * C2111 -
              C152100 * C2120 + C153829 * C2126) *
                 C153724 +
             (C39449 + C39448) * C153864) *
                C23989) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153864 +
            (C15542 + C15543 + C15544 + C15545) * C153724) *
               C153625 * C153921 -
           ((C15546 + C15547 + C15548 + C15549) * C153724 +
            (C15545 + C15544 + C15543 + C15542) * C153864) *
               C153625 * C153922 +
           ((C15549 + C15548 + C15547 + C15546) * C153864 +
            (C17938 + C17939 + C17940 + C17941) * C153724) *
               C153625 * C2414) *
              C153521 * C153840 +
          (((C15550 + C15551 + C15552 + C15553) * C153864 +
            (C15554 + C15555 + C15556 + C15557) * C153724) *
               C153625 * C153922 -
           ((C15553 + C15552 + C15551 + C15550) * C153724 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153864) *
               C153625 * C153921 -
           ((C11281 * C2113 - C11282 * C2108 - C11281 * C2114 +
             C153862 * C2123 + C11279 * C2115 - C11280 * C2109 -
             C11279 * C2116 + C11271 * C2124 + C11277 * C2117 - C11278 * C2110 -
             C11277 * C2118 + C11270 * C2125 + C11275 * C2119 - C11276 * C2111 -
             C11275 * C2120 + C11269 * C2126) *
                C153724 +
            (C15557 + C15556 + C15555 + C15554) * C153864) *
               C153625 * C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C63414 +
            (C39442 + C39443) * C63415 + C58748 * C63416 + C63807 * C153878) *
               C153625 * C153921 -
           (C66165 * C153878 + C62304 * C63416 + (C39444 + C39445) * C63415 +
            (C39443 + C39442) * C63414) *
               C153625 * C153922 +
           (C58748 * C63414 + C63807 * C63415 + (C62317 + C62318) * C63416 +
            (C66178 + C66179) * C153878) *
               C153625 * C2414) *
              C153521 * C153840 +
          (((C39446 + C39447) * C63414 + (C39448 + C39449) * C63415 +
            (C58775 + C58776) * C63416 + (C63821 + C63822) * C153878) *
               C153625 * C153922 -
           (C63816 * C153878 + C58766 * C63416 + (C39447 + C39446) * C63415 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C63414) *
               C153625 * C153921 -
           ((C152081 * C10381 - C34900 * C10378 - C152081 * C10382 +
             C153472 * C10387 + C152100 * C10383 - C34898 * C10379 -
             C152100 * C10384 + C153829 * C10388) *
                C153878 +
            (C63822 + C63821) * C63416 + C63816 * C63415 + C58766 * C63414) *
               C153625 * C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153864 +
            (C15542 + C15543 + C15544 + C15545) * C153724) *
               C153625 * C1898 -
           ((C15546 + C15547 + C15548 + C15549) * C153724 +
            (C15545 + C15544 + C15543 + C15542) * C153864) *
               C153625 * C153601) *
              C298 +
          (((C12509 + C12508 + C12507 + C12506) * C153864 +
            (C13084 + C13085 + C13086 + C13087) * C153724) *
               C153625 * C153601 -
           ((C12506 + C12507 + C12508 + C12509) * C153724 +
            (C11577 + C11576 + C11575 + C11574) * C153864) *
               C153625 * C1898) *
              C299 +
          (((C11581 + C11580 + C11579 + C11578) * C153864 +
            (C13758 + C13759 + C13760 + C13761) * C153724) *
               C153625 * C1898 -
           ((C11281 * C3289 - C11282 * C3282 - C11281 * C3290 +
             C153862 * C3294 + C11279 * C3287 - C11280 * C3281 -
             C11279 * C3288 + C11271 * C3293 + C11277 * C3285 - C11278 * C3280 -
             C11277 * C3286 + C11270 * C3292 + C11275 * C3283 - C11276 * C3279 -
             C11275 * C3284 + C11269 * C3291) *
                C153724 +
            (C13761 + C13760 + C13759 + C13758) * C153864) *
               C153625 * C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153864 +
            (C15542 + C15543 + C15544 + C15545) * C153724) *
               C153625 * C1898 -
           ((C15546 + C15547 + C15548 + C15549) * C153724 +
            (C15545 + C15544 + C15543 + C15542) * C153864) *
               C153625 * C153601) *
              C153521 * C1093 +
          (((C15550 + C15551 + C15552 + C15553) * C153864 +
            (C15554 + C15555 + C15556 + C15557) * C153724) *
               C153625 * C153601 -
           ((C15553 + C15552 + C15551 + C15550) * C153724 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153864) *
               C153625 * C1898) *
              C153521 * C1094 +
          (((C11275 * C156 - C11276 * C146 - C11275 * C157 + C11269 * C170 +
             C11277 * C158 - C11278 * C147 - C11277 * C159 + C11270 * C171 +
             C11279 * C160 - C11280 * C148 - C11279 * C161 + C11271 * C172 +
             C11281 * C162 - C11282 * C149 - C11281 * C163 + C153862 * C173) *
                C153864 +
            (C15970 + C15971 + C15972 + C15973) * C153724) *
               C153625 * C1898 -
           ((C11281 * C510 - C11282 * C487 - C11281 * C511 + C153862 * C523 +
             C11279 * C506 - C11280 * C485 - C11279 * C507 + C11271 * C521 +
             C11277 * C504 - C11278 * C484 - C11277 * C505 + C11270 * C520 +
             C11275 * C502 - C11276 * C483 - C11275 * C503 + C11269 * C519) *
                C153724 +
            (C15973 + C15972 + C15971 + C15970) * C153864) *
               C153625 * C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153864 +
             (C39442 + C39443) * C153724) *
                C23989 +
            ((C35192 + C35193) * C153864 + C40462 * C153724) * C23990 +
            C39078 * C153898) *
               C1898 -
           (C42245 * C153898 + (C41245 * C153724 + C40463 * C153864) * C23990 +
            ((C39444 + C39445) * C153724 + (C39443 + C39442) * C153864) *
                C23989) *
               C153601) *
              C153521 * C1093 +
          ((((C39446 + C39447) * C153864 + (C39448 + C39449) * C153724) *
                C23989 +
            (C40464 * C153864 + (C39450 + C39451) * C153724) * C23990 +
            (C40465 * C153864 + (C39452 + C39453) * C153724) * C153898) *
               C153601 -
           (C39079 * C153898 +
            (C40466 * C153724 + (C35201 + C35200) * C153864) * C23990 +
            ((C39447 + C39446) * C153724 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153864) *
                C23989) *
               C1898) *
              C153521 * C1094 +
          ((((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
              C152081 * C158 - C34900 * C147 - C152081 * C159 +
              C153472 * C171) *
                 C153864 +
             (C40074 + C40075) * C153724) *
                C23989 +
            ((C35640 + C35641) * C153864 + (C39768 + C39769) * C153724) *
                C23990 +
            ((C35642 + C35643) * C153864 + (C39770 + C39771) * C153724) *
                C153898) *
               C1898 -
           (((C152081 * C3289 - C34900 * C3282 - C152081 * C3290 +
              C153472 * C3294 + C152100 * C3287 - C34898 * C3281 -
              C152100 * C3288 + C153829 * C3293) *
                 C153724 +
             (C39771 + C39770) * C153864) *
                C153898 +
            ((C152081 * C1332 - C34900 * C1326 - C152081 * C1333 +
              C153472 * C1341 + C152100 * C1334 - C34898 * C1327 -
              C152100 * C1335 + C153829 * C1342) *
                 C153724 +
             (C39769 + C39768) * C153864) *
                C23990 +
            ((C152081 * C504 - C34900 * C484 - C152081 * C505 + C153472 * C520 +
              C152100 * C502 - C34898 * C483 - C152100 * C503 +
              C153829 * C519) *
                 C153724 +
             (C40075 + C40074) * C153864) *
                C23989) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153864 +
             (C39442 + C39443) * C153724) *
                C23989 +
            ((C35192 + C35193) * C153864 + C40462 * C153724) * C23990 +
            C39078 * C153898) *
               C1898 -
           (C42245 * C153898 + (C41245 * C153724 + C40463 * C153864) * C23990 +
            ((C39444 + C39445) * C153724 + (C39443 + C39442) * C153864) *
                C23989) *
               C153601) *
              C298 +
          (((C40462 * C153864 + C41246 * C153724) * C23989 +
            (C39073 * C153864 + C41255 * C153724) * C23990 +
            (C42244 * C153864 + (C36758 + C36759) * C153724) * C153898) *
               C153601 -
           (C40953 * C153898 +
            (C37407 * C153724 + (C35195 + C35194) * C153864) * C23990 +
            (C40463 * C153724 + (C35193 + C35192) * C153864) * C23989) *
               C1898) *
              C299 +
          ((C39078 * C23989 + (C35209 * C153864 + C42244 * C153724) * C23990 +
            ((C35199 + C35198) * C153864 + (C37422 + C37423) * C153724) *
                C153898) *
               C1898 -
           (((C152081 * C28550 - C34900 * C28547 - C152081 * C28551 +
              C153472 * C28553 + C152100 * C28548 - C34898 * C28546 -
              C152100 * C28549 + C153829 * C28552) *
                 C153724 +
             (C37423 + C37422) * C153864) *
                C153898 +
            ((C36759 + C36758) * C153724 + C37406 * C153864) * C23990 +
            C42245 * C23989) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C63414 +
            (C39442 + C39443) * C63415 + C58748 * C63416 + C63807 * C153878) *
               C153625 * C1898 -
           ((C62318 + C62317) * C153878 + C62304 * C63416 +
            (C39444 + C39445) * C63415 + (C39443 + C39442) * C63414) *
               C153625 * C153601) *
              C153521 * C1093 +
          (((C39446 + C39447) * C63414 + (C39448 + C39449) * C63415 +
            (C58775 + C58776) * C63416 + (C63821 + C63822) * C153878) *
               C153625 * C153601 -
           (C63816 * C153878 + C58766 * C63416 + (C39447 + C39446) * C63415 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C63414) *
               C153625 * C1898) *
              C153521 * C1094 +
          (((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
             C152081 * C158 - C34900 * C147 - C152081 * C159 + C153472 * C171) *
                C63414 +
            (C40074 + C40075) * C63415 + (C59385 + C59386) * C63416 +
            (C64223 + C64224) * C153878) *
               C153625 * C1898 -
           ((C152081 * C7524 - C34900 * C7517 - C152081 * C7525 +
             C153472 * C7529 + C152100 * C7522 - C34898 * C7516 -
             C152100 * C7523 + C153829 * C7528) *
                C153878 +
            (C64224 + C64223) * C63416 + (C59386 + C59385) * C63415 +
            (C40075 + C40074) * C63414) *
               C153625 * C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C63414 +
            (C39442 + C39443) * C63415 + C58748 * C63416 + C63807 * C153878) *
               C153625 * C1898 -
           ((C62318 + C62317) * C153878 + C62304 * C63416 +
            (C39444 + C39445) * C63415 + (C39443 + C39442) * C63414) *
               C153625 * C153601) *
              C298 +
          ((C40462 * C63414 + C41246 * C63415 + C60549 * C63416 +
            (C60562 + C60563) * C153878) *
               C153625 * C153601 -
           (C60548 * C153878 + C41245 * C63416 + C40463 * C63415 +
            (C35193 + C35192) * C63414) *
               C153625 * C1898) *
              C299 +
          ((C35208 * C63414 + C39073 * C63415 + C41255 * C63416 +
            (C41274 + C41275) * C153878) *
               C153625 * C1898 -
           ((C152081 * C31225 - C34900 * C31222 - C152081 * C31226 +
             C153472 * C31228 + C152100 * C31223 - C34898 * C31221 -
             C152100 * C31224 + C153829 * C31227) *
                C153878 +
            (C41275 + C41274) * C63416 + C41244 * C63415 + C37407 * C63414) *
               C153625 * C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C153537 * C153848 -
           ((C3044 + C3045 + C3046) * C153637 * C153898 +
            (C3043 + C3042 + C3041) * C153637 * C153924 +
            (C3040 + C3039 + C3038) * C153637 * C153936) *
               C153537 * C153573) *
              C153917 +
          (((C3047 + C3048 + C3049) * C153637 * C153936 +
            (C3050 + C3051 + C3052) * C153637 * C153924 +
            (C3053 + C3054 + C3055) * C153637 * C153898) *
               C153537 * C153573 -
           (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153637 * C153936) *
               C153537 * C153848) *
              C153918 +
          (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
             C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
             C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                C153637 * C153936 +
            (C3550 + C3551 + C3552) * C153637 * C153924 +
            (C3553 + C3554 + C3555) * C153637 * C153898) *
               C153537 * C153848 -
           ((C2693 * C1188 - C2694 * C1183 - C2693 * C1189 + C153885 * C1198 +
             C2691 * C1190 - C2692 * C1184 - C2691 * C1191 + C2684 * C1199 +
             C2689 * C1192 - C2690 * C1185 - C2689 * C1193 + C2683 * C1200) *
                C153637 * C153898 +
            (C3555 + C3554 + C3553) * C153637 * C153924 +
            (C3552 + C3551 + C3550) * C153637 * C153936) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C153537 * C153848 -
           (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
            C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
            C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
            C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
            C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
               C153637 * C153625 * C153537 * C153573) *
              C153917 +
          ((C134 * C321 - C135 * C306 - C134 * C322 + C121 * C342 +
            C136 * C319 - C137 * C305 - C136 * C320 + C122 * C341 +
            C138 * C317 - C139 * C304 - C138 * C318 + C123 * C340 +
            C140 * C315 - C141 * C303 - C140 * C316 + C124 * C339 +
            C142 * C335 - C143 * C313 - C142 * C336 + C125 * C349) *
               C153637 * C153625 * C153537 * C153573 -
           (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
            C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
            C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
            C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
            C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
               C153637 * C153625 * C153537 * C153848) *
              C153918 +
          ((C134 * C156 - C135 * C146 - C134 * C157 + C121 * C170 +
            C136 * C158 - C137 * C147 - C136 * C159 + C122 * C171 +
            C138 * C160 - C139 * C148 - C138 * C161 + C123 * C172 +
            C140 * C162 - C141 * C149 - C140 * C163 + C124 * C173 +
            C142 * C164 - C143 * C150 - C142 * C165 + C125 * C174) *
               C153637 * C153625 * C153537 * C153848 -
           (C142 * C652 - C143 * C651 - C142 * C653 + C125 * C654 +
            C140 * C335 - C141 * C313 - C140 * C336 + C124 * C349 +
            C138 * C315 - C139 * C303 - C138 * C316 + C123 * C339 +
            C136 * C317 - C137 * C304 - C136 * C318 + C122 * C340 +
            C134 * C319 - C135 * C305 - C134 * C320 + C121 * C341) *
               C153637 * C153625 * C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153537 * C153848 -
           ((C24331 + C24332 + C24333) * C153637 * C153898 +
            (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C153537 * C153573) *
              C153917 +
          (((C24334 + C24335 + C24336) * C153637 * C23989 +
            (C24337 + C24338 + C24339) * C153637 * C23990 +
            (C24340 + C24341 + C24342) * C153637 * C153898) *
               C153537 * C153573 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C153537 * C153848) *
              C153918 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C153637 * C23989 +
            (C24821 + C24822 + C24823) * C153637 * C23990 +
            (C24824 + C24825 + C24826) * C153637 * C153898) *
               C153537 * C153848 -
           ((C23996 * C1188 - C23997 * C1183 - C23996 * C1189 +
             C153885 * C1198 + C23994 * C1190 - C23995 * C1184 -
             C23994 * C1191 + C153914 * C1199 + C23992 * C1192 -
             C23993 * C1185 - C23992 * C1193 + C153933 * C1200) *
                C153637 * C153898 +
            (C24826 + C24825 + C24824) * C153637 * C23990 +
            (C24823 + C24822 + C24821) * C153637 * C23989) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153537 * C153848 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C153537 * C153573) *
              C153917 +
          ((C28420 * C28207 + C28421 * C28208 + C28422 * C28209 +
            C28423 * C28210 + C28424 * C28211) *
               C153537 * C153573 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C153537 * C153848) *
              C153918 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C153637 * C28207 +
            C28705 * C28208 + C28706 * C28209 + C28707 * C28210 +
            C28708 * C28211) *
               C153537 * C153848 -
           ((C28212 * C4530 - C28213 * C4527 - C28212 * C4531 +
             C153462 * C4536) *
                C153637 * C28211 +
            C28708 * C28210 + C28707 * C28209 + C28706 * C28208 +
            C28705 * C28207) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C47696 +
            (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
               C153625 * C153537 * C153848 -
           ((C26063 + C26062 + C26061) * C153901 +
            (C25410 + C25411 + C25412) * C47697 +
            (C24327 + C24326 + C24325) * C47696) *
               C153625 * C153537 * C153573) *
              C153917 +
          (((C24334 + C24335 + C24336) * C47696 +
            (C25413 + C25414 + C25415) * C47697 +
            (C23992 * C1336 - C23993 * C1328 - C23992 * C1337 +
             C153933 * C1343 + C23994 * C1334 - C23995 * C1327 -
             C23994 * C1335 + C153914 * C1342 + C23996 * C1332 -
             C23997 * C1326 - C23996 * C1333 + C153885 * C1341) *
                C153901) *
               C153625 * C153537 * C153573 -
           (C48265 * C153901 + (C48255 + C48254 + C48253) * C47697 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C47696) *
               C153625 * C153537 * C153848) *
              C153918 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C47696 +
            (C23992 * C492 - C23993 * C478 - C23992 * C493 + C153933 * C514 +
             C23994 * C490 - C23995 * C477 - C23994 * C491 + C153914 * C513 +
             C23996 * C488 - C23997 * C476 - C23996 * C489 + C153885 * C512) *
                C47697 +
            (C23992 * C502 - C23993 * C483 - C23992 * C503 + C153933 * C519 +
             C23994 * C504 - C23995 * C484 - C23994 * C505 + C153914 * C520 +
             C23996 * C506 - C23997 * C485 - C23996 * C507 + C153885 * C521) *
                C153901) *
               C153625 * C153537 * C153848 -
           ((C23996 * C1330 - C23997 * C1325 - C23996 * C1331 +
             C153885 * C1340 + C23994 * C1332 - C23995 * C1326 -
             C23994 * C1333 + C153914 * C1341 + C23992 * C1334 -
             C23993 * C1327 - C23992 * C1335 + C153933 * C1342) *
                C153901 +
            (C23996 * C959 - C23997 * C949 - C23996 * C960 + C153885 * C967 +
             C23994 * C957 - C23995 * C948 - C23994 * C958 + C153914 * C966 +
             C23992 * C955 - C23993 * C947 - C23992 * C956 + C153933 * C965) *
                C47697 +
            (C24823 + C24822 + C24821) * C47696) *
               C153625 * C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C47696 +
             C31290 * C47697 + C31291 * C153901) *
                C153936 +
            (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
               C153537 * C153848 -
           ((C52087 + C52088 + C52089) * C153898 +
            (C52086 + C52085 + C52084) * C153924 +
            (C52083 + C52082 + C52081) * C153936) *
               C153537 * C153573) *
              C153917 +
          (((C52090 + C52091 + C52092) * C153936 +
            (C52093 + C52094 + C52095) * C153924 +
            (C52096 + C52097 + C52098) * C153898) *
               C153537 * C153573 -
           (C52102 * C153898 + (C52092 + C52091 + C52090) * C153924 +
            (C31296 * C153901 + C31295 * C47697 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C47696) *
                C153936) *
               C153537 * C153848) *
              C153918 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C47696 +
             C31782 * C47697 + C31783 * C153901) *
                C153936 +
            (C52539 + C52540 + C52541) * C153924 +
            (C52542 + C52543 + C52544) * C153898) *
               C153537 * C153848 -
           (((C28212 * C4784 - C28213 * C4781 - C28212 * C4785 +
              C153462 * C4790) *
                 C153901 +
             C44743 * C47697 + C28703 * C47696) *
                C153898 +
            (C52544 + C52543 + C52542) * C153924 +
            (C52541 + C52540 + C52539) * C153936) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153637 * C153936 +
             (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
                C153849 -
            ((C4152 + C4153 + C4154) * C153637 * C153898 +
             (C4155 + C4156 + C4157) * C153637 * C153924 +
             (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
              C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
              C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                 C153637 * C153936) *
                C153601) *
               C153848 +
           (((C4157 + C4156 + C4155) * C153637 * C153936 +
             (C4154 + C4153 + C4152) * C153637 * C153924 +
             (C2689 * C4067 - C2690 * C4063 - C2689 * C4068 + C2683 * C4075 +
              C2691 * C4069 - C2692 * C4064 - C2691 * C4070 + C2684 * C4076 +
              C2693 * C4071 - C2694 * C4065 - C2693 * C4072 + C153885 * C4077) *
                 C153637 * C153898) *
                C153601 -
            ((C3044 + C3045 + C3046) * C153637 * C153898 +
             (C3043 + C3042 + C3041) * C153637 * C153924 +
             (C3040 + C3039 + C3038) * C153637 * C153936) *
                C153849) *
               C153573) *
              C301 +
          ((((C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515 +
              C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
              C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513) *
                 C153637 * C153936 +
             (C4158 + C4159 + C4160) * C153637 * C153924 +
             (C4161 + C4162 + C4163) * C153637 * C153898) *
                C153601 -
            (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
             (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
              C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
              C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                 C153637 * C153936) *
                C153849) *
               C153848 +
           (((C3047 + C3048 + C3049) * C153637 * C153936 +
             (C3050 + C3051 + C3052) * C153637 * C153924 +
             (C3053 + C3054 + C3055) * C153637 * C153898) *
                C153849 -
            ((C2693 * C4073 - C2694 * C4066 - C2693 * C4074 + C153885 * C4078 +
              C2691 * C4071 - C2692 * C4065 - C2691 * C4072 + C2684 * C4077 +
              C2689 * C4069 - C2690 * C4064 - C2689 * C4070 + C2683 * C4076) *
                 C153637 * C153898 +
             (C4163 + C4162 + C4161) * C153637 * C153924 +
             (C4160 + C4159 + C4158) * C153637 * C153936) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
             C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
             C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
             C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
             C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                C153637 * C153625 * C153849 -
            (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
             C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
             C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
             C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
             C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
                C153637 * C153625 * C153601) *
               C153848 +
           ((C134 * C951 - C135 * C945 - C134 * C952 + C121 * C963 +
             C136 * C953 - C137 * C946 - C136 * C954 + C122 * C964 +
             C138 * C955 - C139 * C947 - C138 * C956 + C123 * C965 +
             C140 * C957 - C141 * C948 - C140 * C958 + C124 * C966 +
             C142 * C959 - C143 * C949 - C142 * C960 + C125 * C967) *
                C153637 * C153625 * C153601 -
            (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
             C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
             C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
             C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
             C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
                C153637 * C153625 * C153849) *
               C153573) *
              C301 +
          (((C134 * C494 - C135 * C479 - C134 * C495 + C121 * C515 +
             C136 * C492 - C137 * C478 - C136 * C493 + C122 * C514 +
             C138 * C490 - C139 * C477 - C138 * C491 + C123 * C513 +
             C140 * C488 - C141 * C476 - C140 * C489 + C124 * C512 +
             C142 * C508 - C143 * C486 - C142 * C509 + C125 * C522) *
                C153637 * C153625 * C153601 -
            (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
             C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
             C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
             C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
             C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
                C153637 * C153625 * C153849) *
               C153848 +
           ((C134 * C321 - C135 * C306 - C134 * C322 + C121 * C342 +
             C136 * C319 - C137 * C305 - C136 * C320 + C122 * C341 +
             C138 * C317 - C139 * C304 - C138 * C318 + C123 * C340 +
             C140 * C315 - C141 * C303 - C140 * C316 + C124 * C339 +
             C142 * C335 - C143 * C313 - C142 * C336 + C125 * C349) *
                C153637 * C153625 * C153849 -
            (C142 * C961 - C143 * C950 - C142 * C962 + C125 * C968 +
             C140 * C959 - C141 * C949 - C140 * C960 + C124 * C967 +
             C138 * C957 - C139 * C948 - C138 * C958 + C123 * C966 +
             C136 * C955 - C137 * C947 - C136 * C956 + C122 * C965 +
             C134 * C953 - C135 * C946 - C134 * C954 + C121 * C964) *
                C153637 * C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C153637 * C23989 +
             (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
                C153849 -
            ((C25407 + C25408 + C25409) * C153637 * C153898 +
             (C25410 + C25411 + C25412) * C153637 * C23990 +
             (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
              C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
              C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                 C153637 * C23989) *
                C153601) *
               C153848 +
           (((C25412 + C25411 + C25410) * C153637 * C23989 +
             (C25409 + C25408 + C25407) * C153637 * C23990 +
             (C23992 * C4067 - C23993 * C4063 - C23992 * C4068 +
              C153933 * C4075 + C23994 * C4069 - C23995 * C4064 -
              C23994 * C4070 + C153914 * C4076 + C23996 * C4071 -
              C23997 * C4065 - C23996 * C4072 + C153885 * C4077) *
                 C153637 * C153898) *
                C153601 -
            ((C24331 + C24332 + C24333) * C153637 * C153898 +
             (C24330 + C24329 + C24328) * C153637 * C23990 +
             (C24327 + C24326 + C24325) * C153637 * C23989) *
                C153849) *
               C153573) *
              C301 +
          ((((C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515 +
              C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
              C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513) *
                 C153637 * C23989 +
             (C25413 + C25414 + C25415) * C153637 * C23990 +
             (C25416 + C25417 + C25418) * C153637 * C153898) *
                C153601 -
            (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C153637 * C23989) *
                C153849) *
               C153848 +
           (((C24334 + C24335 + C24336) * C153637 * C23989 +
             (C24337 + C24338 + C24339) * C153637 * C23990 +
             (C24340 + C24341 + C24342) * C153637 * C153898) *
                C153849 -
            ((C23996 * C4073 - C23997 * C4066 - C23996 * C4074 +
              C153885 * C4078 + C23994 * C4071 - C23995 * C4065 -
              C23994 * C4072 + C153914 * C4077 + C23992 * C4069 -
              C23993 * C4064 - C23992 * C4070 + C153933 * C4076) *
                 C153637 * C153898 +
             (C25418 + C25417 + C25416) * C153637 * C23990 +
             (C25415 + C25414 + C25413) * C153637 * C23989) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153637 * C28207 +
             C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
             C28418 * C28211) *
                C153849 -
            (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
             C29060 * C28208 +
             (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                 C153637 * C28207) *
                C153601) *
               C153848 +
           ((C29060 * C28207 + C29059 * C28208 + C29058 * C28209 +
             C29057 * C28210 +
             (C28212 * C28994 - C28213 * C28992 - C28212 * C28995 +
              C153462 * C28998) *
                 C153637 * C28211) *
                C153601 -
            (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
             C28416 * C28208 + C28415 * C28207) *
                C153849) *
               C153573) *
              C301 +
          ((((C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                 C153637 * C28207 +
             C29061 * C28208 + C29062 * C28209 + C29063 * C28210 +
             C29064 * C28211) *
                C153601 -
            (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
             C28420 * C28208 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153637 * C28207) *
                C153849) *
               C153848 +
           ((C28420 * C28207 + C28421 * C28208 + C28422 * C28209 +
             C28423 * C28210 + C28424 * C28211) *
                C153849 -
            ((C28212 * C28996 - C28213 * C28993 - C28212 * C28997 +
              C153462 * C28999) *
                 C153637 * C28211 +
             C29064 * C28210 + C29063 * C28209 + C29062 * C28208 +
             C29061 * C28207) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C47696 +
             (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
                C153625 * C153849 -
            ((C48250 + C48251 + C48252) * C153901 +
             (C48249 + C48248 + C48247) * C47697 +
             (C48246 + C48245 + C48244) * C47696) *
                C153625 * C153601) *
               C153848 +
           (((C25412 + C25411 + C25410) * C47696 +
             (C26061 + C26062 + C26063) * C47697 +
             (C23992 * C6195 - C23993 * C6184 - C23992 * C6196 +
              C153933 * C6202 + C23994 * C6193 - C23995 * C6183 -
              C23994 * C6194 + C153914 * C6201 + C23996 * C6191 -
              C23997 * C6182 - C23996 * C6192 + C153885 * C6200) *
                 C153901) *
                C153625 * C153601 -
            ((C26063 + C26062 + C26061) * C153901 +
             (C25410 + C25411 + C25412) * C47697 +
             (C24327 + C24326 + C24325) * C47696) *
                C153625 * C153849) *
               C153573) *
              C301 +
          ((((C48253 + C48254 + C48255) * C47696 +
             (C48256 + C48257 + C48258) * C47697 +
             (C48259 + C48260 + C48261) * C153901) *
                C153625 * C153601 -
            (C48265 * C153901 + (C48255 + C48254 + C48253) * C47697 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C47696) *
                C153625 * C153849) *
               C153848 +
           (((C24334 + C24335 + C24336) * C47696 +
             (C25413 + C25414 + C25415) * C47697 +
             (C49052 + C49053 + C49054) * C153901) *
                C153625 * C153849 -
            ((C23996 * C8429 - C23997 * C8428 - C23996 * C8430 +
              C153885 * C8431 + C23994 * C6191 - C23995 * C6182 -
              C23994 * C6192 + C153914 * C6200 + C23992 * C6193 -
              C23993 * C6183 - C23992 * C6194 + C153933 * C6201) *
                 C153901 +
             (C49054 + C49053 + C49052) * C47697 +
             (C25415 + C25414 + C25413) * C47696) *
                C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                  C47696 +
              C31290 * C47697 + C31291 * C153901) *
                 C153936 +
             (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
                C153849 -
            ((C53053 + C53054 + C53055) * C153898 +
             (C53056 + C53057 + C53058) * C153924 +
             (C31294 * C153901 + C31291 * C47697 + C31290 * C47696) * C153936) *
                C153601) *
               C153848 +
           (((C53058 + C53057 + C53056) * C153936 +
             (C53055 + C53054 + C53053) * C153924 +
             (C29050 * C47696 + C29433 * C47697 + C32705 * C153901) * C153898) *
                C153601 -
            ((C52087 + C52088 + C52089) * C153898 +
             (C52086 + C52085 + C52084) * C153924 +
             (C52083 + C52082 + C52081) * C153936) *
                C153849) *
               C153573) *
              C301 +
          ((((C31295 * C47696 + C31296 * C47697 + C31297 * C153901) * C153936 +
             (C53059 + C53060 + C53061) * C153924 +
             (C53062 + C53063 + C53064) * C153898) *
                C153601 -
            (C52102 * C153898 + (C52092 + C52091 + C52090) * C153924 +
             (C31296 * C153901 + C31295 * C47697 +
              (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                  C47696) *
                 C153936) *
                C153849) *
               C153848 +
           (((C52090 + C52091 + C52092) * C153936 +
             (C52093 + C52094 + C52095) * C153924 +
             (C52096 + C52097 + C52098) * C153898) *
                C153849 -
            (((C28212 * C32074 - C28213 * C32073 - C28212 * C32075 +
               C153462 * C32076) *
                  C153901 +
              C30999 * C47697 + C29055 * C47696) *
                 C153898 +
             (C53064 + C53063 + C53062) * C153924 +
             (C53061 + C53060 + C53059) * C153936) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
               C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
               C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
               C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
               C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                  C153637 * C153625 * C153537 * C153521 * C130 -
              (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
               C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
               C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
               C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
               C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
                  C153637 * C153625 * C153537 * C153521 * C131 +
              (C134 * C156 - C135 * C146 - C134 * C157 + C121 * C170 +
               C136 * C158 - C137 * C147 - C136 * C159 + C122 * C171 +
               C138 * C160 - C139 * C148 - C138 * C161 + C123 * C172 +
               C140 * C162 - C141 * C149 - C140 * C163 + C124 * C173 +
               C142 * C164 - C143 * C150 - C142 * C165 + C125 * C174) *
                  C153637 * C153625 * C153537 * C153521 * C132 -
              (C142 * C166 - C143 * C151 - C142 * C167 + C125 * C175 +
               C140 * C164 - C141 * C150 - C140 * C165 + C124 * C174 +
               C138 * C162 - C139 * C149 - C138 * C163 + C123 * C173 +
               C136 * C160 - C137 * C148 - C136 * C161 + C122 * C172 +
               C134 * C158 - C135 * C147 - C134 * C159 + C121 * C171) *
                  C153637 * C153625 * C153537 * C153521 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
                C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
                C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
                C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
                C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                   C153637 * C153625 * C153537 * C298 -
               (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
                C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
                C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
                C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
                C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
                   C153637 * C153625 * C153537 * C299 +
               (C134 * C325 - C135 * C308 - C134 * C326 + C121 * C344 +
                C136 * C327 - C137 * C309 - C136 * C328 + C122 * C345 +
                C138 * C329 - C139 * C310 - C138 * C330 + C123 * C346 +
                C140 * C331 - C141 * C311 - C140 * C332 + C124 * C347 +
                C142 * C333 - C143 * C312 - C142 * C334 + C125 * C348) *
                   C153637 * C153625 * C153537 * C300) *
                  C301 +
              ((C134 * C321 - C135 * C306 - C134 * C322 + C121 * C342 +
                C136 * C319 - C137 * C305 - C136 * C320 + C122 * C341 +
                C138 * C317 - C139 * C304 - C138 * C318 + C123 * C340 +
                C140 * C315 - C141 * C303 - C140 * C316 + C124 * C339 +
                C142 * C335 - C143 * C313 - C142 * C336 + C125 * C349) *
                   C153637 * C153625 * C153537 * C299 -
               (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
                C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
                C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
                C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
                C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
                   C153637 * C153625 * C153537 * C298 -
               (C142 * C337 - C143 * C314 - C142 * C338 + C125 * C350 +
                C140 * C333 - C141 * C312 - C140 * C334 + C124 * C348 +
                C138 * C331 - C139 * C311 - C138 * C332 + C123 * C347 +
                C136 * C329 - C137 * C310 - C136 * C330 + C122 * C346 +
                C134 * C327 - C135 * C309 - C134 * C328 + C121 * C345) *
                   C153637 * C153625 * C153537 * C300) *
                  C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C473 -
           (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
            C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
            C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
            C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
            C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
               C153637 * C153625 * C474 +
           (C134 * C498 - C135 * C481 - C134 * C499 + C121 * C517 +
            C136 * C500 - C137 * C482 - C136 * C501 + C122 * C518 +
            C138 * C502 - C139 * C483 - C138 * C503 + C123 * C519 +
            C140 * C504 - C141 * C484 - C140 * C505 + C124 * C520 +
            C142 * C506 - C143 * C485 - C142 * C507 + C125 * C521) *
               C153637 * C153625 * C475) *
              C153521 * C301 +
          ((C134 * C494 - C135 * C479 - C134 * C495 + C121 * C515 +
            C136 * C492 - C137 * C478 - C136 * C493 + C122 * C514 +
            C138 * C490 - C139 * C477 - C138 * C491 + C123 * C513 +
            C140 * C488 - C141 * C476 - C140 * C489 + C124 * C512 +
            C142 * C508 - C143 * C486 - C142 * C509 + C125 * C522) *
               C153637 * C153625 * C474 -
           (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
            C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
            C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
            C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
            C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
               C153637 * C153625 * C473 -
           (C142 * C510 - C143 * C487 - C142 * C511 + C125 * C523 +
            C140 * C506 - C141 * C485 - C140 * C507 + C124 * C521 +
            C138 * C504 - C139 * C484 - C138 * C505 + C123 * C520 +
            C136 * C502 - C137 * C483 - C136 * C503 + C122 * C519 +
            C134 * C500 - C135 * C482 - C134 * C501 + C121 * C518) *
               C153637 * C153625 * C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
            C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
            C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
               C153637 * C153936 +
           (C2689 * C323 - C2690 * C307 - C2689 * C324 + C2683 * C343 +
            C2691 * C321 - C2692 * C306 - C2691 * C322 + C2684 * C342 +
            C2693 * C319 - C2694 * C305 - C2693 * C320 + C153885 * C341) *
               C153637 * C153924 +
           (C2689 * C325 - C2690 * C308 - C2689 * C326 + C2683 * C344 +
            C2691 * C327 - C2692 * C309 - C2691 * C328 + C2684 * C345 +
            C2693 * C329 - C2694 * C310 - C2693 * C330 + C153885 * C346) *
               C153637 * C153898) *
              C153537 * C153521 * C130 -
          ((C2693 * C331 - C2694 * C311 - C2693 * C332 + C153885 * C347 +
            C2691 * C329 - C2692 * C310 - C2691 * C330 + C2684 * C346 +
            C2689 * C327 - C2690 * C309 - C2689 * C328 + C2683 * C345) *
               C153637 * C153898 +
           (C2693 * C317 - C2694 * C304 - C2693 * C318 + C153885 * C340 +
            C2691 * C319 - C2692 * C305 - C2691 * C320 + C2684 * C341 +
            C2689 * C321 - C2690 * C306 - C2689 * C322 + C2683 * C342) *
               C153637 * C153924 +
           (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
            C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
            C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
               C153637 * C153936) *
              C153537 * C153521 * C131 +
          ((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
            C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
            C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
               C153637 * C153936 +
           (C2689 * C319 - C2690 * C305 - C2689 * C320 + C2683 * C341 +
            C2691 * C317 - C2692 * C304 - C2691 * C318 + C2684 * C340 +
            C2693 * C315 - C2694 * C303 - C2693 * C316 + C153885 * C339) *
               C153637 * C153924 +
           (C2689 * C329 - C2690 * C310 - C2689 * C330 + C2683 * C346 +
            C2691 * C331 - C2692 * C311 - C2691 * C332 + C2684 * C347 +
            C2693 * C333 - C2694 * C312 - C2693 * C334 + C153885 * C348) *
               C153637 * C153898) *
              C153537 * C153521 * C132 -
          ((C2693 * C337 - C2694 * C314 - C2693 * C338 + C153885 * C350 +
            C2691 * C333 - C2692 * C312 - C2691 * C334 + C2684 * C348 +
            C2689 * C331 - C2690 * C311 - C2689 * C332 + C2683 * C347) *
               C153637 * C153898 +
           (C2693 * C335 - C2694 * C313 - C2693 * C336 + C153885 * C349 +
            C2691 * C315 - C2692 * C303 - C2691 * C316 + C2684 * C339 +
            C2689 * C317 - C2690 * C304 - C2689 * C318 + C2683 * C340) *
               C153637 * C153924 +
           (C2693 * C162 - C2694 * C149 - C2693 * C163 + C153885 * C173 +
            C2691 * C160 - C2692 * C148 - C2691 * C161 + C2684 * C172 +
            C2689 * C158 - C2690 * C147 - C2689 * C159 + C2683 * C171) *
               C153637 * C153936) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C153537 * C298 -
           ((C3044 + C3045 + C3046) * C153637 * C153898 +
            (C3043 + C3042 + C3041) * C153637 * C153924 +
            (C3040 + C3039 + C3038) * C153637 * C153936) *
               C153537 * C299 +
           (C3060 * C153936 + (C3046 + C3045 + C3044) * C153637 * C153924 +
            (C2689 * C2917 - C2690 * C2913 - C2689 * C2918 + C2683 * C2925 +
             C2691 * C2919 - C2692 * C2914 - C2691 * C2920 + C2684 * C2926 +
             C2693 * C2921 - C2694 * C2915 - C2693 * C2922 + C153885 * C2927) *
                C153637 * C153898) *
               C153537 * C300) *
              C301 +
          (((C3047 + C3048 + C3049) * C153637 * C153936 +
            (C3050 + C3051 + C3052) * C153637 * C153924 +
            (C3053 + C3054 + C3055) * C153637 * C153898) *
               C153537 * C299 -
           (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153637 * C153936) *
               C153537 * C298 -
           ((C2693 * C2923 - C2694 * C2916 - C2693 * C2924 + C153885 * C2928 +
             C2691 * C2921 - C2692 * C2915 - C2691 * C2922 + C2684 * C2927 +
             C2689 * C2919 - C2690 * C2914 - C2689 * C2920 + C2683 * C2926) *
                C153637 * C153898 +
            (C3055 + C3054 + C3053) * C153637 * C153924 + C3061 * C153936) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C473 -
           ((C2693 * C1765 - C2694 * C1758 - C2693 * C1766 + C153885 * C1773 +
             C2691 * C1767 - C2692 * C1759 - C2691 * C1768 + C2684 * C1774 +
             C2689 * C1769 - C2690 * C1760 - C2689 * C1770 + C2683 * C1775) *
                C153637 * C153898 +
            (C2693 * C955 - C2694 * C947 - C2693 * C956 + C153885 * C965 +
             C2691 * C953 - C2692 * C946 - C2691 * C954 + C2684 * C964 +
             C2689 * C951 - C2690 * C945 - C2689 * C952 + C2683 * C963) *
                C153637 * C153924 +
            (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
             C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
             C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                C153637 * C153936) *
               C474 +
           ((C2689 * C498 - C2690 * C481 - C2689 * C499 + C2683 * C517 +
             C2691 * C500 - C2692 * C482 - C2691 * C501 + C2684 * C518 +
             C2693 * C502 - C2694 * C483 - C2693 * C503 + C153885 * C519) *
                C153637 * C153936 +
            (C2689 * C1338 - C2690 * C1329 - C2689 * C1339 + C2683 * C1344 +
             C2691 * C1336 - C2692 * C1328 - C2691 * C1337 + C2684 * C1343 +
             C2693 * C1334 - C2694 * C1327 - C2693 * C1335 + C153885 * C1342) *
                C153637 * C153924 +
            (C2689 * C3283 - C2690 * C3279 - C2689 * C3284 + C2683 * C3291 +
             C2691 * C3285 - C2692 * C3280 - C2691 * C3286 + C2684 * C3292 +
             C2693 * C3287 - C2694 * C3281 - C2693 * C3288 + C153885 * C3293) *
                C153637 * C153898) *
               C475) *
              C153521 * C301 +
          (((C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515 +
             C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
             C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513) *
                C153637 * C153936 +
            (C2689 * C953 - C2690 * C946 - C2689 * C954 + C2683 * C964 +
             C2691 * C955 - C2692 * C947 - C2691 * C956 + C2684 * C965 +
             C2693 * C957 - C2694 * C948 - C2693 * C958 + C153885 * C966) *
                C153637 * C153924 +
            (C2689 * C1767 - C2690 * C1759 - C2689 * C1768 + C2683 * C1774 +
             C2691 * C1765 - C2692 * C1758 - C2691 * C1766 + C2684 * C1773 +
             C2693 * C1763 - C2694 * C1757 - C2693 * C1764 + C153885 * C1772) *
                C153637 * C153898) *
               C474 -
           (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153637 * C153936) *
               C473 -
           ((C2693 * C3289 - C2694 * C3282 - C2693 * C3290 + C153885 * C3294 +
             C2691 * C3287 - C2692 * C3281 - C2691 * C3288 + C2684 * C3293 +
             C2689 * C3285 - C2690 * C3280 - C2689 * C3286 + C2683 * C3292) *
                C153637 * C153898 +
            (C2693 * C1332 - C2694 * C1326 - C2693 * C1333 + C153885 * C1341 +
             C2691 * C1334 - C2692 * C1327 - C2691 * C1335 + C2684 * C1342 +
             C2689 * C1336 - C2690 * C1328 - C2689 * C1337 + C2683 * C1343) *
                C153637 * C153924 +
            (C2693 * C504 - C2694 * C484 - C2693 * C505 + C153885 * C520 +
             C2691 * C502 - C2692 * C483 - C2691 * C503 + C2684 * C519 +
             C2689 * C500 - C2690 * C482 - C2689 * C501 + C2683 * C518) *
                C153637 * C153936) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
            C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
            C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
               C153637 * C23989 +
           (C23992 * C323 - C23993 * C307 - C23992 * C324 + C153933 * C343 +
            C23994 * C321 - C23995 * C306 - C23994 * C322 + C153914 * C342 +
            C23996 * C319 - C23997 * C305 - C23996 * C320 + C153885 * C341) *
               C153637 * C23990 +
           (C23992 * C325 - C23993 * C308 - C23992 * C326 + C153933 * C344 +
            C23994 * C327 - C23995 * C309 - C23994 * C328 + C153914 * C345 +
            C23996 * C329 - C23997 * C310 - C23996 * C330 + C153885 * C346) *
               C153637 * C153898) *
              C153537 * C153521 * C130 -
          ((C23996 * C331 - C23997 * C311 - C23996 * C332 + C153885 * C347 +
            C23994 * C329 - C23995 * C310 - C23994 * C330 + C153914 * C346 +
            C23992 * C327 - C23993 * C309 - C23992 * C328 + C153933 * C345) *
               C153637 * C153898 +
           (C23996 * C317 - C23997 * C304 - C23996 * C318 + C153885 * C340 +
            C23994 * C319 - C23995 * C305 - C23994 * C320 + C153914 * C341 +
            C23992 * C321 - C23993 * C306 - C23992 * C322 + C153933 * C342) *
               C153637 * C23990 +
           (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
            C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
            C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
               C153637 * C23989) *
              C153537 * C153521 * C131 +
          ((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
            C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
            C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
               C153637 * C23989 +
           (C23992 * C319 - C23993 * C305 - C23992 * C320 + C153933 * C341 +
            C23994 * C317 - C23995 * C304 - C23994 * C318 + C153914 * C340 +
            C23996 * C315 - C23997 * C303 - C23996 * C316 + C153885 * C339) *
               C153637 * C23990 +
           (C23992 * C329 - C23993 * C310 - C23992 * C330 + C153933 * C346 +
            C23994 * C331 - C23995 * C311 - C23994 * C332 + C153914 * C347 +
            C23996 * C333 - C23997 * C312 - C23996 * C334 + C153885 * C348) *
               C153637 * C153898) *
              C153537 * C153521 * C132 -
          ((C23996 * C337 - C23997 * C314 - C23996 * C338 + C153885 * C350 +
            C23994 * C333 - C23995 * C312 - C23994 * C334 + C153914 * C348 +
            C23992 * C331 - C23993 * C311 - C23992 * C332 + C153933 * C347) *
               C153637 * C153898 +
           (C23996 * C335 - C23997 * C313 - C23996 * C336 + C153885 * C349 +
            C23994 * C315 - C23995 * C303 - C23994 * C316 + C153914 * C339 +
            C23992 * C317 - C23993 * C304 - C23992 * C318 + C153933 * C340) *
               C153637 * C23990 +
           (C23996 * C162 - C23997 * C149 - C23996 * C163 + C153885 * C173 +
            C23994 * C160 - C23995 * C148 - C23994 * C161 + C153914 * C172 +
            C23992 * C158 - C23993 * C147 - C23992 * C159 + C153933 * C171) *
               C153637 * C23989) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153537 * C298 -
           ((C24331 + C24332 + C24333) * C153637 * C153898 +
            (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C153537 * C299 +
           (C24347 * C23989 + (C24333 + C24332 + C24331) * C153637 * C23990 +
            (C23992 * C2917 - C23993 * C2913 - C23992 * C2918 +
             C153933 * C2925 + C23994 * C2919 - C23995 * C2914 -
             C23994 * C2920 + C153914 * C2926 + C23996 * C2921 -
             C23997 * C2915 - C23996 * C2922 + C153885 * C2927) *
                C153637 * C153898) *
               C153537 * C300) *
              C301 +
          (((C24334 + C24335 + C24336) * C153637 * C23989 +
            (C24337 + C24338 + C24339) * C153637 * C23990 +
            (C24340 + C24341 + C24342) * C153637 * C153898) *
               C153537 * C299 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C153537 * C298 -
           ((C23996 * C2923 - C23997 * C2916 - C23996 * C2924 +
             C153885 * C2928 + C23994 * C2921 - C23995 * C2915 -
             C23994 * C2922 + C153914 * C2927 + C23992 * C2919 -
             C23993 * C2914 - C23992 * C2920 + C153933 * C2926) *
                C153637 * C153898 +
            (C24342 + C24341 + C24340) * C153637 * C23990 + C24348 * C23989) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C473 -
           ((C23996 * C1765 - C23997 * C1758 - C23996 * C1766 +
             C153885 * C1773 + C23994 * C1767 - C23995 * C1759 -
             C23994 * C1768 + C153914 * C1774 + C23992 * C1769 -
             C23993 * C1760 - C23992 * C1770 + C153933 * C1775) *
                C153637 * C153898 +
            (C23996 * C955 - C23997 * C947 - C23996 * C956 + C153885 * C965 +
             C23994 * C953 - C23995 * C946 - C23994 * C954 + C153914 * C964 +
             C23992 * C951 - C23993 * C945 - C23992 * C952 + C153933 * C963) *
                C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C474 +
           ((C23992 * C498 - C23993 * C481 - C23992 * C499 + C153933 * C517 +
             C23994 * C500 - C23995 * C482 - C23994 * C501 + C153914 * C518 +
             C23996 * C502 - C23997 * C483 - C23996 * C503 + C153885 * C519) *
                C153637 * C23989 +
            (C23992 * C1338 - C23993 * C1329 - C23992 * C1339 +
             C153933 * C1344 + C23994 * C1336 - C23995 * C1328 -
             C23994 * C1337 + C153914 * C1343 + C23996 * C1334 -
             C23997 * C1327 - C23996 * C1335 + C153885 * C1342) *
                C153637 * C23990 +
            (C23992 * C3283 - C23993 * C3279 - C23992 * C3284 +
             C153933 * C3291 + C23994 * C3285 - C23995 * C3280 -
             C23994 * C3286 + C153914 * C3292 + C23996 * C3287 -
             C23997 * C3281 - C23996 * C3288 + C153885 * C3293) *
                C153637 * C153898) *
               C475) *
              C153521 * C301 +
          (((C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515 +
             C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
             C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513) *
                C153637 * C23989 +
            (C23992 * C953 - C23993 * C946 - C23992 * C954 + C153933 * C964 +
             C23994 * C955 - C23995 * C947 - C23994 * C956 + C153914 * C965 +
             C23996 * C957 - C23997 * C948 - C23996 * C958 + C153885 * C966) *
                C153637 * C23990 +
            (C23992 * C1767 - C23993 * C1759 - C23992 * C1768 +
             C153933 * C1774 + C23994 * C1765 - C23995 * C1758 -
             C23994 * C1766 + C153914 * C1773 + C23996 * C1763 -
             C23997 * C1757 - C23996 * C1764 + C153885 * C1772) *
                C153637 * C153898) *
               C474 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C473 -
           ((C23996 * C3289 - C23997 * C3282 - C23996 * C3290 +
             C153885 * C3294 + C23994 * C3287 - C23995 * C3281 -
             C23994 * C3288 + C153914 * C3293 + C23992 * C3285 -
             C23993 * C3280 - C23992 * C3286 + C153933 * C3292) *
                C153637 * C153898 +
            (C23996 * C1332 - C23997 * C1326 - C23996 * C1333 +
             C153885 * C1341 + C23994 * C1334 - C23995 * C1327 -
             C23994 * C1335 + C153914 * C1342 + C23992 * C1336 -
             C23993 * C1328 - C23992 * C1337 + C153933 * C1343) *
                C153637 * C23990 +
            (C23996 * C504 - C23997 * C484 - C23996 * C505 + C153885 * C520 +
             C23994 * C502 - C23995 * C483 - C23994 * C503 + C153914 * C519 +
             C23992 * C500 - C23993 * C482 - C23992 * C501 + C153933 * C518) *
                C153637 * C23989) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
               C153637 * C28207 +
           (C28212 * C323 - C28213 * C307 - C28212 * C324 + C153462 * C343) *
               C153637 * C28208 +
           (C28212 * C325 - C28213 * C308 - C28212 * C326 + C153462 * C344) *
               C153637 * C28209 +
           (C28212 * C1196 - C28213 * C1187 - C28212 * C1197 +
            C153462 * C1202) *
               C153637 * C28210 +
           (C28212 * C2917 - C28213 * C2913 - C28212 * C2918 +
            C153462 * C2925) *
               C153637 * C28211) *
              C153537 * C153521 * C130 -
          ((C28212 * C2919 - C28213 * C2914 - C28212 * C2920 +
            C153462 * C2926) *
               C153637 * C28211 +
           (C28212 * C1194 - C28213 * C1186 - C28212 * C1195 +
            C153462 * C1201) *
               C153637 * C28210 +
           (C28212 * C327 - C28213 * C309 - C28212 * C328 + C153462 * C345) *
               C153637 * C28209 +
           (C28212 * C321 - C28213 * C306 - C28212 * C322 + C153462 * C342) *
               C153637 * C28208 +
           (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
               C153637 * C28207) *
              C153537 * C153521 * C131 +
          ((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
               C153637 * C28207 +
           (C28212 * C319 - C28213 * C305 - C28212 * C320 + C153462 * C341) *
               C153637 * C28208 +
           (C28212 * C329 - C28213 * C310 - C28212 * C330 + C153462 * C346) *
               C153637 * C28209 +
           (C28212 * C1192 - C28213 * C1185 - C28212 * C1193 +
            C153462 * C1200) *
               C153637 * C28210 +
           (C28212 * C2921 - C28213 * C2915 - C28212 * C2922 +
            C153462 * C2927) *
               C153637 * C28211) *
              C153537 * C153521 * C132 -
          ((C28212 * C2923 - C28213 * C2916 - C28212 * C2924 +
            C153462 * C2928) *
               C153637 * C28211 +
           (C28212 * C1190 - C28213 * C1184 - C28212 * C1191 +
            C153462 * C1199) *
               C153637 * C28210 +
           (C28212 * C331 - C28213 * C311 - C28212 * C332 + C153462 * C347) *
               C153637 * C28209 +
           (C28212 * C317 - C28213 * C304 - C28212 * C318 + C153462 * C340) *
               C153637 * C28208 +
           (C28212 * C158 - C28213 * C147 - C28212 * C159 + C153462 * C171) *
               C153637 * C28207) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153537 * C298 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C153537 * C299 +
           (C28416 * C28207 + C28417 * C28208 + C28418 * C28209 +
            C28419 * C28210 +
            (C28212 * C28338 - C28213 * C28336 - C28212 * C28339 +
             C153462 * C28342) *
                C153637 * C28211) *
               C153537 * C300) *
              C301 +
          ((C28420 * C28207 + C28421 * C28208 + C28422 * C28209 +
            C28423 * C28210 + C28424 * C28211) *
               C153537 * C299 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C153537 * C298 -
           ((C28212 * C28340 - C28213 * C28337 - C28212 * C28341 +
             C153462 * C28343) *
                C153637 * C28211 +
            C28424 * C28210 + C28423 * C28209 + C28422 * C28208 +
            C28421 * C28207) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C473 -
           ((C28212 * C5568 - C28213 * C5563 - C28212 * C5569 +
             C153462 * C5572) *
                C153637 * C28211 +
            (C28212 * C4067 - C28213 * C4063 - C28212 * C4068 +
             C153462 * C4075) *
                C153637 * C28210 +
            (C28212 * C1769 - C28213 * C1760 - C28212 * C1770 +
             C153462 * C1775) *
                C153637 * C28209 +
            (C28212 * C951 - C28213 * C945 - C28212 * C952 + C153462 * C963) *
                C153637 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C474 +
           ((C28212 * C498 - C28213 * C481 - C28212 * C499 + C153462 * C517) *
                C153637 * C28207 +
            (C28212 * C1338 - C28213 * C1329 - C28212 * C1339 +
             C153462 * C1344) *
                C153637 * C28208 +
            (C28212 * C3283 - C28213 * C3279 - C28212 * C3284 +
             C153462 * C3291) *
                C153637 * C28209 +
            (C28212 * C4788 - C28213 * C4783 - C28212 * C4789 +
             C153462 * C4792) *
                C153637 * C28210 +
            (C28212 * C28548 - C28213 * C28546 - C28212 * C28549 +
             C153462 * C28552) *
                C153637 * C28211) *
               C475) *
              C153521 * C301 +
          (((C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                C153637 * C28207 +
            (C28212 * C953 - C28213 * C946 - C28212 * C954 + C153462 * C964) *
                C153637 * C28208 +
            (C28212 * C1767 - C28213 * C1759 - C28212 * C1768 +
             C153462 * C1774) *
                C153637 * C28209 +
            (C28212 * C4069 - C28213 * C4064 - C28212 * C4070 +
             C153462 * C4076) *
                C153637 * C28210 +
            (C28212 * C5566 - C28213 * C5562 - C28212 * C5567 +
             C153462 * C5571) *
                C153637 * C28211) *
               C474 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C473 -
           ((C28212 * C28550 - C28213 * C28547 - C28212 * C28551 +
             C153462 * C28553) *
                C153637 * C28211 +
            (C28212 * C4786 - C28213 * C4782 - C28212 * C4787 +
             C153462 * C4791) *
                C153637 * C28210 +
            (C28212 * C3285 - C28213 * C3280 - C28212 * C3286 +
             C153462 * C3292) *
                C153637 * C28209 +
            (C28212 * C1336 - C28213 * C1328 - C28212 * C1337 +
             C153462 * C1343) *
                C153637 * C28208 +
            (C28212 * C500 - C28213 * C482 - C28212 * C501 + C153462 * C518) *
                C153637 * C28207) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
            C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
            C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
               C47696 +
           (C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516 +
            C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
            C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514) *
               C47697 +
           (C23992 * C498 - C23993 * C481 - C23992 * C499 + C153933 * C517 +
            C23994 * C500 - C23995 * C482 - C23994 * C501 + C153914 * C518 +
            C23996 * C502 - C23997 * C483 - C23996 * C503 + C153885 * C519) *
               C153901) *
              C153625 * C153537 * C153521 * C130 -
          ((C23996 * C504 - C23997 * C484 - C23996 * C505 + C153885 * C520 +
            C23994 * C502 - C23995 * C483 - C23994 * C503 + C153914 * C519 +
            C23992 * C500 - C23993 * C482 - C23992 * C501 + C153933 * C518) *
               C153901 +
           (C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513 +
            C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
            C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515) *
               C47697 +
           (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
            C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
            C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
               C47696) *
              C153625 * C153537 * C153521 * C131 +
          ((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
            C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
            C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
               C47696 +
           (C23992 * C492 - C23993 * C478 - C23992 * C493 + C153933 * C514 +
            C23994 * C490 - C23995 * C477 - C23994 * C491 + C153914 * C513 +
            C23996 * C488 - C23997 * C476 - C23996 * C489 + C153885 * C512) *
               C47697 +
           (C23992 * C502 - C23993 * C483 - C23992 * C503 + C153933 * C519 +
            C23994 * C504 - C23995 * C484 - C23994 * C505 + C153914 * C520 +
            C23996 * C506 - C23997 * C485 - C23996 * C507 + C153885 * C521) *
               C153901) *
              C153625 * C153537 * C153521 * C132 -
          ((C23996 * C510 - C23997 * C487 - C23996 * C511 + C153885 * C523 +
            C23994 * C506 - C23995 * C485 - C23994 * C507 + C153914 * C521 +
            C23992 * C504 - C23993 * C484 - C23992 * C505 + C153933 * C520) *
               C153901 +
           (C23996 * C508 - C23997 * C486 - C23996 * C509 + C153885 * C522 +
            C23994 * C488 - C23995 * C476 - C23994 * C489 + C153914 * C512 +
            C23992 * C490 - C23993 * C477 - C23992 * C491 + C153933 * C513) *
               C47697 +
           (C23996 * C162 - C23997 * C149 - C23996 * C163 + C153885 * C173 +
            C23994 * C160 - C23995 * C148 - C23994 * C161 + C153914 * C172 +
            C23992 * C158 - C23993 * C147 - C23992 * C159 + C153933 * C171) *
               C47696) *
              C153625 * C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C47696 +
            (C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514) *
                C47697 +
            (C23992 * C498 - C23993 * C481 - C23992 * C499 + C153933 * C517 +
             C23994 * C500 - C23995 * C482 - C23994 * C501 + C153914 * C518 +
             C23996 * C502 - C23997 * C483 - C23996 * C503 + C153885 * C519) *
                C153901) *
               C153625 * C153537 * C298 -
           ((C26063 + C26062 + C26061) * C153901 +
            (C25410 + C25411 + C25412) * C47697 +
            (C24327 + C24326 + C24325) * C47696) *
               C153625 * C153537 * C299 +
           (C24345 * C47696 + (C25409 + C25408 + C25407) * C47697 +
            (C26064 + C26065 + C26066) * C153901) *
               C153625 * C153537 * C300) *
              C301 +
          (((C24334 + C24335 + C24336) * C47696 +
            (C25413 + C25414 + C25415) * C47697 +
            (C23992 * C1336 - C23993 * C1328 - C23992 * C1337 +
             C153933 * C1343 + C23994 * C1334 - C23995 * C1327 -
             C23994 * C1335 + C153914 * C1342 + C23996 * C1332 -
             C23997 * C1326 - C23996 * C1333 + C153885 * C1341) *
                C153901) *
               C153625 * C153537 * C299 -
           ((C23996 * C504 - C23997 * C484 - C23996 * C505 + C153885 * C520 +
             C23994 * C502 - C23995 * C483 - C23994 * C503 + C153914 * C519 +
             C23992 * C500 - C23993 * C482 - C23992 * C501 + C153933 * C518) *
                C153901 +
            (C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513 +
             C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
             C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515) *
                C47697 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C47696) *
               C153625 * C153537 * C298 -
           ((C23996 * C3289 - C23997 * C3282 - C23996 * C3290 +
             C153885 * C3294 + C23994 * C3287 - C23995 * C3281 -
             C23994 * C3288 + C153914 * C3293 + C23992 * C3285 -
             C23993 * C3280 - C23992 * C3286 + C153933 * C3292) *
                C153901 +
            (C25418 + C25417 + C25416) * C47697 + C24346 * C47696) *
               C153625 * C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C47696 +
            (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
               C153625 * C473 -
           ((C48250 + C48251 + C48252) * C153901 +
            (C48249 + C48248 + C48247) * C47697 +
            (C48246 + C48245 + C48244) * C47696) *
               C153625 * C474 +
           (C48264 * C47696 + (C48252 + C48251 + C48250) * C47697 +
            (C23992 * C7518 - C23993 * C7514 - C23992 * C7519 +
             C153933 * C7526 + C23994 * C7520 - C23995 * C7515 -
             C23994 * C7521 + C153914 * C7527 + C23996 * C7522 -
             C23997 * C7516 - C23996 * C7523 + C153885 * C7528) *
                C153901) *
               C153625 * C475) *
              C153521 * C301 +
          (((C48253 + C48254 + C48255) * C47696 +
            (C48256 + C48257 + C48258) * C47697 +
            (C48259 + C48260 + C48261) * C153901) *
               C153625 * C474 -
           (C48265 * C153901 + (C48255 + C48254 + C48253) * C47697 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C47696) *
               C153625 * C473 -
           ((C23996 * C7524 - C23997 * C7517 - C23996 * C7525 +
             C153885 * C7529 + C23994 * C7522 - C23995 * C7516 -
             C23994 * C7523 + C153914 * C7528 + C23992 * C7520 -
             C23993 * C7515 - C23992 * C7521 + C153933 * C7527) *
                C153901 +
            (C48261 + C48260 + C48259) * C47697 + C48265 * C47696) *
               C153625 * C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C47696 +
            C31290 * C47697 + C31291 * C153901) *
               C153936 +
           (C28405 * C47696 + C29052 * C47697 + C29431 * C153901) * C153924 +
           (C28406 * C47696 + C29051 * C47697 + C29432 * C153901) * C153898) *
              C153537 * C153521 * C130 -
          ((C30998 * C153901 + C29054 * C47697 + C28411 * C47696) * C153898 +
           (C30997 * C153901 + C29053 * C47697 + C28410 * C47696) * C153924 +
           (C31296 * C153901 + C31295 * C47697 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C47696) *
               C153936) *
              C153537 * C153521 * C131 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C47696 +
            C31782 * C47697 + C31783 * C153901) *
               C153936 +
           (C28701 * C47696 + C31544 * C47697 + C31545 * C153901) * C153924 +
           (C28702 * C47696 + C31546 * C47697 + C31547 * C153901) * C153898) *
              C153537 * C153521 * C132 -
          (((C28212 * C3289 - C28213 * C3282 - C28212 * C3290 +
             C153462 * C3294) *
                C153901 +
            (C28212 * C1763 - C28213 * C1757 - C28212 * C1764 +
             C153462 * C1772) *
                C47697 +
            (C28212 * C331 - C28213 * C311 - C28212 * C332 + C153462 * C347) *
                C47696) *
               C153898 +
           ((C28212 * C1332 - C28213 * C1326 - C28212 * C1333 +
             C153462 * C1341) *
                C153901 +
            (C28212 * C957 - C28213 * C948 - C28212 * C958 + C153462 * C966) *
                C47697 +
            (C28212 * C317 - C28213 * C304 - C28212 * C318 + C153462 * C340) *
                C47696) *
               C153924 +
           ((C28212 * C504 - C28213 * C484 - C28212 * C505 + C153462 * C520) *
                C153901 +
            (C28212 * C490 - C28213 * C477 - C28212 * C491 + C153462 * C513) *
                C47697 +
            (C28212 * C158 - C28213 * C147 - C28212 * C159 + C153462 * C171) *
                C47696) *
               C153936) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C47696 +
             C31290 * C47697 + C31291 * C153901) *
                C153936 +
            (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
               C153537 * C298 -
           ((C52087 + C52088 + C52089) * C153898 +
            (C52086 + C52085 + C52084) * C153924 +
            (C52083 + C52082 + C52081) * C153936) *
               C153537 * C299 +
           (C52101 * C153936 + (C52089 + C52088 + C52087) * C153924 +
            (C28408 * C47696 + C29049 * C47697 + C29434 * C153901) * C153898) *
               C153537 * C300) *
              C301 +
          (((C52090 + C52091 + C52092) * C153936 +
            (C52093 + C52094 + C52095) * C153924 +
            (C52096 + C52097 + C52098) * C153898) *
               C153537 * C299 -
           (C52102 * C153898 + (C52092 + C52091 + C52090) * C153924 +
            (C31296 * C153901 + C31295 * C47697 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C47696) *
                C153936) *
               C153537 * C298 -
           (((C28212 * C28550 - C28213 * C28547 - C28212 * C28551 +
              C153462 * C28553) *
                 C153901 +
             C29056 * C47697 + C28413 * C47696) *
                C153898 +
            (C52098 + C52097 + C52096) * C153924 + C52102 * C153936) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C47696 +
             C31290 * C47697 + C31291 * C153901) *
                C153936 +
            (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
               C473 -
           ((C31292 * C153901 + C29432 * C47697 + C29051 * C47696) * C153898 +
            (C31293 * C153901 + C29431 * C47697 + C29052 * C47696) * C153924 +
            (C31294 * C153901 + C31291 * C47697 + C31290 * C47696) * C153936) *
               C474 +
           ((C31291 * C47696 + C31294 * C47697 + C34035 * C153901) * C153936 +
            (C29431 * C47696 + C31293 * C47697 + C32703 * C153901) * C153924 +
            (C29432 * C47696 + C31292 * C47697 + C32704 * C153901) * C153898) *
               C475) *
              C153521 * C301 +
          (((C31295 * C47696 + C31296 * C47697 + C31297 * C153901) * C153936 +
            (C29053 * C47696 + C30997 * C47697 + C31298 * C153901) * C153924 +
            (C29054 * C47696 + C30998 * C47697 + C31299 * C153901) * C153898) *
               C474 -
           (C52102 * C153898 + (C52092 + C52091 + C52090) * C153924 +
            (C31296 * C153901 + C31295 * C47697 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C47696) *
                C153936) *
               C473 -
           (((C28212 * C31225 - C28213 * C31222 - C28212 * C31226 +
              C153462 * C31228) *
                 C153901 +
             C31299 * C47697 + C30998 * C47696) *
                C153898 +
            ((C28212 * C9040 - C28213 * C9036 - C28212 * C9041 +
              C153462 * C9045) *
                 C153901 +
             C31298 * C47697 + C30997 * C47696) *
                C153924 +
            ((C28212 * C7520 - C28213 * C7515 - C28212 * C7521 +
              C153462 * C7527) *
                 C153901 +
             C31297 * C47697 + C31296 * C47696) *
                C153936) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C153849 -
           ((C2693 * C1765 - C2694 * C1758 - C2693 * C1766 + C153885 * C1773 +
             C2691 * C1767 - C2692 * C1759 - C2691 * C1768 + C2684 * C1774 +
             C2689 * C1769 - C2690 * C1760 - C2689 * C1770 + C2683 * C1775) *
                C153637 * C153898 +
            (C2693 * C955 - C2694 * C947 - C2693 * C956 + C153885 * C965 +
             C2691 * C953 - C2692 * C946 - C2691 * C954 + C2684 * C964 +
             C2689 * C951 - C2690 * C945 - C2689 * C952 + C2683 * C963) *
                C153637 * C153924 +
            (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
             C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
             C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                C153637 * C153936) *
               C153601) *
              C153521 * C153917 +
          (((C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515 +
             C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
             C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513) *
                C153637 * C153936 +
            (C2689 * C953 - C2690 * C946 - C2689 * C954 + C2683 * C964 +
             C2691 * C955 - C2692 * C947 - C2691 * C956 + C2684 * C965 +
             C2693 * C957 - C2694 * C948 - C2693 * C958 + C153885 * C966) *
                C153637 * C153924 +
            (C2689 * C1767 - C2690 * C1759 - C2689 * C1768 + C2683 * C1774 +
             C2691 * C1765 - C2692 * C1758 - C2691 * C1766 + C2684 * C1773 +
             C2693 * C1763 - C2694 * C1757 - C2693 * C1764 + C153885 * C1772) *
                C153637 * C153898) *
               C153601 -
           (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153637 * C153936) *
               C153849) *
              C153521 * C153918 +
          (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
             C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
             C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                C153637 * C153936 +
            (C3550 + C3551 + C3552) * C153637 * C153924 +
            (C3553 + C3554 + C3555) * C153637 * C153898) *
               C153849 -
           ((C2693 * C1761 - C2694 * C1756 - C2693 * C1762 + C153885 * C1771 +
             C2691 * C1763 - C2692 * C1757 - C2691 * C1764 + C2684 * C1772 +
             C2689 * C1765 - C2690 * C1758 - C2689 * C1766 + C2683 * C1773) *
                C153637 * C153898 +
            (C2693 * C959 - C2694 * C949 - C2693 * C960 + C153885 * C967 +
             C2691 * C957 - C2692 * C948 - C2691 * C958 + C2684 * C966 +
             C2689 * C955 - C2690 * C947 - C2689 * C956 + C2683 * C965) *
                C153637 * C153924 +
            (C2693 * C488 - C2694 * C476 - C2693 * C489 + C153885 * C512 +
             C2691 * C490 - C2692 * C477 - C2691 * C491 + C2684 * C513 +
             C2689 * C492 - C2690 * C478 - C2689 * C493 + C2683 * C514) *
                C153637 * C153936) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C153849 -
           (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
            C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
            C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
            C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
            C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
               C153637 * C153625 * C153601) *
              C153521 * C153917 +
          ((C134 * C494 - C135 * C479 - C134 * C495 + C121 * C515 +
            C136 * C492 - C137 * C478 - C136 * C493 + C122 * C514 +
            C138 * C490 - C139 * C477 - C138 * C491 + C123 * C513 +
            C140 * C488 - C141 * C476 - C140 * C489 + C124 * C512 +
            C142 * C508 - C143 * C486 - C142 * C509 + C125 * C522) *
               C153637 * C153625 * C153601 -
           (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
            C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
            C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
            C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
            C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
               C153637 * C153625 * C153849) *
              C153521 * C153918 +
          ((C134 * C156 - C135 * C146 - C134 * C157 + C121 * C170 +
            C136 * C158 - C137 * C147 - C136 * C159 + C122 * C171 +
            C138 * C160 - C139 * C148 - C138 * C161 + C123 * C172 +
            C140 * C162 - C141 * C149 - C140 * C163 + C124 * C173 +
            C142 * C164 - C143 * C150 - C142 * C165 + C125 * C174) *
               C153637 * C153625 * C153849 -
           (C142 * C780 - C143 * C779 - C142 * C781 + C125 * C782 +
            C140 * C508 - C141 * C486 - C140 * C509 + C124 * C522 +
            C138 * C488 - C139 * C476 - C138 * C489 + C123 * C512 +
            C136 * C490 - C137 * C477 - C136 * C491 + C122 * C513 +
            C134 * C492 - C135 * C478 - C134 * C493 + C121 * C514) *
               C153637 * C153625 * C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153849 -
           ((C23996 * C1765 - C23997 * C1758 - C23996 * C1766 +
             C153885 * C1773 + C23994 * C1767 - C23995 * C1759 -
             C23994 * C1768 + C153914 * C1774 + C23992 * C1769 -
             C23993 * C1760 - C23992 * C1770 + C153933 * C1775) *
                C153637 * C153898 +
            (C23996 * C955 - C23997 * C947 - C23996 * C956 + C153885 * C965 +
             C23994 * C953 - C23995 * C946 - C23994 * C954 + C153914 * C964 +
             C23992 * C951 - C23993 * C945 - C23992 * C952 + C153933 * C963) *
                C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C153601) *
              C153521 * C153917 +
          (((C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515 +
             C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
             C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513) *
                C153637 * C23989 +
            (C23992 * C953 - C23993 * C946 - C23992 * C954 + C153933 * C964 +
             C23994 * C955 - C23995 * C947 - C23994 * C956 + C153914 * C965 +
             C23996 * C957 - C23997 * C948 - C23996 * C958 + C153885 * C966) *
                C153637 * C23990 +
            (C23992 * C1767 - C23993 * C1759 - C23992 * C1768 +
             C153933 * C1774 + C23994 * C1765 - C23995 * C1758 -
             C23994 * C1766 + C153914 * C1773 + C23996 * C1763 -
             C23997 * C1757 - C23996 * C1764 + C153885 * C1772) *
                C153637 * C153898) *
               C153601 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C153849) *
              C153521 * C153918 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C153637 * C23989 +
            (C24821 + C24822 + C24823) * C153637 * C23990 +
            (C24824 + C24825 + C24826) * C153637 * C153898) *
               C153849 -
           ((C23996 * C1761 - C23997 * C1756 - C23996 * C1762 +
             C153885 * C1771 + C23994 * C1763 - C23995 * C1757 -
             C23994 * C1764 + C153914 * C1772 + C23992 * C1765 -
             C23993 * C1758 - C23992 * C1766 + C153933 * C1773) *
                C153637 * C153898 +
            (C23996 * C959 - C23997 * C949 - C23996 * C960 + C153885 * C967 +
             C23994 * C957 - C23995 * C948 - C23994 * C958 + C153914 * C966 +
             C23992 * C955 - C23993 * C947 - C23992 * C956 + C153933 * C965) *
                C153637 * C23990 +
            (C23996 * C488 - C23997 * C476 - C23996 * C489 + C153885 * C512 +
             C23994 * C490 - C23995 * C477 - C23994 * C491 + C153914 * C513 +
             C23992 * C492 - C23993 * C478 - C23992 * C493 + C153933 * C514) *
                C153637 * C23989) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153849 -
           ((C28212 * C5568 - C28213 * C5563 - C28212 * C5569 +
             C153462 * C5572) *
                C153637 * C28211 +
            (C28212 * C4067 - C28213 * C4063 - C28212 * C4068 +
             C153462 * C4075) *
                C153637 * C28210 +
            (C28212 * C1769 - C28213 * C1760 - C28212 * C1770 +
             C153462 * C1775) *
                C153637 * C28209 +
            (C28212 * C951 - C28213 * C945 - C28212 * C952 + C153462 * C963) *
                C153637 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C153601) *
              C153521 * C153917 +
          (((C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                C153637 * C28207 +
            (C28212 * C953 - C28213 * C946 - C28212 * C954 + C153462 * C964) *
                C153637 * C28208 +
            (C28212 * C1767 - C28213 * C1759 - C28212 * C1768 +
             C153462 * C1774) *
                C153637 * C28209 +
            (C28212 * C4069 - C28213 * C4064 - C28212 * C4070 +
             C153462 * C4076) *
                C153637 * C28210 +
            (C28212 * C5566 - C28213 * C5562 - C28212 * C5567 +
             C153462 * C5571) *
                C153637 * C28211) *
               C153601 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C153849) *
              C153521 * C153918 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C153637 * C28207 +
            C28705 * C28208 + C28706 * C28209 + C28707 * C28210 +
            C28708 * C28211) *
               C153849 -
           ((C28212 * C5564 - C28213 * C5561 - C28212 * C5565 +
             C153462 * C5570) *
                C153637 * C28211 +
            (C28212 * C4071 - C28213 * C4065 - C28212 * C4072 +
             C153462 * C4077) *
                C153637 * C28210 +
            (C28212 * C1765 - C28213 * C1758 - C28212 * C1766 +
             C153462 * C1773) *
                C153637 * C28209 +
            (C28212 * C955 - C28213 * C947 - C28212 * C956 + C153462 * C965) *
                C153637 * C28208 +
            (C28212 * C492 - C28213 * C478 - C28212 * C493 + C153462 * C514) *
                C153637 * C28207) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C47696 +
            (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
               C153625 * C153849 -
           ((C48250 + C48251 + C48252) * C153901 +
            (C48249 + C48248 + C48247) * C47697 +
            (C48246 + C48245 + C48244) * C47696) *
               C153625 * C153601) *
              C153521 * C153917 +
          (((C48253 + C48254 + C48255) * C47696 +
            (C48256 + C48257 + C48258) * C47697 +
            (C48259 + C48260 + C48261) * C153901) *
               C153625 * C153601 -
           (C48265 * C153901 + (C48255 + C48254 + C48253) * C47697 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C47696) *
               C153625 * C153849) *
              C153521 * C153918 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C47696 +
            (C48738 + C48739 + C48740) * C47697 +
            (C48741 + C48742 + C48743) * C153901) *
               C153625 * C153849 -
           ((C23996 * C2113 - C23997 * C2108 - C23996 * C2114 +
             C153885 * C2123 + C23994 * C2115 - C23995 * C2109 -
             C23994 * C2116 + C153914 * C2124 + C23992 * C2117 -
             C23993 * C2110 - C23992 * C2118 + C153933 * C2125) *
                C153901 +
            (C48743 + C48742 + C48741) * C47697 +
            (C48740 + C48739 + C48738) * C47696) *
               C153625 * C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C47696 +
             C31290 * C47697 + C31291 * C153901) *
                C153936 +
            (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
               C153849 -
           ((C31292 * C153901 + C29432 * C47697 + C29051 * C47696) * C153898 +
            (C31293 * C153901 + C29431 * C47697 + C29052 * C47696) * C153924 +
            (C31294 * C153901 + C31291 * C47697 + C31290 * C47696) * C153936) *
               C153601) *
              C153521 * C153917 +
          (((C31295 * C47696 + C31296 * C47697 + C31297 * C153901) * C153936 +
            (C29053 * C47696 + C30997 * C47697 + C31298 * C153901) * C153924 +
            (C29054 * C47696 + C30998 * C47697 + C31299 * C153901) * C153898) *
               C153601 -
           (C52102 * C153898 + (C52092 + C52091 + C52090) * C153924 +
            (C31296 * C153901 + C31295 * C47697 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C47696) *
                C153936) *
               C153849) *
              C153521 * C153918 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C47696 +
             C31782 * C47697 + C31783 * C153901) *
                C153936 +
            (C52539 + C52540 + C52541) * C153924 +
            (C52542 + C52543 + C52544) * C153898) *
               C153849 -
           (((C28212 * C6185 - C28213 * C6179 - C28212 * C6186 +
              C153462 * C6197) *
                 C153901 +
             C31547 * C47697 + C31546 * C47696) *
                C153898 +
            ((C28212 * C6191 - C28213 * C6182 - C28212 * C6192 +
              C153462 * C6200) *
                 C153901 +
             C31545 * C47697 + C31544 * C47696) *
                C153924 +
            ((C28212 * C2117 - C28213 * C2110 - C28212 * C2118 +
              C153462 * C2125) *
                 C153901 +
             C31783 * C47697 + C31782 * C47696) *
                C153936) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C153537 * C298 -
           (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
            C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
            C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
            C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
            C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
               C153637 * C153625 * C153537 * C299 +
           (C134 * C325 - C135 * C308 - C134 * C326 + C121 * C344 +
            C136 * C327 - C137 * C309 - C136 * C328 + C122 * C345 +
            C138 * C329 - C139 * C310 - C138 * C330 + C123 * C346 +
            C140 * C331 - C141 * C311 - C140 * C332 + C124 * C347 +
            C142 * C333 - C143 * C312 - C142 * C334 + C125 * C348) *
               C153637 * C153625 * C153537 * C300) *
              C301 +
          ((C134 * C321 - C135 * C306 - C134 * C322 + C121 * C342 +
            C136 * C319 - C137 * C305 - C136 * C320 + C122 * C341 +
            C138 * C317 - C139 * C304 - C138 * C318 + C123 * C340 +
            C140 * C315 - C141 * C303 - C140 * C316 + C124 * C339 +
            C142 * C335 - C143 * C313 - C142 * C336 + C125 * C349) *
               C153637 * C153625 * C153537 * C299 -
           (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
            C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
            C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
            C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
            C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
               C153637 * C153625 * C153537 * C298 -
           (C142 * C337 - C143 * C314 - C142 * C338 + C125 * C350 +
            C140 * C333 - C141 * C312 - C140 * C334 + C124 * C348 +
            C138 * C331 - C139 * C311 - C138 * C332 + C123 * C347 +
            C136 * C329 - C137 * C310 - C136 * C330 + C122 * C346 +
            C134 * C327 - C135 * C309 - C134 * C328 + C121 * C345) *
               C153637 * C153625 * C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 + C136 * C154 -
           C137 * C145 - C136 * C155 + C122 * C169 + C138 * C156 - C139 * C146 -
           C138 * C157 + C123 * C170 + C140 * C158 - C141 * C147 - C140 * C159 +
           C124 * C171 + C142 * C160 - C143 * C148 - C142 * C161 +
           C125 * C172) *
              C153637 * C153625 * C153537 * C153521 * C130 -
          (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 + C140 * C160 -
           C141 * C148 - C140 * C161 + C124 * C172 + C138 * C158 - C139 * C147 -
           C138 * C159 + C123 * C171 + C136 * C156 - C137 * C146 - C136 * C157 +
           C122 * C170 + C134 * C154 - C135 * C145 - C134 * C155 +
           C121 * C169) *
              C153637 * C153625 * C153537 * C153521 * C131 +
          (C134 * C156 - C135 * C146 - C134 * C157 + C121 * C170 + C136 * C158 -
           C137 * C147 - C136 * C159 + C122 * C171 + C138 * C160 - C139 * C148 -
           C138 * C161 + C123 * C172 + C140 * C162 - C141 * C149 - C140 * C163 +
           C124 * C173 + C142 * C164 - C143 * C150 - C142 * C165 +
           C125 * C174) *
              C153637 * C153625 * C153537 * C153521 * C132 -
          (C142 * C166 - C143 * C151 - C142 * C167 + C125 * C175 + C140 * C164 -
           C141 * C150 - C140 * C165 + C124 * C174 + C138 * C162 - C139 * C149 -
           C138 * C163 + C123 * C173 + C136 * C160 - C137 * C148 - C136 * C161 +
           C122 * C172 + C134 * C158 - C135 * C147 - C134 * C159 +
           C121 * C171) *
              C153637 * C153625 * C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
            C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
            C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
               C153637 * C153936 +
           (C2689 * C323 - C2690 * C307 - C2689 * C324 + C2683 * C343 +
            C2691 * C321 - C2692 * C306 - C2691 * C322 + C2684 * C342 +
            C2693 * C319 - C2694 * C305 - C2693 * C320 + C153885 * C341) *
               C153637 * C153924 +
           (C2689 * C325 - C2690 * C308 - C2689 * C326 + C2683 * C344 +
            C2691 * C327 - C2692 * C309 - C2691 * C328 + C2684 * C345 +
            C2693 * C329 - C2694 * C310 - C2693 * C330 + C153885 * C346) *
               C153637 * C153898) *
              C153537 * C153521 * C130 -
          ((C2693 * C331 - C2694 * C311 - C2693 * C332 + C153885 * C347 +
            C2691 * C329 - C2692 * C310 - C2691 * C330 + C2684 * C346 +
            C2689 * C327 - C2690 * C309 - C2689 * C328 + C2683 * C345) *
               C153637 * C153898 +
           (C2693 * C317 - C2694 * C304 - C2693 * C318 + C153885 * C340 +
            C2691 * C319 - C2692 * C305 - C2691 * C320 + C2684 * C341 +
            C2689 * C321 - C2690 * C306 - C2689 * C322 + C2683 * C342) *
               C153637 * C153924 +
           (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
            C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
            C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
               C153637 * C153936) *
              C153537 * C153521 * C131 +
          ((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
            C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
            C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
               C153637 * C153936 +
           (C2689 * C319 - C2690 * C305 - C2689 * C320 + C2683 * C341 +
            C2691 * C317 - C2692 * C304 - C2691 * C318 + C2684 * C340 +
            C2693 * C315 - C2694 * C303 - C2693 * C316 + C153885 * C339) *
               C153637 * C153924 +
           (C2689 * C329 - C2690 * C310 - C2689 * C330 + C2683 * C346 +
            C2691 * C331 - C2692 * C311 - C2691 * C332 + C2684 * C347 +
            C2693 * C333 - C2694 * C312 - C2693 * C334 + C153885 * C348) *
               C153637 * C153898) *
              C153537 * C153521 * C132 -
          ((C2693 * C337 - C2694 * C314 - C2693 * C338 + C153885 * C350 +
            C2691 * C333 - C2692 * C312 - C2691 * C334 + C2684 * C348 +
            C2689 * C331 - C2690 * C311 - C2689 * C332 + C2683 * C347) *
               C153637 * C153898 +
           (C2693 * C335 - C2694 * C313 - C2693 * C336 + C153885 * C349 +
            C2691 * C315 - C2692 * C303 - C2691 * C316 + C2684 * C339 +
            C2689 * C317 - C2690 * C304 - C2689 * C318 + C2683 * C340) *
               C153637 * C153924 +
           (C2693 * C162 - C2694 * C149 - C2693 * C163 + C153885 * C173 +
            C2691 * C160 - C2692 * C148 - C2691 * C161 + C2684 * C172 +
            C2689 * C158 - C2690 * C147 - C2689 * C159 + C2683 * C171) *
               C153637 * C153936) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C153537 * C298 -
           ((C3044 + C3045 + C3046) * C153637 * C153898 +
            (C3043 + C3042 + C3041) * C153637 * C153924 +
            (C3040 + C3039 + C3038) * C153637 * C153936) *
               C153537 * C299 +
           (C3060 * C153936 + (C3046 + C3045 + C3044) * C153637 * C153924 +
            (C2689 * C2917 - C2690 * C2913 - C2689 * C2918 + C2683 * C2925 +
             C2691 * C2919 - C2692 * C2914 - C2691 * C2920 + C2684 * C2926 +
             C2693 * C2921 - C2694 * C2915 - C2693 * C2922 + C153885 * C2927) *
                C153637 * C153898) *
               C153537 * C300) *
              C301 +
          (((C3047 + C3048 + C3049) * C153637 * C153936 +
            (C3050 + C3051 + C3052) * C153637 * C153924 +
            (C3053 + C3054 + C3055) * C153637 * C153898) *
               C153537 * C299 -
           (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153637 * C153936) *
               C153537 * C298 -
           ((C2693 * C2923 - C2694 * C2916 - C2693 * C2924 + C153885 * C2928 +
             C2691 * C2921 - C2692 * C2915 - C2691 * C2922 + C2684 * C2927 +
             C2689 * C2919 - C2690 * C2914 - C2689 * C2920 + C2683 * C2926) *
                C153637 * C153898 +
            (C3055 + C3054 + C3053) * C153637 * C153924 + C3061 * C153936) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
            C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
            C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
               C153637 * C23989 +
           (C23992 * C323 - C23993 * C307 - C23992 * C324 + C153933 * C343 +
            C23994 * C321 - C23995 * C306 - C23994 * C322 + C153914 * C342 +
            C23996 * C319 - C23997 * C305 - C23996 * C320 + C153885 * C341) *
               C153637 * C23990 +
           (C23992 * C325 - C23993 * C308 - C23992 * C326 + C153933 * C344 +
            C23994 * C327 - C23995 * C309 - C23994 * C328 + C153914 * C345 +
            C23996 * C329 - C23997 * C310 - C23996 * C330 + C153885 * C346) *
               C153637 * C153898) *
              C153537 * C153521 * C130 -
          ((C23996 * C331 - C23997 * C311 - C23996 * C332 + C153885 * C347 +
            C23994 * C329 - C23995 * C310 - C23994 * C330 + C153914 * C346 +
            C23992 * C327 - C23993 * C309 - C23992 * C328 + C153933 * C345) *
               C153637 * C153898 +
           (C23996 * C317 - C23997 * C304 - C23996 * C318 + C153885 * C340 +
            C23994 * C319 - C23995 * C305 - C23994 * C320 + C153914 * C341 +
            C23992 * C321 - C23993 * C306 - C23992 * C322 + C153933 * C342) *
               C153637 * C23990 +
           (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
            C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
            C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
               C153637 * C23989) *
              C153537 * C153521 * C131 +
          ((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
            C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
            C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
               C153637 * C23989 +
           (C23992 * C319 - C23993 * C305 - C23992 * C320 + C153933 * C341 +
            C23994 * C317 - C23995 * C304 - C23994 * C318 + C153914 * C340 +
            C23996 * C315 - C23997 * C303 - C23996 * C316 + C153885 * C339) *
               C153637 * C23990 +
           (C23992 * C329 - C23993 * C310 - C23992 * C330 + C153933 * C346 +
            C23994 * C331 - C23995 * C311 - C23994 * C332 + C153914 * C347 +
            C23996 * C333 - C23997 * C312 - C23996 * C334 + C153885 * C348) *
               C153637 * C153898) *
              C153537 * C153521 * C132 -
          ((C23996 * C337 - C23997 * C314 - C23996 * C338 + C153885 * C350 +
            C23994 * C333 - C23995 * C312 - C23994 * C334 + C153914 * C348 +
            C23992 * C331 - C23993 * C311 - C23992 * C332 + C153933 * C347) *
               C153637 * C153898 +
           (C23996 * C335 - C23997 * C313 - C23996 * C336 + C153885 * C349 +
            C23994 * C315 - C23995 * C303 - C23994 * C316 + C153914 * C339 +
            C23992 * C317 - C23993 * C304 - C23992 * C318 + C153933 * C340) *
               C153637 * C23990 +
           (C23996 * C162 - C23997 * C149 - C23996 * C163 + C153885 * C173 +
            C23994 * C160 - C23995 * C148 - C23994 * C161 + C153914 * C172 +
            C23992 * C158 - C23993 * C147 - C23992 * C159 + C153933 * C171) *
               C153637 * C23989) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153537 * C298 -
           ((C24331 + C24332 + C24333) * C153637 * C153898 +
            (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C153537 * C299 +
           (C24347 * C23989 + (C24333 + C24332 + C24331) * C153637 * C23990 +
            (C23992 * C2917 - C23993 * C2913 - C23992 * C2918 +
             C153933 * C2925 + C23994 * C2919 - C23995 * C2914 -
             C23994 * C2920 + C153914 * C2926 + C23996 * C2921 -
             C23997 * C2915 - C23996 * C2922 + C153885 * C2927) *
                C153637 * C153898) *
               C153537 * C300) *
              C301 +
          (((C24334 + C24335 + C24336) * C153637 * C23989 +
            (C24337 + C24338 + C24339) * C153637 * C23990 +
            (C24340 + C24341 + C24342) * C153637 * C153898) *
               C153537 * C299 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C153537 * C298 -
           ((C23996 * C2923 - C23997 * C2916 - C23996 * C2924 +
             C153885 * C2928 + C23994 * C2921 - C23995 * C2915 -
             C23994 * C2922 + C153914 * C2927 + C23992 * C2919 -
             C23993 * C2914 - C23992 * C2920 + C153933 * C2926) *
                C153637 * C153898 +
            (C24342 + C24341 + C24340) * C153637 * C23990 + C24348 * C23989) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
               C153637 * C28207 +
           (C28212 * C323 - C28213 * C307 - C28212 * C324 + C153462 * C343) *
               C153637 * C28208 +
           (C28212 * C325 - C28213 * C308 - C28212 * C326 + C153462 * C344) *
               C153637 * C28209 +
           (C28212 * C1196 - C28213 * C1187 - C28212 * C1197 +
            C153462 * C1202) *
               C153637 * C28210 +
           (C28212 * C2917 - C28213 * C2913 - C28212 * C2918 +
            C153462 * C2925) *
               C153637 * C28211) *
              C153537 * C153521 * C130 -
          ((C28212 * C2919 - C28213 * C2914 - C28212 * C2920 +
            C153462 * C2926) *
               C153637 * C28211 +
           (C28212 * C1194 - C28213 * C1186 - C28212 * C1195 +
            C153462 * C1201) *
               C153637 * C28210 +
           (C28212 * C327 - C28213 * C309 - C28212 * C328 + C153462 * C345) *
               C153637 * C28209 +
           (C28212 * C321 - C28213 * C306 - C28212 * C322 + C153462 * C342) *
               C153637 * C28208 +
           (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
               C153637 * C28207) *
              C153537 * C153521 * C131 +
          ((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
               C153637 * C28207 +
           (C28212 * C319 - C28213 * C305 - C28212 * C320 + C153462 * C341) *
               C153637 * C28208 +
           (C28212 * C329 - C28213 * C310 - C28212 * C330 + C153462 * C346) *
               C153637 * C28209 +
           (C28212 * C1192 - C28213 * C1185 - C28212 * C1193 +
            C153462 * C1200) *
               C153637 * C28210 +
           (C28212 * C2921 - C28213 * C2915 - C28212 * C2922 +
            C153462 * C2927) *
               C153637 * C28211) *
              C153537 * C153521 * C132 -
          ((C28212 * C2923 - C28213 * C2916 - C28212 * C2924 +
            C153462 * C2928) *
               C153637 * C28211 +
           (C28212 * C1190 - C28213 * C1184 - C28212 * C1191 +
            C153462 * C1199) *
               C153637 * C28210 +
           (C28212 * C331 - C28213 * C311 - C28212 * C332 + C153462 * C347) *
               C153637 * C28209 +
           (C28212 * C317 - C28213 * C304 - C28212 * C318 + C153462 * C340) *
               C153637 * C28208 +
           (C28212 * C158 - C28213 * C147 - C28212 * C159 + C153462 * C171) *
               C153637 * C28207) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153537 * C298 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C153537 * C299 +
           (C28416 * C28207 + C28417 * C28208 + C28418 * C28209 +
            C28419 * C28210 +
            (C28212 * C28338 - C28213 * C28336 - C28212 * C28339 +
             C153462 * C28342) *
                C153637 * C28211) *
               C153537 * C300) *
              C301 +
          ((C28420 * C28207 + C28421 * C28208 + C28422 * C28209 +
            C28423 * C28210 + C28424 * C28211) *
               C153537 * C299 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C153537 * C298 -
           ((C28212 * C28340 - C28213 * C28337 - C28212 * C28341 +
             C153462 * C28343) *
                C153637 * C28211 +
            C28424 * C28210 + C28423 * C28209 + C28422 * C28208 +
            C28421 * C28207) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
            C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
            C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
               C47696 +
           (C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516 +
            C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
            C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514) *
               C47697 +
           (C23992 * C498 - C23993 * C481 - C23992 * C499 + C153933 * C517 +
            C23994 * C500 - C23995 * C482 - C23994 * C501 + C153914 * C518 +
            C23996 * C502 - C23997 * C483 - C23996 * C503 + C153885 * C519) *
               C153901) *
              C153625 * C153537 * C153521 * C130 -
          ((C23996 * C504 - C23997 * C484 - C23996 * C505 + C153885 * C520 +
            C23994 * C502 - C23995 * C483 - C23994 * C503 + C153914 * C519 +
            C23992 * C500 - C23993 * C482 - C23992 * C501 + C153933 * C518) *
               C153901 +
           (C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513 +
            C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
            C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515) *
               C47697 +
           (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
            C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
            C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
               C47696) *
              C153625 * C153537 * C153521 * C131 +
          ((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
            C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
            C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
               C47696 +
           (C23992 * C492 - C23993 * C478 - C23992 * C493 + C153933 * C514 +
            C23994 * C490 - C23995 * C477 - C23994 * C491 + C153914 * C513 +
            C23996 * C488 - C23997 * C476 - C23996 * C489 + C153885 * C512) *
               C47697 +
           (C23992 * C502 - C23993 * C483 - C23992 * C503 + C153933 * C519 +
            C23994 * C504 - C23995 * C484 - C23994 * C505 + C153914 * C520 +
            C23996 * C506 - C23997 * C485 - C23996 * C507 + C153885 * C521) *
               C153901) *
              C153625 * C153537 * C153521 * C132 -
          ((C23996 * C510 - C23997 * C487 - C23996 * C511 + C153885 * C523 +
            C23994 * C506 - C23995 * C485 - C23994 * C507 + C153914 * C521 +
            C23992 * C504 - C23993 * C484 - C23992 * C505 + C153933 * C520) *
               C153901 +
           (C23996 * C508 - C23997 * C486 - C23996 * C509 + C153885 * C522 +
            C23994 * C488 - C23995 * C476 - C23994 * C489 + C153914 * C512 +
            C23992 * C490 - C23993 * C477 - C23992 * C491 + C153933 * C513) *
               C47697 +
           (C23996 * C162 - C23997 * C149 - C23996 * C163 + C153885 * C173 +
            C23994 * C160 - C23995 * C148 - C23994 * C161 + C153914 * C172 +
            C23992 * C158 - C23993 * C147 - C23992 * C159 + C153933 * C171) *
               C47696) *
              C153625 * C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C47696 +
            (C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514) *
                C47697 +
            (C23992 * C498 - C23993 * C481 - C23992 * C499 + C153933 * C517 +
             C23994 * C500 - C23995 * C482 - C23994 * C501 + C153914 * C518 +
             C23996 * C502 - C23997 * C483 - C23996 * C503 + C153885 * C519) *
                C153901) *
               C153625 * C153537 * C298 -
           ((C26063 + C26062 + C26061) * C153901 +
            (C25410 + C25411 + C25412) * C47697 +
            (C24327 + C24326 + C24325) * C47696) *
               C153625 * C153537 * C299 +
           (C24345 * C47696 + (C25409 + C25408 + C25407) * C47697 +
            (C26064 + C26065 + C26066) * C153901) *
               C153625 * C153537 * C300) *
              C301 +
          (((C24334 + C24335 + C24336) * C47696 +
            (C25413 + C25414 + C25415) * C47697 +
            (C23992 * C1336 - C23993 * C1328 - C23992 * C1337 +
             C153933 * C1343 + C23994 * C1334 - C23995 * C1327 -
             C23994 * C1335 + C153914 * C1342 + C23996 * C1332 -
             C23997 * C1326 - C23996 * C1333 + C153885 * C1341) *
                C153901) *
               C153625 * C153537 * C299 -
           ((C23996 * C504 - C23997 * C484 - C23996 * C505 + C153885 * C520 +
             C23994 * C502 - C23995 * C483 - C23994 * C503 + C153914 * C519 +
             C23992 * C500 - C23993 * C482 - C23992 * C501 + C153933 * C518) *
                C153901 +
            (C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513 +
             C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
             C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515) *
                C47697 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C47696) *
               C153625 * C153537 * C298 -
           ((C23996 * C3289 - C23997 * C3282 - C23996 * C3290 +
             C153885 * C3294 + C23994 * C3287 - C23995 * C3281 -
             C23994 * C3288 + C153914 * C3293 + C23992 * C3285 -
             C23993 * C3280 - C23992 * C3286 + C153933 * C3292) *
                C153901 +
            (C25418 + C25417 + C25416) * C47697 + C24346 * C47696) *
               C153625 * C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C47696 +
            C31290 * C47697 + C31291 * C153901) *
               C153936 +
           (C28405 * C47696 + C29052 * C47697 + C29431 * C153901) * C153924 +
           (C28406 * C47696 + C29051 * C47697 + C29432 * C153901) * C153898) *
              C153537 * C153521 * C130 -
          ((C30998 * C153901 + C29054 * C47697 + C28411 * C47696) * C153898 +
           (C30997 * C153901 + C29053 * C47697 + C28410 * C47696) * C153924 +
           (C31296 * C153901 + C31295 * C47697 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C47696) *
               C153936) *
              C153537 * C153521 * C131 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C47696 +
            C31782 * C47697 + C31783 * C153901) *
               C153936 +
           (C28701 * C47696 + C31544 * C47697 + C31545 * C153901) * C153924 +
           (C28702 * C47696 + C31546 * C47697 + C31547 * C153901) * C153898) *
              C153537 * C153521 * C132 -
          (((C28212 * C3289 - C28213 * C3282 - C28212 * C3290 +
             C153462 * C3294) *
                C153901 +
            (C28212 * C1763 - C28213 * C1757 - C28212 * C1764 +
             C153462 * C1772) *
                C47697 +
            (C28212 * C331 - C28213 * C311 - C28212 * C332 + C153462 * C347) *
                C47696) *
               C153898 +
           ((C28212 * C1332 - C28213 * C1326 - C28212 * C1333 +
             C153462 * C1341) *
                C153901 +
            (C28212 * C957 - C28213 * C948 - C28212 * C958 + C153462 * C966) *
                C47697 +
            (C28212 * C317 - C28213 * C304 - C28212 * C318 + C153462 * C340) *
                C47696) *
               C153924 +
           ((C28212 * C504 - C28213 * C484 - C28212 * C505 + C153462 * C520) *
                C153901 +
            (C28212 * C490 - C28213 * C477 - C28212 * C491 + C153462 * C513) *
                C47697 +
            (C28212 * C158 - C28213 * C147 - C28212 * C159 + C153462 * C171) *
                C47696) *
               C153936) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C47696 +
             C31290 * C47697 + C31291 * C153901) *
                C153936 +
            (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
               C153537 * C298 -
           ((C52087 + C52088 + C52089) * C153898 +
            (C52086 + C52085 + C52084) * C153924 +
            (C52083 + C52082 + C52081) * C153936) *
               C153537 * C299 +
           (C52101 * C153936 + (C52089 + C52088 + C52087) * C153924 +
            (C28408 * C47696 + C29049 * C47697 + C29434 * C153901) * C153898) *
               C153537 * C300) *
              C301 +
          (((C52090 + C52091 + C52092) * C153936 +
            (C52093 + C52094 + C52095) * C153924 +
            (C52096 + C52097 + C52098) * C153898) *
               C153537 * C299 -
           (C52102 * C153898 + (C52092 + C52091 + C52090) * C153924 +
            (C31296 * C153901 + C31295 * C47697 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C47696) *
                C153936) *
               C153537 * C298 -
           (((C28212 * C28550 - C28213 * C28547 - C28212 * C28551 +
              C153462 * C28553) *
                 C153901 +
             C29056 * C47697 + C28413 * C47696) *
                C153898 +
            (C52098 + C52097 + C52096) * C153924 + C52102 * C153936) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C153537 * C153919 -
           (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
            (C3040 + C3039 + C3038) * C153637 * C153936) *
               C153537 * C153920 +
           (C3060 * C153936 + (C3046 + C3045 + C3044) * C153637 * C153924 +
            (C4561 + C4562 + C4563) * C153637 * C153898) *
               C153537 * C1469) *
              C153840 +
          (((C3047 + C3048 + C3049) * C153637 * C153936 +
            (C3050 + C3051 + C3052) * C153637 * C153924 +
            (C3053 + C3054 + C3055) * C153637 * C153898) *
               C153537 * C153920 -
           (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153637 * C153936) *
               C153537 * C153919 -
           ((C2693 * C2923 - C2694 * C2916 - C2693 * C2924 + C153885 * C2928 +
             C2691 * C2921 - C2692 * C2915 - C2691 * C2922 + C2684 * C2927 +
             C2689 * C2919 - C2690 * C2914 - C2689 * C2920 + C2683 * C2926) *
                C153637 * C153898 +
            (C3055 + C3054 + C3053) * C153637 * C153924 + C3061 * C153936) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C153537 * C153919 -
           (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
            C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
            C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
            C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
            C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
               C153637 * C153625 * C153537 * C153920 +
           (C134 * C325 - C135 * C308 - C134 * C326 + C121 * C344 +
            C136 * C327 - C137 * C309 - C136 * C328 + C122 * C345 +
            C138 * C329 - C139 * C310 - C138 * C330 + C123 * C346 +
            C140 * C331 - C141 * C311 - C140 * C332 + C124 * C347 +
            C142 * C333 - C143 * C312 - C142 * C334 + C125 * C348) *
               C153637 * C153625 * C153537 * C1469) *
              C153840 +
          ((C134 * C321 - C135 * C306 - C134 * C322 + C121 * C342 +
            C136 * C319 - C137 * C305 - C136 * C320 + C122 * C341 +
            C138 * C317 - C139 * C304 - C138 * C318 + C123 * C340 +
            C140 * C315 - C141 * C303 - C140 * C316 + C124 * C339 +
            C142 * C335 - C143 * C313 - C142 * C336 + C125 * C349) *
               C153637 * C153625 * C153537 * C153920 -
           (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
            C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
            C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
            C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
            C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
               C153637 * C153625 * C153537 * C153919 -
           (C142 * C337 - C143 * C314 - C142 * C338 + C125 * C350 +
            C140 * C333 - C141 * C312 - C140 * C334 + C124 * C348 +
            C138 * C331 - C139 * C311 - C138 * C332 + C123 * C347 +
            C136 * C329 - C137 * C310 - C136 * C330 + C122 * C346 +
            C134 * C327 - C135 * C309 - C134 * C328 + C121 * C345) *
               C153637 * C153625 * C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153537 * C153919 -
           (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C153537 * C153920 +
           (C24347 * C23989 + (C24333 + C24332 + C24331) * C153637 * C23990 +
            (C25804 + C25805 + C25806) * C153637 * C153898) *
               C153537 * C1469) *
              C153840 +
          (((C24334 + C24335 + C24336) * C153637 * C23989 +
            (C24337 + C24338 + C24339) * C153637 * C23990 +
            (C24340 + C24341 + C24342) * C153637 * C153898) *
               C153537 * C153920 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C153537 * C153919 -
           ((C23996 * C2923 - C23997 * C2916 - C23996 * C2924 +
             C153885 * C2928 + C23994 * C2921 - C23995 * C2915 -
             C23994 * C2922 + C153914 * C2927 + C23992 * C2919 -
             C23993 * C2914 - C23992 * C2920 + C153933 * C2926) *
                C153637 * C153898 +
            (C24342 + C24341 + C24340) * C153637 * C23990 + C24348 * C23989) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153537 * C153919 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C153537 * C153920 +
           (C28416 * C28207 + C28417 * C28208 + C28418 * C28209 +
            C28419 * C28210 + C29280 * C28211) *
               C153537 * C1469) *
              C153840 +
          ((C28420 * C28207 + C28421 * C28208 + C28422 * C28209 +
            C28423 * C28210 + C28424 * C28211) *
               C153537 * C153920 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C153537 * C153919 -
           ((C28212 * C28340 - C28213 * C28337 - C28212 * C28341 +
             C153462 * C28343) *
                C153637 * C28211 +
            C28424 * C28210 + C28423 * C28209 + C28422 * C28208 +
            C28421 * C28207) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C47696 +
            (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
               C153625 * C153537 * C153919 -
           (C49653 * C153901 + (C25410 + C25411 + C25412) * C47697 +
            (C24327 + C24326 + C24325) * C47696) *
               C153625 * C153537 * C153920 +
           (C24345 * C47696 + (C25409 + C25408 + C25407) * C47697 +
            (C26064 + C26065 + C26066) * C153901) *
               C153625 * C153537 * C1469) *
              C153840 +
          (((C24334 + C24335 + C24336) * C47696 +
            (C25413 + C25414 + C25415) * C47697 +
            (C49052 + C49053 + C49054) * C153901) *
               C153625 * C153537 * C153920 -
           (C48265 * C153901 + (C48255 + C48254 + C48253) * C47697 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C47696) *
               C153625 * C153537 * C153919 -
           ((C23996 * C3289 - C23997 * C3282 - C23996 * C3290 +
             C153885 * C3294 + C23994 * C3287 - C23995 * C3281 -
             C23994 * C3288 + C153914 * C3293 + C23992 * C3285 -
             C23993 * C3280 - C23992 * C3286 + C153933 * C3292) *
                C153901 +
            (C25418 + C25417 + C25416) * C47697 + C24346 * C47696) *
               C153625 * C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C47696 +
             C31290 * C47697 + C31291 * C153901) *
                C153936 +
            (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
               C153537 * C153919 -
           (C53433 * C153898 + (C52086 + C52085 + C52084) * C153924 +
            (C52083 + C52082 + C52081) * C153936) *
               C153537 * C153920 +
           (C52101 * C153936 + (C52089 + C52088 + C52087) * C153924 +
            (C53430 + C53431 + C53432) * C153898) *
               C153537 * C1469) *
              C153840 +
          (((C52090 + C52091 + C52092) * C153936 +
            (C52093 + C52094 + C52095) * C153924 +
            (C52096 + C52097 + C52098) * C153898) *
               C153537 * C153920 -
           (C52102 * C153898 + (C52092 + C52091 + C52090) * C153924 +
            (C31296 * C153901 + C31295 * C47697 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C47696) *
                C153936) *
               C153537 * C153919 -
           (((C28212 * C28550 - C28213 * C28547 - C28212 * C28551 +
              C153462 * C28553) *
                 C153901 +
             C29056 * C47697 + C28413 * C47696) *
                C153898 +
            (C52098 + C52097 + C52096) * C153924 + C52102 * C153936) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C153849 -
           (C5591 * C153898 + (C4155 + C4156 + C4157) * C153637 * C153924 +
            (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
             C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
             C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                C153637 * C153936) *
               C153601) *
              C153919 +
          (((C4157 + C4156 + C4155) * C153637 * C153936 +
            (C4154 + C4153 + C4152) * C153637 * C153924 +
            (C5595 + C5596 + C5597) * C153637 * C153898) *
               C153601 -
           (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
            (C3040 + C3039 + C3038) * C153637 * C153936) *
               C153849) *
              C153920 +
          ((C3060 * C153936 + (C3046 + C3045 + C3044) * C153637 * C153924 +
            (C4561 + C4562 + C4563) * C153637 * C153898) *
               C153849 -
           ((C2693 * C5564 - C2694 * C5561 - C2693 * C5565 + C153885 * C5570 +
             C2691 * C5566 - C2692 * C5562 - C2691 * C5567 + C2684 * C5571 +
             C2689 * C5568 - C2690 * C5563 - C2689 * C5569 + C2683 * C5572) *
                C153637 * C153898 +
            (C5597 + C5596 + C5595) * C153637 * C153924 + C5591 * C153936) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C153849 -
           (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
            C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
            C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
            C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
            C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
               C153637 * C153625 * C153601) *
              C153919 +
          ((C134 * C951 - C135 * C945 - C134 * C952 + C121 * C963 +
            C136 * C953 - C137 * C946 - C136 * C954 + C122 * C964 +
            C138 * C955 - C139 * C947 - C138 * C956 + C123 * C965 +
            C140 * C957 - C141 * C948 - C140 * C958 + C124 * C966 +
            C142 * C959 - C143 * C949 - C142 * C960 + C125 * C967) *
               C153637 * C153625 * C153601 -
           (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
            C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
            C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
            C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
            C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
               C153637 * C153625 * C153849) *
              C153920 +
          ((C134 * C325 - C135 * C308 - C134 * C326 + C121 * C344 +
            C136 * C327 - C137 * C309 - C136 * C328 + C122 * C345 +
            C138 * C329 - C139 * C310 - C138 * C330 + C123 * C346 +
            C140 * C331 - C141 * C311 - C140 * C332 + C124 * C347 +
            C142 * C333 - C143 * C312 - C142 * C334 + C125 * C348) *
               C153637 * C153625 * C153849 -
           (C142 * C1761 - C143 * C1756 - C142 * C1762 + C125 * C1771 +
            C140 * C1763 - C141 * C1757 - C140 * C1764 + C124 * C1772 +
            C138 * C1765 - C139 * C1758 - C138 * C1766 + C123 * C1773 +
            C136 * C1767 - C137 * C1759 - C136 * C1768 + C122 * C1774 +
            C134 * C1769 - C135 * C1760 - C134 * C1770 + C121 * C1775) *
               C153637 * C153625 * C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153849 -
           (C26810 * C153898 + (C25410 + C25411 + C25412) * C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C153601) *
              C153919 +
          (((C25412 + C25411 + C25410) * C153637 * C23989 +
            (C25409 + C25408 + C25407) * C153637 * C23990 +
            (C26814 + C26815 + C26816) * C153637 * C153898) *
               C153601 -
           (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C153849) *
              C153920 +
          ((C24347 * C23989 + (C24333 + C24332 + C24331) * C153637 * C23990 +
            (C25804 + C25805 + C25806) * C153637 * C153898) *
               C153849 -
           ((C23996 * C5564 - C23997 * C5561 - C23996 * C5565 +
             C153885 * C5570 + C23994 * C5566 - C23995 * C5562 -
             C23994 * C5567 + C153914 * C5571 + C23992 * C5568 -
             C23993 * C5563 - C23992 * C5569 + C153933 * C5572) *
                C153637 * C153898 +
            (C26816 + C26815 + C26814) * C153637 * C23990 + C26810 * C23989) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153849 -
           (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
            C29060 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C153601) *
              C153919 +
          ((C29060 * C28207 + C29059 * C28208 + C29058 * C28209 +
            C29057 * C28210 + C29856 * C28211) *
               C153601 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C153849) *
              C153920 +
          ((C28416 * C28207 + C28417 * C28208 + C28418 * C28209 +
            C28419 * C28210 + C29280 * C28211) *
               C153849 -
           ((C28212 * C29845 - C28213 * C29844 - C28212 * C29846 +
             C153462 * C29847) *
                C153637 * C28211 +
            C29856 * C28210 + C29057 * C28209 + C29058 * C28208 +
            C29059 * C28207) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C47696 +
            (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
               C153625 * C153849 -
           ((C48250 + C48251 + C48252) * C153901 +
            (C48249 + C48248 + C48247) * C47697 +
            (C48246 + C48245 + C48244) * C47696) *
               C153625 * C153601) *
              C153919 +
          (((C25412 + C25411 + C25410) * C47696 +
            (C26061 + C26062 + C26063) * C47697 +
            (C49657 + C49658 + C49659) * C153901) *
               C153625 * C153601 -
           (C49653 * C153901 + (C25410 + C25411 + C25412) * C47697 +
            (C24327 + C24326 + C24325) * C47696) *
               C153625 * C153849) *
              C153920 +
          ((C24345 * C47696 + (C25409 + C25408 + C25407) * C47697 +
            (C26064 + C26065 + C26066) * C153901) *
               C153625 * C153849 -
           ((C23996 * C6185 - C23997 * C6179 - C23996 * C6186 +
             C153885 * C6197 + C23994 * C6187 - C23995 * C6180 -
             C23994 * C6188 + C153914 * C6198 + C23992 * C6189 -
             C23993 * C6181 - C23992 * C6190 + C153933 * C6199) *
                C153901 +
            (C26066 + C26065 + C26064) * C47697 + C26806 * C47696) *
               C153625 * C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C47696 +
             C31290 * C47697 + C31291 * C153901) *
                C153936 +
            (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
               C153849 -
           (C54388 * C153898 + (C53056 + C53057 + C53058) * C153924 +
            (C31294 * C153901 + C31291 * C47697 + C31290 * C47696) * C153936) *
               C153601) *
              C153919 +
          (((C53058 + C53057 + C53056) * C153936 +
            (C53055 + C53054 + C53053) * C153924 +
            (C54385 + C54386 + C54387) * C153898) *
               C153601 -
           (C53433 * C153898 + (C52086 + C52085 + C52084) * C153924 +
            (C52083 + C52082 + C52081) * C153936) *
               C153849) *
              C153920 +
          ((C52101 * C153936 + (C52089 + C52088 + C52087) * C153924 +
            (C53430 + C53431 + C53432) * C153898) *
               C153849 -
           (((C28212 * C30184 - C28213 * C30182 - C28212 * C30185 +
              C153462 * C30188) *
                 C153901 +
             C29434 * C47697 + C29049 * C47696) *
                C153898 +
            (C54387 + C54386 + C54385) * C153924 + C54388 * C153936) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
                C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
                C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
                C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
                C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                   C153637 * C153625 * C153537 * C1091 -
               (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
                C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
                C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
                C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
                C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
                   C153637 * C153625 * C153537 * C153573) *
                  C1093 +
              ((C134 * C321 - C135 * C306 - C134 * C322 + C121 * C342 +
                C136 * C319 - C137 * C305 - C136 * C320 + C122 * C341 +
                C138 * C317 - C139 * C304 - C138 * C318 + C123 * C340 +
                C140 * C315 - C141 * C303 - C140 * C316 + C124 * C339 +
                C142 * C335 - C143 * C313 - C142 * C336 + C125 * C349) *
                   C153637 * C153625 * C153537 * C153573 -
               (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
                C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
                C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
                C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
                C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
                   C153637 * C153625 * C153537 * C1091) *
                  C1094 +
              ((C134 * C156 - C135 * C146 - C134 * C157 + C121 * C170 +
                C136 * C158 - C137 * C147 - C136 * C159 + C122 * C171 +
                C138 * C160 - C139 * C148 - C138 * C161 + C123 * C172 +
                C140 * C162 - C141 * C149 - C140 * C163 + C124 * C173 +
                C142 * C164 - C143 * C150 - C142 * C165 + C125 * C174) *
                   C153637 * C153625 * C153537 * C1091 -
               (C142 * C652 - C143 * C651 - C142 * C653 + C125 * C654 +
                C140 * C335 - C141 * C313 - C140 * C336 + C124 * C349 +
                C138 * C315 - C139 * C303 - C138 * C316 + C123 * C339 +
                C136 * C317 - C137 * C304 - C136 * C318 + C122 * C340 +
                C134 * C319 - C135 * C305 - C134 * C320 + C121 * C341) *
                   C153637 * C153625 * C153537 * C153573) *
                  C1095) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
               C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
               C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
               C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
               C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                  C153637 * C153625 * C153537 * C1178 -
              (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
               C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
               C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
               C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
               C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
                  C153637 * C153625 * C153537 * C1179 +
              (C134 * C325 - C135 * C308 - C134 * C326 + C121 * C344 +
               C136 * C327 - C137 * C309 - C136 * C328 + C122 * C345 +
               C138 * C329 - C139 * C310 - C138 * C330 + C123 * C346 +
               C140 * C331 - C141 * C311 - C140 * C332 + C124 * C347 +
               C142 * C333 - C143 * C312 - C142 * C334 + C125 * C348) *
                  C153637 * C153625 * C153537 * C1180 -
              (C142 * C1188 - C143 * C1183 - C142 * C1189 + C125 * C1198 +
               C140 * C1190 - C141 * C1184 - C140 * C1191 + C124 * C1199 +
               C138 * C1192 - C139 * C1185 - C138 * C1193 + C123 * C1200 +
               C136 * C1194 - C137 * C1186 - C136 * C1195 + C122 * C1201 +
               C134 * C1196 - C135 * C1187 - C134 * C1197 + C121 * C1202) *
                  C153637 * C153625 * C153537 * C1181) *
             C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C473 -
           (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
            C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
            C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
            C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
            C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
               C153637 * C153625 * C474 +
           (C134 * C498 - C135 * C481 - C134 * C499 + C121 * C517 +
            C136 * C500 - C137 * C482 - C136 * C501 + C122 * C518 +
            C138 * C502 - C139 * C483 - C138 * C503 + C123 * C519 +
            C140 * C504 - C141 * C484 - C140 * C505 + C124 * C520 +
            C142 * C506 - C143 * C485 - C142 * C507 + C125 * C521) *
               C153637 * C153625 * C475) *
              C1091 +
          ((C134 * C951 - C135 * C945 - C134 * C952 + C121 * C963 +
            C136 * C953 - C137 * C946 - C136 * C954 + C122 * C964 +
            C138 * C955 - C139 * C947 - C138 * C956 + C123 * C965 +
            C140 * C957 - C141 * C948 - C140 * C958 + C124 * C966 +
            C142 * C959 - C143 * C949 - C142 * C960 + C125 * C967) *
               C153637 * C153625 * C474 -
           (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
            C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
            C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
            C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
            C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
               C153637 * C153625 * C473 -
           (C142 * C1330 - C143 * C1325 - C142 * C1331 + C125 * C1340 +
            C140 * C1332 - C141 * C1326 - C140 * C1333 + C124 * C1341 +
            C138 * C1334 - C139 * C1327 - C138 * C1335 + C123 * C1342 +
            C136 * C1336 - C137 * C1328 - C136 * C1337 + C122 * C1343 +
            C134 * C1338 - C135 * C1329 - C134 * C1339 + C121 * C1344) *
               C153637 * C153625 * C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C153537 * C1091 -
           ((C3044 + C3045 + C3046) * C153637 * C153898 +
            (C3043 + C3042 + C3041) * C153637 * C153924 +
            (C3040 + C3039 + C3038) * C153637 * C153936) *
               C153537 * C153573) *
              C1093 +
          (((C3047 + C3048 + C3049) * C153637 * C153936 +
            (C3050 + C3051 + C3052) * C153637 * C153924 +
            (C3053 + C3054 + C3055) * C153637 * C153898) *
               C153537 * C153573 -
           (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153637 * C153936) *
               C153537 * C1091) *
              C1094 +
          (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
             C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
             C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                C153637 * C153936 +
            (C3550 + C3551 + C3552) * C153637 * C153924 +
            (C3553 + C3554 + C3555) * C153637 * C153898) *
               C153537 * C1091 -
           ((C2693 * C1188 - C2694 * C1183 - C2693 * C1189 + C153885 * C1198 +
             C2691 * C1190 - C2692 * C1184 - C2691 * C1191 + C2684 * C1199 +
             C2689 * C1192 - C2690 * C1185 - C2689 * C1193 + C2683 * C1200) *
                C153637 * C153898 +
            (C3555 + C3554 + C3553) * C153637 * C153924 +
            (C3552 + C3551 + C3550) * C153637 * C153936) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
            C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
            C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
               C153637 * C153936 +
           (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
              C153537 * C1178 -
          (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
           (C3040 + C3039 + C3038) * C153637 * C153936) *
              C153537 * C1179 +
          (C3060 * C153936 + (C3046 + C3045 + C3044) * C153637 * C153924 +
           (C4561 + C4562 + C4563) * C153637 * C153898) *
              C153537 * C1180 -
          ((C2693 * C4530 - C2694 * C4527 - C2693 * C4531 + C153885 * C4536 +
            C2691 * C4532 - C2692 * C4528 - C2691 * C4533 + C2684 * C4537 +
            C2689 * C4534 - C2690 * C4529 - C2689 * C4535 + C2683 * C4538) *
               C153637 * C153898 +
           (C4563 + C4562 + C4561) * C153637 * C153924 + C4557 * C153936) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C473 -
           ((C4152 + C4153 + C4154) * C153637 * C153898 +
            (C4155 + C4156 + C4157) * C153637 * C153924 +
            (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
             C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
             C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                C153637 * C153936) *
               C474 +
           ((C2689 * C498 - C2690 * C481 - C2689 * C499 + C2683 * C517 +
             C2691 * C500 - C2692 * C482 - C2691 * C501 + C2684 * C518 +
             C2693 * C502 - C2694 * C483 - C2693 * C503 + C153885 * C519) *
                C153637 * C153936 +
            (C4830 + C4831 + C4832) * C153637 * C153924 +
            (C4833 + C4834 + C4835) * C153637 * C153898) *
               C475) *
              C1091 +
          (((C4157 + C4156 + C4155) * C153637 * C153936 +
            (C4154 + C4153 + C4152) * C153637 * C153924 +
            (C2689 * C4067 - C2690 * C4063 - C2689 * C4068 + C2683 * C4075 +
             C2691 * C4069 - C2692 * C4064 - C2691 * C4070 + C2684 * C4076 +
             C2693 * C4071 - C2694 * C4065 - C2693 * C4072 + C153885 * C4077) *
                C153637 * C153898) *
               C474 -
           (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
            (C3040 + C3039 + C3038) * C153637 * C153936) *
               C473 -
           ((C2693 * C4784 - C2694 * C4781 - C2693 * C4785 + C153885 * C4790 +
             C2691 * C4786 - C2692 * C4782 - C2691 * C4787 + C2684 * C4791 +
             C2689 * C4788 - C2690 * C4783 - C2689 * C4789 + C2683 * C4792) *
                C153637 * C153898 +
            (C4835 + C4834 + C4833) * C153637 * C153924 +
            (C4832 + C4831 + C4830) * C153637 * C153936) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153537 * C1091 -
           ((C24331 + C24332 + C24333) * C153637 * C153898 +
            (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C153537 * C153573) *
              C1093 +
          (((C24334 + C24335 + C24336) * C153637 * C23989 +
            (C24337 + C24338 + C24339) * C153637 * C23990 +
            (C24340 + C24341 + C24342) * C153637 * C153898) *
               C153537 * C153573 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C153537 * C1091) *
              C1094 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C153637 * C23989 +
            (C24821 + C24822 + C24823) * C153637 * C23990 +
            (C24824 + C24825 + C24826) * C153637 * C153898) *
               C153537 * C1091 -
           ((C23996 * C1188 - C23997 * C1183 - C23996 * C1189 +
             C153885 * C1198 + C23994 * C1190 - C23995 * C1184 -
             C23994 * C1191 + C153914 * C1199 + C23992 * C1192 -
             C23993 * C1185 - C23992 * C1193 + C153933 * C1200) *
                C153637 * C153898 +
            (C24826 + C24825 + C24824) * C153637 * C23990 +
            (C24823 + C24822 + C24821) * C153637 * C23989) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
            C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
            C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
               C153637 * C23989 +
           (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
              C153537 * C1178 -
          (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
           (C24327 + C24326 + C24325) * C153637 * C23989) *
              C153537 * C1179 +
          (C24347 * C23989 + (C24333 + C24332 + C24331) * C153637 * C23990 +
           (C25804 + C25805 + C25806) * C153637 * C153898) *
              C153537 * C1180 -
          ((C23996 * C4530 - C23997 * C4527 - C23996 * C4531 + C153885 * C4536 +
            C23994 * C4532 - C23995 * C4528 - C23994 * C4533 + C153914 * C4537 +
            C23992 * C4534 - C23993 * C4529 - C23992 * C4535 +
            C153933 * C4538) *
               C153637 * C153898 +
           (C25806 + C25805 + C25804) * C153637 * C23990 + C25800 * C23989) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C473 -
           ((C25407 + C25408 + C25409) * C153637 * C153898 +
            (C25410 + C25411 + C25412) * C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C474 +
           ((C23992 * C498 - C23993 * C481 - C23992 * C499 + C153933 * C517 +
             C23994 * C500 - C23995 * C482 - C23994 * C501 + C153914 * C518 +
             C23996 * C502 - C23997 * C483 - C23996 * C503 + C153885 * C519) *
                C153637 * C23989 +
            (C26061 + C26062 + C26063) * C153637 * C23990 +
            (C26064 + C26065 + C26066) * C153637 * C153898) *
               C475) *
              C1091 +
          (((C25412 + C25411 + C25410) * C153637 * C23989 +
            (C25409 + C25408 + C25407) * C153637 * C23990 +
            (C23992 * C4067 - C23993 * C4063 - C23992 * C4068 +
             C153933 * C4075 + C23994 * C4069 - C23995 * C4064 -
             C23994 * C4070 + C153914 * C4076 + C23996 * C4071 -
             C23997 * C4065 - C23996 * C4072 + C153885 * C4077) *
                C153637 * C153898) *
               C474 -
           (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C473 -
           ((C23996 * C4784 - C23997 * C4781 - C23996 * C4785 +
             C153885 * C4790 + C23994 * C4786 - C23995 * C4782 -
             C23994 * C4787 + C153914 * C4791 + C23992 * C4788 -
             C23993 * C4783 - C23992 * C4789 + C153933 * C4792) *
                C153637 * C153898 +
            (C26066 + C26065 + C26064) * C153637 * C23990 +
            (C26063 + C26062 + C26061) * C153637 * C23989) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153537 * C1091 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C153537 * C153573) *
              C1093 +
          ((C28420 * C28207 + C28421 * C28208 + C28422 * C28209 +
            C28423 * C28210 + C28424 * C28211) *
               C153537 * C153573 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C153537 * C1091) *
              C1094 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C153637 * C28207 +
            C28705 * C28208 + C28706 * C28209 + C28707 * C28210 +
            C28708 * C28211) *
               C153537 * C1091 -
           ((C28212 * C4530 - C28213 * C4527 - C28212 * C4531 +
             C153462 * C4536) *
                C153637 * C28211 +
            C28708 * C28210 + C28707 * C28209 + C28706 * C28208 +
            C28705 * C28207) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
               C153637 * C28207 +
           C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
           C28418 * C28211) *
              C153537 * C1178 -
          (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
           C28416 * C28208 + C28415 * C28207) *
              C153537 * C1179 +
          (C28416 * C28207 + C28417 * C28208 + C28418 * C28209 +
           C28419 * C28210 + C29280 * C28211) *
              C153537 * C1180 -
          ((C28212 * C29269 - C28213 * C29268 - C28212 * C29270 +
            C153462 * C29271) *
               C153637 * C28211 +
           C29280 * C28210 + C28419 * C28209 + C28418 * C28208 +
           C28417 * C28207) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C473 -
           (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
            C29060 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C474 +
           ((C28212 * C498 - C28213 * C481 - C28212 * C499 + C153462 * C517) *
                C153637 * C28207 +
            C29435 * C28208 + C29436 * C28209 + C29437 * C28210 +
            C29438 * C28211) *
               C475) *
              C1091 +
          ((C29060 * C28207 + C29059 * C28208 + C29058 * C28209 +
            C29057 * C28210 +
            (C28212 * C28994 - C28213 * C28992 - C28212 * C28995 +
             C153462 * C28998) *
                C153637 * C28211) *
               C474 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C473 -
           ((C28212 * C29403 - C28213 * C29402 - C28212 * C29404 +
             C153462 * C29405) *
                C153637 * C28211 +
            C29438 * C28210 + C29437 * C28209 + C29436 * C28208 +
            C29435 * C28207) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C47696 +
            (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
               C153625 * C153537 * C1091 -
           ((C26063 + C26062 + C26061) * C153901 +
            (C25410 + C25411 + C25412) * C47697 +
            (C24327 + C24326 + C24325) * C47696) *
               C153625 * C153537 * C153573) *
              C1093 +
          (((C24334 + C24335 + C24336) * C47696 +
            (C25413 + C25414 + C25415) * C47697 +
            (C49052 + C49053 + C49054) * C153901) *
               C153625 * C153537 * C153573 -
           (C48265 * C153901 + (C48255 + C48254 + C48253) * C47697 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C47696) *
               C153625 * C153537 * C1091) *
              C1094 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C47696 +
            (C48738 + C48739 + C48740) * C47697 +
            (C48741 + C48742 + C48743) * C153901) *
               C153625 * C153537 * C1091 -
           ((C23996 * C1330 - C23997 * C1325 - C23996 * C1331 +
             C153885 * C1340 + C23994 * C1332 - C23995 * C1326 -
             C23994 * C1333 + C153914 * C1341 + C23992 * C1334 -
             C23993 * C1327 - C23992 * C1335 + C153933 * C1342) *
                C153901 +
            (C23996 * C959 - C23997 * C949 - C23996 * C960 + C153885 * C967 +
             C23994 * C957 - C23995 * C948 - C23994 * C958 + C153914 * C966 +
             C23992 * C955 - C23993 * C947 - C23992 * C956 + C153933 * C965) *
                C47697 +
            (C24823 + C24822 + C24821) * C47696) *
               C153625 * C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
            C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
            C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
               C47696 +
           (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
              C153625 * C153537 * C1178 -
          ((C26063 + C26062 + C26061) * C153901 +
           (C25410 + C25411 + C25412) * C47697 +
           (C24327 + C24326 + C24325) * C47696) *
              C153625 * C153537 * C1179 +
          (C24345 * C47696 + (C25409 + C25408 + C25407) * C47697 +
           (C26064 + C26065 + C26066) * C153901) *
              C153625 * C153537 * C1180 -
          ((C23996 * C4784 - C23997 * C4781 - C23996 * C4785 + C153885 * C4790 +
            C23994 * C4786 - C23995 * C4782 - C23994 * C4787 + C153914 * C4791 +
            C23992 * C4788 - C23993 * C4783 - C23992 * C4789 +
            C153933 * C4792) *
               C153901 +
           (C26816 + C26815 + C26814) * C47697 + C25796 * C47696) *
              C153625 * C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C47696 +
            (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
               C153625 * C473 -
           ((C48250 + C48251 + C48252) * C153901 +
            (C48249 + C48248 + C48247) * C47697 +
            (C48246 + C48245 + C48244) * C47696) *
               C153625 * C474 +
           (C48264 * C47696 + (C48252 + C48251 + C48250) * C47697 +
            (C23992 * C7518 - C23993 * C7514 - C23992 * C7519 +
             C153933 * C7526 + C23994 * C7520 - C23995 * C7515 -
             C23994 * C7521 + C153914 * C7527 + C23996 * C7522 -
             C23997 * C7516 - C23996 * C7523 + C153885 * C7528) *
                C153901) *
               C153625 * C475) *
              C1091 +
          (((C25412 + C25411 + C25410) * C47696 +
            (C26061 + C26062 + C26063) * C47697 +
            (C49657 + C49658 + C49659) * C153901) *
               C153625 * C474 -
           (C49653 * C153901 + (C25410 + C25411 + C25412) * C47697 +
            (C24327 + C24326 + C24325) * C47696) *
               C153625 * C473 -
           ((C23996 * C9038 - C23997 * C9035 - C23996 * C9039 +
             C153885 * C9044 + C23994 * C9040 - C23995 * C9036 -
             C23994 * C9041 + C153914 * C9045 + C23992 * C9042 -
             C23993 * C9037 - C23992 * C9043 + C153933 * C9046) *
                C153901 +
            (C49659 + C49658 + C49657) * C47697 + C49653 * C47696) *
               C153625 * C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C47696 +
             C31290 * C47697 + C31291 * C153901) *
                C153936 +
            (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
               C153537 * C1091 -
           ((C52087 + C52088 + C52089) * C153898 +
            (C52086 + C52085 + C52084) * C153924 +
            (C52083 + C52082 + C52081) * C153936) *
               C153537 * C153573) *
              C1093 +
          (((C52090 + C52091 + C52092) * C153936 +
            (C52093 + C52094 + C52095) * C153924 +
            (C52096 + C52097 + C52098) * C153898) *
               C153537 * C153573 -
           (C52102 * C153898 + (C52092 + C52091 + C52090) * C153924 +
            (C31296 * C153901 + C31295 * C47697 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C47696) *
                C153936) *
               C153537 * C1091) *
              C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C47696 +
             C31782 * C47697 + C31783 * C153901) *
                C153936 +
            (C52539 + C52540 + C52541) * C153924 +
            (C52542 + C52543 + C52544) * C153898) *
               C153537 * C1091 -
           (((C28212 * C4784 - C28213 * C4781 - C28212 * C4785 +
              C153462 * C4790) *
                 C153901 +
             C44743 * C47697 + C28703 * C47696) *
                C153898 +
            (C52544 + C52543 + C52542) * C153924 +
            (C52541 + C52540 + C52539) * C153936) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C47696 +
            C31290 * C47697 + C31291 * C153901) *
               C153936 +
           (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
              C153537 * C1178 -
          (C53433 * C153898 + (C52086 + C52085 + C52084) * C153924 +
           (C52083 + C52082 + C52081) * C153936) *
              C153537 * C1179 +
          (C52101 * C153936 + (C52089 + C52088 + C52087) * C153924 +
           (C53430 + C53431 + C53432) * C153898) *
              C153537 * C1180 -
          (((C28212 * C29403 - C28213 * C29402 - C28212 * C29404 +
             C153462 * C29405) *
                C153901 +
            C29855 * C47697 + C28409 * C47696) *
               C153898 +
           (C53432 + C53431 + C53430) * C153924 + C53433 * C153936) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C47696 +
             C31290 * C47697 + C31291 * C153901) *
                C153936 +
            (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
               C473 -
           ((C53053 + C53054 + C53055) * C153898 +
            (C53056 + C53057 + C53058) * C153924 +
            (C31294 * C153901 + C31291 * C47697 + C31290 * C47696) * C153936) *
               C474 +
           ((C31291 * C47696 + C31294 * C47697 + C34035 * C153901) * C153936 +
            (C53652 + C53653 + C53654) * C153924 +
            (C53655 + C53656 + C53657) * C153898) *
               C475) *
              C1091 +
          (((C53058 + C53057 + C53056) * C153936 +
            (C53055 + C53054 + C53053) * C153924 +
            (C29050 * C47696 + C29433 * C47697 + C32705 * C153901) * C153898) *
               C474 -
           (C53433 * C153898 + (C52086 + C52085 + C52084) * C153924 +
            (C52083 + C52082 + C52081) * C153936) *
               C473 -
           (((C28212 * C32677 - C28213 * C32676 - C28212 * C32678 +
              C153462 * C32679) *
                 C153901 +
             C32705 * C47697 + C29433 * C47696) *
                C153898 +
            (C53657 + C53656 + C53655) * C153924 +
            (C53654 + C53653 + C53652) * C153936) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153637 * C153936 +
             (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
                C153849 -
            ((C4152 + C4153 + C4154) * C153637 * C153898 +
             (C4155 + C4156 + C4157) * C153637 * C153924 +
             (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
              C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
              C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                 C153637 * C153936) *
                C153601) *
               C1091 +
           (((C4157 + C4156 + C4155) * C153637 * C153936 +
             (C4154 + C4153 + C4152) * C153637 * C153924 +
             (C2689 * C4067 - C2690 * C4063 - C2689 * C4068 + C2683 * C4075 +
              C2691 * C4069 - C2692 * C4064 - C2691 * C4070 + C2684 * C4076 +
              C2693 * C4071 - C2694 * C4065 - C2693 * C4072 + C153885 * C4077) *
                 C153637 * C153898) *
                C153601 -
            (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
             (C3040 + C3039 + C3038) * C153637 * C153936) *
                C153849) *
               C153573) *
              C153840 +
          ((((C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515 +
              C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
              C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513) *
                 C153637 * C153936 +
             (C4158 + C4159 + C4160) * C153637 * C153924 +
             (C4161 + C4162 + C4163) * C153637 * C153898) *
                C153601 -
            (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
             (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
              C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
              C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                 C153637 * C153936) *
                C153849) *
               C1091 +
           (((C3047 + C3048 + C3049) * C153637 * C153936 +
             (C3050 + C3051 + C3052) * C153637 * C153924 +
             (C3053 + C3054 + C3055) * C153637 * C153898) *
                C153849 -
            ((C2693 * C4073 - C2694 * C4066 - C2693 * C4074 + C153885 * C4078 +
              C2691 * C4071 - C2692 * C4065 - C2691 * C4072 + C2684 * C4077 +
              C2689 * C4069 - C2690 * C4064 - C2689 * C4070 + C2683 * C4076) *
                 C153637 * C153898 +
             (C4163 + C4162 + C4161) * C153637 * C153924 +
             (C4160 + C4159 + C4158) * C153637 * C153936) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
             C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
             C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
             C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
             C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                C153637 * C153625 * C153849 -
            (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
             C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
             C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
             C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
             C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
                C153637 * C153625 * C153601) *
               C1091 +
           ((C134 * C951 - C135 * C945 - C134 * C952 + C121 * C963 +
             C136 * C953 - C137 * C946 - C136 * C954 + C122 * C964 +
             C138 * C955 - C139 * C947 - C138 * C956 + C123 * C965 +
             C140 * C957 - C141 * C948 - C140 * C958 + C124 * C966 +
             C142 * C959 - C143 * C949 - C142 * C960 + C125 * C967) *
                C153637 * C153625 * C153601 -
            (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
             C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
             C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
             C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
             C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
                C153637 * C153625 * C153849) *
               C153573) *
              C153840 +
          (((C134 * C494 - C135 * C479 - C134 * C495 + C121 * C515 +
             C136 * C492 - C137 * C478 - C136 * C493 + C122 * C514 +
             C138 * C490 - C139 * C477 - C138 * C491 + C123 * C513 +
             C140 * C488 - C141 * C476 - C140 * C489 + C124 * C512 +
             C142 * C508 - C143 * C486 - C142 * C509 + C125 * C522) *
                C153637 * C153625 * C153601 -
            (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
             C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
             C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
             C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
             C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
                C153637 * C153625 * C153849) *
               C1091 +
           ((C134 * C321 - C135 * C306 - C134 * C322 + C121 * C342 +
             C136 * C319 - C137 * C305 - C136 * C320 + C122 * C341 +
             C138 * C317 - C139 * C304 - C138 * C318 + C123 * C340 +
             C140 * C315 - C141 * C303 - C140 * C316 + C124 * C339 +
             C142 * C335 - C143 * C313 - C142 * C336 + C125 * C349) *
                C153637 * C153625 * C153849 -
            (C142 * C961 - C143 * C950 - C142 * C962 + C125 * C968 +
             C140 * C959 - C141 * C949 - C140 * C960 + C124 * C967 +
             C138 * C957 - C139 * C948 - C138 * C958 + C123 * C966 +
             C136 * C955 - C137 * C947 - C136 * C956 + C122 * C965 +
             C134 * C953 - C135 * C946 - C134 * C954 + C121 * C964) *
                C153637 * C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C153637 * C23989 +
             (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
                C153849 -
            ((C25407 + C25408 + C25409) * C153637 * C153898 +
             (C25410 + C25411 + C25412) * C153637 * C23990 +
             (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
              C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
              C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                 C153637 * C23989) *
                C153601) *
               C1091 +
           (((C25412 + C25411 + C25410) * C153637 * C23989 +
             (C25409 + C25408 + C25407) * C153637 * C23990 +
             (C23992 * C4067 - C23993 * C4063 - C23992 * C4068 +
              C153933 * C4075 + C23994 * C4069 - C23995 * C4064 -
              C23994 * C4070 + C153914 * C4076 + C23996 * C4071 -
              C23997 * C4065 - C23996 * C4072 + C153885 * C4077) *
                 C153637 * C153898) *
                C153601 -
            (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
             (C24327 + C24326 + C24325) * C153637 * C23989) *
                C153849) *
               C153573) *
              C153840 +
          ((((C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515 +
              C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
              C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513) *
                 C153637 * C23989 +
             (C25413 + C25414 + C25415) * C153637 * C23990 +
             (C25416 + C25417 + C25418) * C153637 * C153898) *
                C153601 -
            (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C153637 * C23989) *
                C153849) *
               C1091 +
           (((C24334 + C24335 + C24336) * C153637 * C23989 +
             (C24337 + C24338 + C24339) * C153637 * C23990 +
             (C24340 + C24341 + C24342) * C153637 * C153898) *
                C153849 -
            ((C23996 * C4073 - C23997 * C4066 - C23996 * C4074 +
              C153885 * C4078 + C23994 * C4071 - C23995 * C4065 -
              C23994 * C4072 + C153914 * C4077 + C23992 * C4069 -
              C23993 * C4064 - C23992 * C4070 + C153933 * C4076) *
                 C153637 * C153898 +
             (C25418 + C25417 + C25416) * C153637 * C23990 +
             (C25415 + C25414 + C25413) * C153637 * C23989) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153637 * C28207 +
             C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
             C28418 * C28211) *
                C153849 -
            (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
             C29060 * C28208 +
             (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                 C153637 * C28207) *
                C153601) *
               C1091 +
           ((C29060 * C28207 + C29059 * C28208 + C29058 * C28209 +
             C29057 * C28210 +
             (C28212 * C28994 - C28213 * C28992 - C28212 * C28995 +
              C153462 * C28998) *
                 C153637 * C28211) *
                C153601 -
            (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
             C28416 * C28208 + C28415 * C28207) *
                C153849) *
               C153573) *
              C153840 +
          ((((C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                 C153637 * C28207 +
             C29061 * C28208 + C29062 * C28209 + C29063 * C28210 +
             C29064 * C28211) *
                C153601 -
            (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
             C28420 * C28208 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153637 * C28207) *
                C153849) *
               C1091 +
           ((C28420 * C28207 + C28421 * C28208 + C28422 * C28209 +
             C28423 * C28210 + C28424 * C28211) *
                C153849 -
            ((C28212 * C28996 - C28213 * C28993 - C28212 * C28997 +
              C153462 * C28999) *
                 C153637 * C28211 +
             C29064 * C28210 + C29063 * C28209 + C29062 * C28208 +
             C29061 * C28207) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C47696 +
             (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
                C153625 * C153849 -
            ((C48250 + C48251 + C48252) * C153901 +
             (C48249 + C48248 + C48247) * C47697 +
             (C48246 + C48245 + C48244) * C47696) *
                C153625 * C153601) *
               C1091 +
           (((C25412 + C25411 + C25410) * C47696 +
             (C26061 + C26062 + C26063) * C47697 +
             (C49657 + C49658 + C49659) * C153901) *
                C153625 * C153601 -
            (C49653 * C153901 + (C25410 + C25411 + C25412) * C47697 +
             (C24327 + C24326 + C24325) * C47696) *
                C153625 * C153849) *
               C153573) *
              C153840 +
          ((((C48253 + C48254 + C48255) * C47696 +
             (C48256 + C48257 + C48258) * C47697 +
             (C48259 + C48260 + C48261) * C153901) *
                C153625 * C153601 -
            (C48265 * C153901 + (C48255 + C48254 + C48253) * C47697 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C47696) *
                C153625 * C153849) *
               C1091 +
           (((C24334 + C24335 + C24336) * C47696 +
             (C25413 + C25414 + C25415) * C47697 +
             (C49052 + C49053 + C49054) * C153901) *
                C153625 * C153849 -
            ((C23996 * C8429 - C23997 * C8428 - C23996 * C8430 +
              C153885 * C8431 + C23994 * C6191 - C23995 * C6182 -
              C23994 * C6192 + C153914 * C6200 + C23992 * C6193 -
              C23993 * C6183 - C23992 * C6194 + C153933 * C6201) *
                 C153901 +
             (C49054 + C49053 + C49052) * C47697 +
             (C25415 + C25414 + C25413) * C47696) *
                C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                  C47696 +
              C31290 * C47697 + C31291 * C153901) *
                 C153936 +
             (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
                C153849 -
            ((C53053 + C53054 + C53055) * C153898 +
             (C53056 + C53057 + C53058) * C153924 +
             (C31294 * C153901 + C31291 * C47697 + C31290 * C47696) * C153936) *
                C153601) *
               C1091 +
           (((C53058 + C53057 + C53056) * C153936 +
             (C53055 + C53054 + C53053) * C153924 +
             (C29050 * C47696 + C29433 * C47697 + C32705 * C153901) * C153898) *
                C153601 -
            (C53433 * C153898 + (C52086 + C52085 + C52084) * C153924 +
             (C52083 + C52082 + C52081) * C153936) *
                C153849) *
               C153573) *
              C153840 +
          ((((C31295 * C47696 + C31296 * C47697 + C31297 * C153901) * C153936 +
             (C53059 + C53060 + C53061) * C153924 +
             (C53062 + C53063 + C53064) * C153898) *
                C153601 -
            (C52102 * C153898 + (C52092 + C52091 + C52090) * C153924 +
             (C31296 * C153901 + C31295 * C47697 +
              (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                  C47696) *
                 C153936) *
                C153849) *
               C1091 +
           (((C52090 + C52091 + C52092) * C153936 +
             (C52093 + C52094 + C52095) * C153924 +
             (C52096 + C52097 + C52098) * C153898) *
                C153849 -
            (((C28212 * C32074 - C28213 * C32073 - C28212 * C32075 +
               C153462 * C32076) *
                  C153901 +
              C30999 * C47697 + C29055 * C47696) *
                 C153898 +
             (C53064 + C53063 + C53062) * C153924 +
             (C53061 + C53060 + C53059) * C153936) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 + C136 * C154 -
           C137 * C145 - C136 * C155 + C122 * C169 + C138 * C156 - C139 * C146 -
           C138 * C157 + C123 * C170 + C140 * C158 - C141 * C147 - C140 * C159 +
           C124 * C171 + C142 * C160 - C143 * C148 - C142 * C161 +
           C125 * C172) *
              C153637 * C153625 * C153537 * C1178 -
          (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 + C140 * C317 -
           C141 * C304 - C140 * C318 + C124 * C340 + C138 * C319 - C139 * C305 -
           C138 * C320 + C123 * C341 + C136 * C321 - C137 * C306 - C136 * C322 +
           C122 * C342 + C134 * C323 - C135 * C307 - C134 * C324 +
           C121 * C343) *
              C153637 * C153625 * C153537 * C1179 +
          (C134 * C325 - C135 * C308 - C134 * C326 + C121 * C344 + C136 * C327 -
           C137 * C309 - C136 * C328 + C122 * C345 + C138 * C329 - C139 * C310 -
           C138 * C330 + C123 * C346 + C140 * C331 - C141 * C311 - C140 * C332 +
           C124 * C347 + C142 * C333 - C143 * C312 - C142 * C334 +
           C125 * C348) *
              C153637 * C153625 * C153537 * C1180 -
          (C142 * C1188 - C143 * C1183 - C142 * C1189 + C125 * C1198 +
           C140 * C1190 - C141 * C1184 - C140 * C1191 + C124 * C1199 +
           C138 * C1192 - C139 * C1185 - C138 * C1193 + C123 * C1200 +
           C136 * C1194 - C137 * C1186 - C136 * C1195 + C122 * C1201 +
           C134 * C1196 - C135 * C1187 - C134 * C1197 + C121 * C1202) *
              C153637 * C153625 * C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C153537 * C1091 -
           (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
            C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
            C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
            C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
            C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
               C153637 * C153625 * C153537 * C153573) *
              C1093 +
          ((C134 * C321 - C135 * C306 - C134 * C322 + C121 * C342 +
            C136 * C319 - C137 * C305 - C136 * C320 + C122 * C341 +
            C138 * C317 - C139 * C304 - C138 * C318 + C123 * C340 +
            C140 * C315 - C141 * C303 - C140 * C316 + C124 * C339 +
            C142 * C335 - C143 * C313 - C142 * C336 + C125 * C349) *
               C153637 * C153625 * C153537 * C153573 -
           (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
            C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
            C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
            C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
            C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
               C153637 * C153625 * C153537 * C1091) *
              C1094 +
          ((C134 * C156 - C135 * C146 - C134 * C157 + C121 * C170 +
            C136 * C158 - C137 * C147 - C136 * C159 + C122 * C171 +
            C138 * C160 - C139 * C148 - C138 * C161 + C123 * C172 +
            C140 * C162 - C141 * C149 - C140 * C163 + C124 * C173 +
            C142 * C164 - C143 * C150 - C142 * C165 + C125 * C174) *
               C153637 * C153625 * C153537 * C1091 -
           (C142 * C652 - C143 * C651 - C142 * C653 + C125 * C654 +
            C140 * C335 - C141 * C313 - C140 * C336 + C124 * C349 +
            C138 * C315 - C139 * C303 - C138 * C316 + C123 * C339 +
            C136 * C317 - C137 * C304 - C136 * C318 + C122 * C340 +
            C134 * C319 - C135 * C305 - C134 * C320 + C121 * C341) *
               C153637 * C153625 * C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C153537 * C1091 -
           ((C3044 + C3045 + C3046) * C153637 * C153898 +
            (C3043 + C3042 + C3041) * C153637 * C153924 +
            (C3040 + C3039 + C3038) * C153637 * C153936) *
               C153537 * C153573) *
              C1093 +
          (((C3047 + C3048 + C3049) * C153637 * C153936 +
            (C3050 + C3051 + C3052) * C153637 * C153924 +
            (C3053 + C3054 + C3055) * C153637 * C153898) *
               C153537 * C153573 -
           (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153637 * C153936) *
               C153537 * C1091) *
              C1094 +
          (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
             C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
             C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                C153637 * C153936 +
            (C3550 + C3551 + C3552) * C153637 * C153924 +
            (C3553 + C3554 + C3555) * C153637 * C153898) *
               C153537 * C1091 -
           ((C2693 * C1188 - C2694 * C1183 - C2693 * C1189 + C153885 * C1198 +
             C2691 * C1190 - C2692 * C1184 - C2691 * C1191 + C2684 * C1199 +
             C2689 * C1192 - C2690 * C1185 - C2689 * C1193 + C2683 * C1200) *
                C153637 * C153898 +
            (C3555 + C3554 + C3553) * C153637 * C153924 +
            (C3552 + C3551 + C3550) * C153637 * C153936) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
            C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
            C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
               C153637 * C153936 +
           (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
              C153537 * C1178 -
          (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
           (C3040 + C3039 + C3038) * C153637 * C153936) *
              C153537 * C1179 +
          (C3060 * C153936 + (C3046 + C3045 + C3044) * C153637 * C153924 +
           (C4561 + C4562 + C4563) * C153637 * C153898) *
              C153537 * C1180 -
          ((C2693 * C4530 - C2694 * C4527 - C2693 * C4531 + C153885 * C4536 +
            C2691 * C4532 - C2692 * C4528 - C2691 * C4533 + C2684 * C4537 +
            C2689 * C4534 - C2690 * C4529 - C2689 * C4535 + C2683 * C4538) *
               C153637 * C153898 +
           (C4563 + C4562 + C4561) * C153637 * C153924 + C4557 * C153936) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153537 * C1091 -
           ((C24331 + C24332 + C24333) * C153637 * C153898 +
            (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C153537 * C153573) *
              C1093 +
          (((C24334 + C24335 + C24336) * C153637 * C23989 +
            (C24337 + C24338 + C24339) * C153637 * C23990 +
            (C24340 + C24341 + C24342) * C153637 * C153898) *
               C153537 * C153573 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C153537 * C1091) *
              C1094 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C153637 * C23989 +
            (C24821 + C24822 + C24823) * C153637 * C23990 +
            (C24824 + C24825 + C24826) * C153637 * C153898) *
               C153537 * C1091 -
           ((C23996 * C1188 - C23997 * C1183 - C23996 * C1189 +
             C153885 * C1198 + C23994 * C1190 - C23995 * C1184 -
             C23994 * C1191 + C153914 * C1199 + C23992 * C1192 -
             C23993 * C1185 - C23992 * C1193 + C153933 * C1200) *
                C153637 * C153898 +
            (C24826 + C24825 + C24824) * C153637 * C23990 +
            (C24823 + C24822 + C24821) * C153637 * C23989) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
            C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
            C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
               C153637 * C23989 +
           (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
              C153537 * C1178 -
          (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
           (C24327 + C24326 + C24325) * C153637 * C23989) *
              C153537 * C1179 +
          (C24347 * C23989 + (C24333 + C24332 + C24331) * C153637 * C23990 +
           (C25804 + C25805 + C25806) * C153637 * C153898) *
              C153537 * C1180 -
          ((C23996 * C4530 - C23997 * C4527 - C23996 * C4531 + C153885 * C4536 +
            C23994 * C4532 - C23995 * C4528 - C23994 * C4533 + C153914 * C4537 +
            C23992 * C4534 - C23993 * C4529 - C23992 * C4535 +
            C153933 * C4538) *
               C153637 * C153898 +
           (C25806 + C25805 + C25804) * C153637 * C23990 + C25800 * C23989) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153537 * C1091 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C153537 * C153573) *
              C1093 +
          ((C28420 * C28207 + C28421 * C28208 + C28422 * C28209 +
            C28423 * C28210 + C28424 * C28211) *
               C153537 * C153573 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C153537 * C1091) *
              C1094 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C153637 * C28207 +
            C28705 * C28208 + C28706 * C28209 + C28707 * C28210 +
            C28708 * C28211) *
               C153537 * C1091 -
           ((C28212 * C4530 - C28213 * C4527 - C28212 * C4531 +
             C153462 * C4536) *
                C153637 * C28211 +
            C28708 * C28210 + C28707 * C28209 + C28706 * C28208 +
            C28705 * C28207) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
               C153637 * C28207 +
           C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
           C28418 * C28211) *
              C153537 * C1178 -
          (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
           C28416 * C28208 + C28415 * C28207) *
              C153537 * C1179 +
          (C28416 * C28207 + C28417 * C28208 + C28418 * C28209 +
           C28419 * C28210 + C29280 * C28211) *
              C153537 * C1180 -
          ((C28212 * C29269 - C28213 * C29268 - C28212 * C29270 +
            C153462 * C29271) *
               C153637 * C28211 +
           C29280 * C28210 + C28419 * C28209 + C28418 * C28208 +
           C28417 * C28207) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C47696 +
            (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
               C153625 * C153537 * C1091 -
           ((C26063 + C26062 + C26061) * C153901 +
            (C25410 + C25411 + C25412) * C47697 +
            (C24327 + C24326 + C24325) * C47696) *
               C153625 * C153537 * C153573) *
              C1093 +
          (((C24334 + C24335 + C24336) * C47696 +
            (C25413 + C25414 + C25415) * C47697 +
            (C49052 + C49053 + C49054) * C153901) *
               C153625 * C153537 * C153573 -
           (C48265 * C153901 + (C48255 + C48254 + C48253) * C47697 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C47696) *
               C153625 * C153537 * C1091) *
              C1094 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C47696 +
            (C48738 + C48739 + C48740) * C47697 +
            (C48741 + C48742 + C48743) * C153901) *
               C153625 * C153537 * C1091 -
           ((C23996 * C1330 - C23997 * C1325 - C23996 * C1331 +
             C153885 * C1340 + C23994 * C1332 - C23995 * C1326 -
             C23994 * C1333 + C153914 * C1341 + C23992 * C1334 -
             C23993 * C1327 - C23992 * C1335 + C153933 * C1342) *
                C153901 +
            (C23996 * C959 - C23997 * C949 - C23996 * C960 + C153885 * C967 +
             C23994 * C957 - C23995 * C948 - C23994 * C958 + C153914 * C966 +
             C23992 * C955 - C23993 * C947 - C23992 * C956 + C153933 * C965) *
                C47697 +
            (C24823 + C24822 + C24821) * C47696) *
               C153625 * C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
            C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
            C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
               C47696 +
           (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
              C153625 * C153537 * C1178 -
          ((C26063 + C26062 + C26061) * C153901 +
           (C25410 + C25411 + C25412) * C47697 +
           (C24327 + C24326 + C24325) * C47696) *
              C153625 * C153537 * C1179 +
          (C24345 * C47696 + (C25409 + C25408 + C25407) * C47697 +
           (C26064 + C26065 + C26066) * C153901) *
              C153625 * C153537 * C1180 -
          ((C23996 * C4784 - C23997 * C4781 - C23996 * C4785 + C153885 * C4790 +
            C23994 * C4786 - C23995 * C4782 - C23994 * C4787 + C153914 * C4791 +
            C23992 * C4788 - C23993 * C4783 - C23992 * C4789 +
            C153933 * C4792) *
               C153901 +
           (C26816 + C26815 + C26814) * C47697 + C25796 * C47696) *
              C153625 * C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C47696 +
             C31290 * C47697 + C31291 * C153901) *
                C153936 +
            (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
               C153537 * C1091 -
           ((C52087 + C52088 + C52089) * C153898 +
            (C52086 + C52085 + C52084) * C153924 +
            (C52083 + C52082 + C52081) * C153936) *
               C153537 * C153573) *
              C1093 +
          (((C52090 + C52091 + C52092) * C153936 +
            (C52093 + C52094 + C52095) * C153924 +
            (C52096 + C52097 + C52098) * C153898) *
               C153537 * C153573 -
           (C52102 * C153898 + (C52092 + C52091 + C52090) * C153924 +
            (C31296 * C153901 + C31295 * C47697 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C47696) *
                C153936) *
               C153537 * C1091) *
              C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C47696 +
             C31782 * C47697 + C31783 * C153901) *
                C153936 +
            (C52539 + C52540 + C52541) * C153924 +
            (C52542 + C52543 + C52544) * C153898) *
               C153537 * C1091 -
           (((C28212 * C4784 - C28213 * C4781 - C28212 * C4785 +
              C153462 * C4790) *
                 C153901 +
             C44743 * C47697 + C28703 * C47696) *
                C153898 +
            (C52544 + C52543 + C52542) * C153924 +
            (C52541 + C52540 + C52539) * C153936) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C47696 +
            C31290 * C47697 + C31291 * C153901) *
               C153936 +
           (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
              C153537 * C1178 -
          (C53433 * C153898 + (C52086 + C52085 + C52084) * C153924 +
           (C52083 + C52082 + C52081) * C153936) *
              C153537 * C1179 +
          (C52101 * C153936 + (C52089 + C52088 + C52087) * C153924 +
           (C53430 + C53431 + C53432) * C153898) *
              C153537 * C1180 -
          (((C28212 * C29403 - C28213 * C29402 - C28212 * C29404 +
             C153462 * C29405) *
                C153901 +
            C29855 * C47697 + C28409 * C47696) *
               C153898 +
           (C53432 + C53431 + C53430) * C153924 + C53433 * C153936) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153637 * C153936 +
             (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
                C1898 -
            (C5591 * C153898 + (C4155 + C4156 + C4157) * C153637 * C153924 +
             (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
              C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
              C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                 C153637 * C153936) *
                C153601) *
               C153848 +
           (((C4157 + C4156 + C4155) * C153637 * C153936 +
             (C4154 + C4153 + C4152) * C153637 * C153924 +
             (C5595 + C5596 + C5597) * C153637 * C153898) *
                C153601 -
            (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
             (C3040 + C3039 + C3038) * C153637 * C153936) *
                C1898) *
               C153573) *
              C153840 +
          ((((C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515 +
              C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
              C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513) *
                 C153637 * C153936 +
             (C4158 + C4159 + C4160) * C153637 * C153924 +
             (C4161 + C4162 + C4163) * C153637 * C153898) *
                C153601 -
            (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
             (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
              C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
              C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                 C153637 * C153936) *
                C1898) *
               C153848 +
           (((C3047 + C3048 + C3049) * C153637 * C153936 +
             (C3050 + C3051 + C3052) * C153637 * C153924 +
             (C3053 + C3054 + C3055) * C153637 * C153898) *
                C1898 -
            ((C2693 * C4073 - C2694 * C4066 - C2693 * C4074 + C153885 * C4078 +
              C2691 * C4071 - C2692 * C4065 - C2691 * C4072 + C2684 * C4077 +
              C2689 * C4069 - C2690 * C4064 - C2689 * C4070 + C2683 * C4076) *
                 C153637 * C153898 +
             (C4163 + C4162 + C4161) * C153637 * C153924 +
             (C4160 + C4159 + C4158) * C153637 * C153936) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
             C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
             C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
             C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
             C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                C153637 * C153625 * C1898 -
            (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
             C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
             C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
             C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
             C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
                C153637 * C153625 * C153601) *
               C153848 +
           ((C134 * C951 - C135 * C945 - C134 * C952 + C121 * C963 +
             C136 * C953 - C137 * C946 - C136 * C954 + C122 * C964 +
             C138 * C955 - C139 * C947 - C138 * C956 + C123 * C965 +
             C140 * C957 - C141 * C948 - C140 * C958 + C124 * C966 +
             C142 * C959 - C143 * C949 - C142 * C960 + C125 * C967) *
                C153637 * C153625 * C153601 -
            (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
             C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
             C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
             C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
             C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
                C153637 * C153625 * C1898) *
               C153573) *
              C153840 +
          (((C134 * C494 - C135 * C479 - C134 * C495 + C121 * C515 +
             C136 * C492 - C137 * C478 - C136 * C493 + C122 * C514 +
             C138 * C490 - C139 * C477 - C138 * C491 + C123 * C513 +
             C140 * C488 - C141 * C476 - C140 * C489 + C124 * C512 +
             C142 * C508 - C143 * C486 - C142 * C509 + C125 * C522) *
                C153637 * C153625 * C153601 -
            (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
             C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
             C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
             C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
             C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
                C153637 * C153625 * C1898) *
               C153848 +
           ((C134 * C321 - C135 * C306 - C134 * C322 + C121 * C342 +
             C136 * C319 - C137 * C305 - C136 * C320 + C122 * C341 +
             C138 * C317 - C139 * C304 - C138 * C318 + C123 * C340 +
             C140 * C315 - C141 * C303 - C140 * C316 + C124 * C339 +
             C142 * C335 - C143 * C313 - C142 * C336 + C125 * C349) *
                C153637 * C153625 * C1898 -
            (C142 * C961 - C143 * C950 - C142 * C962 + C125 * C968 +
             C140 * C959 - C141 * C949 - C140 * C960 + C124 * C967 +
             C138 * C957 - C139 * C948 - C138 * C958 + C123 * C966 +
             C136 * C955 - C137 * C947 - C136 * C956 + C122 * C965 +
             C134 * C953 - C135 * C946 - C134 * C954 + C121 * C964) *
                C153637 * C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C153637 * C23989 +
             (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
                C1898 -
            (C26810 * C153898 + (C25410 + C25411 + C25412) * C153637 * C23990 +
             (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
              C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
              C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                 C153637 * C23989) *
                C153601) *
               C153848 +
           (((C25412 + C25411 + C25410) * C153637 * C23989 +
             (C25409 + C25408 + C25407) * C153637 * C23990 +
             (C26814 + C26815 + C26816) * C153637 * C153898) *
                C153601 -
            (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
             (C24327 + C24326 + C24325) * C153637 * C23989) *
                C1898) *
               C153573) *
              C153840 +
          ((((C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515 +
              C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
              C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513) *
                 C153637 * C23989 +
             (C25413 + C25414 + C25415) * C153637 * C23990 +
             (C25416 + C25417 + C25418) * C153637 * C153898) *
                C153601 -
            (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C153637 * C23989) *
                C1898) *
               C153848 +
           (((C24334 + C24335 + C24336) * C153637 * C23989 +
             (C24337 + C24338 + C24339) * C153637 * C23990 +
             (C24340 + C24341 + C24342) * C153637 * C153898) *
                C1898 -
            ((C23996 * C4073 - C23997 * C4066 - C23996 * C4074 +
              C153885 * C4078 + C23994 * C4071 - C23995 * C4065 -
              C23994 * C4072 + C153914 * C4077 + C23992 * C4069 -
              C23993 * C4064 - C23992 * C4070 + C153933 * C4076) *
                 C153637 * C153898 +
             (C25418 + C25417 + C25416) * C153637 * C23990 +
             (C25415 + C25414 + C25413) * C153637 * C23989) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153637 * C28207 +
             C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
             C28418 * C28211) *
                C1898 -
            (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
             C29060 * C28208 +
             (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                 C153637 * C28207) *
                C153601) *
               C153848 +
           ((C29060 * C28207 + C29059 * C28208 + C29058 * C28209 +
             C29057 * C28210 + C29856 * C28211) *
                C153601 -
            (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
             C28416 * C28208 + C28415 * C28207) *
                C1898) *
               C153573) *
              C153840 +
          ((((C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                 C153637 * C28207 +
             C29061 * C28208 + C29062 * C28209 + C29063 * C28210 +
             C29064 * C28211) *
                C153601 -
            (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
             C28420 * C28208 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153637 * C28207) *
                C1898) *
               C153848 +
           ((C28420 * C28207 + C28421 * C28208 + C28422 * C28209 +
             C28423 * C28210 + C28424 * C28211) *
                C1898 -
            ((C28212 * C28996 - C28213 * C28993 - C28212 * C28997 +
              C153462 * C28999) *
                 C153637 * C28211 +
             C29064 * C28210 + C29063 * C28209 + C29062 * C28208 +
             C29061 * C28207) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C47696 +
             (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
                C153625 * C1898 -
            (C50981 * C153901 + (C48249 + C48248 + C48247) * C47697 +
             (C48246 + C48245 + C48244) * C47696) *
                C153625 * C153601) *
               C153848 +
           (((C25412 + C25411 + C25410) * C47696 +
             (C26061 + C26062 + C26063) * C47697 +
             (C49657 + C49658 + C49659) * C153901) *
                C153625 * C153601 -
            (C49653 * C153901 + (C25410 + C25411 + C25412) * C47697 +
             (C24327 + C24326 + C24325) * C47696) *
                C153625 * C1898) *
               C153573) *
              C153840 +
          ((((C48253 + C48254 + C48255) * C47696 +
             (C48256 + C48257 + C48258) * C47697 +
             (C48259 + C48260 + C48261) * C153901) *
                C153625 * C153601 -
            (C48265 * C153901 + (C48255 + C48254 + C48253) * C47697 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C47696) *
                C153625 * C1898) *
               C153848 +
           (((C24334 + C24335 + C24336) * C47696 +
             (C25413 + C25414 + C25415) * C47697 +
             (C49052 + C49053 + C49054) * C153901) *
                C153625 * C1898 -
            ((C23996 * C8429 - C23997 * C8428 - C23996 * C8430 +
              C153885 * C8431 + C23994 * C6191 - C23995 * C6182 -
              C23994 * C6192 + C153914 * C6200 + C23992 * C6193 -
              C23993 * C6183 - C23992 * C6194 + C153933 * C6201) *
                 C153901 +
             (C49054 + C49053 + C49052) * C47697 +
             (C25415 + C25414 + C25413) * C47696) *
                C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                  C47696 +
              C31290 * C47697 + C31291 * C153901) *
                 C153936 +
             (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
                C1898 -
            (C54388 * C153898 + (C53056 + C53057 + C53058) * C153924 +
             (C31294 * C153901 + C31291 * C47697 + C31290 * C47696) * C153936) *
                C153601) *
               C153848 +
           (((C53058 + C53057 + C53056) * C153936 +
             (C53055 + C53054 + C53053) * C153924 +
             (C54385 + C54386 + C54387) * C153898) *
                C153601 -
            (C53433 * C153898 + (C52086 + C52085 + C52084) * C153924 +
             (C52083 + C52082 + C52081) * C153936) *
                C1898) *
               C153573) *
              C153840 +
          ((((C31295 * C47696 + C31296 * C47697 + C31297 * C153901) * C153936 +
             (C53059 + C53060 + C53061) * C153924 +
             (C53062 + C53063 + C53064) * C153898) *
                C153601 -
            (C52102 * C153898 + (C52092 + C52091 + C52090) * C153924 +
             (C31296 * C153901 + C31295 * C47697 +
              (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                  C47696) *
                 C153936) *
                C1898) *
               C153848 +
           (((C52090 + C52091 + C52092) * C153936 +
             (C52093 + C52094 + C52095) * C153924 +
             (C52096 + C52097 + C52098) * C153898) *
                C1898 -
            (((C28212 * C32074 - C28213 * C32073 - C28212 * C32075 +
               C153462 * C32076) *
                  C153901 +
              C30999 * C47697 + C29055 * C47696) *
                 C153898 +
             (C53064 + C53063 + C53062) * C153924 +
             (C53061 + C53060 + C53059) * C153936) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C153921 -
           (C5591 * C153898 + (C4155 + C4156 + C4157) * C153637 * C153924 +
            (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
             C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
             C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                C153637 * C153936) *
               C153922 +
           ((C2689 * C498 - C2690 * C481 - C2689 * C499 + C2683 * C517 +
             C2691 * C500 - C2692 * C482 - C2691 * C501 + C2684 * C518 +
             C2693 * C502 - C2694 * C483 - C2693 * C503 + C153885 * C519) *
                C153637 * C153936 +
            (C4830 + C4831 + C4832) * C153637 * C153924 +
            (C4833 + C4834 + C4835) * C153637 * C153898) *
               C2414) *
              C153848 +
          (((C4157 + C4156 + C4155) * C153637 * C153936 +
            (C4154 + C4153 + C4152) * C153637 * C153924 +
            (C5595 + C5596 + C5597) * C153637 * C153898) *
               C153922 -
           (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
            (C3040 + C3039 + C3038) * C153637 * C153936) *
               C153921 -
           ((C2693 * C4784 - C2694 * C4781 - C2693 * C4785 + C153885 * C4790 +
             C2691 * C4786 - C2692 * C4782 - C2691 * C4787 + C2684 * C4791 +
             C2689 * C4788 - C2690 * C4783 - C2689 * C4789 + C2683 * C4792) *
                C153637 * C153898 +
            (C4835 + C4834 + C4833) * C153637 * C153924 +
            (C4832 + C4831 + C4830) * C153637 * C153936) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C153921 -
           (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
            C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
            C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
            C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
            C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
               C153637 * C153625 * C153922 +
           (C134 * C498 - C135 * C481 - C134 * C499 + C121 * C517 +
            C136 * C500 - C137 * C482 - C136 * C501 + C122 * C518 +
            C138 * C502 - C139 * C483 - C138 * C503 + C123 * C519 +
            C140 * C504 - C141 * C484 - C140 * C505 + C124 * C520 +
            C142 * C506 - C143 * C485 - C142 * C507 + C125 * C521) *
               C153637 * C153625 * C2414) *
              C153848 +
          ((C134 * C951 - C135 * C945 - C134 * C952 + C121 * C963 +
            C136 * C953 - C137 * C946 - C136 * C954 + C122 * C964 +
            C138 * C955 - C139 * C947 - C138 * C956 + C123 * C965 +
            C140 * C957 - C141 * C948 - C140 * C958 + C124 * C966 +
            C142 * C959 - C143 * C949 - C142 * C960 + C125 * C967) *
               C153637 * C153625 * C153922 -
           (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
            C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
            C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
            C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
            C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
               C153637 * C153625 * C153921 -
           (C142 * C1330 - C143 * C1325 - C142 * C1331 + C125 * C1340 +
            C140 * C1332 - C141 * C1326 - C140 * C1333 + C124 * C1341 +
            C138 * C1334 - C139 * C1327 - C138 * C1335 + C123 * C1342 +
            C136 * C1336 - C137 * C1328 - C136 * C1337 + C122 * C1343 +
            C134 * C1338 - C135 * C1329 - C134 * C1339 + C121 * C1344) *
               C153637 * C153625 * C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153921 -
           (C26810 * C153898 + (C25410 + C25411 + C25412) * C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C153922 +
           ((C23992 * C498 - C23993 * C481 - C23992 * C499 + C153933 * C517 +
             C23994 * C500 - C23995 * C482 - C23994 * C501 + C153914 * C518 +
             C23996 * C502 - C23997 * C483 - C23996 * C503 + C153885 * C519) *
                C153637 * C23989 +
            (C26061 + C26062 + C26063) * C153637 * C23990 +
            (C26064 + C26065 + C26066) * C153637 * C153898) *
               C2414) *
              C153848 +
          (((C25412 + C25411 + C25410) * C153637 * C23989 +
            (C25409 + C25408 + C25407) * C153637 * C23990 +
            (C26814 + C26815 + C26816) * C153637 * C153898) *
               C153922 -
           (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C153921 -
           ((C23996 * C4784 - C23997 * C4781 - C23996 * C4785 +
             C153885 * C4790 + C23994 * C4786 - C23995 * C4782 -
             C23994 * C4787 + C153914 * C4791 + C23992 * C4788 -
             C23993 * C4783 - C23992 * C4789 + C153933 * C4792) *
                C153637 * C153898 +
            (C26066 + C26065 + C26064) * C153637 * C23990 +
            (C26063 + C26062 + C26061) * C153637 * C23989) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153921 -
           (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
            C29060 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C153922 +
           ((C28212 * C498 - C28213 * C481 - C28212 * C499 + C153462 * C517) *
                C153637 * C28207 +
            C29435 * C28208 + C29436 * C28209 + C29437 * C28210 +
            C29438 * C28211) *
               C2414) *
              C153848 +
          ((C29060 * C28207 + C29059 * C28208 + C29058 * C28209 +
            C29057 * C28210 + C29856 * C28211) *
               C153922 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C153921 -
           ((C28212 * C29403 - C28213 * C29402 - C28212 * C29404 +
             C153462 * C29405) *
                C153637 * C28211 +
            C29438 * C28210 + C29437 * C28209 + C29436 * C28208 +
            C29435 * C28207) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C47696 +
            (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
               C153625 * C153921 -
           (C50981 * C153901 + (C48249 + C48248 + C48247) * C47697 +
            (C48246 + C48245 + C48244) * C47696) *
               C153625 * C153922 +
           (C48264 * C47696 + (C48252 + C48251 + C48250) * C47697 +
            (C50988 + C50989 + C50990) * C153901) *
               C153625 * C2414) *
              C153848 +
          (((C25412 + C25411 + C25410) * C47696 +
            (C26061 + C26062 + C26063) * C47697 +
            (C49657 + C49658 + C49659) * C153901) *
               C153625 * C153922 -
           (C49653 * C153901 + (C25410 + C25411 + C25412) * C47697 +
            (C24327 + C24326 + C24325) * C47696) *
               C153625 * C153921 -
           ((C23996 * C9038 - C23997 * C9035 - C23996 * C9039 +
             C153885 * C9044 + C23994 * C9040 - C23995 * C9036 -
             C23994 * C9041 + C153914 * C9045 + C23992 * C9042 -
             C23993 * C9037 - C23992 * C9043 + C153933 * C9046) *
                C153901 +
            (C49659 + C49658 + C49657) * C47697 + C49653 * C47696) *
               C153625 * C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C47696 +
             C31290 * C47697 + C31291 * C153901) *
                C153936 +
            (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
               C153921 -
           (C54388 * C153898 + (C53056 + C53057 + C53058) * C153924 +
            (C31294 * C153901 + C31291 * C47697 + C31290 * C47696) * C153936) *
               C153922 +
           ((C31291 * C47696 + C31294 * C47697 + C34035 * C153901) * C153936 +
            (C53652 + C53653 + C53654) * C153924 +
            (C53655 + C53656 + C53657) * C153898) *
               C2414) *
              C153848 +
          (((C53058 + C53057 + C53056) * C153936 +
            (C53055 + C53054 + C53053) * C153924 +
            (C54385 + C54386 + C54387) * C153898) *
               C153922 -
           (C53433 * C153898 + (C52086 + C52085 + C52084) * C153924 +
            (C52083 + C52082 + C52081) * C153936) *
               C153921 -
           (((C28212 * C32677 - C28213 * C32676 - C28212 * C32678 +
              C153462 * C32679) *
                 C153901 +
             C32705 * C47697 + C29433 * C47696) *
                C153898 +
            (C53657 + C53656 + C53655) * C153924 +
            (C53654 + C53653 + C53652) * C153936) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
                C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
                C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
                C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
                C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                   C153637 * C153625 * C1898 -
               (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
                C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
                C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
                C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
                C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
                   C153637 * C153625 * C153601) *
                  C153521 * C1093 +
              ((C134 * C494 - C135 * C479 - C134 * C495 + C121 * C515 +
                C136 * C492 - C137 * C478 - C136 * C493 + C122 * C514 +
                C138 * C490 - C139 * C477 - C138 * C491 + C123 * C513 +
                C140 * C488 - C141 * C476 - C140 * C489 + C124 * C512 +
                C142 * C508 - C143 * C486 - C142 * C509 + C125 * C522) *
                   C153637 * C153625 * C153601 -
               (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
                C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
                C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
                C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
                C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
                   C153637 * C153625 * C1898) *
                  C153521 * C1094 +
              ((C134 * C156 - C135 * C146 - C134 * C157 + C121 * C170 +
                C136 * C158 - C137 * C147 - C136 * C159 + C122 * C171 +
                C138 * C160 - C139 * C148 - C138 * C161 + C123 * C172 +
                C140 * C162 - C141 * C149 - C140 * C163 + C124 * C173 +
                C142 * C164 - C143 * C150 - C142 * C165 + C125 * C174) *
                   C153637 * C153625 * C1898 -
               (C142 * C780 - C143 * C779 - C142 * C781 + C125 * C782 +
                C140 * C508 - C141 * C486 - C140 * C509 + C124 * C522 +
                C138 * C488 - C139 * C476 - C138 * C489 + C123 * C512 +
                C136 * C490 - C137 * C477 - C136 * C491 + C122 * C513 +
                C134 * C492 - C135 * C478 - C134 * C493 + C121 * C514) *
                   C153637 * C153625 * C153601) *
                  C153521 * C1095) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
                C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
                C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
                C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
                C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                   C153637 * C153625 * C1898 -
               (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
                C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
                C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
                C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
                C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
                   C153637 * C153625 * C153601) *
                  C298 +
              ((C134 * C951 - C135 * C945 - C134 * C952 + C121 * C963 +
                C136 * C953 - C137 * C946 - C136 * C954 + C122 * C964 +
                C138 * C955 - C139 * C947 - C138 * C956 + C123 * C965 +
                C140 * C957 - C141 * C948 - C140 * C958 + C124 * C966 +
                C142 * C959 - C143 * C949 - C142 * C960 + C125 * C967) *
                   C153637 * C153625 * C153601 -
               (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
                C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
                C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
                C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
                C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
                   C153637 * C153625 * C1898) *
                  C299 +
              ((C134 * C325 - C135 * C308 - C134 * C326 + C121 * C344 +
                C136 * C327 - C137 * C309 - C136 * C328 + C122 * C345 +
                C138 * C329 - C139 * C310 - C138 * C330 + C123 * C346 +
                C140 * C331 - C141 * C311 - C140 * C332 + C124 * C347 +
                C142 * C333 - C143 * C312 - C142 * C334 + C125 * C348) *
                   C153637 * C153625 * C1898 -
               (C142 * C1761 - C143 * C1756 - C142 * C1762 + C125 * C1771 +
                C140 * C1763 - C141 * C1757 - C140 * C1764 + C124 * C1772 +
                C138 * C1765 - C139 * C1758 - C138 * C1766 + C123 * C1773 +
                C136 * C1767 - C137 * C1759 - C136 * C1768 + C122 * C1774 +
                C134 * C1769 - C135 * C1760 - C134 * C1770 + C121 * C1775) *
                   C153637 * C153625 * C153601) *
                  C300) *
             C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 + C136 * C154 -
           C137 * C145 - C136 * C155 + C122 * C169 + C138 * C156 - C139 * C146 -
           C138 * C157 + C123 * C170 + C140 * C158 - C141 * C147 - C140 * C159 +
           C124 * C171 + C142 * C160 - C143 * C148 - C142 * C161 +
           C125 * C172) *
              C153637 * C153625 * C2104 -
          (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 + C140 * C490 -
           C141 * C477 - C140 * C491 + C124 * C513 + C138 * C492 - C139 * C478 -
           C138 * C493 + C123 * C514 + C136 * C494 - C137 * C479 - C136 * C495 +
           C122 * C515 + C134 * C496 - C135 * C480 - C134 * C497 +
           C121 * C516) *
              C153637 * C153625 * C2105 +
          (C134 * C498 - C135 * C481 - C134 * C499 + C121 * C517 + C136 * C500 -
           C137 * C482 - C136 * C501 + C122 * C518 + C138 * C502 - C139 * C483 -
           C138 * C503 + C123 * C519 + C140 * C504 - C141 * C484 - C140 * C505 +
           C124 * C520 + C142 * C506 - C143 * C485 - C142 * C507 +
           C125 * C521) *
              C153637 * C153625 * C2106 -
          (C142 * C2113 - C143 * C2108 - C142 * C2114 + C125 * C2123 +
           C140 * C2115 - C141 * C2109 - C140 * C2116 + C124 * C2124 +
           C138 * C2117 - C139 * C2110 - C138 * C2118 + C123 * C2125 +
           C136 * C2119 - C137 * C2111 - C136 * C2120 + C122 * C2126 +
           C134 * C2121 - C135 * C2112 - C134 * C2122 + C121 * C2127) *
              C153637 * C153625 * C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C1898 -
           (C5591 * C153898 + (C4155 + C4156 + C4157) * C153637 * C153924 +
            (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
             C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
             C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                C153637 * C153936) *
               C153601) *
              C153521 * C1093 +
          (((C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515 +
             C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
             C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513) *
                C153637 * C153936 +
            (C4158 + C4159 + C4160) * C153637 * C153924 +
            (C4161 + C4162 + C4163) * C153637 * C153898) *
               C153601 -
           (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153637 * C153936) *
               C1898) *
              C153521 * C1094 +
          (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
             C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
             C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                C153637 * C153936 +
            (C3550 + C3551 + C3552) * C153637 * C153924 +
            (C3553 + C3554 + C3555) * C153637 * C153898) *
               C1898 -
           ((C2693 * C1761 - C2694 * C1756 - C2693 * C1762 + C153885 * C1771 +
             C2691 * C1763 - C2692 * C1757 - C2691 * C1764 + C2684 * C1772 +
             C2689 * C1765 - C2690 * C1758 - C2689 * C1766 + C2683 * C1773) *
                C153637 * C153898 +
            (C2693 * C959 - C2694 * C949 - C2693 * C960 + C153885 * C967 +
             C2691 * C957 - C2692 * C948 - C2691 * C958 + C2684 * C966 +
             C2689 * C955 - C2690 * C947 - C2689 * C956 + C2683 * C965) *
                C153637 * C153924 +
            (C2693 * C488 - C2694 * C476 - C2693 * C489 + C153885 * C512 +
             C2691 * C490 - C2692 * C477 - C2691 * C491 + C2684 * C513 +
             C2689 * C492 - C2690 * C478 - C2689 * C493 + C2683 * C514) *
                C153637 * C153936) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C1898 -
           (C5591 * C153898 + (C4155 + C4156 + C4157) * C153637 * C153924 +
            (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
             C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
             C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                C153637 * C153936) *
               C153601) *
              C298 +
          (((C4157 + C4156 + C4155) * C153637 * C153936 +
            (C4154 + C4153 + C4152) * C153637 * C153924 +
            (C5595 + C5596 + C5597) * C153637 * C153898) *
               C153601 -
           (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
            (C3040 + C3039 + C3038) * C153637 * C153936) *
               C1898) *
              C299 +
          ((C3060 * C153936 + (C3046 + C3045 + C3044) * C153637 * C153924 +
            (C4561 + C4562 + C4563) * C153637 * C153898) *
               C1898 -
           ((C2693 * C5564 - C2694 * C5561 - C2693 * C5565 + C153885 * C5570 +
             C2691 * C5566 - C2692 * C5562 - C2691 * C5567 + C2684 * C5571 +
             C2689 * C5568 - C2690 * C5563 - C2689 * C5569 + C2683 * C5572) *
                C153637 * C153898 +
            (C5597 + C5596 + C5595) * C153637 * C153924 + C5591 * C153936) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
            C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
            C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
               C153637 * C153936 +
           (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
              C2104 -
          (C5591 * C153898 + (C4155 + C4156 + C4157) * C153637 * C153924 +
           (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
            C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
            C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
               C153637 * C153936) *
              C2105 +
          ((C2689 * C498 - C2690 * C481 - C2689 * C499 + C2683 * C517 +
            C2691 * C500 - C2692 * C482 - C2691 * C501 + C2684 * C518 +
            C2693 * C502 - C2694 * C483 - C2693 * C503 + C153885 * C519) *
               C153637 * C153936 +
           (C4830 + C4831 + C4832) * C153637 * C153924 +
           (C4833 + C4834 + C4835) * C153637 * C153898) *
              C2106 -
          ((C2693 * C6185 - C2694 * C6179 - C2693 * C6186 + C153885 * C6197 +
            C2691 * C6187 - C2692 * C6180 - C2691 * C6188 + C2684 * C6198 +
            C2689 * C6189 - C2690 * C6181 - C2689 * C6190 + C2683 * C6199) *
               C153637 * C153898 +
           (C2693 * C6191 - C2694 * C6182 - C2693 * C6192 + C153885 * C6200 +
            C2691 * C6193 - C2692 * C6183 - C2691 * C6194 + C2684 * C6201 +
            C2689 * C6195 - C2690 * C6184 - C2689 * C6196 + C2683 * C6202) *
               C153637 * C153924 +
           (C2693 * C2117 - C2694 * C2110 - C2693 * C2118 + C153885 * C2125 +
            C2691 * C2119 - C2692 * C2111 - C2691 * C2120 + C2684 * C2126 +
            C2689 * C2121 - C2690 * C2112 - C2689 * C2122 + C2683 * C2127) *
               C153637 * C153936) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C1898 -
           (C26810 * C153898 + (C25410 + C25411 + C25412) * C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C153601) *
              C153521 * C1093 +
          (((C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515 +
             C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
             C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513) *
                C153637 * C23989 +
            (C25413 + C25414 + C25415) * C153637 * C23990 +
            (C25416 + C25417 + C25418) * C153637 * C153898) *
               C153601 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C1898) *
              C153521 * C1094 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C153637 * C23989 +
            (C24821 + C24822 + C24823) * C153637 * C23990 +
            (C24824 + C24825 + C24826) * C153637 * C153898) *
               C1898 -
           ((C23996 * C1761 - C23997 * C1756 - C23996 * C1762 +
             C153885 * C1771 + C23994 * C1763 - C23995 * C1757 -
             C23994 * C1764 + C153914 * C1772 + C23992 * C1765 -
             C23993 * C1758 - C23992 * C1766 + C153933 * C1773) *
                C153637 * C153898 +
            (C23996 * C959 - C23997 * C949 - C23996 * C960 + C153885 * C967 +
             C23994 * C957 - C23995 * C948 - C23994 * C958 + C153914 * C966 +
             C23992 * C955 - C23993 * C947 - C23992 * C956 + C153933 * C965) *
                C153637 * C23990 +
            (C23996 * C488 - C23997 * C476 - C23996 * C489 + C153885 * C512 +
             C23994 * C490 - C23995 * C477 - C23994 * C491 + C153914 * C513 +
             C23992 * C492 - C23993 * C478 - C23992 * C493 + C153933 * C514) *
                C153637 * C23989) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C1898 -
           (C26810 * C153898 + (C25410 + C25411 + C25412) * C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C153601) *
              C298 +
          (((C25412 + C25411 + C25410) * C153637 * C23989 +
            (C25409 + C25408 + C25407) * C153637 * C23990 +
            (C26814 + C26815 + C26816) * C153637 * C153898) *
               C153601 -
           (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C1898) *
              C299 +
          ((C24347 * C23989 + (C24333 + C24332 + C24331) * C153637 * C23990 +
            (C25804 + C25805 + C25806) * C153637 * C153898) *
               C1898 -
           ((C23996 * C5564 - C23997 * C5561 - C23996 * C5565 +
             C153885 * C5570 + C23994 * C5566 - C23995 * C5562 -
             C23994 * C5567 + C153914 * C5571 + C23992 * C5568 -
             C23993 * C5563 - C23992 * C5569 + C153933 * C5572) *
                C153637 * C153898 +
            (C26816 + C26815 + C26814) * C153637 * C23990 + C26810 * C23989) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
            C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
            C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
               C153637 * C23989 +
           (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
              C2104 -
          (C26810 * C153898 + (C25410 + C25411 + C25412) * C153637 * C23990 +
           (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
            C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
            C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
               C153637 * C23989) *
              C2105 +
          ((C23992 * C498 - C23993 * C481 - C23992 * C499 + C153933 * C517 +
            C23994 * C500 - C23995 * C482 - C23994 * C501 + C153914 * C518 +
            C23996 * C502 - C23997 * C483 - C23996 * C503 + C153885 * C519) *
               C153637 * C23989 +
           (C26061 + C26062 + C26063) * C153637 * C23990 +
           (C26064 + C26065 + C26066) * C153637 * C153898) *
              C2106 -
          ((C23996 * C6185 - C23997 * C6179 - C23996 * C6186 + C153885 * C6197 +
            C23994 * C6187 - C23995 * C6180 - C23994 * C6188 + C153914 * C6198 +
            C23992 * C6189 - C23993 * C6181 - C23992 * C6190 +
            C153933 * C6199) *
               C153637 * C153898 +
           (C23996 * C6191 - C23997 * C6182 - C23996 * C6192 + C153885 * C6200 +
            C23994 * C6193 - C23995 * C6183 - C23994 * C6194 + C153914 * C6201 +
            C23992 * C6195 - C23993 * C6184 - C23992 * C6196 +
            C153933 * C6202) *
               C153637 * C23990 +
           (C23996 * C2117 - C23997 * C2110 - C23996 * C2118 + C153885 * C2125 +
            C23994 * C2119 - C23995 * C2111 - C23994 * C2120 + C153914 * C2126 +
            C23992 * C2121 - C23993 * C2112 - C23992 * C2122 +
            C153933 * C2127) *
               C153637 * C23989) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C1898 -
           (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
            C29060 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C153601) *
              C153521 * C1093 +
          (((C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                C153637 * C28207 +
            C29061 * C28208 + C29062 * C28209 + C29063 * C28210 +
            C29064 * C28211) *
               C153601 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C1898) *
              C153521 * C1094 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C153637 * C28207 +
            C28705 * C28208 + C28706 * C28209 + C28707 * C28210 +
            C28708 * C28211) *
               C1898 -
           ((C28212 * C5564 - C28213 * C5561 - C28212 * C5565 +
             C153462 * C5570) *
                C153637 * C28211 +
            (C28212 * C4071 - C28213 * C4065 - C28212 * C4072 +
             C153462 * C4077) *
                C153637 * C28210 +
            (C28212 * C1765 - C28213 * C1758 - C28212 * C1766 +
             C153462 * C1773) *
                C153637 * C28209 +
            (C28212 * C955 - C28213 * C947 - C28212 * C956 + C153462 * C965) *
                C153637 * C28208 +
            (C28212 * C492 - C28213 * C478 - C28212 * C493 + C153462 * C514) *
                C153637 * C28207) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C1898 -
           (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
            C29060 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C153601) *
              C298 +
          ((C29060 * C28207 + C29059 * C28208 + C29058 * C28209 +
            C29057 * C28210 + C29856 * C28211) *
               C153601 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C1898) *
              C299 +
          ((C28416 * C28207 + C28417 * C28208 + C28418 * C28209 +
            C28419 * C28210 + C29280 * C28211) *
               C1898 -
           ((C28212 * C29845 - C28213 * C29844 - C28212 * C29846 +
             C153462 * C29847) *
                C153637 * C28211 +
            C29856 * C28210 + C29057 * C28209 + C29058 * C28208 +
            C29059 * C28207) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
               C153637 * C28207 +
           C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
           C28418 * C28211) *
              C2104 -
          (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
           C29060 * C28208 +
           (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
               C153637 * C28207) *
              C2105 +
          ((C28212 * C498 - C28213 * C481 - C28212 * C499 + C153462 * C517) *
               C153637 * C28207 +
           C29435 * C28208 + C29436 * C28209 + C29437 * C28210 +
           C29438 * C28211) *
              C2106 -
          ((C28212 * C30184 - C28213 * C30182 - C28212 * C30185 +
            C153462 * C30188) *
               C153637 * C28211 +
           (C28212 * C30186 - C28213 * C30183 - C28212 * C30187 +
            C153462 * C30189) *
               C153637 * C28210 +
           (C28212 * C6189 - C28213 * C6181 - C28212 * C6190 +
            C153462 * C6199) *
               C153637 * C28209 +
           (C28212 * C6195 - C28213 * C6184 - C28212 * C6196 +
            C153462 * C6202) *
               C153637 * C28208 +
           (C28212 * C2121 - C28213 * C2112 - C28212 * C2122 +
            C153462 * C2127) *
               C153637 * C28207) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C47696 +
            (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
               C153625 * C1898 -
           ((C48250 + C48251 + C48252) * C153901 +
            (C48249 + C48248 + C48247) * C47697 +
            (C48246 + C48245 + C48244) * C47696) *
               C153625 * C153601) *
              C153521 * C1093 +
          (((C48253 + C48254 + C48255) * C47696 +
            (C48256 + C48257 + C48258) * C47697 +
            (C48259 + C48260 + C48261) * C153901) *
               C153625 * C153601 -
           (C48265 * C153901 + (C48255 + C48254 + C48253) * C47697 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C47696) *
               C153625 * C1898) *
              C153521 * C1094 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C47696 +
            (C48738 + C48739 + C48740) * C47697 +
            (C48741 + C48742 + C48743) * C153901) *
               C153625 * C1898 -
           ((C23996 * C2113 - C23997 * C2108 - C23996 * C2114 +
             C153885 * C2123 + C23994 * C2115 - C23995 * C2109 -
             C23994 * C2116 + C153914 * C2124 + C23992 * C2117 -
             C23993 * C2110 - C23992 * C2118 + C153933 * C2125) *
                C153901 +
            (C48743 + C48742 + C48741) * C47697 +
            (C48740 + C48739 + C48738) * C47696) *
               C153625 * C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C47696 +
            (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
               C153625 * C1898 -
           ((C48250 + C48251 + C48252) * C153901 +
            (C48249 + C48248 + C48247) * C47697 +
            (C48246 + C48245 + C48244) * C47696) *
               C153625 * C153601) *
              C298 +
          (((C25412 + C25411 + C25410) * C47696 +
            (C26061 + C26062 + C26063) * C47697 +
            (C49657 + C49658 + C49659) * C153901) *
               C153625 * C153601 -
           (C49653 * C153901 + (C25410 + C25411 + C25412) * C47697 +
            (C24327 + C24326 + C24325) * C47696) *
               C153625 * C1898) *
              C299 +
          ((C24345 * C47696 + (C25409 + C25408 + C25407) * C47697 +
            (C26064 + C26065 + C26066) * C153901) *
               C153625 * C1898 -
           ((C23996 * C6185 - C23997 * C6179 - C23996 * C6186 +
             C153885 * C6197 + C23994 * C6187 - C23995 * C6180 -
             C23994 * C6188 + C153914 * C6198 + C23992 * C6189 -
             C23993 * C6181 - C23992 * C6190 + C153933 * C6199) *
                C153901 +
            (C26066 + C26065 + C26064) * C47697 + C26806 * C47696) *
               C153625 * C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
            C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
            C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
               C47696 +
           (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
              C153625 * C2104 -
          (C50981 * C153901 + (C48249 + C48248 + C48247) * C47697 +
           (C48246 + C48245 + C48244) * C47696) *
              C153625 * C2105 +
          (C48264 * C47696 + (C48252 + C48251 + C48250) * C47697 +
           (C50988 + C50989 + C50990) * C153901) *
              C153625 * C2106 -
          ((C23996 * C10381 - C23997 * C10378 - C23996 * C10382 +
            C153885 * C10387 + C23994 * C10383 - C23995 * C10379 -
            C23994 * C10384 + C153914 * C10388 + C23992 * C10385 -
            C23993 * C10380 - C23992 * C10386 + C153933 * C10389) *
               C153901 +
           (C50990 + C50989 + C50988) * C47697 + C50981 * C47696) *
              C153625 * C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C47696 +
             C31290 * C47697 + C31291 * C153901) *
                C153936 +
            (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
               C1898 -
           (C54388 * C153898 + (C53056 + C53057 + C53058) * C153924 +
            (C31294 * C153901 + C31291 * C47697 + C31290 * C47696) * C153936) *
               C153601) *
              C153521 * C1093 +
          (((C31295 * C47696 + C31296 * C47697 + C31297 * C153901) * C153936 +
            (C53059 + C53060 + C53061) * C153924 +
            (C53062 + C53063 + C53064) * C153898) *
               C153601 -
           (C52102 * C153898 + (C52092 + C52091 + C52090) * C153924 +
            (C31296 * C153901 + C31295 * C47697 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C47696) *
                C153936) *
               C1898) *
              C153521 * C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C47696 +
             C31782 * C47697 + C31783 * C153901) *
                C153936 +
            (C52539 + C52540 + C52541) * C153924 +
            (C52542 + C52543 + C52544) * C153898) *
               C1898 -
           (((C28212 * C6185 - C28213 * C6179 - C28212 * C6186 +
              C153462 * C6197) *
                 C153901 +
             C31547 * C47697 + C31546 * C47696) *
                C153898 +
            ((C28212 * C6191 - C28213 * C6182 - C28212 * C6192 +
              C153462 * C6200) *
                 C153901 +
             C31545 * C47697 + C31544 * C47696) *
                C153924 +
            ((C28212 * C2117 - C28213 * C2110 - C28212 * C2118 +
              C153462 * C2125) *
                 C153901 +
             C31783 * C47697 + C31782 * C47696) *
                C153936) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C47696 +
             C31290 * C47697 + C31291 * C153901) *
                C153936 +
            (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
               C1898 -
           (C54388 * C153898 + (C53056 + C53057 + C53058) * C153924 +
            (C31294 * C153901 + C31291 * C47697 + C31290 * C47696) * C153936) *
               C153601) *
              C298 +
          (((C53058 + C53057 + C53056) * C153936 +
            (C53055 + C53054 + C53053) * C153924 +
            (C54385 + C54386 + C54387) * C153898) *
               C153601 -
           (C53433 * C153898 + (C52086 + C52085 + C52084) * C153924 +
            (C52083 + C52082 + C52081) * C153936) *
               C1898) *
              C299 +
          ((C52101 * C153936 + (C52089 + C52088 + C52087) * C153924 +
            (C53430 + C53431 + C53432) * C153898) *
               C1898 -
           (((C28212 * C30184 - C28213 * C30182 - C28212 * C30185 +
              C153462 * C30188) *
                 C153901 +
             C29434 * C47697 + C29049 * C47696) *
                C153898 +
            (C54387 + C54386 + C54385) * C153924 + C54388 * C153936) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C47696 +
            C31290 * C47697 + C31291 * C153901) *
               C153936 +
           (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
              C2104 -
          (C54388 * C153898 + (C53056 + C53057 + C53058) * C153924 +
           (C31294 * C153901 + C31291 * C47697 + C31290 * C47696) * C153936) *
              C2105 +
          ((C31291 * C47696 + C31294 * C47697 + C34035 * C153901) * C153936 +
           (C53652 + C53653 + C53654) * C153924 +
           (C53655 + C53656 + C53657) * C153898) *
              C2106 -
          (((C28212 * C34022 - C28213 * C34020 - C28212 * C34023 +
             C153462 * C34026) *
                C153901 +
            C32704 * C47697 + C31292 * C47696) *
               C153898 +
           ((C28212 * C34024 - C28213 * C34021 - C28212 * C34025 +
             C153462 * C34027) *
                C153901 +
            C32703 * C47697 + C31293 * C47696) *
               C153924 +
           ((C28212 * C10385 - C28213 * C10380 - C28212 * C10386 +
             C153462 * C10389) *
                C153901 +
            C34035 * C47697 + C31294 * C47696) *
               C153936) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C153921 -
           (C5591 * C153898 + (C4155 + C4156 + C4157) * C153637 * C153924 +
            (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
             C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
             C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                C153637 * C153936) *
               C153922 +
           ((C2689 * C498 - C2690 * C481 - C2689 * C499 + C2683 * C517 +
             C2691 * C500 - C2692 * C482 - C2691 * C501 + C2684 * C518 +
             C2693 * C502 - C2694 * C483 - C2693 * C503 + C153885 * C519) *
                C153637 * C153936 +
            (C4830 + C4831 + C4832) * C153637 * C153924 +
            (C4833 + C4834 + C4835) * C153637 * C153898) *
               C2414) *
              C153521 * C153840 +
          (((C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515 +
             C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
             C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513) *
                C153637 * C153936 +
            (C4158 + C4159 + C4160) * C153637 * C153924 +
            (C4161 + C4162 + C4163) * C153637 * C153898) *
               C153922 -
           (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153637 * C153936) *
               C153921 -
           ((C2693 * C3289 - C2694 * C3282 - C2693 * C3290 + C153885 * C3294 +
             C2691 * C3287 - C2692 * C3281 - C2691 * C3288 + C2684 * C3293 +
             C2689 * C3285 - C2690 * C3280 - C2689 * C3286 + C2683 * C3292) *
                C153637 * C153898 +
            (C2693 * C1332 - C2694 * C1326 - C2693 * C1333 + C153885 * C1341 +
             C2691 * C1334 - C2692 * C1327 - C2691 * C1335 + C2684 * C1342 +
             C2689 * C1336 - C2690 * C1328 - C2689 * C1337 + C2683 * C1343) *
                C153637 * C153924 +
            (C2693 * C504 - C2694 * C484 - C2693 * C505 + C153885 * C520 +
             C2691 * C502 - C2692 * C483 - C2691 * C503 + C2684 * C519 +
             C2689 * C500 - C2690 * C482 - C2689 * C501 + C2683 * C518) *
                C153637 * C153936) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C153921 -
           (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
            C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
            C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
            C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
            C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
               C153637 * C153625 * C153922 +
           (C134 * C498 - C135 * C481 - C134 * C499 + C121 * C517 +
            C136 * C500 - C137 * C482 - C136 * C501 + C122 * C518 +
            C138 * C502 - C139 * C483 - C138 * C503 + C123 * C519 +
            C140 * C504 - C141 * C484 - C140 * C505 + C124 * C520 +
            C142 * C506 - C143 * C485 - C142 * C507 + C125 * C521) *
               C153637 * C153625 * C2414) *
              C153521 * C153840 +
          ((C134 * C494 - C135 * C479 - C134 * C495 + C121 * C515 +
            C136 * C492 - C137 * C478 - C136 * C493 + C122 * C514 +
            C138 * C490 - C139 * C477 - C138 * C491 + C123 * C513 +
            C140 * C488 - C141 * C476 - C140 * C489 + C124 * C512 +
            C142 * C508 - C143 * C486 - C142 * C509 + C125 * C522) *
               C153637 * C153625 * C153922 -
           (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
            C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
            C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
            C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
            C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
               C153637 * C153625 * C153921 -
           (C142 * C510 - C143 * C487 - C142 * C511 + C125 * C523 +
            C140 * C506 - C141 * C485 - C140 * C507 + C124 * C521 +
            C138 * C504 - C139 * C484 - C138 * C505 + C123 * C520 +
            C136 * C502 - C137 * C483 - C136 * C503 + C122 * C519 +
            C134 * C500 - C135 * C482 - C134 * C501 + C121 * C518) *
               C153637 * C153625 * C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153921 -
           (C26810 * C153898 + (C25410 + C25411 + C25412) * C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C153922 +
           ((C23992 * C498 - C23993 * C481 - C23992 * C499 + C153933 * C517 +
             C23994 * C500 - C23995 * C482 - C23994 * C501 + C153914 * C518 +
             C23996 * C502 - C23997 * C483 - C23996 * C503 + C153885 * C519) *
                C153637 * C23989 +
            (C26061 + C26062 + C26063) * C153637 * C23990 +
            (C26064 + C26065 + C26066) * C153637 * C153898) *
               C2414) *
              C153521 * C153840 +
          (((C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515 +
             C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
             C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513) *
                C153637 * C23989 +
            (C25413 + C25414 + C25415) * C153637 * C23990 +
            (C25416 + C25417 + C25418) * C153637 * C153898) *
               C153922 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C153921 -
           ((C23996 * C3289 - C23997 * C3282 - C23996 * C3290 +
             C153885 * C3294 + C23994 * C3287 - C23995 * C3281 -
             C23994 * C3288 + C153914 * C3293 + C23992 * C3285 -
             C23993 * C3280 - C23992 * C3286 + C153933 * C3292) *
                C153637 * C153898 +
            (C23996 * C1332 - C23997 * C1326 - C23996 * C1333 +
             C153885 * C1341 + C23994 * C1334 - C23995 * C1327 -
             C23994 * C1335 + C153914 * C1342 + C23992 * C1336 -
             C23993 * C1328 - C23992 * C1337 + C153933 * C1343) *
                C153637 * C23990 +
            (C23996 * C504 - C23997 * C484 - C23996 * C505 + C153885 * C520 +
             C23994 * C502 - C23995 * C483 - C23994 * C503 + C153914 * C519 +
             C23992 * C500 - C23993 * C482 - C23992 * C501 + C153933 * C518) *
                C153637 * C23989) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153921 -
           (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
            C29060 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C153922 +
           ((C28212 * C498 - C28213 * C481 - C28212 * C499 + C153462 * C517) *
                C153637 * C28207 +
            C29435 * C28208 + C29436 * C28209 + C29437 * C28210 +
            C29438 * C28211) *
               C2414) *
              C153521 * C153840 +
          (((C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                C153637 * C28207 +
            C29061 * C28208 + C29062 * C28209 + C29063 * C28210 +
            C29064 * C28211) *
               C153922 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C153921 -
           ((C28212 * C28550 - C28213 * C28547 - C28212 * C28551 +
             C153462 * C28553) *
                C153637 * C28211 +
            (C28212 * C4786 - C28213 * C4782 - C28212 * C4787 +
             C153462 * C4791) *
                C153637 * C28210 +
            (C28212 * C3285 - C28213 * C3280 - C28212 * C3286 +
             C153462 * C3292) *
                C153637 * C28209 +
            (C28212 * C1336 - C28213 * C1328 - C28212 * C1337 +
             C153462 * C1343) *
                C153637 * C28208 +
            (C28212 * C500 - C28213 * C482 - C28212 * C501 + C153462 * C518) *
                C153637 * C28207) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C47696 +
            (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
               C153625 * C153921 -
           (C50981 * C153901 + (C48249 + C48248 + C48247) * C47697 +
            (C48246 + C48245 + C48244) * C47696) *
               C153625 * C153922 +
           (C48264 * C47696 + (C48252 + C48251 + C48250) * C47697 +
            (C50988 + C50989 + C50990) * C153901) *
               C153625 * C2414) *
              C153521 * C153840 +
          (((C48253 + C48254 + C48255) * C47696 +
            (C48256 + C48257 + C48258) * C47697 +
            (C48259 + C48260 + C48261) * C153901) *
               C153625 * C153922 -
           (C48265 * C153901 + (C48255 + C48254 + C48253) * C47697 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C47696) *
               C153625 * C153921 -
           ((C23996 * C7524 - C23997 * C7517 - C23996 * C7525 +
             C153885 * C7529 + C23994 * C7522 - C23995 * C7516 -
             C23994 * C7523 + C153914 * C7528 + C23992 * C7520 -
             C23993 * C7515 - C23992 * C7521 + C153933 * C7527) *
                C153901 +
            (C48261 + C48260 + C48259) * C47697 + C48265 * C47696) *
               C153625 * C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C47696 +
             C31290 * C47697 + C31291 * C153901) *
                C153936 +
            (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
               C153921 -
           (C54388 * C153898 + (C53056 + C53057 + C53058) * C153924 +
            (C31294 * C153901 + C31291 * C47697 + C31290 * C47696) * C153936) *
               C153922 +
           ((C31291 * C47696 + C31294 * C47697 + C34035 * C153901) * C153936 +
            (C53652 + C53653 + C53654) * C153924 +
            (C53655 + C53656 + C53657) * C153898) *
               C2414) *
              C153521 * C153840 +
          (((C31295 * C47696 + C31296 * C47697 + C31297 * C153901) * C153936 +
            (C53059 + C53060 + C53061) * C153924 +
            (C53062 + C53063 + C53064) * C153898) *
               C153922 -
           (C52102 * C153898 + (C52092 + C52091 + C52090) * C153924 +
            (C31296 * C153901 + C31295 * C47697 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C47696) *
                C153936) *
               C153921 -
           (((C28212 * C31225 - C28213 * C31222 - C28212 * C31226 +
              C153462 * C31228) *
                 C153901 +
             C31299 * C47697 + C30998 * C47696) *
                C153898 +
            ((C28212 * C9040 - C28213 * C9036 - C28212 * C9041 +
              C153462 * C9045) *
                 C153901 +
             C31298 * C47697 + C30997 * C47696) *
                C153924 +
            ((C28212 * C7520 - C28213 * C7515 - C28212 * C7521 +
              C153462 * C7527) *
                 C153901 +
             C31297 * C47697 + C31296 * C47696) *
                C153936) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C1898 -
           (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
            C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
            C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
            C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
            C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
               C153637 * C153625 * C153601) *
              C298 +
          ((C134 * C951 - C135 * C945 - C134 * C952 + C121 * C963 +
            C136 * C953 - C137 * C946 - C136 * C954 + C122 * C964 +
            C138 * C955 - C139 * C947 - C138 * C956 + C123 * C965 +
            C140 * C957 - C141 * C948 - C140 * C958 + C124 * C966 +
            C142 * C959 - C143 * C949 - C142 * C960 + C125 * C967) *
               C153637 * C153625 * C153601 -
           (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
            C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
            C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
            C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
            C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
               C153637 * C153625 * C1898) *
              C299 +
          ((C134 * C325 - C135 * C308 - C134 * C326 + C121 * C344 +
            C136 * C327 - C137 * C309 - C136 * C328 + C122 * C345 +
            C138 * C329 - C139 * C310 - C138 * C330 + C123 * C346 +
            C140 * C331 - C141 * C311 - C140 * C332 + C124 * C347 +
            C142 * C333 - C143 * C312 - C142 * C334 + C125 * C348) *
               C153637 * C153625 * C1898 -
           (C142 * C1761 - C143 * C1756 - C142 * C1762 + C125 * C1771 +
            C140 * C1763 - C141 * C1757 - C140 * C1764 + C124 * C1772 +
            C138 * C1765 - C139 * C1758 - C138 * C1766 + C123 * C1773 +
            C136 * C1767 - C137 * C1759 - C136 * C1768 + C122 * C1774 +
            C134 * C1769 - C135 * C1760 - C134 * C1770 + C121 * C1775) *
               C153637 * C153625 * C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C1898 -
           (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
            C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
            C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
            C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
            C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
               C153637 * C153625 * C153601) *
              C153521 * C1093 +
          ((C134 * C494 - C135 * C479 - C134 * C495 + C121 * C515 +
            C136 * C492 - C137 * C478 - C136 * C493 + C122 * C514 +
            C138 * C490 - C139 * C477 - C138 * C491 + C123 * C513 +
            C140 * C488 - C141 * C476 - C140 * C489 + C124 * C512 +
            C142 * C508 - C143 * C486 - C142 * C509 + C125 * C522) *
               C153637 * C153625 * C153601 -
           (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
            C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
            C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
            C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
            C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
               C153637 * C153625 * C1898) *
              C153521 * C1094 +
          ((C134 * C156 - C135 * C146 - C134 * C157 + C121 * C170 +
            C136 * C158 - C137 * C147 - C136 * C159 + C122 * C171 +
            C138 * C160 - C139 * C148 - C138 * C161 + C123 * C172 +
            C140 * C162 - C141 * C149 - C140 * C163 + C124 * C173 +
            C142 * C164 - C143 * C150 - C142 * C165 + C125 * C174) *
               C153637 * C153625 * C1898 -
           (C142 * C780 - C143 * C779 - C142 * C781 + C125 * C782 +
            C140 * C508 - C141 * C486 - C140 * C509 + C124 * C522 +
            C138 * C488 - C139 * C476 - C138 * C489 + C123 * C512 +
            C136 * C490 - C137 * C477 - C136 * C491 + C122 * C513 +
            C134 * C492 - C135 * C478 - C134 * C493 + C121 * C514) *
               C153637 * C153625 * C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C1898 -
           (C5591 * C153898 + (C4155 + C4156 + C4157) * C153637 * C153924 +
            (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
             C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
             C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                C153637 * C153936) *
               C153601) *
              C153521 * C1093 +
          (((C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515 +
             C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
             C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513) *
                C153637 * C153936 +
            (C4158 + C4159 + C4160) * C153637 * C153924 +
            (C4161 + C4162 + C4163) * C153637 * C153898) *
               C153601 -
           (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153637 * C153936) *
               C1898) *
              C153521 * C1094 +
          (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
             C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
             C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                C153637 * C153936 +
            (C3550 + C3551 + C3552) * C153637 * C153924 +
            (C3553 + C3554 + C3555) * C153637 * C153898) *
               C1898 -
           ((C2693 * C1761 - C2694 * C1756 - C2693 * C1762 + C153885 * C1771 +
             C2691 * C1763 - C2692 * C1757 - C2691 * C1764 + C2684 * C1772 +
             C2689 * C1765 - C2690 * C1758 - C2689 * C1766 + C2683 * C1773) *
                C153637 * C153898 +
            (C2693 * C959 - C2694 * C949 - C2693 * C960 + C153885 * C967 +
             C2691 * C957 - C2692 * C948 - C2691 * C958 + C2684 * C966 +
             C2689 * C955 - C2690 * C947 - C2689 * C956 + C2683 * C965) *
                C153637 * C153924 +
            (C2693 * C488 - C2694 * C476 - C2693 * C489 + C153885 * C512 +
             C2691 * C490 - C2692 * C477 - C2691 * C491 + C2684 * C513 +
             C2689 * C492 - C2690 * C478 - C2689 * C493 + C2683 * C514) *
                C153637 * C153936) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C1898 -
           (C5591 * C153898 + (C4155 + C4156 + C4157) * C153637 * C153924 +
            (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
             C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
             C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                C153637 * C153936) *
               C153601) *
              C298 +
          (((C4157 + C4156 + C4155) * C153637 * C153936 +
            (C4154 + C4153 + C4152) * C153637 * C153924 +
            (C5595 + C5596 + C5597) * C153637 * C153898) *
               C153601 -
           (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
            (C3040 + C3039 + C3038) * C153637 * C153936) *
               C1898) *
              C299 +
          ((C3060 * C153936 + (C3046 + C3045 + C3044) * C153637 * C153924 +
            (C4561 + C4562 + C4563) * C153637 * C153898) *
               C1898 -
           ((C2693 * C5564 - C2694 * C5561 - C2693 * C5565 + C153885 * C5570 +
             C2691 * C5566 - C2692 * C5562 - C2691 * C5567 + C2684 * C5571 +
             C2689 * C5568 - C2690 * C5563 - C2689 * C5569 + C2683 * C5572) *
                C153637 * C153898 +
            (C5597 + C5596 + C5595) * C153637 * C153924 + C5591 * C153936) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C1898 -
           (C26810 * C153898 + (C25410 + C25411 + C25412) * C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C153601) *
              C153521 * C1093 +
          (((C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515 +
             C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
             C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513) *
                C153637 * C23989 +
            (C25413 + C25414 + C25415) * C153637 * C23990 +
            (C25416 + C25417 + C25418) * C153637 * C153898) *
               C153601 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C1898) *
              C153521 * C1094 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C153637 * C23989 +
            (C24821 + C24822 + C24823) * C153637 * C23990 +
            (C24824 + C24825 + C24826) * C153637 * C153898) *
               C1898 -
           ((C23996 * C1761 - C23997 * C1756 - C23996 * C1762 +
             C153885 * C1771 + C23994 * C1763 - C23995 * C1757 -
             C23994 * C1764 + C153914 * C1772 + C23992 * C1765 -
             C23993 * C1758 - C23992 * C1766 + C153933 * C1773) *
                C153637 * C153898 +
            (C23996 * C959 - C23997 * C949 - C23996 * C960 + C153885 * C967 +
             C23994 * C957 - C23995 * C948 - C23994 * C958 + C153914 * C966 +
             C23992 * C955 - C23993 * C947 - C23992 * C956 + C153933 * C965) *
                C153637 * C23990 +
            (C23996 * C488 - C23997 * C476 - C23996 * C489 + C153885 * C512 +
             C23994 * C490 - C23995 * C477 - C23994 * C491 + C153914 * C513 +
             C23992 * C492 - C23993 * C478 - C23992 * C493 + C153933 * C514) *
                C153637 * C23989) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C1898 -
           (C26810 * C153898 + (C25410 + C25411 + C25412) * C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C153601) *
              C298 +
          (((C25412 + C25411 + C25410) * C153637 * C23989 +
            (C25409 + C25408 + C25407) * C153637 * C23990 +
            (C26814 + C26815 + C26816) * C153637 * C153898) *
               C153601 -
           (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C1898) *
              C299 +
          ((C24347 * C23989 + (C24333 + C24332 + C24331) * C153637 * C23990 +
            (C25804 + C25805 + C25806) * C153637 * C153898) *
               C1898 -
           ((C23996 * C5564 - C23997 * C5561 - C23996 * C5565 +
             C153885 * C5570 + C23994 * C5566 - C23995 * C5562 -
             C23994 * C5567 + C153914 * C5571 + C23992 * C5568 -
             C23993 * C5563 - C23992 * C5569 + C153933 * C5572) *
                C153637 * C153898 +
            (C26816 + C26815 + C26814) * C153637 * C23990 + C26810 * C23989) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C1898 -
           (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
            C29060 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C153601) *
              C153521 * C1093 +
          (((C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                C153637 * C28207 +
            C29061 * C28208 + C29062 * C28209 + C29063 * C28210 +
            C29064 * C28211) *
               C153601 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C1898) *
              C153521 * C1094 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C153637 * C28207 +
            C28705 * C28208 + C28706 * C28209 + C28707 * C28210 +
            C28708 * C28211) *
               C1898 -
           ((C28212 * C5564 - C28213 * C5561 - C28212 * C5565 +
             C153462 * C5570) *
                C153637 * C28211 +
            (C28212 * C4071 - C28213 * C4065 - C28212 * C4072 +
             C153462 * C4077) *
                C153637 * C28210 +
            (C28212 * C1765 - C28213 * C1758 - C28212 * C1766 +
             C153462 * C1773) *
                C153637 * C28209 +
            (C28212 * C955 - C28213 * C947 - C28212 * C956 + C153462 * C965) *
                C153637 * C28208 +
            (C28212 * C492 - C28213 * C478 - C28212 * C493 + C153462 * C514) *
                C153637 * C28207) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C1898 -
           (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
            C29060 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C153601) *
              C298 +
          ((C29060 * C28207 + C29059 * C28208 + C29058 * C28209 +
            C29057 * C28210 + C29856 * C28211) *
               C153601 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C1898) *
              C299 +
          ((C28416 * C28207 + C28417 * C28208 + C28418 * C28209 +
            C28419 * C28210 + C29280 * C28211) *
               C1898 -
           ((C28212 * C29845 - C28213 * C29844 - C28212 * C29846 +
             C153462 * C29847) *
                C153637 * C28211 +
            C29856 * C28210 + C29057 * C28209 + C29058 * C28208 +
            C29059 * C28207) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C47696 +
            (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
               C153625 * C1898 -
           ((C48250 + C48251 + C48252) * C153901 +
            (C48249 + C48248 + C48247) * C47697 +
            (C48246 + C48245 + C48244) * C47696) *
               C153625 * C153601) *
              C153521 * C1093 +
          (((C48253 + C48254 + C48255) * C47696 +
            (C48256 + C48257 + C48258) * C47697 +
            (C48259 + C48260 + C48261) * C153901) *
               C153625 * C153601 -
           (C48265 * C153901 + (C48255 + C48254 + C48253) * C47697 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C47696) *
               C153625 * C1898) *
              C153521 * C1094 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C47696 +
            (C48738 + C48739 + C48740) * C47697 +
            (C48741 + C48742 + C48743) * C153901) *
               C153625 * C1898 -
           ((C23996 * C2113 - C23997 * C2108 - C23996 * C2114 +
             C153885 * C2123 + C23994 * C2115 - C23995 * C2109 -
             C23994 * C2116 + C153914 * C2124 + C23992 * C2117 -
             C23993 * C2110 - C23992 * C2118 + C153933 * C2125) *
                C153901 +
            (C48743 + C48742 + C48741) * C47697 +
            (C48740 + C48739 + C48738) * C47696) *
               C153625 * C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C47696 +
            (C48244 + C48245 + C48246) * C47697 + C48264 * C153901) *
               C153625 * C1898 -
           ((C48250 + C48251 + C48252) * C153901 +
            (C48249 + C48248 + C48247) * C47697 +
            (C48246 + C48245 + C48244) * C47696) *
               C153625 * C153601) *
              C298 +
          (((C25412 + C25411 + C25410) * C47696 +
            (C26061 + C26062 + C26063) * C47697 +
            (C49657 + C49658 + C49659) * C153901) *
               C153625 * C153601 -
           (C49653 * C153901 + (C25410 + C25411 + C25412) * C47697 +
            (C24327 + C24326 + C24325) * C47696) *
               C153625 * C1898) *
              C299 +
          ((C24345 * C47696 + (C25409 + C25408 + C25407) * C47697 +
            (C26064 + C26065 + C26066) * C153901) *
               C153625 * C1898 -
           ((C23996 * C6185 - C23997 * C6179 - C23996 * C6186 +
             C153885 * C6197 + C23994 * C6187 - C23995 * C6180 -
             C23994 * C6188 + C153914 * C6198 + C23992 * C6189 -
             C23993 * C6181 - C23992 * C6190 + C153933 * C6199) *
                C153901 +
            (C26066 + C26065 + C26064) * C47697 + C26806 * C47696) *
               C153625 * C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C47696 +
             C31290 * C47697 + C31291 * C153901) *
                C153936 +
            (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
               C1898 -
           (C54388 * C153898 + (C53056 + C53057 + C53058) * C153924 +
            (C31294 * C153901 + C31291 * C47697 + C31290 * C47696) * C153936) *
               C153601) *
              C153521 * C1093 +
          (((C31295 * C47696 + C31296 * C47697 + C31297 * C153901) * C153936 +
            (C53059 + C53060 + C53061) * C153924 +
            (C53062 + C53063 + C53064) * C153898) *
               C153601 -
           (C52102 * C153898 + (C52092 + C52091 + C52090) * C153924 +
            (C31296 * C153901 + C31295 * C47697 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C47696) *
                C153936) *
               C1898) *
              C153521 * C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C47696 +
             C31782 * C47697 + C31783 * C153901) *
                C153936 +
            (C52539 + C52540 + C52541) * C153924 +
            (C52542 + C52543 + C52544) * C153898) *
               C1898 -
           (((C28212 * C6185 - C28213 * C6179 - C28212 * C6186 +
              C153462 * C6197) *
                 C153901 +
             C31547 * C47697 + C31546 * C47696) *
                C153898 +
            ((C28212 * C6191 - C28213 * C6182 - C28212 * C6192 +
              C153462 * C6200) *
                 C153901 +
             C31545 * C47697 + C31544 * C47696) *
                C153924 +
            ((C28212 * C2117 - C28213 * C2110 - C28212 * C2118 +
              C153462 * C2125) *
                 C153901 +
             C31783 * C47697 + C31782 * C47696) *
                C153936) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C47696 +
             C31290 * C47697 + C31291 * C153901) *
                C153936 +
            (C52081 + C52082 + C52083) * C153924 + C52101 * C153898) *
               C1898 -
           (C54388 * C153898 + (C53056 + C53057 + C53058) * C153924 +
            (C31294 * C153901 + C31291 * C47697 + C31290 * C47696) * C153936) *
               C153601) *
              C298 +
          (((C53058 + C53057 + C53056) * C153936 +
            (C53055 + C53054 + C53053) * C153924 +
            (C54385 + C54386 + C54387) * C153898) *
               C153601 -
           (C53433 * C153898 + (C52086 + C52085 + C52084) * C153924 +
            (C52083 + C52082 + C52081) * C153936) *
               C1898) *
              C299 +
          ((C52101 * C153936 + (C52089 + C52088 + C52087) * C153924 +
            (C53430 + C53431 + C53432) * C153898) *
               C1898 -
           (((C28212 * C30184 - C28213 * C30182 - C28212 * C30185 +
              C153462 * C30188) *
                 C153901 +
             C29434 * C47697 + C29049 * C47696) *
                C153898 +
            (C54387 + C54386 + C54385) * C153924 + C54388 * C153936) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[225] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
              C153467 * C168 + C152106 * C154 - C152145 * C145 -
              C152106 * C155 + C153475 * C169 + C152156 * C156 - C83607 * C146 -
              C152156 * C157 + C83598 * C170) *
                 C98536 +
             (C88599 + C88600 + C88601) * C153724) *
                C153863 +
            ((C83935 + C83936 + C83937) * C98536 + C89626 * C153724) *
                C153684) *
               C153537 * C153848 -
           ((C86416 * C153724 + (C83940 + C83939 + C83938) * C98536) * C153684 +
            (C89627 * C153724 + (C83937 + C83936 + C83935) * C98536) *
                C153863) *
               C153537 * C153573) *
              C153917 +
          ((((C83944 + C83945 + C83946) * C98536 + C89628 * C153724) * C153863 +
            ((C83947 + C83948 + C83949) * C98536 +
             (C85026 + C85027 + C85028) * C153724) *
                C153684) *
               C153537 * C153573 -
           ((C89629 * C153724 + (C83946 + C83945 + C83944) * C98536) * C153684 +
            ((C88607 + C88606 + C88605) * C153724 +
             (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
              C152106 * C156 - C152145 * C146 - C152106 * C157 +
              C153475 * C170 + C152110 * C154 - C152150 * C145 -
              C152110 * C155 + C153467 * C169) *
                 C98536) *
                C153863) *
               C153537 * C153848) *
              C153918 +
          ((((C152110 * C156 - C152150 * C146 - C152110 * C157 +
              C153467 * C170 + C152106 * C158 - C152145 * C147 -
              C152106 * C159 + C153475 * C171 + C152156 * C160 - C83607 * C148 -
              C152156 * C161 + C83598 * C172) *
                 C98536 +
             (C89233 + C89234 + C89235) * C153724) *
                C153863 +
            ((C84431 + C84432 + C84433) * C98536 +
             (C88922 + C88923 + C88924) * C153724) *
                C153684) *
               C153537 * C153848 -
           (((C152156 * C1761 - C83607 * C1756 - C152156 * C1762 +
              C83598 * C1771 + C152106 * C1763 - C152145 * C1757 -
              C152106 * C1764 + C153475 * C1772 + C152110 * C1765 -
              C152150 * C1758 - C152110 * C1766 + C153467 * C1773) *
                 C153724 +
             (C84436 + C84435 + C84434) * C98536) *
                C153684 +
            ((C88924 + C88923 + C88922) * C153724 +
             (C84433 + C84432 + C84431) * C98536) *
                C153863) *
               C153537 * C153573) *
              C650)) /
        (p * q * std::sqrt(p + q));
    d2ee[226] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
                        C153467 * C168 + C152106 * C154 - C152145 * C145 -
                        C152106 * C155 + C153475 * C169 + C152156 * C156 -
                        C83607 * C146 - C152156 * C157 + C83598 * C170) *
                           C98536 +
                       (C88599 + C88600 + C88601) * C153724) *
                          C153863 +
                      ((C83935 + C83936 + C83937) * C98536 + C89626 * C153724) *
                          C153684) *
                         C153849 -
                     ((C90418 * C153724 + C89627 * C98536) * C153684 +
                      ((C88602 + C88603 + C88604) * C153724 +
                       (C88601 + C88600 + C88599) * C98536) *
                          C153863) *
                         C153601) *
                        C153848 +
                    (((C89626 * C98536 + C90419 * C153724) * C153863 +
                      (C91396 * C98536 + (C85674 + C85675 + C85676) * C153724) *
                          C153684) *
                         C153601 -
                     ((C86416 * C153724 + (C83940 + C83939 + C83938) * C98536) *
                          C153684 +
                      (C89627 * C153724 + (C83937 + C83936 + C83935) * C98536) *
                          C153863) *
                         C153849) *
                        C153573) *
                       C301 +
                   (((((C88605 + C88606 + C88607) * C98536 +
                       (C88608 + C88609 + C88610) * C153724) *
                          C153863 +
                      (C89628 * C98536 + (C88611 + C88612 + C88613) * C153724) *
                          C153684) *
                         C153601 -
                     ((C89629 * C153724 + (C83946 + C83945 + C83944) * C98536) *
                          C153684 +
                      ((C88607 + C88606 + C88605) * C153724 +
                       (C152156 * C158 - C83607 * C147 - C152156 * C159 +
                        C83598 * C171 + C152106 * C156 - C152145 * C146 -
                        C152106 * C157 + C153475 * C170 + C152110 * C154 -
                        C152150 * C145 - C152110 * C155 + C153467 * C169) *
                           C98536) *
                          C153863) *
                         C153849) *
                        C153848 +
                    ((((C83944 + C83945 + C83946) * C98536 + C89628 * C153724) *
                          C153863 +
                      ((C83947 + C83948 + C83949) * C98536 +
                       (C85026 + C85027 + C85028) * C153724) *
                          C153684) *
                         C153849 -
                     (((C152156 * C3289 - C83607 * C3282 - C152156 * C3290 +
                        C83598 * C3294 + C152106 * C3287 - C152145 * C3281 -
                        C152106 * C3288 + C153475 * C3293 + C152110 * C3285 -
                        C152150 * C3280 - C152110 * C3286 + C153467 * C3292) *
                           C153724 +
                       (C85028 + C85027 + C85026) * C98536) *
                          C153684 +
                      ((C88613 + C88612 + C88611) * C153724 + C89629 * C98536) *
                          C153863) *
                         C153601) *
                        C153573) *
                       C153508)) /
                 (p * q * std::sqrt(p + q));
    d2ee[227] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
              C153467 * C168 + C152106 * C154 - C152145 * C145 -
              C152106 * C155 + C153475 * C169 + C152156 * C156 - C83607 * C146 -
              C152156 * C157 + C83598 * C170) *
                 C98536 +
             (C88599 + C88600 + C88601) * C153724) *
                C153863 +
            ((C83935 + C83936 + C83937) * C98536 + C89626 * C153724) *
                C153684) *
               C153537 * C298 -
           ((C86416 * C153724 + (C83940 + C83939 + C83938) * C98536) * C153684 +
            (C89627 * C153724 + (C83937 + C83936 + C83935) * C98536) *
                C153863) *
               C153537 * C299 +
           ((C83955 * C98536 + C91396 * C153724) * C153863 +
            ((C83943 + C83942 + C83941) * C98536 +
             (C86424 + C86425 + C86426) * C153724) *
                C153684) *
               C153537 * C300) *
              C301 +
          ((((C83944 + C83945 + C83946) * C98536 + C89628 * C153724) * C153863 +
            ((C83947 + C83948 + C83949) * C98536 +
             (C85026 + C85027 + C85028) * C153724) *
                C153684) *
               C153537 * C299 -
           ((C89629 * C153724 + (C83946 + C83945 + C83944) * C98536) * C153684 +
            ((C88607 + C88606 + C88605) * C153724 +
             (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
              C152106 * C156 - C152145 * C146 - C152106 * C157 +
              C153475 * C170 + C152110 * C154 - C152150 * C145 -
              C152110 * C155 + C153467 * C169) *
                 C98536) *
                C153863) *
               C153537 * C298 -
           (((C152156 * C4073 - C83607 * C4066 - C152156 * C4074 +
              C83598 * C4078 + C152106 * C4071 - C152145 * C4065 -
              C152106 * C4072 + C153475 * C4077 + C152110 * C4069 -
              C152150 * C4064 - C152110 * C4070 + C153467 * C4076) *
                 C153724 +
             (C83952 + C83951 + C83950) * C98536) *
                C153684 +
            ((C85028 + C85027 + C85026) * C153724 + C83956 * C98536) *
                C153863) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C98536 +
            (C88599 + C88600 + C88601) * C153724) *
               C153863 +
           ((C83935 + C83936 + C83937) * C98536 + C89626 * C153724) * C153684) *
              C153537 * C153521 * C130 -
          ((C89629 * C153724 + (C83946 + C83945 + C83944) * C98536) * C153684 +
           ((C88607 + C88606 + C88605) * C153724 +
            (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
             C152106 * C156 - C152145 * C146 - C152106 * C157 + C153475 * C170 +
             C152110 * C154 - C152150 * C145 - C152110 * C155 +
             C153467 * C169) *
                C98536) *
               C153863) *
              C153537 * C153521 * C131 +
          (((C152110 * C156 - C152150 * C146 - C152110 * C157 + C153467 * C170 +
             C152106 * C158 - C152145 * C147 - C152106 * C159 + C153475 * C171 +
             C152156 * C160 - C83607 * C148 - C152156 * C161 + C83598 * C172) *
                C98536 +
            (C89233 + C89234 + C89235) * C153724) *
               C153863 +
           ((C84431 + C84432 + C84433) * C98536 +
            (C88922 + C88923 + C88924) * C153724) *
               C153684) *
              C153537 * C153521 * C132 -
          (((C152156 * C961 - C83607 * C950 - C152156 * C962 + C83598 * C968 +
             C152106 * C959 - C152145 * C949 - C152106 * C960 + C153475 * C967 +
             C152110 * C957 - C152150 * C948 - C152110 * C958 +
             C153467 * C966) *
                C153724 +
            (C152156 * C335 - C83607 * C313 - C152156 * C336 + C83598 * C349 +
             C152106 * C315 - C152145 * C303 - C152106 * C316 + C153475 * C339 +
             C152110 * C317 - C152150 * C304 - C152110 * C318 +
             C153467 * C340) *
                C98536) *
               C153684 +
           ((C152156 * C508 - C83607 * C486 - C152156 * C509 + C83598 * C522 +
             C152106 * C488 - C152145 * C476 - C152106 * C489 + C153475 * C512 +
             C152110 * C490 - C152150 * C477 - C152110 * C491 +
             C153467 * C513) *
                C153724 +
            (C152156 * C162 - C83607 * C149 - C152156 * C163 + C83598 * C173 +
             C152106 * C160 - C152145 * C148 - C152106 * C161 + C153475 * C172 +
             C152110 * C158 - C152150 * C147 - C152110 * C159 +
             C153467 * C171) *
                C98536) *
               C153863) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
              C153467 * C168 + C152106 * C154 - C152145 * C145 -
              C152106 * C155 + C153475 * C169 + C152156 * C156 - C83607 * C146 -
              C152156 * C157 + C83598 * C170) *
                 C98536 +
             (C88599 + C88600 + C88601) * C153724) *
                C153863 +
            ((C83935 + C83936 + C83937) * C98536 + C89626 * C153724) *
                C153684) *
               C473 -
           ((C90418 * C153724 + C89627 * C98536) * C153684 +
            ((C88602 + C88603 + C88604) * C153724 +
             (C88601 + C88600 + C88599) * C98536) *
                C153863) *
               C474 +
           (((C88604 + C88603 + C88602) * C98536 +
             (C92189 + C92190 + C92191) * C153724) *
                C153863 +
            (C90419 * C98536 + (C90426 + C90427 + C90428) * C153724) *
                C153684) *
               C475) *
              C153521 * C301 +
          ((((C88605 + C88606 + C88607) * C98536 +
             (C88608 + C88609 + C88610) * C153724) *
                C153863 +
            (C89628 * C98536 + (C88611 + C88612 + C88613) * C153724) *
                C153684) *
               C474 -
           ((C89629 * C153724 + (C83946 + C83945 + C83944) * C98536) * C153684 +
            ((C88607 + C88606 + C88605) * C153724 +
             (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
              C152106 * C156 - C152145 * C146 - C152106 * C157 +
              C153475 * C170 + C152110 * C154 - C152150 * C145 -
              C152110 * C155 + C153467 * C169) *
                 C98536) *
                C153863) *
               C473 -
           (((C152156 * C8429 - C83607 * C8428 - C152156 * C8430 +
              C83598 * C8431 + C152106 * C6191 - C152145 * C6182 -
              C152106 * C6192 + C153475 * C6200 + C152110 * C6193 -
              C152150 * C6183 - C152110 * C6194 + C153467 * C6201) *
                 C153724 +
             (C88613 + C88612 + C88611) * C98536) *
                C153684 +
            ((C152156 * C2115 - C83607 * C2109 - C152156 * C2116 +
              C83598 * C2124 + C152106 * C2117 - C152145 * C2110 -
              C152106 * C2118 + C153475 * C2125 + C152110 * C2119 -
              C152150 * C2111 - C152110 * C2120 + C153467 * C2126) *
                 C153724 +
             (C88610 + C88609 + C88608) * C98536) *
                C153863) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[228] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
              C153467 * C168 + C152106 * C154 - C152145 * C145 -
              C152106 * C155 + C153475 * C169 + C152156 * C156 - C83607 * C146 -
              C152156 * C157 + C83598 * C170) *
                 C98536 +
             (C88599 + C88600 + C88601) * C153724) *
                C153863 +
            ((C83935 + C83936 + C83937) * C98536 + C89626 * C153724) *
                C153684) *
               C153849 -
           ((C90418 * C153724 + C89627 * C98536) * C153684 +
            ((C88602 + C88603 + C88604) * C153724 +
             (C88601 + C88600 + C88599) * C98536) *
                C153863) *
               C153601) *
              C153521 * C153917 +
          ((((C88605 + C88606 + C88607) * C98536 +
             (C88608 + C88609 + C88610) * C153724) *
                C153863 +
            (C89628 * C98536 + (C88611 + C88612 + C88613) * C153724) *
                C153684) *
               C153601 -
           ((C89629 * C153724 + (C83946 + C83945 + C83944) * C98536) * C153684 +
            ((C88607 + C88606 + C88605) * C153724 +
             (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
              C152106 * C156 - C152145 * C146 - C152106 * C157 +
              C153475 * C170 + C152110 * C154 - C152150 * C145 -
              C152110 * C155 + C153467 * C169) *
                 C98536) *
                C153863) *
               C153849) *
              C153521 * C153918 +
          ((((C152110 * C156 - C152150 * C146 - C152110 * C157 +
              C153467 * C170 + C152106 * C158 - C152145 * C147 -
              C152106 * C159 + C153475 * C171 + C152156 * C160 - C83607 * C148 -
              C152156 * C161 + C83598 * C172) *
                 C98536 +
             (C89233 + C89234 + C89235) * C153724) *
                C153863 +
            ((C84431 + C84432 + C84433) * C98536 +
             (C88922 + C88923 + C88924) * C153724) *
                C153684) *
               C153849 -
           (((C152156 * C1330 - C83607 * C1325 - C152156 * C1331 +
              C83598 * C1340 + C152106 * C1332 - C152145 * C1326 -
              C152106 * C1333 + C153475 * C1341 + C152110 * C1334 -
              C152150 * C1327 - C152110 * C1335 + C153467 * C1342) *
                 C153724 +
             (C88924 + C88923 + C88922) * C98536) *
                C153684 +
            ((C152156 * C506 - C83607 * C485 - C152156 * C507 + C83598 * C521 +
              C152106 * C504 - C152145 * C484 - C152106 * C505 +
              C153475 * C520 + C152110 * C502 - C152150 * C483 -
              C152110 * C503 + C153467 * C519) *
                 C153724 +
             (C89235 + C89234 + C89233) * C98536) *
                C153863) *
               C153601) *
              C153521 * C650)) /
        (p * q * std::sqrt(p + q));
    d2ee[229] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C98536 +
            (C88599 + C88600 + C88601) * C153724) *
               C153863 +
           ((C83935 + C83936 + C83937) * C98536 + C89626 * C153724) * C153684) *
              C153537 * C153521 * C130 -
          ((C89629 * C153724 + (C83946 + C83945 + C83944) * C98536) * C153684 +
           ((C88607 + C88606 + C88605) * C153724 +
            (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
             C152106 * C156 - C152145 * C146 - C152106 * C157 + C153475 * C170 +
             C152110 * C154 - C152150 * C145 - C152110 * C155 +
             C153467 * C169) *
                C98536) *
               C153863) *
              C153537 * C153521 * C131 +
          (((C152110 * C156 - C152150 * C146 - C152110 * C157 + C153467 * C170 +
             C152106 * C158 - C152145 * C147 - C152106 * C159 + C153475 * C171 +
             C152156 * C160 - C83607 * C148 - C152156 * C161 + C83598 * C172) *
                C98536 +
            (C89233 + C89234 + C89235) * C153724) *
               C153863 +
           ((C84431 + C84432 + C84433) * C98536 +
            (C88922 + C88923 + C88924) * C153724) *
               C153684) *
              C153537 * C153521 * C132 -
          (((C152156 * C961 - C83607 * C950 - C152156 * C962 + C83598 * C968 +
             C152106 * C959 - C152145 * C949 - C152106 * C960 + C153475 * C967 +
             C152110 * C957 - C152150 * C948 - C152110 * C958 +
             C153467 * C966) *
                C153724 +
            (C152156 * C335 - C83607 * C313 - C152156 * C336 + C83598 * C349 +
             C152106 * C315 - C152145 * C303 - C152106 * C316 + C153475 * C339 +
             C152110 * C317 - C152150 * C304 - C152110 * C318 +
             C153467 * C340) *
                C98536) *
               C153684 +
           ((C152156 * C508 - C83607 * C486 - C152156 * C509 + C83598 * C522 +
             C152106 * C488 - C152145 * C476 - C152106 * C489 + C153475 * C512 +
             C152110 * C490 - C152150 * C477 - C152110 * C491 +
             C153467 * C513) *
                C153724 +
            (C152156 * C162 - C83607 * C149 - C152156 * C163 + C83598 * C173 +
             C152106 * C160 - C152145 * C148 - C152106 * C161 + C153475 * C172 +
             C152110 * C158 - C152150 * C147 - C152110 * C159 +
             C153467 * C171) *
                C98536) *
               C153863) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
              C153467 * C168 + C152106 * C154 - C152145 * C145 -
              C152106 * C155 + C153475 * C169 + C152156 * C156 - C83607 * C146 -
              C152156 * C157 + C83598 * C170) *
                 C98536 +
             (C88599 + C88600 + C88601) * C153724) *
                C153863 +
            ((C83935 + C83936 + C83937) * C98536 + C89626 * C153724) *
                C153684) *
               C153537 * C298 -
           ((C86416 * C153724 + (C83940 + C83939 + C83938) * C98536) * C153684 +
            (C89627 * C153724 + (C83937 + C83936 + C83935) * C98536) *
                C153863) *
               C153537 * C299 +
           ((C83955 * C98536 + C91396 * C153724) * C153863 +
            ((C83943 + C83942 + C83941) * C98536 +
             (C86424 + C86425 + C86426) * C153724) *
                C153684) *
               C153537 * C300) *
              C301 +
          ((((C83944 + C83945 + C83946) * C98536 + C89628 * C153724) * C153863 +
            ((C83947 + C83948 + C83949) * C98536 +
             (C85026 + C85027 + C85028) * C153724) *
                C153684) *
               C153537 * C299 -
           ((C89629 * C153724 + (C83946 + C83945 + C83944) * C98536) * C153684 +
            ((C88607 + C88606 + C88605) * C153724 +
             (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
              C152106 * C156 - C152145 * C146 - C152106 * C157 +
              C153475 * C170 + C152110 * C154 - C152150 * C145 -
              C152110 * C155 + C153467 * C169) *
                 C98536) *
                C153863) *
               C153537 * C298 -
           (((C152156 * C4073 - C83607 * C4066 - C152156 * C4074 +
              C83598 * C4078 + C152106 * C4071 - C152145 * C4065 -
              C152106 * C4072 + C153475 * C4077 + C152110 * C4069 -
              C152150 * C4064 - C152110 * C4070 + C153467 * C4076) *
                 C153724 +
             (C83952 + C83951 + C83950) * C98536) *
                C153684 +
            ((C85028 + C85027 + C85026) * C153724 + C83956 * C98536) *
                C153863) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[230] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
              C153467 * C168 + C152106 * C154 - C152145 * C145 -
              C152106 * C155 + C153475 * C169 + C152156 * C156 - C83607 * C146 -
              C152156 * C157 + C83598 * C170) *
                 C98536 +
             (C88599 + C88600 + C88601) * C153724) *
                C153863 +
            ((C83935 + C83936 + C83937) * C98536 + C89626 * C153724) *
                C153684) *
               C153537 * C153919 -
           ((C86416 * C153724 + (C83940 + C83939 + C83938) * C98536) * C153684 +
            (C89627 * C153724 + (C83937 + C83936 + C83935) * C98536) *
                C153863) *
               C153537 * C153920 +
           ((C83955 * C98536 + C91396 * C153724) * C153863 +
            ((C83943 + C83942 + C83941) * C98536 +
             (C86424 + C86425 + C86426) * C153724) *
                C153684) *
               C153537 * C1469) *
              C153840 +
          ((((C83944 + C83945 + C83946) * C98536 + C89628 * C153724) * C153863 +
            ((C83947 + C83948 + C83949) * C98536 +
             (C85026 + C85027 + C85028) * C153724) *
                C153684) *
               C153537 * C153920 -
           ((C89629 * C153724 + (C83946 + C83945 + C83944) * C98536) * C153684 +
            ((C88607 + C88606 + C88605) * C153724 +
             (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
              C152106 * C156 - C152145 * C146 - C152106 * C157 +
              C153475 * C170 + C152110 * C154 - C152150 * C145 -
              C152110 * C155 + C153467 * C169) *
                 C98536) *
                C153863) *
               C153537 * C153919 -
           (((C152156 * C4073 - C83607 * C4066 - C152156 * C4074 +
              C83598 * C4078 + C152106 * C4071 - C152145 * C4065 -
              C152106 * C4072 + C153475 * C4077 + C152110 * C4069 -
              C152150 * C4064 - C152110 * C4070 + C153467 * C4076) *
                 C153724 +
             (C83952 + C83951 + C83950) * C98536) *
                C153684 +
            ((C85028 + C85027 + C85026) * C153724 + C83956 * C98536) *
                C153863) *
               C153537 * C1469) *
              C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[231] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
              C153467 * C168 + C152106 * C154 - C152145 * C145 -
              C152106 * C155 + C153475 * C169 + C152156 * C156 - C83607 * C146 -
              C152156 * C157 + C83598 * C170) *
                 C98536 +
             (C88599 + C88600 + C88601) * C153724) *
                C153863 +
            ((C83935 + C83936 + C83937) * C98536 + C89626 * C153724) *
                C153684) *
               C153849 -
           ((C90418 * C153724 + C89627 * C98536) * C153684 +
            ((C88602 + C88603 + C88604) * C153724 +
             (C88601 + C88600 + C88599) * C98536) *
                C153863) *
               C153601) *
              C153919 +
          (((C89626 * C98536 + C90419 * C153724) * C153863 +
            (C91396 * C98536 + (C85674 + C85675 + C85676) * C153724) *
                C153684) *
               C153601 -
           ((C86416 * C153724 + (C83940 + C83939 + C83938) * C98536) * C153684 +
            (C89627 * C153724 + (C83937 + C83936 + C83935) * C98536) *
                C153863) *
               C153849) *
              C153920 +
          (((C83955 * C98536 + C91396 * C153724) * C153863 +
            ((C83943 + C83942 + C83941) * C98536 +
             (C86424 + C86425 + C86426) * C153724) *
                C153684) *
               C153849 -
           (((C152156 * C4784 - C83607 * C4781 - C152156 * C4785 +
              C83598 * C4790 + C152106 * C4786 - C152145 * C4782 -
              C152106 * C4787 + C153475 * C4791 + C152110 * C4788 -
              C152150 * C4783 - C152110 * C4789 + C153467 * C4792) *
                 C153724 +
             (C86426 + C86425 + C86424) * C98536) *
                C153684 +
            ((C85676 + C85675 + C85674) * C153724 + C86416 * C98536) *
                C153863) *
               C153601) *
              C1469) *
         C153502) /
        (p * q * std::sqrt(p + q));
    d2ee[232] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C98536 +
            (C88599 + C88600 + C88601) * C153724) *
               C153863 +
           ((C83935 + C83936 + C83937) * C98536 + C89626 * C153724) * C153684) *
              C153537 * C1178 -
          ((C86416 * C153724 + (C83940 + C83939 + C83938) * C98536) * C153684 +
           (C89627 * C153724 + (C83937 + C83936 + C83935) * C98536) * C153863) *
              C153537 * C1179 +
          ((C83955 * C98536 + C91396 * C153724) * C153863 +
           ((C83943 + C83942 + C83941) * C98536 +
            (C86424 + C86425 + C86426) * C153724) *
               C153684) *
              C153537 * C1180 -
          (((C152156 * C5564 - C83607 * C5561 - C152156 * C5565 +
             C83598 * C5570 + C152106 * C5566 - C152145 * C5562 -
             C152106 * C5567 + C153475 * C5571 + C152110 * C5568 -
             C152150 * C5563 - C152110 * C5569 + C153467 * C5572) *
                C153724 +
            (C85416 + C85415 + C85414) * C98536) *
               C153684 +
           ((C86426 + C86425 + C86424) * C153724 + C85406 * C98536) * C153863) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
              C153467 * C168 + C152106 * C154 - C152145 * C145 -
              C152106 * C155 + C153475 * C169 + C152156 * C156 - C83607 * C146 -
              C152156 * C157 + C83598 * C170) *
                 C98536 +
             (C88599 + C88600 + C88601) * C153724) *
                C153863 +
            ((C83935 + C83936 + C83937) * C98536 + C89626 * C153724) *
                C153684) *
               C153537 * C1091 -
           ((C86416 * C153724 + (C83940 + C83939 + C83938) * C98536) * C153684 +
            (C89627 * C153724 + (C83937 + C83936 + C83935) * C98536) *
                C153863) *
               C153537 * C153573) *
              C1093 +
          ((((C83944 + C83945 + C83946) * C98536 + C89628 * C153724) * C153863 +
            ((C83947 + C83948 + C83949) * C98536 +
             (C85026 + C85027 + C85028) * C153724) *
                C153684) *
               C153537 * C153573 -
           ((C89629 * C153724 + (C83946 + C83945 + C83944) * C98536) * C153684 +
            ((C88607 + C88606 + C88605) * C153724 +
             (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
              C152106 * C156 - C152145 * C146 - C152106 * C157 +
              C153475 * C170 + C152110 * C154 - C152150 * C145 -
              C152110 * C155 + C153467 * C169) *
                 C98536) *
                C153863) *
               C153537 * C1091) *
              C1094 +
          ((((C152110 * C156 - C152150 * C146 - C152110 * C157 +
              C153467 * C170 + C152106 * C158 - C152145 * C147 -
              C152106 * C159 + C153475 * C171 + C152156 * C160 - C83607 * C148 -
              C152156 * C161 + C83598 * C172) *
                 C98536 +
             (C89233 + C89234 + C89235) * C153724) *
                C153863 +
            ((C84431 + C84432 + C84433) * C98536 +
             (C88922 + C88923 + C88924) * C153724) *
                C153684) *
               C153537 * C1091 -
           (((C152156 * C1761 - C83607 * C1756 - C152156 * C1762 +
              C83598 * C1771 + C152106 * C1763 - C152145 * C1757 -
              C152106 * C1764 + C153475 * C1772 + C152110 * C1765 -
              C152150 * C1758 - C152110 * C1766 + C153467 * C1773) *
                 C153724 +
             (C84436 + C84435 + C84434) * C98536) *
                C153684 +
            ((C88924 + C88923 + C88922) * C153724 +
             (C84433 + C84432 + C84431) * C98536) *
                C153863) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
              C153467 * C168 + C152106 * C154 - C152145 * C145 -
              C152106 * C155 + C153475 * C169 + C152156 * C156 - C83607 * C146 -
              C152156 * C157 + C83598 * C170) *
                 C98536 +
             (C88599 + C88600 + C88601) * C153724) *
                C153863 +
            ((C83935 + C83936 + C83937) * C98536 + C89626 * C153724) *
                C153684) *
               C473 -
           ((C90418 * C153724 + C89627 * C98536) * C153684 +
            ((C88602 + C88603 + C88604) * C153724 +
             (C88601 + C88600 + C88599) * C98536) *
                C153863) *
               C474 +
           (((C88604 + C88603 + C88602) * C98536 +
             (C92189 + C92190 + C92191) * C153724) *
                C153863 +
            (C90419 * C98536 + (C90426 + C90427 + C90428) * C153724) *
                C153684) *
               C475) *
              C1091 +
          (((C89626 * C98536 + C90419 * C153724) * C153863 +
            (C91396 * C98536 + (C85674 + C85675 + C85676) * C153724) *
                C153684) *
               C474 -
           ((C86416 * C153724 + (C83940 + C83939 + C83938) * C98536) * C153684 +
            (C89627 * C153724 + (C83937 + C83936 + C83935) * C98536) *
                C153863) *
               C473 -
           (((C152156 * C6185 - C83607 * C6179 - C152156 * C6186 +
              C83598 * C6197 + C152106 * C6187 - C152145 * C6180 -
              C152106 * C6188 + C153475 * C6198 + C152110 * C6189 -
              C152150 * C6181 - C152110 * C6190 + C153467 * C6199) *
                 C153724 +
             (C85676 + C85675 + C85674) * C98536) *
                C153684 +
            ((C90428 + C90427 + C90426) * C153724 + C90418 * C98536) *
                C153863) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[233] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
                        C153467 * C168 + C152106 * C154 - C152145 * C145 -
                        C152106 * C155 + C153475 * C169 + C152156 * C156 -
                        C83607 * C146 - C152156 * C157 + C83598 * C170) *
                           C98536 +
                       (C88599 + C88600 + C88601) * C153724) *
                          C153863 +
                      ((C83935 + C83936 + C83937) * C98536 + C89626 * C153724) *
                          C153684) *
                         C153849 -
                     ((C90418 * C153724 + C89627 * C98536) * C153684 +
                      ((C88602 + C88603 + C88604) * C153724 +
                       (C88601 + C88600 + C88599) * C98536) *
                          C153863) *
                         C153601) *
                        C1091 +
                    (((C89626 * C98536 + C90419 * C153724) * C153863 +
                      (C91396 * C98536 + (C85674 + C85675 + C85676) * C153724) *
                          C153684) *
                         C153601 -
                     ((C86416 * C153724 + (C83940 + C83939 + C83938) * C98536) *
                          C153684 +
                      (C89627 * C153724 + (C83937 + C83936 + C83935) * C98536) *
                          C153863) *
                         C153849) *
                        C153573) *
                       C153840 +
                   (((((C88605 + C88606 + C88607) * C98536 +
                       (C88608 + C88609 + C88610) * C153724) *
                          C153863 +
                      (C89628 * C98536 + (C88611 + C88612 + C88613) * C153724) *
                          C153684) *
                         C153601 -
                     ((C89629 * C153724 + (C83946 + C83945 + C83944) * C98536) *
                          C153684 +
                      ((C88607 + C88606 + C88605) * C153724 +
                       (C152156 * C158 - C83607 * C147 - C152156 * C159 +
                        C83598 * C171 + C152106 * C156 - C152145 * C146 -
                        C152106 * C157 + C153475 * C170 + C152110 * C154 -
                        C152150 * C145 - C152110 * C155 + C153467 * C169) *
                           C98536) *
                          C153863) *
                         C153849) *
                        C1091 +
                    ((((C83944 + C83945 + C83946) * C98536 + C89628 * C153724) *
                          C153863 +
                      ((C83947 + C83948 + C83949) * C98536 +
                       (C85026 + C85027 + C85028) * C153724) *
                          C153684) *
                         C153849 -
                     (((C152156 * C3289 - C83607 * C3282 - C152156 * C3290 +
                        C83598 * C3294 + C152106 * C3287 - C152145 * C3281 -
                        C152106 * C3288 + C153475 * C3293 + C152110 * C3285 -
                        C152150 * C3280 - C152110 * C3286 + C153467 * C3292) *
                           C153724 +
                       (C85028 + C85027 + C85026) * C98536) *
                          C153684 +
                      ((C88613 + C88612 + C88611) * C153724 + C89629 * C98536) *
                          C153863) *
                         C153601) *
                        C153573) *
                       C153508)) /
                 (p * q * std::sqrt(p + q));
    d2ee[234] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
              C153467 * C168 + C152106 * C154 - C152145 * C145 -
              C152106 * C155 + C153475 * C169 + C152156 * C156 - C83607 * C146 -
              C152156 * C157 + C83598 * C170) *
                 C98536 +
             (C88599 + C88600 + C88601) * C153724) *
                C153863 +
            ((C83935 + C83936 + C83937) * C98536 + C89626 * C153724) *
                C153684) *
               C153537 * C1091 -
           ((C86416 * C153724 + (C83940 + C83939 + C83938) * C98536) * C153684 +
            (C89627 * C153724 + (C83937 + C83936 + C83935) * C98536) *
                C153863) *
               C153537 * C153573) *
              C1093 +
          ((((C83944 + C83945 + C83946) * C98536 + C89628 * C153724) * C153863 +
            ((C83947 + C83948 + C83949) * C98536 +
             (C85026 + C85027 + C85028) * C153724) *
                C153684) *
               C153537 * C153573 -
           ((C89629 * C153724 + (C83946 + C83945 + C83944) * C98536) * C153684 +
            ((C88607 + C88606 + C88605) * C153724 +
             (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
              C152106 * C156 - C152145 * C146 - C152106 * C157 +
              C153475 * C170 + C152110 * C154 - C152150 * C145 -
              C152110 * C155 + C153467 * C169) *
                 C98536) *
                C153863) *
               C153537 * C1091) *
              C1094 +
          ((((C152110 * C156 - C152150 * C146 - C152110 * C157 +
              C153467 * C170 + C152106 * C158 - C152145 * C147 -
              C152106 * C159 + C153475 * C171 + C152156 * C160 - C83607 * C148 -
              C152156 * C161 + C83598 * C172) *
                 C98536 +
             (C89233 + C89234 + C89235) * C153724) *
                C153863 +
            ((C84431 + C84432 + C84433) * C98536 +
             (C88922 + C88923 + C88924) * C153724) *
                C153684) *
               C153537 * C1091 -
           (((C152156 * C1761 - C83607 * C1756 - C152156 * C1762 +
              C83598 * C1771 + C152106 * C1763 - C152145 * C1757 -
              C152106 * C1764 + C153475 * C1772 + C152110 * C1765 -
              C152150 * C1758 - C152110 * C1766 + C153467 * C1773) *
                 C153724 +
             (C84436 + C84435 + C84434) * C98536) *
                C153684 +
            ((C88924 + C88923 + C88922) * C153724 +
             (C84433 + C84432 + C84431) * C98536) *
                C153863) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C98536 +
            (C88599 + C88600 + C88601) * C153724) *
               C153863 +
           ((C83935 + C83936 + C83937) * C98536 + C89626 * C153724) * C153684) *
              C153537 * C1178 -
          ((C86416 * C153724 + (C83940 + C83939 + C83938) * C98536) * C153684 +
           (C89627 * C153724 + (C83937 + C83936 + C83935) * C98536) * C153863) *
              C153537 * C1179 +
          ((C83955 * C98536 + C91396 * C153724) * C153863 +
           ((C83943 + C83942 + C83941) * C98536 +
            (C86424 + C86425 + C86426) * C153724) *
               C153684) *
              C153537 * C1180 -
          (((C152156 * C5564 - C83607 * C5561 - C152156 * C5565 +
             C83598 * C5570 + C152106 * C5566 - C152145 * C5562 -
             C152106 * C5567 + C153475 * C5571 + C152110 * C5568 -
             C152150 * C5563 - C152110 * C5569 + C153467 * C5572) *
                C153724 +
            (C85416 + C85415 + C85414) * C98536) *
               C153684 +
           ((C86426 + C86425 + C86424) * C153724 + C85406 * C98536) * C153863) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[235] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
                        C153467 * C168 + C152106 * C154 - C152145 * C145 -
                        C152106 * C155 + C153475 * C169 + C152156 * C156 -
                        C83607 * C146 - C152156 * C157 + C83598 * C170) *
                           C98536 +
                       (C88599 + C88600 + C88601) * C153724) *
                          C153863 +
                      ((C83935 + C83936 + C83937) * C98536 + C89626 * C153724) *
                          C153684) *
                         C1898 -
                     ((C90418 * C153724 + C89627 * C98536) * C153684 +
                      ((C88602 + C88603 + C88604) * C153724 +
                       (C88601 + C88600 + C88599) * C98536) *
                          C153863) *
                         C153601) *
                        C153848 +
                    (((C89626 * C98536 + C90419 * C153724) * C153863 +
                      (C91396 * C98536 + (C85674 + C85675 + C85676) * C153724) *
                          C153684) *
                         C153601 -
                     ((C86416 * C153724 + (C83940 + C83939 + C83938) * C98536) *
                          C153684 +
                      (C89627 * C153724 + (C83937 + C83936 + C83935) * C98536) *
                          C153863) *
                         C1898) *
                        C153573) *
                       C153840 +
                   (((((C88605 + C88606 + C88607) * C98536 +
                       (C88608 + C88609 + C88610) * C153724) *
                          C153863 +
                      (C89628 * C98536 + (C88611 + C88612 + C88613) * C153724) *
                          C153684) *
                         C153601 -
                     ((C89629 * C153724 + (C83946 + C83945 + C83944) * C98536) *
                          C153684 +
                      ((C88607 + C88606 + C88605) * C153724 +
                       (C152156 * C158 - C83607 * C147 - C152156 * C159 +
                        C83598 * C171 + C152106 * C156 - C152145 * C146 -
                        C152106 * C157 + C153475 * C170 + C152110 * C154 -
                        C152150 * C145 - C152110 * C155 + C153467 * C169) *
                           C98536) *
                          C153863) *
                         C1898) *
                        C153848 +
                    ((((C83944 + C83945 + C83946) * C98536 + C89628 * C153724) *
                          C153863 +
                      ((C83947 + C83948 + C83949) * C98536 +
                       (C85026 + C85027 + C85028) * C153724) *
                          C153684) *
                         C1898 -
                     (((C152156 * C3289 - C83607 * C3282 - C152156 * C3290 +
                        C83598 * C3294 + C152106 * C3287 - C152145 * C3281 -
                        C152106 * C3288 + C153475 * C3293 + C152110 * C3285 -
                        C152150 * C3280 - C152110 * C3286 + C153467 * C3292) *
                           C153724 +
                       (C85028 + C85027 + C85026) * C98536) *
                          C153684 +
                      ((C88613 + C88612 + C88611) * C153724 + C89629 * C98536) *
                          C153863) *
                         C153601) *
                        C153573) *
                       C153508)) /
                 (p * q * std::sqrt(p + q));
    d2ee[236] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
              C153467 * C168 + C152106 * C154 - C152145 * C145 -
              C152106 * C155 + C153475 * C169 + C152156 * C156 - C83607 * C146 -
              C152156 * C157 + C83598 * C170) *
                 C98536 +
             (C88599 + C88600 + C88601) * C153724) *
                C153863 +
            ((C83935 + C83936 + C83937) * C98536 + C89626 * C153724) *
                C153684) *
               C153921 -
           ((C90418 * C153724 + C89627 * C98536) * C153684 +
            ((C88602 + C88603 + C88604) * C153724 +
             (C88601 + C88600 + C88599) * C98536) *
                C153863) *
               C153922 +
           (((C88604 + C88603 + C88602) * C98536 +
             (C92189 + C92190 + C92191) * C153724) *
                C153863 +
            (C90419 * C98536 + (C90426 + C90427 + C90428) * C153724) *
                C153684) *
               C2414) *
              C153848 +
          (((C89626 * C98536 + C90419 * C153724) * C153863 +
            (C91396 * C98536 + (C85674 + C85675 + C85676) * C153724) *
                C153684) *
               C153922 -
           ((C86416 * C153724 + (C83940 + C83939 + C83938) * C98536) * C153684 +
            (C89627 * C153724 + (C83937 + C83936 + C83935) * C98536) *
                C153863) *
               C153921 -
           (((C152156 * C6185 - C83607 * C6179 - C152156 * C6186 +
              C83598 * C6197 + C152106 * C6187 - C152145 * C6180 -
              C152106 * C6188 + C153475 * C6198 + C152110 * C6189 -
              C152150 * C6181 - C152110 * C6190 + C153467 * C6199) *
                 C153724 +
             (C85676 + C85675 + C85674) * C98536) *
                C153684 +
            ((C90428 + C90427 + C90426) * C153724 + C90418 * C98536) *
                C153863) *
               C2414) *
              C153573) *
         C153502) /
        (p * q * std::sqrt(p + q));
    d2ee[237] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
              C153467 * C168 + C152106 * C154 - C152145 * C145 -
              C152106 * C155 + C153475 * C169 + C152156 * C156 - C83607 * C146 -
              C152156 * C157 + C83598 * C170) *
                 C98536 +
             (C88599 + C88600 + C88601) * C153724) *
                C153863 +
            ((C83935 + C83936 + C83937) * C98536 + C89626 * C153724) *
                C153684) *
               C1898 -
           ((C90418 * C153724 + C89627 * C98536) * C153684 +
            ((C88602 + C88603 + C88604) * C153724 +
             (C88601 + C88600 + C88599) * C98536) *
                C153863) *
               C153601) *
              C298 +
          (((C89626 * C98536 + C90419 * C153724) * C153863 +
            (C91396 * C98536 + (C85674 + C85675 + C85676) * C153724) *
                C153684) *
               C153601 -
           ((C86416 * C153724 + (C83940 + C83939 + C83938) * C98536) * C153684 +
            (C89627 * C153724 + (C83937 + C83936 + C83935) * C98536) *
                C153863) *
               C1898) *
              C299 +
          (((C83955 * C98536 + C91396 * C153724) * C153863 +
            ((C83943 + C83942 + C83941) * C98536 +
             (C86424 + C86425 + C86426) * C153724) *
                C153684) *
               C1898 -
           (((C152156 * C4784 - C83607 * C4781 - C152156 * C4785 +
              C83598 * C4790 + C152106 * C4786 - C152145 * C4782 -
              C152106 * C4787 + C153475 * C4791 + C152110 * C4788 -
              C152150 * C4783 - C152110 * C4789 + C153467 * C4792) *
                 C153724 +
             (C86426 + C86425 + C86424) * C98536) *
                C153684 +
            ((C85676 + C85675 + C85674) * C153724 + C86416 * C98536) *
                C153863) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
              C153467 * C168 + C152106 * C154 - C152145 * C145 -
              C152106 * C155 + C153475 * C169 + C152156 * C156 - C83607 * C146 -
              C152156 * C157 + C83598 * C170) *
                 C98536 +
             (C88599 + C88600 + C88601) * C153724) *
                C153863 +
            ((C83935 + C83936 + C83937) * C98536 + C89626 * C153724) *
                C153684) *
               C1898 -
           ((C90418 * C153724 + C89627 * C98536) * C153684 +
            ((C88602 + C88603 + C88604) * C153724 +
             (C88601 + C88600 + C88599) * C98536) *
                C153863) *
               C153601) *
              C153521 * C1093 +
          ((((C88605 + C88606 + C88607) * C98536 +
             (C88608 + C88609 + C88610) * C153724) *
                C153863 +
            (C89628 * C98536 + (C88611 + C88612 + C88613) * C153724) *
                C153684) *
               C153601 -
           ((C89629 * C153724 + (C83946 + C83945 + C83944) * C98536) * C153684 +
            ((C88607 + C88606 + C88605) * C153724 +
             (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
              C152106 * C156 - C152145 * C146 - C152106 * C157 +
              C153475 * C170 + C152110 * C154 - C152150 * C145 -
              C152110 * C155 + C153467 * C169) *
                 C98536) *
                C153863) *
               C1898) *
              C153521 * C1094 +
          ((((C152110 * C156 - C152150 * C146 - C152110 * C157 +
              C153467 * C170 + C152106 * C158 - C152145 * C147 -
              C152106 * C159 + C153475 * C171 + C152156 * C160 - C83607 * C148 -
              C152156 * C161 + C83598 * C172) *
                 C98536 +
             (C89233 + C89234 + C89235) * C153724) *
                C153863 +
            ((C84431 + C84432 + C84433) * C98536 +
             (C88922 + C88923 + C88924) * C153724) *
                C153684) *
               C1898 -
           (((C152156 * C1330 - C83607 * C1325 - C152156 * C1331 +
              C83598 * C1340 + C152106 * C1332 - C152145 * C1326 -
              C152106 * C1333 + C153475 * C1341 + C152110 * C1334 -
              C152150 * C1327 - C152110 * C1335 + C153467 * C1342) *
                 C153724 +
             (C88924 + C88923 + C88922) * C98536) *
                C153684 +
            ((C152156 * C506 - C83607 * C485 - C152156 * C507 + C83598 * C521 +
              C152106 * C504 - C152145 * C484 - C152106 * C505 +
              C153475 * C520 + C152110 * C502 - C152150 * C483 -
              C152110 * C503 + C153467 * C519) *
                 C153724 +
             (C89235 + C89234 + C89233) * C98536) *
                C153863) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C98536 +
            (C88599 + C88600 + C88601) * C153724) *
               C153863 +
           ((C83935 + C83936 + C83937) * C98536 + C89626 * C153724) * C153684) *
              C2104 -
          ((C90418 * C153724 + C89627 * C98536) * C153684 +
           ((C88602 + C88603 + C88604) * C153724 +
            (C88601 + C88600 + C88599) * C98536) *
               C153863) *
              C2105 +
          (((C88604 + C88603 + C88602) * C98536 +
            (C92189 + C92190 + C92191) * C153724) *
               C153863 +
           (C90419 * C98536 + (C90426 + C90427 + C90428) * C153724) * C153684) *
              C2106 -
          (((C152156 * C9038 - C83607 * C9035 - C152156 * C9039 +
             C83598 * C9044 + C152106 * C9040 - C152145 * C9036 -
             C152106 * C9041 + C153475 * C9045 + C152110 * C9042 -
             C152150 * C9037 - C152110 * C9043 + C153467 * C9046) *
                C153724 +
            (C90428 + C90427 + C90426) * C98536) *
               C153684 +
           ((C152156 * C7522 - C83607 * C7516 - C152156 * C7523 +
             C83598 * C7528 + C152106 * C7520 - C152145 * C7515 -
             C152106 * C7521 + C153475 * C7527 + C152110 * C7518 -
             C152150 * C7514 - C152110 * C7519 + C153467 * C7526) *
                C153724 +
            (C92191 + C92190 + C92189) * C98536) *
               C153863) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[238] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
              C153467 * C168 + C152106 * C154 - C152145 * C145 -
              C152106 * C155 + C153475 * C169 + C152156 * C156 - C83607 * C146 -
              C152156 * C157 + C83598 * C170) *
                 C98536 +
             (C88599 + C88600 + C88601) * C153724) *
                C153863 +
            ((C83935 + C83936 + C83937) * C98536 + C89626 * C153724) *
                C153684) *
               C153921 -
           ((C90418 * C153724 + C89627 * C98536) * C153684 +
            ((C88602 + C88603 + C88604) * C153724 +
             (C88601 + C88600 + C88599) * C98536) *
                C153863) *
               C153922 +
           (((C88604 + C88603 + C88602) * C98536 +
             (C92189 + C92190 + C92191) * C153724) *
                C153863 +
            (C90419 * C98536 + (C90426 + C90427 + C90428) * C153724) *
                C153684) *
               C2414) *
              C153521 * C153840 +
          ((((C88605 + C88606 + C88607) * C98536 +
             (C88608 + C88609 + C88610) * C153724) *
                C153863 +
            (C89628 * C98536 + (C88611 + C88612 + C88613) * C153724) *
                C153684) *
               C153922 -
           ((C89629 * C153724 + (C83946 + C83945 + C83944) * C98536) * C153684 +
            ((C88607 + C88606 + C88605) * C153724 +
             (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
              C152106 * C156 - C152145 * C146 - C152106 * C157 +
              C153475 * C170 + C152110 * C154 - C152150 * C145 -
              C152110 * C155 + C153467 * C169) *
                 C98536) *
                C153863) *
               C153921 -
           (((C152156 * C8429 - C83607 * C8428 - C152156 * C8430 +
              C83598 * C8431 + C152106 * C6191 - C152145 * C6182 -
              C152106 * C6192 + C153475 * C6200 + C152110 * C6193 -
              C152150 * C6183 - C152110 * C6194 + C153467 * C6201) *
                 C153724 +
             (C88613 + C88612 + C88611) * C98536) *
                C153684 +
            ((C152156 * C2115 - C83607 * C2109 - C152156 * C2116 +
              C83598 * C2124 + C152106 * C2117 - C152145 * C2110 -
              C152106 * C2118 + C153475 * C2125 + C152110 * C2119 -
              C152150 * C2111 - C152110 * C2120 + C153467 * C2126) *
                 C153724 +
             (C88610 + C88609 + C88608) * C98536) *
                C153863) *
               C2414) *
              C153521 * C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[239] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
              C153467 * C168 + C152106 * C154 - C152145 * C145 -
              C152106 * C155 + C153475 * C169 + C152156 * C156 - C83607 * C146 -
              C152156 * C157 + C83598 * C170) *
                 C98536 +
             (C88599 + C88600 + C88601) * C153724) *
                C153863 +
            ((C83935 + C83936 + C83937) * C98536 + C89626 * C153724) *
                C153684) *
               C1898 -
           ((C90418 * C153724 + C89627 * C98536) * C153684 +
            ((C88602 + C88603 + C88604) * C153724 +
             (C88601 + C88600 + C88599) * C98536) *
                C153863) *
               C153601) *
              C153521 * C1093 +
          ((((C88605 + C88606 + C88607) * C98536 +
             (C88608 + C88609 + C88610) * C153724) *
                C153863 +
            (C89628 * C98536 + (C88611 + C88612 + C88613) * C153724) *
                C153684) *
               C153601 -
           ((C89629 * C153724 + (C83946 + C83945 + C83944) * C98536) * C153684 +
            ((C88607 + C88606 + C88605) * C153724 +
             (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
              C152106 * C156 - C152145 * C146 - C152106 * C157 +
              C153475 * C170 + C152110 * C154 - C152150 * C145 -
              C152110 * C155 + C153467 * C169) *
                 C98536) *
                C153863) *
               C1898) *
              C153521 * C1094 +
          ((((C152110 * C156 - C152150 * C146 - C152110 * C157 +
              C153467 * C170 + C152106 * C158 - C152145 * C147 -
              C152106 * C159 + C153475 * C171 + C152156 * C160 - C83607 * C148 -
              C152156 * C161 + C83598 * C172) *
                 C98536 +
             (C89233 + C89234 + C89235) * C153724) *
                C153863 +
            ((C84431 + C84432 + C84433) * C98536 +
             (C88922 + C88923 + C88924) * C153724) *
                C153684) *
               C1898 -
           (((C152156 * C1330 - C83607 * C1325 - C152156 * C1331 +
              C83598 * C1340 + C152106 * C1332 - C152145 * C1326 -
              C152106 * C1333 + C153475 * C1341 + C152110 * C1334 -
              C152150 * C1327 - C152110 * C1335 + C153467 * C1342) *
                 C153724 +
             (C88924 + C88923 + C88922) * C98536) *
                C153684 +
            ((C152156 * C506 - C83607 * C485 - C152156 * C507 + C83598 * C521 +
              C152106 * C504 - C152145 * C484 - C152106 * C505 +
              C153475 * C520 + C152110 * C502 - C152150 * C483 -
              C152110 * C503 + C153467 * C519) *
                 C153724 +
             (C89235 + C89234 + C89233) * C98536) *
                C153863) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
              C153467 * C168 + C152106 * C154 - C152145 * C145 -
              C152106 * C155 + C153475 * C169 + C152156 * C156 - C83607 * C146 -
              C152156 * C157 + C83598 * C170) *
                 C98536 +
             (C88599 + C88600 + C88601) * C153724) *
                C153863 +
            ((C83935 + C83936 + C83937) * C98536 + C89626 * C153724) *
                C153684) *
               C1898 -
           ((C90418 * C153724 + C89627 * C98536) * C153684 +
            ((C88602 + C88603 + C88604) * C153724 +
             (C88601 + C88600 + C88599) * C98536) *
                C153863) *
               C153601) *
              C298 +
          (((C89626 * C98536 + C90419 * C153724) * C153863 +
            (C91396 * C98536 + (C85674 + C85675 + C85676) * C153724) *
                C153684) *
               C153601 -
           ((C86416 * C153724 + (C83940 + C83939 + C83938) * C98536) * C153684 +
            (C89627 * C153724 + (C83937 + C83936 + C83935) * C98536) *
                C153863) *
               C1898) *
              C299 +
          (((C83955 * C98536 + C91396 * C153724) * C153863 +
            ((C83943 + C83942 + C83941) * C98536 +
             (C86424 + C86425 + C86426) * C153724) *
                C153684) *
               C1898 -
           (((C152156 * C4784 - C83607 * C4781 - C152156 * C4785 +
              C83598 * C4790 + C152106 * C4786 - C152145 * C4782 -
              C152106 * C4787 + C153475 * C4791 + C152110 * C4788 -
              C152150 * C4783 - C152110 * C4789 + C153467 * C4792) *
                 C153724 +
             (C86426 + C86425 + C86424) * C98536) *
                C153684 +
            ((C85676 + C85675 + C85674) * C153724 + C86416 * C98536) *
                C153863) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[240] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153720 +
             (C78877 + C78878) * C153727 + C78893 * C116209) *
                C153863 +
            ((C74581 + C74582) * C153720 + C79917 * C153727 +
             C78795 * C116209) *
                C153684) *
               C153537 * C153848 -
           ((C80715 * C116209 + C76796 * C153727 +
             (C74584 + C74583) * C153720) *
                C153684 +
            (C79918 * C116209 + C79919 * C153727 +
             (C74582 + C74581) * C153720) *
                C153863) *
               C153537 * C153573) *
              C153917 +
          ((((C74589 + C74590) * C153720 + C79920 * C153727 +
             C79921 * C116209) *
                C153863 +
            ((C74591 + C74592) * C153720 + C94919 * C153727 +
             (C78487 + C78488) * C116209) *
                C153684) *
               C153537 * C153573 -
           ((C78844 * C116209 + C79922 * C153727 +
             (C74590 + C74589) * C153720) *
                C153684 +
            (C78894 * C116209 + (C78886 + C78885) * C153727 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153720) *
                C153863) *
               C153537 * C153848) *
              C153918 +
          ((((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
              C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                 C153720 +
             (C79527 + C79528) * C153727 + (C79529 + C79530) * C116209) *
                C153863 +
            ((C75029 + C75030) * C153720 + (C79209 + C79210) * C153727 +
             (C79211 + C79212) * C116209) *
                C153684) *
               C153537 * C153848 -
           (((C74288 * C3289 - C74289 * C3282 - C74288 * C3290 +
              C153472 * C3294 + C74286 * C3287 - C74287 * C3281 -
              C74286 * C3288 + C74280 * C3293) *
                 C116209 +
             (C94242 + C94241) * C153727 + (C75032 + C75031) * C153720) *
                C153684 +
            ((C79212 + C79211) * C116209 + (C79210 + C79209) * C153727 +
             (C75030 + C75029) * C153720) *
                C153863) *
               C153537 * C153573) *
              C650)) /
        (p * q * std::sqrt(p + q));
    d2ee[241] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
               C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                  C153720 +
              (C78877 + C78878) * C153727 + C78893 * C116209) *
                 C153863 +
             ((C74581 + C74582) * C153720 + C79917 * C153727 +
              C78795 * C116209) *
                 C153684) *
                C153849 -
            ((C80697 * C116209 + C79918 * C153727 + C79919 * C153720) *
                 C153684 +
             (C82470 * C116209 + (C78880 + C78879) * C153727 +
              (C78878 + C78877) * C153720) *
                 C153863) *
                C153601) *
               C153848 +
           (((C79917 * C153720 + C78795 * C153727 + C80698 * C116209) *
                 C153863 +
             (C81694 * C153720 + C81695 * C153727 +
              (C80726 + C80727) * C116209) *
                 C153684) *
                C153601 -
            ((C80715 * C116209 + C76796 * C153727 +
              (C74584 + C74583) * C153720) *
                 C153684 +
             (C79918 * C116209 + C79919 * C153727 +
              (C74582 + C74581) * C153720) *
                 C153863) *
                C153849) *
               C153573) *
              C301 +
          (((((C78885 + C78886) * C153720 + (C78887 + C78888) * C153727 +
              (C78889 + C78890) * C116209) *
                 C153863 +
             (C79920 * C153720 + C79921 * C153727 +
              (C78891 + C78892) * C116209) *
                 C153684) *
                C153601 -
            ((C78844 * C116209 + C79922 * C153727 +
              (C74590 + C74589) * C153720) *
                 C153684 +
             (C78894 * C116209 + (C78886 + C78885) * C153727 +
              (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
               C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                  C153720) *
                 C153863) *
                C153849) *
               C153848 +
           ((((C74589 + C74590) * C153720 + C79920 * C153727 +
              C79921 * C116209) *
                 C153863 +
             ((C74591 + C74592) * C153720 + C94919 * C153727 +
              (C78487 + C78488) * C116209) *
                 C153684) *
                C153849 -
            (((C74288 * C6185 - C74289 * C6179 - C74288 * C6186 +
               C153472 * C6197 + C74286 * C6187 - C74287 * C6180 -
               C74286 * C6188 + C74280 * C6198) *
                  C116209 +
              (C78488 + C78487) * C153727 + C93644 * C153720) *
                 C153684 +
             ((C78892 + C78891) * C116209 + C78844 * C153727 +
              C79922 * C153720) *
                 C153863) *
                C153601) *
               C153573) *
              C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[242] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153720 +
             (C78877 + C78878) * C153727 + C78893 * C116209) *
                C153863 +
            ((C74581 + C74582) * C153720 + C79917 * C153727 +
             C78795 * C116209) *
                C153684) *
               C153537 * C298 -
           ((C80715 * C116209 + C76796 * C153727 +
             (C74584 + C74583) * C153720) *
                C153684 +
            (C79918 * C116209 + C79919 * C153727 +
             (C74582 + C74581) * C153720) *
                C153863) *
               C153537 * C299 +
           ((C74597 * C153720 + C81694 * C153727 + C81695 * C116209) * C153863 +
            (C74598 * C153720 + C96665 * C153727 +
             (C76147 + C76148) * C116209) *
                C153684) *
               C153537 * C300) *
              C301 +
          ((((C74589 + C74590) * C153720 + C79920 * C153727 +
             C79921 * C116209) *
                C153863 +
            ((C74591 + C74592) * C153720 + C94919 * C153727 +
             (C78487 + C78488) * C116209) *
                C153684) *
               C153537 * C299 -
           ((C78844 * C116209 + C79922 * C153727 +
             (C74590 + C74589) * C153720) *
                C153684 +
            (C78894 * C116209 + (C78886 + C78885) * C153727 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153720) *
                C153863) *
               C153537 * C298 -
           (((C74288 * C4784 - C74289 * C4781 - C74288 * C4785 +
              C153472 * C4790 + C74286 * C4786 - C74287 * C4782 -
              C74286 * C4787 + C74280 * C4791) *
                 C116209 +
             (C75570 + C75569) * C153727 + C74599 * C153720) *
                C153684 +
            ((C78488 + C78487) * C116209 + C93644 * C153727 +
             C74600 * C153720) *
                C153863) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153720 +
            (C78877 + C78878) * C153727 + C78893 * C116209) *
               C153863 +
           ((C74581 + C74582) * C153720 + C79917 * C153727 + C78795 * C116209) *
               C153684) *
              C153537 * C153521 * C130 -
          ((C78844 * C116209 + C79922 * C153727 + (C74590 + C74589) * C153720) *
               C153684 +
           (C78894 * C116209 + (C78886 + C78885) * C153727 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153720) *
               C153863) *
              C153537 * C153521 * C131 +
          (((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
             C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                C153720 +
            (C79527 + C79528) * C153727 + (C79529 + C79530) * C116209) *
               C153863 +
           ((C75029 + C75030) * C153720 + (C79209 + C79210) * C153727 +
            (C79211 + C79212) * C116209) *
               C153684) *
              C153537 * C153521 * C132 -
          (((C74288 * C1330 - C74289 * C1325 - C74288 * C1331 +
             C153472 * C1340 + C74286 * C1332 - C74287 * C1326 -
             C74286 * C1333 + C74280 * C1341) *
                C116209 +
            (C74288 * C959 - C74289 * C949 - C74288 * C960 + C153472 * C967 +
             C74286 * C957 - C74287 * C948 - C74286 * C958 + C74280 * C966) *
                C153727 +
            (C74288 * C315 - C74289 * C303 - C74288 * C316 + C153472 * C339 +
             C74286 * C317 - C74287 * C304 - C74286 * C318 + C74280 * C340) *
                C153720) *
               C153684 +
           ((C74288 * C506 - C74289 * C485 - C74288 * C507 + C153472 * C521 +
             C74286 * C504 - C74287 * C484 - C74286 * C505 + C74280 * C520) *
                C116209 +
            (C74288 * C488 - C74289 * C476 - C74288 * C489 + C153472 * C512 +
             C74286 * C490 - C74287 * C477 - C74286 * C491 + C74280 * C513) *
                C153727 +
            (C74288 * C160 - C74289 * C148 - C74288 * C161 + C153472 * C172 +
             C74286 * C158 - C74287 * C147 - C74286 * C159 + C74280 * C171) *
                C153720) *
               C153863) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153720 +
             (C78877 + C78878) * C153727 + C78893 * C116209) *
                C153863 +
            ((C74581 + C74582) * C153720 + C79917 * C153727 +
             C78795 * C116209) *
                C153684) *
               C473 -
           ((C80697 * C116209 + C79918 * C153727 + C79919 * C153720) * C153684 +
            (C82470 * C116209 + (C78880 + C78879) * C153727 +
             (C78878 + C78877) * C153720) *
                C153863) *
               C474 +
           ((C78893 * C153720 + C107823 * C153727 +
             (C82483 + C82484) * C116209) *
                C153863 +
            (C78795 * C153720 + C80698 * C153727 +
             (C80724 + C80725) * C116209) *
                C153684) *
               C475) *
              C153521 * C301 +
          ((((C78885 + C78886) * C153720 + (C78887 + C78888) * C153727 +
             (C78889 + C78890) * C116209) *
                C153863 +
            (C79920 * C153720 + C79921 * C153727 +
             (C78891 + C78892) * C116209) *
                C153684) *
               C474 -
           ((C78844 * C116209 + C79922 * C153727 +
             (C74590 + C74589) * C153720) *
                C153684 +
            (C78894 * C116209 + (C78886 + C78885) * C153727 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153720) *
                C153863) *
               C473 -
           (((C74288 * C9038 - C74289 * C9035 - C74288 * C9039 +
              C153472 * C9044 + C74286 * C9040 - C74287 * C9036 -
              C74286 * C9041 + C74280 * C9045) *
                 C116209 +
             (C78892 + C78891) * C153727 + C78844 * C153720) *
                C153684 +
            ((C107838 + C107837) * C116209 + C107832 * C153727 +
             C78894 * C153720) *
                C153863) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[243] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153720 +
             (C78877 + C78878) * C153727 + C78893 * C116209) *
                C153863 +
            ((C74581 + C74582) * C153720 + C79917 * C153727 +
             C78795 * C116209) *
                C153684) *
               C153849 -
           ((C80697 * C116209 + C79918 * C153727 + C79919 * C153720) * C153684 +
            (C82470 * C116209 + (C78880 + C78879) * C153727 +
             (C78878 + C78877) * C153720) *
                C153863) *
               C153601) *
              C153521 * C153917 +
          ((((C78885 + C78886) * C153720 + (C78887 + C78888) * C153727 +
             (C78889 + C78890) * C116209) *
                C153863 +
            (C79920 * C153720 + C79921 * C153727 +
             (C78891 + C78892) * C116209) *
                C153684) *
               C153601 -
           ((C78844 * C116209 + C79922 * C153727 +
             (C74590 + C74589) * C153720) *
                C153684 +
            (C78894 * C116209 + (C78886 + C78885) * C153727 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153720) *
                C153863) *
               C153849) *
              C153521 * C153918 +
          ((((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
              C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                 C153720 +
             (C79527 + C79528) * C153727 + (C79529 + C79530) * C116209) *
                C153863 +
            ((C75029 + C75030) * C153720 + (C79209 + C79210) * C153727 +
             (C79211 + C79212) * C116209) *
                C153684) *
               C153849 -
           (((C74288 * C8429 - C74289 * C8428 - C74288 * C8430 +
              C153472 * C8431 + C74286 * C6191 - C74287 * C6182 -
              C74286 * C6192 + C74280 * C6200) *
                 C116209 +
             (C79212 + C79211) * C153727 + (C79210 + C79209) * C153720) *
                C153684 +
            ((C108240 + C108239) * C116209 + (C79530 + C79529) * C153727 +
             (C79528 + C79527) * C153720) *
                C153863) *
               C153601) *
              C153521 * C650)) /
        (p * q * std::sqrt(p + q));
    d2ee[244] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153720 +
            (C78877 + C78878) * C153727 + C78893 * C116209) *
               C153863 +
           ((C74581 + C74582) * C153720 + C79917 * C153727 + C78795 * C116209) *
               C153684) *
              C153537 * C153521 * C130 -
          ((C78844 * C116209 + C79922 * C153727 + (C74590 + C74589) * C153720) *
               C153684 +
           (C78894 * C116209 + (C78886 + C78885) * C153727 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153720) *
               C153863) *
              C153537 * C153521 * C131 +
          (((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
             C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                C153720 +
            (C79527 + C79528) * C153727 + (C79529 + C79530) * C116209) *
               C153863 +
           ((C75029 + C75030) * C153720 + (C79209 + C79210) * C153727 +
            (C79211 + C79212) * C116209) *
               C153684) *
              C153537 * C153521 * C132 -
          (((C74288 * C1330 - C74289 * C1325 - C74288 * C1331 +
             C153472 * C1340 + C74286 * C1332 - C74287 * C1326 -
             C74286 * C1333 + C74280 * C1341) *
                C116209 +
            (C74288 * C959 - C74289 * C949 - C74288 * C960 + C153472 * C967 +
             C74286 * C957 - C74287 * C948 - C74286 * C958 + C74280 * C966) *
                C153727 +
            (C74288 * C315 - C74289 * C303 - C74288 * C316 + C153472 * C339 +
             C74286 * C317 - C74287 * C304 - C74286 * C318 + C74280 * C340) *
                C153720) *
               C153684 +
           ((C74288 * C506 - C74289 * C485 - C74288 * C507 + C153472 * C521 +
             C74286 * C504 - C74287 * C484 - C74286 * C505 + C74280 * C520) *
                C116209 +
            (C74288 * C488 - C74289 * C476 - C74288 * C489 + C153472 * C512 +
             C74286 * C490 - C74287 * C477 - C74286 * C491 + C74280 * C513) *
                C153727 +
            (C74288 * C160 - C74289 * C148 - C74288 * C161 + C153472 * C172 +
             C74286 * C158 - C74287 * C147 - C74286 * C159 + C74280 * C171) *
                C153720) *
               C153863) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153720 +
             (C78877 + C78878) * C153727 + C78893 * C116209) *
                C153863 +
            ((C74581 + C74582) * C153720 + C79917 * C153727 +
             C78795 * C116209) *
                C153684) *
               C153537 * C298 -
           ((C80715 * C116209 + C76796 * C153727 +
             (C74584 + C74583) * C153720) *
                C153684 +
            (C79918 * C116209 + C79919 * C153727 +
             (C74582 + C74581) * C153720) *
                C153863) *
               C153537 * C299 +
           ((C74597 * C153720 + C81694 * C153727 + C81695 * C116209) * C153863 +
            (C74598 * C153720 + C96665 * C153727 +
             (C76147 + C76148) * C116209) *
                C153684) *
               C153537 * C300) *
              C301 +
          ((((C74589 + C74590) * C153720 + C79920 * C153727 +
             C79921 * C116209) *
                C153863 +
            ((C74591 + C74592) * C153720 + C94919 * C153727 +
             (C78487 + C78488) * C116209) *
                C153684) *
               C153537 * C299 -
           ((C78844 * C116209 + C79922 * C153727 +
             (C74590 + C74589) * C153720) *
                C153684 +
            (C78894 * C116209 + (C78886 + C78885) * C153727 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153720) *
                C153863) *
               C153537 * C298 -
           (((C74288 * C4784 - C74289 * C4781 - C74288 * C4785 +
              C153472 * C4790 + C74286 * C4786 - C74287 * C4782 -
              C74286 * C4787 + C74280 * C4791) *
                 C116209 +
             (C75570 + C75569) * C153727 + C74599 * C153720) *
                C153684 +
            ((C78488 + C78487) * C116209 + C93644 * C153727 +
             C74600 * C153720) *
                C153863) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[245] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153720 +
             (C78877 + C78878) * C153727 + C78893 * C116209) *
                C153863 +
            ((C74581 + C74582) * C153720 + C79917 * C153727 +
             C78795 * C116209) *
                C153684) *
               C153537 * C153919 -
           ((C80715 * C116209 + C76796 * C153727 +
             (C74584 + C74583) * C153720) *
                C153684 +
            (C79918 * C116209 + C79919 * C153727 +
             (C74582 + C74581) * C153720) *
                C153863) *
               C153537 * C153920 +
           ((C74597 * C153720 + C81694 * C153727 + C81695 * C116209) * C153863 +
            (C74598 * C153720 + C96665 * C153727 +
             (C76147 + C76148) * C116209) *
                C153684) *
               C153537 * C1469) *
              C153840 +
          ((((C74589 + C74590) * C153720 + C79920 * C153727 +
             C79921 * C116209) *
                C153863 +
            ((C74591 + C74592) * C153720 + C94919 * C153727 +
             (C78487 + C78488) * C116209) *
                C153684) *
               C153537 * C153920 -
           ((C78844 * C116209 + C79922 * C153727 +
             (C74590 + C74589) * C153720) *
                C153684 +
            (C78894 * C116209 + (C78886 + C78885) * C153727 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153720) *
                C153863) *
               C153537 * C153919 -
           (((C74288 * C4784 - C74289 * C4781 - C74288 * C4785 +
              C153472 * C4790 + C74286 * C4786 - C74287 * C4782 -
              C74286 * C4787 + C74280 * C4791) *
                 C116209 +
             (C75570 + C75569) * C153727 + C74599 * C153720) *
                C153684 +
            ((C78488 + C78487) * C116209 + C93644 * C153727 +
             C74600 * C153720) *
                C153863) *
               C153537 * C1469) *
              C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[246] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153720 +
             (C78877 + C78878) * C153727 + C78893 * C116209) *
                C153863 +
            ((C74581 + C74582) * C153720 + C79917 * C153727 +
             C78795 * C116209) *
                C153684) *
               C153849 -
           ((C80697 * C116209 + C79918 * C153727 + C79919 * C153720) * C153684 +
            (C82470 * C116209 + (C78880 + C78879) * C153727 +
             (C78878 + C78877) * C153720) *
                C153863) *
               C153601) *
              C153919 +
          (((C79917 * C153720 + C78795 * C153727 + C80698 * C116209) * C153863 +
            (C81694 * C153720 + C81695 * C153727 +
             (C80726 + C80727) * C116209) *
                C153684) *
               C153601 -
           ((C80715 * C116209 + C76796 * C153727 +
             (C74584 + C74583) * C153720) *
                C153684 +
            (C79918 * C116209 + C79919 * C153727 +
             (C74582 + C74581) * C153720) *
                C153863) *
               C153849) *
              C153920 +
          (((C74597 * C153720 + C81694 * C153727 + C81695 * C116209) * C153863 +
            (C74598 * C153720 + C96665 * C153727 +
             (C76147 + C76148) * C116209) *
                C153684) *
               C153849 -
           (((C74288 * C32074 - C74289 * C32073 - C74288 * C32075 +
              C153472 * C32076 + C74286 * C30186 - C74287 * C30183 -
              C74286 * C30187 + C74280 * C30189) *
                 C116209 +
             (C76148 + C76147) * C153727 + C76795 * C153720) *
                C153684 +
            ((C80727 + C80726) * C116209 + C80715 * C153727 +
             C76796 * C153720) *
                C153863) *
               C153601) *
              C1469) *
         C153502) /
        (p * q * std::sqrt(p + q));
    d2ee[247] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153720 +
            (C78877 + C78878) * C153727 + C78893 * C116209) *
               C153863 +
           ((C74581 + C74582) * C153720 + C79917 * C153727 + C78795 * C116209) *
               C153684) *
              C153537 * C1178 -
          ((C80715 * C116209 + C76796 * C153727 + (C74584 + C74583) * C153720) *
               C153684 +
           (C79918 * C116209 + C79919 * C153727 + (C74582 + C74581) * C153720) *
               C153863) *
              C153537 * C1179 +
          ((C74597 * C153720 + C81694 * C153727 + C81695 * C116209) * C153863 +
           (C74598 * C153720 + C96665 * C153727 + (C76147 + C76148) * C116209) *
               C153684) *
              C153537 * C1180 -
          (((C74288 * C28550 - C74289 * C28547 - C74288 * C28551 +
             C153472 * C28553 + C74286 * C28548 - C74287 * C28546 -
             C74286 * C28549 + C74280 * C28552) *
                C116209 +
            (C76812 + C76811) * C153727 + C75895 * C153720) *
               C153684 +
           ((C76148 + C76147) * C116209 + C76795 * C153727 + C75896 * C153720) *
               C153863) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153720 +
             (C78877 + C78878) * C153727 + C78893 * C116209) *
                C153863 +
            ((C74581 + C74582) * C153720 + C79917 * C153727 +
             C78795 * C116209) *
                C153684) *
               C153537 * C1091 -
           ((C80715 * C116209 + C76796 * C153727 +
             (C74584 + C74583) * C153720) *
                C153684 +
            (C79918 * C116209 + C79919 * C153727 +
             (C74582 + C74581) * C153720) *
                C153863) *
               C153537 * C153573) *
              C1093 +
          ((((C74589 + C74590) * C153720 + C79920 * C153727 +
             C79921 * C116209) *
                C153863 +
            ((C74591 + C74592) * C153720 + C94919 * C153727 +
             (C78487 + C78488) * C116209) *
                C153684) *
               C153537 * C153573 -
           ((C78844 * C116209 + C79922 * C153727 +
             (C74590 + C74589) * C153720) *
                C153684 +
            (C78894 * C116209 + (C78886 + C78885) * C153727 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153720) *
                C153863) *
               C153537 * C1091) *
              C1094 +
          ((((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
              C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                 C153720 +
             (C79527 + C79528) * C153727 + (C79529 + C79530) * C116209) *
                C153863 +
            ((C75029 + C75030) * C153720 + (C79209 + C79210) * C153727 +
             (C79211 + C79212) * C116209) *
                C153684) *
               C153537 * C1091 -
           (((C74288 * C3289 - C74289 * C3282 - C74288 * C3290 +
              C153472 * C3294 + C74286 * C3287 - C74287 * C3281 -
              C74286 * C3288 + C74280 * C3293) *
                 C116209 +
             (C94242 + C94241) * C153727 + (C75032 + C75031) * C153720) *
                C153684 +
            ((C79212 + C79211) * C116209 + (C79210 + C79209) * C153727 +
             (C75030 + C75029) * C153720) *
                C153863) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153720 +
             (C78877 + C78878) * C153727 + C78893 * C116209) *
                C153863 +
            ((C74581 + C74582) * C153720 + C79917 * C153727 +
             C78795 * C116209) *
                C153684) *
               C473 -
           ((C80697 * C116209 + C79918 * C153727 + C79919 * C153720) * C153684 +
            (C82470 * C116209 + (C78880 + C78879) * C153727 +
             (C78878 + C78877) * C153720) *
                C153863) *
               C474 +
           ((C78893 * C153720 + C107823 * C153727 +
             (C82483 + C82484) * C116209) *
                C153863 +
            (C78795 * C153720 + C80698 * C153727 +
             (C80724 + C80725) * C116209) *
                C153684) *
               C475) *
              C1091 +
          (((C79917 * C153720 + C78795 * C153727 + C80698 * C116209) * C153863 +
            (C81694 * C153720 + C81695 * C153727 +
             (C80726 + C80727) * C116209) *
                C153684) *
               C474 -
           ((C80715 * C116209 + C76796 * C153727 +
             (C74584 + C74583) * C153720) *
                C153684 +
            (C79918 * C116209 + C79919 * C153727 +
             (C74582 + C74581) * C153720) *
                C153863) *
               C473 -
           (((C74288 * C31225 - C74289 * C31222 - C74288 * C31226 +
              C153472 * C31228 + C74286 * C31223 - C74287 * C31221 -
              C74286 * C31224 + C74280 * C31227) *
                 C116209 +
             (C80727 + C80726) * C153727 + C80715 * C153720) *
                C153684 +
            ((C80725 + C80724) * C116209 + C80697 * C153727 +
             C79918 * C153720) *
                C153863) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[248] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
               C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                  C153720 +
              (C78877 + C78878) * C153727 + C78893 * C116209) *
                 C153863 +
             ((C74581 + C74582) * C153720 + C79917 * C153727 +
              C78795 * C116209) *
                 C153684) *
                C153849 -
            ((C80697 * C116209 + C79918 * C153727 + C79919 * C153720) *
                 C153684 +
             (C82470 * C116209 + (C78880 + C78879) * C153727 +
              (C78878 + C78877) * C153720) *
                 C153863) *
                C153601) *
               C1091 +
           (((C79917 * C153720 + C78795 * C153727 + C80698 * C116209) *
                 C153863 +
             (C81694 * C153720 + C81695 * C153727 +
              (C80726 + C80727) * C116209) *
                 C153684) *
                C153601 -
            ((C80715 * C116209 + C76796 * C153727 +
              (C74584 + C74583) * C153720) *
                 C153684 +
             (C79918 * C116209 + C79919 * C153727 +
              (C74582 + C74581) * C153720) *
                 C153863) *
                C153849) *
               C153573) *
              C153840 +
          (((((C78885 + C78886) * C153720 + (C78887 + C78888) * C153727 +
              (C78889 + C78890) * C116209) *
                 C153863 +
             (C79920 * C153720 + C79921 * C153727 +
              (C78891 + C78892) * C116209) *
                 C153684) *
                C153601 -
            ((C78844 * C116209 + C79922 * C153727 +
              (C74590 + C74589) * C153720) *
                 C153684 +
             (C78894 * C116209 + (C78886 + C78885) * C153727 +
              (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
               C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                  C153720) *
                 C153863) *
                C153849) *
               C1091 +
           ((((C74589 + C74590) * C153720 + C79920 * C153727 +
              C79921 * C116209) *
                 C153863 +
             ((C74591 + C74592) * C153720 + C94919 * C153727 +
              (C78487 + C78488) * C116209) *
                 C153684) *
                C153849 -
            (((C74288 * C6185 - C74289 * C6179 - C74288 * C6186 +
               C153472 * C6197 + C74286 * C6187 - C74287 * C6180 -
               C74286 * C6188 + C74280 * C6198) *
                  C116209 +
              (C78488 + C78487) * C153727 + C93644 * C153720) *
                 C153684 +
             ((C78892 + C78891) * C116209 + C78844 * C153727 +
              C79922 * C153720) *
                 C153863) *
                C153601) *
               C153573) *
              C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[249] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153720 +
             (C78877 + C78878) * C153727 + C78893 * C116209) *
                C153863 +
            ((C74581 + C74582) * C153720 + C79917 * C153727 +
             C78795 * C116209) *
                C153684) *
               C153537 * C1091 -
           ((C80715 * C116209 + C76796 * C153727 +
             (C74584 + C74583) * C153720) *
                C153684 +
            (C79918 * C116209 + C79919 * C153727 +
             (C74582 + C74581) * C153720) *
                C153863) *
               C153537 * C153573) *
              C1093 +
          ((((C74589 + C74590) * C153720 + C79920 * C153727 +
             C79921 * C116209) *
                C153863 +
            ((C74591 + C74592) * C153720 + C94919 * C153727 +
             (C78487 + C78488) * C116209) *
                C153684) *
               C153537 * C153573 -
           ((C78844 * C116209 + C79922 * C153727 +
             (C74590 + C74589) * C153720) *
                C153684 +
            (C78894 * C116209 + (C78886 + C78885) * C153727 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153720) *
                C153863) *
               C153537 * C1091) *
              C1094 +
          ((((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
              C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                 C153720 +
             (C79527 + C79528) * C153727 + (C79529 + C79530) * C116209) *
                C153863 +
            ((C75029 + C75030) * C153720 + (C79209 + C79210) * C153727 +
             (C79211 + C79212) * C116209) *
                C153684) *
               C153537 * C1091 -
           (((C74288 * C3289 - C74289 * C3282 - C74288 * C3290 +
              C153472 * C3294 + C74286 * C3287 - C74287 * C3281 -
              C74286 * C3288 + C74280 * C3293) *
                 C116209 +
             (C94242 + C94241) * C153727 + (C75032 + C75031) * C153720) *
                C153684 +
            ((C79212 + C79211) * C116209 + (C79210 + C79209) * C153727 +
             (C75030 + C75029) * C153720) *
                C153863) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153720 +
            (C78877 + C78878) * C153727 + C78893 * C116209) *
               C153863 +
           ((C74581 + C74582) * C153720 + C79917 * C153727 + C78795 * C116209) *
               C153684) *
              C153537 * C1178 -
          ((C80715 * C116209 + C76796 * C153727 + (C74584 + C74583) * C153720) *
               C153684 +
           (C79918 * C116209 + C79919 * C153727 + (C74582 + C74581) * C153720) *
               C153863) *
              C153537 * C1179 +
          ((C74597 * C153720 + C81694 * C153727 + C81695 * C116209) * C153863 +
           (C74598 * C153720 + C96665 * C153727 + (C76147 + C76148) * C116209) *
               C153684) *
              C153537 * C1180 -
          (((C74288 * C28550 - C74289 * C28547 - C74288 * C28551 +
             C153472 * C28553 + C74286 * C28548 - C74287 * C28546 -
             C74286 * C28549 + C74280 * C28552) *
                C116209 +
            (C76812 + C76811) * C153727 + C75895 * C153720) *
               C153684 +
           ((C76148 + C76147) * C116209 + C76795 * C153727 + C75896 * C153720) *
               C153863) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[250] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
               C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                  C153720 +
              (C78877 + C78878) * C153727 + C78893 * C116209) *
                 C153863 +
             ((C74581 + C74582) * C153720 + C79917 * C153727 +
              C78795 * C116209) *
                 C153684) *
                C1898 -
            ((C80697 * C116209 + C79918 * C153727 + C79919 * C153720) *
                 C153684 +
             (C82470 * C116209 + (C78880 + C78879) * C153727 +
              (C78878 + C78877) * C153720) *
                 C153863) *
                C153601) *
               C153848 +
           (((C79917 * C153720 + C78795 * C153727 + C80698 * C116209) *
                 C153863 +
             (C81694 * C153720 + C81695 * C153727 +
              (C80726 + C80727) * C116209) *
                 C153684) *
                C153601 -
            ((C80715 * C116209 + C76796 * C153727 +
              (C74584 + C74583) * C153720) *
                 C153684 +
             (C79918 * C116209 + C79919 * C153727 +
              (C74582 + C74581) * C153720) *
                 C153863) *
                C1898) *
               C153573) *
              C153840 +
          (((((C78885 + C78886) * C153720 + (C78887 + C78888) * C153727 +
              (C78889 + C78890) * C116209) *
                 C153863 +
             (C79920 * C153720 + C79921 * C153727 +
              (C78891 + C78892) * C116209) *
                 C153684) *
                C153601 -
            ((C78844 * C116209 + C79922 * C153727 +
              (C74590 + C74589) * C153720) *
                 C153684 +
             (C78894 * C116209 + (C78886 + C78885) * C153727 +
              (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
               C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                  C153720) *
                 C153863) *
                C1898) *
               C153848 +
           ((((C74589 + C74590) * C153720 + C79920 * C153727 +
              C79921 * C116209) *
                 C153863 +
             ((C74591 + C74592) * C153720 + C94919 * C153727 +
              (C78487 + C78488) * C116209) *
                 C153684) *
                C1898 -
            (((C74288 * C6185 - C74289 * C6179 - C74288 * C6186 +
               C153472 * C6197 + C74286 * C6187 - C74287 * C6180 -
               C74286 * C6188 + C74280 * C6198) *
                  C116209 +
              (C78488 + C78487) * C153727 + C93644 * C153720) *
                 C153684 +
             ((C78892 + C78891) * C116209 + C78844 * C153727 +
              C79922 * C153720) *
                 C153863) *
                C153601) *
               C153573) *
              C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[251] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153720 +
             (C78877 + C78878) * C153727 + C78893 * C116209) *
                C153863 +
            ((C74581 + C74582) * C153720 + C79917 * C153727 +
             C78795 * C116209) *
                C153684) *
               C153921 -
           ((C80697 * C116209 + C79918 * C153727 + C79919 * C153720) * C153684 +
            (C82470 * C116209 + (C78880 + C78879) * C153727 +
             (C78878 + C78877) * C153720) *
                C153863) *
               C153922 +
           ((C78893 * C153720 + C107823 * C153727 +
             (C82483 + C82484) * C116209) *
                C153863 +
            (C78795 * C153720 + C80698 * C153727 +
             (C80724 + C80725) * C116209) *
                C153684) *
               C2414) *
              C153848 +
          (((C79917 * C153720 + C78795 * C153727 + C80698 * C116209) * C153863 +
            (C81694 * C153720 + C81695 * C153727 +
             (C80726 + C80727) * C116209) *
                C153684) *
               C153922 -
           ((C80715 * C116209 + C76796 * C153727 +
             (C74584 + C74583) * C153720) *
                C153684 +
            (C79918 * C116209 + C79919 * C153727 +
             (C74582 + C74581) * C153720) *
                C153863) *
               C153921 -
           (((C74288 * C31225 - C74289 * C31222 - C74288 * C31226 +
              C153472 * C31228 + C74286 * C31223 - C74287 * C31221 -
              C74286 * C31224 + C74280 * C31227) *
                 C116209 +
             (C80727 + C80726) * C153727 + C80715 * C153720) *
                C153684 +
            ((C80725 + C80724) * C116209 + C80697 * C153727 +
             C79918 * C153720) *
                C153863) *
               C2414) *
              C153573) *
         C153502) /
        (p * q * std::sqrt(p + q));
    d2ee[252] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153720 +
             (C78877 + C78878) * C153727 + C78893 * C116209) *
                C153863 +
            ((C74581 + C74582) * C153720 + C79917 * C153727 +
             C78795 * C116209) *
                C153684) *
               C1898 -
           ((C80697 * C116209 + C79918 * C153727 + C79919 * C153720) * C153684 +
            (C82470 * C116209 + (C78880 + C78879) * C153727 +
             (C78878 + C78877) * C153720) *
                C153863) *
               C153601) *
              C298 +
          (((C79917 * C153720 + C78795 * C153727 + C80698 * C116209) * C153863 +
            (C81694 * C153720 + C81695 * C153727 +
             (C80726 + C80727) * C116209) *
                C153684) *
               C153601 -
           ((C80715 * C116209 + C76796 * C153727 +
             (C74584 + C74583) * C153720) *
                C153684 +
            (C79918 * C116209 + C79919 * C153727 +
             (C74582 + C74581) * C153720) *
                C153863) *
               C1898) *
              C299 +
          (((C74597 * C153720 + C81694 * C153727 + C81695 * C116209) * C153863 +
            (C74598 * C153720 + C96665 * C153727 +
             (C76147 + C76148) * C116209) *
                C153684) *
               C1898 -
           (((C74288 * C32074 - C74289 * C32073 - C74288 * C32075 +
              C153472 * C32076 + C74286 * C30186 - C74287 * C30183 -
              C74286 * C30187 + C74280 * C30189) *
                 C116209 +
             (C76148 + C76147) * C153727 + C76795 * C153720) *
                C153684 +
            ((C80727 + C80726) * C116209 + C80715 * C153727 +
             C76796 * C153720) *
                C153863) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153720 +
             (C78877 + C78878) * C153727 + C78893 * C116209) *
                C153863 +
            ((C74581 + C74582) * C153720 + C79917 * C153727 +
             C78795 * C116209) *
                C153684) *
               C1898 -
           ((C80697 * C116209 + C79918 * C153727 + C79919 * C153720) * C153684 +
            (C82470 * C116209 + (C78880 + C78879) * C153727 +
             (C78878 + C78877) * C153720) *
                C153863) *
               C153601) *
              C153521 * C1093 +
          ((((C78885 + C78886) * C153720 + (C78887 + C78888) * C153727 +
             (C78889 + C78890) * C116209) *
                C153863 +
            (C79920 * C153720 + C79921 * C153727 +
             (C78891 + C78892) * C116209) *
                C153684) *
               C153601 -
           ((C78844 * C116209 + C79922 * C153727 +
             (C74590 + C74589) * C153720) *
                C153684 +
            (C78894 * C116209 + (C78886 + C78885) * C153727 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153720) *
                C153863) *
               C1898) *
              C153521 * C1094 +
          ((((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
              C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                 C153720 +
             (C79527 + C79528) * C153727 + (C79529 + C79530) * C116209) *
                C153863 +
            ((C75029 + C75030) * C153720 + (C79209 + C79210) * C153727 +
             (C79211 + C79212) * C116209) *
                C153684) *
               C1898 -
           (((C74288 * C8429 - C74289 * C8428 - C74288 * C8430 +
              C153472 * C8431 + C74286 * C6191 - C74287 * C6182 -
              C74286 * C6192 + C74280 * C6200) *
                 C116209 +
             (C79212 + C79211) * C153727 + (C79210 + C79209) * C153720) *
                C153684 +
            ((C108240 + C108239) * C116209 + (C79530 + C79529) * C153727 +
             (C79528 + C79527) * C153720) *
                C153863) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153720 +
            (C78877 + C78878) * C153727 + C78893 * C116209) *
               C153863 +
           ((C74581 + C74582) * C153720 + C79917 * C153727 + C78795 * C116209) *
               C153684) *
              C2104 -
          ((C80697 * C116209 + C79918 * C153727 + C79919 * C153720) * C153684 +
           (C82470 * C116209 + (C78880 + C78879) * C153727 +
            (C78878 + C78877) * C153720) *
               C153863) *
              C2105 +
          ((C78893 * C153720 + C107823 * C153727 +
            (C82483 + C82484) * C116209) *
               C153863 +
           (C78795 * C153720 + C80698 * C153727 + (C80724 + C80725) * C116209) *
               C153684) *
              C2106 -
          (((C74288 * C56477 - C74289 * C56476 - C74288 * C56478 +
             C153472 * C56479 + C74286 * C34024 - C74287 * C34021 -
             C74286 * C34025 + C74280 * C34027) *
                C116209 +
            (C80725 + C80724) * C153727 + C80697 * C153720) *
               C153684 +
           ((C110195 + C110194) * C116209 + C110181 * C153727 +
            C82470 * C153720) *
               C153863) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[253] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153720 +
             (C78877 + C78878) * C153727 + C78893 * C116209) *
                C153863 +
            ((C74581 + C74582) * C153720 + C79917 * C153727 +
             C78795 * C116209) *
                C153684) *
               C153921 -
           ((C80697 * C116209 + C79918 * C153727 + C79919 * C153720) * C153684 +
            (C82470 * C116209 + (C78880 + C78879) * C153727 +
             (C78878 + C78877) * C153720) *
                C153863) *
               C153922 +
           ((C78893 * C153720 + C107823 * C153727 +
             (C82483 + C82484) * C116209) *
                C153863 +
            (C78795 * C153720 + C80698 * C153727 +
             (C80724 + C80725) * C116209) *
                C153684) *
               C2414) *
              C153521 * C153840 +
          ((((C78885 + C78886) * C153720 + (C78887 + C78888) * C153727 +
             (C78889 + C78890) * C116209) *
                C153863 +
            (C79920 * C153720 + C79921 * C153727 +
             (C78891 + C78892) * C116209) *
                C153684) *
               C153922 -
           ((C78844 * C116209 + C79922 * C153727 +
             (C74590 + C74589) * C153720) *
                C153684 +
            (C78894 * C116209 + (C78886 + C78885) * C153727 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153720) *
                C153863) *
               C153921 -
           (((C74288 * C9038 - C74289 * C9035 - C74288 * C9039 +
              C153472 * C9044 + C74286 * C9040 - C74287 * C9036 -
              C74286 * C9041 + C74280 * C9045) *
                 C116209 +
             (C78892 + C78891) * C153727 + C78844 * C153720) *
                C153684 +
            ((C107838 + C107837) * C116209 + C107832 * C153727 +
             C78894 * C153720) *
                C153863) *
               C2414) *
              C153521 * C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[254] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153720 +
             (C78877 + C78878) * C153727 + C78893 * C116209) *
                C153863 +
            ((C74581 + C74582) * C153720 + C79917 * C153727 +
             C78795 * C116209) *
                C153684) *
               C1898 -
           ((C80697 * C116209 + C79918 * C153727 + C79919 * C153720) * C153684 +
            (C82470 * C116209 + (C78880 + C78879) * C153727 +
             (C78878 + C78877) * C153720) *
                C153863) *
               C153601) *
              C153521 * C1093 +
          ((((C78885 + C78886) * C153720 + (C78887 + C78888) * C153727 +
             (C78889 + C78890) * C116209) *
                C153863 +
            (C79920 * C153720 + C79921 * C153727 +
             (C78891 + C78892) * C116209) *
                C153684) *
               C153601 -
           ((C78844 * C116209 + C79922 * C153727 +
             (C74590 + C74589) * C153720) *
                C153684 +
            (C78894 * C116209 + (C78886 + C78885) * C153727 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153720) *
                C153863) *
               C1898) *
              C153521 * C1094 +
          ((((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
              C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                 C153720 +
             (C79527 + C79528) * C153727 + (C79529 + C79530) * C116209) *
                C153863 +
            ((C75029 + C75030) * C153720 + (C79209 + C79210) * C153727 +
             (C79211 + C79212) * C116209) *
                C153684) *
               C1898 -
           (((C74288 * C8429 - C74289 * C8428 - C74288 * C8430 +
              C153472 * C8431 + C74286 * C6191 - C74287 * C6182 -
              C74286 * C6192 + C74280 * C6200) *
                 C116209 +
             (C79212 + C79211) * C153727 + (C79210 + C79209) * C153720) *
                C153684 +
            ((C108240 + C108239) * C116209 + (C79530 + C79529) * C153727 +
             (C79528 + C79527) * C153720) *
                C153863) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153720 +
             (C78877 + C78878) * C153727 + C78893 * C116209) *
                C153863 +
            ((C74581 + C74582) * C153720 + C79917 * C153727 +
             C78795 * C116209) *
                C153684) *
               C1898 -
           ((C80697 * C116209 + C79918 * C153727 + C79919 * C153720) * C153684 +
            (C82470 * C116209 + (C78880 + C78879) * C153727 +
             (C78878 + C78877) * C153720) *
                C153863) *
               C153601) *
              C298 +
          (((C79917 * C153720 + C78795 * C153727 + C80698 * C116209) * C153863 +
            (C81694 * C153720 + C81695 * C153727 +
             (C80726 + C80727) * C116209) *
                C153684) *
               C153601 -
           ((C80715 * C116209 + C76796 * C153727 +
             (C74584 + C74583) * C153720) *
                C153684 +
            (C79918 * C116209 + C79919 * C153727 +
             (C74582 + C74581) * C153720) *
                C153863) *
               C1898) *
              C299 +
          (((C74597 * C153720 + C81694 * C153727 + C81695 * C116209) * C153863 +
            (C74598 * C153720 + C96665 * C153727 +
             (C76147 + C76148) * C116209) *
                C153684) *
               C1898 -
           (((C74288 * C32074 - C74289 * C32073 - C74288 * C32075 +
              C153472 * C32076 + C74286 * C30186 - C74287 * C30183 -
              C74286 * C30187 + C74280 * C30189) *
                 C116209 +
             (C76148 + C76147) * C153727 + C76795 * C153720) *
                C153684 +
            ((C80727 + C80726) * C116209 + C80715 * C153727 +
             C76796 * C153720) *
                C153863) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[255] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C98536 +
             (C78877 + C78878) * C153724) *
                C153936 +
            ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
            C102557 * C153898) *
               C153537 * C153848 -
           ((C76795 * C153724 + C75896 * C98536) * C153898 +
            (C76796 * C153724 + (C74584 + C74583) * C98536) * C153924 +
            (C79919 * C153724 + (C74582 + C74581) * C98536) * C153936) *
               C153537 * C153573) *
              C153917 +
          ((((C74589 + C74590) * C98536 + C79920 * C153724) * C153936 +
            ((C74591 + C74592) * C98536 + C94919 * C153724) * C153924 +
            ((C74593 + C74594) * C98536 + (C75569 + C75570) * C153724) *
                C153898) *
               C153537 * C153573 -
           (C102558 * C153898 +
            (C79922 * C153724 + (C74590 + C74589) * C98536) * C153924 +
            ((C78886 + C78885) * C153724 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C98536) *
                C153936) *
               C153537 * C153848) *
              C153918 +
          ((((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
              C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                 C98536 +
             (C79527 + C79528) * C153724) *
                C153936 +
            ((C75029 + C75030) * C98536 + (C79209 + C79210) * C153724) *
                C153924 +
            ((C75031 + C75032) * C98536 + (C94241 + C94242) * C153724) *
                C153898) *
               C153537 * C153848 -
           (((C74288 * C4073 - C74289 * C4066 - C74288 * C4074 +
              C153472 * C4078 + C74286 * C4071 - C74287 * C4065 -
              C74286 * C4072 + C74280 * C4077) *
                 C153724 +
             (C75034 + C75033) * C98536) *
                C153898 +
            ((C94242 + C94241) * C153724 + (C75032 + C75031) * C98536) *
                C153924 +
            ((C79210 + C79209) * C153724 + (C75030 + C75029) * C98536) *
                C153936) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C98536 +
            (C99023 + C99024 + C99025 + C99026) * C153724) *
               C153625 * C153537 * C153848 -
           ((C71731 + C71732 + C71733 + C71734) * C153724 +
            (C70802 + C70801 + C70800 + C70799) * C98536) *
               C153625 * C153537 * C153573) *
              C153917 +
          (((C70807 + C70808 + C70809 + C70810) * C98536 +
            (C71735 + C71736 + C71737 + C71738) * C153724) *
               C153625 * C153537 * C153573 -
           ((C99034 + C99033 + C99032 + C99031) * C153724 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C98536) *
               C153625 * C153537 * C153848) *
              C153918 +
          (((C70500 * C156 - C70501 * C146 - C70500 * C157 + C153942 * C170 +
             C70502 * C158 - C70503 * C147 - C70502 * C159 + C153935 * C171 +
             C70504 * C160 - C70505 * C148 - C70504 * C161 + C153916 * C172 +
             C70506 * C162 - C70507 * C149 - C70506 * C163 + C153862 * C173) *
                C98536 +
            (C70500 * C492 - C70501 * C478 - C70500 * C493 + C153942 * C514 +
             C70502 * C490 - C70503 * C477 - C70502 * C491 + C153935 * C513 +
             C70504 * C488 - C70505 * C476 - C70504 * C489 + C153916 * C512 +
             C70506 * C508 - C70507 * C486 - C70506 * C509 + C153862 * C522) *
                C153724) *
               C153625 * C153537 * C153848 -
           ((C70506 * C961 - C70507 * C950 - C70506 * C962 + C153862 * C968 +
             C70504 * C959 - C70505 * C949 - C70504 * C960 + C153916 * C967 +
             C70502 * C957 - C70503 * C948 - C70502 * C958 + C153935 * C966 +
             C70500 * C955 - C70501 * C947 - C70500 * C956 + C153942 * C965) *
                C153724 +
            (C71230 + C71229 + C71228 + C71227) * C98536) *
               C153625 * C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153944 +
            (C78877 + C78878) * C153941 + C78893 * C153932 +
            C107823 * C153878) *
               C153625 * C153537 * C153848 -
           (C80697 * C153878 + C79918 * C153932 + C79919 * C153941 +
            (C74582 + C74581) * C153944) *
               C153625 * C153537 * C153573) *
              C153917 +
          (((C74589 + C74590) * C153944 + C79920 * C153941 + C79921 * C153932 +
            (C78891 + C78892) * C153878) *
               C153625 * C153537 * C153573 -
           (C107832 * C153878 + C78894 * C153932 + (C78886 + C78885) * C153941 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153944) *
               C153625 * C153537 * C153848) *
              C153918 +
          (((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
             C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                C153944 +
            (C79527 + C79528) * C153941 + (C79529 + C79530) * C153932 +
            (C74286 * C2117 - C74287 * C2110 - C74286 * C2118 + C74280 * C2125 +
             C74288 * C2115 - C74289 * C2109 - C74288 * C2116 +
             C153472 * C2124) *
                C153878) *
               C153625 * C153537 * C153848 -
           ((C74288 * C8429 - C74289 * C8428 - C74288 * C8430 +
             C153472 * C8431 + C74286 * C6191 - C74287 * C6182 -
             C74286 * C6192 + C74280 * C6200) *
                C153878 +
            (C79212 + C79211) * C153932 + (C79210 + C79209) * C153941 +
            (C75030 + C75029) * C153944) *
               C153625 * C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q));
    d2ee[256] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
               C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                  C98536 +
              (C78877 + C78878) * C153724) *
                 C153936 +
             ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
             C102557 * C153898) *
                C153849 -
            ((C80715 * C153724 + C76796 * C98536) * C153898 +
             (C79918 * C153724 + C79919 * C98536) * C153924 +
             ((C78880 + C78879) * C153724 + (C78878 + C78877) * C98536) *
                 C153936) *
                C153601) *
               C153848 +
           (((C79917 * C98536 + C78795 * C153724) * C153936 +
             (C81694 * C98536 + C81695 * C153724) * C153924 +
             (C96665 * C98536 + (C76147 + C76148) * C153724) * C153898) *
                C153601 -
            ((C76795 * C153724 + C75896 * C98536) * C153898 +
             (C76796 * C153724 + (C74584 + C74583) * C98536) * C153924 +
             (C79919 * C153724 + (C74582 + C74581) * C98536) * C153936) *
                C153849) *
               C153573) *
              C301 +
          (((((C78885 + C78886) * C98536 + (C78887 + C78888) * C153724) *
                 C153936 +
             (C79920 * C98536 + C79921 * C153724) * C153924 +
             (C94919 * C98536 + (C78487 + C78488) * C153724) * C153898) *
                C153601 -
            (C102558 * C153898 +
             (C79922 * C153724 + (C74590 + C74589) * C98536) * C153924 +
             ((C78886 + C78885) * C153724 +
              (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
               C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                  C98536) *
                 C153936) *
                C153849) *
               C153848 +
           ((((C74589 + C74590) * C98536 + C79920 * C153724) * C153936 +
             ((C74591 + C74592) * C98536 + C94919 * C153724) * C153924 +
             ((C74593 + C74594) * C98536 + (C75569 + C75570) * C153724) *
                 C153898) *
                C153849 -
            (((C74288 * C4784 - C74289 * C4781 - C74288 * C4785 +
               C153472 * C4790 + C74286 * C4786 - C74287 * C4782 -
               C74286 * C4787 + C74280 * C4791) *
                  C153724 +
              (C75570 + C75569) * C98536) *
                 C153898 +
             ((C78488 + C78487) * C153724 + C93644 * C98536) * C153924 +
             (C78844 * C153724 + C79922 * C98536) * C153936) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
              C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
              C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
              C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                 C98536 +
             (C99023 + C99024 + C99025 + C99026) * C153724) *
                C153625 * C153849 -
            ((C99027 + C99028 + C99029 + C99030) * C153724 +
             (C99026 + C99025 + C99024 + C99023) * C98536) *
                C153625 * C153601) *
               C153848 +
           (((C71734 + C71733 + C71732 + C71731) * C98536 +
             (C72309 + C72310 + C72311 + C72312) * C153724) *
                C153625 * C153601 -
            ((C71731 + C71732 + C71733 + C71734) * C153724 +
             (C70802 + C70801 + C70800 + C70799) * C98536) *
                C153625 * C153849) *
               C153573) *
              C301 +
          ((((C99031 + C99032 + C99033 + C99034) * C98536 +
             (C99035 + C99036 + C99037 + C99038) * C153724) *
                C153625 * C153601 -
            ((C99034 + C99033 + C99032 + C99031) * C153724 +
             (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
              C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
              C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
              C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                 C98536) *
                C153625 * C153849) *
               C153848 +
           (((C70807 + C70808 + C70809 + C70810) * C98536 +
             (C71735 + C71736 + C71737 + C71738) * C153724) *
                C153625 * C153849 -
            ((C70506 * C1330 - C70507 * C1325 - C70506 * C1331 +
              C153862 * C1340 + C70504 * C1332 - C70505 * C1326 -
              C70504 * C1333 + C153916 * C1341 + C70502 * C1334 -
              C70503 * C1327 - C70502 * C1335 + C153935 * C1342 +
              C70500 * C1336 - C70501 * C1328 - C70500 * C1337 +
              C153942 * C1343) *
                 C153724 +
             (C71738 + C71737 + C71736 + C71735) * C98536) *
                C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153944 +
             (C78877 + C78878) * C153941 + C78893 * C153932 +
             C107823 * C153878) *
                C153625 * C153849 -
            ((C82484 + C82483) * C153878 + C82470 * C153932 +
             (C78880 + C78879) * C153941 + (C78878 + C78877) * C153944) *
                C153625 * C153601) *
               C153848 +
           ((C79917 * C153944 + C78795 * C153941 + C80698 * C153932 +
             (C80724 + C80725) * C153878) *
                C153625 * C153601 -
            (C80697 * C153878 + C79918 * C153932 + C79919 * C153941 +
             (C74582 + C74581) * C153944) *
                C153625 * C153849) *
               C153573) *
              C301 +
          ((((C78885 + C78886) * C153944 + (C78887 + C78888) * C153941 +
             (C78889 + C78890) * C153932 + (C107837 + C107838) * C153878) *
                C153625 * C153601 -
            (C107832 * C153878 + C78894 * C153932 +
             (C78886 + C78885) * C153941 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153944) *
                C153625 * C153849) *
               C153848 +
           (((C74589 + C74590) * C153944 + C79920 * C153941 + C79921 * C153932 +
             (C78891 + C78892) * C153878) *
                C153625 * C153849 -
            ((C74288 * C9038 - C74289 * C9035 - C74288 * C9039 +
              C153472 * C9044 + C74286 * C9040 - C74287 * C9036 -
              C74286 * C9041 + C74280 * C9045) *
                 C153878 +
             (C78892 + C78891) * C153932 + C78844 * C153941 +
             C79922 * C153944) *
                C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[257] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
                C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
                C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
                C70506 * C158 - C70507 * C147 - C70506 * C159 +
                C153862 * C171) *
                   C98536 +
               (C70500 * C496 - C70501 * C480 - C70500 * C497 + C153942 * C516 +
                C70502 * C494 - C70503 * C479 - C70502 * C495 + C153935 * C515 +
                C70504 * C492 - C70505 * C478 - C70504 * C493 + C153916 * C514 +
                C70506 * C490 - C70507 * C477 - C70506 * C491 +
                C153862 * C513) *
                   C153724) *
                  C153625 * C153537 * C153521 * C130 -
              ((C70506 * C488 - C70507 * C476 - C70506 * C489 + C153862 * C512 +
                C70504 * C490 - C70505 * C477 - C70504 * C491 + C153916 * C513 +
                C70502 * C492 - C70503 * C478 - C70502 * C493 + C153935 * C514 +
                C70500 * C494 - C70501 * C479 - C70500 * C495 +
                C153942 * C515) *
                   C153724 +
               (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
                C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
                C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
                C70500 * C154 - C70501 * C145 - C70500 * C155 +
                C153942 * C169) *
                   C98536) *
                  C153625 * C153537 * C153521 * C131 +
              ((C70500 * C156 - C70501 * C146 - C70500 * C157 + C153942 * C170 +
                C70502 * C158 - C70503 * C147 - C70502 * C159 + C153935 * C171 +
                C70504 * C160 - C70505 * C148 - C70504 * C161 + C153916 * C172 +
                C70506 * C162 - C70507 * C149 - C70506 * C163 +
                C153862 * C173) *
                   C98536 +
               (C70500 * C492 - C70501 * C478 - C70500 * C493 + C153942 * C514 +
                C70502 * C490 - C70503 * C477 - C70502 * C491 + C153935 * C513 +
                C70504 * C488 - C70505 * C476 - C70504 * C489 + C153916 * C512 +
                C70506 * C508 - C70507 * C486 - C70506 * C509 +
                C153862 * C522) *
                   C153724) *
                  C153625 * C153537 * C153521 * C132 -
              ((C70506 * C780 - C70507 * C779 - C70506 * C781 + C153862 * C782 +
                C70504 * C508 - C70505 * C486 - C70504 * C509 + C153916 * C522 +
                C70502 * C488 - C70503 * C476 - C70502 * C489 + C153935 * C512 +
                C70500 * C490 - C70501 * C477 - C70500 * C491 +
                C153942 * C513) *
                   C153724 +
               (C70506 * C164 - C70507 * C150 - C70506 * C165 + C153862 * C174 +
                C70504 * C162 - C70505 * C149 - C70504 * C163 + C153916 * C173 +
                C70502 * C160 - C70503 * C148 - C70502 * C161 + C153935 * C172 +
                C70500 * C158 - C70501 * C147 - C70500 * C159 +
                C153942 * C171) *
                   C98536) *
                  C153625 * C153537 * C153521 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C70500 * C152 - C70501 * C144 - C70500 * C153 +
                 C153942 * C168 + C70502 * C154 - C70503 * C145 -
                 C70502 * C155 + C153935 * C169 + C70504 * C156 -
                 C70505 * C146 - C70504 * C157 + C153916 * C170 +
                 C70506 * C158 - C70507 * C147 - C70506 * C159 +
                 C153862 * C171) *
                    C98536 +
                (C70500 * C496 - C70501 * C480 - C70500 * C497 +
                 C153942 * C516 + C70502 * C494 - C70503 * C479 -
                 C70502 * C495 + C153935 * C515 + C70504 * C492 -
                 C70505 * C478 - C70504 * C493 + C153916 * C514 +
                 C70506 * C490 - C70507 * C477 - C70506 * C491 +
                 C153862 * C513) *
                    C153724) *
                   C153625 * C153537 * C298 -
               ((C71731 + C71732 + C71733 + C71734) * C153724 +
                (C70802 + C70801 + C70800 + C70799) * C98536) *
                   C153625 * C153537 * C299 +
               ((C70806 + C70805 + C70804 + C70803) * C98536 +
                (C72983 + C72984 + C72985 + C72986) * C153724) *
                   C153625 * C153537 * C300) *
                  C301 +
              (((C70807 + C70808 + C70809 + C70810) * C98536 +
                (C71735 + C71736 + C71737 + C71738) * C153724) *
                   C153625 * C153537 * C299 -
               ((C70506 * C488 - C70507 * C476 - C70506 * C489 +
                 C153862 * C512 + C70504 * C490 - C70505 * C477 -
                 C70504 * C491 + C153916 * C513 + C70502 * C492 -
                 C70503 * C478 - C70502 * C493 + C153935 * C514 +
                 C70500 * C494 - C70501 * C479 - C70500 * C495 +
                 C153942 * C515) *
                    C153724 +
                (C70506 * C160 - C70507 * C148 - C70506 * C161 +
                 C153862 * C172 + C70504 * C158 - C70505 * C147 -
                 C70504 * C159 + C153916 * C171 + C70502 * C156 -
                 C70503 * C146 - C70502 * C157 + C153935 * C170 +
                 C70500 * C154 - C70501 * C145 - C70500 * C155 +
                 C153942 * C169) *
                    C98536) *
                   C153625 * C153537 * C298 -
               ((C70506 * C1761 - C70507 * C1756 - C70506 * C1762 +
                 C153862 * C1771 + C70504 * C1763 - C70505 * C1757 -
                 C70504 * C1764 + C153916 * C1772 + C70502 * C1765 -
                 C70503 * C1758 - C70502 * C1766 + C153935 * C1773 +
                 C70500 * C1767 - C70501 * C1759 - C70500 * C1768 +
                 C153942 * C1774) *
                    C153724 +
                (C70814 + C70813 + C70812 + C70811) * C98536) *
                   C153625 * C153537 * C300) *
                  C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C98536 +
            (C99023 + C99024 + C99025 + C99026) * C153724) *
               C153625 * C473 -
           ((C99027 + C99028 + C99029 + C99030) * C153724 +
            (C99026 + C99025 + C99024 + C99023) * C98536) *
               C153625 * C474 +
           ((C99030 + C99029 + C99028 + C99027) * C98536 +
            (C70500 * C2121 - C70501 * C2112 - C70500 * C2122 +
             C153942 * C2127 + C70502 * C2119 - C70503 * C2111 -
             C70502 * C2120 + C153935 * C2126 + C70504 * C2117 -
             C70505 * C2110 - C70504 * C2118 + C153916 * C2125 +
             C70506 * C2115 - C70507 * C2109 - C70506 * C2116 +
             C153862 * C2124) *
                C153724) *
               C153625 * C475) *
              C153521 * C301 +
          (((C99031 + C99032 + C99033 + C99034) * C98536 +
            (C99035 + C99036 + C99037 + C99038) * C153724) *
               C153625 * C474 -
           ((C99034 + C99033 + C99032 + C99031) * C153724 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C98536) *
               C153625 * C473 -
           ((C70506 * C2113 - C70507 * C2108 - C70506 * C2114 +
             C153862 * C2123 + C70504 * C2115 - C70505 * C2109 -
             C70504 * C2116 + C153916 * C2124 + C70502 * C2117 -
             C70503 * C2110 - C70502 * C2118 + C153935 * C2125 +
             C70500 * C2119 - C70501 * C2111 - C70500 * C2120 +
             C153942 * C2126) *
                C153724 +
            (C99038 + C99037 + C99036 + C99035) * C98536) *
               C153625 * C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C98536 +
            (C78877 + C78878) * C153724) *
               C153936 +
           ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
           (C74597 * C98536 + C81694 * C153724) * C153898) *
              C153537 * C153521 * C130 -
          ((C93644 * C153724 + C74600 * C98536) * C153898 +
           (C79922 * C153724 + (C74590 + C74589) * C98536) * C153924 +
           ((C78886 + C78885) * C153724 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C98536) *
               C153936) *
              C153537 * C153521 * C131 +
          (((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
             C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                C98536 +
            (C79527 + C79528) * C153724) *
               C153936 +
           ((C75029 + C75030) * C98536 + (C79209 + C79210) * C153724) *
               C153924 +
           ((C75031 + C75032) * C98536 + (C94241 + C94242) * C153724) *
               C153898) *
              C153537 * C153521 * C132 -
          (((C74288 * C1761 - C74289 * C1756 - C74288 * C1762 +
             C153472 * C1771 + C74286 * C1763 - C74287 * C1757 -
             C74286 * C1764 + C74280 * C1772) *
                C153724 +
            (C74288 * C333 - C74289 * C312 - C74288 * C334 + C153472 * C348 +
             C74286 * C331 - C74287 * C311 - C74286 * C332 + C74280 * C347) *
                C98536) *
               C153898 +
           ((C74288 * C959 - C74289 * C949 - C74288 * C960 + C153472 * C967 +
             C74286 * C957 - C74287 * C948 - C74286 * C958 + C74280 * C966) *
                C153724 +
            (C74288 * C315 - C74289 * C303 - C74288 * C316 + C153472 * C339 +
             C74286 * C317 - C74287 * C304 - C74286 * C318 + C74280 * C340) *
                C98536) *
               C153924 +
           ((C74288 * C488 - C74289 * C476 - C74288 * C489 + C153472 * C512 +
             C74286 * C490 - C74287 * C477 - C74286 * C491 + C74280 * C513) *
                C153724 +
            (C74288 * C160 - C74289 * C148 - C74288 * C161 + C153472 * C172 +
             C74286 * C158 - C74287 * C147 - C74286 * C159 + C74280 * C171) *
                C98536) *
               C153936) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C98536 +
             (C78877 + C78878) * C153724) *
                C153936 +
            ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
            C102557 * C153898) *
               C153537 * C298 -
           ((C76795 * C153724 + C75896 * C98536) * C153898 +
            (C76796 * C153724 + (C74584 + C74583) * C98536) * C153924 +
            (C79919 * C153724 + (C74582 + C74581) * C98536) * C153936) *
               C153537 * C299 +
           (C102557 * C153936 + (C74598 * C98536 + C96665 * C153724) * C153924 +
            ((C74588 + C74587) * C98536 + (C76811 + C76812) * C153724) *
                C153898) *
               C153537 * C300) *
              C301 +
          ((((C74589 + C74590) * C98536 + C79920 * C153724) * C153936 +
            ((C74591 + C74592) * C98536 + C94919 * C153724) * C153924 +
            ((C74593 + C74594) * C98536 + (C75569 + C75570) * C153724) *
                C153898) *
               C153537 * C299 -
           (C102558 * C153898 +
            (C79922 * C153724 + (C74590 + C74589) * C98536) * C153924 +
            ((C78886 + C78885) * C153724 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C98536) *
                C153936) *
               C153537 * C298 -
           (((C74288 * C5564 - C74289 * C5561 - C74288 * C5565 +
              C153472 * C5570 + C74286 * C5566 - C74287 * C5562 -
              C74286 * C5567 + C74280 * C5571) *
                 C153724 +
             (C74596 + C74595) * C98536) *
                C153898 +
            ((C75570 + C75569) * C153724 + C74599 * C98536) * C153924 +
            C102558 * C153936) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C98536 +
             (C78877 + C78878) * C153724) *
                C153936 +
            ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
            C102557 * C153898) *
               C473 -
           ((C80715 * C153724 + C76796 * C98536) * C153898 +
            (C79918 * C153724 + C79919 * C98536) * C153924 +
            ((C78880 + C78879) * C153724 + (C78878 + C78877) * C98536) *
                C153936) *
               C474 +
           ((C78893 * C98536 + (C78884 + C78883) * C153724) * C153936 +
            (C78795 * C98536 + C80698 * C153724) * C153924 +
            (C81695 * C98536 + (C80726 + C80727) * C153724) * C153898) *
               C475) *
              C153521 * C301 +
          ((((C78885 + C78886) * C98536 + (C78887 + C78888) * C153724) *
                C153936 +
            (C79920 * C98536 + C79921 * C153724) * C153924 +
            (C94919 * C98536 + (C78487 + C78488) * C153724) * C153898) *
               C474 -
           (C102558 * C153898 +
            (C79922 * C153724 + (C74590 + C74589) * C98536) * C153924 +
            ((C78886 + C78885) * C153724 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C98536) *
                C153936) *
               C473 -
           (((C74288 * C6185 - C74289 * C6179 - C74288 * C6186 +
              C153472 * C6197 + C74286 * C6187 - C74287 * C6180 -
              C74286 * C6188 + C74280 * C6198) *
                 C153724 +
             (C78488 + C78487) * C98536) *
                C153898 +
            ((C78892 + C78891) * C153724 + C78844 * C98536) * C153924 +
            ((C78890 + C78889) * C153724 + C78894 * C98536) * C153936) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
            C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
               C153944 +
           (C78877 + C78878) * C153941 + C78893 * C153932 +
           (C78884 + C78883) * C153878) *
              C153625 * C153537 * C153521 * C130 -
          ((C78890 + C78889) * C153878 + C78894 * C153932 +
           (C78886 + C78885) * C153941 +
           (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
            C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
               C153944) *
              C153625 * C153537 * C153521 * C131 +
          ((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
            C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
               C153944 +
           (C79527 + C79528) * C153941 + (C79529 + C79530) * C153932 +
           (C74286 * C2117 - C74287 * C2110 - C74286 * C2118 + C74280 * C2125 +
            C74288 * C2115 - C74289 * C2109 - C74288 * C2116 +
            C153472 * C2124) *
               C153878) *
              C153625 * C153537 * C153521 * C132 -
          ((C74288 * C2113 - C74289 * C2108 - C74288 * C2114 + C153472 * C2123 +
            C74286 * C2115 - C74287 * C2109 - C74286 * C2116 + C74280 * C2124) *
               C153878 +
           (C74288 * C506 - C74289 * C485 - C74288 * C507 + C153472 * C521 +
            C74286 * C504 - C74287 * C484 - C74286 * C505 + C74280 * C520) *
               C153932 +
           (C74288 * C488 - C74289 * C476 - C74288 * C489 + C153472 * C512 +
            C74286 * C490 - C74287 * C477 - C74286 * C491 + C74280 * C513) *
               C153941 +
           (C74288 * C160 - C74289 * C148 - C74288 * C161 + C153472 * C172 +
            C74286 * C158 - C74287 * C147 - C74286 * C159 + C74280 * C171) *
               C153944) *
              C153625 * C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153944 +
            (C78877 + C78878) * C153941 + C78893 * C153932 +
            (C78884 + C78883) * C153878) *
               C153625 * C153537 * C298 -
           (C80697 * C153878 + C79918 * C153932 + C79919 * C153941 +
            (C74582 + C74581) * C153944) *
               C153625 * C153537 * C299 +
           (C74597 * C153944 + C81694 * C153941 + C81695 * C153932 +
            (C80726 + C80727) * C153878) *
               C153625 * C153537 * C300) *
              C301 +
          (((C74589 + C74590) * C153944 + C79920 * C153941 + C79921 * C153932 +
            (C78891 + C78892) * C153878) *
               C153625 * C153537 * C299 -
           ((C78890 + C78889) * C153878 + C78894 * C153932 +
            (C78886 + C78885) * C153941 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153944) *
               C153625 * C153537 * C298 -
           ((C74288 * C6185 - C74289 * C6179 - C74288 * C6186 +
             C153472 * C6197 + C74286 * C6187 - C74287 * C6180 -
             C74286 * C6188 + C74280 * C6198) *
                C153878 +
            (C78488 + C78487) * C153932 + C93644 * C153941 + C74600 * C153944) *
               C153625 * C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153944 +
            (C78877 + C78878) * C153941 + C78893 * C153932 +
            C107823 * C153878) *
               C153625 * C473 -
           ((C82484 + C82483) * C153878 + C82470 * C153932 +
            (C78880 + C78879) * C153941 + (C78878 + C78877) * C153944) *
               C153625 * C474 +
           (C78893 * C153944 + C107823 * C153941 + (C82483 + C82484) * C153932 +
            (C74286 * C10385 - C74287 * C10380 - C74286 * C10386 +
             C74280 * C10389 + C74288 * C10383 - C74289 * C10379 -
             C74288 * C10384 + C153472 * C10388) *
                C153878) *
               C153625 * C475) *
              C153521 * C301 +
          (((C78885 + C78886) * C153944 + (C78887 + C78888) * C153941 +
            (C78889 + C78890) * C153932 + (C107837 + C107838) * C153878) *
               C153625 * C474 -
           (C107832 * C153878 + C78894 * C153932 + (C78886 + C78885) * C153941 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153944) *
               C153625 * C473 -
           ((C74288 * C10381 - C74289 * C10378 - C74288 * C10382 +
             C153472 * C10387 + C74286 * C10383 - C74287 * C10379 -
             C74286 * C10384 + C74280 * C10388) *
                C153878 +
            (C107838 + C107837) * C153932 + C107832 * C153941 +
            C78894 * C153944) *
               C153625 * C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[258] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C98536 +
             (C78877 + C78878) * C153724) *
                C153936 +
            ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
            C102557 * C153898) *
               C153849 -
           ((C80715 * C153724 + C76796 * C98536) * C153898 +
            (C79918 * C153724 + C79919 * C98536) * C153924 +
            ((C78880 + C78879) * C153724 + (C78878 + C78877) * C98536) *
                C153936) *
               C153601) *
              C153521 * C153917 +
          ((((C78885 + C78886) * C98536 + (C78887 + C78888) * C153724) *
                C153936 +
            (C79920 * C98536 + C79921 * C153724) * C153924 +
            (C94919 * C98536 + (C78487 + C78488) * C153724) * C153898) *
               C153601 -
           (C102558 * C153898 +
            (C79922 * C153724 + (C74590 + C74589) * C98536) * C153924 +
            ((C78886 + C78885) * C153724 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C98536) *
                C153936) *
               C153849) *
              C153521 * C153918 +
          ((((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
              C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                 C98536 +
             (C79527 + C79528) * C153724) *
                C153936 +
            ((C75029 + C75030) * C98536 + (C79209 + C79210) * C153724) *
                C153924 +
            ((C75031 + C75032) * C98536 + (C94241 + C94242) * C153724) *
                C153898) *
               C153849 -
           (((C74288 * C3289 - C74289 * C3282 - C74288 * C3290 +
              C153472 * C3294 + C74286 * C3287 - C74287 * C3281 -
              C74286 * C3288 + C74280 * C3293) *
                 C153724 +
             (C94242 + C94241) * C98536) *
                C153898 +
            ((C79212 + C79211) * C153724 + (C79210 + C79209) * C98536) *
                C153924 +
            ((C79530 + C79529) * C153724 + (C79528 + C79527) * C98536) *
                C153936) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C98536 +
            (C99023 + C99024 + C99025 + C99026) * C153724) *
               C153625 * C153849 -
           ((C99027 + C99028 + C99029 + C99030) * C153724 +
            (C99026 + C99025 + C99024 + C99023) * C98536) *
               C153625 * C153601) *
              C153521 * C153917 +
          (((C99031 + C99032 + C99033 + C99034) * C98536 +
            (C99035 + C99036 + C99037 + C99038) * C153724) *
               C153625 * C153601 -
           ((C99034 + C99033 + C99032 + C99031) * C153724 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C98536) *
               C153625 * C153849) *
              C153521 * C153918 +
          (((C70500 * C156 - C70501 * C146 - C70500 * C157 + C153942 * C170 +
             C70502 * C158 - C70503 * C147 - C70502 * C159 + C153935 * C171 +
             C70504 * C160 - C70505 * C148 - C70504 * C161 + C153916 * C172 +
             C70506 * C162 - C70507 * C149 - C70506 * C163 + C153862 * C173) *
                C98536 +
            (C99451 + C99452 + C99453 + C99454) * C153724) *
               C153625 * C153849 -
           ((C70506 * C510 - C70507 * C487 - C70506 * C511 + C153862 * C523 +
             C70504 * C506 - C70505 * C485 - C70504 * C507 + C153916 * C521 +
             C70502 * C504 - C70503 * C484 - C70502 * C505 + C153935 * C520 +
             C70500 * C502 - C70501 * C483 - C70500 * C503 + C153942 * C519) *
                C153724 +
            (C99454 + C99453 + C99452 + C99451) * C98536) *
               C153625 * C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153944 +
            (C78877 + C78878) * C153941 + C78893 * C153932 +
            C107823 * C153878) *
               C153625 * C153849 -
           ((C82484 + C82483) * C153878 + C82470 * C153932 +
            (C78880 + C78879) * C153941 + (C78878 + C78877) * C153944) *
               C153625 * C153601) *
              C153521 * C153917 +
          (((C78885 + C78886) * C153944 + (C78887 + C78888) * C153941 +
            (C78889 + C78890) * C153932 + (C107837 + C107838) * C153878) *
               C153625 * C153601 -
           (C107832 * C153878 + C78894 * C153932 + (C78886 + C78885) * C153941 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153944) *
               C153625 * C153849) *
              C153521 * C153918 +
          (((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
             C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                C153944 +
            (C79527 + C79528) * C153941 + (C79529 + C79530) * C153932 +
            (C108239 + C108240) * C153878) *
               C153625 * C153849 -
           ((C74288 * C7524 - C74289 * C7517 - C74288 * C7525 +
             C153472 * C7529 + C74286 * C7522 - C74287 * C7516 -
             C74286 * C7523 + C74280 * C7528) *
                C153878 +
            (C108240 + C108239) * C153932 + (C79530 + C79529) * C153941 +
            (C79528 + C79527) * C153944) *
               C153625 * C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q));
    d2ee[259] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C98536 +
            (C70500 * C496 - C70501 * C480 - C70500 * C497 + C153942 * C516 +
             C70502 * C494 - C70503 * C479 - C70502 * C495 + C153935 * C515 +
             C70504 * C492 - C70505 * C478 - C70504 * C493 + C153916 * C514 +
             C70506 * C490 - C70507 * C477 - C70506 * C491 + C153862 * C513) *
                C153724) *
               C153625 * C153537 * C298 -
           ((C71731 + C71732 + C71733 + C71734) * C153724 +
            (C70802 + C70801 + C70800 + C70799) * C98536) *
               C153625 * C153537 * C299 +
           ((C70806 + C70805 + C70804 + C70803) * C98536 +
            (C72983 + C72984 + C72985 + C72986) * C153724) *
               C153625 * C153537 * C300) *
              C301 +
          (((C70807 + C70808 + C70809 + C70810) * C98536 +
            (C71735 + C71736 + C71737 + C71738) * C153724) *
               C153625 * C153537 * C299 -
           ((C70506 * C488 - C70507 * C476 - C70506 * C489 + C153862 * C512 +
             C70504 * C490 - C70505 * C477 - C70504 * C491 + C153916 * C513 +
             C70502 * C492 - C70503 * C478 - C70502 * C493 + C153935 * C514 +
             C70500 * C494 - C70501 * C479 - C70500 * C495 + C153942 * C515) *
                C153724 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C98536) *
               C153625 * C153537 * C298 -
           ((C70506 * C1761 - C70507 * C1756 - C70506 * C1762 +
             C153862 * C1771 + C70504 * C1763 - C70505 * C1757 -
             C70504 * C1764 + C153916 * C1772 + C70502 * C1765 -
             C70503 * C1758 - C70502 * C1766 + C153935 * C1773 +
             C70500 * C1767 - C70501 * C1759 - C70500 * C1768 +
             C153942 * C1774) *
                C153724 +
            (C70814 + C70813 + C70812 + C70811) * C98536) *
               C153625 * C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
            C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
            C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
            C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
               C98536 +
           (C70500 * C496 - C70501 * C480 - C70500 * C497 + C153942 * C516 +
            C70502 * C494 - C70503 * C479 - C70502 * C495 + C153935 * C515 +
            C70504 * C492 - C70505 * C478 - C70504 * C493 + C153916 * C514 +
            C70506 * C490 - C70507 * C477 - C70506 * C491 + C153862 * C513) *
               C153724) *
              C153625 * C153537 * C153521 * C130 -
          ((C70506 * C488 - C70507 * C476 - C70506 * C489 + C153862 * C512 +
            C70504 * C490 - C70505 * C477 - C70504 * C491 + C153916 * C513 +
            C70502 * C492 - C70503 * C478 - C70502 * C493 + C153935 * C514 +
            C70500 * C494 - C70501 * C479 - C70500 * C495 + C153942 * C515) *
               C153724 +
           (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
            C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
            C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
            C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
               C98536) *
              C153625 * C153537 * C153521 * C131 +
          ((C70500 * C156 - C70501 * C146 - C70500 * C157 + C153942 * C170 +
            C70502 * C158 - C70503 * C147 - C70502 * C159 + C153935 * C171 +
            C70504 * C160 - C70505 * C148 - C70504 * C161 + C153916 * C172 +
            C70506 * C162 - C70507 * C149 - C70506 * C163 + C153862 * C173) *
               C98536 +
           (C70500 * C492 - C70501 * C478 - C70500 * C493 + C153942 * C514 +
            C70502 * C490 - C70503 * C477 - C70502 * C491 + C153935 * C513 +
            C70504 * C488 - C70505 * C476 - C70504 * C489 + C153916 * C512 +
            C70506 * C508 - C70507 * C486 - C70506 * C509 + C153862 * C522) *
               C153724) *
              C153625 * C153537 * C153521 * C132 -
          ((C70506 * C780 - C70507 * C779 - C70506 * C781 + C153862 * C782 +
            C70504 * C508 - C70505 * C486 - C70504 * C509 + C153916 * C522 +
            C70502 * C488 - C70503 * C476 - C70502 * C489 + C153935 * C512 +
            C70500 * C490 - C70501 * C477 - C70500 * C491 + C153942 * C513) *
               C153724 +
           (C70506 * C164 - C70507 * C150 - C70506 * C165 + C153862 * C174 +
            C70504 * C162 - C70505 * C149 - C70504 * C163 + C153916 * C173 +
            C70502 * C160 - C70503 * C148 - C70502 * C161 + C153935 * C172 +
            C70500 * C158 - C70501 * C147 - C70500 * C159 + C153942 * C171) *
               C98536) *
              C153625 * C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C98536 +
            (C78877 + C78878) * C153724) *
               C153936 +
           ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
           (C74597 * C98536 + C81694 * C153724) * C153898) *
              C153537 * C153521 * C130 -
          ((C93644 * C153724 + C74600 * C98536) * C153898 +
           (C79922 * C153724 + (C74590 + C74589) * C98536) * C153924 +
           ((C78886 + C78885) * C153724 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C98536) *
               C153936) *
              C153537 * C153521 * C131 +
          (((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
             C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                C98536 +
            (C79527 + C79528) * C153724) *
               C153936 +
           ((C75029 + C75030) * C98536 + (C79209 + C79210) * C153724) *
               C153924 +
           ((C75031 + C75032) * C98536 + (C94241 + C94242) * C153724) *
               C153898) *
              C153537 * C153521 * C132 -
          (((C74288 * C1761 - C74289 * C1756 - C74288 * C1762 +
             C153472 * C1771 + C74286 * C1763 - C74287 * C1757 -
             C74286 * C1764 + C74280 * C1772) *
                C153724 +
            (C74288 * C333 - C74289 * C312 - C74288 * C334 + C153472 * C348 +
             C74286 * C331 - C74287 * C311 - C74286 * C332 + C74280 * C347) *
                C98536) *
               C153898 +
           ((C74288 * C959 - C74289 * C949 - C74288 * C960 + C153472 * C967 +
             C74286 * C957 - C74287 * C948 - C74286 * C958 + C74280 * C966) *
                C153724 +
            (C74288 * C315 - C74289 * C303 - C74288 * C316 + C153472 * C339 +
             C74286 * C317 - C74287 * C304 - C74286 * C318 + C74280 * C340) *
                C98536) *
               C153924 +
           ((C74288 * C488 - C74289 * C476 - C74288 * C489 + C153472 * C512 +
             C74286 * C490 - C74287 * C477 - C74286 * C491 + C74280 * C513) *
                C153724 +
            (C74288 * C160 - C74289 * C148 - C74288 * C161 + C153472 * C172 +
             C74286 * C158 - C74287 * C147 - C74286 * C159 + C74280 * C171) *
                C98536) *
               C153936) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C98536 +
             (C78877 + C78878) * C153724) *
                C153936 +
            ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
            C102557 * C153898) *
               C153537 * C298 -
           ((C76795 * C153724 + C75896 * C98536) * C153898 +
            (C76796 * C153724 + (C74584 + C74583) * C98536) * C153924 +
            (C79919 * C153724 + (C74582 + C74581) * C98536) * C153936) *
               C153537 * C299 +
           (C102557 * C153936 + (C74598 * C98536 + C96665 * C153724) * C153924 +
            ((C74588 + C74587) * C98536 + (C76811 + C76812) * C153724) *
                C153898) *
               C153537 * C300) *
              C301 +
          ((((C74589 + C74590) * C98536 + C79920 * C153724) * C153936 +
            ((C74591 + C74592) * C98536 + C94919 * C153724) * C153924 +
            ((C74593 + C74594) * C98536 + (C75569 + C75570) * C153724) *
                C153898) *
               C153537 * C299 -
           (C102558 * C153898 +
            (C79922 * C153724 + (C74590 + C74589) * C98536) * C153924 +
            ((C78886 + C78885) * C153724 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C98536) *
                C153936) *
               C153537 * C298 -
           (((C74288 * C5564 - C74289 * C5561 - C74288 * C5565 +
              C153472 * C5570 + C74286 * C5566 - C74287 * C5562 -
              C74286 * C5567 + C74280 * C5571) *
                 C153724 +
             (C74596 + C74595) * C98536) *
                C153898 +
            ((C75570 + C75569) * C153724 + C74599 * C98536) * C153924 +
            C102558 * C153936) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
            C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
               C153944 +
           (C78877 + C78878) * C153941 + C78893 * C153932 +
           (C78884 + C78883) * C153878) *
              C153625 * C153537 * C153521 * C130 -
          ((C78890 + C78889) * C153878 + C78894 * C153932 +
           (C78886 + C78885) * C153941 +
           (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
            C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
               C153944) *
              C153625 * C153537 * C153521 * C131 +
          ((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
            C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
               C153944 +
           (C79527 + C79528) * C153941 + (C79529 + C79530) * C153932 +
           (C74286 * C2117 - C74287 * C2110 - C74286 * C2118 + C74280 * C2125 +
            C74288 * C2115 - C74289 * C2109 - C74288 * C2116 +
            C153472 * C2124) *
               C153878) *
              C153625 * C153537 * C153521 * C132 -
          ((C74288 * C2113 - C74289 * C2108 - C74288 * C2114 + C153472 * C2123 +
            C74286 * C2115 - C74287 * C2109 - C74286 * C2116 + C74280 * C2124) *
               C153878 +
           (C74288 * C506 - C74289 * C485 - C74288 * C507 + C153472 * C521 +
            C74286 * C504 - C74287 * C484 - C74286 * C505 + C74280 * C520) *
               C153932 +
           (C74288 * C488 - C74289 * C476 - C74288 * C489 + C153472 * C512 +
            C74286 * C490 - C74287 * C477 - C74286 * C491 + C74280 * C513) *
               C153941 +
           (C74288 * C160 - C74289 * C148 - C74288 * C161 + C153472 * C172 +
            C74286 * C158 - C74287 * C147 - C74286 * C159 + C74280 * C171) *
               C153944) *
              C153625 * C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153944 +
            (C78877 + C78878) * C153941 + C78893 * C153932 +
            (C78884 + C78883) * C153878) *
               C153625 * C153537 * C298 -
           (C80697 * C153878 + C79918 * C153932 + C79919 * C153941 +
            (C74582 + C74581) * C153944) *
               C153625 * C153537 * C299 +
           (C74597 * C153944 + C81694 * C153941 + C81695 * C153932 +
            (C80726 + C80727) * C153878) *
               C153625 * C153537 * C300) *
              C301 +
          (((C74589 + C74590) * C153944 + C79920 * C153941 + C79921 * C153932 +
            (C78891 + C78892) * C153878) *
               C153625 * C153537 * C299 -
           ((C78890 + C78889) * C153878 + C78894 * C153932 +
            (C78886 + C78885) * C153941 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153944) *
               C153625 * C153537 * C298 -
           ((C74288 * C6185 - C74289 * C6179 - C74288 * C6186 +
             C153472 * C6197 + C74286 * C6187 - C74287 * C6180 -
             C74286 * C6188 + C74280 * C6198) *
                C153878 +
            (C78488 + C78487) * C153932 + C93644 * C153941 + C74600 * C153944) *
               C153625 * C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[260] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C98536 +
             (C78877 + C78878) * C153724) *
                C153936 +
            ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
            C102557 * C153898) *
               C153537 * C153919 -
           (C104301 * C153898 +
            (C76796 * C153724 + (C74584 + C74583) * C98536) * C153924 +
            (C79919 * C153724 + (C74582 + C74581) * C98536) * C153936) *
               C153537 * C153920 +
           (C102557 * C153936 + (C74598 * C98536 + C96665 * C153724) * C153924 +
            ((C74588 + C74587) * C98536 + (C76811 + C76812) * C153724) *
                C153898) *
               C153537 * C1469) *
              C153840 +
          ((((C74589 + C74590) * C98536 + C79920 * C153724) * C153936 +
            ((C74591 + C74592) * C98536 + C94919 * C153724) * C153924 +
            ((C74593 + C74594) * C98536 + (C75569 + C75570) * C153724) *
                C153898) *
               C153537 * C153920 -
           (C102558 * C153898 +
            (C79922 * C153724 + (C74590 + C74589) * C98536) * C153924 +
            ((C78886 + C78885) * C153724 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C98536) *
                C153936) *
               C153537 * C153919 -
           (((C74288 * C5564 - C74289 * C5561 - C74288 * C5565 +
              C153472 * C5570 + C74286 * C5566 - C74287 * C5562 -
              C74286 * C5567 + C74280 * C5571) *
                 C153724 +
             (C74596 + C74595) * C98536) *
                C153898 +
            ((C75570 + C75569) * C153724 + C74599 * C98536) * C153924 +
            C102558 * C153936) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C98536 +
            (C99023 + C99024 + C99025 + C99026) * C153724) *
               C153625 * C153537 * C153919 -
           ((C71731 + C71732 + C71733 + C71734) * C153724 +
            (C70802 + C70801 + C70800 + C70799) * C98536) *
               C153625 * C153537 * C153920 +
           ((C70806 + C70805 + C70804 + C70803) * C98536 +
            (C72983 + C72984 + C72985 + C72986) * C153724) *
               C153625 * C153537 * C1469) *
              C153840 +
          (((C70807 + C70808 + C70809 + C70810) * C98536 +
            (C71735 + C71736 + C71737 + C71738) * C153724) *
               C153625 * C153537 * C153920 -
           ((C99034 + C99033 + C99032 + C99031) * C153724 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C98536) *
               C153625 * C153537 * C153919 -
           ((C70506 * C1761 - C70507 * C1756 - C70506 * C1762 +
             C153862 * C1771 + C70504 * C1763 - C70505 * C1757 -
             C70504 * C1764 + C153916 * C1772 + C70502 * C1765 -
             C70503 * C1758 - C70502 * C1766 + C153935 * C1773 +
             C70500 * C1767 - C70501 * C1759 - C70500 * C1768 +
             C153942 * C1774) *
                C153724 +
            (C70814 + C70813 + C70812 + C70811) * C98536) *
               C153625 * C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153944 +
            (C78877 + C78878) * C153941 + C78893 * C153932 +
            C107823 * C153878) *
               C153625 * C153537 * C153919 -
           (C80697 * C153878 + C79918 * C153932 + C79919 * C153941 +
            (C74582 + C74581) * C153944) *
               C153625 * C153537 * C153920 +
           (C74597 * C153944 + C81694 * C153941 + C81695 * C153932 +
            (C80726 + C80727) * C153878) *
               C153625 * C153537 * C1469) *
              C153840 +
          (((C74589 + C74590) * C153944 + C79920 * C153941 + C79921 * C153932 +
            (C78891 + C78892) * C153878) *
               C153625 * C153537 * C153920 -
           (C107832 * C153878 + C78894 * C153932 + (C78886 + C78885) * C153941 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153944) *
               C153625 * C153537 * C153919 -
           ((C74288 * C6185 - C74289 * C6179 - C74288 * C6186 +
             C153472 * C6197 + C74286 * C6187 - C74287 * C6180 -
             C74286 * C6188 + C74280 * C6198) *
                C153878 +
            (C78488 + C78487) * C153932 + C93644 * C153941 + C74600 * C153944) *
               C153625 * C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[261] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C98536 +
             (C78877 + C78878) * C153724) *
                C153936 +
            ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
            C102557 * C153898) *
               C153849 -
           (C105560 * C153898 + (C79918 * C153724 + C79919 * C98536) * C153924 +
            ((C78880 + C78879) * C153724 + (C78878 + C78877) * C98536) *
                C153936) *
               C153601) *
              C153919 +
          (((C79917 * C98536 + C78795 * C153724) * C153936 +
            (C81694 * C98536 + C81695 * C153724) * C153924 +
            (C96665 * C98536 + (C76147 + C76148) * C153724) * C153898) *
               C153601 -
           (C104301 * C153898 +
            (C76796 * C153724 + (C74584 + C74583) * C98536) * C153924 +
            (C79919 * C153724 + (C74582 + C74581) * C98536) * C153936) *
               C153849) *
              C153920 +
          ((C102557 * C153936 + (C74598 * C98536 + C96665 * C153724) * C153924 +
            ((C74588 + C74587) * C98536 + (C76811 + C76812) * C153724) *
                C153898) *
               C153849 -
           (((C74288 * C28550 - C74289 * C28547 - C74288 * C28551 +
              C153472 * C28553 + C74286 * C28548 - C74287 * C28546 -
              C74286 * C28549 + C74280 * C28552) *
                 C153724 +
             (C76812 + C76811) * C98536) *
                C153898 +
            ((C76148 + C76147) * C153724 + C76795 * C98536) * C153924 +
            C105560 * C153936) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C98536 +
            (C99023 + C99024 + C99025 + C99026) * C153724) *
               C153625 * C153849 -
           ((C99027 + C99028 + C99029 + C99030) * C153724 +
            (C99026 + C99025 + C99024 + C99023) * C98536) *
               C153625 * C153601) *
              C153919 +
          (((C71734 + C71733 + C71732 + C71731) * C98536 +
            (C72309 + C72310 + C72311 + C72312) * C153724) *
               C153625 * C153601 -
           ((C71731 + C71732 + C71733 + C71734) * C153724 +
            (C70802 + C70801 + C70800 + C70799) * C98536) *
               C153625 * C153849) *
              C153920 +
          (((C70806 + C70805 + C70804 + C70803) * C98536 +
            (C72983 + C72984 + C72985 + C72986) * C153724) *
               C153625 * C153849 -
           ((C70506 * C3289 - C70507 * C3282 - C70506 * C3290 +
             C153862 * C3294 + C70504 * C3287 - C70505 * C3281 -
             C70504 * C3288 + C153916 * C3293 + C70502 * C3285 -
             C70503 * C3280 - C70502 * C3286 + C153935 * C3292 +
             C70500 * C3283 - C70501 * C3279 - C70500 * C3284 +
             C153942 * C3291) *
                C153724 +
            (C72986 + C72985 + C72984 + C72983) * C98536) *
               C153625 * C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153944 +
            (C78877 + C78878) * C153941 + C78893 * C153932 +
            C107823 * C153878) *
               C153625 * C153849 -
           ((C82484 + C82483) * C153878 + C82470 * C153932 +
            (C78880 + C78879) * C153941 + (C78878 + C78877) * C153944) *
               C153625 * C153601) *
              C153919 +
          ((C79917 * C153944 + C78795 * C153941 + C80698 * C153932 +
            (C80724 + C80725) * C153878) *
               C153625 * C153601 -
           (C80697 * C153878 + C79918 * C153932 + C79919 * C153941 +
            (C74582 + C74581) * C153944) *
               C153625 * C153849) *
              C153920 +
          ((C74597 * C153944 + C81694 * C153941 + C81695 * C153932 +
            (C80726 + C80727) * C153878) *
               C153625 * C153849 -
           ((C74288 * C31225 - C74289 * C31222 - C74288 * C31226 +
             C153472 * C31228 + C74286 * C31223 - C74287 * C31221 -
             C74286 * C31224 + C74280 * C31227) *
                C153878 +
            (C80727 + C80726) * C153932 + C80715 * C153941 + C76796 * C153944) *
               C153625 * C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[262] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C70500 * C152 - C70501 * C144 - C70500 * C153 +
                 C153942 * C168 + C70502 * C154 - C70503 * C145 -
                 C70502 * C155 + C153935 * C169 + C70504 * C156 -
                 C70505 * C146 - C70504 * C157 + C153916 * C170 +
                 C70506 * C158 - C70507 * C147 - C70506 * C159 +
                 C153862 * C171) *
                    C98536 +
                (C99023 + C99024 + C99025 + C99026) * C153724) *
                   C153625 * C153537 * C1091 -
               ((C71731 + C71732 + C71733 + C71734) * C153724 +
                (C70802 + C70801 + C70800 + C70799) * C98536) *
                   C153625 * C153537 * C153573) *
                  C1093 +
              (((C70807 + C70808 + C70809 + C70810) * C98536 +
                (C71735 + C71736 + C71737 + C71738) * C153724) *
                   C153625 * C153537 * C153573 -
               ((C99034 + C99033 + C99032 + C99031) * C153724 +
                (C70506 * C160 - C70507 * C148 - C70506 * C161 +
                 C153862 * C172 + C70504 * C158 - C70505 * C147 -
                 C70504 * C159 + C153916 * C171 + C70502 * C156 -
                 C70503 * C146 - C70502 * C157 + C153935 * C170 +
                 C70500 * C154 - C70501 * C145 - C70500 * C155 +
                 C153942 * C169) *
                    C98536) *
                   C153625 * C153537 * C1091) *
                  C1094 +
              (((C70500 * C156 - C70501 * C146 - C70500 * C157 +
                 C153942 * C170 + C70502 * C158 - C70503 * C147 -
                 C70502 * C159 + C153935 * C171 + C70504 * C160 -
                 C70505 * C148 - C70504 * C161 + C153916 * C172 +
                 C70506 * C162 - C70507 * C149 - C70506 * C163 +
                 C153862 * C173) *
                    C98536 +
                (C99451 + C99452 + C99453 + C99454) * C153724) *
                   C153625 * C153537 * C1091 -
               ((C70506 * C961 - C70507 * C950 - C70506 * C962 +
                 C153862 * C968 + C70504 * C959 - C70505 * C949 -
                 C70504 * C960 + C153916 * C967 + C70502 * C957 -
                 C70503 * C948 - C70502 * C958 + C153935 * C966 +
                 C70500 * C955 - C70501 * C947 - C70500 * C956 +
                 C153942 * C965) *
                    C153724 +
                (C71230 + C71229 + C71228 + C71227) * C98536) *
                   C153625 * C153537 * C153573) *
                  C1095) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
                C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
                C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
                C70506 * C158 - C70507 * C147 - C70506 * C159 +
                C153862 * C171) *
                   C98536 +
               (C99023 + C99024 + C99025 + C99026) * C153724) *
                  C153625 * C153537 * C1178 -
              ((C71731 + C71732 + C71733 + C71734) * C153724 +
               (C70802 + C70801 + C70800 + C70799) * C98536) *
                  C153625 * C153537 * C1179 +
              ((C70806 + C70805 + C70804 + C70803) * C98536 +
               (C72983 + C72984 + C72985 + C72986) * C153724) *
                  C153625 * C153537 * C1180 -
              ((C70506 * C4073 - C70507 * C4066 - C70506 * C4074 +
                C153862 * C4078 + C70504 * C4071 - C70505 * C4065 -
                C70504 * C4072 + C153916 * C4077 + C70502 * C4069 -
                C70503 * C4064 - C70502 * C4070 + C153935 * C4076 +
                C70500 * C4067 - C70501 * C4063 - C70500 * C4068 +
                C153942 * C4075) *
                   C153724 +
               (C72090 + C72089 + C72088 + C72087) * C98536) *
                  C153625 * C153537 * C1181) *
             C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C98536 +
            (C99023 + C99024 + C99025 + C99026) * C153724) *
               C153625 * C473 -
           ((C99027 + C99028 + C99029 + C99030) * C153724 +
            (C99026 + C99025 + C99024 + C99023) * C98536) *
               C153625 * C474 +
           ((C99030 + C99029 + C99028 + C99027) * C98536 +
            (C70500 * C2121 - C70501 * C2112 - C70500 * C2122 +
             C153942 * C2127 + C70502 * C2119 - C70503 * C2111 -
             C70502 * C2120 + C153935 * C2126 + C70504 * C2117 -
             C70505 * C2110 - C70504 * C2118 + C153916 * C2125 +
             C70506 * C2115 - C70507 * C2109 - C70506 * C2116 +
             C153862 * C2124) *
                C153724) *
               C153625 * C475) *
              C1091 +
          (((C71734 + C71733 + C71732 + C71731) * C98536 +
            (C72309 + C72310 + C72311 + C72312) * C153724) *
               C153625 * C474 -
           ((C71731 + C71732 + C71733 + C71734) * C153724 +
            (C70802 + C70801 + C70800 + C70799) * C98536) *
               C153625 * C473 -
           ((C70506 * C8429 - C70507 * C8428 - C70506 * C8430 +
             C153862 * C8431 + C70504 * C6191 - C70505 * C6182 -
             C70504 * C6192 + C153916 * C6200 + C70502 * C6193 -
             C70503 * C6183 - C70502 * C6194 + C153935 * C6201 +
             C70500 * C6195 - C70501 * C6184 - C70500 * C6196 +
             C153942 * C6202) *
                C153724 +
            (C72312 + C72311 + C72310 + C72309) * C98536) *
               C153625 * C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C98536 +
             (C78877 + C78878) * C153724) *
                C153936 +
            ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
            C102557 * C153898) *
               C153537 * C1091 -
           ((C76795 * C153724 + C75896 * C98536) * C153898 +
            (C76796 * C153724 + (C74584 + C74583) * C98536) * C153924 +
            (C79919 * C153724 + (C74582 + C74581) * C98536) * C153936) *
               C153537 * C153573) *
              C1093 +
          ((((C74589 + C74590) * C98536 + C79920 * C153724) * C153936 +
            ((C74591 + C74592) * C98536 + C94919 * C153724) * C153924 +
            ((C74593 + C74594) * C98536 + (C75569 + C75570) * C153724) *
                C153898) *
               C153537 * C153573 -
           (C102558 * C153898 +
            (C79922 * C153724 + (C74590 + C74589) * C98536) * C153924 +
            ((C78886 + C78885) * C153724 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C98536) *
                C153936) *
               C153537 * C1091) *
              C1094 +
          ((((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
              C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                 C98536 +
             (C79527 + C79528) * C153724) *
                C153936 +
            ((C75029 + C75030) * C98536 + (C79209 + C79210) * C153724) *
                C153924 +
            ((C75031 + C75032) * C98536 + (C94241 + C94242) * C153724) *
                C153898) *
               C153537 * C1091 -
           (((C74288 * C4073 - C74289 * C4066 - C74288 * C4074 +
              C153472 * C4078 + C74286 * C4071 - C74287 * C4065 -
              C74286 * C4072 + C74280 * C4077) *
                 C153724 +
             (C75034 + C75033) * C98536) *
                C153898 +
            ((C94242 + C94241) * C153724 + (C75032 + C75031) * C98536) *
                C153924 +
            ((C79210 + C79209) * C153724 + (C75030 + C75029) * C98536) *
                C153936) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C98536 +
            (C78877 + C78878) * C153724) *
               C153936 +
           ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
           C102557 * C153898) *
              C153537 * C1178 -
          (C104301 * C153898 +
           (C76796 * C153724 + (C74584 + C74583) * C98536) * C153924 +
           (C79919 * C153724 + (C74582 + C74581) * C98536) * C153936) *
              C153537 * C1179 +
          (C102557 * C153936 + (C74598 * C98536 + C96665 * C153724) * C153924 +
           ((C74588 + C74587) * C98536 + (C76811 + C76812) * C153724) *
               C153898) *
              C153537 * C1180 -
          (((C74288 * C28996 - C74289 * C28993 - C74288 * C28997 +
             C153472 * C28999 + C74286 * C28994 - C74287 * C28992 -
             C74286 * C28995 + C74280 * C28998) *
                C153724 +
            (C75912 + C75911) * C98536) *
               C153898 +
           ((C76812 + C76811) * C153724 + C75895 * C98536) * C153924 +
           C104301 * C153936) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C98536 +
             (C78877 + C78878) * C153724) *
                C153936 +
            ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
            C102557 * C153898) *
               C473 -
           ((C80715 * C153724 + C76796 * C98536) * C153898 +
            (C79918 * C153724 + C79919 * C98536) * C153924 +
            ((C78880 + C78879) * C153724 + (C78878 + C78877) * C98536) *
                C153936) *
               C474 +
           ((C78893 * C98536 + (C78884 + C78883) * C153724) * C153936 +
            (C78795 * C98536 + C80698 * C153724) * C153924 +
            (C81695 * C98536 + (C80726 + C80727) * C153724) * C153898) *
               C475) *
              C1091 +
          (((C79917 * C98536 + C78795 * C153724) * C153936 +
            (C81694 * C98536 + C81695 * C153724) * C153924 +
            (C96665 * C98536 + (C76147 + C76148) * C153724) * C153898) *
               C474 -
           (C104301 * C153898 +
            (C76796 * C153724 + (C74584 + C74583) * C98536) * C153924 +
            (C79919 * C153724 + (C74582 + C74581) * C98536) * C153936) *
               C473 -
           (((C74288 * C32074 - C74289 * C32073 - C74288 * C32075 +
              C153472 * C32076 + C74286 * C30186 - C74287 * C30183 -
              C74286 * C30187 + C74280 * C30189) *
                 C153724 +
             (C76148 + C76147) * C98536) *
                C153898 +
            ((C80727 + C80726) * C153724 + C80715 * C98536) * C153924 +
            (C80697 * C153724 + C79918 * C98536) * C153936) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153944 +
            (C78877 + C78878) * C153941 + C78893 * C153932 +
            C107823 * C153878) *
               C153625 * C153537 * C1091 -
           (C80697 * C153878 + C79918 * C153932 + C79919 * C153941 +
            (C74582 + C74581) * C153944) *
               C153625 * C153537 * C153573) *
              C1093 +
          (((C74589 + C74590) * C153944 + C79920 * C153941 + C79921 * C153932 +
            (C78891 + C78892) * C153878) *
               C153625 * C153537 * C153573 -
           (C107832 * C153878 + C78894 * C153932 + (C78886 + C78885) * C153941 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153944) *
               C153625 * C153537 * C1091) *
              C1094 +
          (((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
             C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                C153944 +
            (C79527 + C79528) * C153941 + (C79529 + C79530) * C153932 +
            (C108239 + C108240) * C153878) *
               C153625 * C153537 * C1091 -
           ((C74288 * C8429 - C74289 * C8428 - C74288 * C8430 +
             C153472 * C8431 + C74286 * C6191 - C74287 * C6182 -
             C74286 * C6192 + C74280 * C6200) *
                C153878 +
            (C79212 + C79211) * C153932 + (C79210 + C79209) * C153941 +
            (C75030 + C75029) * C153944) *
               C153625 * C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
            C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
               C153944 +
           (C78877 + C78878) * C153941 + C78893 * C153932 + C107823 * C153878) *
              C153625 * C153537 * C1178 -
          (C80697 * C153878 + C79918 * C153932 + C79919 * C153941 +
           (C74582 + C74581) * C153944) *
              C153625 * C153537 * C1179 +
          (C74597 * C153944 + C81694 * C153941 + C81695 * C153932 +
           (C80726 + C80727) * C153878) *
              C153625 * C153537 * C1180 -
          ((C74288 * C32074 - C74289 * C32073 - C74288 * C32075 +
            C153472 * C32076 + C74286 * C30186 - C74287 * C30183 -
            C74286 * C30187 + C74280 * C30189) *
               C153878 +
           (C76148 + C76147) * C153932 + C76795 * C153941 + C75896 * C153944) *
              C153625 * C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153944 +
            (C78877 + C78878) * C153941 + C78893 * C153932 +
            C107823 * C153878) *
               C153625 * C473 -
           ((C82484 + C82483) * C153878 + C82470 * C153932 +
            (C78880 + C78879) * C153941 + (C78878 + C78877) * C153944) *
               C153625 * C474 +
           (C78893 * C153944 + C107823 * C153941 + (C82483 + C82484) * C153932 +
            (C74286 * C10385 - C74287 * C10380 - C74286 * C10386 +
             C74280 * C10389 + C74288 * C10383 - C74289 * C10379 -
             C74288 * C10384 + C153472 * C10388) *
                C153878) *
               C153625 * C475) *
              C1091 +
          ((C79917 * C153944 + C78795 * C153941 + C80698 * C153932 +
            (C80724 + C80725) * C153878) *
               C153625 * C474 -
           (C80697 * C153878 + C79918 * C153932 + C79919 * C153941 +
            (C74582 + C74581) * C153944) *
               C153625 * C473 -
           ((C74288 * C56477 - C74289 * C56476 - C74288 * C56478 +
             C153472 * C56479 + C74286 * C34024 - C74287 * C34021 -
             C74286 * C34025 + C74280 * C34027) *
                C153878 +
            (C80725 + C80724) * C153932 + C80697 * C153941 + C79918 * C153944) *
               C153625 * C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[263] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
               C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                  C98536 +
              (C78877 + C78878) * C153724) *
                 C153936 +
             ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
             C102557 * C153898) *
                C153849 -
            ((C80715 * C153724 + C76796 * C98536) * C153898 +
             (C79918 * C153724 + C79919 * C98536) * C153924 +
             ((C78880 + C78879) * C153724 + (C78878 + C78877) * C98536) *
                 C153936) *
                C153601) *
               C1091 +
           (((C79917 * C98536 + C78795 * C153724) * C153936 +
             (C81694 * C98536 + C81695 * C153724) * C153924 +
             (C96665 * C98536 + (C76147 + C76148) * C153724) * C153898) *
                C153601 -
            (C104301 * C153898 +
             (C76796 * C153724 + (C74584 + C74583) * C98536) * C153924 +
             (C79919 * C153724 + (C74582 + C74581) * C98536) * C153936) *
                C153849) *
               C153573) *
              C153840 +
          (((((C78885 + C78886) * C98536 + (C78887 + C78888) * C153724) *
                 C153936 +
             (C79920 * C98536 + C79921 * C153724) * C153924 +
             (C94919 * C98536 + (C78487 + C78488) * C153724) * C153898) *
                C153601 -
            (C102558 * C153898 +
             (C79922 * C153724 + (C74590 + C74589) * C98536) * C153924 +
             ((C78886 + C78885) * C153724 +
              (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
               C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                  C98536) *
                 C153936) *
                C153849) *
               C1091 +
           ((((C74589 + C74590) * C98536 + C79920 * C153724) * C153936 +
             ((C74591 + C74592) * C98536 + C94919 * C153724) * C153924 +
             ((C74593 + C74594) * C98536 + (C75569 + C75570) * C153724) *
                 C153898) *
                C153849 -
            (((C74288 * C4784 - C74289 * C4781 - C74288 * C4785 +
               C153472 * C4790 + C74286 * C4786 - C74287 * C4782 -
               C74286 * C4787 + C74280 * C4791) *
                  C153724 +
              (C75570 + C75569) * C98536) *
                 C153898 +
             ((C78488 + C78487) * C153724 + C93644 * C98536) * C153924 +
             (C78844 * C153724 + C79922 * C98536) * C153936) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
              C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
              C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
              C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                 C98536 +
             (C99023 + C99024 + C99025 + C99026) * C153724) *
                C153625 * C153849 -
            ((C99027 + C99028 + C99029 + C99030) * C153724 +
             (C99026 + C99025 + C99024 + C99023) * C98536) *
                C153625 * C153601) *
               C1091 +
           (((C71734 + C71733 + C71732 + C71731) * C98536 +
             (C72309 + C72310 + C72311 + C72312) * C153724) *
                C153625 * C153601 -
            ((C71731 + C71732 + C71733 + C71734) * C153724 +
             (C70802 + C70801 + C70800 + C70799) * C98536) *
                C153625 * C153849) *
               C153573) *
              C153840 +
          ((((C99031 + C99032 + C99033 + C99034) * C98536 +
             (C99035 + C99036 + C99037 + C99038) * C153724) *
                C153625 * C153601 -
            ((C99034 + C99033 + C99032 + C99031) * C153724 +
             (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
              C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
              C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
              C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                 C98536) *
                C153625 * C153849) *
               C1091 +
           (((C70807 + C70808 + C70809 + C70810) * C98536 +
             (C71735 + C71736 + C71737 + C71738) * C153724) *
                C153625 * C153849 -
            ((C70506 * C1330 - C70507 * C1325 - C70506 * C1331 +
              C153862 * C1340 + C70504 * C1332 - C70505 * C1326 -
              C70504 * C1333 + C153916 * C1341 + C70502 * C1334 -
              C70503 * C1327 - C70502 * C1335 + C153935 * C1342 +
              C70500 * C1336 - C70501 * C1328 - C70500 * C1337 +
              C153942 * C1343) *
                 C153724 +
             (C71738 + C71737 + C71736 + C71735) * C98536) *
                C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153944 +
             (C78877 + C78878) * C153941 + C78893 * C153932 +
             C107823 * C153878) *
                C153625 * C153849 -
            ((C82484 + C82483) * C153878 + C82470 * C153932 +
             (C78880 + C78879) * C153941 + (C78878 + C78877) * C153944) *
                C153625 * C153601) *
               C1091 +
           ((C79917 * C153944 + C78795 * C153941 + C80698 * C153932 +
             (C80724 + C80725) * C153878) *
                C153625 * C153601 -
            (C80697 * C153878 + C79918 * C153932 + C79919 * C153941 +
             (C74582 + C74581) * C153944) *
                C153625 * C153849) *
               C153573) *
              C153840 +
          ((((C78885 + C78886) * C153944 + (C78887 + C78888) * C153941 +
             (C78889 + C78890) * C153932 + (C107837 + C107838) * C153878) *
                C153625 * C153601 -
            (C107832 * C153878 + C78894 * C153932 +
             (C78886 + C78885) * C153941 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153944) *
                C153625 * C153849) *
               C1091 +
           (((C74589 + C74590) * C153944 + C79920 * C153941 + C79921 * C153932 +
             (C78891 + C78892) * C153878) *
                C153625 * C153849 -
            ((C74288 * C9038 - C74289 * C9035 - C74288 * C9039 +
              C153472 * C9044 + C74286 * C9040 - C74287 * C9036 -
              C74286 * C9041 + C74280 * C9045) *
                 C153878 +
             (C78892 + C78891) * C153932 + C78844 * C153941 +
             C79922 * C153944) *
                C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[264] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
            C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
            C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
            C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
               C98536 +
           (C99023 + C99024 + C99025 + C99026) * C153724) *
              C153625 * C153537 * C1178 -
          ((C71731 + C71732 + C71733 + C71734) * C153724 +
           (C70802 + C70801 + C70800 + C70799) * C98536) *
              C153625 * C153537 * C1179 +
          ((C70806 + C70805 + C70804 + C70803) * C98536 +
           (C72983 + C72984 + C72985 + C72986) * C153724) *
              C153625 * C153537 * C1180 -
          ((C70506 * C4073 - C70507 * C4066 - C70506 * C4074 + C153862 * C4078 +
            C70504 * C4071 - C70505 * C4065 - C70504 * C4072 + C153916 * C4077 +
            C70502 * C4069 - C70503 * C4064 - C70502 * C4070 + C153935 * C4076 +
            C70500 * C4067 - C70501 * C4063 - C70500 * C4068 +
            C153942 * C4075) *
               C153724 +
           (C72090 + C72089 + C72088 + C72087) * C98536) *
              C153625 * C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C98536 +
            (C99023 + C99024 + C99025 + C99026) * C153724) *
               C153625 * C153537 * C1091 -
           ((C71731 + C71732 + C71733 + C71734) * C153724 +
            (C70802 + C70801 + C70800 + C70799) * C98536) *
               C153625 * C153537 * C153573) *
              C1093 +
          (((C70807 + C70808 + C70809 + C70810) * C98536 +
            (C71735 + C71736 + C71737 + C71738) * C153724) *
               C153625 * C153537 * C153573 -
           ((C99034 + C99033 + C99032 + C99031) * C153724 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C98536) *
               C153625 * C153537 * C1091) *
              C1094 +
          (((C70500 * C156 - C70501 * C146 - C70500 * C157 + C153942 * C170 +
             C70502 * C158 - C70503 * C147 - C70502 * C159 + C153935 * C171 +
             C70504 * C160 - C70505 * C148 - C70504 * C161 + C153916 * C172 +
             C70506 * C162 - C70507 * C149 - C70506 * C163 + C153862 * C173) *
                C98536 +
            (C99451 + C99452 + C99453 + C99454) * C153724) *
               C153625 * C153537 * C1091 -
           ((C70506 * C961 - C70507 * C950 - C70506 * C962 + C153862 * C968 +
             C70504 * C959 - C70505 * C949 - C70504 * C960 + C153916 * C967 +
             C70502 * C957 - C70503 * C948 - C70502 * C958 + C153935 * C966 +
             C70500 * C955 - C70501 * C947 - C70500 * C956 + C153942 * C965) *
                C153724 +
            (C71230 + C71229 + C71228 + C71227) * C98536) *
               C153625 * C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C98536 +
             (C78877 + C78878) * C153724) *
                C153936 +
            ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
            C102557 * C153898) *
               C153537 * C1091 -
           ((C76795 * C153724 + C75896 * C98536) * C153898 +
            (C76796 * C153724 + (C74584 + C74583) * C98536) * C153924 +
            (C79919 * C153724 + (C74582 + C74581) * C98536) * C153936) *
               C153537 * C153573) *
              C1093 +
          ((((C74589 + C74590) * C98536 + C79920 * C153724) * C153936 +
            ((C74591 + C74592) * C98536 + C94919 * C153724) * C153924 +
            ((C74593 + C74594) * C98536 + (C75569 + C75570) * C153724) *
                C153898) *
               C153537 * C153573 -
           (C102558 * C153898 +
            (C79922 * C153724 + (C74590 + C74589) * C98536) * C153924 +
            ((C78886 + C78885) * C153724 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C98536) *
                C153936) *
               C153537 * C1091) *
              C1094 +
          ((((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
              C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                 C98536 +
             (C79527 + C79528) * C153724) *
                C153936 +
            ((C75029 + C75030) * C98536 + (C79209 + C79210) * C153724) *
                C153924 +
            ((C75031 + C75032) * C98536 + (C94241 + C94242) * C153724) *
                C153898) *
               C153537 * C1091 -
           (((C74288 * C4073 - C74289 * C4066 - C74288 * C4074 +
              C153472 * C4078 + C74286 * C4071 - C74287 * C4065 -
              C74286 * C4072 + C74280 * C4077) *
                 C153724 +
             (C75034 + C75033) * C98536) *
                C153898 +
            ((C94242 + C94241) * C153724 + (C75032 + C75031) * C98536) *
                C153924 +
            ((C79210 + C79209) * C153724 + (C75030 + C75029) * C98536) *
                C153936) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C98536 +
            (C78877 + C78878) * C153724) *
               C153936 +
           ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
           C102557 * C153898) *
              C153537 * C1178 -
          (C104301 * C153898 +
           (C76796 * C153724 + (C74584 + C74583) * C98536) * C153924 +
           (C79919 * C153724 + (C74582 + C74581) * C98536) * C153936) *
              C153537 * C1179 +
          (C102557 * C153936 + (C74598 * C98536 + C96665 * C153724) * C153924 +
           ((C74588 + C74587) * C98536 + (C76811 + C76812) * C153724) *
               C153898) *
              C153537 * C1180 -
          (((C74288 * C28996 - C74289 * C28993 - C74288 * C28997 +
             C153472 * C28999 + C74286 * C28994 - C74287 * C28992 -
             C74286 * C28995 + C74280 * C28998) *
                C153724 +
            (C75912 + C75911) * C98536) *
               C153898 +
           ((C76812 + C76811) * C153724 + C75895 * C98536) * C153924 +
           C104301 * C153936) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153944 +
            (C78877 + C78878) * C153941 + C78893 * C153932 +
            C107823 * C153878) *
               C153625 * C153537 * C1091 -
           (C80697 * C153878 + C79918 * C153932 + C79919 * C153941 +
            (C74582 + C74581) * C153944) *
               C153625 * C153537 * C153573) *
              C1093 +
          (((C74589 + C74590) * C153944 + C79920 * C153941 + C79921 * C153932 +
            (C78891 + C78892) * C153878) *
               C153625 * C153537 * C153573 -
           (C107832 * C153878 + C78894 * C153932 + (C78886 + C78885) * C153941 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153944) *
               C153625 * C153537 * C1091) *
              C1094 +
          (((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
             C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                C153944 +
            (C79527 + C79528) * C153941 + (C79529 + C79530) * C153932 +
            (C108239 + C108240) * C153878) *
               C153625 * C153537 * C1091 -
           ((C74288 * C8429 - C74289 * C8428 - C74288 * C8430 +
             C153472 * C8431 + C74286 * C6191 - C74287 * C6182 -
             C74286 * C6192 + C74280 * C6200) *
                C153878 +
            (C79212 + C79211) * C153932 + (C79210 + C79209) * C153941 +
            (C75030 + C75029) * C153944) *
               C153625 * C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
            C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
               C153944 +
           (C78877 + C78878) * C153941 + C78893 * C153932 + C107823 * C153878) *
              C153625 * C153537 * C1178 -
          (C80697 * C153878 + C79918 * C153932 + C79919 * C153941 +
           (C74582 + C74581) * C153944) *
              C153625 * C153537 * C1179 +
          (C74597 * C153944 + C81694 * C153941 + C81695 * C153932 +
           (C80726 + C80727) * C153878) *
              C153625 * C153537 * C1180 -
          ((C74288 * C32074 - C74289 * C32073 - C74288 * C32075 +
            C153472 * C32076 + C74286 * C30186 - C74287 * C30183 -
            C74286 * C30187 + C74280 * C30189) *
               C153878 +
           (C76148 + C76147) * C153932 + C76795 * C153941 + C75896 * C153944) *
              C153625 * C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[265] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
               C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                  C98536 +
              (C78877 + C78878) * C153724) *
                 C153936 +
             ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
             C102557 * C153898) *
                C1898 -
            (C105560 * C153898 +
             (C79918 * C153724 + C79919 * C98536) * C153924 +
             ((C78880 + C78879) * C153724 + (C78878 + C78877) * C98536) *
                 C153936) *
                C153601) *
               C153848 +
           (((C79917 * C98536 + C78795 * C153724) * C153936 +
             (C81694 * C98536 + C81695 * C153724) * C153924 +
             (C96665 * C98536 + (C76147 + C76148) * C153724) * C153898) *
                C153601 -
            (C104301 * C153898 +
             (C76796 * C153724 + (C74584 + C74583) * C98536) * C153924 +
             (C79919 * C153724 + (C74582 + C74581) * C98536) * C153936) *
                C1898) *
               C153573) *
              C153840 +
          (((((C78885 + C78886) * C98536 + (C78887 + C78888) * C153724) *
                 C153936 +
             (C79920 * C98536 + C79921 * C153724) * C153924 +
             (C94919 * C98536 + (C78487 + C78488) * C153724) * C153898) *
                C153601 -
            (C102558 * C153898 +
             (C79922 * C153724 + (C74590 + C74589) * C98536) * C153924 +
             ((C78886 + C78885) * C153724 +
              (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
               C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                  C98536) *
                 C153936) *
                C1898) *
               C153848 +
           ((((C74589 + C74590) * C98536 + C79920 * C153724) * C153936 +
             ((C74591 + C74592) * C98536 + C94919 * C153724) * C153924 +
             ((C74593 + C74594) * C98536 + (C75569 + C75570) * C153724) *
                 C153898) *
                C1898 -
            (((C74288 * C4784 - C74289 * C4781 - C74288 * C4785 +
               C153472 * C4790 + C74286 * C4786 - C74287 * C4782 -
               C74286 * C4787 + C74280 * C4791) *
                  C153724 +
              (C75570 + C75569) * C98536) *
                 C153898 +
             ((C78488 + C78487) * C153724 + C93644 * C98536) * C153924 +
             (C78844 * C153724 + C79922 * C98536) * C153936) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
              C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
              C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
              C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                 C98536 +
             (C99023 + C99024 + C99025 + C99026) * C153724) *
                C153625 * C1898 -
            ((C99027 + C99028 + C99029 + C99030) * C153724 +
             (C99026 + C99025 + C99024 + C99023) * C98536) *
                C153625 * C153601) *
               C153848 +
           (((C71734 + C71733 + C71732 + C71731) * C98536 +
             (C72309 + C72310 + C72311 + C72312) * C153724) *
                C153625 * C153601 -
            ((C71731 + C71732 + C71733 + C71734) * C153724 +
             (C70802 + C70801 + C70800 + C70799) * C98536) *
                C153625 * C1898) *
               C153573) *
              C153840 +
          ((((C99031 + C99032 + C99033 + C99034) * C98536 +
             (C99035 + C99036 + C99037 + C99038) * C153724) *
                C153625 * C153601 -
            ((C99034 + C99033 + C99032 + C99031) * C153724 +
             (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
              C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
              C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
              C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                 C98536) *
                C153625 * C1898) *
               C153848 +
           (((C70807 + C70808 + C70809 + C70810) * C98536 +
             (C71735 + C71736 + C71737 + C71738) * C153724) *
                C153625 * C1898 -
            ((C70506 * C1330 - C70507 * C1325 - C70506 * C1331 +
              C153862 * C1340 + C70504 * C1332 - C70505 * C1326 -
              C70504 * C1333 + C153916 * C1341 + C70502 * C1334 -
              C70503 * C1327 - C70502 * C1335 + C153935 * C1342 +
              C70500 * C1336 - C70501 * C1328 - C70500 * C1337 +
              C153942 * C1343) *
                 C153724 +
             (C71738 + C71737 + C71736 + C71735) * C98536) *
                C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C153944 +
             (C78877 + C78878) * C153941 + C78893 * C153932 +
             C107823 * C153878) *
                C153625 * C1898 -
            (C110181 * C153878 + C82470 * C153932 +
             (C78880 + C78879) * C153941 + (C78878 + C78877) * C153944) *
                C153625 * C153601) *
               C153848 +
           ((C79917 * C153944 + C78795 * C153941 + C80698 * C153932 +
             (C80724 + C80725) * C153878) *
                C153625 * C153601 -
            (C80697 * C153878 + C79918 * C153932 + C79919 * C153941 +
             (C74582 + C74581) * C153944) *
                C153625 * C1898) *
               C153573) *
              C153840 +
          ((((C78885 + C78886) * C153944 + (C78887 + C78888) * C153941 +
             (C78889 + C78890) * C153932 + (C107837 + C107838) * C153878) *
                C153625 * C153601 -
            (C107832 * C153878 + C78894 * C153932 +
             (C78886 + C78885) * C153941 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C153944) *
                C153625 * C1898) *
               C153848 +
           (((C74589 + C74590) * C153944 + C79920 * C153941 + C79921 * C153932 +
             (C78891 + C78892) * C153878) *
                C153625 * C1898 -
            ((C74288 * C9038 - C74289 * C9035 - C74288 * C9039 +
              C153472 * C9044 + C74286 * C9040 - C74287 * C9036 -
              C74286 * C9041 + C74280 * C9045) *
                 C153878 +
             (C78892 + C78891) * C153932 + C78844 * C153941 +
             C79922 * C153944) *
                C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[266] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C98536 +
             (C78877 + C78878) * C153724) *
                C153936 +
            ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
            C102557 * C153898) *
               C153921 -
           (C105560 * C153898 + (C79918 * C153724 + C79919 * C98536) * C153924 +
            ((C78880 + C78879) * C153724 + (C78878 + C78877) * C98536) *
                C153936) *
               C153922 +
           ((C78893 * C98536 + (C78884 + C78883) * C153724) * C153936 +
            (C78795 * C98536 + C80698 * C153724) * C153924 +
            (C81695 * C98536 + (C80726 + C80727) * C153724) * C153898) *
               C2414) *
              C153848 +
          (((C79917 * C98536 + C78795 * C153724) * C153936 +
            (C81694 * C98536 + C81695 * C153724) * C153924 +
            (C96665 * C98536 + (C76147 + C76148) * C153724) * C153898) *
               C153922 -
           (C104301 * C153898 +
            (C76796 * C153724 + (C74584 + C74583) * C98536) * C153924 +
            (C79919 * C153724 + (C74582 + C74581) * C98536) * C153936) *
               C153921 -
           (((C74288 * C32074 - C74289 * C32073 - C74288 * C32075 +
              C153472 * C32076 + C74286 * C30186 - C74287 * C30183 -
              C74286 * C30187 + C74280 * C30189) *
                 C153724 +
             (C76148 + C76147) * C98536) *
                C153898 +
            ((C80727 + C80726) * C153724 + C80715 * C98536) * C153924 +
            (C80697 * C153724 + C79918 * C98536) * C153936) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C98536 +
            (C99023 + C99024 + C99025 + C99026) * C153724) *
               C153625 * C153921 -
           ((C99027 + C99028 + C99029 + C99030) * C153724 +
            (C99026 + C99025 + C99024 + C99023) * C98536) *
               C153625 * C153922 +
           ((C99030 + C99029 + C99028 + C99027) * C98536 +
            (C101419 + C101420 + C101421 + C101422) * C153724) *
               C153625 * C2414) *
              C153848 +
          (((C71734 + C71733 + C71732 + C71731) * C98536 +
            (C72309 + C72310 + C72311 + C72312) * C153724) *
               C153625 * C153922 -
           ((C71731 + C71732 + C71733 + C71734) * C153724 +
            (C70802 + C70801 + C70800 + C70799) * C98536) *
               C153625 * C153921 -
           ((C70506 * C8429 - C70507 * C8428 - C70506 * C8430 +
             C153862 * C8431 + C70504 * C6191 - C70505 * C6182 -
             C70504 * C6192 + C153916 * C6200 + C70502 * C6193 -
             C70503 * C6183 - C70502 * C6194 + C153935 * C6201 +
             C70500 * C6195 - C70501 * C6184 - C70500 * C6196 +
             C153942 * C6202) *
                C153724 +
            (C72312 + C72311 + C72310 + C72309) * C98536) *
               C153625 * C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153944 +
            (C78877 + C78878) * C153941 + C78893 * C153932 +
            C107823 * C153878) *
               C153625 * C153921 -
           (C110181 * C153878 + C82470 * C153932 + (C78880 + C78879) * C153941 +
            (C78878 + C78877) * C153944) *
               C153625 * C153922 +
           (C78893 * C153944 + C107823 * C153941 + (C82483 + C82484) * C153932 +
            (C110194 + C110195) * C153878) *
               C153625 * C2414) *
              C153848 +
          ((C79917 * C153944 + C78795 * C153941 + C80698 * C153932 +
            (C80724 + C80725) * C153878) *
               C153625 * C153922 -
           (C80697 * C153878 + C79918 * C153932 + C79919 * C153941 +
            (C74582 + C74581) * C153944) *
               C153625 * C153921 -
           ((C74288 * C56477 - C74289 * C56476 - C74288 * C56478 +
             C153472 * C56479 + C74286 * C34024 - C74287 * C34021 -
             C74286 * C34025 + C74280 * C34027) *
                C153878 +
            (C80725 + C80724) * C153932 + C80697 * C153941 + C79918 * C153944) *
               C153625 * C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[267] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C70500 * C152 - C70501 * C144 - C70500 * C153 +
                 C153942 * C168 + C70502 * C154 - C70503 * C145 -
                 C70502 * C155 + C153935 * C169 + C70504 * C156 -
                 C70505 * C146 - C70504 * C157 + C153916 * C170 +
                 C70506 * C158 - C70507 * C147 - C70506 * C159 +
                 C153862 * C171) *
                    C98536 +
                (C99023 + C99024 + C99025 + C99026) * C153724) *
                   C153625 * C1898 -
               ((C99027 + C99028 + C99029 + C99030) * C153724 +
                (C99026 + C99025 + C99024 + C99023) * C98536) *
                   C153625 * C153601) *
                  C153521 * C1093 +
              (((C99031 + C99032 + C99033 + C99034) * C98536 +
                (C99035 + C99036 + C99037 + C99038) * C153724) *
                   C153625 * C153601 -
               ((C99034 + C99033 + C99032 + C99031) * C153724 +
                (C70506 * C160 - C70507 * C148 - C70506 * C161 +
                 C153862 * C172 + C70504 * C158 - C70505 * C147 -
                 C70504 * C159 + C153916 * C171 + C70502 * C156 -
                 C70503 * C146 - C70502 * C157 + C153935 * C170 +
                 C70500 * C154 - C70501 * C145 - C70500 * C155 +
                 C153942 * C169) *
                    C98536) *
                   C153625 * C1898) *
                  C153521 * C1094 +
              (((C70500 * C156 - C70501 * C146 - C70500 * C157 +
                 C153942 * C170 + C70502 * C158 - C70503 * C147 -
                 C70502 * C159 + C153935 * C171 + C70504 * C160 -
                 C70505 * C148 - C70504 * C161 + C153916 * C172 +
                 C70506 * C162 - C70507 * C149 - C70506 * C163 +
                 C153862 * C173) *
                    C98536 +
                (C99451 + C99452 + C99453 + C99454) * C153724) *
                   C153625 * C1898 -
               ((C70506 * C510 - C70507 * C487 - C70506 * C511 +
                 C153862 * C523 + C70504 * C506 - C70505 * C485 -
                 C70504 * C507 + C153916 * C521 + C70502 * C504 -
                 C70503 * C484 - C70502 * C505 + C153935 * C520 +
                 C70500 * C502 - C70501 * C483 - C70500 * C503 +
                 C153942 * C519) *
                    C153724 +
                (C99454 + C99453 + C99452 + C99451) * C98536) *
                   C153625 * C153601) *
                  C153521 * C1095) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C70500 * C152 - C70501 * C144 - C70500 * C153 +
                 C153942 * C168 + C70502 * C154 - C70503 * C145 -
                 C70502 * C155 + C153935 * C169 + C70504 * C156 -
                 C70505 * C146 - C70504 * C157 + C153916 * C170 +
                 C70506 * C158 - C70507 * C147 - C70506 * C159 +
                 C153862 * C171) *
                    C98536 +
                (C99023 + C99024 + C99025 + C99026) * C153724) *
                   C153625 * C1898 -
               ((C99027 + C99028 + C99029 + C99030) * C153724 +
                (C99026 + C99025 + C99024 + C99023) * C98536) *
                   C153625 * C153601) *
                  C298 +
              (((C71734 + C71733 + C71732 + C71731) * C98536 +
                (C72309 + C72310 + C72311 + C72312) * C153724) *
                   C153625 * C153601 -
               ((C71731 + C71732 + C71733 + C71734) * C153724 +
                (C70802 + C70801 + C70800 + C70799) * C98536) *
                   C153625 * C1898) *
                  C299 +
              (((C70806 + C70805 + C70804 + C70803) * C98536 +
                (C72983 + C72984 + C72985 + C72986) * C153724) *
                   C153625 * C1898 -
               ((C70506 * C3289 - C70507 * C3282 - C70506 * C3290 +
                 C153862 * C3294 + C70504 * C3287 - C70505 * C3281 -
                 C70504 * C3288 + C153916 * C3293 + C70502 * C3285 -
                 C70503 * C3280 - C70502 * C3286 + C153935 * C3292 +
                 C70500 * C3283 - C70501 * C3279 - C70500 * C3284 +
                 C153942 * C3291) *
                    C153724 +
                (C72986 + C72985 + C72984 + C72983) * C98536) *
                   C153625 * C153601) *
                  C300) *
             C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
            C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
            C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
            C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
               C98536 +
           (C99023 + C99024 + C99025 + C99026) * C153724) *
              C153625 * C2104 -
          ((C99027 + C99028 + C99029 + C99030) * C153724 +
           (C99026 + C99025 + C99024 + C99023) * C98536) *
              C153625 * C2105 +
          ((C99030 + C99029 + C99028 + C99027) * C98536 +
           (C101419 + C101420 + C101421 + C101422) * C153724) *
              C153625 * C2106 -
          ((C70506 * C7524 - C70507 * C7517 - C70506 * C7525 + C153862 * C7529 +
            C70504 * C7522 - C70505 * C7516 - C70504 * C7523 + C153916 * C7528 +
            C70502 * C7520 - C70503 * C7515 - C70502 * C7521 + C153935 * C7527 +
            C70500 * C7518 - C70501 * C7514 - C70500 * C7519 +
            C153942 * C7526) *
               C153724 +
           (C101422 + C101421 + C101420 + C101419) * C98536) *
              C153625 * C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C98536 +
             (C78877 + C78878) * C153724) *
                C153936 +
            ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
            C102557 * C153898) *
               C1898 -
           (C105560 * C153898 + (C79918 * C153724 + C79919 * C98536) * C153924 +
            ((C78880 + C78879) * C153724 + (C78878 + C78877) * C98536) *
                C153936) *
               C153601) *
              C153521 * C1093 +
          ((((C78885 + C78886) * C98536 + (C78887 + C78888) * C153724) *
                C153936 +
            (C79920 * C98536 + C79921 * C153724) * C153924 +
            (C94919 * C98536 + (C78487 + C78488) * C153724) * C153898) *
               C153601 -
           (C102558 * C153898 +
            (C79922 * C153724 + (C74590 + C74589) * C98536) * C153924 +
            ((C78886 + C78885) * C153724 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C98536) *
                C153936) *
               C1898) *
              C153521 * C1094 +
          ((((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
              C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                 C98536 +
             (C79527 + C79528) * C153724) *
                C153936 +
            ((C75029 + C75030) * C98536 + (C79209 + C79210) * C153724) *
                C153924 +
            ((C75031 + C75032) * C98536 + (C94241 + C94242) * C153724) *
                C153898) *
               C1898 -
           (((C74288 * C3289 - C74289 * C3282 - C74288 * C3290 +
              C153472 * C3294 + C74286 * C3287 - C74287 * C3281 -
              C74286 * C3288 + C74280 * C3293) *
                 C153724 +
             (C94242 + C94241) * C98536) *
                C153898 +
            ((C79212 + C79211) * C153724 + (C79210 + C79209) * C98536) *
                C153924 +
            ((C79530 + C79529) * C153724 + (C79528 + C79527) * C98536) *
                C153936) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C98536 +
             (C78877 + C78878) * C153724) *
                C153936 +
            ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
            C102557 * C153898) *
               C1898 -
           (C105560 * C153898 + (C79918 * C153724 + C79919 * C98536) * C153924 +
            ((C78880 + C78879) * C153724 + (C78878 + C78877) * C98536) *
                C153936) *
               C153601) *
              C298 +
          (((C79917 * C98536 + C78795 * C153724) * C153936 +
            (C81694 * C98536 + C81695 * C153724) * C153924 +
            (C96665 * C98536 + (C76147 + C76148) * C153724) * C153898) *
               C153601 -
           (C104301 * C153898 +
            (C76796 * C153724 + (C74584 + C74583) * C98536) * C153924 +
            (C79919 * C153724 + (C74582 + C74581) * C98536) * C153936) *
               C1898) *
              C299 +
          ((C102557 * C153936 + (C74598 * C98536 + C96665 * C153724) * C153924 +
            ((C74588 + C74587) * C98536 + (C76811 + C76812) * C153724) *
                C153898) *
               C1898 -
           (((C74288 * C28550 - C74289 * C28547 - C74288 * C28551 +
              C153472 * C28553 + C74286 * C28548 - C74287 * C28546 -
              C74286 * C28549 + C74280 * C28552) *
                 C153724 +
             (C76812 + C76811) * C98536) *
                C153898 +
            ((C76148 + C76147) * C153724 + C76795 * C98536) * C153924 +
            C105560 * C153936) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C98536 +
            (C78877 + C78878) * C153724) *
               C153936 +
           ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
           C102557 * C153898) *
              C2104 -
          (C105560 * C153898 + (C79918 * C153724 + C79919 * C98536) * C153924 +
           ((C78880 + C78879) * C153724 + (C78878 + C78877) * C98536) *
               C153936) *
              C2105 +
          ((C78893 * C98536 + (C78884 + C78883) * C153724) * C153936 +
           (C78795 * C98536 + C80698 * C153724) * C153924 +
           (C81695 * C98536 + (C80726 + C80727) * C153724) * C153898) *
              C2106 -
          (((C74288 * C31225 - C74289 * C31222 - C74288 * C31226 +
             C153472 * C31228 + C74286 * C31223 - C74287 * C31221 -
             C74286 * C31224 + C74280 * C31227) *
                C153724 +
            (C80727 + C80726) * C98536) *
               C153898 +
           ((C80725 + C80724) * C153724 + C80697 * C98536) * C153924 +
           ((C82484 + C82483) * C153724 + C82470 * C98536) * C153936) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153944 +
            (C78877 + C78878) * C153941 + C78893 * C153932 +
            C107823 * C153878) *
               C153625 * C1898 -
           ((C82484 + C82483) * C153878 + C82470 * C153932 +
            (C78880 + C78879) * C153941 + (C78878 + C78877) * C153944) *
               C153625 * C153601) *
              C153521 * C1093 +
          (((C78885 + C78886) * C153944 + (C78887 + C78888) * C153941 +
            (C78889 + C78890) * C153932 + (C107837 + C107838) * C153878) *
               C153625 * C153601 -
           (C107832 * C153878 + C78894 * C153932 + (C78886 + C78885) * C153941 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153944) *
               C153625 * C1898) *
              C153521 * C1094 +
          (((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
             C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                C153944 +
            (C79527 + C79528) * C153941 + (C79529 + C79530) * C153932 +
            (C108239 + C108240) * C153878) *
               C153625 * C1898 -
           ((C74288 * C7524 - C74289 * C7517 - C74288 * C7525 +
             C153472 * C7529 + C74286 * C7522 - C74287 * C7516 -
             C74286 * C7523 + C74280 * C7528) *
                C153878 +
            (C108240 + C108239) * C153932 + (C79530 + C79529) * C153941 +
            (C79528 + C79527) * C153944) *
               C153625 * C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153944 +
            (C78877 + C78878) * C153941 + C78893 * C153932 +
            C107823 * C153878) *
               C153625 * C1898 -
           ((C82484 + C82483) * C153878 + C82470 * C153932 +
            (C78880 + C78879) * C153941 + (C78878 + C78877) * C153944) *
               C153625 * C153601) *
              C298 +
          ((C79917 * C153944 + C78795 * C153941 + C80698 * C153932 +
            (C80724 + C80725) * C153878) *
               C153625 * C153601 -
           (C80697 * C153878 + C79918 * C153932 + C79919 * C153941 +
            (C74582 + C74581) * C153944) *
               C153625 * C1898) *
              C299 +
          ((C74597 * C153944 + C81694 * C153941 + C81695 * C153932 +
            (C80726 + C80727) * C153878) *
               C153625 * C1898 -
           ((C74288 * C31225 - C74289 * C31222 - C74288 * C31226 +
             C153472 * C31228 + C74286 * C31223 - C74287 * C31221 -
             C74286 * C31224 + C74280 * C31227) *
                C153878 +
            (C80727 + C80726) * C153932 + C80715 * C153941 + C76796 * C153944) *
               C153625 * C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
            C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
               C153944 +
           (C78877 + C78878) * C153941 + C78893 * C153932 + C107823 * C153878) *
              C153625 * C2104 -
          (C110181 * C153878 + C82470 * C153932 + (C78880 + C78879) * C153941 +
           (C78878 + C78877) * C153944) *
              C153625 * C2105 +
          (C78893 * C153944 + C107823 * C153941 + (C82483 + C82484) * C153932 +
           (C110194 + C110195) * C153878) *
              C153625 * C2106 -
          ((C74288 * C56031 - C74289 * C56028 - C74288 * C56032 +
            C153472 * C56034 + C74286 * C56029 - C74287 * C56027 -
            C74286 * C56030 + C74280 * C56033) *
               C153878 +
           (C110195 + C110194) * C153932 + C110181 * C153941 +
           C82470 * C153944) *
              C153625 * C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[268] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C98536 +
             (C78877 + C78878) * C153724) *
                C153936 +
            ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
            C102557 * C153898) *
               C153921 -
           (C105560 * C153898 + (C79918 * C153724 + C79919 * C98536) * C153924 +
            ((C78880 + C78879) * C153724 + (C78878 + C78877) * C98536) *
                C153936) *
               C153922 +
           ((C78893 * C98536 + (C78884 + C78883) * C153724) * C153936 +
            (C78795 * C98536 + C80698 * C153724) * C153924 +
            (C81695 * C98536 + (C80726 + C80727) * C153724) * C153898) *
               C2414) *
              C153521 * C153840 +
          ((((C78885 + C78886) * C98536 + (C78887 + C78888) * C153724) *
                C153936 +
            (C79920 * C98536 + C79921 * C153724) * C153924 +
            (C94919 * C98536 + (C78487 + C78488) * C153724) * C153898) *
               C153922 -
           (C102558 * C153898 +
            (C79922 * C153724 + (C74590 + C74589) * C98536) * C153924 +
            ((C78886 + C78885) * C153724 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C98536) *
                C153936) *
               C153921 -
           (((C74288 * C6185 - C74289 * C6179 - C74288 * C6186 +
              C153472 * C6197 + C74286 * C6187 - C74287 * C6180 -
              C74286 * C6188 + C74280 * C6198) *
                 C153724 +
             (C78488 + C78487) * C98536) *
                C153898 +
            ((C78892 + C78891) * C153724 + C78844 * C98536) * C153924 +
            ((C78890 + C78889) * C153724 + C78894 * C98536) * C153936) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C98536 +
            (C99023 + C99024 + C99025 + C99026) * C153724) *
               C153625 * C153921 -
           ((C99027 + C99028 + C99029 + C99030) * C153724 +
            (C99026 + C99025 + C99024 + C99023) * C98536) *
               C153625 * C153922 +
           ((C99030 + C99029 + C99028 + C99027) * C98536 +
            (C101419 + C101420 + C101421 + C101422) * C153724) *
               C153625 * C2414) *
              C153521 * C153840 +
          (((C99031 + C99032 + C99033 + C99034) * C98536 +
            (C99035 + C99036 + C99037 + C99038) * C153724) *
               C153625 * C153922 -
           ((C99034 + C99033 + C99032 + C99031) * C153724 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C98536) *
               C153625 * C153921 -
           ((C70506 * C2113 - C70507 * C2108 - C70506 * C2114 +
             C153862 * C2123 + C70504 * C2115 - C70505 * C2109 -
             C70504 * C2116 + C153916 * C2124 + C70502 * C2117 -
             C70503 * C2110 - C70502 * C2118 + C153935 * C2125 +
             C70500 * C2119 - C70501 * C2111 - C70500 * C2120 +
             C153942 * C2126) *
                C153724 +
            (C99038 + C99037 + C99036 + C99035) * C98536) *
               C153625 * C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153944 +
            (C78877 + C78878) * C153941 + C78893 * C153932 +
            C107823 * C153878) *
               C153625 * C153921 -
           (C110181 * C153878 + C82470 * C153932 + (C78880 + C78879) * C153941 +
            (C78878 + C78877) * C153944) *
               C153625 * C153922 +
           (C78893 * C153944 + C107823 * C153941 + (C82483 + C82484) * C153932 +
            (C110194 + C110195) * C153878) *
               C153625 * C2414) *
              C153521 * C153840 +
          (((C78885 + C78886) * C153944 + (C78887 + C78888) * C153941 +
            (C78889 + C78890) * C153932 + (C107837 + C107838) * C153878) *
               C153625 * C153922 -
           (C107832 * C153878 + C78894 * C153932 + (C78886 + C78885) * C153941 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153944) *
               C153625 * C153921 -
           ((C74288 * C10381 - C74289 * C10378 - C74288 * C10382 +
             C153472 * C10387 + C74286 * C10383 - C74287 * C10379 -
             C74286 * C10384 + C74280 * C10388) *
                C153878 +
            (C107838 + C107837) * C153932 + C107832 * C153941 +
            C78894 * C153944) *
               C153625 * C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[269] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C98536 +
            (C99023 + C99024 + C99025 + C99026) * C153724) *
               C153625 * C1898 -
           ((C99027 + C99028 + C99029 + C99030) * C153724 +
            (C99026 + C99025 + C99024 + C99023) * C98536) *
               C153625 * C153601) *
              C298 +
          (((C71734 + C71733 + C71732 + C71731) * C98536 +
            (C72309 + C72310 + C72311 + C72312) * C153724) *
               C153625 * C153601 -
           ((C71731 + C71732 + C71733 + C71734) * C153724 +
            (C70802 + C70801 + C70800 + C70799) * C98536) *
               C153625 * C1898) *
              C299 +
          (((C70806 + C70805 + C70804 + C70803) * C98536 +
            (C72983 + C72984 + C72985 + C72986) * C153724) *
               C153625 * C1898 -
           ((C70506 * C3289 - C70507 * C3282 - C70506 * C3290 +
             C153862 * C3294 + C70504 * C3287 - C70505 * C3281 -
             C70504 * C3288 + C153916 * C3293 + C70502 * C3285 -
             C70503 * C3280 - C70502 * C3286 + C153935 * C3292 +
             C70500 * C3283 - C70501 * C3279 - C70500 * C3284 +
             C153942 * C3291) *
                C153724 +
            (C72986 + C72985 + C72984 + C72983) * C98536) *
               C153625 * C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C98536 +
            (C99023 + C99024 + C99025 + C99026) * C153724) *
               C153625 * C1898 -
           ((C99027 + C99028 + C99029 + C99030) * C153724 +
            (C99026 + C99025 + C99024 + C99023) * C98536) *
               C153625 * C153601) *
              C153521 * C1093 +
          (((C99031 + C99032 + C99033 + C99034) * C98536 +
            (C99035 + C99036 + C99037 + C99038) * C153724) *
               C153625 * C153601 -
           ((C99034 + C99033 + C99032 + C99031) * C153724 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C98536) *
               C153625 * C1898) *
              C153521 * C1094 +
          (((C70500 * C156 - C70501 * C146 - C70500 * C157 + C153942 * C170 +
             C70502 * C158 - C70503 * C147 - C70502 * C159 + C153935 * C171 +
             C70504 * C160 - C70505 * C148 - C70504 * C161 + C153916 * C172 +
             C70506 * C162 - C70507 * C149 - C70506 * C163 + C153862 * C173) *
                C98536 +
            (C99451 + C99452 + C99453 + C99454) * C153724) *
               C153625 * C1898 -
           ((C70506 * C510 - C70507 * C487 - C70506 * C511 + C153862 * C523 +
             C70504 * C506 - C70505 * C485 - C70504 * C507 + C153916 * C521 +
             C70502 * C504 - C70503 * C484 - C70502 * C505 + C153935 * C520 +
             C70500 * C502 - C70501 * C483 - C70500 * C503 + C153942 * C519) *
                C153724 +
            (C99454 + C99453 + C99452 + C99451) * C98536) *
               C153625 * C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C98536 +
             (C78877 + C78878) * C153724) *
                C153936 +
            ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
            C102557 * C153898) *
               C1898 -
           (C105560 * C153898 + (C79918 * C153724 + C79919 * C98536) * C153924 +
            ((C78880 + C78879) * C153724 + (C78878 + C78877) * C98536) *
                C153936) *
               C153601) *
              C153521 * C1093 +
          ((((C78885 + C78886) * C98536 + (C78887 + C78888) * C153724) *
                C153936 +
            (C79920 * C98536 + C79921 * C153724) * C153924 +
            (C94919 * C98536 + (C78487 + C78488) * C153724) * C153898) *
               C153601 -
           (C102558 * C153898 +
            (C79922 * C153724 + (C74590 + C74589) * C98536) * C153924 +
            ((C78886 + C78885) * C153724 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C98536) *
                C153936) *
               C1898) *
              C153521 * C1094 +
          ((((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
              C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                 C98536 +
             (C79527 + C79528) * C153724) *
                C153936 +
            ((C75029 + C75030) * C98536 + (C79209 + C79210) * C153724) *
                C153924 +
            ((C75031 + C75032) * C98536 + (C94241 + C94242) * C153724) *
                C153898) *
               C1898 -
           (((C74288 * C3289 - C74289 * C3282 - C74288 * C3290 +
              C153472 * C3294 + C74286 * C3287 - C74287 * C3281 -
              C74286 * C3288 + C74280 * C3293) *
                 C153724 +
             (C94242 + C94241) * C98536) *
                C153898 +
            ((C79212 + C79211) * C153724 + (C79210 + C79209) * C98536) *
                C153924 +
            ((C79530 + C79529) * C153724 + (C79528 + C79527) * C98536) *
                C153936) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C98536 +
             (C78877 + C78878) * C153724) *
                C153936 +
            ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
            C102557 * C153898) *
               C1898 -
           (C105560 * C153898 + (C79918 * C153724 + C79919 * C98536) * C153924 +
            ((C78880 + C78879) * C153724 + (C78878 + C78877) * C98536) *
                C153936) *
               C153601) *
              C298 +
          (((C79917 * C98536 + C78795 * C153724) * C153936 +
            (C81694 * C98536 + C81695 * C153724) * C153924 +
            (C96665 * C98536 + (C76147 + C76148) * C153724) * C153898) *
               C153601 -
           (C104301 * C153898 +
            (C76796 * C153724 + (C74584 + C74583) * C98536) * C153924 +
            (C79919 * C153724 + (C74582 + C74581) * C98536) * C153936) *
               C1898) *
              C299 +
          ((C102557 * C153936 + (C74598 * C98536 + C96665 * C153724) * C153924 +
            ((C74588 + C74587) * C98536 + (C76811 + C76812) * C153724) *
                C153898) *
               C1898 -
           (((C74288 * C28550 - C74289 * C28547 - C74288 * C28551 +
              C153472 * C28553 + C74286 * C28548 - C74287 * C28546 -
              C74286 * C28549 + C74280 * C28552) *
                 C153724 +
             (C76812 + C76811) * C98536) *
                C153898 +
            ((C76148 + C76147) * C153724 + C76795 * C98536) * C153924 +
            C105560 * C153936) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153944 +
            (C78877 + C78878) * C153941 + C78893 * C153932 +
            C107823 * C153878) *
               C153625 * C1898 -
           ((C82484 + C82483) * C153878 + C82470 * C153932 +
            (C78880 + C78879) * C153941 + (C78878 + C78877) * C153944) *
               C153625 * C153601) *
              C153521 * C1093 +
          (((C78885 + C78886) * C153944 + (C78887 + C78888) * C153941 +
            (C78889 + C78890) * C153932 + (C107837 + C107838) * C153878) *
               C153625 * C153601 -
           (C107832 * C153878 + C78894 * C153932 + (C78886 + C78885) * C153941 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C153944) *
               C153625 * C1898) *
              C153521 * C1094 +
          (((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
             C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                C153944 +
            (C79527 + C79528) * C153941 + (C79529 + C79530) * C153932 +
            (C108239 + C108240) * C153878) *
               C153625 * C1898 -
           ((C74288 * C7524 - C74289 * C7517 - C74288 * C7525 +
             C153472 * C7529 + C74286 * C7522 - C74287 * C7516 -
             C74286 * C7523 + C74280 * C7528) *
                C153878 +
            (C108240 + C108239) * C153932 + (C79530 + C79529) * C153941 +
            (C79528 + C79527) * C153944) *
               C153625 * C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C153944 +
            (C78877 + C78878) * C153941 + C78893 * C153932 +
            C107823 * C153878) *
               C153625 * C1898 -
           ((C82484 + C82483) * C153878 + C82470 * C153932 +
            (C78880 + C78879) * C153941 + (C78878 + C78877) * C153944) *
               C153625 * C153601) *
              C298 +
          ((C79917 * C153944 + C78795 * C153941 + C80698 * C153932 +
            (C80724 + C80725) * C153878) *
               C153625 * C153601 -
           (C80697 * C153878 + C79918 * C153932 + C79919 * C153941 +
            (C74582 + C74581) * C153944) *
               C153625 * C1898) *
              C299 +
          ((C74597 * C153944 + C81694 * C153941 + C81695 * C153932 +
            (C80726 + C80727) * C153878) *
               C153625 * C1898 -
           ((C74288 * C31225 - C74289 * C31222 - C74288 * C31226 +
             C153472 * C31228 + C74286 * C31223 - C74287 * C31221 -
             C74286 * C31224 + C74280 * C31227) *
                C153878 +
            (C80727 + C80726) * C153932 + C80715 * C153941 + C76796 * C153944) *
               C153625 * C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[270] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153720 +
            (C88599 + C88600 + C88601) * C153727 + C116661 * C116209) *
               C153625 * C153537 * C153848 -
           (C90418 * C116209 + C89627 * C153727 +
            (C83937 + C83936 + C83935) * C153720) *
               C153625 * C153537 * C153573) *
              C153917 +
          (((C83944 + C83945 + C83946) * C153720 + C89628 * C153727 +
            (C88611 + C88612 + C88613) * C116209) *
               C153625 * C153537 * C153573 -
           (C116665 * C116209 + (C88607 + C88606 + C88605) * C153727 +
            (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
             C152106 * C156 - C152145 * C146 - C152106 * C157 + C153475 * C170 +
             C152110 * C154 - C152150 * C145 - C152110 * C155 +
             C153467 * C169) *
                C153720) *
               C153625 * C153537 * C153848) *
              C153918 +
          (((C152110 * C156 - C152150 * C146 - C152110 * C157 + C153467 * C170 +
             C152106 * C158 - C152145 * C147 - C152106 * C159 + C153475 * C171 +
             C152156 * C160 - C83607 * C148 - C152156 * C161 + C83598 * C172) *
                C153720 +
            (C89233 + C89234 + C89235) * C153727 +
            (C152110 * C502 - C152150 * C483 - C152110 * C503 + C153467 * C519 +
             C152106 * C504 - C152145 * C484 - C152106 * C505 + C153475 * C520 +
             C152156 * C506 - C83607 * C485 - C152156 * C507 + C83598 * C521) *
                C116209) *
               C153625 * C153537 * C153848 -
           ((C152156 * C1330 - C83607 * C1325 - C152156 * C1331 +
             C83598 * C1340 + C152106 * C1332 - C152145 * C1326 -
             C152106 * C1333 + C153475 * C1341 + C152110 * C1334 -
             C152150 * C1327 - C152110 * C1335 + C153467 * C1342) *
                C116209 +
            (C88924 + C88923 + C88922) * C153727 +
            (C84433 + C84432 + C84431) * C153720) *
               C153625 * C153537 * C153573) *
              C650)) /
        (p * q * std::sqrt(p + q));
    d2ee[271] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
              C153467 * C168 + C152106 * C154 - C152145 * C145 -
              C152106 * C155 + C153475 * C169 + C152156 * C156 - C83607 * C146 -
              C152156 * C157 + C83598 * C170) *
                 C153720 +
             (C88599 + C88600 + C88601) * C153727 + C116661 * C116209) *
                C153625 * C153849 -
            ((C92191 + C92190 + C92189) * C116209 +
             (C88602 + C88603 + C88604) * C153727 +
             (C88601 + C88600 + C88599) * C153720) *
                C153625 * C153601) *
               C153848 +
           ((C89626 * C153720 + C90419 * C153727 +
             (C90426 + C90427 + C90428) * C116209) *
                C153625 * C153601 -
            (C90418 * C116209 + C89627 * C153727 +
             (C83937 + C83936 + C83935) * C153720) *
                C153625 * C153849) *
               C153573) *
              C301 +
          ((((C88605 + C88606 + C88607) * C153720 +
             (C88608 + C88609 + C88610) * C153727 +
             (C116669 + C116670 + C116671) * C116209) *
                C153625 * C153601 -
            (C116665 * C116209 + (C88607 + C88606 + C88605) * C153727 +
             (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
              C152106 * C156 - C152145 * C146 - C152106 * C157 +
              C153475 * C170 + C152110 * C154 - C152150 * C145 -
              C152110 * C155 + C153467 * C169) *
                 C153720) *
                C153625 * C153849) *
               C153848 +
           (((C83944 + C83945 + C83946) * C153720 + C89628 * C153727 +
             (C88611 + C88612 + C88613) * C116209) *
                C153625 * C153849 -
            ((C152156 * C8429 - C83607 * C8428 - C152156 * C8430 +
              C83598 * C8431 + C152106 * C6191 - C152145 * C6182 -
              C152106 * C6192 + C153475 * C6200 + C152110 * C6193 -
              C152150 * C6183 - C152110 * C6194 + C153467 * C6201) *
                 C116209 +
             (C88613 + C88612 + C88611) * C153727 + C89629 * C153720) *
                C153625 * C153601) *
               C153573) *
              C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[272] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153720 +
            (C88599 + C88600 + C88601) * C153727 +
            (C88604 + C88603 + C88602) * C116209) *
               C153625 * C153537 * C298 -
           (C90418 * C116209 + C89627 * C153727 +
            (C83937 + C83936 + C83935) * C153720) *
               C153625 * C153537 * C299 +
           (C83955 * C153720 + C91396 * C153727 +
            (C85674 + C85675 + C85676) * C116209) *
               C153625 * C153537 * C300) *
              C301 +
          (((C83944 + C83945 + C83946) * C153720 + C89628 * C153727 +
            (C88611 + C88612 + C88613) * C116209) *
               C153625 * C153537 * C299 -
           ((C88610 + C88609 + C88608) * C116209 +
            (C88607 + C88606 + C88605) * C153727 +
            (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
             C152106 * C156 - C152145 * C146 - C152106 * C157 + C153475 * C170 +
             C152110 * C154 - C152150 * C145 - C152110 * C155 +
             C153467 * C169) *
                C153720) *
               C153625 * C153537 * C298 -
           ((C152156 * C3289 - C83607 * C3282 - C152156 * C3290 +
             C83598 * C3294 + C152106 * C3287 - C152145 * C3281 -
             C152106 * C3288 + C153475 * C3293 + C152110 * C3285 -
             C152150 * C3280 - C152110 * C3286 + C153467 * C3292) *
                C116209 +
            (C85028 + C85027 + C85026) * C153727 + C83956 * C153720) *
               C153625 * C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
            C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
            C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
               C153720 +
           (C88599 + C88600 + C88601) * C153727 +
           (C88604 + C88603 + C88602) * C116209) *
              C153625 * C153537 * C153521 * C130 -
          ((C88610 + C88609 + C88608) * C116209 +
           (C88607 + C88606 + C88605) * C153727 +
           (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
            C152106 * C156 - C152145 * C146 - C152106 * C157 + C153475 * C170 +
            C152110 * C154 - C152150 * C145 - C152110 * C155 + C153467 * C169) *
               C153720) *
              C153625 * C153537 * C153521 * C131 +
          ((C152110 * C156 - C152150 * C146 - C152110 * C157 + C153467 * C170 +
            C152106 * C158 - C152145 * C147 - C152106 * C159 + C153475 * C171 +
            C152156 * C160 - C83607 * C148 - C152156 * C161 + C83598 * C172) *
               C153720 +
           (C89233 + C89234 + C89235) * C153727 +
           (C152110 * C502 - C152150 * C483 - C152110 * C503 + C153467 * C519 +
            C152106 * C504 - C152145 * C484 - C152106 * C505 + C153475 * C520 +
            C152156 * C506 - C83607 * C485 - C152156 * C507 + C83598 * C521) *
               C116209) *
              C153625 * C153537 * C153521 * C132 -
          ((C152156 * C510 - C83607 * C487 - C152156 * C511 + C83598 * C523 +
            C152106 * C506 - C152145 * C485 - C152106 * C507 + C153475 * C521 +
            C152110 * C504 - C152150 * C484 - C152110 * C505 + C153467 * C520) *
               C116209 +
           (C152156 * C508 - C83607 * C486 - C152156 * C509 + C83598 * C522 +
            C152106 * C488 - C152145 * C476 - C152106 * C489 + C153475 * C512 +
            C152110 * C490 - C152150 * C477 - C152110 * C491 + C153467 * C513) *
               C153727 +
           (C152156 * C162 - C83607 * C149 - C152156 * C163 + C83598 * C173 +
            C152106 * C160 - C152145 * C148 - C152106 * C161 + C153475 * C172 +
            C152110 * C158 - C152150 * C147 - C152110 * C159 + C153467 * C171) *
               C153720) *
              C153625 * C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153720 +
            (C88599 + C88600 + C88601) * C153727 + C116661 * C116209) *
               C153625 * C473 -
           ((C92191 + C92190 + C92189) * C116209 +
            (C88602 + C88603 + C88604) * C153727 +
            (C88601 + C88600 + C88599) * C153720) *
               C153625 * C474 +
           (C116661 * C153720 + (C92189 + C92190 + C92191) * C153727 +
            (C152110 * C7518 - C152150 * C7514 - C152110 * C7519 +
             C153467 * C7526 + C152106 * C7520 - C152145 * C7515 -
             C152106 * C7521 + C153475 * C7527 + C152156 * C7522 -
             C83607 * C7516 - C152156 * C7523 + C83598 * C7528) *
                C116209) *
               C153625 * C475) *
              C153521 * C301 +
          (((C88605 + C88606 + C88607) * C153720 +
            (C88608 + C88609 + C88610) * C153727 +
            (C116669 + C116670 + C116671) * C116209) *
               C153625 * C474 -
           (C116665 * C116209 + (C88607 + C88606 + C88605) * C153727 +
            (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
             C152106 * C156 - C152145 * C146 - C152106 * C157 + C153475 * C170 +
             C152110 * C154 - C152150 * C145 - C152110 * C155 +
             C153467 * C169) *
                C153720) *
               C153625 * C473 -
           ((C152156 * C7524 - C83607 * C7517 - C152156 * C7525 +
             C83598 * C7529 + C152106 * C7522 - C152145 * C7516 -
             C152106 * C7523 + C153475 * C7528 + C152110 * C7520 -
             C152150 * C7515 - C152110 * C7521 + C153467 * C7527) *
                C116209 +
            (C116671 + C116670 + C116669) * C153727 + C116665 * C153720) *
               C153625 * C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[273] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153720 +
            (C88599 + C88600 + C88601) * C153727 + C116661 * C116209) *
               C153625 * C153849 -
           ((C92191 + C92190 + C92189) * C116209 +
            (C88602 + C88603 + C88604) * C153727 +
            (C88601 + C88600 + C88599) * C153720) *
               C153625 * C153601) *
              C153521 * C153917 +
          (((C88605 + C88606 + C88607) * C153720 +
            (C88608 + C88609 + C88610) * C153727 +
            (C116669 + C116670 + C116671) * C116209) *
               C153625 * C153601 -
           (C116665 * C116209 + (C88607 + C88606 + C88605) * C153727 +
            (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
             C152106 * C156 - C152145 * C146 - C152106 * C157 + C153475 * C170 +
             C152110 * C154 - C152150 * C145 - C152110 * C155 +
             C153467 * C169) *
                C153720) *
               C153625 * C153849) *
              C153521 * C153918 +
          (((C152110 * C156 - C152150 * C146 - C152110 * C157 + C153467 * C170 +
             C152106 * C158 - C152145 * C147 - C152106 * C159 + C153475 * C171 +
             C152156 * C160 - C83607 * C148 - C152156 * C161 + C83598 * C172) *
                C153720 +
            (C89233 + C89234 + C89235) * C153727 +
            (C117126 + C117127 + C117128) * C116209) *
               C153625 * C153849 -
           ((C152156 * C2113 - C83607 * C2108 - C152156 * C2114 +
             C83598 * C2123 + C152106 * C2115 - C152145 * C2109 -
             C152106 * C2116 + C153475 * C2124 + C152110 * C2117 -
             C152150 * C2110 - C152110 * C2118 + C153467 * C2125) *
                C116209 +
            (C117128 + C117127 + C117126) * C153727 +
            (C89235 + C89234 + C89233) * C153720) *
               C153625 * C153601) *
              C153521 * C650)) /
        (p * q * std::sqrt(p + q));
    d2ee[274] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
            C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
            C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
               C153720 +
           (C88599 + C88600 + C88601) * C153727 +
           (C88604 + C88603 + C88602) * C116209) *
              C153625 * C153537 * C153521 * C130 -
          ((C88610 + C88609 + C88608) * C116209 +
           (C88607 + C88606 + C88605) * C153727 +
           (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
            C152106 * C156 - C152145 * C146 - C152106 * C157 + C153475 * C170 +
            C152110 * C154 - C152150 * C145 - C152110 * C155 + C153467 * C169) *
               C153720) *
              C153625 * C153537 * C153521 * C131 +
          ((C152110 * C156 - C152150 * C146 - C152110 * C157 + C153467 * C170 +
            C152106 * C158 - C152145 * C147 - C152106 * C159 + C153475 * C171 +
            C152156 * C160 - C83607 * C148 - C152156 * C161 + C83598 * C172) *
               C153720 +
           (C89233 + C89234 + C89235) * C153727 +
           (C152110 * C502 - C152150 * C483 - C152110 * C503 + C153467 * C519 +
            C152106 * C504 - C152145 * C484 - C152106 * C505 + C153475 * C520 +
            C152156 * C506 - C83607 * C485 - C152156 * C507 + C83598 * C521) *
               C116209) *
              C153625 * C153537 * C153521 * C132 -
          ((C152156 * C510 - C83607 * C487 - C152156 * C511 + C83598 * C523 +
            C152106 * C506 - C152145 * C485 - C152106 * C507 + C153475 * C521 +
            C152110 * C504 - C152150 * C484 - C152110 * C505 + C153467 * C520) *
               C116209 +
           (C152156 * C508 - C83607 * C486 - C152156 * C509 + C83598 * C522 +
            C152106 * C488 - C152145 * C476 - C152106 * C489 + C153475 * C512 +
            C152110 * C490 - C152150 * C477 - C152110 * C491 + C153467 * C513) *
               C153727 +
           (C152156 * C162 - C83607 * C149 - C152156 * C163 + C83598 * C173 +
            C152106 * C160 - C152145 * C148 - C152106 * C161 + C153475 * C172 +
            C152110 * C158 - C152150 * C147 - C152110 * C159 + C153467 * C171) *
               C153720) *
              C153625 * C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153720 +
            (C88599 + C88600 + C88601) * C153727 +
            (C88604 + C88603 + C88602) * C116209) *
               C153625 * C153537 * C298 -
           (C90418 * C116209 + C89627 * C153727 +
            (C83937 + C83936 + C83935) * C153720) *
               C153625 * C153537 * C299 +
           (C83955 * C153720 + C91396 * C153727 +
            (C85674 + C85675 + C85676) * C116209) *
               C153625 * C153537 * C300) *
              C301 +
          (((C83944 + C83945 + C83946) * C153720 + C89628 * C153727 +
            (C88611 + C88612 + C88613) * C116209) *
               C153625 * C153537 * C299 -
           ((C88610 + C88609 + C88608) * C116209 +
            (C88607 + C88606 + C88605) * C153727 +
            (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
             C152106 * C156 - C152145 * C146 - C152106 * C157 + C153475 * C170 +
             C152110 * C154 - C152150 * C145 - C152110 * C155 +
             C153467 * C169) *
                C153720) *
               C153625 * C153537 * C298 -
           ((C152156 * C3289 - C83607 * C3282 - C152156 * C3290 +
             C83598 * C3294 + C152106 * C3287 - C152145 * C3281 -
             C152106 * C3288 + C153475 * C3293 + C152110 * C3285 -
             C152150 * C3280 - C152110 * C3286 + C153467 * C3292) *
                C116209 +
            (C85028 + C85027 + C85026) * C153727 + C83956 * C153720) *
               C153625 * C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[275] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153720 +
            (C88599 + C88600 + C88601) * C153727 + C116661 * C116209) *
               C153625 * C153537 * C153919 -
           (C90418 * C116209 + C89627 * C153727 +
            (C83937 + C83936 + C83935) * C153720) *
               C153625 * C153537 * C153920 +
           (C83955 * C153720 + C91396 * C153727 +
            (C85674 + C85675 + C85676) * C116209) *
               C153625 * C153537 * C1469) *
              C153840 +
          (((C83944 + C83945 + C83946) * C153720 + C89628 * C153727 +
            (C88611 + C88612 + C88613) * C116209) *
               C153625 * C153537 * C153920 -
           (C116665 * C116209 + (C88607 + C88606 + C88605) * C153727 +
            (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
             C152106 * C156 - C152145 * C146 - C152106 * C157 + C153475 * C170 +
             C152110 * C154 - C152150 * C145 - C152110 * C155 +
             C153467 * C169) *
                C153720) *
               C153625 * C153537 * C153919 -
           ((C152156 * C3289 - C83607 * C3282 - C152156 * C3290 +
             C83598 * C3294 + C152106 * C3287 - C152145 * C3281 -
             C152106 * C3288 + C153475 * C3293 + C152110 * C3285 -
             C152150 * C3280 - C152110 * C3286 + C153467 * C3292) *
                C116209 +
            (C85028 + C85027 + C85026) * C153727 + C83956 * C153720) *
               C153625 * C153537 * C1469) *
              C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[276] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153720 +
            (C88599 + C88600 + C88601) * C153727 + C116661 * C116209) *
               C153625 * C153849 -
           ((C92191 + C92190 + C92189) * C116209 +
            (C88602 + C88603 + C88604) * C153727 +
            (C88601 + C88600 + C88599) * C153720) *
               C153625 * C153601) *
              C153919 +
          ((C89626 * C153720 + C90419 * C153727 +
            (C90426 + C90427 + C90428) * C116209) *
               C153625 * C153601 -
           (C90418 * C116209 + C89627 * C153727 +
            (C83937 + C83936 + C83935) * C153720) *
               C153625 * C153849) *
              C153920 +
          ((C83955 * C153720 + C91396 * C153727 +
            (C85674 + C85675 + C85676) * C116209) *
               C153625 * C153849 -
           ((C152156 * C6185 - C83607 * C6179 - C152156 * C6186 +
             C83598 * C6197 + C152106 * C6187 - C152145 * C6180 -
             C152106 * C6188 + C153475 * C6198 + C152110 * C6189 -
             C152150 * C6181 - C152110 * C6190 + C153467 * C6199) *
                C116209 +
            (C85676 + C85675 + C85674) * C153727 + C86416 * C153720) *
               C153625 * C153601) *
              C1469) *
         C153502) /
        (p * q * std::sqrt(p + q));
    d2ee[277] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
            C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
            C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
               C153720 +
           (C88599 + C88600 + C88601) * C153727 + C116661 * C116209) *
              C153625 * C153537 * C1178 -
          (C90418 * C116209 + C89627 * C153727 +
           (C83937 + C83936 + C83935) * C153720) *
              C153625 * C153537 * C1179 +
          (C83955 * C153720 + C91396 * C153727 +
           (C85674 + C85675 + C85676) * C116209) *
              C153625 * C153537 * C1180 -
          ((C152156 * C4784 - C83607 * C4781 - C152156 * C4785 +
            C83598 * C4790 + C152106 * C4786 - C152145 * C4782 -
            C152106 * C4787 + C153475 * C4791 + C152110 * C4788 -
            C152150 * C4783 - C152110 * C4789 + C153467 * C4792) *
               C116209 +
           (C86426 + C86425 + C86424) * C153727 + C85406 * C153720) *
              C153625 * C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153720 +
            (C88599 + C88600 + C88601) * C153727 + C116661 * C116209) *
               C153625 * C153537 * C1091 -
           (C90418 * C116209 + C89627 * C153727 +
            (C83937 + C83936 + C83935) * C153720) *
               C153625 * C153537 * C153573) *
              C1093 +
          (((C83944 + C83945 + C83946) * C153720 + C89628 * C153727 +
            (C88611 + C88612 + C88613) * C116209) *
               C153625 * C153537 * C153573 -
           (C116665 * C116209 + (C88607 + C88606 + C88605) * C153727 +
            (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
             C152106 * C156 - C152145 * C146 - C152106 * C157 + C153475 * C170 +
             C152110 * C154 - C152150 * C145 - C152110 * C155 +
             C153467 * C169) *
                C153720) *
               C153625 * C153537 * C1091) *
              C1094 +
          (((C152110 * C156 - C152150 * C146 - C152110 * C157 + C153467 * C170 +
             C152106 * C158 - C152145 * C147 - C152106 * C159 + C153475 * C171 +
             C152156 * C160 - C83607 * C148 - C152156 * C161 + C83598 * C172) *
                C153720 +
            (C89233 + C89234 + C89235) * C153727 +
            (C117126 + C117127 + C117128) * C116209) *
               C153625 * C153537 * C1091 -
           ((C152156 * C1330 - C83607 * C1325 - C152156 * C1331 +
             C83598 * C1340 + C152106 * C1332 - C152145 * C1326 -
             C152106 * C1333 + C153475 * C1341 + C152110 * C1334 -
             C152150 * C1327 - C152110 * C1335 + C153467 * C1342) *
                C116209 +
            (C88924 + C88923 + C88922) * C153727 +
            (C84433 + C84432 + C84431) * C153720) *
               C153625 * C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153720 +
            (C88599 + C88600 + C88601) * C153727 + C116661 * C116209) *
               C153625 * C473 -
           ((C92191 + C92190 + C92189) * C116209 +
            (C88602 + C88603 + C88604) * C153727 +
            (C88601 + C88600 + C88599) * C153720) *
               C153625 * C474 +
           (C116661 * C153720 + (C92189 + C92190 + C92191) * C153727 +
            (C152110 * C7518 - C152150 * C7514 - C152110 * C7519 +
             C153467 * C7526 + C152106 * C7520 - C152145 * C7515 -
             C152106 * C7521 + C153475 * C7527 + C152156 * C7522 -
             C83607 * C7516 - C152156 * C7523 + C83598 * C7528) *
                C116209) *
               C153625 * C475) *
              C1091 +
          ((C89626 * C153720 + C90419 * C153727 +
            (C90426 + C90427 + C90428) * C116209) *
               C153625 * C474 -
           (C90418 * C116209 + C89627 * C153727 +
            (C83937 + C83936 + C83935) * C153720) *
               C153625 * C473 -
           ((C152156 * C9038 - C83607 * C9035 - C152156 * C9039 +
             C83598 * C9044 + C152106 * C9040 - C152145 * C9036 -
             C152106 * C9041 + C153475 * C9045 + C152110 * C9042 -
             C152150 * C9037 - C152110 * C9043 + C153467 * C9046) *
                C116209 +
            (C90428 + C90427 + C90426) * C153727 + C90418 * C153720) *
               C153625 * C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[278] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
              C153467 * C168 + C152106 * C154 - C152145 * C145 -
              C152106 * C155 + C153475 * C169 + C152156 * C156 - C83607 * C146 -
              C152156 * C157 + C83598 * C170) *
                 C153720 +
             (C88599 + C88600 + C88601) * C153727 + C116661 * C116209) *
                C153625 * C153849 -
            ((C92191 + C92190 + C92189) * C116209 +
             (C88602 + C88603 + C88604) * C153727 +
             (C88601 + C88600 + C88599) * C153720) *
                C153625 * C153601) *
               C1091 +
           ((C89626 * C153720 + C90419 * C153727 +
             (C90426 + C90427 + C90428) * C116209) *
                C153625 * C153601 -
            (C90418 * C116209 + C89627 * C153727 +
             (C83937 + C83936 + C83935) * C153720) *
                C153625 * C153849) *
               C153573) *
              C153840 +
          ((((C88605 + C88606 + C88607) * C153720 +
             (C88608 + C88609 + C88610) * C153727 +
             (C116669 + C116670 + C116671) * C116209) *
                C153625 * C153601 -
            (C116665 * C116209 + (C88607 + C88606 + C88605) * C153727 +
             (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
              C152106 * C156 - C152145 * C146 - C152106 * C157 +
              C153475 * C170 + C152110 * C154 - C152150 * C145 -
              C152110 * C155 + C153467 * C169) *
                 C153720) *
                C153625 * C153849) *
               C1091 +
           (((C83944 + C83945 + C83946) * C153720 + C89628 * C153727 +
             (C88611 + C88612 + C88613) * C116209) *
                C153625 * C153849 -
            ((C152156 * C8429 - C83607 * C8428 - C152156 * C8430 +
              C83598 * C8431 + C152106 * C6191 - C152145 * C6182 -
              C152106 * C6192 + C153475 * C6200 + C152110 * C6193 -
              C152150 * C6183 - C152110 * C6194 + C153467 * C6201) *
                 C116209 +
             (C88613 + C88612 + C88611) * C153727 + C89629 * C153720) *
                C153625 * C153601) *
               C153573) *
              C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[279] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153720 +
            (C88599 + C88600 + C88601) * C153727 + C116661 * C116209) *
               C153625 * C153537 * C1091 -
           (C90418 * C116209 + C89627 * C153727 +
            (C83937 + C83936 + C83935) * C153720) *
               C153625 * C153537 * C153573) *
              C1093 +
          (((C83944 + C83945 + C83946) * C153720 + C89628 * C153727 +
            (C88611 + C88612 + C88613) * C116209) *
               C153625 * C153537 * C153573 -
           (C116665 * C116209 + (C88607 + C88606 + C88605) * C153727 +
            (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
             C152106 * C156 - C152145 * C146 - C152106 * C157 + C153475 * C170 +
             C152110 * C154 - C152150 * C145 - C152110 * C155 +
             C153467 * C169) *
                C153720) *
               C153625 * C153537 * C1091) *
              C1094 +
          (((C152110 * C156 - C152150 * C146 - C152110 * C157 + C153467 * C170 +
             C152106 * C158 - C152145 * C147 - C152106 * C159 + C153475 * C171 +
             C152156 * C160 - C83607 * C148 - C152156 * C161 + C83598 * C172) *
                C153720 +
            (C89233 + C89234 + C89235) * C153727 +
            (C117126 + C117127 + C117128) * C116209) *
               C153625 * C153537 * C1091 -
           ((C152156 * C1330 - C83607 * C1325 - C152156 * C1331 +
             C83598 * C1340 + C152106 * C1332 - C152145 * C1326 -
             C152106 * C1333 + C153475 * C1341 + C152110 * C1334 -
             C152150 * C1327 - C152110 * C1335 + C153467 * C1342) *
                C116209 +
            (C88924 + C88923 + C88922) * C153727 +
            (C84433 + C84432 + C84431) * C153720) *
               C153625 * C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
            C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
            C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
               C153720 +
           (C88599 + C88600 + C88601) * C153727 + C116661 * C116209) *
              C153625 * C153537 * C1178 -
          (C90418 * C116209 + C89627 * C153727 +
           (C83937 + C83936 + C83935) * C153720) *
              C153625 * C153537 * C1179 +
          (C83955 * C153720 + C91396 * C153727 +
           (C85674 + C85675 + C85676) * C116209) *
              C153625 * C153537 * C1180 -
          ((C152156 * C4784 - C83607 * C4781 - C152156 * C4785 +
            C83598 * C4790 + C152106 * C4786 - C152145 * C4782 -
            C152106 * C4787 + C153475 * C4791 + C152110 * C4788 -
            C152150 * C4783 - C152110 * C4789 + C153467 * C4792) *
               C116209 +
           (C86426 + C86425 + C86424) * C153727 + C85406 * C153720) *
              C153625 * C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[280] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152110 * C152 - C152150 * C144 - C152110 * C153 +
              C153467 * C168 + C152106 * C154 - C152145 * C145 -
              C152106 * C155 + C153475 * C169 + C152156 * C156 - C83607 * C146 -
              C152156 * C157 + C83598 * C170) *
                 C153720 +
             (C88599 + C88600 + C88601) * C153727 + C116661 * C116209) *
                C153625 * C1898 -
            (C119322 * C116209 + (C88602 + C88603 + C88604) * C153727 +
             (C88601 + C88600 + C88599) * C153720) *
                C153625 * C153601) *
               C153848 +
           ((C89626 * C153720 + C90419 * C153727 +
             (C90426 + C90427 + C90428) * C116209) *
                C153625 * C153601 -
            (C90418 * C116209 + C89627 * C153727 +
             (C83937 + C83936 + C83935) * C153720) *
                C153625 * C1898) *
               C153573) *
              C153840 +
          ((((C88605 + C88606 + C88607) * C153720 +
             (C88608 + C88609 + C88610) * C153727 +
             (C116669 + C116670 + C116671) * C116209) *
                C153625 * C153601 -
            (C116665 * C116209 + (C88607 + C88606 + C88605) * C153727 +
             (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
              C152106 * C156 - C152145 * C146 - C152106 * C157 +
              C153475 * C170 + C152110 * C154 - C152150 * C145 -
              C152110 * C155 + C153467 * C169) *
                 C153720) *
                C153625 * C1898) *
               C153848 +
           (((C83944 + C83945 + C83946) * C153720 + C89628 * C153727 +
             (C88611 + C88612 + C88613) * C116209) *
                C153625 * C1898 -
            ((C152156 * C8429 - C83607 * C8428 - C152156 * C8430 +
              C83598 * C8431 + C152106 * C6191 - C152145 * C6182 -
              C152106 * C6192 + C153475 * C6200 + C152110 * C6193 -
              C152150 * C6183 - C152110 * C6194 + C153467 * C6201) *
                 C116209 +
             (C88613 + C88612 + C88611) * C153727 + C89629 * C153720) *
                C153625 * C153601) *
               C153573) *
              C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[281] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153720 +
            (C88599 + C88600 + C88601) * C153727 + C116661 * C116209) *
               C153625 * C153921 -
           (C119322 * C116209 + (C88602 + C88603 + C88604) * C153727 +
            (C88601 + C88600 + C88599) * C153720) *
               C153625 * C153922 +
           (C116661 * C153720 + (C92189 + C92190 + C92191) * C153727 +
            (C119329 + C119330 + C119331) * C116209) *
               C153625 * C2414) *
              C153848 +
          ((C89626 * C153720 + C90419 * C153727 +
            (C90426 + C90427 + C90428) * C116209) *
               C153625 * C153922 -
           (C90418 * C116209 + C89627 * C153727 +
            (C83937 + C83936 + C83935) * C153720) *
               C153625 * C153921 -
           ((C152156 * C9038 - C83607 * C9035 - C152156 * C9039 +
             C83598 * C9044 + C152106 * C9040 - C152145 * C9036 -
             C152106 * C9041 + C153475 * C9045 + C152110 * C9042 -
             C152150 * C9037 - C152110 * C9043 + C153467 * C9046) *
                C116209 +
            (C90428 + C90427 + C90426) * C153727 + C90418 * C153720) *
               C153625 * C2414) *
              C153573) *
         C153502) /
        (p * q * std::sqrt(p + q));
    d2ee[282] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153720 +
            (C88599 + C88600 + C88601) * C153727 + C116661 * C116209) *
               C153625 * C1898 -
           ((C92191 + C92190 + C92189) * C116209 +
            (C88602 + C88603 + C88604) * C153727 +
            (C88601 + C88600 + C88599) * C153720) *
               C153625 * C153601) *
              C298 +
          ((C89626 * C153720 + C90419 * C153727 +
            (C90426 + C90427 + C90428) * C116209) *
               C153625 * C153601 -
           (C90418 * C116209 + C89627 * C153727 +
            (C83937 + C83936 + C83935) * C153720) *
               C153625 * C1898) *
              C299 +
          ((C83955 * C153720 + C91396 * C153727 +
            (C85674 + C85675 + C85676) * C116209) *
               C153625 * C1898 -
           ((C152156 * C6185 - C83607 * C6179 - C152156 * C6186 +
             C83598 * C6197 + C152106 * C6187 - C152145 * C6180 -
             C152106 * C6188 + C153475 * C6198 + C152110 * C6189 -
             C152150 * C6181 - C152110 * C6190 + C153467 * C6199) *
                C116209 +
            (C85676 + C85675 + C85674) * C153727 + C86416 * C153720) *
               C153625 * C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153720 +
            (C88599 + C88600 + C88601) * C153727 + C116661 * C116209) *
               C153625 * C1898 -
           ((C92191 + C92190 + C92189) * C116209 +
            (C88602 + C88603 + C88604) * C153727 +
            (C88601 + C88600 + C88599) * C153720) *
               C153625 * C153601) *
              C153521 * C1093 +
          (((C88605 + C88606 + C88607) * C153720 +
            (C88608 + C88609 + C88610) * C153727 +
            (C116669 + C116670 + C116671) * C116209) *
               C153625 * C153601 -
           (C116665 * C116209 + (C88607 + C88606 + C88605) * C153727 +
            (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
             C152106 * C156 - C152145 * C146 - C152106 * C157 + C153475 * C170 +
             C152110 * C154 - C152150 * C145 - C152110 * C155 +
             C153467 * C169) *
                C153720) *
               C153625 * C1898) *
              C153521 * C1094 +
          (((C152110 * C156 - C152150 * C146 - C152110 * C157 + C153467 * C170 +
             C152106 * C158 - C152145 * C147 - C152106 * C159 + C153475 * C171 +
             C152156 * C160 - C83607 * C148 - C152156 * C161 + C83598 * C172) *
                C153720 +
            (C89233 + C89234 + C89235) * C153727 +
            (C117126 + C117127 + C117128) * C116209) *
               C153625 * C1898 -
           ((C152156 * C2113 - C83607 * C2108 - C152156 * C2114 +
             C83598 * C2123 + C152106 * C2115 - C152145 * C2109 -
             C152106 * C2116 + C153475 * C2124 + C152110 * C2117 -
             C152150 * C2110 - C152110 * C2118 + C153467 * C2125) *
                C116209 +
            (C117128 + C117127 + C117126) * C153727 +
            (C89235 + C89234 + C89233) * C153720) *
               C153625 * C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
            C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
            C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
               C153720 +
           (C88599 + C88600 + C88601) * C153727 + C116661 * C116209) *
              C153625 * C2104 -
          (C119322 * C116209 + (C88602 + C88603 + C88604) * C153727 +
           (C88601 + C88600 + C88599) * C153720) *
              C153625 * C2105 +
          (C116661 * C153720 + (C92189 + C92190 + C92191) * C153727 +
           (C119329 + C119330 + C119331) * C116209) *
              C153625 * C2106 -
          ((C152156 * C10381 - C83607 * C10378 - C152156 * C10382 +
            C83598 * C10387 + C152106 * C10383 - C152145 * C10379 -
            C152106 * C10384 + C153475 * C10388 + C152110 * C10385 -
            C152150 * C10380 - C152110 * C10386 + C153467 * C10389) *
               C116209 +
           (C119331 + C119330 + C119329) * C153727 + C119322 * C153720) *
              C153625 * C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[283] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153720 +
            (C88599 + C88600 + C88601) * C153727 + C116661 * C116209) *
               C153625 * C153921 -
           (C119322 * C116209 + (C88602 + C88603 + C88604) * C153727 +
            (C88601 + C88600 + C88599) * C153720) *
               C153625 * C153922 +
           (C116661 * C153720 + (C92189 + C92190 + C92191) * C153727 +
            (C119329 + C119330 + C119331) * C116209) *
               C153625 * C2414) *
              C153521 * C153840 +
          (((C88605 + C88606 + C88607) * C153720 +
            (C88608 + C88609 + C88610) * C153727 +
            (C116669 + C116670 + C116671) * C116209) *
               C153625 * C153922 -
           (C116665 * C116209 + (C88607 + C88606 + C88605) * C153727 +
            (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
             C152106 * C156 - C152145 * C146 - C152106 * C157 + C153475 * C170 +
             C152110 * C154 - C152150 * C145 - C152110 * C155 +
             C153467 * C169) *
                C153720) *
               C153625 * C153921 -
           ((C152156 * C7524 - C83607 * C7517 - C152156 * C7525 +
             C83598 * C7529 + C152106 * C7522 - C152145 * C7516 -
             C152106 * C7523 + C153475 * C7528 + C152110 * C7520 -
             C152150 * C7515 - C152110 * C7521 + C153467 * C7527) *
                C116209 +
            (C116671 + C116670 + C116669) * C153727 + C116665 * C153720) *
               C153625 * C2414) *
              C153521 * C153508)) /
        (p * q * std::sqrt(p + q));
    d2ee[284] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153720 +
            (C88599 + C88600 + C88601) * C153727 + C116661 * C116209) *
               C153625 * C1898 -
           ((C92191 + C92190 + C92189) * C116209 +
            (C88602 + C88603 + C88604) * C153727 +
            (C88601 + C88600 + C88599) * C153720) *
               C153625 * C153601) *
              C153521 * C1093 +
          (((C88605 + C88606 + C88607) * C153720 +
            (C88608 + C88609 + C88610) * C153727 +
            (C116669 + C116670 + C116671) * C116209) *
               C153625 * C153601 -
           (C116665 * C116209 + (C88607 + C88606 + C88605) * C153727 +
            (C152156 * C158 - C83607 * C147 - C152156 * C159 + C83598 * C171 +
             C152106 * C156 - C152145 * C146 - C152106 * C157 + C153475 * C170 +
             C152110 * C154 - C152150 * C145 - C152110 * C155 +
             C153467 * C169) *
                C153720) *
               C153625 * C1898) *
              C153521 * C1094 +
          (((C152110 * C156 - C152150 * C146 - C152110 * C157 + C153467 * C170 +
             C152106 * C158 - C152145 * C147 - C152106 * C159 + C153475 * C171 +
             C152156 * C160 - C83607 * C148 - C152156 * C161 + C83598 * C172) *
                C153720 +
            (C89233 + C89234 + C89235) * C153727 +
            (C117126 + C117127 + C117128) * C116209) *
               C153625 * C1898 -
           ((C152156 * C2113 - C83607 * C2108 - C152156 * C2114 +
             C83598 * C2123 + C152106 * C2115 - C152145 * C2109 -
             C152106 * C2116 + C153475 * C2124 + C152110 * C2117 -
             C152150 * C2110 - C152110 * C2118 + C153467 * C2125) *
                C116209 +
            (C117128 + C117127 + C117126) * C153727 +
            (C89235 + C89234 + C89233) * C153720) *
               C153625 * C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152110 * C152 - C152150 * C144 - C152110 * C153 + C153467 * C168 +
             C152106 * C154 - C152145 * C145 - C152106 * C155 + C153475 * C169 +
             C152156 * C156 - C83607 * C146 - C152156 * C157 + C83598 * C170) *
                C153720 +
            (C88599 + C88600 + C88601) * C153727 + C116661 * C116209) *
               C153625 * C1898 -
           ((C92191 + C92190 + C92189) * C116209 +
            (C88602 + C88603 + C88604) * C153727 +
            (C88601 + C88600 + C88599) * C153720) *
               C153625 * C153601) *
              C298 +
          ((C89626 * C153720 + C90419 * C153727 +
            (C90426 + C90427 + C90428) * C116209) *
               C153625 * C153601 -
           (C90418 * C116209 + C89627 * C153727 +
            (C83937 + C83936 + C83935) * C153720) *
               C153625 * C1898) *
              C299 +
          ((C83955 * C153720 + C91396 * C153727 +
            (C85674 + C85675 + C85676) * C116209) *
               C153625 * C1898 -
           ((C152156 * C6185 - C83607 * C6179 - C152156 * C6186 +
             C83598 * C6197 + C152106 * C6187 - C152145 * C6180 -
             C152106 * C6188 + C153475 * C6198 + C152110 * C6189 -
             C152150 * C6181 - C152110 * C6190 + C153467 * C6199) *
                C116209 +
            (C85676 + C85675 + C85674) * C153727 + C86416 * C153720) *
               C153625 * C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[285] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C98536 +
            (C99023 + C99024 + C99025 + C99026) * C153724) *
               C153625 * C153537 * C153848 -
           ((C71731 + C71732 + C71733 + C71734) * C153724 +
            (C70802 + C70801 + C70800 + C70799) * C98536) *
               C153625 * C153537 * C153573) *
              C153917 +
          (((C70807 + C70808 + C70809 + C70810) * C98536 +
            (C71735 + C71736 + C71737 + C71738) * C153724) *
               C153625 * C153537 * C153573 -
           ((C99034 + C99033 + C99032 + C99031) * C153724 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C98536) *
               C153625 * C153537 * C153848) *
              C153918 +
          (((C70500 * C156 - C70501 * C146 - C70500 * C157 + C153942 * C170 +
             C70502 * C158 - C70503 * C147 - C70502 * C159 + C153935 * C171 +
             C70504 * C160 - C70505 * C148 - C70504 * C161 + C153916 * C172 +
             C70506 * C162 - C70507 * C149 - C70506 * C163 + C153862 * C173) *
                C98536 +
            (C70500 * C492 - C70501 * C478 - C70500 * C493 + C153942 * C514 +
             C70502 * C490 - C70503 * C477 - C70502 * C491 + C153935 * C513 +
             C70504 * C488 - C70505 * C476 - C70504 * C489 + C153916 * C512 +
             C70506 * C508 - C70507 * C486 - C70506 * C509 + C153862 * C522) *
                C153724) *
               C153625 * C153537 * C153848 -
           ((C70506 * C961 - C70507 * C950 - C70506 * C962 + C153862 * C968 +
             C70504 * C959 - C70505 * C949 - C70504 * C960 + C153916 * C967 +
             C70502 * C957 - C70503 * C948 - C70502 * C958 + C153935 * C966 +
             C70500 * C955 - C70501 * C947 - C70500 * C956 + C153942 * C965) *
                C153724 +
            (C71230 + C71229 + C71228 + C71227) * C98536) *
               C153625 * C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C98536 +
             (C78877 + C78878) * C153724) *
                C153936 +
            ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
            C102557 * C153898) *
               C153537 * C153848 -
           ((C76795 * C153724 + C75896 * C98536) * C153898 +
            (C76796 * C153724 + (C74584 + C74583) * C98536) * C153924 +
            (C79919 * C153724 + (C74582 + C74581) * C98536) * C153936) *
               C153537 * C153573) *
              C153917 +
          ((((C74589 + C74590) * C98536 + C79920 * C153724) * C153936 +
            ((C74591 + C74592) * C98536 + C94919 * C153724) * C153924 +
            ((C74593 + C74594) * C98536 + (C75569 + C75570) * C153724) *
                C153898) *
               C153537 * C153573 -
           (C102558 * C153898 +
            (C79922 * C153724 + (C74590 + C74589) * C98536) * C153924 +
            ((C78886 + C78885) * C153724 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C98536) *
                C153936) *
               C153537 * C153848) *
              C153918 +
          ((((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
              C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                 C98536 +
             (C79527 + C79528) * C153724) *
                C153936 +
            ((C75029 + C75030) * C98536 + (C79209 + C79210) * C153724) *
                C153924 +
            ((C75031 + C75032) * C98536 + (C94241 + C94242) * C153724) *
                C153898) *
               C153537 * C153848 -
           (((C74288 * C4073 - C74289 * C4066 - C74288 * C4074 +
              C153472 * C4078 + C74286 * C4071 - C74287 * C4065 -
              C74286 * C4072 + C74280 * C4077) *
                 C153724 +
             (C75034 + C75033) * C98536) *
                C153898 +
            ((C94242 + C94241) * C153724 + (C75032 + C75031) * C98536) *
                C153924 +
            ((C79210 + C79209) * C153724 + (C75030 + C75029) * C98536) *
                C153936) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q));
    d2ee[286] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
              C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
              C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
              C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                 C98536 +
             (C99023 + C99024 + C99025 + C99026) * C153724) *
                C153625 * C153849 -
            ((C99027 + C99028 + C99029 + C99030) * C153724 +
             (C99026 + C99025 + C99024 + C99023) * C98536) *
                C153625 * C153601) *
               C153848 +
           (((C71734 + C71733 + C71732 + C71731) * C98536 +
             (C72309 + C72310 + C72311 + C72312) * C153724) *
                C153625 * C153601 -
            ((C71731 + C71732 + C71733 + C71734) * C153724 +
             (C70802 + C70801 + C70800 + C70799) * C98536) *
                C153625 * C153849) *
               C153573) *
              C301 +
          ((((C99031 + C99032 + C99033 + C99034) * C98536 +
             (C99035 + C99036 + C99037 + C99038) * C153724) *
                C153625 * C153601 -
            ((C99034 + C99033 + C99032 + C99031) * C153724 +
             (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
              C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
              C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
              C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                 C98536) *
                C153625 * C153849) *
               C153848 +
           (((C70807 + C70808 + C70809 + C70810) * C98536 +
             (C71735 + C71736 + C71737 + C71738) * C153724) *
                C153625 * C153849 -
            ((C70506 * C1330 - C70507 * C1325 - C70506 * C1331 +
              C153862 * C1340 + C70504 * C1332 - C70505 * C1326 -
              C70504 * C1333 + C153916 * C1341 + C70502 * C1334 -
              C70503 * C1327 - C70502 * C1335 + C153935 * C1342 +
              C70500 * C1336 - C70501 * C1328 - C70500 * C1337 +
              C153942 * C1343) *
                 C153724 +
             (C71738 + C71737 + C71736 + C71735) * C98536) *
                C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
               C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                  C98536 +
              (C78877 + C78878) * C153724) *
                 C153936 +
             ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
             C102557 * C153898) *
                C153849 -
            ((C80715 * C153724 + C76796 * C98536) * C153898 +
             (C79918 * C153724 + C79919 * C98536) * C153924 +
             ((C78880 + C78879) * C153724 + (C78878 + C78877) * C98536) *
                 C153936) *
                C153601) *
               C153848 +
           (((C79917 * C98536 + C78795 * C153724) * C153936 +
             (C81694 * C98536 + C81695 * C153724) * C153924 +
             (C96665 * C98536 + (C76147 + C76148) * C153724) * C153898) *
                C153601 -
            ((C76795 * C153724 + C75896 * C98536) * C153898 +
             (C76796 * C153724 + (C74584 + C74583) * C98536) * C153924 +
             (C79919 * C153724 + (C74582 + C74581) * C98536) * C153936) *
                C153849) *
               C153573) *
              C301 +
          (((((C78885 + C78886) * C98536 + (C78887 + C78888) * C153724) *
                 C153936 +
             (C79920 * C98536 + C79921 * C153724) * C153924 +
             (C94919 * C98536 + (C78487 + C78488) * C153724) * C153898) *
                C153601 -
            (C102558 * C153898 +
             (C79922 * C153724 + (C74590 + C74589) * C98536) * C153924 +
             ((C78886 + C78885) * C153724 +
              (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
               C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                  C98536) *
                 C153936) *
                C153849) *
               C153848 +
           ((((C74589 + C74590) * C98536 + C79920 * C153724) * C153936 +
             ((C74591 + C74592) * C98536 + C94919 * C153724) * C153924 +
             ((C74593 + C74594) * C98536 + (C75569 + C75570) * C153724) *
                 C153898) *
                C153849 -
            (((C74288 * C4784 - C74289 * C4781 - C74288 * C4785 +
               C153472 * C4790 + C74286 * C4786 - C74287 * C4782 -
               C74286 * C4787 + C74280 * C4791) *
                  C153724 +
              (C75570 + C75569) * C98536) *
                 C153898 +
             ((C78488 + C78487) * C153724 + C93644 * C98536) * C153924 +
             (C78844 * C153724 + C79922 * C98536) * C153936) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[287] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C98536 +
            (C70500 * C496 - C70501 * C480 - C70500 * C497 + C153942 * C516 +
             C70502 * C494 - C70503 * C479 - C70502 * C495 + C153935 * C515 +
             C70504 * C492 - C70505 * C478 - C70504 * C493 + C153916 * C514 +
             C70506 * C490 - C70507 * C477 - C70506 * C491 + C153862 * C513) *
                C153724) *
               C153625 * C153537 * C298 -
           ((C71731 + C71732 + C71733 + C71734) * C153724 +
            (C70802 + C70801 + C70800 + C70799) * C98536) *
               C153625 * C153537 * C299 +
           ((C70806 + C70805 + C70804 + C70803) * C98536 +
            (C72983 + C72984 + C72985 + C72986) * C153724) *
               C153625 * C153537 * C300) *
              C301 +
          (((C70807 + C70808 + C70809 + C70810) * C98536 +
            (C71735 + C71736 + C71737 + C71738) * C153724) *
               C153625 * C153537 * C299 -
           ((C70506 * C488 - C70507 * C476 - C70506 * C489 + C153862 * C512 +
             C70504 * C490 - C70505 * C477 - C70504 * C491 + C153916 * C513 +
             C70502 * C492 - C70503 * C478 - C70502 * C493 + C153935 * C514 +
             C70500 * C494 - C70501 * C479 - C70500 * C495 + C153942 * C515) *
                C153724 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C98536) *
               C153625 * C153537 * C298 -
           ((C70506 * C1761 - C70507 * C1756 - C70506 * C1762 +
             C153862 * C1771 + C70504 * C1763 - C70505 * C1757 -
             C70504 * C1764 + C153916 * C1772 + C70502 * C1765 -
             C70503 * C1758 - C70502 * C1766 + C153935 * C1773 +
             C70500 * C1767 - C70501 * C1759 - C70500 * C1768 +
             C153942 * C1774) *
                C153724 +
            (C70814 + C70813 + C70812 + C70811) * C98536) *
               C153625 * C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
            C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
            C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
            C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
               C98536 +
           (C70500 * C496 - C70501 * C480 - C70500 * C497 + C153942 * C516 +
            C70502 * C494 - C70503 * C479 - C70502 * C495 + C153935 * C515 +
            C70504 * C492 - C70505 * C478 - C70504 * C493 + C153916 * C514 +
            C70506 * C490 - C70507 * C477 - C70506 * C491 + C153862 * C513) *
               C153724) *
              C153625 * C153537 * C153521 * C130 -
          ((C70506 * C488 - C70507 * C476 - C70506 * C489 + C153862 * C512 +
            C70504 * C490 - C70505 * C477 - C70504 * C491 + C153916 * C513 +
            C70502 * C492 - C70503 * C478 - C70502 * C493 + C153935 * C514 +
            C70500 * C494 - C70501 * C479 - C70500 * C495 + C153942 * C515) *
               C153724 +
           (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
            C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
            C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
            C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
               C98536) *
              C153625 * C153537 * C153521 * C131 +
          ((C70500 * C156 - C70501 * C146 - C70500 * C157 + C153942 * C170 +
            C70502 * C158 - C70503 * C147 - C70502 * C159 + C153935 * C171 +
            C70504 * C160 - C70505 * C148 - C70504 * C161 + C153916 * C172 +
            C70506 * C162 - C70507 * C149 - C70506 * C163 + C153862 * C173) *
               C98536 +
           (C70500 * C492 - C70501 * C478 - C70500 * C493 + C153942 * C514 +
            C70502 * C490 - C70503 * C477 - C70502 * C491 + C153935 * C513 +
            C70504 * C488 - C70505 * C476 - C70504 * C489 + C153916 * C512 +
            C70506 * C508 - C70507 * C486 - C70506 * C509 + C153862 * C522) *
               C153724) *
              C153625 * C153537 * C153521 * C132 -
          ((C70506 * C780 - C70507 * C779 - C70506 * C781 + C153862 * C782 +
            C70504 * C508 - C70505 * C486 - C70504 * C509 + C153916 * C522 +
            C70502 * C488 - C70503 * C476 - C70502 * C489 + C153935 * C512 +
            C70500 * C490 - C70501 * C477 - C70500 * C491 + C153942 * C513) *
               C153724 +
           (C70506 * C164 - C70507 * C150 - C70506 * C165 + C153862 * C174 +
            C70504 * C162 - C70505 * C149 - C70504 * C163 + C153916 * C173 +
            C70502 * C160 - C70503 * C148 - C70502 * C161 + C153935 * C172 +
            C70500 * C158 - C70501 * C147 - C70500 * C159 + C153942 * C171) *
               C98536) *
              C153625 * C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C98536 +
            (C99023 + C99024 + C99025 + C99026) * C153724) *
               C153625 * C473 -
           ((C99027 + C99028 + C99029 + C99030) * C153724 +
            (C99026 + C99025 + C99024 + C99023) * C98536) *
               C153625 * C474 +
           ((C99030 + C99029 + C99028 + C99027) * C98536 +
            (C70500 * C2121 - C70501 * C2112 - C70500 * C2122 +
             C153942 * C2127 + C70502 * C2119 - C70503 * C2111 -
             C70502 * C2120 + C153935 * C2126 + C70504 * C2117 -
             C70505 * C2110 - C70504 * C2118 + C153916 * C2125 +
             C70506 * C2115 - C70507 * C2109 - C70506 * C2116 +
             C153862 * C2124) *
                C153724) *
               C153625 * C475) *
              C153521 * C301 +
          (((C99031 + C99032 + C99033 + C99034) * C98536 +
            (C99035 + C99036 + C99037 + C99038) * C153724) *
               C153625 * C474 -
           ((C99034 + C99033 + C99032 + C99031) * C153724 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C98536) *
               C153625 * C473 -
           ((C70506 * C2113 - C70507 * C2108 - C70506 * C2114 +
             C153862 * C2123 + C70504 * C2115 - C70505 * C2109 -
             C70504 * C2116 + C153916 * C2124 + C70502 * C2117 -
             C70503 * C2110 - C70502 * C2118 + C153935 * C2125 +
             C70500 * C2119 - C70501 * C2111 - C70500 * C2120 +
             C153942 * C2126) *
                C153724 +
            (C99038 + C99037 + C99036 + C99035) * C98536) *
               C153625 * C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C98536 +
            (C78877 + C78878) * C153724) *
               C153936 +
           ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
           (C74597 * C98536 + C81694 * C153724) * C153898) *
              C153537 * C153521 * C130 -
          ((C93644 * C153724 + C74600 * C98536) * C153898 +
           (C79922 * C153724 + (C74590 + C74589) * C98536) * C153924 +
           ((C78886 + C78885) * C153724 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C98536) *
               C153936) *
              C153537 * C153521 * C131 +
          (((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
             C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                C98536 +
            (C79527 + C79528) * C153724) *
               C153936 +
           ((C75029 + C75030) * C98536 + (C79209 + C79210) * C153724) *
               C153924 +
           ((C75031 + C75032) * C98536 + (C94241 + C94242) * C153724) *
               C153898) *
              C153537 * C153521 * C132 -
          (((C74288 * C1761 - C74289 * C1756 - C74288 * C1762 +
             C153472 * C1771 + C74286 * C1763 - C74287 * C1757 -
             C74286 * C1764 + C74280 * C1772) *
                C153724 +
            (C74288 * C333 - C74289 * C312 - C74288 * C334 + C153472 * C348 +
             C74286 * C331 - C74287 * C311 - C74286 * C332 + C74280 * C347) *
                C98536) *
               C153898 +
           ((C74288 * C959 - C74289 * C949 - C74288 * C960 + C153472 * C967 +
             C74286 * C957 - C74287 * C948 - C74286 * C958 + C74280 * C966) *
                C153724 +
            (C74288 * C315 - C74289 * C303 - C74288 * C316 + C153472 * C339 +
             C74286 * C317 - C74287 * C304 - C74286 * C318 + C74280 * C340) *
                C98536) *
               C153924 +
           ((C74288 * C488 - C74289 * C476 - C74288 * C489 + C153472 * C512 +
             C74286 * C490 - C74287 * C477 - C74286 * C491 + C74280 * C513) *
                C153724 +
            (C74288 * C160 - C74289 * C148 - C74288 * C161 + C153472 * C172 +
             C74286 * C158 - C74287 * C147 - C74286 * C159 + C74280 * C171) *
                C98536) *
               C153936) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C98536 +
             (C78877 + C78878) * C153724) *
                C153936 +
            ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
            C102557 * C153898) *
               C153537 * C298 -
           ((C76795 * C153724 + C75896 * C98536) * C153898 +
            (C76796 * C153724 + (C74584 + C74583) * C98536) * C153924 +
            (C79919 * C153724 + (C74582 + C74581) * C98536) * C153936) *
               C153537 * C299 +
           (C102557 * C153936 + (C74598 * C98536 + C96665 * C153724) * C153924 +
            ((C74588 + C74587) * C98536 + (C76811 + C76812) * C153724) *
                C153898) *
               C153537 * C300) *
              C301 +
          ((((C74589 + C74590) * C98536 + C79920 * C153724) * C153936 +
            ((C74591 + C74592) * C98536 + C94919 * C153724) * C153924 +
            ((C74593 + C74594) * C98536 + (C75569 + C75570) * C153724) *
                C153898) *
               C153537 * C299 -
           (C102558 * C153898 +
            (C79922 * C153724 + (C74590 + C74589) * C98536) * C153924 +
            ((C78886 + C78885) * C153724 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C98536) *
                C153936) *
               C153537 * C298 -
           (((C74288 * C5564 - C74289 * C5561 - C74288 * C5565 +
              C153472 * C5570 + C74286 * C5566 - C74287 * C5562 -
              C74286 * C5567 + C74280 * C5571) *
                 C153724 +
             (C74596 + C74595) * C98536) *
                C153898 +
            ((C75570 + C75569) * C153724 + C74599 * C98536) * C153924 +
            C102558 * C153936) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C98536 +
             (C78877 + C78878) * C153724) *
                C153936 +
            ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
            C102557 * C153898) *
               C473 -
           ((C80715 * C153724 + C76796 * C98536) * C153898 +
            (C79918 * C153724 + C79919 * C98536) * C153924 +
            ((C78880 + C78879) * C153724 + (C78878 + C78877) * C98536) *
                C153936) *
               C474 +
           ((C78893 * C98536 + (C78884 + C78883) * C153724) * C153936 +
            (C78795 * C98536 + C80698 * C153724) * C153924 +
            (C81695 * C98536 + (C80726 + C80727) * C153724) * C153898) *
               C475) *
              C153521 * C301 +
          ((((C78885 + C78886) * C98536 + (C78887 + C78888) * C153724) *
                C153936 +
            (C79920 * C98536 + C79921 * C153724) * C153924 +
            (C94919 * C98536 + (C78487 + C78488) * C153724) * C153898) *
               C474 -
           (C102558 * C153898 +
            (C79922 * C153724 + (C74590 + C74589) * C98536) * C153924 +
            ((C78886 + C78885) * C153724 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C98536) *
                C153936) *
               C473 -
           (((C74288 * C6185 - C74289 * C6179 - C74288 * C6186 +
              C153472 * C6197 + C74286 * C6187 - C74287 * C6180 -
              C74286 * C6188 + C74280 * C6198) *
                 C153724 +
             (C78488 + C78487) * C98536) *
                C153898 +
            ((C78892 + C78891) * C153724 + C78844 * C98536) * C153924 +
            ((C78890 + C78889) * C153724 + C78894 * C98536) * C153936) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[288] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C98536 +
            (C99023 + C99024 + C99025 + C99026) * C153724) *
               C153625 * C153849 -
           ((C99027 + C99028 + C99029 + C99030) * C153724 +
            (C99026 + C99025 + C99024 + C99023) * C98536) *
               C153625 * C153601) *
              C153521 * C153917 +
          (((C99031 + C99032 + C99033 + C99034) * C98536 +
            (C99035 + C99036 + C99037 + C99038) * C153724) *
               C153625 * C153601 -
           ((C99034 + C99033 + C99032 + C99031) * C153724 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C98536) *
               C153625 * C153849) *
              C153521 * C153918 +
          (((C70500 * C156 - C70501 * C146 - C70500 * C157 + C153942 * C170 +
             C70502 * C158 - C70503 * C147 - C70502 * C159 + C153935 * C171 +
             C70504 * C160 - C70505 * C148 - C70504 * C161 + C153916 * C172 +
             C70506 * C162 - C70507 * C149 - C70506 * C163 + C153862 * C173) *
                C98536 +
            (C99451 + C99452 + C99453 + C99454) * C153724) *
               C153625 * C153849 -
           ((C70506 * C510 - C70507 * C487 - C70506 * C511 + C153862 * C523 +
             C70504 * C506 - C70505 * C485 - C70504 * C507 + C153916 * C521 +
             C70502 * C504 - C70503 * C484 - C70502 * C505 + C153935 * C520 +
             C70500 * C502 - C70501 * C483 - C70500 * C503 + C153942 * C519) *
                C153724 +
            (C99454 + C99453 + C99452 + C99451) * C98536) *
               C153625 * C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C98536 +
             (C78877 + C78878) * C153724) *
                C153936 +
            ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
            C102557 * C153898) *
               C153849 -
           ((C80715 * C153724 + C76796 * C98536) * C153898 +
            (C79918 * C153724 + C79919 * C98536) * C153924 +
            ((C78880 + C78879) * C153724 + (C78878 + C78877) * C98536) *
                C153936) *
               C153601) *
              C153521 * C153917 +
          ((((C78885 + C78886) * C98536 + (C78887 + C78888) * C153724) *
                C153936 +
            (C79920 * C98536 + C79921 * C153724) * C153924 +
            (C94919 * C98536 + (C78487 + C78488) * C153724) * C153898) *
               C153601 -
           (C102558 * C153898 +
            (C79922 * C153724 + (C74590 + C74589) * C98536) * C153924 +
            ((C78886 + C78885) * C153724 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C98536) *
                C153936) *
               C153849) *
              C153521 * C153918 +
          ((((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
              C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                 C98536 +
             (C79527 + C79528) * C153724) *
                C153936 +
            ((C75029 + C75030) * C98536 + (C79209 + C79210) * C153724) *
                C153924 +
            ((C75031 + C75032) * C98536 + (C94241 + C94242) * C153724) *
                C153898) *
               C153849 -
           (((C74288 * C3289 - C74289 * C3282 - C74288 * C3290 +
              C153472 * C3294 + C74286 * C3287 - C74287 * C3281 -
              C74286 * C3288 + C74280 * C3293) *
                 C153724 +
             (C94242 + C94241) * C98536) *
                C153898 +
            ((C79212 + C79211) * C153724 + (C79210 + C79209) * C98536) *
                C153924 +
            ((C79530 + C79529) * C153724 + (C79528 + C79527) * C98536) *
                C153936) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q));
    d2ee[289] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
            C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
            C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
            C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
               C98536 +
           (C70500 * C496 - C70501 * C480 - C70500 * C497 + C153942 * C516 +
            C70502 * C494 - C70503 * C479 - C70502 * C495 + C153935 * C515 +
            C70504 * C492 - C70505 * C478 - C70504 * C493 + C153916 * C514 +
            C70506 * C490 - C70507 * C477 - C70506 * C491 + C153862 * C513) *
               C153724) *
              C153625 * C153537 * C153521 * C130 -
          ((C70506 * C488 - C70507 * C476 - C70506 * C489 + C153862 * C512 +
            C70504 * C490 - C70505 * C477 - C70504 * C491 + C153916 * C513 +
            C70502 * C492 - C70503 * C478 - C70502 * C493 + C153935 * C514 +
            C70500 * C494 - C70501 * C479 - C70500 * C495 + C153942 * C515) *
               C153724 +
           (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
            C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
            C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
            C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
               C98536) *
              C153625 * C153537 * C153521 * C131 +
          ((C70500 * C156 - C70501 * C146 - C70500 * C157 + C153942 * C170 +
            C70502 * C158 - C70503 * C147 - C70502 * C159 + C153935 * C171 +
            C70504 * C160 - C70505 * C148 - C70504 * C161 + C153916 * C172 +
            C70506 * C162 - C70507 * C149 - C70506 * C163 + C153862 * C173) *
               C98536 +
           (C70500 * C492 - C70501 * C478 - C70500 * C493 + C153942 * C514 +
            C70502 * C490 - C70503 * C477 - C70502 * C491 + C153935 * C513 +
            C70504 * C488 - C70505 * C476 - C70504 * C489 + C153916 * C512 +
            C70506 * C508 - C70507 * C486 - C70506 * C509 + C153862 * C522) *
               C153724) *
              C153625 * C153537 * C153521 * C132 -
          ((C70506 * C780 - C70507 * C779 - C70506 * C781 + C153862 * C782 +
            C70504 * C508 - C70505 * C486 - C70504 * C509 + C153916 * C522 +
            C70502 * C488 - C70503 * C476 - C70502 * C489 + C153935 * C512 +
            C70500 * C490 - C70501 * C477 - C70500 * C491 + C153942 * C513) *
               C153724 +
           (C70506 * C164 - C70507 * C150 - C70506 * C165 + C153862 * C174 +
            C70504 * C162 - C70505 * C149 - C70504 * C163 + C153916 * C173 +
            C70502 * C160 - C70503 * C148 - C70502 * C161 + C153935 * C172 +
            C70500 * C158 - C70501 * C147 - C70500 * C159 + C153942 * C171) *
               C98536) *
              C153625 * C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C98536 +
            (C70500 * C496 - C70501 * C480 - C70500 * C497 + C153942 * C516 +
             C70502 * C494 - C70503 * C479 - C70502 * C495 + C153935 * C515 +
             C70504 * C492 - C70505 * C478 - C70504 * C493 + C153916 * C514 +
             C70506 * C490 - C70507 * C477 - C70506 * C491 + C153862 * C513) *
                C153724) *
               C153625 * C153537 * C298 -
           ((C71731 + C71732 + C71733 + C71734) * C153724 +
            (C70802 + C70801 + C70800 + C70799) * C98536) *
               C153625 * C153537 * C299 +
           ((C70806 + C70805 + C70804 + C70803) * C98536 +
            (C72983 + C72984 + C72985 + C72986) * C153724) *
               C153625 * C153537 * C300) *
              C301 +
          (((C70807 + C70808 + C70809 + C70810) * C98536 +
            (C71735 + C71736 + C71737 + C71738) * C153724) *
               C153625 * C153537 * C299 -
           ((C70506 * C488 - C70507 * C476 - C70506 * C489 + C153862 * C512 +
             C70504 * C490 - C70505 * C477 - C70504 * C491 + C153916 * C513 +
             C70502 * C492 - C70503 * C478 - C70502 * C493 + C153935 * C514 +
             C70500 * C494 - C70501 * C479 - C70500 * C495 + C153942 * C515) *
                C153724 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C98536) *
               C153625 * C153537 * C298 -
           ((C70506 * C1761 - C70507 * C1756 - C70506 * C1762 +
             C153862 * C1771 + C70504 * C1763 - C70505 * C1757 -
             C70504 * C1764 + C153916 * C1772 + C70502 * C1765 -
             C70503 * C1758 - C70502 * C1766 + C153935 * C1773 +
             C70500 * C1767 - C70501 * C1759 - C70500 * C1768 +
             C153942 * C1774) *
                C153724 +
            (C70814 + C70813 + C70812 + C70811) * C98536) *
               C153625 * C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C98536 +
            (C78877 + C78878) * C153724) *
               C153936 +
           ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
           (C74597 * C98536 + C81694 * C153724) * C153898) *
              C153537 * C153521 * C130 -
          ((C93644 * C153724 + C74600 * C98536) * C153898 +
           (C79922 * C153724 + (C74590 + C74589) * C98536) * C153924 +
           ((C78886 + C78885) * C153724 +
            (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
             C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                C98536) *
               C153936) *
              C153537 * C153521 * C131 +
          (((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
             C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                C98536 +
            (C79527 + C79528) * C153724) *
               C153936 +
           ((C75029 + C75030) * C98536 + (C79209 + C79210) * C153724) *
               C153924 +
           ((C75031 + C75032) * C98536 + (C94241 + C94242) * C153724) *
               C153898) *
              C153537 * C153521 * C132 -
          (((C74288 * C1761 - C74289 * C1756 - C74288 * C1762 +
             C153472 * C1771 + C74286 * C1763 - C74287 * C1757 -
             C74286 * C1764 + C74280 * C1772) *
                C153724 +
            (C74288 * C333 - C74289 * C312 - C74288 * C334 + C153472 * C348 +
             C74286 * C331 - C74287 * C311 - C74286 * C332 + C74280 * C347) *
                C98536) *
               C153898 +
           ((C74288 * C959 - C74289 * C949 - C74288 * C960 + C153472 * C967 +
             C74286 * C957 - C74287 * C948 - C74286 * C958 + C74280 * C966) *
                C153724 +
            (C74288 * C315 - C74289 * C303 - C74288 * C316 + C153472 * C339 +
             C74286 * C317 - C74287 * C304 - C74286 * C318 + C74280 * C340) *
                C98536) *
               C153924 +
           ((C74288 * C488 - C74289 * C476 - C74288 * C489 + C153472 * C512 +
             C74286 * C490 - C74287 * C477 - C74286 * C491 + C74280 * C513) *
                C153724 +
            (C74288 * C160 - C74289 * C148 - C74288 * C161 + C153472 * C172 +
             C74286 * C158 - C74287 * C147 - C74286 * C159 + C74280 * C171) *
                C98536) *
               C153936) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C98536 +
             (C78877 + C78878) * C153724) *
                C153936 +
            ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
            C102557 * C153898) *
               C153537 * C298 -
           ((C76795 * C153724 + C75896 * C98536) * C153898 +
            (C76796 * C153724 + (C74584 + C74583) * C98536) * C153924 +
            (C79919 * C153724 + (C74582 + C74581) * C98536) * C153936) *
               C153537 * C299 +
           (C102557 * C153936 + (C74598 * C98536 + C96665 * C153724) * C153924 +
            ((C74588 + C74587) * C98536 + (C76811 + C76812) * C153724) *
                C153898) *
               C153537 * C300) *
              C301 +
          ((((C74589 + C74590) * C98536 + C79920 * C153724) * C153936 +
            ((C74591 + C74592) * C98536 + C94919 * C153724) * C153924 +
            ((C74593 + C74594) * C98536 + (C75569 + C75570) * C153724) *
                C153898) *
               C153537 * C299 -
           (C102558 * C153898 +
            (C79922 * C153724 + (C74590 + C74589) * C98536) * C153924 +
            ((C78886 + C78885) * C153724 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C98536) *
                C153936) *
               C153537 * C298 -
           (((C74288 * C5564 - C74289 * C5561 - C74288 * C5565 +
              C153472 * C5570 + C74286 * C5566 - C74287 * C5562 -
              C74286 * C5567 + C74280 * C5571) *
                 C153724 +
             (C74596 + C74595) * C98536) *
                C153898 +
            ((C75570 + C75569) * C153724 + C74599 * C98536) * C153924 +
            C102558 * C153936) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[290] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C98536 +
            (C99023 + C99024 + C99025 + C99026) * C153724) *
               C153625 * C153537 * C153919 -
           ((C71731 + C71732 + C71733 + C71734) * C153724 +
            (C70802 + C70801 + C70800 + C70799) * C98536) *
               C153625 * C153537 * C153920 +
           ((C70806 + C70805 + C70804 + C70803) * C98536 +
            (C72983 + C72984 + C72985 + C72986) * C153724) *
               C153625 * C153537 * C1469) *
              C153840 +
          (((C70807 + C70808 + C70809 + C70810) * C98536 +
            (C71735 + C71736 + C71737 + C71738) * C153724) *
               C153625 * C153537 * C153920 -
           ((C99034 + C99033 + C99032 + C99031) * C153724 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C98536) *
               C153625 * C153537 * C153919 -
           ((C70506 * C1761 - C70507 * C1756 - C70506 * C1762 +
             C153862 * C1771 + C70504 * C1763 - C70505 * C1757 -
             C70504 * C1764 + C153916 * C1772 + C70502 * C1765 -
             C70503 * C1758 - C70502 * C1766 + C153935 * C1773 +
             C70500 * C1767 - C70501 * C1759 - C70500 * C1768 +
             C153942 * C1774) *
                C153724 +
            (C70814 + C70813 + C70812 + C70811) * C98536) *
               C153625 * C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C98536 +
             (C78877 + C78878) * C153724) *
                C153936 +
            ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
            C102557 * C153898) *
               C153537 * C153919 -
           (C104301 * C153898 +
            (C76796 * C153724 + (C74584 + C74583) * C98536) * C153924 +
            (C79919 * C153724 + (C74582 + C74581) * C98536) * C153936) *
               C153537 * C153920 +
           (C102557 * C153936 + (C74598 * C98536 + C96665 * C153724) * C153924 +
            ((C74588 + C74587) * C98536 + (C76811 + C76812) * C153724) *
                C153898) *
               C153537 * C1469) *
              C153840 +
          ((((C74589 + C74590) * C98536 + C79920 * C153724) * C153936 +
            ((C74591 + C74592) * C98536 + C94919 * C153724) * C153924 +
            ((C74593 + C74594) * C98536 + (C75569 + C75570) * C153724) *
                C153898) *
               C153537 * C153920 -
           (C102558 * C153898 +
            (C79922 * C153724 + (C74590 + C74589) * C98536) * C153924 +
            ((C78886 + C78885) * C153724 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C98536) *
                C153936) *
               C153537 * C153919 -
           (((C74288 * C5564 - C74289 * C5561 - C74288 * C5565 +
              C153472 * C5570 + C74286 * C5566 - C74287 * C5562 -
              C74286 * C5567 + C74280 * C5571) *
                 C153724 +
             (C74596 + C74595) * C98536) *
                C153898 +
            ((C75570 + C75569) * C153724 + C74599 * C98536) * C153924 +
            C102558 * C153936) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[291] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C98536 +
            (C99023 + C99024 + C99025 + C99026) * C153724) *
               C153625 * C153849 -
           ((C99027 + C99028 + C99029 + C99030) * C153724 +
            (C99026 + C99025 + C99024 + C99023) * C98536) *
               C153625 * C153601) *
              C153919 +
          (((C71734 + C71733 + C71732 + C71731) * C98536 +
            (C72309 + C72310 + C72311 + C72312) * C153724) *
               C153625 * C153601 -
           ((C71731 + C71732 + C71733 + C71734) * C153724 +
            (C70802 + C70801 + C70800 + C70799) * C98536) *
               C153625 * C153849) *
              C153920 +
          (((C70806 + C70805 + C70804 + C70803) * C98536 +
            (C72983 + C72984 + C72985 + C72986) * C153724) *
               C153625 * C153849 -
           ((C70506 * C3289 - C70507 * C3282 - C70506 * C3290 +
             C153862 * C3294 + C70504 * C3287 - C70505 * C3281 -
             C70504 * C3288 + C153916 * C3293 + C70502 * C3285 -
             C70503 * C3280 - C70502 * C3286 + C153935 * C3292 +
             C70500 * C3283 - C70501 * C3279 - C70500 * C3284 +
             C153942 * C3291) *
                C153724 +
            (C72986 + C72985 + C72984 + C72983) * C98536) *
               C153625 * C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C98536 +
             (C78877 + C78878) * C153724) *
                C153936 +
            ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
            C102557 * C153898) *
               C153849 -
           (C105560 * C153898 + (C79918 * C153724 + C79919 * C98536) * C153924 +
            ((C78880 + C78879) * C153724 + (C78878 + C78877) * C98536) *
                C153936) *
               C153601) *
              C153919 +
          (((C79917 * C98536 + C78795 * C153724) * C153936 +
            (C81694 * C98536 + C81695 * C153724) * C153924 +
            (C96665 * C98536 + (C76147 + C76148) * C153724) * C153898) *
               C153601 -
           (C104301 * C153898 +
            (C76796 * C153724 + (C74584 + C74583) * C98536) * C153924 +
            (C79919 * C153724 + (C74582 + C74581) * C98536) * C153936) *
               C153849) *
              C153920 +
          ((C102557 * C153936 + (C74598 * C98536 + C96665 * C153724) * C153924 +
            ((C74588 + C74587) * C98536 + (C76811 + C76812) * C153724) *
                C153898) *
               C153849 -
           (((C74288 * C28550 - C74289 * C28547 - C74288 * C28551 +
              C153472 * C28553 + C74286 * C28548 - C74287 * C28546 -
              C74286 * C28549 + C74280 * C28552) *
                 C153724 +
             (C76812 + C76811) * C98536) *
                C153898 +
            ((C76148 + C76147) * C153724 + C76795 * C98536) * C153924 +
            C105560 * C153936) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[292] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
            C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
            C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
            C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
               C98536 +
           (C99023 + C99024 + C99025 + C99026) * C153724) *
              C153625 * C153537 * C1178 -
          ((C71731 + C71732 + C71733 + C71734) * C153724 +
           (C70802 + C70801 + C70800 + C70799) * C98536) *
              C153625 * C153537 * C1179 +
          ((C70806 + C70805 + C70804 + C70803) * C98536 +
           (C72983 + C72984 + C72985 + C72986) * C153724) *
              C153625 * C153537 * C1180 -
          ((C70506 * C4073 - C70507 * C4066 - C70506 * C4074 + C153862 * C4078 +
            C70504 * C4071 - C70505 * C4065 - C70504 * C4072 + C153916 * C4077 +
            C70502 * C4069 - C70503 * C4064 - C70502 * C4070 + C153935 * C4076 +
            C70500 * C4067 - C70501 * C4063 - C70500 * C4068 +
            C153942 * C4075) *
               C153724 +
           (C72090 + C72089 + C72088 + C72087) * C98536) *
              C153625 * C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C98536 +
            (C99023 + C99024 + C99025 + C99026) * C153724) *
               C153625 * C153537 * C1091 -
           ((C71731 + C71732 + C71733 + C71734) * C153724 +
            (C70802 + C70801 + C70800 + C70799) * C98536) *
               C153625 * C153537 * C153573) *
              C1093 +
          (((C70807 + C70808 + C70809 + C70810) * C98536 +
            (C71735 + C71736 + C71737 + C71738) * C153724) *
               C153625 * C153537 * C153573 -
           ((C99034 + C99033 + C99032 + C99031) * C153724 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C98536) *
               C153625 * C153537 * C1091) *
              C1094 +
          (((C70500 * C156 - C70501 * C146 - C70500 * C157 + C153942 * C170 +
             C70502 * C158 - C70503 * C147 - C70502 * C159 + C153935 * C171 +
             C70504 * C160 - C70505 * C148 - C70504 * C161 + C153916 * C172 +
             C70506 * C162 - C70507 * C149 - C70506 * C163 + C153862 * C173) *
                C98536 +
            (C99451 + C99452 + C99453 + C99454) * C153724) *
               C153625 * C153537 * C1091 -
           ((C70506 * C961 - C70507 * C950 - C70506 * C962 + C153862 * C968 +
             C70504 * C959 - C70505 * C949 - C70504 * C960 + C153916 * C967 +
             C70502 * C957 - C70503 * C948 - C70502 * C958 + C153935 * C966 +
             C70500 * C955 - C70501 * C947 - C70500 * C956 + C153942 * C965) *
                C153724 +
            (C71230 + C71229 + C71228 + C71227) * C98536) *
               C153625 * C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C98536 +
            (C99023 + C99024 + C99025 + C99026) * C153724) *
               C153625 * C473 -
           ((C99027 + C99028 + C99029 + C99030) * C153724 +
            (C99026 + C99025 + C99024 + C99023) * C98536) *
               C153625 * C474 +
           ((C99030 + C99029 + C99028 + C99027) * C98536 +
            (C70500 * C2121 - C70501 * C2112 - C70500 * C2122 +
             C153942 * C2127 + C70502 * C2119 - C70503 * C2111 -
             C70502 * C2120 + C153935 * C2126 + C70504 * C2117 -
             C70505 * C2110 - C70504 * C2118 + C153916 * C2125 +
             C70506 * C2115 - C70507 * C2109 - C70506 * C2116 +
             C153862 * C2124) *
                C153724) *
               C153625 * C475) *
              C1091 +
          (((C71734 + C71733 + C71732 + C71731) * C98536 +
            (C72309 + C72310 + C72311 + C72312) * C153724) *
               C153625 * C474 -
           ((C71731 + C71732 + C71733 + C71734) * C153724 +
            (C70802 + C70801 + C70800 + C70799) * C98536) *
               C153625 * C473 -
           ((C70506 * C8429 - C70507 * C8428 - C70506 * C8430 +
             C153862 * C8431 + C70504 * C6191 - C70505 * C6182 -
             C70504 * C6192 + C153916 * C6200 + C70502 * C6193 -
             C70503 * C6183 - C70502 * C6194 + C153935 * C6201 +
             C70500 * C6195 - C70501 * C6184 - C70500 * C6196 +
             C153942 * C6202) *
                C153724 +
            (C72312 + C72311 + C72310 + C72309) * C98536) *
               C153625 * C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C98536 +
             (C78877 + C78878) * C153724) *
                C153936 +
            ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
            C102557 * C153898) *
               C153537 * C1091 -
           ((C76795 * C153724 + C75896 * C98536) * C153898 +
            (C76796 * C153724 + (C74584 + C74583) * C98536) * C153924 +
            (C79919 * C153724 + (C74582 + C74581) * C98536) * C153936) *
               C153537 * C153573) *
              C1093 +
          ((((C74589 + C74590) * C98536 + C79920 * C153724) * C153936 +
            ((C74591 + C74592) * C98536 + C94919 * C153724) * C153924 +
            ((C74593 + C74594) * C98536 + (C75569 + C75570) * C153724) *
                C153898) *
               C153537 * C153573 -
           (C102558 * C153898 +
            (C79922 * C153724 + (C74590 + C74589) * C98536) * C153924 +
            ((C78886 + C78885) * C153724 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C98536) *
                C153936) *
               C153537 * C1091) *
              C1094 +
          ((((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
              C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                 C98536 +
             (C79527 + C79528) * C153724) *
                C153936 +
            ((C75029 + C75030) * C98536 + (C79209 + C79210) * C153724) *
                C153924 +
            ((C75031 + C75032) * C98536 + (C94241 + C94242) * C153724) *
                C153898) *
               C153537 * C1091 -
           (((C74288 * C4073 - C74289 * C4066 - C74288 * C4074 +
              C153472 * C4078 + C74286 * C4071 - C74287 * C4065 -
              C74286 * C4072 + C74280 * C4077) *
                 C153724 +
             (C75034 + C75033) * C98536) *
                C153898 +
            ((C94242 + C94241) * C153724 + (C75032 + C75031) * C98536) *
                C153924 +
            ((C79210 + C79209) * C153724 + (C75030 + C75029) * C98536) *
                C153936) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C98536 +
            (C78877 + C78878) * C153724) *
               C153936 +
           ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
           C102557 * C153898) *
              C153537 * C1178 -
          (C104301 * C153898 +
           (C76796 * C153724 + (C74584 + C74583) * C98536) * C153924 +
           (C79919 * C153724 + (C74582 + C74581) * C98536) * C153936) *
              C153537 * C1179 +
          (C102557 * C153936 + (C74598 * C98536 + C96665 * C153724) * C153924 +
           ((C74588 + C74587) * C98536 + (C76811 + C76812) * C153724) *
               C153898) *
              C153537 * C1180 -
          (((C74288 * C28996 - C74289 * C28993 - C74288 * C28997 +
             C153472 * C28999 + C74286 * C28994 - C74287 * C28992 -
             C74286 * C28995 + C74280 * C28998) *
                C153724 +
            (C75912 + C75911) * C98536) *
               C153898 +
           ((C76812 + C76811) * C153724 + C75895 * C98536) * C153924 +
           C104301 * C153936) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C98536 +
             (C78877 + C78878) * C153724) *
                C153936 +
            ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
            C102557 * C153898) *
               C473 -
           ((C80715 * C153724 + C76796 * C98536) * C153898 +
            (C79918 * C153724 + C79919 * C98536) * C153924 +
            ((C78880 + C78879) * C153724 + (C78878 + C78877) * C98536) *
                C153936) *
               C474 +
           ((C78893 * C98536 + (C78884 + C78883) * C153724) * C153936 +
            (C78795 * C98536 + C80698 * C153724) * C153924 +
            (C81695 * C98536 + (C80726 + C80727) * C153724) * C153898) *
               C475) *
              C1091 +
          (((C79917 * C98536 + C78795 * C153724) * C153936 +
            (C81694 * C98536 + C81695 * C153724) * C153924 +
            (C96665 * C98536 + (C76147 + C76148) * C153724) * C153898) *
               C474 -
           (C104301 * C153898 +
            (C76796 * C153724 + (C74584 + C74583) * C98536) * C153924 +
            (C79919 * C153724 + (C74582 + C74581) * C98536) * C153936) *
               C473 -
           (((C74288 * C32074 - C74289 * C32073 - C74288 * C32075 +
              C153472 * C32076 + C74286 * C30186 - C74287 * C30183 -
              C74286 * C30187 + C74280 * C30189) *
                 C153724 +
             (C76148 + C76147) * C98536) *
                C153898 +
            ((C80727 + C80726) * C153724 + C80715 * C98536) * C153924 +
            (C80697 * C153724 + C79918 * C98536) * C153936) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[293] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
              C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
              C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
              C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                 C98536 +
             (C99023 + C99024 + C99025 + C99026) * C153724) *
                C153625 * C153849 -
            ((C99027 + C99028 + C99029 + C99030) * C153724 +
             (C99026 + C99025 + C99024 + C99023) * C98536) *
                C153625 * C153601) *
               C1091 +
           (((C71734 + C71733 + C71732 + C71731) * C98536 +
             (C72309 + C72310 + C72311 + C72312) * C153724) *
                C153625 * C153601 -
            ((C71731 + C71732 + C71733 + C71734) * C153724 +
             (C70802 + C70801 + C70800 + C70799) * C98536) *
                C153625 * C153849) *
               C153573) *
              C153840 +
          ((((C99031 + C99032 + C99033 + C99034) * C98536 +
             (C99035 + C99036 + C99037 + C99038) * C153724) *
                C153625 * C153601 -
            ((C99034 + C99033 + C99032 + C99031) * C153724 +
             (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
              C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
              C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
              C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                 C98536) *
                C153625 * C153849) *
               C1091 +
           (((C70807 + C70808 + C70809 + C70810) * C98536 +
             (C71735 + C71736 + C71737 + C71738) * C153724) *
                C153625 * C153849 -
            ((C70506 * C1330 - C70507 * C1325 - C70506 * C1331 +
              C153862 * C1340 + C70504 * C1332 - C70505 * C1326 -
              C70504 * C1333 + C153916 * C1341 + C70502 * C1334 -
              C70503 * C1327 - C70502 * C1335 + C153935 * C1342 +
              C70500 * C1336 - C70501 * C1328 - C70500 * C1337 +
              C153942 * C1343) *
                 C153724 +
             (C71738 + C71737 + C71736 + C71735) * C98536) *
                C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
               C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                  C98536 +
              (C78877 + C78878) * C153724) *
                 C153936 +
             ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
             C102557 * C153898) *
                C153849 -
            ((C80715 * C153724 + C76796 * C98536) * C153898 +
             (C79918 * C153724 + C79919 * C98536) * C153924 +
             ((C78880 + C78879) * C153724 + (C78878 + C78877) * C98536) *
                 C153936) *
                C153601) *
               C1091 +
           (((C79917 * C98536 + C78795 * C153724) * C153936 +
             (C81694 * C98536 + C81695 * C153724) * C153924 +
             (C96665 * C98536 + (C76147 + C76148) * C153724) * C153898) *
                C153601 -
            (C104301 * C153898 +
             (C76796 * C153724 + (C74584 + C74583) * C98536) * C153924 +
             (C79919 * C153724 + (C74582 + C74581) * C98536) * C153936) *
                C153849) *
               C153573) *
              C153840 +
          (((((C78885 + C78886) * C98536 + (C78887 + C78888) * C153724) *
                 C153936 +
             (C79920 * C98536 + C79921 * C153724) * C153924 +
             (C94919 * C98536 + (C78487 + C78488) * C153724) * C153898) *
                C153601 -
            (C102558 * C153898 +
             (C79922 * C153724 + (C74590 + C74589) * C98536) * C153924 +
             ((C78886 + C78885) * C153724 +
              (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
               C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                  C98536) *
                 C153936) *
                C153849) *
               C1091 +
           ((((C74589 + C74590) * C98536 + C79920 * C153724) * C153936 +
             ((C74591 + C74592) * C98536 + C94919 * C153724) * C153924 +
             ((C74593 + C74594) * C98536 + (C75569 + C75570) * C153724) *
                 C153898) *
                C153849 -
            (((C74288 * C4784 - C74289 * C4781 - C74288 * C4785 +
               C153472 * C4790 + C74286 * C4786 - C74287 * C4782 -
               C74286 * C4787 + C74280 * C4791) *
                  C153724 +
              (C75570 + C75569) * C98536) *
                 C153898 +
             ((C78488 + C78487) * C153724 + C93644 * C98536) * C153924 +
             (C78844 * C153724 + C79922 * C98536) * C153936) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[294] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C98536 +
            (C99023 + C99024 + C99025 + C99026) * C153724) *
               C153625 * C153537 * C1091 -
           ((C71731 + C71732 + C71733 + C71734) * C153724 +
            (C70802 + C70801 + C70800 + C70799) * C98536) *
               C153625 * C153537 * C153573) *
              C1093 +
          (((C70807 + C70808 + C70809 + C70810) * C98536 +
            (C71735 + C71736 + C71737 + C71738) * C153724) *
               C153625 * C153537 * C153573 -
           ((C99034 + C99033 + C99032 + C99031) * C153724 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C98536) *
               C153625 * C153537 * C1091) *
              C1094 +
          (((C70500 * C156 - C70501 * C146 - C70500 * C157 + C153942 * C170 +
             C70502 * C158 - C70503 * C147 - C70502 * C159 + C153935 * C171 +
             C70504 * C160 - C70505 * C148 - C70504 * C161 + C153916 * C172 +
             C70506 * C162 - C70507 * C149 - C70506 * C163 + C153862 * C173) *
                C98536 +
            (C99451 + C99452 + C99453 + C99454) * C153724) *
               C153625 * C153537 * C1091 -
           ((C70506 * C961 - C70507 * C950 - C70506 * C962 + C153862 * C968 +
             C70504 * C959 - C70505 * C949 - C70504 * C960 + C153916 * C967 +
             C70502 * C957 - C70503 * C948 - C70502 * C958 + C153935 * C966 +
             C70500 * C955 - C70501 * C947 - C70500 * C956 + C153942 * C965) *
                C153724 +
            (C71230 + C71229 + C71228 + C71227) * C98536) *
               C153625 * C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
            C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
            C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
            C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
               C98536 +
           (C99023 + C99024 + C99025 + C99026) * C153724) *
              C153625 * C153537 * C1178 -
          ((C71731 + C71732 + C71733 + C71734) * C153724 +
           (C70802 + C70801 + C70800 + C70799) * C98536) *
              C153625 * C153537 * C1179 +
          ((C70806 + C70805 + C70804 + C70803) * C98536 +
           (C72983 + C72984 + C72985 + C72986) * C153724) *
              C153625 * C153537 * C1180 -
          ((C70506 * C4073 - C70507 * C4066 - C70506 * C4074 + C153862 * C4078 +
            C70504 * C4071 - C70505 * C4065 - C70504 * C4072 + C153916 * C4077 +
            C70502 * C4069 - C70503 * C4064 - C70502 * C4070 + C153935 * C4076 +
            C70500 * C4067 - C70501 * C4063 - C70500 * C4068 +
            C153942 * C4075) *
               C153724 +
           (C72090 + C72089 + C72088 + C72087) * C98536) *
              C153625 * C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C98536 +
             (C78877 + C78878) * C153724) *
                C153936 +
            ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
            C102557 * C153898) *
               C153537 * C1091 -
           ((C76795 * C153724 + C75896 * C98536) * C153898 +
            (C76796 * C153724 + (C74584 + C74583) * C98536) * C153924 +
            (C79919 * C153724 + (C74582 + C74581) * C98536) * C153936) *
               C153537 * C153573) *
              C1093 +
          ((((C74589 + C74590) * C98536 + C79920 * C153724) * C153936 +
            ((C74591 + C74592) * C98536 + C94919 * C153724) * C153924 +
            ((C74593 + C74594) * C98536 + (C75569 + C75570) * C153724) *
                C153898) *
               C153537 * C153573 -
           (C102558 * C153898 +
            (C79922 * C153724 + (C74590 + C74589) * C98536) * C153924 +
            ((C78886 + C78885) * C153724 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C98536) *
                C153936) *
               C153537 * C1091) *
              C1094 +
          ((((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
              C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                 C98536 +
             (C79527 + C79528) * C153724) *
                C153936 +
            ((C75029 + C75030) * C98536 + (C79209 + C79210) * C153724) *
                C153924 +
            ((C75031 + C75032) * C98536 + (C94241 + C94242) * C153724) *
                C153898) *
               C153537 * C1091 -
           (((C74288 * C4073 - C74289 * C4066 - C74288 * C4074 +
              C153472 * C4078 + C74286 * C4071 - C74287 * C4065 -
              C74286 * C4072 + C74280 * C4077) *
                 C153724 +
             (C75034 + C75033) * C98536) *
                C153898 +
            ((C94242 + C94241) * C153724 + (C75032 + C75031) * C98536) *
                C153924 +
            ((C79210 + C79209) * C153724 + (C75030 + C75029) * C98536) *
                C153936) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C98536 +
            (C78877 + C78878) * C153724) *
               C153936 +
           ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
           C102557 * C153898) *
              C153537 * C1178 -
          (C104301 * C153898 +
           (C76796 * C153724 + (C74584 + C74583) * C98536) * C153924 +
           (C79919 * C153724 + (C74582 + C74581) * C98536) * C153936) *
              C153537 * C1179 +
          (C102557 * C153936 + (C74598 * C98536 + C96665 * C153724) * C153924 +
           ((C74588 + C74587) * C98536 + (C76811 + C76812) * C153724) *
               C153898) *
              C153537 * C1180 -
          (((C74288 * C28996 - C74289 * C28993 - C74288 * C28997 +
             C153472 * C28999 + C74286 * C28994 - C74287 * C28992 -
             C74286 * C28995 + C74280 * C28998) *
                C153724 +
            (C75912 + C75911) * C98536) *
               C153898 +
           ((C76812 + C76811) * C153724 + C75895 * C98536) * C153924 +
           C104301 * C153936) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[295] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
              C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
              C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
              C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                 C98536 +
             (C99023 + C99024 + C99025 + C99026) * C153724) *
                C153625 * C1898 -
            ((C99027 + C99028 + C99029 + C99030) * C153724 +
             (C99026 + C99025 + C99024 + C99023) * C98536) *
                C153625 * C153601) *
               C153848 +
           (((C71734 + C71733 + C71732 + C71731) * C98536 +
             (C72309 + C72310 + C72311 + C72312) * C153724) *
                C153625 * C153601 -
            ((C71731 + C71732 + C71733 + C71734) * C153724 +
             (C70802 + C70801 + C70800 + C70799) * C98536) *
                C153625 * C1898) *
               C153573) *
              C153840 +
          ((((C99031 + C99032 + C99033 + C99034) * C98536 +
             (C99035 + C99036 + C99037 + C99038) * C153724) *
                C153625 * C153601 -
            ((C99034 + C99033 + C99032 + C99031) * C153724 +
             (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
              C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
              C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
              C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                 C98536) *
                C153625 * C1898) *
               C153848 +
           (((C70807 + C70808 + C70809 + C70810) * C98536 +
             (C71735 + C71736 + C71737 + C71738) * C153724) *
                C153625 * C1898 -
            ((C70506 * C1330 - C70507 * C1325 - C70506 * C1331 +
              C153862 * C1340 + C70504 * C1332 - C70505 * C1326 -
              C70504 * C1333 + C153916 * C1341 + C70502 * C1334 -
              C70503 * C1327 - C70502 * C1335 + C153935 * C1342 +
              C70500 * C1336 - C70501 * C1328 - C70500 * C1337 +
              C153942 * C1343) *
                 C153724 +
             (C71738 + C71737 + C71736 + C71735) * C98536) *
                C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
               C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                  C98536 +
              (C78877 + C78878) * C153724) *
                 C153936 +
             ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
             C102557 * C153898) *
                C1898 -
            (C105560 * C153898 +
             (C79918 * C153724 + C79919 * C98536) * C153924 +
             ((C78880 + C78879) * C153724 + (C78878 + C78877) * C98536) *
                 C153936) *
                C153601) *
               C153848 +
           (((C79917 * C98536 + C78795 * C153724) * C153936 +
             (C81694 * C98536 + C81695 * C153724) * C153924 +
             (C96665 * C98536 + (C76147 + C76148) * C153724) * C153898) *
                C153601 -
            (C104301 * C153898 +
             (C76796 * C153724 + (C74584 + C74583) * C98536) * C153924 +
             (C79919 * C153724 + (C74582 + C74581) * C98536) * C153936) *
                C1898) *
               C153573) *
              C153840 +
          (((((C78885 + C78886) * C98536 + (C78887 + C78888) * C153724) *
                 C153936 +
             (C79920 * C98536 + C79921 * C153724) * C153924 +
             (C94919 * C98536 + (C78487 + C78488) * C153724) * C153898) *
                C153601 -
            (C102558 * C153898 +
             (C79922 * C153724 + (C74590 + C74589) * C98536) * C153924 +
             ((C78886 + C78885) * C153724 +
              (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
               C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                  C98536) *
                 C153936) *
                C1898) *
               C153848 +
           ((((C74589 + C74590) * C98536 + C79920 * C153724) * C153936 +
             ((C74591 + C74592) * C98536 + C94919 * C153724) * C153924 +
             ((C74593 + C74594) * C98536 + (C75569 + C75570) * C153724) *
                 C153898) *
                C1898 -
            (((C74288 * C4784 - C74289 * C4781 - C74288 * C4785 +
               C153472 * C4790 + C74286 * C4786 - C74287 * C4782 -
               C74286 * C4787 + C74280 * C4791) *
                  C153724 +
              (C75570 + C75569) * C98536) *
                 C153898 +
             ((C78488 + C78487) * C153724 + C93644 * C98536) * C153924 +
             (C78844 * C153724 + C79922 * C98536) * C153936) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[296] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C98536 +
            (C99023 + C99024 + C99025 + C99026) * C153724) *
               C153625 * C153921 -
           ((C99027 + C99028 + C99029 + C99030) * C153724 +
            (C99026 + C99025 + C99024 + C99023) * C98536) *
               C153625 * C153922 +
           ((C99030 + C99029 + C99028 + C99027) * C98536 +
            (C101419 + C101420 + C101421 + C101422) * C153724) *
               C153625 * C2414) *
              C153848 +
          (((C71734 + C71733 + C71732 + C71731) * C98536 +
            (C72309 + C72310 + C72311 + C72312) * C153724) *
               C153625 * C153922 -
           ((C71731 + C71732 + C71733 + C71734) * C153724 +
            (C70802 + C70801 + C70800 + C70799) * C98536) *
               C153625 * C153921 -
           ((C70506 * C8429 - C70507 * C8428 - C70506 * C8430 +
             C153862 * C8431 + C70504 * C6191 - C70505 * C6182 -
             C70504 * C6192 + C153916 * C6200 + C70502 * C6193 -
             C70503 * C6183 - C70502 * C6194 + C153935 * C6201 +
             C70500 * C6195 - C70501 * C6184 - C70500 * C6196 +
             C153942 * C6202) *
                C153724 +
            (C72312 + C72311 + C72310 + C72309) * C98536) *
               C153625 * C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C98536 +
             (C78877 + C78878) * C153724) *
                C153936 +
            ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
            C102557 * C153898) *
               C153921 -
           (C105560 * C153898 + (C79918 * C153724 + C79919 * C98536) * C153924 +
            ((C78880 + C78879) * C153724 + (C78878 + C78877) * C98536) *
                C153936) *
               C153922 +
           ((C78893 * C98536 + (C78884 + C78883) * C153724) * C153936 +
            (C78795 * C98536 + C80698 * C153724) * C153924 +
            (C81695 * C98536 + (C80726 + C80727) * C153724) * C153898) *
               C2414) *
              C153848 +
          (((C79917 * C98536 + C78795 * C153724) * C153936 +
            (C81694 * C98536 + C81695 * C153724) * C153924 +
            (C96665 * C98536 + (C76147 + C76148) * C153724) * C153898) *
               C153922 -
           (C104301 * C153898 +
            (C76796 * C153724 + (C74584 + C74583) * C98536) * C153924 +
            (C79919 * C153724 + (C74582 + C74581) * C98536) * C153936) *
               C153921 -
           (((C74288 * C32074 - C74289 * C32073 - C74288 * C32075 +
              C153472 * C32076 + C74286 * C30186 - C74287 * C30183 -
              C74286 * C30187 + C74280 * C30189) *
                 C153724 +
             (C76148 + C76147) * C98536) *
                C153898 +
            ((C80727 + C80726) * C153724 + C80715 * C98536) * C153924 +
            (C80697 * C153724 + C79918 * C98536) * C153936) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[297] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C98536 +
            (C99023 + C99024 + C99025 + C99026) * C153724) *
               C153625 * C1898 -
           ((C99027 + C99028 + C99029 + C99030) * C153724 +
            (C99026 + C99025 + C99024 + C99023) * C98536) *
               C153625 * C153601) *
              C298 +
          (((C71734 + C71733 + C71732 + C71731) * C98536 +
            (C72309 + C72310 + C72311 + C72312) * C153724) *
               C153625 * C153601 -
           ((C71731 + C71732 + C71733 + C71734) * C153724 +
            (C70802 + C70801 + C70800 + C70799) * C98536) *
               C153625 * C1898) *
              C299 +
          (((C70806 + C70805 + C70804 + C70803) * C98536 +
            (C72983 + C72984 + C72985 + C72986) * C153724) *
               C153625 * C1898 -
           ((C70506 * C3289 - C70507 * C3282 - C70506 * C3290 +
             C153862 * C3294 + C70504 * C3287 - C70505 * C3281 -
             C70504 * C3288 + C153916 * C3293 + C70502 * C3285 -
             C70503 * C3280 - C70502 * C3286 + C153935 * C3292 +
             C70500 * C3283 - C70501 * C3279 - C70500 * C3284 +
             C153942 * C3291) *
                C153724 +
            (C72986 + C72985 + C72984 + C72983) * C98536) *
               C153625 * C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C98536 +
            (C99023 + C99024 + C99025 + C99026) * C153724) *
               C153625 * C1898 -
           ((C99027 + C99028 + C99029 + C99030) * C153724 +
            (C99026 + C99025 + C99024 + C99023) * C98536) *
               C153625 * C153601) *
              C153521 * C1093 +
          (((C99031 + C99032 + C99033 + C99034) * C98536 +
            (C99035 + C99036 + C99037 + C99038) * C153724) *
               C153625 * C153601 -
           ((C99034 + C99033 + C99032 + C99031) * C153724 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C98536) *
               C153625 * C1898) *
              C153521 * C1094 +
          (((C70500 * C156 - C70501 * C146 - C70500 * C157 + C153942 * C170 +
             C70502 * C158 - C70503 * C147 - C70502 * C159 + C153935 * C171 +
             C70504 * C160 - C70505 * C148 - C70504 * C161 + C153916 * C172 +
             C70506 * C162 - C70507 * C149 - C70506 * C163 + C153862 * C173) *
                C98536 +
            (C99451 + C99452 + C99453 + C99454) * C153724) *
               C153625 * C1898 -
           ((C70506 * C510 - C70507 * C487 - C70506 * C511 + C153862 * C523 +
             C70504 * C506 - C70505 * C485 - C70504 * C507 + C153916 * C521 +
             C70502 * C504 - C70503 * C484 - C70502 * C505 + C153935 * C520 +
             C70500 * C502 - C70501 * C483 - C70500 * C503 + C153942 * C519) *
                C153724 +
            (C99454 + C99453 + C99452 + C99451) * C98536) *
               C153625 * C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
            C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
            C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
            C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
               C98536 +
           (C99023 + C99024 + C99025 + C99026) * C153724) *
              C153625 * C2104 -
          ((C99027 + C99028 + C99029 + C99030) * C153724 +
           (C99026 + C99025 + C99024 + C99023) * C98536) *
              C153625 * C2105 +
          ((C99030 + C99029 + C99028 + C99027) * C98536 +
           (C101419 + C101420 + C101421 + C101422) * C153724) *
              C153625 * C2106 -
          ((C70506 * C7524 - C70507 * C7517 - C70506 * C7525 + C153862 * C7529 +
            C70504 * C7522 - C70505 * C7516 - C70504 * C7523 + C153916 * C7528 +
            C70502 * C7520 - C70503 * C7515 - C70502 * C7521 + C153935 * C7527 +
            C70500 * C7518 - C70501 * C7514 - C70500 * C7519 +
            C153942 * C7526) *
               C153724 +
           (C101422 + C101421 + C101420 + C101419) * C98536) *
              C153625 * C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C98536 +
             (C78877 + C78878) * C153724) *
                C153936 +
            ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
            C102557 * C153898) *
               C1898 -
           (C105560 * C153898 + (C79918 * C153724 + C79919 * C98536) * C153924 +
            ((C78880 + C78879) * C153724 + (C78878 + C78877) * C98536) *
                C153936) *
               C153601) *
              C153521 * C1093 +
          ((((C78885 + C78886) * C98536 + (C78887 + C78888) * C153724) *
                C153936 +
            (C79920 * C98536 + C79921 * C153724) * C153924 +
            (C94919 * C98536 + (C78487 + C78488) * C153724) * C153898) *
               C153601 -
           (C102558 * C153898 +
            (C79922 * C153724 + (C74590 + C74589) * C98536) * C153924 +
            ((C78886 + C78885) * C153724 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C98536) *
                C153936) *
               C1898) *
              C153521 * C1094 +
          ((((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
              C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                 C98536 +
             (C79527 + C79528) * C153724) *
                C153936 +
            ((C75029 + C75030) * C98536 + (C79209 + C79210) * C153724) *
                C153924 +
            ((C75031 + C75032) * C98536 + (C94241 + C94242) * C153724) *
                C153898) *
               C1898 -
           (((C74288 * C3289 - C74289 * C3282 - C74288 * C3290 +
              C153472 * C3294 + C74286 * C3287 - C74287 * C3281 -
              C74286 * C3288 + C74280 * C3293) *
                 C153724 +
             (C94242 + C94241) * C98536) *
                C153898 +
            ((C79212 + C79211) * C153724 + (C79210 + C79209) * C98536) *
                C153924 +
            ((C79530 + C79529) * C153724 + (C79528 + C79527) * C98536) *
                C153936) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C98536 +
             (C78877 + C78878) * C153724) *
                C153936 +
            ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
            C102557 * C153898) *
               C1898 -
           (C105560 * C153898 + (C79918 * C153724 + C79919 * C98536) * C153924 +
            ((C78880 + C78879) * C153724 + (C78878 + C78877) * C98536) *
                C153936) *
               C153601) *
              C298 +
          (((C79917 * C98536 + C78795 * C153724) * C153936 +
            (C81694 * C98536 + C81695 * C153724) * C153924 +
            (C96665 * C98536 + (C76147 + C76148) * C153724) * C153898) *
               C153601 -
           (C104301 * C153898 +
            (C76796 * C153724 + (C74584 + C74583) * C98536) * C153924 +
            (C79919 * C153724 + (C74582 + C74581) * C98536) * C153936) *
               C1898) *
              C299 +
          ((C102557 * C153936 + (C74598 * C98536 + C96665 * C153724) * C153924 +
            ((C74588 + C74587) * C98536 + (C76811 + C76812) * C153724) *
                C153898) *
               C1898 -
           (((C74288 * C28550 - C74289 * C28547 - C74288 * C28551 +
              C153472 * C28553 + C74286 * C28548 - C74287 * C28546 -
              C74286 * C28549 + C74280 * C28552) *
                 C153724 +
             (C76812 + C76811) * C98536) *
                C153898 +
            ((C76148 + C76147) * C153724 + C76795 * C98536) * C153924 +
            C105560 * C153936) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
             C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                C98536 +
            (C78877 + C78878) * C153724) *
               C153936 +
           ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
           C102557 * C153898) *
              C2104 -
          (C105560 * C153898 + (C79918 * C153724 + C79919 * C98536) * C153924 +
           ((C78880 + C78879) * C153724 + (C78878 + C78877) * C98536) *
               C153936) *
              C2105 +
          ((C78893 * C98536 + (C78884 + C78883) * C153724) * C153936 +
           (C78795 * C98536 + C80698 * C153724) * C153924 +
           (C81695 * C98536 + (C80726 + C80727) * C153724) * C153898) *
              C2106 -
          (((C74288 * C31225 - C74289 * C31222 - C74288 * C31226 +
             C153472 * C31228 + C74286 * C31223 - C74287 * C31221 -
             C74286 * C31224 + C74280 * C31227) *
                C153724 +
            (C80727 + C80726) * C98536) *
               C153898 +
           ((C80725 + C80724) * C153724 + C80697 * C98536) * C153924 +
           ((C82484 + C82483) * C153724 + C82470 * C98536) * C153936) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[298] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C98536 +
            (C99023 + C99024 + C99025 + C99026) * C153724) *
               C153625 * C153921 -
           ((C99027 + C99028 + C99029 + C99030) * C153724 +
            (C99026 + C99025 + C99024 + C99023) * C98536) *
               C153625 * C153922 +
           ((C99030 + C99029 + C99028 + C99027) * C98536 +
            (C101419 + C101420 + C101421 + C101422) * C153724) *
               C153625 * C2414) *
              C153521 * C153840 +
          (((C99031 + C99032 + C99033 + C99034) * C98536 +
            (C99035 + C99036 + C99037 + C99038) * C153724) *
               C153625 * C153922 -
           ((C99034 + C99033 + C99032 + C99031) * C153724 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C98536) *
               C153625 * C153921 -
           ((C70506 * C2113 - C70507 * C2108 - C70506 * C2114 +
             C153862 * C2123 + C70504 * C2115 - C70505 * C2109 -
             C70504 * C2116 + C153916 * C2124 + C70502 * C2117 -
             C70503 * C2110 - C70502 * C2118 + C153935 * C2125 +
             C70500 * C2119 - C70501 * C2111 - C70500 * C2120 +
             C153942 * C2126) *
                C153724 +
            (C99038 + C99037 + C99036 + C99035) * C98536) *
               C153625 * C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C98536 +
             (C78877 + C78878) * C153724) *
                C153936 +
            ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
            C102557 * C153898) *
               C153921 -
           (C105560 * C153898 + (C79918 * C153724 + C79919 * C98536) * C153924 +
            ((C78880 + C78879) * C153724 + (C78878 + C78877) * C98536) *
                C153936) *
               C153922 +
           ((C78893 * C98536 + (C78884 + C78883) * C153724) * C153936 +
            (C78795 * C98536 + C80698 * C153724) * C153924 +
            (C81695 * C98536 + (C80726 + C80727) * C153724) * C153898) *
               C2414) *
              C153521 * C153840 +
          ((((C78885 + C78886) * C98536 + (C78887 + C78888) * C153724) *
                C153936 +
            (C79920 * C98536 + C79921 * C153724) * C153924 +
            (C94919 * C98536 + (C78487 + C78488) * C153724) * C153898) *
               C153922 -
           (C102558 * C153898 +
            (C79922 * C153724 + (C74590 + C74589) * C98536) * C153924 +
            ((C78886 + C78885) * C153724 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C98536) *
                C153936) *
               C153921 -
           (((C74288 * C6185 - C74289 * C6179 - C74288 * C6186 +
              C153472 * C6197 + C74286 * C6187 - C74287 * C6180 -
              C74286 * C6188 + C74280 * C6198) *
                 C153724 +
             (C78488 + C78487) * C98536) *
                C153898 +
            ((C78892 + C78891) * C153724 + C78844 * C98536) * C153924 +
            ((C78890 + C78889) * C153724 + C78894 * C98536) * C153936) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[299] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C98536 +
            (C99023 + C99024 + C99025 + C99026) * C153724) *
               C153625 * C1898 -
           ((C99027 + C99028 + C99029 + C99030) * C153724 +
            (C99026 + C99025 + C99024 + C99023) * C98536) *
               C153625 * C153601) *
              C153521 * C1093 +
          (((C99031 + C99032 + C99033 + C99034) * C98536 +
            (C99035 + C99036 + C99037 + C99038) * C153724) *
               C153625 * C153601 -
           ((C99034 + C99033 + C99032 + C99031) * C153724 +
            (C70506 * C160 - C70507 * C148 - C70506 * C161 + C153862 * C172 +
             C70504 * C158 - C70505 * C147 - C70504 * C159 + C153916 * C171 +
             C70502 * C156 - C70503 * C146 - C70502 * C157 + C153935 * C170 +
             C70500 * C154 - C70501 * C145 - C70500 * C155 + C153942 * C169) *
                C98536) *
               C153625 * C1898) *
              C153521 * C1094 +
          (((C70500 * C156 - C70501 * C146 - C70500 * C157 + C153942 * C170 +
             C70502 * C158 - C70503 * C147 - C70502 * C159 + C153935 * C171 +
             C70504 * C160 - C70505 * C148 - C70504 * C161 + C153916 * C172 +
             C70506 * C162 - C70507 * C149 - C70506 * C163 + C153862 * C173) *
                C98536 +
            (C99451 + C99452 + C99453 + C99454) * C153724) *
               C153625 * C1898 -
           ((C70506 * C510 - C70507 * C487 - C70506 * C511 + C153862 * C523 +
             C70504 * C506 - C70505 * C485 - C70504 * C507 + C153916 * C521 +
             C70502 * C504 - C70503 * C484 - C70502 * C505 + C153935 * C520 +
             C70500 * C502 - C70501 * C483 - C70500 * C503 + C153942 * C519) *
                C153724 +
            (C99454 + C99453 + C99452 + C99451) * C98536) *
               C153625 * C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C152 - C70501 * C144 - C70500 * C153 + C153942 * C168 +
             C70502 * C154 - C70503 * C145 - C70502 * C155 + C153935 * C169 +
             C70504 * C156 - C70505 * C146 - C70504 * C157 + C153916 * C170 +
             C70506 * C158 - C70507 * C147 - C70506 * C159 + C153862 * C171) *
                C98536 +
            (C99023 + C99024 + C99025 + C99026) * C153724) *
               C153625 * C1898 -
           ((C99027 + C99028 + C99029 + C99030) * C153724 +
            (C99026 + C99025 + C99024 + C99023) * C98536) *
               C153625 * C153601) *
              C298 +
          (((C71734 + C71733 + C71732 + C71731) * C98536 +
            (C72309 + C72310 + C72311 + C72312) * C153724) *
               C153625 * C153601 -
           ((C71731 + C71732 + C71733 + C71734) * C153724 +
            (C70802 + C70801 + C70800 + C70799) * C98536) *
               C153625 * C1898) *
              C299 +
          (((C70806 + C70805 + C70804 + C70803) * C98536 +
            (C72983 + C72984 + C72985 + C72986) * C153724) *
               C153625 * C1898 -
           ((C70506 * C3289 - C70507 * C3282 - C70506 * C3290 +
             C153862 * C3294 + C70504 * C3287 - C70505 * C3281 -
             C70504 * C3288 + C153916 * C3293 + C70502 * C3285 -
             C70503 * C3280 - C70502 * C3286 + C153935 * C3292 +
             C70500 * C3283 - C70501 * C3279 - C70500 * C3284 +
             C153942 * C3291) *
                C153724 +
            (C72986 + C72985 + C72984 + C72983) * C98536) *
               C153625 * C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C98536 +
             (C78877 + C78878) * C153724) *
                C153936 +
            ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
            C102557 * C153898) *
               C1898 -
           (C105560 * C153898 + (C79918 * C153724 + C79919 * C98536) * C153924 +
            ((C78880 + C78879) * C153724 + (C78878 + C78877) * C98536) *
                C153936) *
               C153601) *
              C153521 * C1093 +
          ((((C78885 + C78886) * C98536 + (C78887 + C78888) * C153724) *
                C153936 +
            (C79920 * C98536 + C79921 * C153724) * C153924 +
            (C94919 * C98536 + (C78487 + C78488) * C153724) * C153898) *
               C153601 -
           (C102558 * C153898 +
            (C79922 * C153724 + (C74590 + C74589) * C98536) * C153924 +
            ((C78886 + C78885) * C153724 +
             (C74288 * C156 - C74289 * C146 - C74288 * C157 + C153472 * C170 +
              C74286 * C154 - C74287 * C145 - C74286 * C155 + C74280 * C169) *
                 C98536) *
                C153936) *
               C1898) *
              C153521 * C1094 +
          ((((C74286 * C156 - C74287 * C146 - C74286 * C157 + C74280 * C170 +
              C74288 * C158 - C74289 * C147 - C74288 * C159 + C153472 * C171) *
                 C98536 +
             (C79527 + C79528) * C153724) *
                C153936 +
            ((C75029 + C75030) * C98536 + (C79209 + C79210) * C153724) *
                C153924 +
            ((C75031 + C75032) * C98536 + (C94241 + C94242) * C153724) *
                C153898) *
               C1898 -
           (((C74288 * C3289 - C74289 * C3282 - C74288 * C3290 +
              C153472 * C3294 + C74286 * C3287 - C74287 * C3281 -
              C74286 * C3288 + C74280 * C3293) *
                 C153724 +
             (C94242 + C94241) * C98536) *
                C153898 +
            ((C79212 + C79211) * C153724 + (C79210 + C79209) * C98536) *
                C153924 +
            ((C79530 + C79529) * C153724 + (C79528 + C79527) * C98536) *
                C153936) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C74286 * C152 - C74287 * C144 - C74286 * C153 + C74280 * C168 +
              C74288 * C154 - C74289 * C145 - C74288 * C155 + C153472 * C169) *
                 C98536 +
             (C78877 + C78878) * C153724) *
                C153936 +
            ((C74581 + C74582) * C98536 + C79917 * C153724) * C153924 +
            C102557 * C153898) *
               C1898 -
           (C105560 * C153898 + (C79918 * C153724 + C79919 * C98536) * C153924 +
            ((C78880 + C78879) * C153724 + (C78878 + C78877) * C98536) *
                C153936) *
               C153601) *
              C298 +
          (((C79917 * C98536 + C78795 * C153724) * C153936 +
            (C81694 * C98536 + C81695 * C153724) * C153924 +
            (C96665 * C98536 + (C76147 + C76148) * C153724) * C153898) *
               C153601 -
           (C104301 * C153898 +
            (C76796 * C153724 + (C74584 + C74583) * C98536) * C153924 +
            (C79919 * C153724 + (C74582 + C74581) * C98536) * C153936) *
               C1898) *
              C299 +
          ((C102557 * C153936 + (C74598 * C98536 + C96665 * C153724) * C153924 +
            ((C74588 + C74587) * C98536 + (C76811 + C76812) * C153724) *
                C153898) *
               C1898 -
           (((C74288 * C28550 - C74289 * C28547 - C74288 * C28551 +
              C153472 * C28553 + C74286 * C28548 - C74287 * C28546 -
              C74286 * C28549 + C74280 * C28552) *
                 C153724 +
             (C76812 + C76811) * C98536) *
                C153898 +
            ((C76148 + C76147) * C153724 + C76795 * C98536) * C153924 +
            C105560 * C153936) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[300] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153637 * C153863 +
            (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
               C153537 * C153848 -
           ((C11578 + C11579 + C11580 + C11581) * C153637 * C153684 +
            (C11577 + C11576 + C11575 + C11574) * C153637 * C153863) *
               C153537 * C153573) *
              C153917 +
          (((C11582 + C11583 + C11584 + C11585) * C153637 * C153863 +
            (C11586 + C11587 + C11588 + C11589) * C153637 * C153684) *
               C153537 * C153573 -
           ((C11585 + C11584 + C11583 + C11582) * C153637 * C153684 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153637 * C153863) *
               C153537 * C153848) *
              C153918 +
          (((C11275 * C156 - C11276 * C146 - C11275 * C157 + C11269 * C170 +
             C11277 * C158 - C11278 * C147 - C11277 * C159 + C11270 * C171 +
             C11279 * C160 - C11280 * C148 - C11279 * C161 + C11271 * C172 +
             C11281 * C162 - C11282 * C149 - C11281 * C163 + C153862 * C173) *
                C153637 * C153863 +
            (C12002 + C12003 + C12004 + C12005) * C153637 * C153684) *
               C153537 * C153848 -
           ((C11281 * C337 - C11282 * C314 - C11281 * C338 + C153862 * C350 +
             C11279 * C333 - C11280 * C312 - C11279 * C334 + C11271 * C348 +
             C11277 * C331 - C11278 * C311 - C11277 * C332 + C11270 * C347 +
             C11275 * C329 - C11276 * C310 - C11275 * C330 + C11269 * C346) *
                C153637 * C153684 +
            (C12005 + C12004 + C12003 + C12002) * C153637 * C153863) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153637 * C34893 +
            (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
            C35213 * C153871) *
               C153537 * C153848 -
           ((C35198 + C35199) * C153637 * C153871 +
            (C35197 + C35196) * C153637 * C34895 +
            (C35195 + C35194) * C153637 * C34894 +
            (C35193 + C35192) * C153637 * C34893) *
               C153537 * C153573) *
              C153917 +
          (((C35200 + C35201) * C153637 * C34893 +
            (C35202 + C35203) * C153637 * C34894 +
            (C35204 + C35205) * C153637 * C34895 +
            (C35206 + C35207) * C153637 * C153871) *
               C153537 * C153573 -
           (C35214 * C153871 + C35215 * C34895 +
            (C35201 + C35200) * C153637 * C34894 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C153637 * C34893) *
               C153537 * C153848) *
              C153918 +
          (((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
             C152081 * C158 - C34900 * C147 - C152081 * C159 + C153472 * C171) *
                C153637 * C34893 +
            (C35640 + C35641) * C153637 * C34894 +
            (C35642 + C35643) * C153637 * C34895 +
            (C35644 + C35645) * C153637 * C153871) *
               C153537 * C153848 -
           ((C152081 * C2923 - C34900 * C2916 - C152081 * C2924 +
             C153472 * C2928 + C152100 * C2921 - C34898 * C2915 -
             C152100 * C2922 + C153829 * C2927) *
                C153637 * C153871 +
            (C35645 + C35644) * C153637 * C34895 +
            (C35643 + C35642) * C153637 * C34894 +
            (C35641 + C35640) * C153637 * C34893) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q));
    d2ee[301] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
              C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
              C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
              C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                 C153637 * C153863 +
             (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
                C153849 -
            ((C12506 + C12507 + C12508 + C12509) * C153637 * C153684 +
             (C11281 * C490 - C11282 * C477 - C11281 * C491 + C153862 * C513 +
              C11279 * C492 - C11280 * C478 - C11279 * C493 + C11271 * C514 +
              C11277 * C494 - C11278 * C479 - C11277 * C495 + C11270 * C515 +
              C11275 * C496 - C11276 * C480 - C11275 * C497 + C11269 * C516) *
                 C153637 * C153863) *
                C153601) *
               C153848 +
           (((C12509 + C12508 + C12507 + C12506) * C153637 * C153863 +
             (C11275 * C1769 - C11276 * C1760 - C11275 * C1770 +
              C11269 * C1775 + C11277 * C1767 - C11278 * C1759 -
              C11277 * C1768 + C11270 * C1774 + C11279 * C1765 -
              C11280 * C1758 - C11279 * C1766 + C11271 * C1773 +
              C11281 * C1763 - C11282 * C1757 - C11281 * C1764 +
              C153862 * C1772) *
                 C153637 * C153684) *
                C153601 -
            ((C11578 + C11579 + C11580 + C11581) * C153637 * C153684 +
             (C11577 + C11576 + C11575 + C11574) * C153637 * C153863) *
                C153849) *
               C153573) *
              C301 +
          ((((C11275 * C494 - C11276 * C479 - C11275 * C495 + C11269 * C515 +
              C11277 * C492 - C11278 * C478 - C11277 * C493 + C11270 * C514 +
              C11279 * C490 - C11280 * C477 - C11279 * C491 + C11271 * C513 +
              C11281 * C488 - C11282 * C476 - C11281 * C489 + C153862 * C512) *
                 C153637 * C153863 +
             (C12510 + C12511 + C12512 + C12513) * C153637 * C153684) *
                C153601 -
            ((C11585 + C11584 + C11583 + C11582) * C153637 * C153684 +
             (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
              C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
              C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
              C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                 C153637 * C153863) *
                C153849) *
               C153848 +
           (((C11582 + C11583 + C11584 + C11585) * C153637 * C153863 +
             (C11586 + C11587 + C11588 + C11589) * C153637 * C153684) *
                C153849 -
            ((C11281 * C1761 - C11282 * C1756 - C11281 * C1762 +
              C153862 * C1771 + C11279 * C1763 - C11280 * C1757 -
              C11279 * C1764 + C11271 * C1772 + C11277 * C1765 -
              C11278 * C1758 - C11277 * C1766 + C11270 * C1773 +
              C11275 * C1767 - C11276 * C1759 - C11275 * C1768 +
              C11269 * C1774) *
                 C153637 * C153684 +
             (C12513 + C12512 + C12511 + C12510) * C153637 * C153863) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153637 * C34893 +
             (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
             C35213 * C153871) *
                C153849 -
            ((C36170 + C36171) * C153637 * C153871 +
             (C36172 + C36173) * C153637 * C34895 +
             (C36174 + C36175) * C153637 * C34894 +
             (C152081 * C494 - C34900 * C479 - C152081 * C495 + C153472 * C515 +
              C152100 * C496 - C34898 * C480 - C152100 * C497 +
              C153829 * C516) *
                 C153637 * C34893) *
                C153601) *
               C153848 +
           (((C36175 + C36174) * C153637 * C34893 +
             (C36173 + C36172) * C153637 * C34894 +
             (C36171 + C36170) * C153637 * C34895 +
             (C152100 * C5568 - C34898 * C5563 - C152100 * C5569 +
              C153829 * C5572 + C152081 * C5566 - C34900 * C5562 -
              C152081 * C5567 + C153472 * C5571) *
                 C153637 * C153871) *
                C153601 -
            ((C35198 + C35199) * C153637 * C153871 +
             (C35197 + C35196) * C153637 * C34895 +
             (C35195 + C35194) * C153637 * C34894 +
             (C35193 + C35192) * C153637 * C34893) *
                C153849) *
               C153573) *
              C301 +
          ((((C152100 * C494 - C34898 * C479 - C152100 * C495 + C153829 * C515 +
              C152081 * C492 - C34900 * C478 - C152081 * C493 +
              C153472 * C514) *
                 C153637 * C34893 +
             (C36176 + C36177) * C153637 * C34894 +
             (C36178 + C36179) * C153637 * C34895 +
             (C36180 + C36181) * C153637 * C153871) *
                C153601 -
            (C35214 * C153871 + C35215 * C34895 +
             (C35201 + C35200) * C153637 * C34894 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153637 * C34893) *
                C153849) *
               C153848 +
           (((C35200 + C35201) * C153637 * C34893 +
             (C35202 + C35203) * C153637 * C34894 +
             (C35204 + C35205) * C153637 * C34895 +
             (C35206 + C35207) * C153637 * C153871) *
                C153849 -
            ((C152081 * C5564 - C34900 * C5561 - C152081 * C5565 +
              C153472 * C5570 + C152100 * C5566 - C34898 * C5562 -
              C152100 * C5567 + C153829 * C5571) *
                 C153637 * C153871 +
             (C36181 + C36180) * C153637 * C34895 +
             (C36179 + C36178) * C153637 * C34894 +
             (C36177 + C36176) * C153637 * C34893) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[302] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153637 * C153863 +
            (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
               C153537 * C298 -
           ((C11578 + C11579 + C11580 + C11581) * C153637 * C153684 +
            (C11577 + C11576 + C11575 + C11574) * C153637 * C153863) *
               C153537 * C299 +
           ((C11581 + C11580 + C11579 + C11578) * C153637 * C153863 +
            (C11275 * C1196 - C11276 * C1187 - C11275 * C1197 + C11269 * C1202 +
             C11277 * C1194 - C11278 * C1186 - C11277 * C1195 + C11270 * C1201 +
             C11279 * C1192 - C11280 * C1185 - C11279 * C1193 + C11271 * C1200 +
             C11281 * C1190 - C11282 * C1184 - C11281 * C1191 +
             C153862 * C1199) *
                C153637 * C153684) *
               C153537 * C300) *
              C301 +
          (((C11582 + C11583 + C11584 + C11585) * C153637 * C153863 +
            (C11586 + C11587 + C11588 + C11589) * C153637 * C153684) *
               C153537 * C299 -
           ((C11585 + C11584 + C11583 + C11582) * C153637 * C153684 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153637 * C153863) *
               C153537 * C298 -
           ((C11281 * C1188 - C11282 * C1183 - C11281 * C1189 +
             C153862 * C1198 + C11279 * C1190 - C11280 * C1184 -
             C11279 * C1191 + C11271 * C1199 + C11277 * C1192 - C11278 * C1185 -
             C11277 * C1193 + C11270 * C1200 + C11275 * C1194 - C11276 * C1186 -
             C11275 * C1195 + C11269 * C1201) *
                C153637 * C153684 +
            (C11589 + C11588 + C11587 + C11586) * C153637 * C153863) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
            C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
            C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
            C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
               C153637 * C153863 +
           (C11275 * C323 - C11276 * C307 - C11275 * C324 + C11269 * C343 +
            C11277 * C321 - C11278 * C306 - C11277 * C322 + C11270 * C342 +
            C11279 * C319 - C11280 * C305 - C11279 * C320 + C11271 * C341 +
            C11281 * C317 - C11282 * C304 - C11281 * C318 + C153862 * C340) *
               C153637 * C153684) *
              C153537 * C153521 * C130 -
          ((C11281 * C315 - C11282 * C303 - C11281 * C316 + C153862 * C339 +
            C11279 * C317 - C11280 * C304 - C11279 * C318 + C11271 * C340 +
            C11277 * C319 - C11278 * C305 - C11277 * C320 + C11270 * C341 +
            C11275 * C321 - C11276 * C306 - C11275 * C322 + C11269 * C342) *
               C153637 * C153684 +
           (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
            C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
            C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
            C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
               C153637 * C153863) *
              C153537 * C153521 * C131 +
          ((C11275 * C156 - C11276 * C146 - C11275 * C157 + C11269 * C170 +
            C11277 * C158 - C11278 * C147 - C11277 * C159 + C11270 * C171 +
            C11279 * C160 - C11280 * C148 - C11279 * C161 + C11271 * C172 +
            C11281 * C162 - C11282 * C149 - C11281 * C163 + C153862 * C173) *
               C153637 * C153863 +
           (C11275 * C319 - C11276 * C305 - C11275 * C320 + C11269 * C341 +
            C11277 * C317 - C11278 * C304 - C11277 * C318 + C11270 * C340 +
            C11279 * C315 - C11280 * C303 - C11279 * C316 + C11271 * C339 +
            C11281 * C335 - C11282 * C313 - C11281 * C336 + C153862 * C349) *
               C153637 * C153684) *
              C153537 * C153521 * C132 -
          ((C11281 * C652 - C11282 * C651 - C11281 * C653 + C153862 * C654 +
            C11279 * C335 - C11280 * C313 - C11279 * C336 + C11271 * C349 +
            C11277 * C315 - C11278 * C303 - C11277 * C316 + C11270 * C339 +
            C11275 * C317 - C11276 * C304 - C11275 * C318 + C11269 * C340) *
               C153637 * C153684 +
           (C11281 * C164 - C11282 * C150 - C11281 * C165 + C153862 * C174 +
            C11279 * C162 - C11280 * C149 - C11279 * C163 + C11271 * C173 +
            C11277 * C160 - C11278 * C148 - C11277 * C161 + C11270 * C172 +
            C11275 * C158 - C11276 * C147 - C11275 * C159 + C11269 * C171) *
               C153637 * C153863) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153637 * C153863 +
            (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
               C473 -
           ((C11281 * C957 - C11282 * C948 - C11281 * C958 + C153862 * C966 +
             C11279 * C955 - C11280 * C947 - C11279 * C956 + C11271 * C965 +
             C11277 * C953 - C11278 * C946 - C11277 * C954 + C11270 * C964 +
             C11275 * C951 - C11276 * C945 - C11275 * C952 + C11269 * C963) *
                C153637 * C153684 +
            (C11281 * C490 - C11282 * C477 - C11281 * C491 + C153862 * C513 +
             C11279 * C492 - C11280 * C478 - C11279 * C493 + C11271 * C514 +
             C11277 * C494 - C11278 * C479 - C11277 * C495 + C11270 * C515 +
             C11275 * C496 - C11276 * C480 - C11275 * C497 + C11269 * C516) *
                C153637 * C153863) *
               C474 +
           ((C11275 * C498 - C11276 * C481 - C11275 * C499 + C11269 * C517 +
             C11277 * C500 - C11278 * C482 - C11277 * C501 + C11270 * C518 +
             C11279 * C502 - C11280 * C483 - C11279 * C503 + C11271 * C519 +
             C11281 * C504 - C11282 * C484 - C11281 * C505 + C153862 * C520) *
                C153637 * C153863 +
            (C11275 * C1338 - C11276 * C1329 - C11275 * C1339 + C11269 * C1344 +
             C11277 * C1336 - C11278 * C1328 - C11277 * C1337 + C11270 * C1343 +
             C11279 * C1334 - C11280 * C1327 - C11279 * C1335 + C11271 * C1342 +
             C11281 * C1332 - C11282 * C1326 - C11281 * C1333 +
             C153862 * C1341) *
                C153637 * C153684) *
               C475) *
              C153521 * C301 +
          (((C11275 * C494 - C11276 * C479 - C11275 * C495 + C11269 * C515 +
             C11277 * C492 - C11278 * C478 - C11277 * C493 + C11270 * C514 +
             C11279 * C490 - C11280 * C477 - C11279 * C491 + C11271 * C513 +
             C11281 * C488 - C11282 * C476 - C11281 * C489 + C153862 * C512) *
                C153637 * C153863 +
            (C11275 * C953 - C11276 * C946 - C11275 * C954 + C11269 * C964 +
             C11277 * C955 - C11278 * C947 - C11277 * C956 + C11270 * C965 +
             C11279 * C957 - C11280 * C948 - C11279 * C958 + C11271 * C966 +
             C11281 * C959 - C11282 * C949 - C11281 * C960 + C153862 * C967) *
                C153637 * C153684) *
               C474 -
           ((C11585 + C11584 + C11583 + C11582) * C153637 * C153684 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153637 * C153863) *
               C473 -
           ((C11281 * C1330 - C11282 * C1325 - C11281 * C1331 +
             C153862 * C1340 + C11279 * C1332 - C11280 * C1326 -
             C11279 * C1333 + C11271 * C1341 + C11277 * C1334 - C11278 * C1327 -
             C11277 * C1335 + C11270 * C1342 + C11275 * C1336 - C11276 * C1328 -
             C11275 * C1337 + C11269 * C1343) *
                C153637 * C153684 +
            (C11281 * C506 - C11282 * C485 - C11281 * C507 + C153862 * C521 +
             C11279 * C504 - C11280 * C484 - C11279 * C505 + C11271 * C520 +
             C11277 * C502 - C11278 * C483 - C11277 * C503 + C11270 * C519 +
             C11275 * C500 - C11276 * C482 - C11275 * C501 + C11269 * C518) *
                C153637 * C153863) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
            C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
               C153637 * C34893 +
           (C152100 * C323 - C34898 * C307 - C152100 * C324 + C153829 * C343 +
            C152081 * C321 - C34900 * C306 - C152081 * C322 + C153472 * C342) *
               C153637 * C34894 +
           (C152100 * C325 - C34898 * C308 - C152100 * C326 + C153829 * C344 +
            C152081 * C327 - C34900 * C309 - C152081 * C328 + C153472 * C345) *
               C153637 * C34895 +
           (C152100 * C1196 - C34898 * C1187 - C152100 * C1197 +
            C153829 * C1202 + C152081 * C1194 - C34900 * C1186 -
            C152081 * C1195 + C153472 * C1201) *
               C153637 * C153871) *
              C153537 * C153521 * C130 -
          ((C152081 * C1192 - C34900 * C1185 - C152081 * C1193 +
            C153472 * C1200 + C152100 * C1194 - C34898 * C1186 -
            C152100 * C1195 + C153829 * C1201) *
               C153637 * C153871 +
           (C152081 * C329 - C34900 * C310 - C152081 * C330 + C153472 * C346 +
            C152100 * C327 - C34898 * C309 - C152100 * C328 + C153829 * C345) *
               C153637 * C34895 +
           (C152081 * C319 - C34900 * C305 - C152081 * C320 + C153472 * C341 +
            C152100 * C321 - C34898 * C306 - C152100 * C322 + C153829 * C342) *
               C153637 * C34894 +
           (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
            C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
               C153637 * C34893) *
              C153537 * C153521 * C131 +
          ((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
            C152081 * C158 - C34900 * C147 - C152081 * C159 + C153472 * C171) *
               C153637 * C34893 +
           (C152100 * C319 - C34898 * C305 - C152100 * C320 + C153829 * C341 +
            C152081 * C317 - C34900 * C304 - C152081 * C318 + C153472 * C340) *
               C153637 * C34894 +
           (C152100 * C329 - C34898 * C310 - C152100 * C330 + C153829 * C346 +
            C152081 * C331 - C34900 * C311 - C152081 * C332 + C153472 * C347) *
               C153637 * C34895 +
           (C152100 * C1192 - C34898 * C1185 - C152100 * C1193 +
            C153829 * C1200 + C152081 * C1190 - C34900 * C1184 -
            C152081 * C1191 + C153472 * C1199) *
               C153637 * C153871) *
              C153537 * C153521 * C132 -
          ((C152081 * C1188 - C34900 * C1183 - C152081 * C1189 +
            C153472 * C1198 + C152100 * C1190 - C34898 * C1184 -
            C152100 * C1191 + C153829 * C1199) *
               C153637 * C153871 +
           (C152081 * C333 - C34900 * C312 - C152081 * C334 + C153472 * C348 +
            C152100 * C331 - C34898 * C311 - C152100 * C332 + C153829 * C347) *
               C153637 * C34895 +
           (C152081 * C315 - C34900 * C303 - C152081 * C316 + C153472 * C339 +
            C152100 * C317 - C34898 * C304 - C152100 * C318 + C153829 * C340) *
               C153637 * C34894 +
           (C152081 * C160 - C34900 * C148 - C152081 * C161 + C153472 * C172 +
            C152100 * C158 - C34898 * C147 - C152100 * C159 + C153829 * C171) *
               C153637 * C34893) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153637 * C34893 +
            (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
            C35213 * C153871) *
               C153537 * C298 -
           ((C35198 + C35199) * C153637 * C153871 +
            (C35197 + C35196) * C153637 * C34895 +
            (C35195 + C35194) * C153637 * C34894 +
            (C35193 + C35192) * C153637 * C34893) *
               C153537 * C299 +
           (C35212 * C34893 + C35213 * C34894 +
            (C35199 + C35198) * C153637 * C34895 +
            (C152100 * C4534 - C34898 * C4529 - C152100 * C4535 +
             C153829 * C4538 + C152081 * C4532 - C34900 * C4528 -
             C152081 * C4533 + C153472 * C4537) *
                C153637 * C153871) *
               C153537 * C300) *
              C301 +
          (((C35200 + C35201) * C153637 * C34893 +
            (C35202 + C35203) * C153637 * C34894 +
            (C35204 + C35205) * C153637 * C34895 +
            (C35206 + C35207) * C153637 * C153871) *
               C153537 * C299 -
           (C35214 * C153871 + C35215 * C34895 +
            (C35201 + C35200) * C153637 * C34894 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C153637 * C34893) *
               C153537 * C298 -
           ((C152081 * C4530 - C34900 * C4527 - C152081 * C4531 +
             C153472 * C4536 + C152100 * C4532 - C34898 * C4528 -
             C152100 * C4533 + C153829 * C4537) *
                C153637 * C153871 +
            (C35207 + C35206) * C153637 * C34895 + C35214 * C34894 +
            C35215 * C34893) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153637 * C34893 +
            (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
            C35213 * C153871) *
               C473 -
           ((C152081 * C4069 - C34900 * C4064 - C152081 * C4070 +
             C153472 * C4076 + C152100 * C4067 - C34898 * C4063 -
             C152100 * C4068 + C153829 * C4075) *
                C153637 * C153871 +
            (C152081 * C1767 - C34900 * C1759 - C152081 * C1768 +
             C153472 * C1774 + C152100 * C1769 - C34898 * C1760 -
             C152100 * C1770 + C153829 * C1775) *
                C153637 * C34895 +
            (C152081 * C953 - C34900 * C946 - C152081 * C954 + C153472 * C964 +
             C152100 * C951 - C34898 * C945 - C152100 * C952 + C153829 * C963) *
                C153637 * C34894 +
            (C152081 * C494 - C34900 * C479 - C152081 * C495 + C153472 * C515 +
             C152100 * C496 - C34898 * C480 - C152100 * C497 + C153829 * C516) *
                C153637 * C34893) *
               C474 +
           ((C152100 * C498 - C34898 * C481 - C152100 * C499 + C153829 * C517 +
             C152081 * C500 - C34900 * C482 - C152081 * C501 + C153472 * C518) *
                C153637 * C34893 +
            (C152100 * C1338 - C34898 * C1329 - C152100 * C1339 +
             C153829 * C1344 + C152081 * C1336 - C34900 * C1328 -
             C152081 * C1337 + C153472 * C1343) *
                C153637 * C34894 +
            (C152100 * C3283 - C34898 * C3279 - C152100 * C3284 +
             C153829 * C3291 + C152081 * C3285 - C34900 * C3280 -
             C152081 * C3286 + C153472 * C3292) *
                C153637 * C34895 +
            (C152100 * C4788 - C34898 * C4783 - C152100 * C4789 +
             C153829 * C4792 + C152081 * C4786 - C34900 * C4782 -
             C152081 * C4787 + C153472 * C4791) *
                C153637 * C153871) *
               C475) *
              C153521 * C301 +
          (((C152100 * C494 - C34898 * C479 - C152100 * C495 + C153829 * C515 +
             C152081 * C492 - C34900 * C478 - C152081 * C493 + C153472 * C514) *
                C153637 * C34893 +
            (C152100 * C953 - C34898 * C946 - C152100 * C954 + C153829 * C964 +
             C152081 * C955 - C34900 * C947 - C152081 * C956 + C153472 * C965) *
                C153637 * C34894 +
            (C152100 * C1767 - C34898 * C1759 - C152100 * C1768 +
             C153829 * C1774 + C152081 * C1765 - C34900 * C1758 -
             C152081 * C1766 + C153472 * C1773) *
                C153637 * C34895 +
            (C152100 * C4069 - C34898 * C4064 - C152100 * C4070 +
             C153829 * C4076 + C152081 * C4071 - C34900 * C4065 -
             C152081 * C4072 + C153472 * C4077) *
                C153637 * C153871) *
               C474 -
           (C35214 * C153871 + C35215 * C34895 +
            (C35201 + C35200) * C153637 * C34894 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C153637 * C34893) *
               C473 -
           ((C152081 * C4784 - C34900 * C4781 - C152081 * C4785 +
             C153472 * C4790 + C152100 * C4786 - C34898 * C4782 -
             C152100 * C4787 + C153829 * C4791) *
                C153637 * C153871 +
            (C152081 * C3287 - C34900 * C3281 - C152081 * C3288 +
             C153472 * C3293 + C152100 * C3285 - C34898 * C3280 -
             C152100 * C3286 + C153829 * C3292) *
                C153637 * C34895 +
            (C152081 * C1334 - C34900 * C1327 - C152081 * C1335 +
             C153472 * C1342 + C152100 * C1336 - C34898 * C1328 -
             C152100 * C1337 + C153829 * C1343) *
                C153637 * C34894 +
            (C152081 * C502 - C34900 * C483 - C152081 * C503 + C153472 * C519 +
             C152100 * C500 - C34898 * C482 - C152100 * C501 + C153829 * C518) *
                C153637 * C34893) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[303] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153637 * C153863 +
            (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
               C153849 -
           ((C11281 * C957 - C11282 * C948 - C11281 * C958 + C153862 * C966 +
             C11279 * C955 - C11280 * C947 - C11279 * C956 + C11271 * C965 +
             C11277 * C953 - C11278 * C946 - C11277 * C954 + C11270 * C964 +
             C11275 * C951 - C11276 * C945 - C11275 * C952 + C11269 * C963) *
                C153637 * C153684 +
            (C11281 * C490 - C11282 * C477 - C11281 * C491 + C153862 * C513 +
             C11279 * C492 - C11280 * C478 - C11279 * C493 + C11271 * C514 +
             C11277 * C494 - C11278 * C479 - C11277 * C495 + C11270 * C515 +
             C11275 * C496 - C11276 * C480 - C11275 * C497 + C11269 * C516) *
                C153637 * C153863) *
               C153601) *
              C153521 * C153917 +
          (((C11275 * C494 - C11276 * C479 - C11275 * C495 + C11269 * C515 +
             C11277 * C492 - C11278 * C478 - C11277 * C493 + C11270 * C514 +
             C11279 * C490 - C11280 * C477 - C11279 * C491 + C11271 * C513 +
             C11281 * C488 - C11282 * C476 - C11281 * C489 + C153862 * C512) *
                C153637 * C153863 +
            (C11275 * C953 - C11276 * C946 - C11275 * C954 + C11269 * C964 +
             C11277 * C955 - C11278 * C947 - C11277 * C956 + C11270 * C965 +
             C11279 * C957 - C11280 * C948 - C11279 * C958 + C11271 * C966 +
             C11281 * C959 - C11282 * C949 - C11281 * C960 + C153862 * C967) *
                C153637 * C153684) *
               C153601 -
           ((C11585 + C11584 + C11583 + C11582) * C153637 * C153684 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153637 * C153863) *
               C153849) *
              C153521 * C153918 +
          (((C11275 * C156 - C11276 * C146 - C11275 * C157 + C11269 * C170 +
             C11277 * C158 - C11278 * C147 - C11277 * C159 + C11270 * C171 +
             C11279 * C160 - C11280 * C148 - C11279 * C161 + C11271 * C172 +
             C11281 * C162 - C11282 * C149 - C11281 * C163 + C153862 * C173) *
                C153637 * C153863 +
            (C12002 + C12003 + C12004 + C12005) * C153637 * C153684) *
               C153849 -
           ((C11281 * C961 - C11282 * C950 - C11281 * C962 + C153862 * C968 +
             C11279 * C959 - C11280 * C949 - C11279 * C960 + C11271 * C967 +
             C11277 * C957 - C11278 * C948 - C11277 * C958 + C11270 * C966 +
             C11275 * C955 - C11276 * C947 - C11275 * C956 + C11269 * C965) *
                C153637 * C153684 +
            (C11281 * C508 - C11282 * C486 - C11281 * C509 + C153862 * C522 +
             C11279 * C488 - C11280 * C476 - C11279 * C489 + C11271 * C512 +
             C11277 * C490 - C11278 * C477 - C11277 * C491 + C11270 * C513 +
             C11275 * C492 - C11276 * C478 - C11275 * C493 + C11269 * C514) *
                C153637 * C153863) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153637 * C34893 +
            (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
            C35213 * C153871) *
               C153849 -
           ((C152081 * C4069 - C34900 * C4064 - C152081 * C4070 +
             C153472 * C4076 + C152100 * C4067 - C34898 * C4063 -
             C152100 * C4068 + C153829 * C4075) *
                C153637 * C153871 +
            (C152081 * C1767 - C34900 * C1759 - C152081 * C1768 +
             C153472 * C1774 + C152100 * C1769 - C34898 * C1760 -
             C152100 * C1770 + C153829 * C1775) *
                C153637 * C34895 +
            (C152081 * C953 - C34900 * C946 - C152081 * C954 + C153472 * C964 +
             C152100 * C951 - C34898 * C945 - C152100 * C952 + C153829 * C963) *
                C153637 * C34894 +
            (C152081 * C494 - C34900 * C479 - C152081 * C495 + C153472 * C515 +
             C152100 * C496 - C34898 * C480 - C152100 * C497 + C153829 * C516) *
                C153637 * C34893) *
               C153601) *
              C153521 * C153917 +
          (((C152100 * C494 - C34898 * C479 - C152100 * C495 + C153829 * C515 +
             C152081 * C492 - C34900 * C478 - C152081 * C493 + C153472 * C514) *
                C153637 * C34893 +
            (C152100 * C953 - C34898 * C946 - C152100 * C954 + C153829 * C964 +
             C152081 * C955 - C34900 * C947 - C152081 * C956 + C153472 * C965) *
                C153637 * C34894 +
            (C152100 * C1767 - C34898 * C1759 - C152100 * C1768 +
             C153829 * C1774 + C152081 * C1765 - C34900 * C1758 -
             C152081 * C1766 + C153472 * C1773) *
                C153637 * C34895 +
            (C152100 * C4069 - C34898 * C4064 - C152100 * C4070 +
             C153829 * C4076 + C152081 * C4071 - C34900 * C4065 -
             C152081 * C4072 + C153472 * C4077) *
                C153637 * C153871) *
               C153601 -
           (C35214 * C153871 + C35215 * C34895 +
            (C35201 + C35200) * C153637 * C34894 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C153637 * C34893) *
               C153849) *
              C153521 * C153918 +
          (((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
             C152081 * C158 - C34900 * C147 - C152081 * C159 + C153472 * C171) *
                C153637 * C34893 +
            (C35640 + C35641) * C153637 * C34894 +
            (C35642 + C35643) * C153637 * C34895 +
            (C35644 + C35645) * C153637 * C153871) *
               C153849 -
           ((C152081 * C4073 - C34900 * C4066 - C152081 * C4074 +
             C153472 * C4078 + C152100 * C4071 - C34898 * C4065 -
             C152100 * C4072 + C153829 * C4077) *
                C153637 * C153871 +
            (C152081 * C1763 - C34900 * C1757 - C152081 * C1764 +
             C153472 * C1772 + C152100 * C1765 - C34898 * C1758 -
             C152100 * C1766 + C153829 * C1773) *
                C153637 * C34895 +
            (C152081 * C957 - C34900 * C948 - C152081 * C958 + C153472 * C966 +
             C152100 * C955 - C34898 * C947 - C152100 * C956 + C153829 * C965) *
                C153637 * C34894 +
            (C152081 * C490 - C34900 * C477 - C152081 * C491 + C153472 * C513 +
             C152100 * C492 - C34898 * C478 - C152100 * C493 + C153829 * C514) *
                C153637 * C34893) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q));
    d2ee[304] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
            C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
            C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
            C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
               C153637 * C153863 +
           (C11275 * C323 - C11276 * C307 - C11275 * C324 + C11269 * C343 +
            C11277 * C321 - C11278 * C306 - C11277 * C322 + C11270 * C342 +
            C11279 * C319 - C11280 * C305 - C11279 * C320 + C11271 * C341 +
            C11281 * C317 - C11282 * C304 - C11281 * C318 + C153862 * C340) *
               C153637 * C153684) *
              C153537 * C153521 * C130 -
          ((C11281 * C315 - C11282 * C303 - C11281 * C316 + C153862 * C339 +
            C11279 * C317 - C11280 * C304 - C11279 * C318 + C11271 * C340 +
            C11277 * C319 - C11278 * C305 - C11277 * C320 + C11270 * C341 +
            C11275 * C321 - C11276 * C306 - C11275 * C322 + C11269 * C342) *
               C153637 * C153684 +
           (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
            C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
            C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
            C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
               C153637 * C153863) *
              C153537 * C153521 * C131 +
          ((C11275 * C156 - C11276 * C146 - C11275 * C157 + C11269 * C170 +
            C11277 * C158 - C11278 * C147 - C11277 * C159 + C11270 * C171 +
            C11279 * C160 - C11280 * C148 - C11279 * C161 + C11271 * C172 +
            C11281 * C162 - C11282 * C149 - C11281 * C163 + C153862 * C173) *
               C153637 * C153863 +
           (C11275 * C319 - C11276 * C305 - C11275 * C320 + C11269 * C341 +
            C11277 * C317 - C11278 * C304 - C11277 * C318 + C11270 * C340 +
            C11279 * C315 - C11280 * C303 - C11279 * C316 + C11271 * C339 +
            C11281 * C335 - C11282 * C313 - C11281 * C336 + C153862 * C349) *
               C153637 * C153684) *
              C153537 * C153521 * C132 -
          ((C11281 * C652 - C11282 * C651 - C11281 * C653 + C153862 * C654 +
            C11279 * C335 - C11280 * C313 - C11279 * C336 + C11271 * C349 +
            C11277 * C315 - C11278 * C303 - C11277 * C316 + C11270 * C339 +
            C11275 * C317 - C11276 * C304 - C11275 * C318 + C11269 * C340) *
               C153637 * C153684 +
           (C11281 * C164 - C11282 * C150 - C11281 * C165 + C153862 * C174 +
            C11279 * C162 - C11280 * C149 - C11279 * C163 + C11271 * C173 +
            C11277 * C160 - C11278 * C148 - C11277 * C161 + C11270 * C172 +
            C11275 * C158 - C11276 * C147 - C11275 * C159 + C11269 * C171) *
               C153637 * C153863) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153637 * C153863 +
            (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
               C153537 * C298 -
           ((C11578 + C11579 + C11580 + C11581) * C153637 * C153684 +
            (C11577 + C11576 + C11575 + C11574) * C153637 * C153863) *
               C153537 * C299 +
           ((C11581 + C11580 + C11579 + C11578) * C153637 * C153863 +
            (C11275 * C1196 - C11276 * C1187 - C11275 * C1197 + C11269 * C1202 +
             C11277 * C1194 - C11278 * C1186 - C11277 * C1195 + C11270 * C1201 +
             C11279 * C1192 - C11280 * C1185 - C11279 * C1193 + C11271 * C1200 +
             C11281 * C1190 - C11282 * C1184 - C11281 * C1191 +
             C153862 * C1199) *
                C153637 * C153684) *
               C153537 * C300) *
              C301 +
          (((C11582 + C11583 + C11584 + C11585) * C153637 * C153863 +
            (C11586 + C11587 + C11588 + C11589) * C153637 * C153684) *
               C153537 * C299 -
           ((C11585 + C11584 + C11583 + C11582) * C153637 * C153684 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153637 * C153863) *
               C153537 * C298 -
           ((C11281 * C1188 - C11282 * C1183 - C11281 * C1189 +
             C153862 * C1198 + C11279 * C1190 - C11280 * C1184 -
             C11279 * C1191 + C11271 * C1199 + C11277 * C1192 - C11278 * C1185 -
             C11277 * C1193 + C11270 * C1200 + C11275 * C1194 - C11276 * C1186 -
             C11275 * C1195 + C11269 * C1201) *
                C153637 * C153684 +
            (C11589 + C11588 + C11587 + C11586) * C153637 * C153863) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
            C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
               C153637 * C34893 +
           (C152100 * C323 - C34898 * C307 - C152100 * C324 + C153829 * C343 +
            C152081 * C321 - C34900 * C306 - C152081 * C322 + C153472 * C342) *
               C153637 * C34894 +
           (C152100 * C325 - C34898 * C308 - C152100 * C326 + C153829 * C344 +
            C152081 * C327 - C34900 * C309 - C152081 * C328 + C153472 * C345) *
               C153637 * C34895 +
           (C152100 * C1196 - C34898 * C1187 - C152100 * C1197 +
            C153829 * C1202 + C152081 * C1194 - C34900 * C1186 -
            C152081 * C1195 + C153472 * C1201) *
               C153637 * C153871) *
              C153537 * C153521 * C130 -
          ((C152081 * C1192 - C34900 * C1185 - C152081 * C1193 +
            C153472 * C1200 + C152100 * C1194 - C34898 * C1186 -
            C152100 * C1195 + C153829 * C1201) *
               C153637 * C153871 +
           (C152081 * C329 - C34900 * C310 - C152081 * C330 + C153472 * C346 +
            C152100 * C327 - C34898 * C309 - C152100 * C328 + C153829 * C345) *
               C153637 * C34895 +
           (C152081 * C319 - C34900 * C305 - C152081 * C320 + C153472 * C341 +
            C152100 * C321 - C34898 * C306 - C152100 * C322 + C153829 * C342) *
               C153637 * C34894 +
           (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
            C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
               C153637 * C34893) *
              C153537 * C153521 * C131 +
          ((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
            C152081 * C158 - C34900 * C147 - C152081 * C159 + C153472 * C171) *
               C153637 * C34893 +
           (C152100 * C319 - C34898 * C305 - C152100 * C320 + C153829 * C341 +
            C152081 * C317 - C34900 * C304 - C152081 * C318 + C153472 * C340) *
               C153637 * C34894 +
           (C152100 * C329 - C34898 * C310 - C152100 * C330 + C153829 * C346 +
            C152081 * C331 - C34900 * C311 - C152081 * C332 + C153472 * C347) *
               C153637 * C34895 +
           (C152100 * C1192 - C34898 * C1185 - C152100 * C1193 +
            C153829 * C1200 + C152081 * C1190 - C34900 * C1184 -
            C152081 * C1191 + C153472 * C1199) *
               C153637 * C153871) *
              C153537 * C153521 * C132 -
          ((C152081 * C1188 - C34900 * C1183 - C152081 * C1189 +
            C153472 * C1198 + C152100 * C1190 - C34898 * C1184 -
            C152100 * C1191 + C153829 * C1199) *
               C153637 * C153871 +
           (C152081 * C333 - C34900 * C312 - C152081 * C334 + C153472 * C348 +
            C152100 * C331 - C34898 * C311 - C152100 * C332 + C153829 * C347) *
               C153637 * C34895 +
           (C152081 * C315 - C34900 * C303 - C152081 * C316 + C153472 * C339 +
            C152100 * C317 - C34898 * C304 - C152100 * C318 + C153829 * C340) *
               C153637 * C34894 +
           (C152081 * C160 - C34900 * C148 - C152081 * C161 + C153472 * C172 +
            C152100 * C158 - C34898 * C147 - C152100 * C159 + C153829 * C171) *
               C153637 * C34893) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153637 * C34893 +
            (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
            C35213 * C153871) *
               C153537 * C298 -
           ((C35198 + C35199) * C153637 * C153871 +
            (C35197 + C35196) * C153637 * C34895 +
            (C35195 + C35194) * C153637 * C34894 +
            (C35193 + C35192) * C153637 * C34893) *
               C153537 * C299 +
           (C35212 * C34893 + C35213 * C34894 +
            (C35199 + C35198) * C153637 * C34895 +
            (C152100 * C4534 - C34898 * C4529 - C152100 * C4535 +
             C153829 * C4538 + C152081 * C4532 - C34900 * C4528 -
             C152081 * C4533 + C153472 * C4537) *
                C153637 * C153871) *
               C153537 * C300) *
              C301 +
          (((C35200 + C35201) * C153637 * C34893 +
            (C35202 + C35203) * C153637 * C34894 +
            (C35204 + C35205) * C153637 * C34895 +
            (C35206 + C35207) * C153637 * C153871) *
               C153537 * C299 -
           (C35214 * C153871 + C35215 * C34895 +
            (C35201 + C35200) * C153637 * C34894 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C153637 * C34893) *
               C153537 * C298 -
           ((C152081 * C4530 - C34900 * C4527 - C152081 * C4531 +
             C153472 * C4536 + C152100 * C4532 - C34898 * C4528 -
             C152100 * C4533 + C153829 * C4537) *
                C153637 * C153871 +
            (C35207 + C35206) * C153637 * C34895 + C35214 * C34894 +
            C35215 * C34893) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[305] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153637 * C153863 +
            (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
               C153537 * C153919 -
           ((C11578 + C11579 + C11580 + C11581) * C153637 * C153684 +
            (C11577 + C11576 + C11575 + C11574) * C153637 * C153863) *
               C153537 * C153920 +
           ((C11581 + C11580 + C11579 + C11578) * C153637 * C153863 +
            (C12862 + C12863 + C12864 + C12865) * C153637 * C153684) *
               C153537 * C1469) *
              C153840 +
          (((C11582 + C11583 + C11584 + C11585) * C153637 * C153863 +
            (C11586 + C11587 + C11588 + C11589) * C153637 * C153684) *
               C153537 * C153920 -
           ((C11585 + C11584 + C11583 + C11582) * C153637 * C153684 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153637 * C153863) *
               C153537 * C153919 -
           ((C11281 * C1188 - C11282 * C1183 - C11281 * C1189 +
             C153862 * C1198 + C11279 * C1190 - C11280 * C1184 -
             C11279 * C1191 + C11271 * C1199 + C11277 * C1192 - C11278 * C1185 -
             C11277 * C1193 + C11270 * C1200 + C11275 * C1194 - C11276 * C1186 -
             C11275 * C1195 + C11269 * C1201) *
                C153637 * C153684 +
            (C11589 + C11588 + C11587 + C11586) * C153637 * C153863) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153637 * C34893 +
            (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
            C35213 * C153871) *
               C153537 * C153919 -
           (C36516 * C153871 + C36517 * C34895 +
            (C35195 + C35194) * C153637 * C34894 +
            (C35193 + C35192) * C153637 * C34893) *
               C153537 * C153920 +
           (C35212 * C34893 + C35213 * C34894 +
            (C35199 + C35198) * C153637 * C34895 +
            (C36522 + C36523) * C153637 * C153871) *
               C153537 * C1469) *
              C153840 +
          (((C35200 + C35201) * C153637 * C34893 +
            (C35202 + C35203) * C153637 * C34894 +
            (C35204 + C35205) * C153637 * C34895 +
            (C35206 + C35207) * C153637 * C153871) *
               C153537 * C153920 -
           (C35214 * C153871 + C35215 * C34895 +
            (C35201 + C35200) * C153637 * C34894 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C153637 * C34893) *
               C153537 * C153919 -
           ((C152081 * C4530 - C34900 * C4527 - C152081 * C4531 +
             C153472 * C4536 + C152100 * C4532 - C34898 * C4528 -
             C152100 * C4533 + C153829 * C4537) *
                C153637 * C153871 +
            (C35207 + C35206) * C153637 * C34895 + C35214 * C34894 +
            C35215 * C34893) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[306] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153637 * C153863 +
            (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
               C153849 -
           ((C12506 + C12507 + C12508 + C12509) * C153637 * C153684 +
            (C11281 * C490 - C11282 * C477 - C11281 * C491 + C153862 * C513 +
             C11279 * C492 - C11280 * C478 - C11279 * C493 + C11271 * C514 +
             C11277 * C494 - C11278 * C479 - C11277 * C495 + C11270 * C515 +
             C11275 * C496 - C11276 * C480 - C11275 * C497 + C11269 * C516) *
                C153637 * C153863) *
               C153601) *
              C153919 +
          (((C12509 + C12508 + C12507 + C12506) * C153637 * C153863 +
            (C13758 + C13759 + C13760 + C13761) * C153637 * C153684) *
               C153601 -
           ((C11578 + C11579 + C11580 + C11581) * C153637 * C153684 +
            (C11577 + C11576 + C11575 + C11574) * C153637 * C153863) *
               C153849) *
              C153920 +
          (((C11581 + C11580 + C11579 + C11578) * C153637 * C153863 +
            (C12862 + C12863 + C12864 + C12865) * C153637 * C153684) *
               C153849 -
           ((C11281 * C4073 - C11282 * C4066 - C11281 * C4074 +
             C153862 * C4078 + C11279 * C4071 - C11280 * C4065 -
             C11279 * C4072 + C11271 * C4077 + C11277 * C4069 - C11278 * C4064 -
             C11277 * C4070 + C11270 * C4076 + C11275 * C4067 - C11276 * C4063 -
             C11275 * C4068 + C11269 * C4075) *
                C153637 * C153684 +
            (C13761 + C13760 + C13759 + C13758) * C153637 * C153863) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153637 * C34893 +
            (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
            C35213 * C153871) *
               C153849 -
           (C37416 * C153871 + C37417 * C34895 +
            (C36174 + C36175) * C153637 * C34894 +
            (C152081 * C494 - C34900 * C479 - C152081 * C495 + C153472 * C515 +
             C152100 * C496 - C34898 * C480 - C152100 * C497 + C153829 * C516) *
                C153637 * C34893) *
               C153601) *
              C153919 +
          (((C36175 + C36174) * C153637 * C34893 +
            (C36173 + C36172) * C153637 * C34894 +
            (C36171 + C36170) * C153637 * C34895 +
            (C37422 + C37423) * C153637 * C153871) *
               C153601 -
           (C36516 * C153871 + C36517 * C34895 +
            (C35195 + C35194) * C153637 * C34894 +
            (C35193 + C35192) * C153637 * C34893) *
               C153849) *
              C153920 +
          ((C35212 * C34893 + C35213 * C34894 +
            (C35199 + C35198) * C153637 * C34895 +
            (C36522 + C36523) * C153637 * C153871) *
               C153849 -
           ((C152081 * C28996 - C34900 * C28993 - C152081 * C28997 +
             C153472 * C28999 + C152100 * C28994 - C34898 * C28992 -
             C152100 * C28995 + C153829 * C28998) *
                C153637 * C153871 +
            (C37423 + C37422) * C153637 * C34895 + C37416 * C34894 +
            C37417 * C34893) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[307] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
            C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
            C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
            C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
               C153637 * C153863 +
           (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
              C153537 * C1178 -
          ((C11578 + C11579 + C11580 + C11581) * C153637 * C153684 +
           (C11577 + C11576 + C11575 + C11574) * C153637 * C153863) *
              C153537 * C1179 +
          ((C11581 + C11580 + C11579 + C11578) * C153637 * C153863 +
           (C12862 + C12863 + C12864 + C12865) * C153637 * C153684) *
              C153537 * C1180 -
          ((C11281 * C2923 - C11282 * C2916 - C11281 * C2924 + C153862 * C2928 +
            C11279 * C2921 - C11280 * C2915 - C11279 * C2922 + C11271 * C2927 +
            C11277 * C2919 - C11278 * C2914 - C11277 * C2920 + C11270 * C2926 +
            C11275 * C2917 - C11276 * C2913 - C11275 * C2918 + C11269 * C2925) *
               C153637 * C153684 +
           (C12865 + C12864 + C12863 + C12862) * C153637 * C153863) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153637 * C153863 +
            (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
               C153537 * C1091 -
           ((C11578 + C11579 + C11580 + C11581) * C153637 * C153684 +
            (C11577 + C11576 + C11575 + C11574) * C153637 * C153863) *
               C153537 * C153573) *
              C1093 +
          (((C11582 + C11583 + C11584 + C11585) * C153637 * C153863 +
            (C11586 + C11587 + C11588 + C11589) * C153637 * C153684) *
               C153537 * C153573 -
           ((C11585 + C11584 + C11583 + C11582) * C153637 * C153684 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153637 * C153863) *
               C153537 * C1091) *
              C1094 +
          (((C11275 * C156 - C11276 * C146 - C11275 * C157 + C11269 * C170 +
             C11277 * C158 - C11278 * C147 - C11277 * C159 + C11270 * C171 +
             C11279 * C160 - C11280 * C148 - C11279 * C161 + C11271 * C172 +
             C11281 * C162 - C11282 * C149 - C11281 * C163 + C153862 * C173) *
                C153637 * C153863 +
            (C12002 + C12003 + C12004 + C12005) * C153637 * C153684) *
               C153537 * C1091 -
           ((C11281 * C337 - C11282 * C314 - C11281 * C338 + C153862 * C350 +
             C11279 * C333 - C11280 * C312 - C11279 * C334 + C11271 * C348 +
             C11277 * C331 - C11278 * C311 - C11277 * C332 + C11270 * C347 +
             C11275 * C329 - C11276 * C310 - C11275 * C330 + C11269 * C346) *
                C153637 * C153684 +
            (C12005 + C12004 + C12003 + C12002) * C153637 * C153863) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153637 * C153863 +
            (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
               C473 -
           ((C12506 + C12507 + C12508 + C12509) * C153637 * C153684 +
            (C11281 * C490 - C11282 * C477 - C11281 * C491 + C153862 * C513 +
             C11279 * C492 - C11280 * C478 - C11279 * C493 + C11271 * C514 +
             C11277 * C494 - C11278 * C479 - C11277 * C495 + C11270 * C515 +
             C11275 * C496 - C11276 * C480 - C11275 * C497 + C11269 * C516) *
                C153637 * C153863) *
               C474 +
           ((C11275 * C498 - C11276 * C481 - C11275 * C499 + C11269 * C517 +
             C11277 * C500 - C11278 * C482 - C11277 * C501 + C11270 * C518 +
             C11279 * C502 - C11280 * C483 - C11279 * C503 + C11271 * C519 +
             C11281 * C504 - C11282 * C484 - C11281 * C505 + C153862 * C520) *
                C153637 * C153863 +
            (C13084 + C13085 + C13086 + C13087) * C153637 * C153684) *
               C475) *
              C1091 +
          (((C12509 + C12508 + C12507 + C12506) * C153637 * C153863 +
            (C11275 * C1769 - C11276 * C1760 - C11275 * C1770 + C11269 * C1775 +
             C11277 * C1767 - C11278 * C1759 - C11277 * C1768 + C11270 * C1774 +
             C11279 * C1765 - C11280 * C1758 - C11279 * C1766 + C11271 * C1773 +
             C11281 * C1763 - C11282 * C1757 - C11281 * C1764 +
             C153862 * C1772) *
                C153637 * C153684) *
               C474 -
           ((C11578 + C11579 + C11580 + C11581) * C153637 * C153684 +
            (C11577 + C11576 + C11575 + C11574) * C153637 * C153863) *
               C473 -
           ((C11281 * C3289 - C11282 * C3282 - C11281 * C3290 +
             C153862 * C3294 + C11279 * C3287 - C11280 * C3281 -
             C11279 * C3288 + C11271 * C3293 + C11277 * C3285 - C11278 * C3280 -
             C11277 * C3286 + C11270 * C3292 + C11275 * C3283 - C11276 * C3279 -
             C11275 * C3284 + C11269 * C3291) *
                C153637 * C153684 +
            (C13087 + C13086 + C13085 + C13084) * C153637 * C153863) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153637 * C34893 +
            (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
            C35213 * C153871) *
               C153537 * C1091 -
           ((C35198 + C35199) * C153637 * C153871 +
            (C35197 + C35196) * C153637 * C34895 +
            (C35195 + C35194) * C153637 * C34894 +
            (C35193 + C35192) * C153637 * C34893) *
               C153537 * C153573) *
              C1093 +
          (((C35200 + C35201) * C153637 * C34893 +
            (C35202 + C35203) * C153637 * C34894 +
            (C35204 + C35205) * C153637 * C34895 +
            (C35206 + C35207) * C153637 * C153871) *
               C153537 * C153573 -
           (C35214 * C153871 + C35215 * C34895 +
            (C35201 + C35200) * C153637 * C34894 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C153637 * C34893) *
               C153537 * C1091) *
              C1094 +
          (((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
             C152081 * C158 - C34900 * C147 - C152081 * C159 + C153472 * C171) *
                C153637 * C34893 +
            (C35640 + C35641) * C153637 * C34894 +
            (C35642 + C35643) * C153637 * C34895 +
            (C35644 + C35645) * C153637 * C153871) *
               C153537 * C1091 -
           ((C152081 * C2923 - C34900 * C2916 - C152081 * C2924 +
             C153472 * C2928 + C152100 * C2921 - C34898 * C2915 -
             C152100 * C2922 + C153829 * C2927) *
                C153637 * C153871 +
            (C35645 + C35644) * C153637 * C34895 +
            (C35643 + C35642) * C153637 * C34894 +
            (C35641 + C35640) * C153637 * C34893) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
            C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
               C153637 * C34893 +
           (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
           C35213 * C153871) *
              C153537 * C1178 -
          (C36516 * C153871 + C36517 * C34895 +
           (C35195 + C35194) * C153637 * C34894 +
           (C35193 + C35192) * C153637 * C34893) *
              C153537 * C1179 +
          (C35212 * C34893 + C35213 * C34894 +
           (C35199 + C35198) * C153637 * C34895 +
           (C36522 + C36523) * C153637 * C153871) *
              C153537 * C1180 -
          ((C152081 * C28340 - C34900 * C28337 - C152081 * C28341 +
            C153472 * C28343 + C152100 * C28338 - C34898 * C28336 -
            C152100 * C28339 + C153829 * C28342) *
               C153637 * C153871 +
           (C36523 + C36522) * C153637 * C34895 + C36516 * C34894 +
           C36517 * C34893) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153637 * C34893 +
            (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
            C35213 * C153871) *
               C473 -
           ((C36170 + C36171) * C153637 * C153871 +
            (C36172 + C36173) * C153637 * C34895 +
            (C36174 + C36175) * C153637 * C34894 +
            (C152081 * C494 - C34900 * C479 - C152081 * C495 + C153472 * C515 +
             C152100 * C496 - C34898 * C480 - C152100 * C497 + C153829 * C516) *
                C153637 * C34893) *
               C474 +
           ((C152100 * C498 - C34898 * C481 - C152100 * C499 + C153829 * C517 +
             C152081 * C500 - C34900 * C482 - C152081 * C501 + C153472 * C518) *
                C153637 * C34893 +
            (C36754 + C36755) * C153637 * C34894 +
            (C36756 + C36757) * C153637 * C34895 +
            (C36758 + C36759) * C153637 * C153871) *
               C475) *
              C1091 +
          (((C36175 + C36174) * C153637 * C34893 +
            (C36173 + C36172) * C153637 * C34894 +
            (C36171 + C36170) * C153637 * C34895 +
            (C152100 * C5568 - C34898 * C5563 - C152100 * C5569 +
             C153829 * C5572 + C152081 * C5566 - C34900 * C5562 -
             C152081 * C5567 + C153472 * C5571) *
                C153637 * C153871) *
               C474 -
           (C36516 * C153871 + C36517 * C34895 +
            (C35195 + C35194) * C153637 * C34894 +
            (C35193 + C35192) * C153637 * C34893) *
               C473 -
           ((C152081 * C28550 - C34900 * C28547 - C152081 * C28551 +
             C153472 * C28553 + C152100 * C28548 - C34898 * C28546 -
             C152100 * C28549 + C153829 * C28552) *
                C153637 * C153871 +
            (C36759 + C36758) * C153637 * C34895 +
            (C36757 + C36756) * C153637 * C34894 +
            (C36755 + C36754) * C153637 * C34893) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[308] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
              C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
              C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
              C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                 C153637 * C153863 +
             (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
                C153849 -
            ((C12506 + C12507 + C12508 + C12509) * C153637 * C153684 +
             (C11281 * C490 - C11282 * C477 - C11281 * C491 + C153862 * C513 +
              C11279 * C492 - C11280 * C478 - C11279 * C493 + C11271 * C514 +
              C11277 * C494 - C11278 * C479 - C11277 * C495 + C11270 * C515 +
              C11275 * C496 - C11276 * C480 - C11275 * C497 + C11269 * C516) *
                 C153637 * C153863) *
                C153601) *
               C1091 +
           (((C12509 + C12508 + C12507 + C12506) * C153637 * C153863 +
             (C11275 * C1769 - C11276 * C1760 - C11275 * C1770 +
              C11269 * C1775 + C11277 * C1767 - C11278 * C1759 -
              C11277 * C1768 + C11270 * C1774 + C11279 * C1765 -
              C11280 * C1758 - C11279 * C1766 + C11271 * C1773 +
              C11281 * C1763 - C11282 * C1757 - C11281 * C1764 +
              C153862 * C1772) *
                 C153637 * C153684) *
                C153601 -
            ((C11578 + C11579 + C11580 + C11581) * C153637 * C153684 +
             (C11577 + C11576 + C11575 + C11574) * C153637 * C153863) *
                C153849) *
               C153573) *
              C153840 +
          ((((C11275 * C494 - C11276 * C479 - C11275 * C495 + C11269 * C515 +
              C11277 * C492 - C11278 * C478 - C11277 * C493 + C11270 * C514 +
              C11279 * C490 - C11280 * C477 - C11279 * C491 + C11271 * C513 +
              C11281 * C488 - C11282 * C476 - C11281 * C489 + C153862 * C512) *
                 C153637 * C153863 +
             (C12510 + C12511 + C12512 + C12513) * C153637 * C153684) *
                C153601 -
            ((C11585 + C11584 + C11583 + C11582) * C153637 * C153684 +
             (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
              C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
              C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
              C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                 C153637 * C153863) *
                C153849) *
               C1091 +
           (((C11582 + C11583 + C11584 + C11585) * C153637 * C153863 +
             (C11586 + C11587 + C11588 + C11589) * C153637 * C153684) *
                C153849 -
            ((C11281 * C1761 - C11282 * C1756 - C11281 * C1762 +
              C153862 * C1771 + C11279 * C1763 - C11280 * C1757 -
              C11279 * C1764 + C11271 * C1772 + C11277 * C1765 -
              C11278 * C1758 - C11277 * C1766 + C11270 * C1773 +
              C11275 * C1767 - C11276 * C1759 - C11275 * C1768 +
              C11269 * C1774) *
                 C153637 * C153684 +
             (C12513 + C12512 + C12511 + C12510) * C153637 * C153863) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153637 * C34893 +
             (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
             C35213 * C153871) *
                C153849 -
            ((C36170 + C36171) * C153637 * C153871 +
             (C36172 + C36173) * C153637 * C34895 +
             (C36174 + C36175) * C153637 * C34894 +
             (C152081 * C494 - C34900 * C479 - C152081 * C495 + C153472 * C515 +
              C152100 * C496 - C34898 * C480 - C152100 * C497 +
              C153829 * C516) *
                 C153637 * C34893) *
                C153601) *
               C1091 +
           (((C36175 + C36174) * C153637 * C34893 +
             (C36173 + C36172) * C153637 * C34894 +
             (C36171 + C36170) * C153637 * C34895 +
             (C152100 * C5568 - C34898 * C5563 - C152100 * C5569 +
              C153829 * C5572 + C152081 * C5566 - C34900 * C5562 -
              C152081 * C5567 + C153472 * C5571) *
                 C153637 * C153871) *
                C153601 -
            (C36516 * C153871 + C36517 * C34895 +
             (C35195 + C35194) * C153637 * C34894 +
             (C35193 + C35192) * C153637 * C34893) *
                C153849) *
               C153573) *
              C153840 +
          ((((C152100 * C494 - C34898 * C479 - C152100 * C495 + C153829 * C515 +
              C152081 * C492 - C34900 * C478 - C152081 * C493 +
              C153472 * C514) *
                 C153637 * C34893 +
             (C36176 + C36177) * C153637 * C34894 +
             (C36178 + C36179) * C153637 * C34895 +
             (C36180 + C36181) * C153637 * C153871) *
                C153601 -
            (C35214 * C153871 + C35215 * C34895 +
             (C35201 + C35200) * C153637 * C34894 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153637 * C34893) *
                C153849) *
               C1091 +
           (((C35200 + C35201) * C153637 * C34893 +
             (C35202 + C35203) * C153637 * C34894 +
             (C35204 + C35205) * C153637 * C34895 +
             (C35206 + C35207) * C153637 * C153871) *
                C153849 -
            ((C152081 * C5564 - C34900 * C5561 - C152081 * C5565 +
              C153472 * C5570 + C152100 * C5566 - C34898 * C5562 -
              C152100 * C5567 + C153829 * C5571) *
                 C153637 * C153871 +
             (C36181 + C36180) * C153637 * C34895 +
             (C36179 + C36178) * C153637 * C34894 +
             (C36177 + C36176) * C153637 * C34893) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[309] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153637 * C153863 +
            (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
               C153537 * C1091 -
           ((C11578 + C11579 + C11580 + C11581) * C153637 * C153684 +
            (C11577 + C11576 + C11575 + C11574) * C153637 * C153863) *
               C153537 * C153573) *
              C1093 +
          (((C11582 + C11583 + C11584 + C11585) * C153637 * C153863 +
            (C11586 + C11587 + C11588 + C11589) * C153637 * C153684) *
               C153537 * C153573 -
           ((C11585 + C11584 + C11583 + C11582) * C153637 * C153684 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153637 * C153863) *
               C153537 * C1091) *
              C1094 +
          (((C11275 * C156 - C11276 * C146 - C11275 * C157 + C11269 * C170 +
             C11277 * C158 - C11278 * C147 - C11277 * C159 + C11270 * C171 +
             C11279 * C160 - C11280 * C148 - C11279 * C161 + C11271 * C172 +
             C11281 * C162 - C11282 * C149 - C11281 * C163 + C153862 * C173) *
                C153637 * C153863 +
            (C12002 + C12003 + C12004 + C12005) * C153637 * C153684) *
               C153537 * C1091 -
           ((C11281 * C337 - C11282 * C314 - C11281 * C338 + C153862 * C350 +
             C11279 * C333 - C11280 * C312 - C11279 * C334 + C11271 * C348 +
             C11277 * C331 - C11278 * C311 - C11277 * C332 + C11270 * C347 +
             C11275 * C329 - C11276 * C310 - C11275 * C330 + C11269 * C346) *
                C153637 * C153684 +
            (C12005 + C12004 + C12003 + C12002) * C153637 * C153863) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
            C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
            C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
            C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
               C153637 * C153863 +
           (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
              C153537 * C1178 -
          ((C11578 + C11579 + C11580 + C11581) * C153637 * C153684 +
           (C11577 + C11576 + C11575 + C11574) * C153637 * C153863) *
              C153537 * C1179 +
          ((C11581 + C11580 + C11579 + C11578) * C153637 * C153863 +
           (C12862 + C12863 + C12864 + C12865) * C153637 * C153684) *
              C153537 * C1180 -
          ((C11281 * C2923 - C11282 * C2916 - C11281 * C2924 + C153862 * C2928 +
            C11279 * C2921 - C11280 * C2915 - C11279 * C2922 + C11271 * C2927 +
            C11277 * C2919 - C11278 * C2914 - C11277 * C2920 + C11270 * C2926 +
            C11275 * C2917 - C11276 * C2913 - C11275 * C2918 + C11269 * C2925) *
               C153637 * C153684 +
           (C12865 + C12864 + C12863 + C12862) * C153637 * C153863) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153637 * C34893 +
            (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
            C35213 * C153871) *
               C153537 * C1091 -
           ((C35198 + C35199) * C153637 * C153871 +
            (C35197 + C35196) * C153637 * C34895 +
            (C35195 + C35194) * C153637 * C34894 +
            (C35193 + C35192) * C153637 * C34893) *
               C153537 * C153573) *
              C1093 +
          (((C35200 + C35201) * C153637 * C34893 +
            (C35202 + C35203) * C153637 * C34894 +
            (C35204 + C35205) * C153637 * C34895 +
            (C35206 + C35207) * C153637 * C153871) *
               C153537 * C153573 -
           (C35214 * C153871 + C35215 * C34895 +
            (C35201 + C35200) * C153637 * C34894 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C153637 * C34893) *
               C153537 * C1091) *
              C1094 +
          (((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
             C152081 * C158 - C34900 * C147 - C152081 * C159 + C153472 * C171) *
                C153637 * C34893 +
            (C35640 + C35641) * C153637 * C34894 +
            (C35642 + C35643) * C153637 * C34895 +
            (C35644 + C35645) * C153637 * C153871) *
               C153537 * C1091 -
           ((C152081 * C2923 - C34900 * C2916 - C152081 * C2924 +
             C153472 * C2928 + C152100 * C2921 - C34898 * C2915 -
             C152100 * C2922 + C153829 * C2927) *
                C153637 * C153871 +
            (C35645 + C35644) * C153637 * C34895 +
            (C35643 + C35642) * C153637 * C34894 +
            (C35641 + C35640) * C153637 * C34893) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
            C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
               C153637 * C34893 +
           (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
           C35213 * C153871) *
              C153537 * C1178 -
          (C36516 * C153871 + C36517 * C34895 +
           (C35195 + C35194) * C153637 * C34894 +
           (C35193 + C35192) * C153637 * C34893) *
              C153537 * C1179 +
          (C35212 * C34893 + C35213 * C34894 +
           (C35199 + C35198) * C153637 * C34895 +
           (C36522 + C36523) * C153637 * C153871) *
              C153537 * C1180 -
          ((C152081 * C28340 - C34900 * C28337 - C152081 * C28341 +
            C153472 * C28343 + C152100 * C28338 - C34898 * C28336 -
            C152100 * C28339 + C153829 * C28342) *
               C153637 * C153871 +
           (C36523 + C36522) * C153637 * C34895 + C36516 * C34894 +
           C36517 * C34893) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[310] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
              C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
              C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
              C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                 C153637 * C153863 +
             (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
                C1898 -
            ((C12506 + C12507 + C12508 + C12509) * C153637 * C153684 +
             (C11281 * C490 - C11282 * C477 - C11281 * C491 + C153862 * C513 +
              C11279 * C492 - C11280 * C478 - C11279 * C493 + C11271 * C514 +
              C11277 * C494 - C11278 * C479 - C11277 * C495 + C11270 * C515 +
              C11275 * C496 - C11276 * C480 - C11275 * C497 + C11269 * C516) *
                 C153637 * C153863) *
                C153601) *
               C153848 +
           (((C12509 + C12508 + C12507 + C12506) * C153637 * C153863 +
             (C13758 + C13759 + C13760 + C13761) * C153637 * C153684) *
                C153601 -
            ((C11578 + C11579 + C11580 + C11581) * C153637 * C153684 +
             (C11577 + C11576 + C11575 + C11574) * C153637 * C153863) *
                C1898) *
               C153573) *
              C153840 +
          ((((C11275 * C494 - C11276 * C479 - C11275 * C495 + C11269 * C515 +
              C11277 * C492 - C11278 * C478 - C11277 * C493 + C11270 * C514 +
              C11279 * C490 - C11280 * C477 - C11279 * C491 + C11271 * C513 +
              C11281 * C488 - C11282 * C476 - C11281 * C489 + C153862 * C512) *
                 C153637 * C153863 +
             (C12510 + C12511 + C12512 + C12513) * C153637 * C153684) *
                C153601 -
            ((C11585 + C11584 + C11583 + C11582) * C153637 * C153684 +
             (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
              C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
              C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
              C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                 C153637 * C153863) *
                C1898) *
               C153848 +
           (((C11582 + C11583 + C11584 + C11585) * C153637 * C153863 +
             (C11586 + C11587 + C11588 + C11589) * C153637 * C153684) *
                C1898 -
            ((C11281 * C1761 - C11282 * C1756 - C11281 * C1762 +
              C153862 * C1771 + C11279 * C1763 - C11280 * C1757 -
              C11279 * C1764 + C11271 * C1772 + C11277 * C1765 -
              C11278 * C1758 - C11277 * C1766 + C11270 * C1773 +
              C11275 * C1767 - C11276 * C1759 - C11275 * C1768 +
              C11269 * C1774) *
                 C153637 * C153684 +
             (C12513 + C12512 + C12511 + C12510) * C153637 * C153863) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153637 * C34893 +
             (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
             C35213 * C153871) *
                C1898 -
            (C37416 * C153871 + C37417 * C34895 +
             (C36174 + C36175) * C153637 * C34894 +
             (C152081 * C494 - C34900 * C479 - C152081 * C495 + C153472 * C515 +
              C152100 * C496 - C34898 * C480 - C152100 * C497 +
              C153829 * C516) *
                 C153637 * C34893) *
                C153601) *
               C153848 +
           (((C36175 + C36174) * C153637 * C34893 +
             (C36173 + C36172) * C153637 * C34894 +
             (C36171 + C36170) * C153637 * C34895 +
             (C37422 + C37423) * C153637 * C153871) *
                C153601 -
            (C36516 * C153871 + C36517 * C34895 +
             (C35195 + C35194) * C153637 * C34894 +
             (C35193 + C35192) * C153637 * C34893) *
                C1898) *
               C153573) *
              C153840 +
          ((((C152100 * C494 - C34898 * C479 - C152100 * C495 + C153829 * C515 +
              C152081 * C492 - C34900 * C478 - C152081 * C493 +
              C153472 * C514) *
                 C153637 * C34893 +
             (C36176 + C36177) * C153637 * C34894 +
             (C36178 + C36179) * C153637 * C34895 +
             (C36180 + C36181) * C153637 * C153871) *
                C153601 -
            (C35214 * C153871 + C35215 * C34895 +
             (C35201 + C35200) * C153637 * C34894 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153637 * C34893) *
                C1898) *
               C153848 +
           (((C35200 + C35201) * C153637 * C34893 +
             (C35202 + C35203) * C153637 * C34894 +
             (C35204 + C35205) * C153637 * C34895 +
             (C35206 + C35207) * C153637 * C153871) *
                C1898 -
            ((C152081 * C5564 - C34900 * C5561 - C152081 * C5565 +
              C153472 * C5570 + C152100 * C5566 - C34898 * C5562 -
              C152100 * C5567 + C153829 * C5571) *
                 C153637 * C153871 +
             (C36181 + C36180) * C153637 * C34895 +
             (C36179 + C36178) * C153637 * C34894 +
             (C36177 + C36176) * C153637 * C34893) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[311] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153637 * C153863 +
            (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
               C153921 -
           ((C12506 + C12507 + C12508 + C12509) * C153637 * C153684 +
            (C11281 * C490 - C11282 * C477 - C11281 * C491 + C153862 * C513 +
             C11279 * C492 - C11280 * C478 - C11279 * C493 + C11271 * C514 +
             C11277 * C494 - C11278 * C479 - C11277 * C495 + C11270 * C515 +
             C11275 * C496 - C11276 * C480 - C11275 * C497 + C11269 * C516) *
                C153637 * C153863) *
               C153922 +
           ((C11275 * C498 - C11276 * C481 - C11275 * C499 + C11269 * C517 +
             C11277 * C500 - C11278 * C482 - C11277 * C501 + C11270 * C518 +
             C11279 * C502 - C11280 * C483 - C11279 * C503 + C11271 * C519 +
             C11281 * C504 - C11282 * C484 - C11281 * C505 + C153862 * C520) *
                C153637 * C153863 +
            (C13084 + C13085 + C13086 + C13087) * C153637 * C153684) *
               C2414) *
              C153848 +
          (((C12509 + C12508 + C12507 + C12506) * C153637 * C153863 +
            (C13758 + C13759 + C13760 + C13761) * C153637 * C153684) *
               C153922 -
           ((C11578 + C11579 + C11580 + C11581) * C153637 * C153684 +
            (C11577 + C11576 + C11575 + C11574) * C153637 * C153863) *
               C153921 -
           ((C11281 * C3289 - C11282 * C3282 - C11281 * C3290 +
             C153862 * C3294 + C11279 * C3287 - C11280 * C3281 -
             C11279 * C3288 + C11271 * C3293 + C11277 * C3285 - C11278 * C3280 -
             C11277 * C3286 + C11270 * C3292 + C11275 * C3283 - C11276 * C3279 -
             C11275 * C3284 + C11269 * C3291) *
                C153637 * C153684 +
            (C13087 + C13086 + C13085 + C13084) * C153637 * C153863) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153637 * C34893 +
            (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
            C35213 * C153871) *
               C153921 -
           (C37416 * C153871 + C37417 * C34895 +
            (C36174 + C36175) * C153637 * C34894 +
            (C152081 * C494 - C34900 * C479 - C152081 * C495 + C153472 * C515 +
             C152100 * C496 - C34898 * C480 - C152100 * C497 + C153829 * C516) *
                C153637 * C34893) *
               C153922 +
           ((C152100 * C498 - C34898 * C481 - C152100 * C499 + C153829 * C517 +
             C152081 * C500 - C34900 * C482 - C152081 * C501 + C153472 * C518) *
                C153637 * C34893 +
            (C36754 + C36755) * C153637 * C34894 +
            (C36756 + C36757) * C153637 * C34895 +
            (C36758 + C36759) * C153637 * C153871) *
               C2414) *
              C153848 +
          (((C36175 + C36174) * C153637 * C34893 +
            (C36173 + C36172) * C153637 * C34894 +
            (C36171 + C36170) * C153637 * C34895 +
            (C37422 + C37423) * C153637 * C153871) *
               C153922 -
           (C36516 * C153871 + C36517 * C34895 +
            (C35195 + C35194) * C153637 * C34894 +
            (C35193 + C35192) * C153637 * C34893) *
               C153921 -
           ((C152081 * C28550 - C34900 * C28547 - C152081 * C28551 +
             C153472 * C28553 + C152100 * C28548 - C34898 * C28546 -
             C152100 * C28549 + C153829 * C28552) *
                C153637 * C153871 +
            (C36759 + C36758) * C153637 * C34895 +
            (C36757 + C36756) * C153637 * C34894 +
            (C36755 + C36754) * C153637 * C34893) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[312] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153637 * C153863 +
            (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
               C1898 -
           ((C12506 + C12507 + C12508 + C12509) * C153637 * C153684 +
            (C11281 * C490 - C11282 * C477 - C11281 * C491 + C153862 * C513 +
             C11279 * C492 - C11280 * C478 - C11279 * C493 + C11271 * C514 +
             C11277 * C494 - C11278 * C479 - C11277 * C495 + C11270 * C515 +
             C11275 * C496 - C11276 * C480 - C11275 * C497 + C11269 * C516) *
                C153637 * C153863) *
               C153601) *
              C298 +
          (((C12509 + C12508 + C12507 + C12506) * C153637 * C153863 +
            (C13758 + C13759 + C13760 + C13761) * C153637 * C153684) *
               C153601 -
           ((C11578 + C11579 + C11580 + C11581) * C153637 * C153684 +
            (C11577 + C11576 + C11575 + C11574) * C153637 * C153863) *
               C1898) *
              C299 +
          (((C11581 + C11580 + C11579 + C11578) * C153637 * C153863 +
            (C12862 + C12863 + C12864 + C12865) * C153637 * C153684) *
               C1898 -
           ((C11281 * C4073 - C11282 * C4066 - C11281 * C4074 +
             C153862 * C4078 + C11279 * C4071 - C11280 * C4065 -
             C11279 * C4072 + C11271 * C4077 + C11277 * C4069 - C11278 * C4064 -
             C11277 * C4070 + C11270 * C4076 + C11275 * C4067 - C11276 * C4063 -
             C11275 * C4068 + C11269 * C4075) *
                C153637 * C153684 +
            (C13761 + C13760 + C13759 + C13758) * C153637 * C153863) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153637 * C153863 +
            (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
               C1898 -
           ((C12506 + C12507 + C12508 + C12509) * C153637 * C153684 +
            (C11281 * C490 - C11282 * C477 - C11281 * C491 + C153862 * C513 +
             C11279 * C492 - C11280 * C478 - C11279 * C493 + C11271 * C514 +
             C11277 * C494 - C11278 * C479 - C11277 * C495 + C11270 * C515 +
             C11275 * C496 - C11276 * C480 - C11275 * C497 + C11269 * C516) *
                C153637 * C153863) *
               C153601) *
              C153521 * C1093 +
          (((C11275 * C494 - C11276 * C479 - C11275 * C495 + C11269 * C515 +
             C11277 * C492 - C11278 * C478 - C11277 * C493 + C11270 * C514 +
             C11279 * C490 - C11280 * C477 - C11279 * C491 + C11271 * C513 +
             C11281 * C488 - C11282 * C476 - C11281 * C489 + C153862 * C512) *
                C153637 * C153863 +
            (C12510 + C12511 + C12512 + C12513) * C153637 * C153684) *
               C153601 -
           ((C11585 + C11584 + C11583 + C11582) * C153637 * C153684 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153637 * C153863) *
               C1898) *
              C153521 * C1094 +
          (((C11275 * C156 - C11276 * C146 - C11275 * C157 + C11269 * C170 +
             C11277 * C158 - C11278 * C147 - C11277 * C159 + C11270 * C171 +
             C11279 * C160 - C11280 * C148 - C11279 * C161 + C11271 * C172 +
             C11281 * C162 - C11282 * C149 - C11281 * C163 + C153862 * C173) *
                C153637 * C153863 +
            (C12002 + C12003 + C12004 + C12005) * C153637 * C153684) *
               C1898 -
           ((C11281 * C961 - C11282 * C950 - C11281 * C962 + C153862 * C968 +
             C11279 * C959 - C11280 * C949 - C11279 * C960 + C11271 * C967 +
             C11277 * C957 - C11278 * C948 - C11277 * C958 + C11270 * C966 +
             C11275 * C955 - C11276 * C947 - C11275 * C956 + C11269 * C965) *
                C153637 * C153684 +
            (C11281 * C508 - C11282 * C486 - C11281 * C509 + C153862 * C522 +
             C11279 * C488 - C11280 * C476 - C11279 * C489 + C11271 * C512 +
             C11277 * C490 - C11278 * C477 - C11277 * C491 + C11270 * C513 +
             C11275 * C492 - C11276 * C478 - C11275 * C493 + C11269 * C514) *
                C153637 * C153863) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
            C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
            C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
            C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
               C153637 * C153863 +
           (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
              C2104 -
          ((C12506 + C12507 + C12508 + C12509) * C153637 * C153684 +
           (C11281 * C490 - C11282 * C477 - C11281 * C491 + C153862 * C513 +
            C11279 * C492 - C11280 * C478 - C11279 * C493 + C11271 * C514 +
            C11277 * C494 - C11278 * C479 - C11277 * C495 + C11270 * C515 +
            C11275 * C496 - C11276 * C480 - C11275 * C497 + C11269 * C516) *
               C153637 * C153863) *
              C2105 +
          ((C11275 * C498 - C11276 * C481 - C11275 * C499 + C11269 * C517 +
            C11277 * C500 - C11278 * C482 - C11277 * C501 + C11270 * C518 +
            C11279 * C502 - C11280 * C483 - C11279 * C503 + C11271 * C519 +
            C11281 * C504 - C11282 * C484 - C11281 * C505 + C153862 * C520) *
               C153637 * C153863 +
           (C13084 + C13085 + C13086 + C13087) * C153637 * C153684) *
              C2106 -
          ((C11281 * C8429 - C11282 * C8428 - C11281 * C8430 + C153862 * C8431 +
            C11279 * C6191 - C11280 * C6182 - C11279 * C6192 + C11271 * C6200 +
            C11277 * C6193 - C11278 * C6183 - C11277 * C6194 + C11270 * C6201 +
            C11275 * C6195 - C11276 * C6184 - C11275 * C6196 + C11269 * C6202) *
               C153637 * C153684 +
           (C11281 * C2115 - C11282 * C2109 - C11281 * C2116 + C153862 * C2124 +
            C11279 * C2117 - C11280 * C2110 - C11279 * C2118 + C11271 * C2125 +
            C11277 * C2119 - C11278 * C2111 - C11277 * C2120 + C11270 * C2126 +
            C11275 * C2121 - C11276 * C2112 - C11275 * C2122 + C11269 * C2127) *
               C153637 * C153863) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153637 * C34893 +
            (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
            C35213 * C153871) *
               C1898 -
           (C37416 * C153871 + C37417 * C34895 +
            (C36174 + C36175) * C153637 * C34894 +
            (C152081 * C494 - C34900 * C479 - C152081 * C495 + C153472 * C515 +
             C152100 * C496 - C34898 * C480 - C152100 * C497 + C153829 * C516) *
                C153637 * C34893) *
               C153601) *
              C153521 * C1093 +
          (((C152100 * C494 - C34898 * C479 - C152100 * C495 + C153829 * C515 +
             C152081 * C492 - C34900 * C478 - C152081 * C493 + C153472 * C514) *
                C153637 * C34893 +
            (C36176 + C36177) * C153637 * C34894 +
            (C36178 + C36179) * C153637 * C34895 +
            (C36180 + C36181) * C153637 * C153871) *
               C153601 -
           (C35214 * C153871 + C35215 * C34895 +
            (C35201 + C35200) * C153637 * C34894 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C153637 * C34893) *
               C1898) *
              C153521 * C1094 +
          (((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
             C152081 * C158 - C34900 * C147 - C152081 * C159 + C153472 * C171) *
                C153637 * C34893 +
            (C35640 + C35641) * C153637 * C34894 +
            (C35642 + C35643) * C153637 * C34895 +
            (C35644 + C35645) * C153637 * C153871) *
               C1898 -
           ((C152081 * C4073 - C34900 * C4066 - C152081 * C4074 +
             C153472 * C4078 + C152100 * C4071 - C34898 * C4065 -
             C152100 * C4072 + C153829 * C4077) *
                C153637 * C153871 +
            (C152081 * C1763 - C34900 * C1757 - C152081 * C1764 +
             C153472 * C1772 + C152100 * C1765 - C34898 * C1758 -
             C152100 * C1766 + C153829 * C1773) *
                C153637 * C34895 +
            (C152081 * C957 - C34900 * C948 - C152081 * C958 + C153472 * C966 +
             C152100 * C955 - C34898 * C947 - C152100 * C956 + C153829 * C965) *
                C153637 * C34894 +
            (C152081 * C490 - C34900 * C477 - C152081 * C491 + C153472 * C513 +
             C152100 * C492 - C34898 * C478 - C152100 * C493 + C153829 * C514) *
                C153637 * C34893) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153637 * C34893 +
            (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
            C35213 * C153871) *
               C1898 -
           (C37416 * C153871 + C37417 * C34895 +
            (C36174 + C36175) * C153637 * C34894 +
            (C152081 * C494 - C34900 * C479 - C152081 * C495 + C153472 * C515 +
             C152100 * C496 - C34898 * C480 - C152100 * C497 + C153829 * C516) *
                C153637 * C34893) *
               C153601) *
              C298 +
          (((C36175 + C36174) * C153637 * C34893 +
            (C36173 + C36172) * C153637 * C34894 +
            (C36171 + C36170) * C153637 * C34895 +
            (C37422 + C37423) * C153637 * C153871) *
               C153601 -
           (C36516 * C153871 + C36517 * C34895 +
            (C35195 + C35194) * C153637 * C34894 +
            (C35193 + C35192) * C153637 * C34893) *
               C1898) *
              C299 +
          ((C35212 * C34893 + C35213 * C34894 +
            (C35199 + C35198) * C153637 * C34895 +
            (C36522 + C36523) * C153637 * C153871) *
               C1898 -
           ((C152081 * C28996 - C34900 * C28993 - C152081 * C28997 +
             C153472 * C28999 + C152100 * C28994 - C34898 * C28992 -
             C152100 * C28995 + C153829 * C28998) *
                C153637 * C153871 +
            (C37423 + C37422) * C153637 * C34895 + C37416 * C34894 +
            C37417 * C34893) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
            C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
               C153637 * C34893 +
           (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
           C35213 * C153871) *
              C2104 -
          (C37416 * C153871 + C37417 * C34895 +
           (C36174 + C36175) * C153637 * C34894 +
           (C152081 * C494 - C34900 * C479 - C152081 * C495 + C153472 * C515 +
            C152100 * C496 - C34898 * C480 - C152100 * C497 + C153829 * C516) *
               C153637 * C34893) *
              C2105 +
          ((C152100 * C498 - C34898 * C481 - C152100 * C499 + C153829 * C517 +
            C152081 * C500 - C34900 * C482 - C152081 * C501 + C153472 * C518) *
               C153637 * C34893 +
           (C36754 + C36755) * C153637 * C34894 +
           (C36756 + C36757) * C153637 * C34895 +
           (C36758 + C36759) * C153637 * C153871) *
              C2106 -
          ((C152081 * C32074 - C34900 * C32073 - C152081 * C32075 +
            C153472 * C32076 + C152100 * C30186 - C34898 * C30183 -
            C152100 * C30187 + C153829 * C30189) *
               C153637 * C153871 +
           (C152081 * C6187 - C34900 * C6180 - C152081 * C6188 +
            C153472 * C6198 + C152100 * C6189 - C34898 * C6181 -
            C152100 * C6190 + C153829 * C6199) *
               C153637 * C34895 +
           (C152081 * C6193 - C34900 * C6183 - C152081 * C6194 +
            C153472 * C6201 + C152100 * C6195 - C34898 * C6184 -
            C152100 * C6196 + C153829 * C6202) *
               C153637 * C34894 +
           (C152081 * C2119 - C34900 * C2111 - C152081 * C2120 +
            C153472 * C2126 + C152100 * C2121 - C34898 * C2112 -
            C152100 * C2122 + C153829 * C2127) *
               C153637 * C34893) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[313] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153637 * C153863 +
            (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
               C153921 -
           ((C12506 + C12507 + C12508 + C12509) * C153637 * C153684 +
            (C11281 * C490 - C11282 * C477 - C11281 * C491 + C153862 * C513 +
             C11279 * C492 - C11280 * C478 - C11279 * C493 + C11271 * C514 +
             C11277 * C494 - C11278 * C479 - C11277 * C495 + C11270 * C515 +
             C11275 * C496 - C11276 * C480 - C11275 * C497 + C11269 * C516) *
                C153637 * C153863) *
               C153922 +
           ((C11275 * C498 - C11276 * C481 - C11275 * C499 + C11269 * C517 +
             C11277 * C500 - C11278 * C482 - C11277 * C501 + C11270 * C518 +
             C11279 * C502 - C11280 * C483 - C11279 * C503 + C11271 * C519 +
             C11281 * C504 - C11282 * C484 - C11281 * C505 + C153862 * C520) *
                C153637 * C153863 +
            (C13084 + C13085 + C13086 + C13087) * C153637 * C153684) *
               C2414) *
              C153521 * C153840 +
          (((C11275 * C494 - C11276 * C479 - C11275 * C495 + C11269 * C515 +
             C11277 * C492 - C11278 * C478 - C11277 * C493 + C11270 * C514 +
             C11279 * C490 - C11280 * C477 - C11279 * C491 + C11271 * C513 +
             C11281 * C488 - C11282 * C476 - C11281 * C489 + C153862 * C512) *
                C153637 * C153863 +
            (C12510 + C12511 + C12512 + C12513) * C153637 * C153684) *
               C153922 -
           ((C11585 + C11584 + C11583 + C11582) * C153637 * C153684 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153637 * C153863) *
               C153921 -
           ((C11281 * C1330 - C11282 * C1325 - C11281 * C1331 +
             C153862 * C1340 + C11279 * C1332 - C11280 * C1326 -
             C11279 * C1333 + C11271 * C1341 + C11277 * C1334 - C11278 * C1327 -
             C11277 * C1335 + C11270 * C1342 + C11275 * C1336 - C11276 * C1328 -
             C11275 * C1337 + C11269 * C1343) *
                C153637 * C153684 +
            (C11281 * C506 - C11282 * C485 - C11281 * C507 + C153862 * C521 +
             C11279 * C504 - C11280 * C484 - C11279 * C505 + C11271 * C520 +
             C11277 * C502 - C11278 * C483 - C11277 * C503 + C11270 * C519 +
             C11275 * C500 - C11276 * C482 - C11275 * C501 + C11269 * C518) *
                C153637 * C153863) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153637 * C34893 +
            (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
            C35213 * C153871) *
               C153921 -
           (C37416 * C153871 + C37417 * C34895 +
            (C36174 + C36175) * C153637 * C34894 +
            (C152081 * C494 - C34900 * C479 - C152081 * C495 + C153472 * C515 +
             C152100 * C496 - C34898 * C480 - C152100 * C497 + C153829 * C516) *
                C153637 * C34893) *
               C153922 +
           ((C152100 * C498 - C34898 * C481 - C152100 * C499 + C153829 * C517 +
             C152081 * C500 - C34900 * C482 - C152081 * C501 + C153472 * C518) *
                C153637 * C34893 +
            (C36754 + C36755) * C153637 * C34894 +
            (C36756 + C36757) * C153637 * C34895 +
            (C36758 + C36759) * C153637 * C153871) *
               C2414) *
              C153521 * C153840 +
          (((C152100 * C494 - C34898 * C479 - C152100 * C495 + C153829 * C515 +
             C152081 * C492 - C34900 * C478 - C152081 * C493 + C153472 * C514) *
                C153637 * C34893 +
            (C36176 + C36177) * C153637 * C34894 +
            (C36178 + C36179) * C153637 * C34895 +
            (C36180 + C36181) * C153637 * C153871) *
               C153922 -
           (C35214 * C153871 + C35215 * C34895 +
            (C35201 + C35200) * C153637 * C34894 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C153637 * C34893) *
               C153921 -
           ((C152081 * C4784 - C34900 * C4781 - C152081 * C4785 +
             C153472 * C4790 + C152100 * C4786 - C34898 * C4782 -
             C152100 * C4787 + C153829 * C4791) *
                C153637 * C153871 +
            (C152081 * C3287 - C34900 * C3281 - C152081 * C3288 +
             C153472 * C3293 + C152100 * C3285 - C34898 * C3280 -
             C152100 * C3286 + C153829 * C3292) *
                C153637 * C34895 +
            (C152081 * C1334 - C34900 * C1327 - C152081 * C1335 +
             C153472 * C1342 + C152100 * C1336 - C34898 * C1328 -
             C152100 * C1337 + C153829 * C1343) *
                C153637 * C34894 +
            (C152081 * C502 - C34900 * C483 - C152081 * C503 + C153472 * C519 +
             C152100 * C500 - C34898 * C482 - C152100 * C501 + C153829 * C518) *
                C153637 * C34893) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[314] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153637 * C153863 +
            (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
               C1898 -
           ((C12506 + C12507 + C12508 + C12509) * C153637 * C153684 +
            (C11281 * C490 - C11282 * C477 - C11281 * C491 + C153862 * C513 +
             C11279 * C492 - C11280 * C478 - C11279 * C493 + C11271 * C514 +
             C11277 * C494 - C11278 * C479 - C11277 * C495 + C11270 * C515 +
             C11275 * C496 - C11276 * C480 - C11275 * C497 + C11269 * C516) *
                C153637 * C153863) *
               C153601) *
              C153521 * C1093 +
          (((C11275 * C494 - C11276 * C479 - C11275 * C495 + C11269 * C515 +
             C11277 * C492 - C11278 * C478 - C11277 * C493 + C11270 * C514 +
             C11279 * C490 - C11280 * C477 - C11279 * C491 + C11271 * C513 +
             C11281 * C488 - C11282 * C476 - C11281 * C489 + C153862 * C512) *
                C153637 * C153863 +
            (C12510 + C12511 + C12512 + C12513) * C153637 * C153684) *
               C153601 -
           ((C11585 + C11584 + C11583 + C11582) * C153637 * C153684 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153637 * C153863) *
               C1898) *
              C153521 * C1094 +
          (((C11275 * C156 - C11276 * C146 - C11275 * C157 + C11269 * C170 +
             C11277 * C158 - C11278 * C147 - C11277 * C159 + C11270 * C171 +
             C11279 * C160 - C11280 * C148 - C11279 * C161 + C11271 * C172 +
             C11281 * C162 - C11282 * C149 - C11281 * C163 + C153862 * C173) *
                C153637 * C153863 +
            (C12002 + C12003 + C12004 + C12005) * C153637 * C153684) *
               C1898 -
           ((C11281 * C961 - C11282 * C950 - C11281 * C962 + C153862 * C968 +
             C11279 * C959 - C11280 * C949 - C11279 * C960 + C11271 * C967 +
             C11277 * C957 - C11278 * C948 - C11277 * C958 + C11270 * C966 +
             C11275 * C955 - C11276 * C947 - C11275 * C956 + C11269 * C965) *
                C153637 * C153684 +
            (C11281 * C508 - C11282 * C486 - C11281 * C509 + C153862 * C522 +
             C11279 * C488 - C11280 * C476 - C11279 * C489 + C11271 * C512 +
             C11277 * C490 - C11278 * C477 - C11277 * C491 + C11270 * C513 +
             C11275 * C492 - C11276 * C478 - C11275 * C493 + C11269 * C514) *
                C153637 * C153863) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153637 * C153863 +
            (C11574 + C11575 + C11576 + C11577) * C153637 * C153684) *
               C1898 -
           ((C12506 + C12507 + C12508 + C12509) * C153637 * C153684 +
            (C11281 * C490 - C11282 * C477 - C11281 * C491 + C153862 * C513 +
             C11279 * C492 - C11280 * C478 - C11279 * C493 + C11271 * C514 +
             C11277 * C494 - C11278 * C479 - C11277 * C495 + C11270 * C515 +
             C11275 * C496 - C11276 * C480 - C11275 * C497 + C11269 * C516) *
                C153637 * C153863) *
               C153601) *
              C298 +
          (((C12509 + C12508 + C12507 + C12506) * C153637 * C153863 +
            (C13758 + C13759 + C13760 + C13761) * C153637 * C153684) *
               C153601 -
           ((C11578 + C11579 + C11580 + C11581) * C153637 * C153684 +
            (C11577 + C11576 + C11575 + C11574) * C153637 * C153863) *
               C1898) *
              C299 +
          (((C11581 + C11580 + C11579 + C11578) * C153637 * C153863 +
            (C12862 + C12863 + C12864 + C12865) * C153637 * C153684) *
               C1898 -
           ((C11281 * C4073 - C11282 * C4066 - C11281 * C4074 +
             C153862 * C4078 + C11279 * C4071 - C11280 * C4065 -
             C11279 * C4072 + C11271 * C4077 + C11277 * C4069 - C11278 * C4064 -
             C11277 * C4070 + C11270 * C4076 + C11275 * C4067 - C11276 * C4063 -
             C11275 * C4068 + C11269 * C4075) *
                C153637 * C153684 +
            (C13761 + C13760 + C13759 + C13758) * C153637 * C153863) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153637 * C34893 +
            (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
            C35213 * C153871) *
               C1898 -
           (C37416 * C153871 + C37417 * C34895 +
            (C36174 + C36175) * C153637 * C34894 +
            (C152081 * C494 - C34900 * C479 - C152081 * C495 + C153472 * C515 +
             C152100 * C496 - C34898 * C480 - C152100 * C497 + C153829 * C516) *
                C153637 * C34893) *
               C153601) *
              C153521 * C1093 +
          (((C152100 * C494 - C34898 * C479 - C152100 * C495 + C153829 * C515 +
             C152081 * C492 - C34900 * C478 - C152081 * C493 + C153472 * C514) *
                C153637 * C34893 +
            (C36176 + C36177) * C153637 * C34894 +
            (C36178 + C36179) * C153637 * C34895 +
            (C36180 + C36181) * C153637 * C153871) *
               C153601 -
           (C35214 * C153871 + C35215 * C34895 +
            (C35201 + C35200) * C153637 * C34894 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C153637 * C34893) *
               C1898) *
              C153521 * C1094 +
          (((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
             C152081 * C158 - C34900 * C147 - C152081 * C159 + C153472 * C171) *
                C153637 * C34893 +
            (C35640 + C35641) * C153637 * C34894 +
            (C35642 + C35643) * C153637 * C34895 +
            (C35644 + C35645) * C153637 * C153871) *
               C1898 -
           ((C152081 * C4073 - C34900 * C4066 - C152081 * C4074 +
             C153472 * C4078 + C152100 * C4071 - C34898 * C4065 -
             C152100 * C4072 + C153829 * C4077) *
                C153637 * C153871 +
            (C152081 * C1763 - C34900 * C1757 - C152081 * C1764 +
             C153472 * C1772 + C152100 * C1765 - C34898 * C1758 -
             C152100 * C1766 + C153829 * C1773) *
                C153637 * C34895 +
            (C152081 * C957 - C34900 * C948 - C152081 * C958 + C153472 * C966 +
             C152100 * C955 - C34898 * C947 - C152100 * C956 + C153829 * C965) *
                C153637 * C34894 +
            (C152081 * C490 - C34900 * C477 - C152081 * C491 + C153472 * C513 +
             C152100 * C492 - C34898 * C478 - C152100 * C493 + C153829 * C514) *
                C153637 * C34893) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153637 * C34893 +
            (C35192 + C35193) * C153637 * C34894 + C35212 * C34895 +
            C35213 * C153871) *
               C1898 -
           (C37416 * C153871 + C37417 * C34895 +
            (C36174 + C36175) * C153637 * C34894 +
            (C152081 * C494 - C34900 * C479 - C152081 * C495 + C153472 * C515 +
             C152100 * C496 - C34898 * C480 - C152100 * C497 + C153829 * C516) *
                C153637 * C34893) *
               C153601) *
              C298 +
          (((C36175 + C36174) * C153637 * C34893 +
            (C36173 + C36172) * C153637 * C34894 +
            (C36171 + C36170) * C153637 * C34895 +
            (C37422 + C37423) * C153637 * C153871) *
               C153601 -
           (C36516 * C153871 + C36517 * C34895 +
            (C35195 + C35194) * C153637 * C34894 +
            (C35193 + C35192) * C153637 * C34893) *
               C1898) *
              C299 +
          ((C35212 * C34893 + C35213 * C34894 +
            (C35199 + C35198) * C153637 * C34895 +
            (C36522 + C36523) * C153637 * C153871) *
               C1898 -
           ((C152081 * C28996 - C34900 * C28993 - C152081 * C28997 +
             C153472 * C28999 + C152100 * C28994 - C34898 * C28992 -
             C152100 * C28995 + C153829 * C28998) *
                C153637 * C153871 +
            (C37423 + C37422) * C153637 * C34895 + C37416 * C34894 +
            C37417 * C34893) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[315] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153864 +
             (C7639 + C7640 + C7641) * C153724) *
                C153863 +
            ((C3038 + C3039 + C3040) * C153864 +
             (C4157 + C4156 + C4155) * C153724) *
                C153684) *
               C153537 * C153848 -
           ((C5587 * C153724 + (C3043 + C3042 + C3041) * C153864) * C153684 +
            ((C4155 + C4156 + C4157) * C153724 +
             (C3040 + C3039 + C3038) * C153864) *
                C153863) *
               C153537 * C153573) *
              C153917 +
          ((((C3047 + C3048 + C3049) * C153864 +
             (C4158 + C4159 + C4160) * C153724) *
                C153863 +
            ((C3050 + C3051 + C3052) * C153864 +
             (C4161 + C4162 + C4163) * C153724) *
                C153684) *
               C153537 * C153573 -
           (((C4160 + C4159 + C4158) * C153724 +
             (C3049 + C3048 + C3047) * C153864) *
                C153684 +
            ((C7650 + C7649 + C7648) * C153724 +
             (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
              C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
              C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                 C153864) *
                C153863) *
               C153537 * C153848) *
              C153918 +
          ((((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
              C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
              C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                 C153864 +
             (C8133 + C8134 + C8135) * C153724) *
                C153863 +
            ((C3550 + C3551 + C3552) * C153864 +
             (C19670 + C19671 + C19672) * C153724) *
                C153684) *
               C153537 * C153848 -
           (((C2693 * C1761 - C2694 * C1756 - C2693 * C1762 + C153885 * C1771 +
              C2691 * C1763 - C2692 * C1757 - C2691 * C1764 + C2684 * C1772 +
              C2689 * C1765 - C2690 * C1758 - C2689 * C1766 + C2683 * C1773) *
                 C153724 +
             (C3555 + C3554 + C3553) * C153864) *
                C153684 +
            ((C19672 + C19671 + C19670) * C153724 +
             (C3552 + C3551 + C3550) * C153864) *
                C153863) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153864 +
             C31290 * C153724) *
                C34893 +
            (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
               C153537 * C153848 -
           ((C44330 + C44331) * C153871 + (C44329 + C44328) * C34895 +
            (C44327 + C44326) * C34894 + (C44325 + C44324) * C34893) *
               C153537 * C153573) *
              C153917 +
          (((C44332 + C44333) * C34893 + (C44334 + C44335) * C34894 +
            (C44336 + C44337) * C34895 + (C44338 + C44339) * C153871) *
               C153537 * C153573 -
           (C44342 * C153871 + C44343 * C34895 + (C44333 + C44332) * C34894 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153864) *
                C34893) *
               C153537 * C153848) *
              C153918 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C153864 +
             C31782 * C153724) *
                C34893 +
            (C44732 + C44733) * C34894 + (C44734 + C44735) * C34895 +
            (C44736 + C44744) * C153871) *
               C153537 * C153848 -
           (((C28212 * C5564 - C28213 * C5561 - C28212 * C5565 +
              C153462 * C5570) *
                 C153724 +
             C28704 * C153864) *
                C153871 +
            (C44744 + C44736) * C34895 + (C44735 + C44734) * C34894 +
            (C44733 + C44732) * C34893) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q));
    d2ee[316] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
               C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
               C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                  C153864 +
              (C7639 + C7640 + C7641) * C153724) *
                 C153863 +
             ((C3038 + C3039 + C3040) * C153864 + C20353 * C153724) * C153684) *
                C153849 -
            ((C9064 * C153724 + C20354 * C153864) * C153684 +
             ((C7644 + C7643 + C7642) * C153724 +
              (C7641 + C7640 + C7639) * C153864) *
                 C153863) *
                C153601) *
               C153848 +
           (((C20353 * C153864 + (C4830 + C4831 + C4832) * C153724) * C153863 +
             ((C4154 + C4153 + C4152) * C153864 +
              (C4833 + C4834 + C4835) * C153724) *
                 C153684) *
                C153601 -
            ((C5587 * C153724 + (C3043 + C3042 + C3041) * C153864) * C153684 +
             (C20354 * C153724 + (C3040 + C3039 + C3038) * C153864) * C153863) *
                C153849) *
               C153573) *
              C301 +
          (((((C7648 + C7649 + C7650) * C153864 +
              (C7651 + C7652 + C7653) * C153724) *
                 C153863 +
             (C20355 * C153864 + (C8451 + C8452 + C8453) * C153724) * C153684) *
                C153601 -
            ((C20356 * C153724 + (C3049 + C3048 + C3047) * C153864) * C153684 +
             ((C7650 + C7649 + C7648) * C153724 +
              (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
               C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
               C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                  C153864) *
                 C153863) *
                C153849) *
               C153848 +
           ((((C3047 + C3048 + C3049) * C153864 + C20355 * C153724) * C153863 +
             ((C3050 + C3051 + C3052) * C153864 +
              (C4161 + C4162 + C4163) * C153724) *
                 C153684) *
                C153849 -
            (((C2693 * C3289 - C2694 * C3282 - C2693 * C3290 + C153885 * C3294 +
               C2691 * C3287 - C2692 * C3281 - C2691 * C3288 + C2684 * C3293 +
               C2689 * C3285 - C2690 * C3280 - C2689 * C3286 + C2683 * C3292) *
                  C153724 +
              (C4163 + C4162 + C4161) * C153864) *
                 C153684 +
             ((C8453 + C8452 + C8451) * C153724 + C20356 * C153864) * C153863) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                  C153864 +
              C31290 * C153724) *
                 C34893 +
             (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
                C153849 -
            ((C45197 + C45198) * C153871 + (C45199 + C45200) * C34895 +
             (C45201 + C45202) * C34894 +
             (C31291 * C153724 + C31290 * C153864) * C34893) *
                C153601) *
               C153848 +
           (((C45202 + C45201) * C34893 + (C45200 + C45199) * C34894 +
             (C45198 + C45197) * C34895 +
             (C29049 * C153864 + C29434 * C153724) * C153871) *
                C153601 -
            ((C44330 + C44331) * C153871 + (C44329 + C44328) * C34895 +
             (C44327 + C44326) * C34894 + (C44325 + C44324) * C34893) *
                C153849) *
               C153573) *
              C301 +
          ((((C31295 * C153864 + C31296 * C153724) * C34893 +
             (C45203 + C45204) * C34894 + (C45205 + C45206) * C34895 +
             (C45207 + C45208) * C153871) *
                C153601 -
            (C44342 * C153871 + C44343 * C34895 + (C44333 + C44332) * C34894 +
             (C31295 * C153724 +
              (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                  C153864) *
                 C34893) *
                C153849) *
               C153848 +
           (((C44332 + C44333) * C34893 + (C44334 + C44335) * C34894 +
             (C44336 + C44337) * C34895 + (C44338 + C44339) * C153871) *
                C153849 -
            (((C28212 * C28550 - C28213 * C28547 - C28212 * C28551 +
               C153462 * C28553) *
                  C153724 +
              C29056 * C153864) *
                 C153871 +
             (C45208 + C45207) * C34895 + (C45206 + C45205) * C34894 +
             (C45204 + C45203) * C34893) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[317] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153864 +
             (C7639 + C7640 + C7641) * C153724) *
                C153863 +
            ((C3038 + C3039 + C3040) * C153864 +
             (C4157 + C4156 + C4155) * C153724) *
                C153684) *
               C153537 * C298 -
           ((C5587 * C153724 + (C3043 + C3042 + C3041) * C153864) * C153684 +
            ((C4155 + C4156 + C4157) * C153724 +
             (C3040 + C3039 + C3038) * C153864) *
                C153863) *
               C153537 * C299 +
           ((C3058 * C153864 + (C4154 + C4153 + C4152) * C153724) * C153863 +
            ((C3046 + C3045 + C3044) * C153864 +
             (C5595 + C5596 + C5597) * C153724) *
                C153684) *
               C153537 * C300) *
              C301 +
          ((((C3047 + C3048 + C3049) * C153864 +
             (C4158 + C4159 + C4160) * C153724) *
                C153863 +
            ((C3050 + C3051 + C3052) * C153864 +
             (C4161 + C4162 + C4163) * C153724) *
                C153684) *
               C153537 * C299 -
           (((C4160 + C4159 + C4158) * C153724 +
             (C3049 + C3048 + C3047) * C153864) *
                C153684 +
            ((C7650 + C7649 + C7648) * C153724 +
             (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
              C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
              C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                 C153864) *
                C153863) *
               C153537 * C298 -
           (((C2693 * C4073 - C2694 * C4066 - C2693 * C4074 + C153885 * C4078 +
              C2691 * C4071 - C2692 * C4065 - C2691 * C4072 + C2684 * C4077 +
              C2689 * C4069 - C2690 * C4064 - C2689 * C4070 + C2683 * C4076) *
                 C153724 +
             (C3055 + C3054 + C3053) * C153864) *
                C153684 +
            ((C4163 + C4162 + C4161) * C153724 + C3059 * C153864) * C153863) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153864 +
            (C7639 + C7640 + C7641) * C153724) *
               C153863 +
           ((C3038 + C3039 + C3040) * C153864 +
            (C4157 + C4156 + C4155) * C153724) *
               C153684) *
              C153537 * C153521 * C130 -
          (((C4160 + C4159 + C4158) * C153724 +
            (C3049 + C3048 + C3047) * C153864) *
               C153684 +
           ((C7650 + C7649 + C7648) * C153724 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153864) *
               C153863) *
              C153537 * C153521 * C131 +
          (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
             C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
             C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                C153864 +
            (C8133 + C8134 + C8135) * C153724) *
               C153863 +
           ((C3550 + C3551 + C3552) * C153864 +
            (C2689 * C955 - C2690 * C947 - C2689 * C956 + C2683 * C965 +
             C2691 * C957 - C2692 * C948 - C2691 * C958 + C2684 * C966 +
             C2693 * C959 - C2694 * C949 - C2693 * C960 + C153885 * C967) *
                C153724) *
               C153684) *
              C153537 * C153521 * C132 -
          (((C2693 * C961 - C2694 * C950 - C2693 * C962 + C153885 * C968 +
             C2691 * C959 - C2692 * C949 - C2691 * C960 + C2684 * C967 +
             C2689 * C957 - C2690 * C948 - C2689 * C958 + C2683 * C966) *
                C153724 +
            (C2693 * C335 - C2694 * C313 - C2693 * C336 + C153885 * C349 +
             C2691 * C315 - C2692 * C303 - C2691 * C316 + C2684 * C339 +
             C2689 * C317 - C2690 * C304 - C2689 * C318 + C2683 * C340) *
                C153864) *
               C153684 +
           ((C2693 * C508 - C2694 * C486 - C2693 * C509 + C153885 * C522 +
             C2691 * C488 - C2692 * C476 - C2691 * C489 + C2684 * C512 +
             C2689 * C490 - C2690 * C477 - C2689 * C491 + C2683 * C513) *
                C153724 +
            (C2693 * C162 - C2694 * C149 - C2693 * C163 + C153885 * C173 +
             C2691 * C160 - C2692 * C148 - C2691 * C161 + C2684 * C172 +
             C2689 * C158 - C2690 * C147 - C2689 * C159 + C2683 * C171) *
                C153864) *
               C153863) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153864 +
             (C7639 + C7640 + C7641) * C153724) *
                C153863 +
            ((C3038 + C3039 + C3040) * C153864 +
             (C4157 + C4156 + C4155) * C153724) *
                C153684) *
               C473 -
           ((C9064 * C153724 + (C4155 + C4156 + C4157) * C153864) * C153684 +
            ((C7644 + C7643 + C7642) * C153724 +
             (C7641 + C7640 + C7639) * C153864) *
                C153863) *
               C474 +
           ((C7659 * C153864 + (C7647 + C7646 + C7645) * C153724) * C153863 +
            ((C4830 + C4831 + C4832) * C153864 +
             (C9068 + C9069 + C9070) * C153724) *
                C153684) *
               C475) *
              C153521 * C301 +
          ((((C7648 + C7649 + C7650) * C153864 +
             (C7651 + C7652 + C7653) * C153724) *
                C153863 +
            ((C4158 + C4159 + C4160) * C153864 +
             (C8451 + C8452 + C8453) * C153724) *
                C153684) *
               C474 -
           (((C4160 + C4159 + C4158) * C153724 +
             (C3049 + C3048 + C3047) * C153864) *
                C153684 +
            ((C7650 + C7649 + C7648) * C153724 +
             (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
              C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
              C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                 C153864) *
                C153863) *
               C473 -
           (((C2693 * C8429 - C2694 * C8428 - C2693 * C8430 + C153885 * C8431 +
              C2691 * C6191 - C2692 * C6182 - C2691 * C6192 + C2684 * C6200 +
              C2689 * C6193 - C2690 * C6183 - C2689 * C6194 + C2683 * C6201) *
                 C153724 +
             (C8453 + C8452 + C8451) * C153864) *
                C153684 +
            ((C7656 + C7655 + C7654) * C153724 + C7660 * C153864) * C153863) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153864 +
            C31290 * C153724) *
               C34893 +
           (C28405 * C153864 + C29052 * C153724) * C34894 +
           (C28406 * C153864 + C29051 * C153724) * C34895 +
           (C28407 * C153864 + C29050 * C153724) * C153871) *
              C153537 * C153521 * C130 -
          ((C29055 * C153724 + C28412 * C153864) * C153871 +
           (C29054 * C153724 + C28411 * C153864) * C34895 +
           (C29053 * C153724 + C28410 * C153864) * C34894 +
           (C31295 * C153724 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153864) *
               C34893) *
              C153537 * C153521 * C131 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C153864 +
            C31782 * C153724) *
               C34893 +
           (C28701 * C153864 + C31544 * C153724) * C34894 +
           (C28702 * C153864 + C31546 * C153724) * C34895 +
           (C28703 * C153864 + (C28212 * C4071 - C28213 * C4065 -
                                C28212 * C4072 + C153462 * C4077) *
                                   C153724) *
               C153871) *
              C153537 * C153521 * C132 -
          (((C28212 * C4073 - C28213 * C4066 - C28212 * C4074 +
             C153462 * C4078) *
                C153724 +
            (C28212 * C1190 - C28213 * C1184 - C28212 * C1191 +
             C153462 * C1199) *
                C153864) *
               C153871 +
           ((C28212 * C1763 - C28213 * C1757 - C28212 * C1764 +
             C153462 * C1772) *
                C153724 +
            (C28212 * C331 - C28213 * C311 - C28212 * C332 + C153462 * C347) *
                C153864) *
               C34895 +
           ((C28212 * C957 - C28213 * C948 - C28212 * C958 + C153462 * C966) *
                C153724 +
            (C28212 * C317 - C28213 * C304 - C28212 * C318 + C153462 * C340) *
                C153864) *
               C34894 +
           ((C28212 * C490 - C28213 * C477 - C28212 * C491 + C153462 * C513) *
                C153724 +
            (C28212 * C158 - C28213 * C147 - C28212 * C159 + C153462 * C171) *
                C153864) *
               C34893) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153864 +
             C31290 * C153724) *
                C34893 +
            (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
               C153537 * C298 -
           ((C44330 + C44331) * C153871 + (C44329 + C44328) * C34895 +
            (C44327 + C44326) * C34894 + (C44325 + C44324) * C34893) *
               C153537 * C299 +
           (C44340 * C34893 + C44341 * C34894 + (C44331 + C44330) * C34895 +
            (C28409 * C153864 + C29855 * C153724) * C153871) *
               C153537 * C300) *
              C301 +
          (((C44332 + C44333) * C34893 + (C44334 + C44335) * C34894 +
            (C44336 + C44337) * C34895 + (C44338 + C44339) * C153871) *
               C153537 * C299 -
           (C44342 * C153871 + C44343 * C34895 + (C44333 + C44332) * C34894 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153864) *
                C34893) *
               C153537 * C298 -
           (((C28212 * C28996 - C28213 * C28993 - C28212 * C28997 +
              C153462 * C28999) *
                 C153724 +
             C28414 * C153864) *
                C153871 +
            (C44339 + C44338) * C34895 + C44342 * C34894 + C44343 * C34893) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153864 +
             C31290 * C153724) *
                C34893 +
            (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
               C473 -
           ((C29433 * C153724 + C29050 * C153864) * C153871 +
            (C29432 * C153724 + C29051 * C153864) * C34895 +
            (C29431 * C153724 + C29052 * C153864) * C34894 +
            (C31291 * C153724 + C31290 * C153864) * C34893) *
               C474 +
           ((C31291 * C153864 + C31294 * C153724) * C34893 +
            (C29431 * C153864 + C31293 * C153724) * C34894 +
            (C29432 * C153864 + C31292 * C153724) * C34895 +
            (C29433 * C153864 + C32705 * C153724) * C153871) *
               C475) *
              C153521 * C301 +
          (((C31295 * C153864 + C31296 * C153724) * C34893 +
            (C29053 * C153864 + C30997 * C153724) * C34894 +
            (C29054 * C153864 + C30998 * C153724) * C34895 +
            (C29055 * C153864 + C30999 * C153724) * C153871) *
               C474 -
           (C44342 * C153871 + C44343 * C34895 + (C44333 + C44332) * C34894 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153864) *
                C34893) *
               C473 -
           (((C28212 * C32074 - C28213 * C32073 - C28212 * C32075 +
              C153462 * C32076) *
                 C153724 +
             C30999 * C153864) *
                C153871 +
            (C31299 * C153724 + C30998 * C153864) * C34895 +
            (C31298 * C153724 + C30997 * C153864) * C34894 +
            (C31297 * C153724 + C31296 * C153864) * C34893) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[318] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153864 +
             (C7639 + C7640 + C7641) * C153724) *
                C153863 +
            ((C3038 + C3039 + C3040) * C153864 +
             (C4157 + C4156 + C4155) * C153724) *
                C153684) *
               C153849 -
           ((C9064 * C153724 + (C4155 + C4156 + C4157) * C153864) * C153684 +
            ((C7644 + C7643 + C7642) * C153724 +
             (C7641 + C7640 + C7639) * C153864) *
                C153863) *
               C153601) *
              C153521 * C153917 +
          ((((C7648 + C7649 + C7650) * C153864 +
             (C7651 + C7652 + C7653) * C153724) *
                C153863 +
            ((C4158 + C4159 + C4160) * C153864 +
             (C8451 + C8452 + C8453) * C153724) *
                C153684) *
               C153601 -
           (((C4160 + C4159 + C4158) * C153724 +
             (C3049 + C3048 + C3047) * C153864) *
                C153684 +
            ((C7650 + C7649 + C7648) * C153724 +
             (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
              C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
              C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                 C153864) *
                C153863) *
               C153849) *
              C153521 * C153918 +
          ((((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
              C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
              C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                 C153864 +
             (C8133 + C8134 + C8135) * C153724) *
                C153863 +
            ((C3550 + C3551 + C3552) * C153864 +
             (C19670 + C19671 + C19672) * C153724) *
                C153684) *
               C153849 -
           (((C2693 * C1330 - C2694 * C1325 - C2693 * C1331 + C153885 * C1340 +
              C2691 * C1332 - C2692 * C1326 - C2691 * C1333 + C2684 * C1341 +
              C2689 * C1334 - C2690 * C1327 - C2689 * C1335 + C2683 * C1342) *
                 C153724 +
             (C19672 + C19671 + C19670) * C153864) *
                C153684 +
            ((C8138 + C8137 + C8136) * C153724 +
             (C8135 + C8134 + C8133) * C153864) *
                C153863) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153864 +
             C31290 * C153724) *
                C34893 +
            (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
               C153849 -
           ((C29433 * C153724 + C29050 * C153864) * C153871 +
            (C29432 * C153724 + C29051 * C153864) * C34895 +
            (C29431 * C153724 + C29052 * C153864) * C34894 +
            (C31291 * C153724 + C31290 * C153864) * C34893) *
               C153601) *
              C153521 * C153917 +
          (((C31295 * C153864 + C31296 * C153724) * C34893 +
            (C29053 * C153864 + C30997 * C153724) * C34894 +
            (C29054 * C153864 + C30998 * C153724) * C34895 +
            (C29055 * C153864 + C30999 * C153724) * C153871) *
               C153601 -
           (C44342 * C153871 + C44343 * C34895 + (C44333 + C44332) * C34894 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153864) *
                C34893) *
               C153849) *
              C153521 * C153918 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C153864 +
             C31782 * C153724) *
                C34893 +
            (C44732 + C44733) * C34894 + (C44734 + C44735) * C34895 +
            (C44736 + C44744) * C153871) *
               C153849 -
           (((C28212 * C4784 - C28213 * C4781 - C28212 * C4785 +
              C153462 * C4790) *
                 C153724 +
             C44743 * C153864) *
                C153871 +
            (C31547 * C153724 + C31546 * C153864) * C34895 +
            (C31545 * C153724 + C31544 * C153864) * C34894 +
            (C31783 * C153724 + C31782 * C153864) * C34893) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q));
    d2ee[319] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153864 +
            (C7639 + C7640 + C7641) * C153724) *
               C153863 +
           ((C3038 + C3039 + C3040) * C153864 +
            (C4157 + C4156 + C4155) * C153724) *
               C153684) *
              C153537 * C153521 * C130 -
          (((C4160 + C4159 + C4158) * C153724 +
            (C3049 + C3048 + C3047) * C153864) *
               C153684 +
           ((C7650 + C7649 + C7648) * C153724 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153864) *
               C153863) *
              C153537 * C153521 * C131 +
          (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
             C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
             C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                C153864 +
            (C8133 + C8134 + C8135) * C153724) *
               C153863 +
           ((C3550 + C3551 + C3552) * C153864 +
            (C2689 * C955 - C2690 * C947 - C2689 * C956 + C2683 * C965 +
             C2691 * C957 - C2692 * C948 - C2691 * C958 + C2684 * C966 +
             C2693 * C959 - C2694 * C949 - C2693 * C960 + C153885 * C967) *
                C153724) *
               C153684) *
              C153537 * C153521 * C132 -
          (((C2693 * C961 - C2694 * C950 - C2693 * C962 + C153885 * C968 +
             C2691 * C959 - C2692 * C949 - C2691 * C960 + C2684 * C967 +
             C2689 * C957 - C2690 * C948 - C2689 * C958 + C2683 * C966) *
                C153724 +
            (C2693 * C335 - C2694 * C313 - C2693 * C336 + C153885 * C349 +
             C2691 * C315 - C2692 * C303 - C2691 * C316 + C2684 * C339 +
             C2689 * C317 - C2690 * C304 - C2689 * C318 + C2683 * C340) *
                C153864) *
               C153684 +
           ((C2693 * C508 - C2694 * C486 - C2693 * C509 + C153885 * C522 +
             C2691 * C488 - C2692 * C476 - C2691 * C489 + C2684 * C512 +
             C2689 * C490 - C2690 * C477 - C2689 * C491 + C2683 * C513) *
                C153724 +
            (C2693 * C162 - C2694 * C149 - C2693 * C163 + C153885 * C173 +
             C2691 * C160 - C2692 * C148 - C2691 * C161 + C2684 * C172 +
             C2689 * C158 - C2690 * C147 - C2689 * C159 + C2683 * C171) *
                C153864) *
               C153863) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153864 +
             (C7639 + C7640 + C7641) * C153724) *
                C153863 +
            ((C3038 + C3039 + C3040) * C153864 +
             (C4157 + C4156 + C4155) * C153724) *
                C153684) *
               C153537 * C298 -
           ((C5587 * C153724 + (C3043 + C3042 + C3041) * C153864) * C153684 +
            ((C4155 + C4156 + C4157) * C153724 +
             (C3040 + C3039 + C3038) * C153864) *
                C153863) *
               C153537 * C299 +
           ((C3058 * C153864 + (C4154 + C4153 + C4152) * C153724) * C153863 +
            ((C3046 + C3045 + C3044) * C153864 +
             (C5595 + C5596 + C5597) * C153724) *
                C153684) *
               C153537 * C300) *
              C301 +
          ((((C3047 + C3048 + C3049) * C153864 +
             (C4158 + C4159 + C4160) * C153724) *
                C153863 +
            ((C3050 + C3051 + C3052) * C153864 +
             (C4161 + C4162 + C4163) * C153724) *
                C153684) *
               C153537 * C299 -
           (((C4160 + C4159 + C4158) * C153724 +
             (C3049 + C3048 + C3047) * C153864) *
                C153684 +
            ((C7650 + C7649 + C7648) * C153724 +
             (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
              C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
              C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                 C153864) *
                C153863) *
               C153537 * C298 -
           (((C2693 * C4073 - C2694 * C4066 - C2693 * C4074 + C153885 * C4078 +
              C2691 * C4071 - C2692 * C4065 - C2691 * C4072 + C2684 * C4077 +
              C2689 * C4069 - C2690 * C4064 - C2689 * C4070 + C2683 * C4076) *
                 C153724 +
             (C3055 + C3054 + C3053) * C153864) *
                C153684 +
            ((C4163 + C4162 + C4161) * C153724 + C3059 * C153864) * C153863) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153864 +
            C31290 * C153724) *
               C34893 +
           (C28405 * C153864 + C29052 * C153724) * C34894 +
           (C28406 * C153864 + C29051 * C153724) * C34895 +
           (C28407 * C153864 + C29050 * C153724) * C153871) *
              C153537 * C153521 * C130 -
          ((C29055 * C153724 + C28412 * C153864) * C153871 +
           (C29054 * C153724 + C28411 * C153864) * C34895 +
           (C29053 * C153724 + C28410 * C153864) * C34894 +
           (C31295 * C153724 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153864) *
               C34893) *
              C153537 * C153521 * C131 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C153864 +
            C31782 * C153724) *
               C34893 +
           (C28701 * C153864 + C31544 * C153724) * C34894 +
           (C28702 * C153864 + C31546 * C153724) * C34895 +
           (C28703 * C153864 + (C28212 * C4071 - C28213 * C4065 -
                                C28212 * C4072 + C153462 * C4077) *
                                   C153724) *
               C153871) *
              C153537 * C153521 * C132 -
          (((C28212 * C4073 - C28213 * C4066 - C28212 * C4074 +
             C153462 * C4078) *
                C153724 +
            (C28212 * C1190 - C28213 * C1184 - C28212 * C1191 +
             C153462 * C1199) *
                C153864) *
               C153871 +
           ((C28212 * C1763 - C28213 * C1757 - C28212 * C1764 +
             C153462 * C1772) *
                C153724 +
            (C28212 * C331 - C28213 * C311 - C28212 * C332 + C153462 * C347) *
                C153864) *
               C34895 +
           ((C28212 * C957 - C28213 * C948 - C28212 * C958 + C153462 * C966) *
                C153724 +
            (C28212 * C317 - C28213 * C304 - C28212 * C318 + C153462 * C340) *
                C153864) *
               C34894 +
           ((C28212 * C490 - C28213 * C477 - C28212 * C491 + C153462 * C513) *
                C153724 +
            (C28212 * C158 - C28213 * C147 - C28212 * C159 + C153462 * C171) *
                C153864) *
               C34893) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153864 +
             C31290 * C153724) *
                C34893 +
            (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
               C153537 * C298 -
           ((C44330 + C44331) * C153871 + (C44329 + C44328) * C34895 +
            (C44327 + C44326) * C34894 + (C44325 + C44324) * C34893) *
               C153537 * C299 +
           (C44340 * C34893 + C44341 * C34894 + (C44331 + C44330) * C34895 +
            (C28409 * C153864 + C29855 * C153724) * C153871) *
               C153537 * C300) *
              C301 +
          (((C44332 + C44333) * C34893 + (C44334 + C44335) * C34894 +
            (C44336 + C44337) * C34895 + (C44338 + C44339) * C153871) *
               C153537 * C299 -
           (C44342 * C153871 + C44343 * C34895 + (C44333 + C44332) * C34894 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153864) *
                C34893) *
               C153537 * C298 -
           (((C28212 * C28996 - C28213 * C28993 - C28212 * C28997 +
              C153462 * C28999) *
                 C153724 +
             C28414 * C153864) *
                C153871 +
            (C44339 + C44338) * C34895 + C44342 * C34894 + C44343 * C34893) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[320] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153864 +
             (C7639 + C7640 + C7641) * C153724) *
                C153863 +
            ((C3038 + C3039 + C3040) * C153864 + C20353 * C153724) * C153684) *
               C153537 * C153919 -
           ((C5587 * C153724 + (C3043 + C3042 + C3041) * C153864) * C153684 +
            (C20354 * C153724 + (C3040 + C3039 + C3038) * C153864) * C153863) *
               C153537 * C153920 +
           ((C3058 * C153864 + (C4154 + C4153 + C4152) * C153724) * C153863 +
            ((C3046 + C3045 + C3044) * C153864 +
             (C5595 + C5596 + C5597) * C153724) *
                C153684) *
               C153537 * C1469) *
              C153840 +
          ((((C3047 + C3048 + C3049) * C153864 + C20355 * C153724) * C153863 +
            ((C3050 + C3051 + C3052) * C153864 +
             (C4161 + C4162 + C4163) * C153724) *
                C153684) *
               C153537 * C153920 -
           ((C20356 * C153724 + (C3049 + C3048 + C3047) * C153864) * C153684 +
            ((C7650 + C7649 + C7648) * C153724 +
             (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
              C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
              C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                 C153864) *
                C153863) *
               C153537 * C153919 -
           (((C2693 * C4073 - C2694 * C4066 - C2693 * C4074 + C153885 * C4078 +
              C2691 * C4071 - C2692 * C4065 - C2691 * C4072 + C2684 * C4077 +
              C2689 * C4069 - C2690 * C4064 - C2689 * C4070 + C2683 * C4076) *
                 C153724 +
             (C3055 + C3054 + C3053) * C153864) *
                C153684 +
            ((C4163 + C4162 + C4161) * C153724 + C3059 * C153864) * C153863) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153864 +
             C31290 * C153724) *
                C34893 +
            (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
               C153537 * C153919 -
           (C45533 * C153871 + C45534 * C34895 + (C44327 + C44326) * C34894 +
            (C44325 + C44324) * C34893) *
               C153537 * C153920 +
           (C44340 * C34893 + C44341 * C34894 + (C44331 + C44330) * C34895 +
            (C45535 + C45536) * C153871) *
               C153537 * C1469) *
              C153840 +
          (((C44332 + C44333) * C34893 + (C44334 + C44335) * C34894 +
            (C44336 + C44337) * C34895 + (C44338 + C44339) * C153871) *
               C153537 * C153920 -
           (C44342 * C153871 + C44343 * C34895 + (C44333 + C44332) * C34894 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153864) *
                C34893) *
               C153537 * C153919 -
           (((C28212 * C28996 - C28213 * C28993 - C28212 * C28997 +
              C153462 * C28999) *
                 C153724 +
             C28414 * C153864) *
                C153871 +
            (C44339 + C44338) * C34895 + C44342 * C34894 + C44343 * C34893) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[321] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153864 +
             (C7639 + C7640 + C7641) * C153724) *
                C153863 +
            ((C3038 + C3039 + C3040) * C153864 + C20353 * C153724) * C153684) *
               C153849 -
           ((C9064 * C153724 + C20354 * C153864) * C153684 +
            ((C7644 + C7643 + C7642) * C153724 +
             (C7641 + C7640 + C7639) * C153864) *
                C153863) *
               C153601) *
              C153919 +
          (((C20353 * C153864 + C21132 * C153724) * C153863 +
            (C22100 * C153864 + (C4833 + C4834 + C4835) * C153724) * C153684) *
               C153601 -
           ((C5587 * C153724 + (C3043 + C3042 + C3041) * C153864) * C153684 +
            (C20354 * C153724 + (C3040 + C3039 + C3038) * C153864) * C153863) *
               C153849) *
              C153920 +
          (((C3058 * C153864 + C22100 * C153724) * C153863 +
            ((C3046 + C3045 + C3044) * C153864 +
             (C5595 + C5596 + C5597) * C153724) *
                C153684) *
               C153849 -
           (((C2693 * C4784 - C2694 * C4781 - C2693 * C4785 + C153885 * C4790 +
              C2691 * C4786 - C2692 * C4782 - C2691 * C4787 + C2684 * C4791 +
              C2689 * C4788 - C2690 * C4783 - C2689 * C4789 + C2683 * C4792) *
                 C153724 +
             (C5597 + C5596 + C5595) * C153864) *
                C153684 +
            ((C4835 + C4834 + C4833) * C153724 + C5587 * C153864) * C153863) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153864 +
             C31290 * C153724) *
                C34893 +
            (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
               C153849 -
           (C46383 * C153871 + C46384 * C34895 + (C45201 + C45202) * C34894 +
            (C31291 * C153724 + C31290 * C153864) * C34893) *
               C153601) *
              C153919 +
          (((C45202 + C45201) * C34893 + (C45200 + C45199) * C34894 +
            (C45198 + C45197) * C34895 + (C46385 + C46386) * C153871) *
               C153601 -
           (C45533 * C153871 + C45534 * C34895 + (C44327 + C44326) * C34894 +
            (C44325 + C44324) * C34893) *
               C153849) *
              C153920 +
          ((C44340 * C34893 + C44341 * C34894 + (C44331 + C44330) * C34895 +
            (C45535 + C45536) * C153871) *
               C153849 -
           (((C28212 * C29403 - C28213 * C29402 - C28212 * C29404 +
              C153462 * C29405) *
                 C153724 +
             C29855 * C153864) *
                C153871 +
            (C46386 + C46385) * C34895 + C46383 * C34894 + C46384 * C34893) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[322] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153864 +
            (C7639 + C7640 + C7641) * C153724) *
               C153863 +
           ((C3038 + C3039 + C3040) * C153864 + C20353 * C153724) * C153684) *
              C153537 * C1178 -
          ((C5587 * C153724 + (C3043 + C3042 + C3041) * C153864) * C153684 +
           (C20354 * C153724 + (C3040 + C3039 + C3038) * C153864) * C153863) *
              C153537 * C1179 +
          ((C3058 * C153864 + (C4154 + C4153 + C4152) * C153724) * C153863 +
           ((C3046 + C3045 + C3044) * C153864 +
            (C5595 + C5596 + C5597) * C153724) *
               C153684) *
              C153537 * C1180 -
          (((C2693 * C5564 - C2694 * C5561 - C2693 * C5565 + C153885 * C5570 +
             C2691 * C5566 - C2692 * C5562 - C2691 * C5567 + C2684 * C5571 +
             C2689 * C5568 - C2690 * C5563 - C2689 * C5569 + C2683 * C5572) *
                C153724 +
            (C4563 + C4562 + C4561) * C153864) *
               C153684 +
           ((C5597 + C5596 + C5595) * C153724 + C4553 * C153864) * C153863) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153864 +
             (C7639 + C7640 + C7641) * C153724) *
                C153863 +
            ((C3038 + C3039 + C3040) * C153864 + C20353 * C153724) * C153684) *
               C153537 * C1091 -
           ((C5587 * C153724 + (C3043 + C3042 + C3041) * C153864) * C153684 +
            (C20354 * C153724 + (C3040 + C3039 + C3038) * C153864) * C153863) *
               C153537 * C153573) *
              C1093 +
          ((((C3047 + C3048 + C3049) * C153864 + C20355 * C153724) * C153863 +
            ((C3050 + C3051 + C3052) * C153864 +
             (C4161 + C4162 + C4163) * C153724) *
                C153684) *
               C153537 * C153573 -
           ((C20356 * C153724 + (C3049 + C3048 + C3047) * C153864) * C153684 +
            ((C7650 + C7649 + C7648) * C153724 +
             (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
              C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
              C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                 C153864) *
                C153863) *
               C153537 * C1091) *
              C1094 +
          ((((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
              C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
              C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                 C153864 +
             (C8133 + C8134 + C8135) * C153724) *
                C153863 +
            ((C3550 + C3551 + C3552) * C153864 +
             (C19670 + C19671 + C19672) * C153724) *
                C153684) *
               C153537 * C1091 -
           (((C2693 * C1761 - C2694 * C1756 - C2693 * C1762 + C153885 * C1771 +
              C2691 * C1763 - C2692 * C1757 - C2691 * C1764 + C2684 * C1772 +
              C2689 * C1765 - C2690 * C1758 - C2689 * C1766 + C2683 * C1773) *
                 C153724 +
             (C3555 + C3554 + C3553) * C153864) *
                C153684 +
            ((C19672 + C19671 + C19670) * C153724 +
             (C3552 + C3551 + C3550) * C153864) *
                C153863) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153864 +
             (C7639 + C7640 + C7641) * C153724) *
                C153863 +
            ((C3038 + C3039 + C3040) * C153864 + C20353 * C153724) * C153684) *
               C473 -
           ((C9064 * C153724 + C20354 * C153864) * C153684 +
            ((C7644 + C7643 + C7642) * C153724 +
             (C7641 + C7640 + C7639) * C153864) *
                C153863) *
               C474 +
           ((C7659 * C153864 + (C7647 + C7646 + C7645) * C153724) * C153863 +
            (C21132 * C153864 + (C9068 + C9069 + C9070) * C153724) * C153684) *
               C475) *
              C1091 +
          (((C20353 * C153864 + C21132 * C153724) * C153863 +
            ((C4154 + C4153 + C4152) * C153864 +
             (C4833 + C4834 + C4835) * C153724) *
                C153684) *
               C474 -
           ((C5587 * C153724 + (C3043 + C3042 + C3041) * C153864) * C153684 +
            (C20354 * C153724 + (C3040 + C3039 + C3038) * C153864) * C153863) *
               C473 -
           (((C2693 * C6185 - C2694 * C6179 - C2693 * C6186 + C153885 * C6197 +
              C2691 * C6187 - C2692 * C6180 - C2691 * C6188 + C2684 * C6198 +
              C2689 * C6189 - C2690 * C6181 - C2689 * C6190 + C2683 * C6199) *
                 C153724 +
             (C4835 + C4834 + C4833) * C153864) *
                C153684 +
            ((C9070 + C9069 + C9068) * C153724 + C9064 * C153864) * C153863) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153864 +
             C31290 * C153724) *
                C34893 +
            (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
               C153537 * C1091 -
           ((C44330 + C44331) * C153871 + (C44329 + C44328) * C34895 +
            (C44327 + C44326) * C34894 + (C44325 + C44324) * C34893) *
               C153537 * C153573) *
              C1093 +
          (((C44332 + C44333) * C34893 + (C44334 + C44335) * C34894 +
            (C44336 + C44337) * C34895 + (C44338 + C44339) * C153871) *
               C153537 * C153573 -
           (C44342 * C153871 + C44343 * C34895 + (C44333 + C44332) * C34894 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153864) *
                C34893) *
               C153537 * C1091) *
              C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C153864 +
             C31782 * C153724) *
                C34893 +
            (C44732 + C44733) * C34894 + (C44734 + C44735) * C34895 +
            (C44736 + C44744) * C153871) *
               C153537 * C1091 -
           (((C28212 * C5564 - C28213 * C5561 - C28212 * C5565 +
              C153462 * C5570) *
                 C153724 +
             C28704 * C153864) *
                C153871 +
            (C44744 + C44736) * C34895 + (C44735 + C44734) * C34894 +
            (C44733 + C44732) * C34893) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153864 +
            C31290 * C153724) *
               C34893 +
           (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
              C153537 * C1178 -
          (C45533 * C153871 + C45534 * C34895 + (C44327 + C44326) * C34894 +
           (C44325 + C44324) * C34893) *
              C153537 * C1179 +
          (C44340 * C34893 + C44341 * C34894 + (C44331 + C44330) * C34895 +
           (C45535 + C45536) * C153871) *
              C153537 * C1180 -
          (((C28212 * C29845 - C28213 * C29844 - C28212 * C29846 +
             C153462 * C29847) *
                C153724 +
            C29279 * C153864) *
               C153871 +
           (C45536 + C45535) * C34895 + C45533 * C34894 + C45534 * C34893) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153864 +
             C31290 * C153724) *
                C34893 +
            (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
               C473 -
           ((C45197 + C45198) * C153871 + (C45199 + C45200) * C34895 +
            (C45201 + C45202) * C34894 +
            (C31291 * C153724 + C31290 * C153864) * C34893) *
               C474 +
           ((C31291 * C153864 + C31294 * C153724) * C34893 +
            (C45731 + C45732) * C34894 + (C45733 + C45734) * C34895 +
            (C45735 + C45736) * C153871) *
               C475) *
              C1091 +
          (((C45202 + C45201) * C34893 + (C45200 + C45199) * C34894 +
            (C45198 + C45197) * C34895 +
            (C29049 * C153864 + C29434 * C153724) * C153871) *
               C474 -
           (C45533 * C153871 + C45534 * C34895 + (C44327 + C44326) * C34894 +
            (C44325 + C44324) * C34893) *
               C473 -
           (((C28212 * C30184 - C28213 * C30182 - C28212 * C30185 +
              C153462 * C30188) *
                 C153724 +
             C29434 * C153864) *
                C153871 +
            (C45736 + C45735) * C34895 + (C45734 + C45733) * C34894 +
            (C45732 + C45731) * C34893) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[323] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
               C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
               C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                  C153864 +
              (C7639 + C7640 + C7641) * C153724) *
                 C153863 +
             ((C3038 + C3039 + C3040) * C153864 + C20353 * C153724) * C153684) *
                C153849 -
            ((C9064 * C153724 + C20354 * C153864) * C153684 +
             ((C7644 + C7643 + C7642) * C153724 +
              (C7641 + C7640 + C7639) * C153864) *
                 C153863) *
                C153601) *
               C1091 +
           (((C20353 * C153864 + C21132 * C153724) * C153863 +
             ((C4154 + C4153 + C4152) * C153864 +
              (C4833 + C4834 + C4835) * C153724) *
                 C153684) *
                C153601 -
            ((C5587 * C153724 + (C3043 + C3042 + C3041) * C153864) * C153684 +
             (C20354 * C153724 + (C3040 + C3039 + C3038) * C153864) * C153863) *
                C153849) *
               C153573) *
              C153840 +
          (((((C7648 + C7649 + C7650) * C153864 +
              (C7651 + C7652 + C7653) * C153724) *
                 C153863 +
             (C20355 * C153864 + (C8451 + C8452 + C8453) * C153724) * C153684) *
                C153601 -
            ((C20356 * C153724 + (C3049 + C3048 + C3047) * C153864) * C153684 +
             ((C7650 + C7649 + C7648) * C153724 +
              (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
               C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
               C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                  C153864) *
                 C153863) *
                C153849) *
               C1091 +
           ((((C3047 + C3048 + C3049) * C153864 + C20355 * C153724) * C153863 +
             ((C3050 + C3051 + C3052) * C153864 +
              (C4161 + C4162 + C4163) * C153724) *
                 C153684) *
                C153849 -
            (((C2693 * C3289 - C2694 * C3282 - C2693 * C3290 + C153885 * C3294 +
               C2691 * C3287 - C2692 * C3281 - C2691 * C3288 + C2684 * C3293 +
               C2689 * C3285 - C2690 * C3280 - C2689 * C3286 + C2683 * C3292) *
                  C153724 +
              (C4163 + C4162 + C4161) * C153864) *
                 C153684 +
             ((C8453 + C8452 + C8451) * C153724 + C20356 * C153864) * C153863) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                  C153864 +
              C31290 * C153724) *
                 C34893 +
             (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
                C153849 -
            ((C45197 + C45198) * C153871 + (C45199 + C45200) * C34895 +
             (C45201 + C45202) * C34894 +
             (C31291 * C153724 + C31290 * C153864) * C34893) *
                C153601) *
               C1091 +
           (((C45202 + C45201) * C34893 + (C45200 + C45199) * C34894 +
             (C45198 + C45197) * C34895 +
             (C29049 * C153864 + C29434 * C153724) * C153871) *
                C153601 -
            (C45533 * C153871 + C45534 * C34895 + (C44327 + C44326) * C34894 +
             (C44325 + C44324) * C34893) *
                C153849) *
               C153573) *
              C153840 +
          ((((C31295 * C153864 + C31296 * C153724) * C34893 +
             (C45203 + C45204) * C34894 + (C45205 + C45206) * C34895 +
             (C45207 + C45208) * C153871) *
                C153601 -
            (C44342 * C153871 + C44343 * C34895 + (C44333 + C44332) * C34894 +
             (C31295 * C153724 +
              (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                  C153864) *
                 C34893) *
                C153849) *
               C1091 +
           (((C44332 + C44333) * C34893 + (C44334 + C44335) * C34894 +
             (C44336 + C44337) * C34895 + (C44338 + C44339) * C153871) *
                C153849 -
            (((C28212 * C28550 - C28213 * C28547 - C28212 * C28551 +
               C153462 * C28553) *
                  C153724 +
              C29056 * C153864) *
                 C153871 +
             (C45208 + C45207) * C34895 + (C45206 + C45205) * C34894 +
             (C45204 + C45203) * C34893) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[324] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153864 +
             (C7639 + C7640 + C7641) * C153724) *
                C153863 +
            ((C3038 + C3039 + C3040) * C153864 + C20353 * C153724) * C153684) *
               C153537 * C1091 -
           ((C5587 * C153724 + (C3043 + C3042 + C3041) * C153864) * C153684 +
            (C20354 * C153724 + (C3040 + C3039 + C3038) * C153864) * C153863) *
               C153537 * C153573) *
              C1093 +
          ((((C3047 + C3048 + C3049) * C153864 + C20355 * C153724) * C153863 +
            ((C3050 + C3051 + C3052) * C153864 +
             (C4161 + C4162 + C4163) * C153724) *
                C153684) *
               C153537 * C153573 -
           ((C20356 * C153724 + (C3049 + C3048 + C3047) * C153864) * C153684 +
            ((C7650 + C7649 + C7648) * C153724 +
             (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
              C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
              C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                 C153864) *
                C153863) *
               C153537 * C1091) *
              C1094 +
          ((((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
              C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
              C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                 C153864 +
             (C8133 + C8134 + C8135) * C153724) *
                C153863 +
            ((C3550 + C3551 + C3552) * C153864 +
             (C19670 + C19671 + C19672) * C153724) *
                C153684) *
               C153537 * C1091 -
           (((C2693 * C1761 - C2694 * C1756 - C2693 * C1762 + C153885 * C1771 +
              C2691 * C1763 - C2692 * C1757 - C2691 * C1764 + C2684 * C1772 +
              C2689 * C1765 - C2690 * C1758 - C2689 * C1766 + C2683 * C1773) *
                 C153724 +
             (C3555 + C3554 + C3553) * C153864) *
                C153684 +
            ((C19672 + C19671 + C19670) * C153724 +
             (C3552 + C3551 + C3550) * C153864) *
                C153863) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153864 +
            (C7639 + C7640 + C7641) * C153724) *
               C153863 +
           ((C3038 + C3039 + C3040) * C153864 + C20353 * C153724) * C153684) *
              C153537 * C1178 -
          ((C5587 * C153724 + (C3043 + C3042 + C3041) * C153864) * C153684 +
           (C20354 * C153724 + (C3040 + C3039 + C3038) * C153864) * C153863) *
              C153537 * C1179 +
          ((C3058 * C153864 + (C4154 + C4153 + C4152) * C153724) * C153863 +
           ((C3046 + C3045 + C3044) * C153864 +
            (C5595 + C5596 + C5597) * C153724) *
               C153684) *
              C153537 * C1180 -
          (((C2693 * C5564 - C2694 * C5561 - C2693 * C5565 + C153885 * C5570 +
             C2691 * C5566 - C2692 * C5562 - C2691 * C5567 + C2684 * C5571 +
             C2689 * C5568 - C2690 * C5563 - C2689 * C5569 + C2683 * C5572) *
                C153724 +
            (C4563 + C4562 + C4561) * C153864) *
               C153684 +
           ((C5597 + C5596 + C5595) * C153724 + C4553 * C153864) * C153863) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153864 +
             C31290 * C153724) *
                C34893 +
            (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
               C153537 * C1091 -
           ((C44330 + C44331) * C153871 + (C44329 + C44328) * C34895 +
            (C44327 + C44326) * C34894 + (C44325 + C44324) * C34893) *
               C153537 * C153573) *
              C1093 +
          (((C44332 + C44333) * C34893 + (C44334 + C44335) * C34894 +
            (C44336 + C44337) * C34895 + (C44338 + C44339) * C153871) *
               C153537 * C153573 -
           (C44342 * C153871 + C44343 * C34895 + (C44333 + C44332) * C34894 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153864) *
                C34893) *
               C153537 * C1091) *
              C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C153864 +
             C31782 * C153724) *
                C34893 +
            (C44732 + C44733) * C34894 + (C44734 + C44735) * C34895 +
            (C44736 + C44744) * C153871) *
               C153537 * C1091 -
           (((C28212 * C5564 - C28213 * C5561 - C28212 * C5565 +
              C153462 * C5570) *
                 C153724 +
             C28704 * C153864) *
                C153871 +
            (C44744 + C44736) * C34895 + (C44735 + C44734) * C34894 +
            (C44733 + C44732) * C34893) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153864 +
            C31290 * C153724) *
               C34893 +
           (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
              C153537 * C1178 -
          (C45533 * C153871 + C45534 * C34895 + (C44327 + C44326) * C34894 +
           (C44325 + C44324) * C34893) *
              C153537 * C1179 +
          (C44340 * C34893 + C44341 * C34894 + (C44331 + C44330) * C34895 +
           (C45535 + C45536) * C153871) *
              C153537 * C1180 -
          (((C28212 * C29845 - C28213 * C29844 - C28212 * C29846 +
             C153462 * C29847) *
                C153724 +
            C29279 * C153864) *
               C153871 +
           (C45536 + C45535) * C34895 + C45533 * C34894 + C45534 * C34893) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[325] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
               C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
               C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                  C153864 +
              (C7639 + C7640 + C7641) * C153724) *
                 C153863 +
             ((C3038 + C3039 + C3040) * C153864 + C20353 * C153724) * C153684) *
                C1898 -
            ((C9064 * C153724 + C20354 * C153864) * C153684 +
             ((C7644 + C7643 + C7642) * C153724 +
              (C7641 + C7640 + C7639) * C153864) *
                 C153863) *
                C153601) *
               C153848 +
           (((C20353 * C153864 + C21132 * C153724) * C153863 +
             (C22100 * C153864 + (C4833 + C4834 + C4835) * C153724) * C153684) *
                C153601 -
            ((C5587 * C153724 + (C3043 + C3042 + C3041) * C153864) * C153684 +
             (C20354 * C153724 + (C3040 + C3039 + C3038) * C153864) * C153863) *
                C1898) *
               C153573) *
              C153840 +
          (((((C7648 + C7649 + C7650) * C153864 +
              (C7651 + C7652 + C7653) * C153724) *
                 C153863 +
             (C20355 * C153864 + (C8451 + C8452 + C8453) * C153724) * C153684) *
                C153601 -
            ((C20356 * C153724 + (C3049 + C3048 + C3047) * C153864) * C153684 +
             ((C7650 + C7649 + C7648) * C153724 +
              (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
               C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
               C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                  C153864) *
                 C153863) *
                C1898) *
               C153848 +
           ((((C3047 + C3048 + C3049) * C153864 + C20355 * C153724) * C153863 +
             ((C3050 + C3051 + C3052) * C153864 +
              (C4161 + C4162 + C4163) * C153724) *
                 C153684) *
                C1898 -
            (((C2693 * C3289 - C2694 * C3282 - C2693 * C3290 + C153885 * C3294 +
               C2691 * C3287 - C2692 * C3281 - C2691 * C3288 + C2684 * C3293 +
               C2689 * C3285 - C2690 * C3280 - C2689 * C3286 + C2683 * C3292) *
                  C153724 +
              (C4163 + C4162 + C4161) * C153864) *
                 C153684 +
             ((C8453 + C8452 + C8451) * C153724 + C20356 * C153864) * C153863) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                  C153864 +
              C31290 * C153724) *
                 C34893 +
             (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
                C1898 -
            (C46383 * C153871 + C46384 * C34895 + (C45201 + C45202) * C34894 +
             (C31291 * C153724 + C31290 * C153864) * C34893) *
                C153601) *
               C153848 +
           (((C45202 + C45201) * C34893 + (C45200 + C45199) * C34894 +
             (C45198 + C45197) * C34895 + (C46385 + C46386) * C153871) *
                C153601 -
            (C45533 * C153871 + C45534 * C34895 + (C44327 + C44326) * C34894 +
             (C44325 + C44324) * C34893) *
                C1898) *
               C153573) *
              C153840 +
          ((((C31295 * C153864 + C31296 * C153724) * C34893 +
             (C45203 + C45204) * C34894 + (C45205 + C45206) * C34895 +
             (C45207 + C45208) * C153871) *
                C153601 -
            (C44342 * C153871 + C44343 * C34895 + (C44333 + C44332) * C34894 +
             (C31295 * C153724 +
              (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                  C153864) *
                 C34893) *
                C1898) *
               C153848 +
           (((C44332 + C44333) * C34893 + (C44334 + C44335) * C34894 +
             (C44336 + C44337) * C34895 + (C44338 + C44339) * C153871) *
                C1898 -
            (((C28212 * C28550 - C28213 * C28547 - C28212 * C28551 +
               C153462 * C28553) *
                  C153724 +
              C29056 * C153864) *
                 C153871 +
             (C45208 + C45207) * C34895 + (C45206 + C45205) * C34894 +
             (C45204 + C45203) * C34893) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[326] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153864 +
             (C7639 + C7640 + C7641) * C153724) *
                C153863 +
            ((C3038 + C3039 + C3040) * C153864 + C20353 * C153724) * C153684) *
               C153921 -
           ((C9064 * C153724 + C20354 * C153864) * C153684 +
            ((C7644 + C7643 + C7642) * C153724 +
             (C7641 + C7640 + C7639) * C153864) *
                C153863) *
               C153922 +
           ((C7659 * C153864 + (C7647 + C7646 + C7645) * C153724) * C153863 +
            (C21132 * C153864 + (C9068 + C9069 + C9070) * C153724) * C153684) *
               C2414) *
              C153848 +
          (((C20353 * C153864 + C21132 * C153724) * C153863 +
            (C22100 * C153864 + (C4833 + C4834 + C4835) * C153724) * C153684) *
               C153922 -
           ((C5587 * C153724 + (C3043 + C3042 + C3041) * C153864) * C153684 +
            (C20354 * C153724 + (C3040 + C3039 + C3038) * C153864) * C153863) *
               C153921 -
           (((C2693 * C6185 - C2694 * C6179 - C2693 * C6186 + C153885 * C6197 +
              C2691 * C6187 - C2692 * C6180 - C2691 * C6188 + C2684 * C6198 +
              C2689 * C6189 - C2690 * C6181 - C2689 * C6190 + C2683 * C6199) *
                 C153724 +
             (C4835 + C4834 + C4833) * C153864) *
                C153684 +
            ((C9070 + C9069 + C9068) * C153724 + C9064 * C153864) * C153863) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153864 +
             C31290 * C153724) *
                C34893 +
            (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
               C153921 -
           (C46383 * C153871 + C46384 * C34895 + (C45201 + C45202) * C34894 +
            (C31291 * C153724 + C31290 * C153864) * C34893) *
               C153922 +
           ((C31291 * C153864 + C31294 * C153724) * C34893 +
            (C45731 + C45732) * C34894 + (C45733 + C45734) * C34895 +
            (C45735 + C45736) * C153871) *
               C2414) *
              C153848 +
          (((C45202 + C45201) * C34893 + (C45200 + C45199) * C34894 +
            (C45198 + C45197) * C34895 + (C46385 + C46386) * C153871) *
               C153922 -
           (C45533 * C153871 + C45534 * C34895 + (C44327 + C44326) * C34894 +
            (C44325 + C44324) * C34893) *
               C153921 -
           (((C28212 * C30184 - C28213 * C30182 - C28212 * C30185 +
              C153462 * C30188) *
                 C153724 +
             C29434 * C153864) *
                C153871 +
            (C45736 + C45735) * C34895 + (C45734 + C45733) * C34894 +
            (C45732 + C45731) * C34893) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[327] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153864 +
             (C7639 + C7640 + C7641) * C153724) *
                C153863 +
            ((C3038 + C3039 + C3040) * C153864 + C20353 * C153724) * C153684) *
               C1898 -
           ((C9064 * C153724 + C20354 * C153864) * C153684 +
            ((C7644 + C7643 + C7642) * C153724 +
             (C7641 + C7640 + C7639) * C153864) *
                C153863) *
               C153601) *
              C298 +
          (((C20353 * C153864 + C21132 * C153724) * C153863 +
            (C22100 * C153864 + (C4833 + C4834 + C4835) * C153724) * C153684) *
               C153601 -
           ((C5587 * C153724 + (C3043 + C3042 + C3041) * C153864) * C153684 +
            (C20354 * C153724 + (C3040 + C3039 + C3038) * C153864) * C153863) *
               C1898) *
              C299 +
          (((C3058 * C153864 + C22100 * C153724) * C153863 +
            ((C3046 + C3045 + C3044) * C153864 +
             (C5595 + C5596 + C5597) * C153724) *
                C153684) *
               C1898 -
           (((C2693 * C4784 - C2694 * C4781 - C2693 * C4785 + C153885 * C4790 +
              C2691 * C4786 - C2692 * C4782 - C2691 * C4787 + C2684 * C4791 +
              C2689 * C4788 - C2690 * C4783 - C2689 * C4789 + C2683 * C4792) *
                 C153724 +
             (C5597 + C5596 + C5595) * C153864) *
                C153684 +
            ((C4835 + C4834 + C4833) * C153724 + C5587 * C153864) * C153863) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153864 +
             (C7639 + C7640 + C7641) * C153724) *
                C153863 +
            ((C3038 + C3039 + C3040) * C153864 + C20353 * C153724) * C153684) *
               C1898 -
           ((C9064 * C153724 + C20354 * C153864) * C153684 +
            ((C7644 + C7643 + C7642) * C153724 +
             (C7641 + C7640 + C7639) * C153864) *
                C153863) *
               C153601) *
              C153521 * C1093 +
          ((((C7648 + C7649 + C7650) * C153864 +
             (C7651 + C7652 + C7653) * C153724) *
                C153863 +
            (C20355 * C153864 + (C8451 + C8452 + C8453) * C153724) * C153684) *
               C153601 -
           ((C20356 * C153724 + (C3049 + C3048 + C3047) * C153864) * C153684 +
            ((C7650 + C7649 + C7648) * C153724 +
             (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
              C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
              C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                 C153864) *
                C153863) *
               C1898) *
              C153521 * C1094 +
          ((((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
              C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
              C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                 C153864 +
             (C8133 + C8134 + C8135) * C153724) *
                C153863 +
            ((C3550 + C3551 + C3552) * C153864 +
             (C19670 + C19671 + C19672) * C153724) *
                C153684) *
               C1898 -
           (((C2693 * C1330 - C2694 * C1325 - C2693 * C1331 + C153885 * C1340 +
              C2691 * C1332 - C2692 * C1326 - C2691 * C1333 + C2684 * C1341 +
              C2689 * C1334 - C2690 * C1327 - C2689 * C1335 + C2683 * C1342) *
                 C153724 +
             (C19672 + C19671 + C19670) * C153864) *
                C153684 +
            ((C8138 + C8137 + C8136) * C153724 +
             (C8135 + C8134 + C8133) * C153864) *
                C153863) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153864 +
            (C7639 + C7640 + C7641) * C153724) *
               C153863 +
           ((C3038 + C3039 + C3040) * C153864 + C20353 * C153724) * C153684) *
              C2104 -
          ((C9064 * C153724 + C20354 * C153864) * C153684 +
           ((C7644 + C7643 + C7642) * C153724 +
            (C7641 + C7640 + C7639) * C153864) *
               C153863) *
              C2105 +
          ((C7659 * C153864 + (C7647 + C7646 + C7645) * C153724) * C153863 +
           (C21132 * C153864 + (C9068 + C9069 + C9070) * C153724) * C153684) *
              C2106 -
          (((C2693 * C9038 - C2694 * C9035 - C2693 * C9039 + C153885 * C9044 +
             C2691 * C9040 - C2692 * C9036 - C2691 * C9041 + C2684 * C9045 +
             C2689 * C9042 - C2690 * C9037 - C2689 * C9043 + C2683 * C9046) *
                C153724 +
            (C9070 + C9069 + C9068) * C153864) *
               C153684 +
           ((C10413 + C10412 + C10411) * C153724 + C10404 * C153864) *
               C153863) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153864 +
             C31290 * C153724) *
                C34893 +
            (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
               C1898 -
           (C46383 * C153871 + C46384 * C34895 + (C45201 + C45202) * C34894 +
            (C31291 * C153724 + C31290 * C153864) * C34893) *
               C153601) *
              C153521 * C1093 +
          (((C31295 * C153864 + C31296 * C153724) * C34893 +
            (C45203 + C45204) * C34894 + (C45205 + C45206) * C34895 +
            (C45207 + C45208) * C153871) *
               C153601 -
           (C44342 * C153871 + C44343 * C34895 + (C44333 + C44332) * C34894 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153864) *
                C34893) *
               C1898) *
              C153521 * C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C153864 +
             C31782 * C153724) *
                C34893 +
            (C44732 + C44733) * C34894 + (C44734 + C44735) * C34895 +
            (C44736 + C44744) * C153871) *
               C1898 -
           (((C28212 * C4784 - C28213 * C4781 - C28212 * C4785 +
              C153462 * C4790) *
                 C153724 +
             C44743 * C153864) *
                C153871 +
            (C31547 * C153724 + C31546 * C153864) * C34895 +
            (C31545 * C153724 + C31544 * C153864) * C34894 +
            (C31783 * C153724 + C31782 * C153864) * C34893) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153864 +
             C31290 * C153724) *
                C34893 +
            (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
               C1898 -
           (C46383 * C153871 + C46384 * C34895 + (C45201 + C45202) * C34894 +
            (C31291 * C153724 + C31290 * C153864) * C34893) *
               C153601) *
              C298 +
          (((C45202 + C45201) * C34893 + (C45200 + C45199) * C34894 +
            (C45198 + C45197) * C34895 + (C46385 + C46386) * C153871) *
               C153601 -
           (C45533 * C153871 + C45534 * C34895 + (C44327 + C44326) * C34894 +
            (C44325 + C44324) * C34893) *
               C1898) *
              C299 +
          ((C44340 * C34893 + C44341 * C34894 + (C44331 + C44330) * C34895 +
            (C45535 + C45536) * C153871) *
               C1898 -
           (((C28212 * C29403 - C28213 * C29402 - C28212 * C29404 +
              C153462 * C29405) *
                 C153724 +
             C29855 * C153864) *
                C153871 +
            (C46386 + C46385) * C34895 + C46383 * C34894 + C46384 * C34893) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153864 +
            C31290 * C153724) *
               C34893 +
           (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
              C2104 -
          (C46383 * C153871 + C46384 * C34895 + (C45201 + C45202) * C34894 +
           (C31291 * C153724 + C31290 * C153864) * C34893) *
              C2105 +
          ((C31291 * C153864 + C31294 * C153724) * C34893 +
           (C45731 + C45732) * C34894 + (C45733 + C45734) * C34895 +
           (C45735 + C45736) * C153871) *
              C2106 -
          (((C28212 * C32677 - C28213 * C32676 - C28212 * C32678 +
             C153462 * C32679) *
                C153724 +
            C32705 * C153864) *
               C153871 +
           (C32704 * C153724 + C31292 * C153864) * C34895 +
           (C32703 * C153724 + C31293 * C153864) * C34894 +
           (C34035 * C153724 + C31294 * C153864) * C34893) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[328] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153864 +
             (C7639 + C7640 + C7641) * C153724) *
                C153863 +
            ((C3038 + C3039 + C3040) * C153864 + C20353 * C153724) * C153684) *
               C153921 -
           ((C9064 * C153724 + C20354 * C153864) * C153684 +
            ((C7644 + C7643 + C7642) * C153724 +
             (C7641 + C7640 + C7639) * C153864) *
                C153863) *
               C153922 +
           ((C7659 * C153864 + (C7647 + C7646 + C7645) * C153724) * C153863 +
            (C21132 * C153864 + (C9068 + C9069 + C9070) * C153724) * C153684) *
               C2414) *
              C153521 * C153840 +
          ((((C7648 + C7649 + C7650) * C153864 +
             (C7651 + C7652 + C7653) * C153724) *
                C153863 +
            (C20355 * C153864 + (C8451 + C8452 + C8453) * C153724) * C153684) *
               C153922 -
           ((C20356 * C153724 + (C3049 + C3048 + C3047) * C153864) * C153684 +
            ((C7650 + C7649 + C7648) * C153724 +
             (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
              C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
              C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                 C153864) *
                C153863) *
               C153921 -
           (((C2693 * C8429 - C2694 * C8428 - C2693 * C8430 + C153885 * C8431 +
              C2691 * C6191 - C2692 * C6182 - C2691 * C6192 + C2684 * C6200 +
              C2689 * C6193 - C2690 * C6183 - C2689 * C6194 + C2683 * C6201) *
                 C153724 +
             (C8453 + C8452 + C8451) * C153864) *
                C153684 +
            ((C7656 + C7655 + C7654) * C153724 + C7660 * C153864) * C153863) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153864 +
             C31290 * C153724) *
                C34893 +
            (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
               C153921 -
           (C46383 * C153871 + C46384 * C34895 + (C45201 + C45202) * C34894 +
            (C31291 * C153724 + C31290 * C153864) * C34893) *
               C153922 +
           ((C31291 * C153864 + C31294 * C153724) * C34893 +
            (C45731 + C45732) * C34894 + (C45733 + C45734) * C34895 +
            (C45735 + C45736) * C153871) *
               C2414) *
              C153521 * C153840 +
          (((C31295 * C153864 + C31296 * C153724) * C34893 +
            (C45203 + C45204) * C34894 + (C45205 + C45206) * C34895 +
            (C45207 + C45208) * C153871) *
               C153922 -
           (C44342 * C153871 + C44343 * C34895 + (C44333 + C44332) * C34894 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153864) *
                C34893) *
               C153921 -
           (((C28212 * C32074 - C28213 * C32073 - C28212 * C32075 +
              C153462 * C32076) *
                 C153724 +
             C30999 * C153864) *
                C153871 +
            (C31299 * C153724 + C30998 * C153864) * C34895 +
            (C31298 * C153724 + C30997 * C153864) * C34894 +
            (C31297 * C153724 + C31296 * C153864) * C34893) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[329] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153864 +
             (C7639 + C7640 + C7641) * C153724) *
                C153863 +
            ((C3038 + C3039 + C3040) * C153864 + C20353 * C153724) * C153684) *
               C1898 -
           ((C9064 * C153724 + C20354 * C153864) * C153684 +
            ((C7644 + C7643 + C7642) * C153724 +
             (C7641 + C7640 + C7639) * C153864) *
                C153863) *
               C153601) *
              C153521 * C1093 +
          ((((C7648 + C7649 + C7650) * C153864 +
             (C7651 + C7652 + C7653) * C153724) *
                C153863 +
            (C20355 * C153864 + (C8451 + C8452 + C8453) * C153724) * C153684) *
               C153601 -
           ((C20356 * C153724 + (C3049 + C3048 + C3047) * C153864) * C153684 +
            ((C7650 + C7649 + C7648) * C153724 +
             (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
              C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
              C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                 C153864) *
                C153863) *
               C1898) *
              C153521 * C1094 +
          ((((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
              C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
              C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                 C153864 +
             (C8133 + C8134 + C8135) * C153724) *
                C153863 +
            ((C3550 + C3551 + C3552) * C153864 +
             (C19670 + C19671 + C19672) * C153724) *
                C153684) *
               C1898 -
           (((C2693 * C1330 - C2694 * C1325 - C2693 * C1331 + C153885 * C1340 +
              C2691 * C1332 - C2692 * C1326 - C2691 * C1333 + C2684 * C1341 +
              C2689 * C1334 - C2690 * C1327 - C2689 * C1335 + C2683 * C1342) *
                 C153724 +
             (C19672 + C19671 + C19670) * C153864) *
                C153684 +
            ((C8138 + C8137 + C8136) * C153724 +
             (C8135 + C8134 + C8133) * C153864) *
                C153863) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153864 +
             (C7639 + C7640 + C7641) * C153724) *
                C153863 +
            ((C3038 + C3039 + C3040) * C153864 + C20353 * C153724) * C153684) *
               C1898 -
           ((C9064 * C153724 + C20354 * C153864) * C153684 +
            ((C7644 + C7643 + C7642) * C153724 +
             (C7641 + C7640 + C7639) * C153864) *
                C153863) *
               C153601) *
              C298 +
          (((C20353 * C153864 + C21132 * C153724) * C153863 +
            (C22100 * C153864 + (C4833 + C4834 + C4835) * C153724) * C153684) *
               C153601 -
           ((C5587 * C153724 + (C3043 + C3042 + C3041) * C153864) * C153684 +
            (C20354 * C153724 + (C3040 + C3039 + C3038) * C153864) * C153863) *
               C1898) *
              C299 +
          (((C3058 * C153864 + C22100 * C153724) * C153863 +
            ((C3046 + C3045 + C3044) * C153864 +
             (C5595 + C5596 + C5597) * C153724) *
                C153684) *
               C1898 -
           (((C2693 * C4784 - C2694 * C4781 - C2693 * C4785 + C153885 * C4790 +
              C2691 * C4786 - C2692 * C4782 - C2691 * C4787 + C2684 * C4791 +
              C2689 * C4788 - C2690 * C4783 - C2689 * C4789 + C2683 * C4792) *
                 C153724 +
             (C5597 + C5596 + C5595) * C153864) *
                C153684 +
            ((C4835 + C4834 + C4833) * C153724 + C5587 * C153864) * C153863) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153864 +
             C31290 * C153724) *
                C34893 +
            (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
               C1898 -
           (C46383 * C153871 + C46384 * C34895 + (C45201 + C45202) * C34894 +
            (C31291 * C153724 + C31290 * C153864) * C34893) *
               C153601) *
              C153521 * C1093 +
          (((C31295 * C153864 + C31296 * C153724) * C34893 +
            (C45203 + C45204) * C34894 + (C45205 + C45206) * C34895 +
            (C45207 + C45208) * C153871) *
               C153601 -
           (C44342 * C153871 + C44343 * C34895 + (C44333 + C44332) * C34894 +
            (C31295 * C153724 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153864) *
                C34893) *
               C1898) *
              C153521 * C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C153864 +
             C31782 * C153724) *
                C34893 +
            (C44732 + C44733) * C34894 + (C44734 + C44735) * C34895 +
            (C44736 + C44744) * C153871) *
               C1898 -
           (((C28212 * C4784 - C28213 * C4781 - C28212 * C4785 +
              C153462 * C4790) *
                 C153724 +
             C44743 * C153864) *
                C153871 +
            (C31547 * C153724 + C31546 * C153864) * C34895 +
            (C31545 * C153724 + C31544 * C153864) * C34894 +
            (C31783 * C153724 + C31782 * C153864) * C34893) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153864 +
             C31290 * C153724) *
                C34893 +
            (C44324 + C44325) * C34894 + C44340 * C34895 + C44341 * C153871) *
               C1898 -
           (C46383 * C153871 + C46384 * C34895 + (C45201 + C45202) * C34894 +
            (C31291 * C153724 + C31290 * C153864) * C34893) *
               C153601) *
              C298 +
          (((C45202 + C45201) * C34893 + (C45200 + C45199) * C34894 +
            (C45198 + C45197) * C34895 + (C46385 + C46386) * C153871) *
               C153601 -
           (C45533 * C153871 + C45534 * C34895 + (C44327 + C44326) * C34894 +
            (C44325 + C44324) * C34893) *
               C1898) *
              C299 +
          ((C44340 * C34893 + C44341 * C34894 + (C44331 + C44330) * C34895 +
            (C45535 + C45536) * C153871) *
               C1898 -
           (((C28212 * C29403 - C28213 * C29402 - C28212 * C29404 +
              C153462 * C29405) *
                 C153724 +
             C29855 * C153864) *
                C153871 +
            (C46386 + C46385) * C34895 + C46383 * C34894 + C46384 * C34893) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[330] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C153537 * C153848 -
           ((C3044 + C3045 + C3046) * C153637 * C153898 +
            (C3043 + C3042 + C3041) * C153637 * C153924 +
            (C3040 + C3039 + C3038) * C153637 * C153936) *
               C153537 * C153573) *
              C153917 +
          (((C3047 + C3048 + C3049) * C153637 * C153936 +
            (C3050 + C3051 + C3052) * C153637 * C153924 +
            (C3053 + C3054 + C3055) * C153637 * C153898) *
               C153537 * C153573 -
           (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153637 * C153936) *
               C153537 * C153848) *
              C153918 +
          (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
             C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
             C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                C153637 * C153936 +
            (C3550 + C3551 + C3552) * C153637 * C153924 +
            (C3553 + C3554 + C3555) * C153637 * C153898) *
               C153537 * C153848 -
           ((C2693 * C1188 - C2694 * C1183 - C2693 * C1189 + C153885 * C1198 +
             C2691 * C1190 - C2692 * C1184 - C2691 * C1191 + C2684 * C1199 +
             C2689 * C1192 - C2690 * C1185 - C2689 * C1193 + C2683 * C1200) *
                C153637 * C153898 +
            (C3555 + C3554 + C3553) * C153637 * C153924 +
            (C3552 + C3551 + C3550) * C153637 * C153936) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C153537 * C153848 -
           (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
            C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
            C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
            C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
            C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
               C153637 * C153625 * C153537 * C153573) *
              C153917 +
          ((C134 * C321 - C135 * C306 - C134 * C322 + C121 * C342 +
            C136 * C319 - C137 * C305 - C136 * C320 + C122 * C341 +
            C138 * C317 - C139 * C304 - C138 * C318 + C123 * C340 +
            C140 * C315 - C141 * C303 - C140 * C316 + C124 * C339 +
            C142 * C335 - C143 * C313 - C142 * C336 + C125 * C349) *
               C153637 * C153625 * C153537 * C153573 -
           (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
            C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
            C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
            C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
            C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
               C153637 * C153625 * C153537 * C153848) *
              C153918 +
          ((C134 * C156 - C135 * C146 - C134 * C157 + C121 * C170 +
            C136 * C158 - C137 * C147 - C136 * C159 + C122 * C171 +
            C138 * C160 - C139 * C148 - C138 * C161 + C123 * C172 +
            C140 * C162 - C141 * C149 - C140 * C163 + C124 * C173 +
            C142 * C164 - C143 * C150 - C142 * C165 + C125 * C174) *
               C153637 * C153625 * C153537 * C153848 -
           (C142 * C652 - C143 * C651 - C142 * C653 + C125 * C654 +
            C140 * C335 - C141 * C313 - C140 * C336 + C124 * C349 +
            C138 * C315 - C139 * C303 - C138 * C316 + C123 * C339 +
            C136 * C317 - C137 * C304 - C136 * C318 + C122 * C340 +
            C134 * C319 - C135 * C305 - C134 * C320 + C121 * C341) *
               C153637 * C153625 * C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153937 +
            (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
               C153625 * C153537 * C153848 -
           ((C4832 + C4831 + C4830) * C153901 +
            (C4155 + C4156 + C4157) * C153926 +
            (C3040 + C3039 + C3038) * C153937) *
               C153625 * C153537 * C153573) *
              C153917 +
          (((C3047 + C3048 + C3049) * C153937 +
            (C4158 + C4159 + C4160) * C153926 +
            (C2689 * C1336 - C2690 * C1328 - C2689 * C1337 + C2683 * C1343 +
             C2691 * C1334 - C2692 * C1327 - C2691 * C1335 + C2684 * C1342 +
             C2693 * C1332 - C2694 * C1326 - C2693 * C1333 + C153885 * C1341) *
                C153901) *
               C153625 * C153537 * C153573 -
           (C7660 * C153901 + (C7650 + C7649 + C7648) * C153926 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153937) *
               C153625 * C153537 * C153848) *
              C153918 +
          (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
             C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
             C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                C153937 +
            (C2689 * C492 - C2690 * C478 - C2689 * C493 + C2683 * C514 +
             C2691 * C490 - C2692 * C477 - C2691 * C491 + C2684 * C513 +
             C2693 * C488 - C2694 * C476 - C2693 * C489 + C153885 * C512) *
                C153926 +
            (C2689 * C502 - C2690 * C483 - C2689 * C503 + C2683 * C519 +
             C2691 * C504 - C2692 * C484 - C2691 * C505 + C2684 * C520 +
             C2693 * C506 - C2694 * C485 - C2693 * C507 + C153885 * C521) *
                C153901) *
               C153625 * C153537 * C153848 -
           ((C2693 * C1330 - C2694 * C1325 - C2693 * C1331 + C153885 * C1340 +
             C2691 * C1332 - C2692 * C1326 - C2691 * C1333 + C2684 * C1341 +
             C2689 * C1334 - C2690 * C1327 - C2689 * C1335 + C2683 * C1342) *
                C153901 +
            (C2693 * C959 - C2694 * C949 - C2693 * C960 + C153885 * C967 +
             C2691 * C957 - C2692 * C948 - C2691 * C958 + C2684 * C966 +
             C2689 * C955 - C2690 * C947 - C2689 * C956 + C2683 * C965) *
                C153926 +
            (C3552 + C3551 + C3550) * C153937) *
               C153625 * C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153537 * C153848 -
           ((C24331 + C24332 + C24333) * C153637 * C153898 +
            (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C153537 * C153573) *
              C153917 +
          (((C24334 + C24335 + C24336) * C153637 * C23989 +
            (C24337 + C24338 + C24339) * C153637 * C23990 +
            (C24340 + C24341 + C24342) * C153637 * C153898) *
               C153537 * C153573 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C153537 * C153848) *
              C153918 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C153637 * C23989 +
            (C24821 + C24822 + C24823) * C153637 * C23990 +
            (C24824 + C24825 + C24826) * C153637 * C153898) *
               C153537 * C153848 -
           ((C23996 * C1188 - C23997 * C1183 - C23996 * C1189 +
             C153885 * C1198 + C23994 * C1190 - C23995 * C1184 -
             C23994 * C1191 + C153914 * C1199 + C23992 * C1192 -
             C23993 * C1185 - C23992 * C1193 + C153933 * C1200) *
                C153637 * C153898 +
            (C24826 + C24825 + C24824) * C153637 * C23990 +
            (C24823 + C24822 + C24821) * C153637 * C23989) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153537 * C153848 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C153537 * C153573) *
              C153917 +
          ((C28420 * C28207 + C28421 * C28208 + C28422 * C28209 +
            C28423 * C28210 + C28424 * C28211) *
               C153537 * C153573 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C153537 * C153848) *
              C153918 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C153637 * C28207 +
            C28705 * C28208 + C28706 * C28209 + C28707 * C28210 +
            C28708 * C28211) *
               C153537 * C153848 -
           ((C28212 * C4530 - C28213 * C4527 - C28212 * C4531 +
             C153462 * C4536) *
                C153637 * C28211 +
            C28708 * C28210 + C28707 * C28209 + C28706 * C28208 +
            C28705 * C28207) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153937 +
             C31290 * C153926 + C31291 * C153901) *
                C23989 +
            (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
               C153537 * C153848 -
           ((C30967 + C30968 + C30969) * C153898 +
            (C30966 + C30965 + C30964) * C23990 +
            (C30963 + C30962 + C30961) * C23989) *
               C153537 * C153573) *
              C153917 +
          (((C30970 + C30971 + C31000) * C23989 +
            (C30976 + C30977 + C31001) * C23990 +
            (C30982 + C30983 + C31002) * C153898) *
               C153537 * C153573 -
           (C31003 * C153898 + (C31000 + C30971 + C30970) * C23990 +
            (C31296 * C153901 + C31295 * C153926 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153937) *
                C23989) *
               C153537 * C153848) *
              C153918 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C153937 +
             (C28212 * C492 - C28213 * C478 - C28212 * C493 + C153462 * C514) *
                 C153926 +
             (C28212 * C502 - C28213 * C483 - C28212 * C503 + C153462 * C519) *
                 C153901) *
                C23989 +
            (C31518 + C31548 + C31549) * C23990 +
            (C31527 + C31550 + C31551) * C153898) *
               C153537 * C153848 -
           (((C28212 * C4784 - C28213 * C4781 - C28212 * C4785 +
              C153462 * C4790) *
                 C153901 +
             (C28212 * C4071 - C28213 * C4065 - C28212 * C4072 +
              C153462 * C4077) *
                 C153926 +
             C28703 * C153937) *
                C153898 +
            (C31551 + C31550 + C31527) * C23990 +
            (C31549 + C31548 + C31518) * C23989) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q));
    d2ee[331] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153637 * C153936 +
             (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
                C153849 -
            ((C4152 + C4153 + C4154) * C153637 * C153898 +
             (C4155 + C4156 + C4157) * C153637 * C153924 +
             (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
              C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
              C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                 C153637 * C153936) *
                C153601) *
               C153848 +
           (((C4157 + C4156 + C4155) * C153637 * C153936 +
             (C4154 + C4153 + C4152) * C153637 * C153924 +
             (C2689 * C4067 - C2690 * C4063 - C2689 * C4068 + C2683 * C4075 +
              C2691 * C4069 - C2692 * C4064 - C2691 * C4070 + C2684 * C4076 +
              C2693 * C4071 - C2694 * C4065 - C2693 * C4072 + C153885 * C4077) *
                 C153637 * C153898) *
                C153601 -
            ((C3044 + C3045 + C3046) * C153637 * C153898 +
             (C3043 + C3042 + C3041) * C153637 * C153924 +
             (C3040 + C3039 + C3038) * C153637 * C153936) *
                C153849) *
               C153573) *
              C301 +
          ((((C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515 +
              C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
              C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513) *
                 C153637 * C153936 +
             (C4158 + C4159 + C4160) * C153637 * C153924 +
             (C4161 + C4162 + C4163) * C153637 * C153898) *
                C153601 -
            (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
             (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
              C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
              C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                 C153637 * C153936) *
                C153849) *
               C153848 +
           (((C3047 + C3048 + C3049) * C153637 * C153936 +
             (C3050 + C3051 + C3052) * C153637 * C153924 +
             (C3053 + C3054 + C3055) * C153637 * C153898) *
                C153849 -
            ((C2693 * C4073 - C2694 * C4066 - C2693 * C4074 + C153885 * C4078 +
              C2691 * C4071 - C2692 * C4065 - C2691 * C4072 + C2684 * C4077 +
              C2689 * C4069 - C2690 * C4064 - C2689 * C4070 + C2683 * C4076) *
                 C153637 * C153898 +
             (C4163 + C4162 + C4161) * C153637 * C153924 +
             (C4160 + C4159 + C4158) * C153637 * C153936) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
             C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
             C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
             C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
             C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                C153637 * C153625 * C153849 -
            (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
             C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
             C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
             C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
             C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
                C153637 * C153625 * C153601) *
               C153848 +
           ((C134 * C951 - C135 * C945 - C134 * C952 + C121 * C963 +
             C136 * C953 - C137 * C946 - C136 * C954 + C122 * C964 +
             C138 * C955 - C139 * C947 - C138 * C956 + C123 * C965 +
             C140 * C957 - C141 * C948 - C140 * C958 + C124 * C966 +
             C142 * C959 - C143 * C949 - C142 * C960 + C125 * C967) *
                C153637 * C153625 * C153601 -
            (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
             C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
             C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
             C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
             C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
                C153637 * C153625 * C153849) *
               C153573) *
              C301 +
          (((C134 * C494 - C135 * C479 - C134 * C495 + C121 * C515 +
             C136 * C492 - C137 * C478 - C136 * C493 + C122 * C514 +
             C138 * C490 - C139 * C477 - C138 * C491 + C123 * C513 +
             C140 * C488 - C141 * C476 - C140 * C489 + C124 * C512 +
             C142 * C508 - C143 * C486 - C142 * C509 + C125 * C522) *
                C153637 * C153625 * C153601 -
            (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
             C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
             C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
             C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
             C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
                C153637 * C153625 * C153849) *
               C153848 +
           ((C134 * C321 - C135 * C306 - C134 * C322 + C121 * C342 +
             C136 * C319 - C137 * C305 - C136 * C320 + C122 * C341 +
             C138 * C317 - C139 * C304 - C138 * C318 + C123 * C340 +
             C140 * C315 - C141 * C303 - C140 * C316 + C124 * C339 +
             C142 * C335 - C143 * C313 - C142 * C336 + C125 * C349) *
                C153637 * C153625 * C153849 -
            (C142 * C961 - C143 * C950 - C142 * C962 + C125 * C968 +
             C140 * C959 - C141 * C949 - C140 * C960 + C124 * C967 +
             C138 * C957 - C139 * C948 - C138 * C958 + C123 * C966 +
             C136 * C955 - C137 * C947 - C136 * C956 + C122 * C965 +
             C134 * C953 - C135 * C946 - C134 * C954 + C121 * C964) *
                C153637 * C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153937 +
             (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
                C153625 * C153849 -
            ((C7645 + C7646 + C7647) * C153901 +
             (C7644 + C7643 + C7642) * C153926 +
             (C7641 + C7640 + C7639) * C153937) *
                C153625 * C153601) *
               C153848 +
           (((C4157 + C4156 + C4155) * C153937 +
             (C4830 + C4831 + C4832) * C153926 +
             (C2689 * C6195 - C2690 * C6184 - C2689 * C6196 + C2683 * C6202 +
              C2691 * C6193 - C2692 * C6183 - C2691 * C6194 + C2684 * C6201 +
              C2693 * C6191 - C2694 * C6182 - C2693 * C6192 + C153885 * C6200) *
                 C153901) *
                C153625 * C153601 -
            ((C4832 + C4831 + C4830) * C153901 +
             (C4155 + C4156 + C4157) * C153926 +
             (C3040 + C3039 + C3038) * C153937) *
                C153625 * C153849) *
               C153573) *
              C301 +
          ((((C7648 + C7649 + C7650) * C153937 +
             (C7651 + C7652 + C7653) * C153926 +
             (C7654 + C7655 + C7656) * C153901) *
                C153625 * C153601 -
            (C7660 * C153901 + (C7650 + C7649 + C7648) * C153926 +
             (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
              C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
              C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                 C153937) *
                C153625 * C153849) *
               C153848 +
           (((C3047 + C3048 + C3049) * C153937 +
             (C4158 + C4159 + C4160) * C153926 +
             (C8451 + C8452 + C8453) * C153901) *
                C153625 * C153849 -
            ((C2693 * C8429 - C2694 * C8428 - C2693 * C8430 + C153885 * C8431 +
              C2691 * C6191 - C2692 * C6182 - C2691 * C6192 + C2684 * C6200 +
              C2689 * C6193 - C2690 * C6183 - C2689 * C6194 + C2683 * C6201) *
                 C153901 +
             (C8453 + C8452 + C8451) * C153926 +
             (C4160 + C4159 + C4158) * C153937) *
                C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C153637 * C23989 +
             (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
                C153849 -
            ((C25407 + C25408 + C25409) * C153637 * C153898 +
             (C25410 + C25411 + C25412) * C153637 * C23990 +
             (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
              C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
              C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                 C153637 * C23989) *
                C153601) *
               C153848 +
           (((C25412 + C25411 + C25410) * C153637 * C23989 +
             (C25409 + C25408 + C25407) * C153637 * C23990 +
             (C23992 * C4067 - C23993 * C4063 - C23992 * C4068 +
              C153933 * C4075 + C23994 * C4069 - C23995 * C4064 -
              C23994 * C4070 + C153914 * C4076 + C23996 * C4071 -
              C23997 * C4065 - C23996 * C4072 + C153885 * C4077) *
                 C153637 * C153898) *
                C153601 -
            ((C24331 + C24332 + C24333) * C153637 * C153898 +
             (C24330 + C24329 + C24328) * C153637 * C23990 +
             (C24327 + C24326 + C24325) * C153637 * C23989) *
                C153849) *
               C153573) *
              C301 +
          ((((C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515 +
              C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
              C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513) *
                 C153637 * C23989 +
             (C25413 + C25414 + C25415) * C153637 * C23990 +
             (C25416 + C25417 + C25418) * C153637 * C153898) *
                C153601 -
            (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C153637 * C23989) *
                C153849) *
               C153848 +
           (((C24334 + C24335 + C24336) * C153637 * C23989 +
             (C24337 + C24338 + C24339) * C153637 * C23990 +
             (C24340 + C24341 + C24342) * C153637 * C153898) *
                C153849 -
            ((C23996 * C4073 - C23997 * C4066 - C23996 * C4074 +
              C153885 * C4078 + C23994 * C4071 - C23995 * C4065 -
              C23994 * C4072 + C153914 * C4077 + C23992 * C4069 -
              C23993 * C4064 - C23992 * C4070 + C153933 * C4076) *
                 C153637 * C153898 +
             (C25418 + C25417 + C25416) * C153637 * C23990 +
             (C25415 + C25414 + C25413) * C153637 * C23989) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153637 * C28207 +
             C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
             C28418 * C28211) *
                C153849 -
            (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
             C29060 * C28208 +
             (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                 C153637 * C28207) *
                C153601) *
               C153848 +
           ((C29060 * C28207 + C29059 * C28208 + C29058 * C28209 +
             C29057 * C28210 +
             (C28212 * C28994 - C28213 * C28992 - C28212 * C28995 +
              C153462 * C28998) *
                 C153637 * C28211) *
                C153601 -
            (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
             C28416 * C28208 + C28415 * C28207) *
                C153849) *
               C153573) *
              C301 +
          ((((C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                 C153637 * C28207 +
             C29061 * C28208 + C29062 * C28209 + C29063 * C28210 +
             C29064 * C28211) *
                C153601 -
            (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
             C28420 * C28208 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153637 * C28207) *
                C153849) *
               C153848 +
           ((C28420 * C28207 + C28421 * C28208 + C28422 * C28209 +
             C28423 * C28210 + C28424 * C28211) *
                C153849 -
            ((C28212 * C28996 - C28213 * C28993 - C28212 * C28997 +
              C153462 * C28999) *
                 C153637 * C28211 +
             C29064 * C28210 + C29063 * C28209 + C29062 * C28208 +
             C29061 * C28207) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                  C153937 +
              C31290 * C153926 + C31291 * C153901) *
                 C23989 +
             (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
                C153849 -
            ((C32078 + C32079 + C32080) * C153898 +
             (C32081 + C32082 + C32083) * C23990 +
             (C31294 * C153901 + C31291 * C153926 + C31290 * C153937) *
                 C23989) *
                C153601) *
               C153848 +
           (((C32083 + C32082 + C32081) * C23989 +
             (C32080 + C32079 + C32078) * C23990 +
             (C29050 * C153937 + C29433 * C153926 +
              (C28212 * C30186 - C28213 * C30183 - C28212 * C30187 +
               C153462 * C30189) *
                  C153901) *
                 C153898) *
                C153601 -
            ((C30967 + C30968 + C30969) * C153898 +
             (C30966 + C30965 + C30964) * C23990 +
             (C30963 + C30962 + C30961) * C23989) *
                C153849) *
               C153573) *
              C301 +
          ((((C31295 * C153937 + C31296 * C153926 + C31297 * C153901) * C23989 +
             (C32084 + C32085 + C32086) * C23990 +
             (C32087 + C32088 + C32089) * C153898) *
                C153601 -
            (C31003 * C153898 + (C31000 + C30971 + C30970) * C23990 +
             (C31296 * C153901 + C31295 * C153926 +
              (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                  C153937) *
                 C23989) *
                C153849) *
               C153848 +
           (((C30970 + C30971 + C31000) * C23989 +
             (C30976 + C30977 + C31001) * C23990 +
             (C30982 + C30983 + C31002) * C153898) *
                C153849 -
            (((C28212 * C32074 - C28213 * C32073 - C28212 * C32075 +
               C153462 * C32076) *
                  C153901 +
              C30999 * C153926 + C29055 * C153937) *
                 C153898 +
             (C32089 + C32088 + C32087) * C23990 +
             (C32086 + C32085 + C32084) * C23989) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[332] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
               C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
               C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
               C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
               C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                  C153637 * C153625 * C153537 * C153521 * C130 -
              (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
               C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
               C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
               C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
               C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
                  C153637 * C153625 * C153537 * C153521 * C131 +
              (C134 * C156 - C135 * C146 - C134 * C157 + C121 * C170 +
               C136 * C158 - C137 * C147 - C136 * C159 + C122 * C171 +
               C138 * C160 - C139 * C148 - C138 * C161 + C123 * C172 +
               C140 * C162 - C141 * C149 - C140 * C163 + C124 * C173 +
               C142 * C164 - C143 * C150 - C142 * C165 + C125 * C174) *
                  C153637 * C153625 * C153537 * C153521 * C132 -
              (C142 * C166 - C143 * C151 - C142 * C167 + C125 * C175 +
               C140 * C164 - C141 * C150 - C140 * C165 + C124 * C174 +
               C138 * C162 - C139 * C149 - C138 * C163 + C123 * C173 +
               C136 * C160 - C137 * C148 - C136 * C161 + C122 * C172 +
               C134 * C158 - C135 * C147 - C134 * C159 + C121 * C171) *
                  C153637 * C153625 * C153537 * C153521 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
                C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
                C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
                C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
                C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                   C153637 * C153625 * C153537 * C298 -
               (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
                C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
                C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
                C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
                C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
                   C153637 * C153625 * C153537 * C299 +
               (C134 * C325 - C135 * C308 - C134 * C326 + C121 * C344 +
                C136 * C327 - C137 * C309 - C136 * C328 + C122 * C345 +
                C138 * C329 - C139 * C310 - C138 * C330 + C123 * C346 +
                C140 * C331 - C141 * C311 - C140 * C332 + C124 * C347 +
                C142 * C333 - C143 * C312 - C142 * C334 + C125 * C348) *
                   C153637 * C153625 * C153537 * C300) *
                  C301 +
              ((C134 * C321 - C135 * C306 - C134 * C322 + C121 * C342 +
                C136 * C319 - C137 * C305 - C136 * C320 + C122 * C341 +
                C138 * C317 - C139 * C304 - C138 * C318 + C123 * C340 +
                C140 * C315 - C141 * C303 - C140 * C316 + C124 * C339 +
                C142 * C335 - C143 * C313 - C142 * C336 + C125 * C349) *
                   C153637 * C153625 * C153537 * C299 -
               (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
                C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
                C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
                C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
                C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
                   C153637 * C153625 * C153537 * C298 -
               (C142 * C337 - C143 * C314 - C142 * C338 + C125 * C350 +
                C140 * C333 - C141 * C312 - C140 * C334 + C124 * C348 +
                C138 * C331 - C139 * C311 - C138 * C332 + C123 * C347 +
                C136 * C329 - C137 * C310 - C136 * C330 + C122 * C346 +
                C134 * C327 - C135 * C309 - C134 * C328 + C121 * C345) *
                   C153637 * C153625 * C153537 * C300) *
                  C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C473 -
           (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
            C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
            C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
            C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
            C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
               C153637 * C153625 * C474 +
           (C134 * C498 - C135 * C481 - C134 * C499 + C121 * C517 +
            C136 * C500 - C137 * C482 - C136 * C501 + C122 * C518 +
            C138 * C502 - C139 * C483 - C138 * C503 + C123 * C519 +
            C140 * C504 - C141 * C484 - C140 * C505 + C124 * C520 +
            C142 * C506 - C143 * C485 - C142 * C507 + C125 * C521) *
               C153637 * C153625 * C475) *
              C153521 * C301 +
          ((C134 * C494 - C135 * C479 - C134 * C495 + C121 * C515 +
            C136 * C492 - C137 * C478 - C136 * C493 + C122 * C514 +
            C138 * C490 - C139 * C477 - C138 * C491 + C123 * C513 +
            C140 * C488 - C141 * C476 - C140 * C489 + C124 * C512 +
            C142 * C508 - C143 * C486 - C142 * C509 + C125 * C522) *
               C153637 * C153625 * C474 -
           (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
            C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
            C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
            C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
            C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
               C153637 * C153625 * C473 -
           (C142 * C510 - C143 * C487 - C142 * C511 + C125 * C523 +
            C140 * C506 - C141 * C485 - C140 * C507 + C124 * C521 +
            C138 * C504 - C139 * C484 - C138 * C505 + C123 * C520 +
            C136 * C502 - C137 * C483 - C136 * C503 + C122 * C519 +
            C134 * C500 - C135 * C482 - C134 * C501 + C121 * C518) *
               C153637 * C153625 * C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
            C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
            C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
               C153637 * C153936 +
           (C2689 * C323 - C2690 * C307 - C2689 * C324 + C2683 * C343 +
            C2691 * C321 - C2692 * C306 - C2691 * C322 + C2684 * C342 +
            C2693 * C319 - C2694 * C305 - C2693 * C320 + C153885 * C341) *
               C153637 * C153924 +
           (C2689 * C325 - C2690 * C308 - C2689 * C326 + C2683 * C344 +
            C2691 * C327 - C2692 * C309 - C2691 * C328 + C2684 * C345 +
            C2693 * C329 - C2694 * C310 - C2693 * C330 + C153885 * C346) *
               C153637 * C153898) *
              C153537 * C153521 * C130 -
          ((C2693 * C331 - C2694 * C311 - C2693 * C332 + C153885 * C347 +
            C2691 * C329 - C2692 * C310 - C2691 * C330 + C2684 * C346 +
            C2689 * C327 - C2690 * C309 - C2689 * C328 + C2683 * C345) *
               C153637 * C153898 +
           (C2693 * C317 - C2694 * C304 - C2693 * C318 + C153885 * C340 +
            C2691 * C319 - C2692 * C305 - C2691 * C320 + C2684 * C341 +
            C2689 * C321 - C2690 * C306 - C2689 * C322 + C2683 * C342) *
               C153637 * C153924 +
           (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
            C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
            C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
               C153637 * C153936) *
              C153537 * C153521 * C131 +
          ((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
            C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
            C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
               C153637 * C153936 +
           (C2689 * C319 - C2690 * C305 - C2689 * C320 + C2683 * C341 +
            C2691 * C317 - C2692 * C304 - C2691 * C318 + C2684 * C340 +
            C2693 * C315 - C2694 * C303 - C2693 * C316 + C153885 * C339) *
               C153637 * C153924 +
           (C2689 * C329 - C2690 * C310 - C2689 * C330 + C2683 * C346 +
            C2691 * C331 - C2692 * C311 - C2691 * C332 + C2684 * C347 +
            C2693 * C333 - C2694 * C312 - C2693 * C334 + C153885 * C348) *
               C153637 * C153898) *
              C153537 * C153521 * C132 -
          ((C2693 * C337 - C2694 * C314 - C2693 * C338 + C153885 * C350 +
            C2691 * C333 - C2692 * C312 - C2691 * C334 + C2684 * C348 +
            C2689 * C331 - C2690 * C311 - C2689 * C332 + C2683 * C347) *
               C153637 * C153898 +
           (C2693 * C335 - C2694 * C313 - C2693 * C336 + C153885 * C349 +
            C2691 * C315 - C2692 * C303 - C2691 * C316 + C2684 * C339 +
            C2689 * C317 - C2690 * C304 - C2689 * C318 + C2683 * C340) *
               C153637 * C153924 +
           (C2693 * C162 - C2694 * C149 - C2693 * C163 + C153885 * C173 +
            C2691 * C160 - C2692 * C148 - C2691 * C161 + C2684 * C172 +
            C2689 * C158 - C2690 * C147 - C2689 * C159 + C2683 * C171) *
               C153637 * C153936) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C153537 * C298 -
           ((C3044 + C3045 + C3046) * C153637 * C153898 +
            (C3043 + C3042 + C3041) * C153637 * C153924 +
            (C3040 + C3039 + C3038) * C153637 * C153936) *
               C153537 * C299 +
           (C3060 * C153936 + (C3046 + C3045 + C3044) * C153637 * C153924 +
            (C2689 * C2917 - C2690 * C2913 - C2689 * C2918 + C2683 * C2925 +
             C2691 * C2919 - C2692 * C2914 - C2691 * C2920 + C2684 * C2926 +
             C2693 * C2921 - C2694 * C2915 - C2693 * C2922 + C153885 * C2927) *
                C153637 * C153898) *
               C153537 * C300) *
              C301 +
          (((C3047 + C3048 + C3049) * C153637 * C153936 +
            (C3050 + C3051 + C3052) * C153637 * C153924 +
            (C3053 + C3054 + C3055) * C153637 * C153898) *
               C153537 * C299 -
           (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153637 * C153936) *
               C153537 * C298 -
           ((C2693 * C2923 - C2694 * C2916 - C2693 * C2924 + C153885 * C2928 +
             C2691 * C2921 - C2692 * C2915 - C2691 * C2922 + C2684 * C2927 +
             C2689 * C2919 - C2690 * C2914 - C2689 * C2920 + C2683 * C2926) *
                C153637 * C153898 +
            (C3055 + C3054 + C3053) * C153637 * C153924 + C3061 * C153936) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C473 -
           ((C2693 * C1765 - C2694 * C1758 - C2693 * C1766 + C153885 * C1773 +
             C2691 * C1767 - C2692 * C1759 - C2691 * C1768 + C2684 * C1774 +
             C2689 * C1769 - C2690 * C1760 - C2689 * C1770 + C2683 * C1775) *
                C153637 * C153898 +
            (C2693 * C955 - C2694 * C947 - C2693 * C956 + C153885 * C965 +
             C2691 * C953 - C2692 * C946 - C2691 * C954 + C2684 * C964 +
             C2689 * C951 - C2690 * C945 - C2689 * C952 + C2683 * C963) *
                C153637 * C153924 +
            (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
             C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
             C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                C153637 * C153936) *
               C474 +
           ((C2689 * C498 - C2690 * C481 - C2689 * C499 + C2683 * C517 +
             C2691 * C500 - C2692 * C482 - C2691 * C501 + C2684 * C518 +
             C2693 * C502 - C2694 * C483 - C2693 * C503 + C153885 * C519) *
                C153637 * C153936 +
            (C2689 * C1338 - C2690 * C1329 - C2689 * C1339 + C2683 * C1344 +
             C2691 * C1336 - C2692 * C1328 - C2691 * C1337 + C2684 * C1343 +
             C2693 * C1334 - C2694 * C1327 - C2693 * C1335 + C153885 * C1342) *
                C153637 * C153924 +
            (C2689 * C3283 - C2690 * C3279 - C2689 * C3284 + C2683 * C3291 +
             C2691 * C3285 - C2692 * C3280 - C2691 * C3286 + C2684 * C3292 +
             C2693 * C3287 - C2694 * C3281 - C2693 * C3288 + C153885 * C3293) *
                C153637 * C153898) *
               C475) *
              C153521 * C301 +
          (((C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515 +
             C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
             C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513) *
                C153637 * C153936 +
            (C2689 * C953 - C2690 * C946 - C2689 * C954 + C2683 * C964 +
             C2691 * C955 - C2692 * C947 - C2691 * C956 + C2684 * C965 +
             C2693 * C957 - C2694 * C948 - C2693 * C958 + C153885 * C966) *
                C153637 * C153924 +
            (C2689 * C1767 - C2690 * C1759 - C2689 * C1768 + C2683 * C1774 +
             C2691 * C1765 - C2692 * C1758 - C2691 * C1766 + C2684 * C1773 +
             C2693 * C1763 - C2694 * C1757 - C2693 * C1764 + C153885 * C1772) *
                C153637 * C153898) *
               C474 -
           (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153637 * C153936) *
               C473 -
           ((C2693 * C3289 - C2694 * C3282 - C2693 * C3290 + C153885 * C3294 +
             C2691 * C3287 - C2692 * C3281 - C2691 * C3288 + C2684 * C3293 +
             C2689 * C3285 - C2690 * C3280 - C2689 * C3286 + C2683 * C3292) *
                C153637 * C153898 +
            (C2693 * C1332 - C2694 * C1326 - C2693 * C1333 + C153885 * C1341 +
             C2691 * C1334 - C2692 * C1327 - C2691 * C1335 + C2684 * C1342 +
             C2689 * C1336 - C2690 * C1328 - C2689 * C1337 + C2683 * C1343) *
                C153637 * C153924 +
            (C2693 * C504 - C2694 * C484 - C2693 * C505 + C153885 * C520 +
             C2691 * C502 - C2692 * C483 - C2691 * C503 + C2684 * C519 +
             C2689 * C500 - C2690 * C482 - C2689 * C501 + C2683 * C518) *
                C153637 * C153936) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
            C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
            C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
               C153937 +
           (C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516 +
            C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
            C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514) *
               C153926 +
           (C2689 * C498 - C2690 * C481 - C2689 * C499 + C2683 * C517 +
            C2691 * C500 - C2692 * C482 - C2691 * C501 + C2684 * C518 +
            C2693 * C502 - C2694 * C483 - C2693 * C503 + C153885 * C519) *
               C153901) *
              C153625 * C153537 * C153521 * C130 -
          ((C2693 * C504 - C2694 * C484 - C2693 * C505 + C153885 * C520 +
            C2691 * C502 - C2692 * C483 - C2691 * C503 + C2684 * C519 +
            C2689 * C500 - C2690 * C482 - C2689 * C501 + C2683 * C518) *
               C153901 +
           (C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513 +
            C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
            C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515) *
               C153926 +
           (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
            C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
            C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
               C153937) *
              C153625 * C153537 * C153521 * C131 +
          ((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
            C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
            C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
               C153937 +
           (C2689 * C492 - C2690 * C478 - C2689 * C493 + C2683 * C514 +
            C2691 * C490 - C2692 * C477 - C2691 * C491 + C2684 * C513 +
            C2693 * C488 - C2694 * C476 - C2693 * C489 + C153885 * C512) *
               C153926 +
           (C2689 * C502 - C2690 * C483 - C2689 * C503 + C2683 * C519 +
            C2691 * C504 - C2692 * C484 - C2691 * C505 + C2684 * C520 +
            C2693 * C506 - C2694 * C485 - C2693 * C507 + C153885 * C521) *
               C153901) *
              C153625 * C153537 * C153521 * C132 -
          ((C2693 * C510 - C2694 * C487 - C2693 * C511 + C153885 * C523 +
            C2691 * C506 - C2692 * C485 - C2691 * C507 + C2684 * C521 +
            C2689 * C504 - C2690 * C484 - C2689 * C505 + C2683 * C520) *
               C153901 +
           (C2693 * C508 - C2694 * C486 - C2693 * C509 + C153885 * C522 +
            C2691 * C488 - C2692 * C476 - C2691 * C489 + C2684 * C512 +
            C2689 * C490 - C2690 * C477 - C2689 * C491 + C2683 * C513) *
               C153926 +
           (C2693 * C162 - C2694 * C149 - C2693 * C163 + C153885 * C173 +
            C2691 * C160 - C2692 * C148 - C2691 * C161 + C2684 * C172 +
            C2689 * C158 - C2690 * C147 - C2689 * C159 + C2683 * C171) *
               C153937) *
              C153625 * C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153937 +
            (C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516 +
             C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
             C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514) *
                C153926 +
            (C2689 * C498 - C2690 * C481 - C2689 * C499 + C2683 * C517 +
             C2691 * C500 - C2692 * C482 - C2691 * C501 + C2684 * C518 +
             C2693 * C502 - C2694 * C483 - C2693 * C503 + C153885 * C519) *
                C153901) *
               C153625 * C153537 * C298 -
           ((C4832 + C4831 + C4830) * C153901 +
            (C4155 + C4156 + C4157) * C153926 +
            (C3040 + C3039 + C3038) * C153937) *
               C153625 * C153537 * C299 +
           (C3058 * C153937 + (C4154 + C4153 + C4152) * C153926 +
            (C4833 + C4834 + C4835) * C153901) *
               C153625 * C153537 * C300) *
              C301 +
          (((C3047 + C3048 + C3049) * C153937 +
            (C4158 + C4159 + C4160) * C153926 +
            (C2689 * C1336 - C2690 * C1328 - C2689 * C1337 + C2683 * C1343 +
             C2691 * C1334 - C2692 * C1327 - C2691 * C1335 + C2684 * C1342 +
             C2693 * C1332 - C2694 * C1326 - C2693 * C1333 + C153885 * C1341) *
                C153901) *
               C153625 * C153537 * C299 -
           ((C2693 * C504 - C2694 * C484 - C2693 * C505 + C153885 * C520 +
             C2691 * C502 - C2692 * C483 - C2691 * C503 + C2684 * C519 +
             C2689 * C500 - C2690 * C482 - C2689 * C501 + C2683 * C518) *
                C153901 +
            (C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513 +
             C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
             C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515) *
                C153926 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153937) *
               C153625 * C153537 * C298 -
           ((C2693 * C3289 - C2694 * C3282 - C2693 * C3290 + C153885 * C3294 +
             C2691 * C3287 - C2692 * C3281 - C2691 * C3288 + C2684 * C3293 +
             C2689 * C3285 - C2690 * C3280 - C2689 * C3286 + C2683 * C3292) *
                C153901 +
            (C4163 + C4162 + C4161) * C153926 + C3059 * C153937) *
               C153625 * C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153937 +
            (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
               C153625 * C473 -
           ((C7645 + C7646 + C7647) * C153901 +
            (C7644 + C7643 + C7642) * C153926 +
            (C7641 + C7640 + C7639) * C153937) *
               C153625 * C474 +
           (C7659 * C153937 + (C7647 + C7646 + C7645) * C153926 +
            (C2689 * C7518 - C2690 * C7514 - C2689 * C7519 + C2683 * C7526 +
             C2691 * C7520 - C2692 * C7515 - C2691 * C7521 + C2684 * C7527 +
             C2693 * C7522 - C2694 * C7516 - C2693 * C7523 + C153885 * C7528) *
                C153901) *
               C153625 * C475) *
              C153521 * C301 +
          (((C7648 + C7649 + C7650) * C153937 +
            (C7651 + C7652 + C7653) * C153926 +
            (C7654 + C7655 + C7656) * C153901) *
               C153625 * C474 -
           (C7660 * C153901 + (C7650 + C7649 + C7648) * C153926 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153937) *
               C153625 * C473 -
           ((C2693 * C7524 - C2694 * C7517 - C2693 * C7525 + C153885 * C7529 +
             C2691 * C7522 - C2692 * C7516 - C2691 * C7523 + C2684 * C7528 +
             C2689 * C7520 - C2690 * C7515 - C2689 * C7521 + C2683 * C7527) *
                C153901 +
            (C7656 + C7655 + C7654) * C153926 + C7660 * C153937) *
               C153625 * C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
            C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
            C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
               C153637 * C23989 +
           (C23992 * C323 - C23993 * C307 - C23992 * C324 + C153933 * C343 +
            C23994 * C321 - C23995 * C306 - C23994 * C322 + C153914 * C342 +
            C23996 * C319 - C23997 * C305 - C23996 * C320 + C153885 * C341) *
               C153637 * C23990 +
           (C23992 * C325 - C23993 * C308 - C23992 * C326 + C153933 * C344 +
            C23994 * C327 - C23995 * C309 - C23994 * C328 + C153914 * C345 +
            C23996 * C329 - C23997 * C310 - C23996 * C330 + C153885 * C346) *
               C153637 * C153898) *
              C153537 * C153521 * C130 -
          ((C23996 * C331 - C23997 * C311 - C23996 * C332 + C153885 * C347 +
            C23994 * C329 - C23995 * C310 - C23994 * C330 + C153914 * C346 +
            C23992 * C327 - C23993 * C309 - C23992 * C328 + C153933 * C345) *
               C153637 * C153898 +
           (C23996 * C317 - C23997 * C304 - C23996 * C318 + C153885 * C340 +
            C23994 * C319 - C23995 * C305 - C23994 * C320 + C153914 * C341 +
            C23992 * C321 - C23993 * C306 - C23992 * C322 + C153933 * C342) *
               C153637 * C23990 +
           (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
            C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
            C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
               C153637 * C23989) *
              C153537 * C153521 * C131 +
          ((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
            C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
            C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
               C153637 * C23989 +
           (C23992 * C319 - C23993 * C305 - C23992 * C320 + C153933 * C341 +
            C23994 * C317 - C23995 * C304 - C23994 * C318 + C153914 * C340 +
            C23996 * C315 - C23997 * C303 - C23996 * C316 + C153885 * C339) *
               C153637 * C23990 +
           (C23992 * C329 - C23993 * C310 - C23992 * C330 + C153933 * C346 +
            C23994 * C331 - C23995 * C311 - C23994 * C332 + C153914 * C347 +
            C23996 * C333 - C23997 * C312 - C23996 * C334 + C153885 * C348) *
               C153637 * C153898) *
              C153537 * C153521 * C132 -
          ((C23996 * C337 - C23997 * C314 - C23996 * C338 + C153885 * C350 +
            C23994 * C333 - C23995 * C312 - C23994 * C334 + C153914 * C348 +
            C23992 * C331 - C23993 * C311 - C23992 * C332 + C153933 * C347) *
               C153637 * C153898 +
           (C23996 * C335 - C23997 * C313 - C23996 * C336 + C153885 * C349 +
            C23994 * C315 - C23995 * C303 - C23994 * C316 + C153914 * C339 +
            C23992 * C317 - C23993 * C304 - C23992 * C318 + C153933 * C340) *
               C153637 * C23990 +
           (C23996 * C162 - C23997 * C149 - C23996 * C163 + C153885 * C173 +
            C23994 * C160 - C23995 * C148 - C23994 * C161 + C153914 * C172 +
            C23992 * C158 - C23993 * C147 - C23992 * C159 + C153933 * C171) *
               C153637 * C23989) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153537 * C298 -
           ((C24331 + C24332 + C24333) * C153637 * C153898 +
            (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C153537 * C299 +
           (C24347 * C23989 + (C24333 + C24332 + C24331) * C153637 * C23990 +
            (C23992 * C2917 - C23993 * C2913 - C23992 * C2918 +
             C153933 * C2925 + C23994 * C2919 - C23995 * C2914 -
             C23994 * C2920 + C153914 * C2926 + C23996 * C2921 -
             C23997 * C2915 - C23996 * C2922 + C153885 * C2927) *
                C153637 * C153898) *
               C153537 * C300) *
              C301 +
          (((C24334 + C24335 + C24336) * C153637 * C23989 +
            (C24337 + C24338 + C24339) * C153637 * C23990 +
            (C24340 + C24341 + C24342) * C153637 * C153898) *
               C153537 * C299 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C153537 * C298 -
           ((C23996 * C2923 - C23997 * C2916 - C23996 * C2924 +
             C153885 * C2928 + C23994 * C2921 - C23995 * C2915 -
             C23994 * C2922 + C153914 * C2927 + C23992 * C2919 -
             C23993 * C2914 - C23992 * C2920 + C153933 * C2926) *
                C153637 * C153898 +
            (C24342 + C24341 + C24340) * C153637 * C23990 + C24348 * C23989) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C473 -
           ((C23996 * C1765 - C23997 * C1758 - C23996 * C1766 +
             C153885 * C1773 + C23994 * C1767 - C23995 * C1759 -
             C23994 * C1768 + C153914 * C1774 + C23992 * C1769 -
             C23993 * C1760 - C23992 * C1770 + C153933 * C1775) *
                C153637 * C153898 +
            (C23996 * C955 - C23997 * C947 - C23996 * C956 + C153885 * C965 +
             C23994 * C953 - C23995 * C946 - C23994 * C954 + C153914 * C964 +
             C23992 * C951 - C23993 * C945 - C23992 * C952 + C153933 * C963) *
                C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C474 +
           ((C23992 * C498 - C23993 * C481 - C23992 * C499 + C153933 * C517 +
             C23994 * C500 - C23995 * C482 - C23994 * C501 + C153914 * C518 +
             C23996 * C502 - C23997 * C483 - C23996 * C503 + C153885 * C519) *
                C153637 * C23989 +
            (C23992 * C1338 - C23993 * C1329 - C23992 * C1339 +
             C153933 * C1344 + C23994 * C1336 - C23995 * C1328 -
             C23994 * C1337 + C153914 * C1343 + C23996 * C1334 -
             C23997 * C1327 - C23996 * C1335 + C153885 * C1342) *
                C153637 * C23990 +
            (C23992 * C3283 - C23993 * C3279 - C23992 * C3284 +
             C153933 * C3291 + C23994 * C3285 - C23995 * C3280 -
             C23994 * C3286 + C153914 * C3292 + C23996 * C3287 -
             C23997 * C3281 - C23996 * C3288 + C153885 * C3293) *
                C153637 * C153898) *
               C475) *
              C153521 * C301 +
          (((C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515 +
             C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
             C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513) *
                C153637 * C23989 +
            (C23992 * C953 - C23993 * C946 - C23992 * C954 + C153933 * C964 +
             C23994 * C955 - C23995 * C947 - C23994 * C956 + C153914 * C965 +
             C23996 * C957 - C23997 * C948 - C23996 * C958 + C153885 * C966) *
                C153637 * C23990 +
            (C23992 * C1767 - C23993 * C1759 - C23992 * C1768 +
             C153933 * C1774 + C23994 * C1765 - C23995 * C1758 -
             C23994 * C1766 + C153914 * C1773 + C23996 * C1763 -
             C23997 * C1757 - C23996 * C1764 + C153885 * C1772) *
                C153637 * C153898) *
               C474 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C473 -
           ((C23996 * C3289 - C23997 * C3282 - C23996 * C3290 +
             C153885 * C3294 + C23994 * C3287 - C23995 * C3281 -
             C23994 * C3288 + C153914 * C3293 + C23992 * C3285 -
             C23993 * C3280 - C23992 * C3286 + C153933 * C3292) *
                C153637 * C153898 +
            (C23996 * C1332 - C23997 * C1326 - C23996 * C1333 +
             C153885 * C1341 + C23994 * C1334 - C23995 * C1327 -
             C23994 * C1335 + C153914 * C1342 + C23992 * C1336 -
             C23993 * C1328 - C23992 * C1337 + C153933 * C1343) *
                C153637 * C23990 +
            (C23996 * C504 - C23997 * C484 - C23996 * C505 + C153885 * C520 +
             C23994 * C502 - C23995 * C483 - C23994 * C503 + C153914 * C519 +
             C23992 * C500 - C23993 * C482 - C23992 * C501 + C153933 * C518) *
                C153637 * C23989) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
               C153637 * C28207 +
           (C28212 * C323 - C28213 * C307 - C28212 * C324 + C153462 * C343) *
               C153637 * C28208 +
           (C28212 * C325 - C28213 * C308 - C28212 * C326 + C153462 * C344) *
               C153637 * C28209 +
           (C28212 * C1196 - C28213 * C1187 - C28212 * C1197 +
            C153462 * C1202) *
               C153637 * C28210 +
           (C28212 * C2917 - C28213 * C2913 - C28212 * C2918 +
            C153462 * C2925) *
               C153637 * C28211) *
              C153537 * C153521 * C130 -
          ((C28212 * C2919 - C28213 * C2914 - C28212 * C2920 +
            C153462 * C2926) *
               C153637 * C28211 +
           (C28212 * C1194 - C28213 * C1186 - C28212 * C1195 +
            C153462 * C1201) *
               C153637 * C28210 +
           (C28212 * C327 - C28213 * C309 - C28212 * C328 + C153462 * C345) *
               C153637 * C28209 +
           (C28212 * C321 - C28213 * C306 - C28212 * C322 + C153462 * C342) *
               C153637 * C28208 +
           (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
               C153637 * C28207) *
              C153537 * C153521 * C131 +
          ((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
               C153637 * C28207 +
           (C28212 * C319 - C28213 * C305 - C28212 * C320 + C153462 * C341) *
               C153637 * C28208 +
           (C28212 * C329 - C28213 * C310 - C28212 * C330 + C153462 * C346) *
               C153637 * C28209 +
           (C28212 * C1192 - C28213 * C1185 - C28212 * C1193 +
            C153462 * C1200) *
               C153637 * C28210 +
           (C28212 * C2921 - C28213 * C2915 - C28212 * C2922 +
            C153462 * C2927) *
               C153637 * C28211) *
              C153537 * C153521 * C132 -
          ((C28212 * C2923 - C28213 * C2916 - C28212 * C2924 +
            C153462 * C2928) *
               C153637 * C28211 +
           (C28212 * C1190 - C28213 * C1184 - C28212 * C1191 +
            C153462 * C1199) *
               C153637 * C28210 +
           (C28212 * C331 - C28213 * C311 - C28212 * C332 + C153462 * C347) *
               C153637 * C28209 +
           (C28212 * C317 - C28213 * C304 - C28212 * C318 + C153462 * C340) *
               C153637 * C28208 +
           (C28212 * C158 - C28213 * C147 - C28212 * C159 + C153462 * C171) *
               C153637 * C28207) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153537 * C298 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C153537 * C299 +
           (C28416 * C28207 + C28417 * C28208 + C28418 * C28209 +
            C28419 * C28210 +
            (C28212 * C28338 - C28213 * C28336 - C28212 * C28339 +
             C153462 * C28342) *
                C153637 * C28211) *
               C153537 * C300) *
              C301 +
          ((C28420 * C28207 + C28421 * C28208 + C28422 * C28209 +
            C28423 * C28210 + C28424 * C28211) *
               C153537 * C299 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C153537 * C298 -
           ((C28212 * C28340 - C28213 * C28337 - C28212 * C28341 +
             C153462 * C28343) *
                C153637 * C28211 +
            C28424 * C28210 + C28423 * C28209 + C28422 * C28208 +
            C28421 * C28207) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C473 -
           ((C28212 * C5568 - C28213 * C5563 - C28212 * C5569 +
             C153462 * C5572) *
                C153637 * C28211 +
            (C28212 * C4067 - C28213 * C4063 - C28212 * C4068 +
             C153462 * C4075) *
                C153637 * C28210 +
            (C28212 * C1769 - C28213 * C1760 - C28212 * C1770 +
             C153462 * C1775) *
                C153637 * C28209 +
            (C28212 * C951 - C28213 * C945 - C28212 * C952 + C153462 * C963) *
                C153637 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C474 +
           ((C28212 * C498 - C28213 * C481 - C28212 * C499 + C153462 * C517) *
                C153637 * C28207 +
            (C28212 * C1338 - C28213 * C1329 - C28212 * C1339 +
             C153462 * C1344) *
                C153637 * C28208 +
            (C28212 * C3283 - C28213 * C3279 - C28212 * C3284 +
             C153462 * C3291) *
                C153637 * C28209 +
            (C28212 * C4788 - C28213 * C4783 - C28212 * C4789 +
             C153462 * C4792) *
                C153637 * C28210 +
            (C28212 * C28548 - C28213 * C28546 - C28212 * C28549 +
             C153462 * C28552) *
                C153637 * C28211) *
               C475) *
              C153521 * C301 +
          (((C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                C153637 * C28207 +
            (C28212 * C953 - C28213 * C946 - C28212 * C954 + C153462 * C964) *
                C153637 * C28208 +
            (C28212 * C1767 - C28213 * C1759 - C28212 * C1768 +
             C153462 * C1774) *
                C153637 * C28209 +
            (C28212 * C4069 - C28213 * C4064 - C28212 * C4070 +
             C153462 * C4076) *
                C153637 * C28210 +
            (C28212 * C5566 - C28213 * C5562 - C28212 * C5567 +
             C153462 * C5571) *
                C153637 * C28211) *
               C474 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C473 -
           ((C28212 * C28550 - C28213 * C28547 - C28212 * C28551 +
             C153462 * C28553) *
                C153637 * C28211 +
            (C28212 * C4786 - C28213 * C4782 - C28212 * C4787 +
             C153462 * C4791) *
                C153637 * C28210 +
            (C28212 * C3285 - C28213 * C3280 - C28212 * C3286 +
             C153462 * C3292) *
                C153637 * C28209 +
            (C28212 * C1336 - C28213 * C1328 - C28212 * C1337 +
             C153462 * C1343) *
                C153637 * C28208 +
            (C28212 * C500 - C28213 * C482 - C28212 * C501 + C153462 * C518) *
                C153637 * C28207) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153937 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153926 +
            (C28212 * C498 - C28213 * C481 - C28212 * C499 + C153462 * C517) *
                C153901) *
               C23989 +
           (C28405 * C153937 + C29052 * C153926 + C29431 * C153901) * C23990 +
           (C28406 * C153937 + C29051 * C153926 + C29432 * C153901) * C153898) *
              C153537 * C153521 * C130 -
          (((C28212 * C3285 - C28213 * C3280 - C28212 * C3286 +
             C153462 * C3292) *
                C153901 +
            C29054 * C153926 + C28411 * C153937) *
               C153898 +
           ((C28212 * C1336 - C28213 * C1328 - C28212 * C1337 +
             C153462 * C1343) *
                C153901 +
            C29053 * C153926 + C28410 * C153937) *
               C23990 +
           ((C28212 * C500 - C28213 * C482 - C28212 * C501 + C153462 * C518) *
                C153901 +
            (C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                C153926 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153937) *
               C23989) *
              C153537 * C153521 * C131 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C153937 +
            (C28212 * C492 - C28213 * C478 - C28212 * C493 + C153462 * C514) *
                C153926 +
            (C28212 * C502 - C28213 * C483 - C28212 * C503 + C153462 * C519) *
                C153901) *
               C23989 +
           (C28701 * C153937 +
            (C28212 * C955 - C28213 * C947 - C28212 * C956 + C153462 * C965) *
                C153926 +
            (C28212 * C1334 - C28213 * C1327 - C28212 * C1335 +
             C153462 * C1342) *
                C153901) *
               C23990 +
           (C28702 * C153937 +
            (C28212 * C1765 - C28213 * C1758 - C28212 * C1766 +
             C153462 * C1773) *
                C153926 +
            (C28212 * C3287 - C28213 * C3281 - C28212 * C3288 +
             C153462 * C3293) *
                C153901) *
               C153898) *
              C153537 * C153521 * C132 -
          (((C28212 * C3289 - C28213 * C3282 - C28212 * C3290 +
             C153462 * C3294) *
                C153901 +
            (C28212 * C1763 - C28213 * C1757 - C28212 * C1764 +
             C153462 * C1772) *
                C153926 +
            (C28212 * C331 - C28213 * C311 - C28212 * C332 + C153462 * C347) *
                C153937) *
               C153898 +
           ((C28212 * C1332 - C28213 * C1326 - C28212 * C1333 +
             C153462 * C1341) *
                C153901 +
            (C28212 * C957 - C28213 * C948 - C28212 * C958 + C153462 * C966) *
                C153926 +
            (C28212 * C317 - C28213 * C304 - C28212 * C318 + C153462 * C340) *
                C153937) *
               C23990 +
           ((C28212 * C504 - C28213 * C484 - C28212 * C505 + C153462 * C520) *
                C153901 +
            (C28212 * C490 - C28213 * C477 - C28212 * C491 + C153462 * C513) *
                C153926 +
            (C28212 * C158 - C28213 * C147 - C28212 * C159 + C153462 * C171) *
                C153937) *
               C23989) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153937 +
             (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                 C153926 +
             (C28212 * C498 - C28213 * C481 - C28212 * C499 + C153462 * C517) *
                 C153901) *
                C23989 +
            (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
               C153537 * C298 -
           ((C30967 + C30968 + C30969) * C153898 +
            (C30966 + C30965 + C30964) * C23990 +
            (C30963 + C30962 + C30961) * C23989) *
               C153537 * C299 +
           (C30993 * C23989 + (C30969 + C30968 + C30967) * C23990 +
            (C28408 * C153937 + C29049 * C153926 + C29434 * C153901) *
                C153898) *
               C153537 * C300) *
              C301 +
          (((C30970 + C30971 + C31000) * C23989 +
            (C30976 + C30977 + C31001) * C23990 +
            (C30982 + C30983 + C31002) * C153898) *
               C153537 * C299 -
           (C31003 * C153898 + (C31000 + C30971 + C30970) * C23990 +
            ((C28212 * C500 - C28213 * C482 - C28212 * C501 + C153462 * C518) *
                 C153901 +
             (C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                 C153926 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153937) *
                C23989) *
               C153537 * C298 -
           (((C28212 * C28550 - C28213 * C28547 - C28212 * C28551 +
              C153462 * C28553) *
                 C153901 +
             C29056 * C153926 + C28413 * C153937) *
                C153898 +
            (C31002 + C30983 + C30982) * C23990 + C31003 * C23989) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153937 +
             C31290 * C153926 + C31291 * C153901) *
                C23989 +
            (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
               C473 -
           ((C31292 * C153901 + C29432 * C153926 + C29051 * C153937) * C153898 +
            (C31293 * C153901 + C29431 * C153926 + C29052 * C153937) * C23990 +
            (C31294 * C153901 + C31291 * C153926 + C31290 * C153937) * C23989) *
               C474 +
           ((C31291 * C153937 + C31294 * C153926 +
             (C28212 * C7518 - C28213 * C7514 - C28212 * C7519 +
              C153462 * C7526) *
                 C153901) *
                C23989 +
            (C29431 * C153937 + C31293 * C153926 +
             (C28212 * C9042 - C28213 * C9037 - C28212 * C9043 +
              C153462 * C9046) *
                 C153901) *
                C23990 +
            (C29432 * C153937 + C31292 * C153926 +
             (C28212 * C31223 - C28213 * C31221 - C28212 * C31224 +
              C153462 * C31227) *
                 C153901) *
                C153898) *
               C475) *
              C153521 * C301 +
          (((C31295 * C153937 + C31296 * C153926 + C31297 * C153901) * C23989 +
            (C29053 * C153937 + C30997 * C153926 + C31298 * C153901) * C23990 +
            (C29054 * C153937 + C30998 * C153926 + C31299 * C153901) *
                C153898) *
               C474 -
           (C31003 * C153898 + (C31000 + C30971 + C30970) * C23990 +
            (C31296 * C153901 + C31295 * C153926 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153937) *
                C23989) *
               C473 -
           (((C28212 * C31225 - C28213 * C31222 - C28212 * C31226 +
              C153462 * C31228) *
                 C153901 +
             C31299 * C153926 + C30998 * C153937) *
                C153898 +
            ((C28212 * C9040 - C28213 * C9036 - C28212 * C9041 +
              C153462 * C9045) *
                 C153901 +
             C31298 * C153926 + C30997 * C153937) *
                C23990 +
            ((C28212 * C7520 - C28213 * C7515 - C28212 * C7521 +
              C153462 * C7527) *
                 C153901 +
             C31297 * C153926 + C31296 * C153937) *
                C23989) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[333] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C153849 -
           ((C2693 * C1765 - C2694 * C1758 - C2693 * C1766 + C153885 * C1773 +
             C2691 * C1767 - C2692 * C1759 - C2691 * C1768 + C2684 * C1774 +
             C2689 * C1769 - C2690 * C1760 - C2689 * C1770 + C2683 * C1775) *
                C153637 * C153898 +
            (C2693 * C955 - C2694 * C947 - C2693 * C956 + C153885 * C965 +
             C2691 * C953 - C2692 * C946 - C2691 * C954 + C2684 * C964 +
             C2689 * C951 - C2690 * C945 - C2689 * C952 + C2683 * C963) *
                C153637 * C153924 +
            (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
             C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
             C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                C153637 * C153936) *
               C153601) *
              C153521 * C153917 +
          (((C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515 +
             C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
             C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513) *
                C153637 * C153936 +
            (C2689 * C953 - C2690 * C946 - C2689 * C954 + C2683 * C964 +
             C2691 * C955 - C2692 * C947 - C2691 * C956 + C2684 * C965 +
             C2693 * C957 - C2694 * C948 - C2693 * C958 + C153885 * C966) *
                C153637 * C153924 +
            (C2689 * C1767 - C2690 * C1759 - C2689 * C1768 + C2683 * C1774 +
             C2691 * C1765 - C2692 * C1758 - C2691 * C1766 + C2684 * C1773 +
             C2693 * C1763 - C2694 * C1757 - C2693 * C1764 + C153885 * C1772) *
                C153637 * C153898) *
               C153601 -
           (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153637 * C153936) *
               C153849) *
              C153521 * C153918 +
          (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
             C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
             C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                C153637 * C153936 +
            (C3550 + C3551 + C3552) * C153637 * C153924 +
            (C3553 + C3554 + C3555) * C153637 * C153898) *
               C153849 -
           ((C2693 * C1761 - C2694 * C1756 - C2693 * C1762 + C153885 * C1771 +
             C2691 * C1763 - C2692 * C1757 - C2691 * C1764 + C2684 * C1772 +
             C2689 * C1765 - C2690 * C1758 - C2689 * C1766 + C2683 * C1773) *
                C153637 * C153898 +
            (C2693 * C959 - C2694 * C949 - C2693 * C960 + C153885 * C967 +
             C2691 * C957 - C2692 * C948 - C2691 * C958 + C2684 * C966 +
             C2689 * C955 - C2690 * C947 - C2689 * C956 + C2683 * C965) *
                C153637 * C153924 +
            (C2693 * C488 - C2694 * C476 - C2693 * C489 + C153885 * C512 +
             C2691 * C490 - C2692 * C477 - C2691 * C491 + C2684 * C513 +
             C2689 * C492 - C2690 * C478 - C2689 * C493 + C2683 * C514) *
                C153637 * C153936) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C153849 -
           (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
            C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
            C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
            C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
            C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
               C153637 * C153625 * C153601) *
              C153521 * C153917 +
          ((C134 * C494 - C135 * C479 - C134 * C495 + C121 * C515 +
            C136 * C492 - C137 * C478 - C136 * C493 + C122 * C514 +
            C138 * C490 - C139 * C477 - C138 * C491 + C123 * C513 +
            C140 * C488 - C141 * C476 - C140 * C489 + C124 * C512 +
            C142 * C508 - C143 * C486 - C142 * C509 + C125 * C522) *
               C153637 * C153625 * C153601 -
           (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
            C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
            C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
            C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
            C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
               C153637 * C153625 * C153849) *
              C153521 * C153918 +
          ((C134 * C156 - C135 * C146 - C134 * C157 + C121 * C170 +
            C136 * C158 - C137 * C147 - C136 * C159 + C122 * C171 +
            C138 * C160 - C139 * C148 - C138 * C161 + C123 * C172 +
            C140 * C162 - C141 * C149 - C140 * C163 + C124 * C173 +
            C142 * C164 - C143 * C150 - C142 * C165 + C125 * C174) *
               C153637 * C153625 * C153849 -
           (C142 * C780 - C143 * C779 - C142 * C781 + C125 * C782 +
            C140 * C508 - C141 * C486 - C140 * C509 + C124 * C522 +
            C138 * C488 - C139 * C476 - C138 * C489 + C123 * C512 +
            C136 * C490 - C137 * C477 - C136 * C491 + C122 * C513 +
            C134 * C492 - C135 * C478 - C134 * C493 + C121 * C514) *
               C153637 * C153625 * C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153937 +
            (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
               C153625 * C153849 -
           ((C7645 + C7646 + C7647) * C153901 +
            (C7644 + C7643 + C7642) * C153926 +
            (C7641 + C7640 + C7639) * C153937) *
               C153625 * C153601) *
              C153521 * C153917 +
          (((C7648 + C7649 + C7650) * C153937 +
            (C7651 + C7652 + C7653) * C153926 +
            (C7654 + C7655 + C7656) * C153901) *
               C153625 * C153601 -
           (C7660 * C153901 + (C7650 + C7649 + C7648) * C153926 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153937) *
               C153625 * C153849) *
              C153521 * C153918 +
          (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
             C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
             C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                C153937 +
            (C8133 + C8134 + C8135) * C153926 +
            (C8136 + C8137 + C8138) * C153901) *
               C153625 * C153849 -
           ((C2693 * C2113 - C2694 * C2108 - C2693 * C2114 + C153885 * C2123 +
             C2691 * C2115 - C2692 * C2109 - C2691 * C2116 + C2684 * C2124 +
             C2689 * C2117 - C2690 * C2110 - C2689 * C2118 + C2683 * C2125) *
                C153901 +
            (C8138 + C8137 + C8136) * C153926 +
            (C8135 + C8134 + C8133) * C153937) *
               C153625 * C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153849 -
           ((C23996 * C1765 - C23997 * C1758 - C23996 * C1766 +
             C153885 * C1773 + C23994 * C1767 - C23995 * C1759 -
             C23994 * C1768 + C153914 * C1774 + C23992 * C1769 -
             C23993 * C1760 - C23992 * C1770 + C153933 * C1775) *
                C153637 * C153898 +
            (C23996 * C955 - C23997 * C947 - C23996 * C956 + C153885 * C965 +
             C23994 * C953 - C23995 * C946 - C23994 * C954 + C153914 * C964 +
             C23992 * C951 - C23993 * C945 - C23992 * C952 + C153933 * C963) *
                C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C153601) *
              C153521 * C153917 +
          (((C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515 +
             C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
             C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513) *
                C153637 * C23989 +
            (C23992 * C953 - C23993 * C946 - C23992 * C954 + C153933 * C964 +
             C23994 * C955 - C23995 * C947 - C23994 * C956 + C153914 * C965 +
             C23996 * C957 - C23997 * C948 - C23996 * C958 + C153885 * C966) *
                C153637 * C23990 +
            (C23992 * C1767 - C23993 * C1759 - C23992 * C1768 +
             C153933 * C1774 + C23994 * C1765 - C23995 * C1758 -
             C23994 * C1766 + C153914 * C1773 + C23996 * C1763 -
             C23997 * C1757 - C23996 * C1764 + C153885 * C1772) *
                C153637 * C153898) *
               C153601 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C153849) *
              C153521 * C153918 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C153637 * C23989 +
            (C24821 + C24822 + C24823) * C153637 * C23990 +
            (C24824 + C24825 + C24826) * C153637 * C153898) *
               C153849 -
           ((C23996 * C1761 - C23997 * C1756 - C23996 * C1762 +
             C153885 * C1771 + C23994 * C1763 - C23995 * C1757 -
             C23994 * C1764 + C153914 * C1772 + C23992 * C1765 -
             C23993 * C1758 - C23992 * C1766 + C153933 * C1773) *
                C153637 * C153898 +
            (C23996 * C959 - C23997 * C949 - C23996 * C960 + C153885 * C967 +
             C23994 * C957 - C23995 * C948 - C23994 * C958 + C153914 * C966 +
             C23992 * C955 - C23993 * C947 - C23992 * C956 + C153933 * C965) *
                C153637 * C23990 +
            (C23996 * C488 - C23997 * C476 - C23996 * C489 + C153885 * C512 +
             C23994 * C490 - C23995 * C477 - C23994 * C491 + C153914 * C513 +
             C23992 * C492 - C23993 * C478 - C23992 * C493 + C153933 * C514) *
                C153637 * C23989) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153849 -
           ((C28212 * C5568 - C28213 * C5563 - C28212 * C5569 +
             C153462 * C5572) *
                C153637 * C28211 +
            (C28212 * C4067 - C28213 * C4063 - C28212 * C4068 +
             C153462 * C4075) *
                C153637 * C28210 +
            (C28212 * C1769 - C28213 * C1760 - C28212 * C1770 +
             C153462 * C1775) *
                C153637 * C28209 +
            (C28212 * C951 - C28213 * C945 - C28212 * C952 + C153462 * C963) *
                C153637 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C153601) *
              C153521 * C153917 +
          (((C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                C153637 * C28207 +
            (C28212 * C953 - C28213 * C946 - C28212 * C954 + C153462 * C964) *
                C153637 * C28208 +
            (C28212 * C1767 - C28213 * C1759 - C28212 * C1768 +
             C153462 * C1774) *
                C153637 * C28209 +
            (C28212 * C4069 - C28213 * C4064 - C28212 * C4070 +
             C153462 * C4076) *
                C153637 * C28210 +
            (C28212 * C5566 - C28213 * C5562 - C28212 * C5567 +
             C153462 * C5571) *
                C153637 * C28211) *
               C153601 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C153849) *
              C153521 * C153918 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C153637 * C28207 +
            C28705 * C28208 + C28706 * C28209 + C28707 * C28210 +
            C28708 * C28211) *
               C153849 -
           ((C28212 * C5564 - C28213 * C5561 - C28212 * C5565 +
             C153462 * C5570) *
                C153637 * C28211 +
            (C28212 * C4071 - C28213 * C4065 - C28212 * C4072 +
             C153462 * C4077) *
                C153637 * C28210 +
            (C28212 * C1765 - C28213 * C1758 - C28212 * C1766 +
             C153462 * C1773) *
                C153637 * C28209 +
            (C28212 * C955 - C28213 * C947 - C28212 * C956 + C153462 * C965) *
                C153637 * C28208 +
            (C28212 * C492 - C28213 * C478 - C28212 * C493 + C153462 * C514) *
                C153637 * C28207) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153937 +
             C31290 * C153926 + C31291 * C153901) *
                C23989 +
            (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
               C153849 -
           ((C31292 * C153901 + C29432 * C153926 + C29051 * C153937) * C153898 +
            (C31293 * C153901 + C29431 * C153926 + C29052 * C153937) * C23990 +
            (C31294 * C153901 + C31291 * C153926 + C31290 * C153937) * C23989) *
               C153601) *
              C153521 * C153917 +
          (((C31295 * C153937 + C31296 * C153926 + C31297 * C153901) * C23989 +
            (C29053 * C153937 + C30997 * C153926 + C31298 * C153901) * C23990 +
            (C29054 * C153937 + C30998 * C153926 + C31299 * C153901) *
                C153898) *
               C153601 -
           (C31003 * C153898 + (C31000 + C30971 + C30970) * C23990 +
            (C31296 * C153901 + C31295 * C153926 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153937) *
                C23989) *
               C153849) *
              C153521 * C153918 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C153937 +
             C31782 * C153926 + C31783 * C153901) *
                C23989 +
            (C31518 + C31548 + C31549) * C23990 +
            (C31527 + C31550 + C31551) * C153898) *
               C153849 -
           (((C28212 * C6185 - C28213 * C6179 - C28212 * C6186 +
              C153462 * C6197) *
                 C153901 +
             C31547 * C153926 + C31546 * C153937) *
                C153898 +
            ((C28212 * C6191 - C28213 * C6182 - C28212 * C6192 +
              C153462 * C6200) *
                 C153901 +
             C31545 * C153926 + C31544 * C153937) *
                C23990 +
            ((C28212 * C2117 - C28213 * C2110 - C28212 * C2118 +
              C153462 * C2125) *
                 C153901 +
             C31783 * C153926 + C31782 * C153937) *
                C23989) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q));
    d2ee[334] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C153537 * C298 -
           (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
            C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
            C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
            C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
            C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
               C153637 * C153625 * C153537 * C299 +
           (C134 * C325 - C135 * C308 - C134 * C326 + C121 * C344 +
            C136 * C327 - C137 * C309 - C136 * C328 + C122 * C345 +
            C138 * C329 - C139 * C310 - C138 * C330 + C123 * C346 +
            C140 * C331 - C141 * C311 - C140 * C332 + C124 * C347 +
            C142 * C333 - C143 * C312 - C142 * C334 + C125 * C348) *
               C153637 * C153625 * C153537 * C300) *
              C301 +
          ((C134 * C321 - C135 * C306 - C134 * C322 + C121 * C342 +
            C136 * C319 - C137 * C305 - C136 * C320 + C122 * C341 +
            C138 * C317 - C139 * C304 - C138 * C318 + C123 * C340 +
            C140 * C315 - C141 * C303 - C140 * C316 + C124 * C339 +
            C142 * C335 - C143 * C313 - C142 * C336 + C125 * C349) *
               C153637 * C153625 * C153537 * C299 -
           (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
            C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
            C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
            C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
            C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
               C153637 * C153625 * C153537 * C298 -
           (C142 * C337 - C143 * C314 - C142 * C338 + C125 * C350 +
            C140 * C333 - C141 * C312 - C140 * C334 + C124 * C348 +
            C138 * C331 - C139 * C311 - C138 * C332 + C123 * C347 +
            C136 * C329 - C137 * C310 - C136 * C330 + C122 * C346 +
            C134 * C327 - C135 * C309 - C134 * C328 + C121 * C345) *
               C153637 * C153625 * C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 + C136 * C154 -
           C137 * C145 - C136 * C155 + C122 * C169 + C138 * C156 - C139 * C146 -
           C138 * C157 + C123 * C170 + C140 * C158 - C141 * C147 - C140 * C159 +
           C124 * C171 + C142 * C160 - C143 * C148 - C142 * C161 +
           C125 * C172) *
              C153637 * C153625 * C153537 * C153521 * C130 -
          (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 + C140 * C160 -
           C141 * C148 - C140 * C161 + C124 * C172 + C138 * C158 - C139 * C147 -
           C138 * C159 + C123 * C171 + C136 * C156 - C137 * C146 - C136 * C157 +
           C122 * C170 + C134 * C154 - C135 * C145 - C134 * C155 +
           C121 * C169) *
              C153637 * C153625 * C153537 * C153521 * C131 +
          (C134 * C156 - C135 * C146 - C134 * C157 + C121 * C170 + C136 * C158 -
           C137 * C147 - C136 * C159 + C122 * C171 + C138 * C160 - C139 * C148 -
           C138 * C161 + C123 * C172 + C140 * C162 - C141 * C149 - C140 * C163 +
           C124 * C173 + C142 * C164 - C143 * C150 - C142 * C165 +
           C125 * C174) *
              C153637 * C153625 * C153537 * C153521 * C132 -
          (C142 * C166 - C143 * C151 - C142 * C167 + C125 * C175 + C140 * C164 -
           C141 * C150 - C140 * C165 + C124 * C174 + C138 * C162 - C139 * C149 -
           C138 * C163 + C123 * C173 + C136 * C160 - C137 * C148 - C136 * C161 +
           C122 * C172 + C134 * C158 - C135 * C147 - C134 * C159 +
           C121 * C171) *
              C153637 * C153625 * C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
            C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
            C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
               C153637 * C153936 +
           (C2689 * C323 - C2690 * C307 - C2689 * C324 + C2683 * C343 +
            C2691 * C321 - C2692 * C306 - C2691 * C322 + C2684 * C342 +
            C2693 * C319 - C2694 * C305 - C2693 * C320 + C153885 * C341) *
               C153637 * C153924 +
           (C2689 * C325 - C2690 * C308 - C2689 * C326 + C2683 * C344 +
            C2691 * C327 - C2692 * C309 - C2691 * C328 + C2684 * C345 +
            C2693 * C329 - C2694 * C310 - C2693 * C330 + C153885 * C346) *
               C153637 * C153898) *
              C153537 * C153521 * C130 -
          ((C2693 * C331 - C2694 * C311 - C2693 * C332 + C153885 * C347 +
            C2691 * C329 - C2692 * C310 - C2691 * C330 + C2684 * C346 +
            C2689 * C327 - C2690 * C309 - C2689 * C328 + C2683 * C345) *
               C153637 * C153898 +
           (C2693 * C317 - C2694 * C304 - C2693 * C318 + C153885 * C340 +
            C2691 * C319 - C2692 * C305 - C2691 * C320 + C2684 * C341 +
            C2689 * C321 - C2690 * C306 - C2689 * C322 + C2683 * C342) *
               C153637 * C153924 +
           (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
            C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
            C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
               C153637 * C153936) *
              C153537 * C153521 * C131 +
          ((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
            C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
            C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
               C153637 * C153936 +
           (C2689 * C319 - C2690 * C305 - C2689 * C320 + C2683 * C341 +
            C2691 * C317 - C2692 * C304 - C2691 * C318 + C2684 * C340 +
            C2693 * C315 - C2694 * C303 - C2693 * C316 + C153885 * C339) *
               C153637 * C153924 +
           (C2689 * C329 - C2690 * C310 - C2689 * C330 + C2683 * C346 +
            C2691 * C331 - C2692 * C311 - C2691 * C332 + C2684 * C347 +
            C2693 * C333 - C2694 * C312 - C2693 * C334 + C153885 * C348) *
               C153637 * C153898) *
              C153537 * C153521 * C132 -
          ((C2693 * C337 - C2694 * C314 - C2693 * C338 + C153885 * C350 +
            C2691 * C333 - C2692 * C312 - C2691 * C334 + C2684 * C348 +
            C2689 * C331 - C2690 * C311 - C2689 * C332 + C2683 * C347) *
               C153637 * C153898 +
           (C2693 * C335 - C2694 * C313 - C2693 * C336 + C153885 * C349 +
            C2691 * C315 - C2692 * C303 - C2691 * C316 + C2684 * C339 +
            C2689 * C317 - C2690 * C304 - C2689 * C318 + C2683 * C340) *
               C153637 * C153924 +
           (C2693 * C162 - C2694 * C149 - C2693 * C163 + C153885 * C173 +
            C2691 * C160 - C2692 * C148 - C2691 * C161 + C2684 * C172 +
            C2689 * C158 - C2690 * C147 - C2689 * C159 + C2683 * C171) *
               C153637 * C153936) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C153537 * C298 -
           ((C3044 + C3045 + C3046) * C153637 * C153898 +
            (C3043 + C3042 + C3041) * C153637 * C153924 +
            (C3040 + C3039 + C3038) * C153637 * C153936) *
               C153537 * C299 +
           (C3060 * C153936 + (C3046 + C3045 + C3044) * C153637 * C153924 +
            (C2689 * C2917 - C2690 * C2913 - C2689 * C2918 + C2683 * C2925 +
             C2691 * C2919 - C2692 * C2914 - C2691 * C2920 + C2684 * C2926 +
             C2693 * C2921 - C2694 * C2915 - C2693 * C2922 + C153885 * C2927) *
                C153637 * C153898) *
               C153537 * C300) *
              C301 +
          (((C3047 + C3048 + C3049) * C153637 * C153936 +
            (C3050 + C3051 + C3052) * C153637 * C153924 +
            (C3053 + C3054 + C3055) * C153637 * C153898) *
               C153537 * C299 -
           (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153637 * C153936) *
               C153537 * C298 -
           ((C2693 * C2923 - C2694 * C2916 - C2693 * C2924 + C153885 * C2928 +
             C2691 * C2921 - C2692 * C2915 - C2691 * C2922 + C2684 * C2927 +
             C2689 * C2919 - C2690 * C2914 - C2689 * C2920 + C2683 * C2926) *
                C153637 * C153898 +
            (C3055 + C3054 + C3053) * C153637 * C153924 + C3061 * C153936) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
            C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
            C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
               C153937 +
           (C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516 +
            C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
            C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514) *
               C153926 +
           (C2689 * C498 - C2690 * C481 - C2689 * C499 + C2683 * C517 +
            C2691 * C500 - C2692 * C482 - C2691 * C501 + C2684 * C518 +
            C2693 * C502 - C2694 * C483 - C2693 * C503 + C153885 * C519) *
               C153901) *
              C153625 * C153537 * C153521 * C130 -
          ((C2693 * C504 - C2694 * C484 - C2693 * C505 + C153885 * C520 +
            C2691 * C502 - C2692 * C483 - C2691 * C503 + C2684 * C519 +
            C2689 * C500 - C2690 * C482 - C2689 * C501 + C2683 * C518) *
               C153901 +
           (C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513 +
            C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
            C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515) *
               C153926 +
           (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
            C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
            C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
               C153937) *
              C153625 * C153537 * C153521 * C131 +
          ((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
            C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
            C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
               C153937 +
           (C2689 * C492 - C2690 * C478 - C2689 * C493 + C2683 * C514 +
            C2691 * C490 - C2692 * C477 - C2691 * C491 + C2684 * C513 +
            C2693 * C488 - C2694 * C476 - C2693 * C489 + C153885 * C512) *
               C153926 +
           (C2689 * C502 - C2690 * C483 - C2689 * C503 + C2683 * C519 +
            C2691 * C504 - C2692 * C484 - C2691 * C505 + C2684 * C520 +
            C2693 * C506 - C2694 * C485 - C2693 * C507 + C153885 * C521) *
               C153901) *
              C153625 * C153537 * C153521 * C132 -
          ((C2693 * C510 - C2694 * C487 - C2693 * C511 + C153885 * C523 +
            C2691 * C506 - C2692 * C485 - C2691 * C507 + C2684 * C521 +
            C2689 * C504 - C2690 * C484 - C2689 * C505 + C2683 * C520) *
               C153901 +
           (C2693 * C508 - C2694 * C486 - C2693 * C509 + C153885 * C522 +
            C2691 * C488 - C2692 * C476 - C2691 * C489 + C2684 * C512 +
            C2689 * C490 - C2690 * C477 - C2689 * C491 + C2683 * C513) *
               C153926 +
           (C2693 * C162 - C2694 * C149 - C2693 * C163 + C153885 * C173 +
            C2691 * C160 - C2692 * C148 - C2691 * C161 + C2684 * C172 +
            C2689 * C158 - C2690 * C147 - C2689 * C159 + C2683 * C171) *
               C153937) *
              C153625 * C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153937 +
            (C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516 +
             C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
             C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514) *
                C153926 +
            (C2689 * C498 - C2690 * C481 - C2689 * C499 + C2683 * C517 +
             C2691 * C500 - C2692 * C482 - C2691 * C501 + C2684 * C518 +
             C2693 * C502 - C2694 * C483 - C2693 * C503 + C153885 * C519) *
                C153901) *
               C153625 * C153537 * C298 -
           ((C4832 + C4831 + C4830) * C153901 +
            (C4155 + C4156 + C4157) * C153926 +
            (C3040 + C3039 + C3038) * C153937) *
               C153625 * C153537 * C299 +
           (C3058 * C153937 + (C4154 + C4153 + C4152) * C153926 +
            (C4833 + C4834 + C4835) * C153901) *
               C153625 * C153537 * C300) *
              C301 +
          (((C3047 + C3048 + C3049) * C153937 +
            (C4158 + C4159 + C4160) * C153926 +
            (C2689 * C1336 - C2690 * C1328 - C2689 * C1337 + C2683 * C1343 +
             C2691 * C1334 - C2692 * C1327 - C2691 * C1335 + C2684 * C1342 +
             C2693 * C1332 - C2694 * C1326 - C2693 * C1333 + C153885 * C1341) *
                C153901) *
               C153625 * C153537 * C299 -
           ((C2693 * C504 - C2694 * C484 - C2693 * C505 + C153885 * C520 +
             C2691 * C502 - C2692 * C483 - C2691 * C503 + C2684 * C519 +
             C2689 * C500 - C2690 * C482 - C2689 * C501 + C2683 * C518) *
                C153901 +
            (C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513 +
             C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
             C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515) *
                C153926 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153937) *
               C153625 * C153537 * C298 -
           ((C2693 * C3289 - C2694 * C3282 - C2693 * C3290 + C153885 * C3294 +
             C2691 * C3287 - C2692 * C3281 - C2691 * C3288 + C2684 * C3293 +
             C2689 * C3285 - C2690 * C3280 - C2689 * C3286 + C2683 * C3292) *
                C153901 +
            (C4163 + C4162 + C4161) * C153926 + C3059 * C153937) *
               C153625 * C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
            C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
            C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
               C153637 * C23989 +
           (C23992 * C323 - C23993 * C307 - C23992 * C324 + C153933 * C343 +
            C23994 * C321 - C23995 * C306 - C23994 * C322 + C153914 * C342 +
            C23996 * C319 - C23997 * C305 - C23996 * C320 + C153885 * C341) *
               C153637 * C23990 +
           (C23992 * C325 - C23993 * C308 - C23992 * C326 + C153933 * C344 +
            C23994 * C327 - C23995 * C309 - C23994 * C328 + C153914 * C345 +
            C23996 * C329 - C23997 * C310 - C23996 * C330 + C153885 * C346) *
               C153637 * C153898) *
              C153537 * C153521 * C130 -
          ((C23996 * C331 - C23997 * C311 - C23996 * C332 + C153885 * C347 +
            C23994 * C329 - C23995 * C310 - C23994 * C330 + C153914 * C346 +
            C23992 * C327 - C23993 * C309 - C23992 * C328 + C153933 * C345) *
               C153637 * C153898 +
           (C23996 * C317 - C23997 * C304 - C23996 * C318 + C153885 * C340 +
            C23994 * C319 - C23995 * C305 - C23994 * C320 + C153914 * C341 +
            C23992 * C321 - C23993 * C306 - C23992 * C322 + C153933 * C342) *
               C153637 * C23990 +
           (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
            C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
            C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
               C153637 * C23989) *
              C153537 * C153521 * C131 +
          ((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
            C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
            C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
               C153637 * C23989 +
           (C23992 * C319 - C23993 * C305 - C23992 * C320 + C153933 * C341 +
            C23994 * C317 - C23995 * C304 - C23994 * C318 + C153914 * C340 +
            C23996 * C315 - C23997 * C303 - C23996 * C316 + C153885 * C339) *
               C153637 * C23990 +
           (C23992 * C329 - C23993 * C310 - C23992 * C330 + C153933 * C346 +
            C23994 * C331 - C23995 * C311 - C23994 * C332 + C153914 * C347 +
            C23996 * C333 - C23997 * C312 - C23996 * C334 + C153885 * C348) *
               C153637 * C153898) *
              C153537 * C153521 * C132 -
          ((C23996 * C337 - C23997 * C314 - C23996 * C338 + C153885 * C350 +
            C23994 * C333 - C23995 * C312 - C23994 * C334 + C153914 * C348 +
            C23992 * C331 - C23993 * C311 - C23992 * C332 + C153933 * C347) *
               C153637 * C153898 +
           (C23996 * C335 - C23997 * C313 - C23996 * C336 + C153885 * C349 +
            C23994 * C315 - C23995 * C303 - C23994 * C316 + C153914 * C339 +
            C23992 * C317 - C23993 * C304 - C23992 * C318 + C153933 * C340) *
               C153637 * C23990 +
           (C23996 * C162 - C23997 * C149 - C23996 * C163 + C153885 * C173 +
            C23994 * C160 - C23995 * C148 - C23994 * C161 + C153914 * C172 +
            C23992 * C158 - C23993 * C147 - C23992 * C159 + C153933 * C171) *
               C153637 * C23989) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153537 * C298 -
           ((C24331 + C24332 + C24333) * C153637 * C153898 +
            (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C153537 * C299 +
           (C24347 * C23989 + (C24333 + C24332 + C24331) * C153637 * C23990 +
            (C23992 * C2917 - C23993 * C2913 - C23992 * C2918 +
             C153933 * C2925 + C23994 * C2919 - C23995 * C2914 -
             C23994 * C2920 + C153914 * C2926 + C23996 * C2921 -
             C23997 * C2915 - C23996 * C2922 + C153885 * C2927) *
                C153637 * C153898) *
               C153537 * C300) *
              C301 +
          (((C24334 + C24335 + C24336) * C153637 * C23989 +
            (C24337 + C24338 + C24339) * C153637 * C23990 +
            (C24340 + C24341 + C24342) * C153637 * C153898) *
               C153537 * C299 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C153537 * C298 -
           ((C23996 * C2923 - C23997 * C2916 - C23996 * C2924 +
             C153885 * C2928 + C23994 * C2921 - C23995 * C2915 -
             C23994 * C2922 + C153914 * C2927 + C23992 * C2919 -
             C23993 * C2914 - C23992 * C2920 + C153933 * C2926) *
                C153637 * C153898 +
            (C24342 + C24341 + C24340) * C153637 * C23990 + C24348 * C23989) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
               C153637 * C28207 +
           (C28212 * C323 - C28213 * C307 - C28212 * C324 + C153462 * C343) *
               C153637 * C28208 +
           (C28212 * C325 - C28213 * C308 - C28212 * C326 + C153462 * C344) *
               C153637 * C28209 +
           (C28212 * C1196 - C28213 * C1187 - C28212 * C1197 +
            C153462 * C1202) *
               C153637 * C28210 +
           (C28212 * C2917 - C28213 * C2913 - C28212 * C2918 +
            C153462 * C2925) *
               C153637 * C28211) *
              C153537 * C153521 * C130 -
          ((C28212 * C2919 - C28213 * C2914 - C28212 * C2920 +
            C153462 * C2926) *
               C153637 * C28211 +
           (C28212 * C1194 - C28213 * C1186 - C28212 * C1195 +
            C153462 * C1201) *
               C153637 * C28210 +
           (C28212 * C327 - C28213 * C309 - C28212 * C328 + C153462 * C345) *
               C153637 * C28209 +
           (C28212 * C321 - C28213 * C306 - C28212 * C322 + C153462 * C342) *
               C153637 * C28208 +
           (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
               C153637 * C28207) *
              C153537 * C153521 * C131 +
          ((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
               C153637 * C28207 +
           (C28212 * C319 - C28213 * C305 - C28212 * C320 + C153462 * C341) *
               C153637 * C28208 +
           (C28212 * C329 - C28213 * C310 - C28212 * C330 + C153462 * C346) *
               C153637 * C28209 +
           (C28212 * C1192 - C28213 * C1185 - C28212 * C1193 +
            C153462 * C1200) *
               C153637 * C28210 +
           (C28212 * C2921 - C28213 * C2915 - C28212 * C2922 +
            C153462 * C2927) *
               C153637 * C28211) *
              C153537 * C153521 * C132 -
          ((C28212 * C2923 - C28213 * C2916 - C28212 * C2924 +
            C153462 * C2928) *
               C153637 * C28211 +
           (C28212 * C1190 - C28213 * C1184 - C28212 * C1191 +
            C153462 * C1199) *
               C153637 * C28210 +
           (C28212 * C331 - C28213 * C311 - C28212 * C332 + C153462 * C347) *
               C153637 * C28209 +
           (C28212 * C317 - C28213 * C304 - C28212 * C318 + C153462 * C340) *
               C153637 * C28208 +
           (C28212 * C158 - C28213 * C147 - C28212 * C159 + C153462 * C171) *
               C153637 * C28207) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153537 * C298 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C153537 * C299 +
           (C28416 * C28207 + C28417 * C28208 + C28418 * C28209 +
            C28419 * C28210 +
            (C28212 * C28338 - C28213 * C28336 - C28212 * C28339 +
             C153462 * C28342) *
                C153637 * C28211) *
               C153537 * C300) *
              C301 +
          ((C28420 * C28207 + C28421 * C28208 + C28422 * C28209 +
            C28423 * C28210 + C28424 * C28211) *
               C153537 * C299 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C153537 * C298 -
           ((C28212 * C28340 - C28213 * C28337 - C28212 * C28341 +
             C153462 * C28343) *
                C153637 * C28211 +
            C28424 * C28210 + C28423 * C28209 + C28422 * C28208 +
            C28421 * C28207) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153937 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153926 +
            (C28212 * C498 - C28213 * C481 - C28212 * C499 + C153462 * C517) *
                C153901) *
               C23989 +
           (C28405 * C153937 + C29052 * C153926 + C29431 * C153901) * C23990 +
           (C28406 * C153937 + C29051 * C153926 + C29432 * C153901) * C153898) *
              C153537 * C153521 * C130 -
          (((C28212 * C3285 - C28213 * C3280 - C28212 * C3286 +
             C153462 * C3292) *
                C153901 +
            C29054 * C153926 + C28411 * C153937) *
               C153898 +
           ((C28212 * C1336 - C28213 * C1328 - C28212 * C1337 +
             C153462 * C1343) *
                C153901 +
            C29053 * C153926 + C28410 * C153937) *
               C23990 +
           ((C28212 * C500 - C28213 * C482 - C28212 * C501 + C153462 * C518) *
                C153901 +
            (C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                C153926 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153937) *
               C23989) *
              C153537 * C153521 * C131 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C153937 +
            (C28212 * C492 - C28213 * C478 - C28212 * C493 + C153462 * C514) *
                C153926 +
            (C28212 * C502 - C28213 * C483 - C28212 * C503 + C153462 * C519) *
                C153901) *
               C23989 +
           (C28701 * C153937 +
            (C28212 * C955 - C28213 * C947 - C28212 * C956 + C153462 * C965) *
                C153926 +
            (C28212 * C1334 - C28213 * C1327 - C28212 * C1335 +
             C153462 * C1342) *
                C153901) *
               C23990 +
           (C28702 * C153937 +
            (C28212 * C1765 - C28213 * C1758 - C28212 * C1766 +
             C153462 * C1773) *
                C153926 +
            (C28212 * C3287 - C28213 * C3281 - C28212 * C3288 +
             C153462 * C3293) *
                C153901) *
               C153898) *
              C153537 * C153521 * C132 -
          (((C28212 * C3289 - C28213 * C3282 - C28212 * C3290 +
             C153462 * C3294) *
                C153901 +
            (C28212 * C1763 - C28213 * C1757 - C28212 * C1764 +
             C153462 * C1772) *
                C153926 +
            (C28212 * C331 - C28213 * C311 - C28212 * C332 + C153462 * C347) *
                C153937) *
               C153898 +
           ((C28212 * C1332 - C28213 * C1326 - C28212 * C1333 +
             C153462 * C1341) *
                C153901 +
            (C28212 * C957 - C28213 * C948 - C28212 * C958 + C153462 * C966) *
                C153926 +
            (C28212 * C317 - C28213 * C304 - C28212 * C318 + C153462 * C340) *
                C153937) *
               C23990 +
           ((C28212 * C504 - C28213 * C484 - C28212 * C505 + C153462 * C520) *
                C153901 +
            (C28212 * C490 - C28213 * C477 - C28212 * C491 + C153462 * C513) *
                C153926 +
            (C28212 * C158 - C28213 * C147 - C28212 * C159 + C153462 * C171) *
                C153937) *
               C23989) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153937 +
             (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                 C153926 +
             (C28212 * C498 - C28213 * C481 - C28212 * C499 + C153462 * C517) *
                 C153901) *
                C23989 +
            (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
               C153537 * C298 -
           ((C30967 + C30968 + C30969) * C153898 +
            (C30966 + C30965 + C30964) * C23990 +
            (C30963 + C30962 + C30961) * C23989) *
               C153537 * C299 +
           (C30993 * C23989 + (C30969 + C30968 + C30967) * C23990 +
            (C28408 * C153937 + C29049 * C153926 + C29434 * C153901) *
                C153898) *
               C153537 * C300) *
              C301 +
          (((C30970 + C30971 + C31000) * C23989 +
            (C30976 + C30977 + C31001) * C23990 +
            (C30982 + C30983 + C31002) * C153898) *
               C153537 * C299 -
           (C31003 * C153898 + (C31000 + C30971 + C30970) * C23990 +
            ((C28212 * C500 - C28213 * C482 - C28212 * C501 + C153462 * C518) *
                 C153901 +
             (C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                 C153926 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153937) *
                C23989) *
               C153537 * C298 -
           (((C28212 * C28550 - C28213 * C28547 - C28212 * C28551 +
              C153462 * C28553) *
                 C153901 +
             C29056 * C153926 + C28413 * C153937) *
                C153898 +
            (C31002 + C30983 + C30982) * C23990 + C31003 * C23989) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[335] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C153537 * C153919 -
           (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
            (C3040 + C3039 + C3038) * C153637 * C153936) *
               C153537 * C153920 +
           (C3060 * C153936 + (C3046 + C3045 + C3044) * C153637 * C153924 +
            (C4561 + C4562 + C4563) * C153637 * C153898) *
               C153537 * C1469) *
              C153840 +
          (((C3047 + C3048 + C3049) * C153637 * C153936 +
            (C3050 + C3051 + C3052) * C153637 * C153924 +
            (C3053 + C3054 + C3055) * C153637 * C153898) *
               C153537 * C153920 -
           (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153637 * C153936) *
               C153537 * C153919 -
           ((C2693 * C2923 - C2694 * C2916 - C2693 * C2924 + C153885 * C2928 +
             C2691 * C2921 - C2692 * C2915 - C2691 * C2922 + C2684 * C2927 +
             C2689 * C2919 - C2690 * C2914 - C2689 * C2920 + C2683 * C2926) *
                C153637 * C153898 +
            (C3055 + C3054 + C3053) * C153637 * C153924 + C3061 * C153936) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C153537 * C153919 -
           (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
            C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
            C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
            C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
            C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
               C153637 * C153625 * C153537 * C153920 +
           (C134 * C325 - C135 * C308 - C134 * C326 + C121 * C344 +
            C136 * C327 - C137 * C309 - C136 * C328 + C122 * C345 +
            C138 * C329 - C139 * C310 - C138 * C330 + C123 * C346 +
            C140 * C331 - C141 * C311 - C140 * C332 + C124 * C347 +
            C142 * C333 - C143 * C312 - C142 * C334 + C125 * C348) *
               C153637 * C153625 * C153537 * C1469) *
              C153840 +
          ((C134 * C321 - C135 * C306 - C134 * C322 + C121 * C342 +
            C136 * C319 - C137 * C305 - C136 * C320 + C122 * C341 +
            C138 * C317 - C139 * C304 - C138 * C318 + C123 * C340 +
            C140 * C315 - C141 * C303 - C140 * C316 + C124 * C339 +
            C142 * C335 - C143 * C313 - C142 * C336 + C125 * C349) *
               C153637 * C153625 * C153537 * C153920 -
           (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
            C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
            C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
            C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
            C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
               C153637 * C153625 * C153537 * C153919 -
           (C142 * C337 - C143 * C314 - C142 * C338 + C125 * C350 +
            C140 * C333 - C141 * C312 - C140 * C334 + C124 * C348 +
            C138 * C331 - C139 * C311 - C138 * C332 + C123 * C347 +
            C136 * C329 - C137 * C310 - C136 * C330 + C122 * C346 +
            C134 * C327 - C135 * C309 - C134 * C328 + C121 * C345) *
               C153637 * C153625 * C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153937 +
            (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
               C153625 * C153537 * C153919 -
           (C9064 * C153901 + (C4155 + C4156 + C4157) * C153926 +
            (C3040 + C3039 + C3038) * C153937) *
               C153625 * C153537 * C153920 +
           (C3058 * C153937 + (C4154 + C4153 + C4152) * C153926 +
            (C4833 + C4834 + C4835) * C153901) *
               C153625 * C153537 * C1469) *
              C153840 +
          (((C3047 + C3048 + C3049) * C153937 +
            (C4158 + C4159 + C4160) * C153926 +
            (C8451 + C8452 + C8453) * C153901) *
               C153625 * C153537 * C153920 -
           (C7660 * C153901 + (C7650 + C7649 + C7648) * C153926 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153937) *
               C153625 * C153537 * C153919 -
           ((C2693 * C3289 - C2694 * C3282 - C2693 * C3290 + C153885 * C3294 +
             C2691 * C3287 - C2692 * C3281 - C2691 * C3288 + C2684 * C3293 +
             C2689 * C3285 - C2690 * C3280 - C2689 * C3286 + C2683 * C3292) *
                C153901 +
            (C4163 + C4162 + C4161) * C153926 + C3059 * C153937) *
               C153625 * C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153537 * C153919 -
           (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C153537 * C153920 +
           (C24347 * C23989 + (C24333 + C24332 + C24331) * C153637 * C23990 +
            (C25804 + C25805 + C25806) * C153637 * C153898) *
               C153537 * C1469) *
              C153840 +
          (((C24334 + C24335 + C24336) * C153637 * C23989 +
            (C24337 + C24338 + C24339) * C153637 * C23990 +
            (C24340 + C24341 + C24342) * C153637 * C153898) *
               C153537 * C153920 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C153537 * C153919 -
           ((C23996 * C2923 - C23997 * C2916 - C23996 * C2924 +
             C153885 * C2928 + C23994 * C2921 - C23995 * C2915 -
             C23994 * C2922 + C153914 * C2927 + C23992 * C2919 -
             C23993 * C2914 - C23992 * C2920 + C153933 * C2926) *
                C153637 * C153898 +
            (C24342 + C24341 + C24340) * C153637 * C23990 + C24348 * C23989) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153537 * C153919 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C153537 * C153920 +
           (C28416 * C28207 + C28417 * C28208 + C28418 * C28209 +
            C28419 * C28210 + C29280 * C28211) *
               C153537 * C1469) *
              C153840 +
          ((C28420 * C28207 + C28421 * C28208 + C28422 * C28209 +
            C28423 * C28210 + C28424 * C28211) *
               C153537 * C153920 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C153537 * C153919 -
           ((C28212 * C28340 - C28213 * C28337 - C28212 * C28341 +
             C153462 * C28343) *
                C153637 * C28211 +
            C28424 * C28210 + C28423 * C28209 + C28422 * C28208 +
            C28421 * C28207) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153937 +
             C31290 * C153926 + C31291 * C153901) *
                C23989 +
            (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
               C153537 * C153919 -
           (C32458 * C153898 + (C30966 + C30965 + C30964) * C23990 +
            (C30963 + C30962 + C30961) * C23989) *
               C153537 * C153920 +
           (C30993 * C23989 + (C30969 + C30968 + C30967) * C23990 +
            (C32455 + C32456 + C32457) * C153898) *
               C153537 * C1469) *
              C153840 +
          (((C30970 + C30971 + C31000) * C23989 +
            (C30976 + C30977 + C31001) * C23990 +
            (C30982 + C30983 + C31002) * C153898) *
               C153537 * C153920 -
           (C31003 * C153898 + (C31000 + C30971 + C30970) * C23990 +
            (C31296 * C153901 + C31295 * C153926 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153937) *
                C23989) *
               C153537 * C153919 -
           (((C28212 * C28550 - C28213 * C28547 - C28212 * C28551 +
              C153462 * C28553) *
                 C153901 +
             C29056 * C153926 + C28413 * C153937) *
                C153898 +
            (C31002 + C30983 + C30982) * C23990 + C31003 * C23989) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[336] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C153849 -
           (C5591 * C153898 + (C4155 + C4156 + C4157) * C153637 * C153924 +
            (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
             C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
             C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                C153637 * C153936) *
               C153601) *
              C153919 +
          (((C4157 + C4156 + C4155) * C153637 * C153936 +
            (C4154 + C4153 + C4152) * C153637 * C153924 +
            (C5595 + C5596 + C5597) * C153637 * C153898) *
               C153601 -
           (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
            (C3040 + C3039 + C3038) * C153637 * C153936) *
               C153849) *
              C153920 +
          ((C3060 * C153936 + (C3046 + C3045 + C3044) * C153637 * C153924 +
            (C4561 + C4562 + C4563) * C153637 * C153898) *
               C153849 -
           ((C2693 * C5564 - C2694 * C5561 - C2693 * C5565 + C153885 * C5570 +
             C2691 * C5566 - C2692 * C5562 - C2691 * C5567 + C2684 * C5571 +
             C2689 * C5568 - C2690 * C5563 - C2689 * C5569 + C2683 * C5572) *
                C153637 * C153898 +
            (C5597 + C5596 + C5595) * C153637 * C153924 + C5591 * C153936) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C153849 -
           (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
            C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
            C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
            C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
            C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
               C153637 * C153625 * C153601) *
              C153919 +
          ((C134 * C951 - C135 * C945 - C134 * C952 + C121 * C963 +
            C136 * C953 - C137 * C946 - C136 * C954 + C122 * C964 +
            C138 * C955 - C139 * C947 - C138 * C956 + C123 * C965 +
            C140 * C957 - C141 * C948 - C140 * C958 + C124 * C966 +
            C142 * C959 - C143 * C949 - C142 * C960 + C125 * C967) *
               C153637 * C153625 * C153601 -
           (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
            C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
            C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
            C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
            C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
               C153637 * C153625 * C153849) *
              C153920 +
          ((C134 * C325 - C135 * C308 - C134 * C326 + C121 * C344 +
            C136 * C327 - C137 * C309 - C136 * C328 + C122 * C345 +
            C138 * C329 - C139 * C310 - C138 * C330 + C123 * C346 +
            C140 * C331 - C141 * C311 - C140 * C332 + C124 * C347 +
            C142 * C333 - C143 * C312 - C142 * C334 + C125 * C348) *
               C153637 * C153625 * C153849 -
           (C142 * C1761 - C143 * C1756 - C142 * C1762 + C125 * C1771 +
            C140 * C1763 - C141 * C1757 - C140 * C1764 + C124 * C1772 +
            C138 * C1765 - C139 * C1758 - C138 * C1766 + C123 * C1773 +
            C136 * C1767 - C137 * C1759 - C136 * C1768 + C122 * C1774 +
            C134 * C1769 - C135 * C1760 - C134 * C1770 + C121 * C1775) *
               C153637 * C153625 * C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153937 +
            (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
               C153625 * C153849 -
           ((C7645 + C7646 + C7647) * C153901 +
            (C7644 + C7643 + C7642) * C153926 +
            (C7641 + C7640 + C7639) * C153937) *
               C153625 * C153601) *
              C153919 +
          (((C4157 + C4156 + C4155) * C153937 +
            (C4830 + C4831 + C4832) * C153926 +
            (C9068 + C9069 + C9070) * C153901) *
               C153625 * C153601 -
           (C9064 * C153901 + (C4155 + C4156 + C4157) * C153926 +
            (C3040 + C3039 + C3038) * C153937) *
               C153625 * C153849) *
              C153920 +
          ((C3058 * C153937 + (C4154 + C4153 + C4152) * C153926 +
            (C4833 + C4834 + C4835) * C153901) *
               C153625 * C153849 -
           ((C2693 * C6185 - C2694 * C6179 - C2693 * C6186 + C153885 * C6197 +
             C2691 * C6187 - C2692 * C6180 - C2691 * C6188 + C2684 * C6198 +
             C2689 * C6189 - C2690 * C6181 - C2689 * C6190 + C2683 * C6199) *
                C153901 +
            (C4835 + C4834 + C4833) * C153926 + C5587 * C153937) *
               C153625 * C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153849 -
           (C26810 * C153898 + (C25410 + C25411 + C25412) * C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C153601) *
              C153919 +
          (((C25412 + C25411 + C25410) * C153637 * C23989 +
            (C25409 + C25408 + C25407) * C153637 * C23990 +
            (C26814 + C26815 + C26816) * C153637 * C153898) *
               C153601 -
           (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C153849) *
              C153920 +
          ((C24347 * C23989 + (C24333 + C24332 + C24331) * C153637 * C23990 +
            (C25804 + C25805 + C25806) * C153637 * C153898) *
               C153849 -
           ((C23996 * C5564 - C23997 * C5561 - C23996 * C5565 +
             C153885 * C5570 + C23994 * C5566 - C23995 * C5562 -
             C23994 * C5567 + C153914 * C5571 + C23992 * C5568 -
             C23993 * C5563 - C23992 * C5569 + C153933 * C5572) *
                C153637 * C153898 +
            (C26816 + C26815 + C26814) * C153637 * C23990 + C26810 * C23989) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153849 -
           (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
            C29060 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C153601) *
              C153919 +
          ((C29060 * C28207 + C29059 * C28208 + C29058 * C28209 +
            C29057 * C28210 + C29856 * C28211) *
               C153601 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C153849) *
              C153920 +
          ((C28416 * C28207 + C28417 * C28208 + C28418 * C28209 +
            C28419 * C28210 + C29280 * C28211) *
               C153849 -
           ((C28212 * C29845 - C28213 * C29844 - C28212 * C29846 +
             C153462 * C29847) *
                C153637 * C28211 +
            C29856 * C28210 + C29057 * C28209 + C29058 * C28208 +
            C29059 * C28207) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153937 +
             C31290 * C153926 + C31291 * C153901) *
                C23989 +
            (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
               C153849 -
           (C33438 * C153898 + (C32081 + C32082 + C32083) * C23990 +
            (C31294 * C153901 + C31291 * C153926 + C31290 * C153937) * C23989) *
               C153601) *
              C153919 +
          (((C32083 + C32082 + C32081) * C23989 +
            (C32080 + C32079 + C32078) * C23990 +
            (C33435 + C33436 + C33437) * C153898) *
               C153601 -
           (C32458 * C153898 + (C30966 + C30965 + C30964) * C23990 +
            (C30963 + C30962 + C30961) * C23989) *
               C153849) *
              C153920 +
          ((C30993 * C23989 + (C30969 + C30968 + C30967) * C23990 +
            (C32455 + C32456 + C32457) * C153898) *
               C153849 -
           (((C28212 * C30184 - C28213 * C30182 - C28212 * C30185 +
              C153462 * C30188) *
                 C153901 +
             C29434 * C153926 + C29049 * C153937) *
                C153898 +
            (C33437 + C33436 + C33435) * C23990 + C33438 * C23989) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[337] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
                C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
                C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
                C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
                C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                   C153637 * C153625 * C153537 * C1091 -
               (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
                C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
                C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
                C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
                C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
                   C153637 * C153625 * C153537 * C153573) *
                  C1093 +
              ((C134 * C321 - C135 * C306 - C134 * C322 + C121 * C342 +
                C136 * C319 - C137 * C305 - C136 * C320 + C122 * C341 +
                C138 * C317 - C139 * C304 - C138 * C318 + C123 * C340 +
                C140 * C315 - C141 * C303 - C140 * C316 + C124 * C339 +
                C142 * C335 - C143 * C313 - C142 * C336 + C125 * C349) *
                   C153637 * C153625 * C153537 * C153573 -
               (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
                C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
                C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
                C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
                C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
                   C153637 * C153625 * C153537 * C1091) *
                  C1094 +
              ((C134 * C156 - C135 * C146 - C134 * C157 + C121 * C170 +
                C136 * C158 - C137 * C147 - C136 * C159 + C122 * C171 +
                C138 * C160 - C139 * C148 - C138 * C161 + C123 * C172 +
                C140 * C162 - C141 * C149 - C140 * C163 + C124 * C173 +
                C142 * C164 - C143 * C150 - C142 * C165 + C125 * C174) *
                   C153637 * C153625 * C153537 * C1091 -
               (C142 * C652 - C143 * C651 - C142 * C653 + C125 * C654 +
                C140 * C335 - C141 * C313 - C140 * C336 + C124 * C349 +
                C138 * C315 - C139 * C303 - C138 * C316 + C123 * C339 +
                C136 * C317 - C137 * C304 - C136 * C318 + C122 * C340 +
                C134 * C319 - C135 * C305 - C134 * C320 + C121 * C341) *
                   C153637 * C153625 * C153537 * C153573) *
                  C1095) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
               C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
               C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
               C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
               C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                  C153637 * C153625 * C153537 * C1178 -
              (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
               C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
               C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
               C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
               C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
                  C153637 * C153625 * C153537 * C1179 +
              (C134 * C325 - C135 * C308 - C134 * C326 + C121 * C344 +
               C136 * C327 - C137 * C309 - C136 * C328 + C122 * C345 +
               C138 * C329 - C139 * C310 - C138 * C330 + C123 * C346 +
               C140 * C331 - C141 * C311 - C140 * C332 + C124 * C347 +
               C142 * C333 - C143 * C312 - C142 * C334 + C125 * C348) *
                  C153637 * C153625 * C153537 * C1180 -
              (C142 * C1188 - C143 * C1183 - C142 * C1189 + C125 * C1198 +
               C140 * C1190 - C141 * C1184 - C140 * C1191 + C124 * C1199 +
               C138 * C1192 - C139 * C1185 - C138 * C1193 + C123 * C1200 +
               C136 * C1194 - C137 * C1186 - C136 * C1195 + C122 * C1201 +
               C134 * C1196 - C135 * C1187 - C134 * C1197 + C121 * C1202) *
                  C153637 * C153625 * C153537 * C1181) *
             C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C473 -
           (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
            C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
            C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
            C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
            C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
               C153637 * C153625 * C474 +
           (C134 * C498 - C135 * C481 - C134 * C499 + C121 * C517 +
            C136 * C500 - C137 * C482 - C136 * C501 + C122 * C518 +
            C138 * C502 - C139 * C483 - C138 * C503 + C123 * C519 +
            C140 * C504 - C141 * C484 - C140 * C505 + C124 * C520 +
            C142 * C506 - C143 * C485 - C142 * C507 + C125 * C521) *
               C153637 * C153625 * C475) *
              C1091 +
          ((C134 * C951 - C135 * C945 - C134 * C952 + C121 * C963 +
            C136 * C953 - C137 * C946 - C136 * C954 + C122 * C964 +
            C138 * C955 - C139 * C947 - C138 * C956 + C123 * C965 +
            C140 * C957 - C141 * C948 - C140 * C958 + C124 * C966 +
            C142 * C959 - C143 * C949 - C142 * C960 + C125 * C967) *
               C153637 * C153625 * C474 -
           (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
            C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
            C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
            C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
            C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
               C153637 * C153625 * C473 -
           (C142 * C1330 - C143 * C1325 - C142 * C1331 + C125 * C1340 +
            C140 * C1332 - C141 * C1326 - C140 * C1333 + C124 * C1341 +
            C138 * C1334 - C139 * C1327 - C138 * C1335 + C123 * C1342 +
            C136 * C1336 - C137 * C1328 - C136 * C1337 + C122 * C1343 +
            C134 * C1338 - C135 * C1329 - C134 * C1339 + C121 * C1344) *
               C153637 * C153625 * C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C153537 * C1091 -
           ((C3044 + C3045 + C3046) * C153637 * C153898 +
            (C3043 + C3042 + C3041) * C153637 * C153924 +
            (C3040 + C3039 + C3038) * C153637 * C153936) *
               C153537 * C153573) *
              C1093 +
          (((C3047 + C3048 + C3049) * C153637 * C153936 +
            (C3050 + C3051 + C3052) * C153637 * C153924 +
            (C3053 + C3054 + C3055) * C153637 * C153898) *
               C153537 * C153573 -
           (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153637 * C153936) *
               C153537 * C1091) *
              C1094 +
          (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
             C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
             C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                C153637 * C153936 +
            (C3550 + C3551 + C3552) * C153637 * C153924 +
            (C3553 + C3554 + C3555) * C153637 * C153898) *
               C153537 * C1091 -
           ((C2693 * C1188 - C2694 * C1183 - C2693 * C1189 + C153885 * C1198 +
             C2691 * C1190 - C2692 * C1184 - C2691 * C1191 + C2684 * C1199 +
             C2689 * C1192 - C2690 * C1185 - C2689 * C1193 + C2683 * C1200) *
                C153637 * C153898 +
            (C3555 + C3554 + C3553) * C153637 * C153924 +
            (C3552 + C3551 + C3550) * C153637 * C153936) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
            C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
            C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
               C153637 * C153936 +
           (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
              C153537 * C1178 -
          (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
           (C3040 + C3039 + C3038) * C153637 * C153936) *
              C153537 * C1179 +
          (C3060 * C153936 + (C3046 + C3045 + C3044) * C153637 * C153924 +
           (C4561 + C4562 + C4563) * C153637 * C153898) *
              C153537 * C1180 -
          ((C2693 * C4530 - C2694 * C4527 - C2693 * C4531 + C153885 * C4536 +
            C2691 * C4532 - C2692 * C4528 - C2691 * C4533 + C2684 * C4537 +
            C2689 * C4534 - C2690 * C4529 - C2689 * C4535 + C2683 * C4538) *
               C153637 * C153898 +
           (C4563 + C4562 + C4561) * C153637 * C153924 + C4557 * C153936) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C473 -
           ((C4152 + C4153 + C4154) * C153637 * C153898 +
            (C4155 + C4156 + C4157) * C153637 * C153924 +
            (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
             C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
             C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                C153637 * C153936) *
               C474 +
           ((C2689 * C498 - C2690 * C481 - C2689 * C499 + C2683 * C517 +
             C2691 * C500 - C2692 * C482 - C2691 * C501 + C2684 * C518 +
             C2693 * C502 - C2694 * C483 - C2693 * C503 + C153885 * C519) *
                C153637 * C153936 +
            (C4830 + C4831 + C4832) * C153637 * C153924 +
            (C4833 + C4834 + C4835) * C153637 * C153898) *
               C475) *
              C1091 +
          (((C4157 + C4156 + C4155) * C153637 * C153936 +
            (C4154 + C4153 + C4152) * C153637 * C153924 +
            (C2689 * C4067 - C2690 * C4063 - C2689 * C4068 + C2683 * C4075 +
             C2691 * C4069 - C2692 * C4064 - C2691 * C4070 + C2684 * C4076 +
             C2693 * C4071 - C2694 * C4065 - C2693 * C4072 + C153885 * C4077) *
                C153637 * C153898) *
               C474 -
           (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
            (C3040 + C3039 + C3038) * C153637 * C153936) *
               C473 -
           ((C2693 * C4784 - C2694 * C4781 - C2693 * C4785 + C153885 * C4790 +
             C2691 * C4786 - C2692 * C4782 - C2691 * C4787 + C2684 * C4791 +
             C2689 * C4788 - C2690 * C4783 - C2689 * C4789 + C2683 * C4792) *
                C153637 * C153898 +
            (C4835 + C4834 + C4833) * C153637 * C153924 +
            (C4832 + C4831 + C4830) * C153637 * C153936) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153937 +
            (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
               C153625 * C153537 * C1091 -
           ((C4832 + C4831 + C4830) * C153901 +
            (C4155 + C4156 + C4157) * C153926 +
            (C3040 + C3039 + C3038) * C153937) *
               C153625 * C153537 * C153573) *
              C1093 +
          (((C3047 + C3048 + C3049) * C153937 +
            (C4158 + C4159 + C4160) * C153926 +
            (C8451 + C8452 + C8453) * C153901) *
               C153625 * C153537 * C153573 -
           (C7660 * C153901 + (C7650 + C7649 + C7648) * C153926 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153937) *
               C153625 * C153537 * C1091) *
              C1094 +
          (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
             C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
             C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                C153937 +
            (C8133 + C8134 + C8135) * C153926 +
            (C8136 + C8137 + C8138) * C153901) *
               C153625 * C153537 * C1091 -
           ((C2693 * C1330 - C2694 * C1325 - C2693 * C1331 + C153885 * C1340 +
             C2691 * C1332 - C2692 * C1326 - C2691 * C1333 + C2684 * C1341 +
             C2689 * C1334 - C2690 * C1327 - C2689 * C1335 + C2683 * C1342) *
                C153901 +
            (C2693 * C959 - C2694 * C949 - C2693 * C960 + C153885 * C967 +
             C2691 * C957 - C2692 * C948 - C2691 * C958 + C2684 * C966 +
             C2689 * C955 - C2690 * C947 - C2689 * C956 + C2683 * C965) *
                C153926 +
            (C3552 + C3551 + C3550) * C153937) *
               C153625 * C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
            C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
            C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
               C153937 +
           (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
              C153625 * C153537 * C1178 -
          ((C4832 + C4831 + C4830) * C153901 +
           (C4155 + C4156 + C4157) * C153926 +
           (C3040 + C3039 + C3038) * C153937) *
              C153625 * C153537 * C1179 +
          (C3058 * C153937 + (C4154 + C4153 + C4152) * C153926 +
           (C4833 + C4834 + C4835) * C153901) *
              C153625 * C153537 * C1180 -
          ((C2693 * C4784 - C2694 * C4781 - C2693 * C4785 + C153885 * C4790 +
            C2691 * C4786 - C2692 * C4782 - C2691 * C4787 + C2684 * C4791 +
            C2689 * C4788 - C2690 * C4783 - C2689 * C4789 + C2683 * C4792) *
               C153901 +
           (C5597 + C5596 + C5595) * C153926 + C4553 * C153937) *
              C153625 * C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153937 +
            (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
               C153625 * C473 -
           ((C7645 + C7646 + C7647) * C153901 +
            (C7644 + C7643 + C7642) * C153926 +
            (C7641 + C7640 + C7639) * C153937) *
               C153625 * C474 +
           (C7659 * C153937 + (C7647 + C7646 + C7645) * C153926 +
            (C2689 * C7518 - C2690 * C7514 - C2689 * C7519 + C2683 * C7526 +
             C2691 * C7520 - C2692 * C7515 - C2691 * C7521 + C2684 * C7527 +
             C2693 * C7522 - C2694 * C7516 - C2693 * C7523 + C153885 * C7528) *
                C153901) *
               C153625 * C475) *
              C1091 +
          (((C4157 + C4156 + C4155) * C153937 +
            (C4830 + C4831 + C4832) * C153926 +
            (C9068 + C9069 + C9070) * C153901) *
               C153625 * C474 -
           (C9064 * C153901 + (C4155 + C4156 + C4157) * C153926 +
            (C3040 + C3039 + C3038) * C153937) *
               C153625 * C473 -
           ((C2693 * C9038 - C2694 * C9035 - C2693 * C9039 + C153885 * C9044 +
             C2691 * C9040 - C2692 * C9036 - C2691 * C9041 + C2684 * C9045 +
             C2689 * C9042 - C2690 * C9037 - C2689 * C9043 + C2683 * C9046) *
                C153901 +
            (C9070 + C9069 + C9068) * C153926 + C9064 * C153937) *
               C153625 * C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153537 * C1091 -
           ((C24331 + C24332 + C24333) * C153637 * C153898 +
            (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C153537 * C153573) *
              C1093 +
          (((C24334 + C24335 + C24336) * C153637 * C23989 +
            (C24337 + C24338 + C24339) * C153637 * C23990 +
            (C24340 + C24341 + C24342) * C153637 * C153898) *
               C153537 * C153573 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C153537 * C1091) *
              C1094 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C153637 * C23989 +
            (C24821 + C24822 + C24823) * C153637 * C23990 +
            (C24824 + C24825 + C24826) * C153637 * C153898) *
               C153537 * C1091 -
           ((C23996 * C1188 - C23997 * C1183 - C23996 * C1189 +
             C153885 * C1198 + C23994 * C1190 - C23995 * C1184 -
             C23994 * C1191 + C153914 * C1199 + C23992 * C1192 -
             C23993 * C1185 - C23992 * C1193 + C153933 * C1200) *
                C153637 * C153898 +
            (C24826 + C24825 + C24824) * C153637 * C23990 +
            (C24823 + C24822 + C24821) * C153637 * C23989) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
            C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
            C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
               C153637 * C23989 +
           (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
              C153537 * C1178 -
          (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
           (C24327 + C24326 + C24325) * C153637 * C23989) *
              C153537 * C1179 +
          (C24347 * C23989 + (C24333 + C24332 + C24331) * C153637 * C23990 +
           (C25804 + C25805 + C25806) * C153637 * C153898) *
              C153537 * C1180 -
          ((C23996 * C4530 - C23997 * C4527 - C23996 * C4531 + C153885 * C4536 +
            C23994 * C4532 - C23995 * C4528 - C23994 * C4533 + C153914 * C4537 +
            C23992 * C4534 - C23993 * C4529 - C23992 * C4535 +
            C153933 * C4538) *
               C153637 * C153898 +
           (C25806 + C25805 + C25804) * C153637 * C23990 + C25800 * C23989) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C473 -
           ((C25407 + C25408 + C25409) * C153637 * C153898 +
            (C25410 + C25411 + C25412) * C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C474 +
           ((C23992 * C498 - C23993 * C481 - C23992 * C499 + C153933 * C517 +
             C23994 * C500 - C23995 * C482 - C23994 * C501 + C153914 * C518 +
             C23996 * C502 - C23997 * C483 - C23996 * C503 + C153885 * C519) *
                C153637 * C23989 +
            (C26061 + C26062 + C26063) * C153637 * C23990 +
            (C26064 + C26065 + C26066) * C153637 * C153898) *
               C475) *
              C1091 +
          (((C25412 + C25411 + C25410) * C153637 * C23989 +
            (C25409 + C25408 + C25407) * C153637 * C23990 +
            (C23992 * C4067 - C23993 * C4063 - C23992 * C4068 +
             C153933 * C4075 + C23994 * C4069 - C23995 * C4064 -
             C23994 * C4070 + C153914 * C4076 + C23996 * C4071 -
             C23997 * C4065 - C23996 * C4072 + C153885 * C4077) *
                C153637 * C153898) *
               C474 -
           (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C473 -
           ((C23996 * C4784 - C23997 * C4781 - C23996 * C4785 +
             C153885 * C4790 + C23994 * C4786 - C23995 * C4782 -
             C23994 * C4787 + C153914 * C4791 + C23992 * C4788 -
             C23993 * C4783 - C23992 * C4789 + C153933 * C4792) *
                C153637 * C153898 +
            (C26066 + C26065 + C26064) * C153637 * C23990 +
            (C26063 + C26062 + C26061) * C153637 * C23989) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153537 * C1091 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C153537 * C153573) *
              C1093 +
          ((C28420 * C28207 + C28421 * C28208 + C28422 * C28209 +
            C28423 * C28210 + C28424 * C28211) *
               C153537 * C153573 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C153537 * C1091) *
              C1094 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C153637 * C28207 +
            C28705 * C28208 + C28706 * C28209 + C28707 * C28210 +
            C28708 * C28211) *
               C153537 * C1091 -
           ((C28212 * C4530 - C28213 * C4527 - C28212 * C4531 +
             C153462 * C4536) *
                C153637 * C28211 +
            C28708 * C28210 + C28707 * C28209 + C28706 * C28208 +
            C28705 * C28207) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
               C153637 * C28207 +
           C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
           C28418 * C28211) *
              C153537 * C1178 -
          (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
           C28416 * C28208 + C28415 * C28207) *
              C153537 * C1179 +
          (C28416 * C28207 + C28417 * C28208 + C28418 * C28209 +
           C28419 * C28210 + C29280 * C28211) *
              C153537 * C1180 -
          ((C28212 * C29269 - C28213 * C29268 - C28212 * C29270 +
            C153462 * C29271) *
               C153637 * C28211 +
           C29280 * C28210 + C28419 * C28209 + C28418 * C28208 +
           C28417 * C28207) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C473 -
           (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
            C29060 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C474 +
           ((C28212 * C498 - C28213 * C481 - C28212 * C499 + C153462 * C517) *
                C153637 * C28207 +
            C29435 * C28208 + C29436 * C28209 + C29437 * C28210 +
            C29438 * C28211) *
               C475) *
              C1091 +
          ((C29060 * C28207 + C29059 * C28208 + C29058 * C28209 +
            C29057 * C28210 +
            (C28212 * C28994 - C28213 * C28992 - C28212 * C28995 +
             C153462 * C28998) *
                C153637 * C28211) *
               C474 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C473 -
           ((C28212 * C29403 - C28213 * C29402 - C28212 * C29404 +
             C153462 * C29405) *
                C153637 * C28211 +
            C29438 * C28210 + C29437 * C28209 + C29436 * C28208 +
            C29435 * C28207) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153937 +
             C31290 * C153926 + C31291 * C153901) *
                C23989 +
            (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
               C153537 * C1091 -
           ((C30967 + C30968 + C30969) * C153898 +
            (C30966 + C30965 + C30964) * C23990 +
            (C30963 + C30962 + C30961) * C23989) *
               C153537 * C153573) *
              C1093 +
          (((C30970 + C30971 + C31000) * C23989 +
            (C30976 + C30977 + C31001) * C23990 +
            (C30982 + C30983 + C31002) * C153898) *
               C153537 * C153573 -
           (C31003 * C153898 + (C31000 + C30971 + C30970) * C23990 +
            (C31296 * C153901 + C31295 * C153926 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153937) *
                C23989) *
               C153537 * C1091) *
              C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C153937 +
             C31782 * C153926 + C31783 * C153901) *
                C23989 +
            (C31518 + C31548 + C31549) * C23990 +
            (C31527 + C31550 + C31551) * C153898) *
               C153537 * C1091 -
           (((C28212 * C4784 - C28213 * C4781 - C28212 * C4785 +
              C153462 * C4790) *
                 C153901 +
             (C28212 * C4071 - C28213 * C4065 - C28212 * C4072 +
              C153462 * C4077) *
                 C153926 +
             C28703 * C153937) *
                C153898 +
            (C31551 + C31550 + C31527) * C23990 +
            (C31549 + C31548 + C31518) * C23989) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153937 +
            C31290 * C153926 + C31291 * C153901) *
               C23989 +
           (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
              C153537 * C1178 -
          (C32458 * C153898 + (C30966 + C30965 + C30964) * C23990 +
           (C30963 + C30962 + C30961) * C23989) *
              C153537 * C1179 +
          (C30993 * C23989 + (C30969 + C30968 + C30967) * C23990 +
           (C32455 + C32456 + C32457) * C153898) *
              C153537 * C1180 -
          (((C28212 * C29403 - C28213 * C29402 - C28212 * C29404 +
             C153462 * C29405) *
                C153901 +
            C29855 * C153926 + C28409 * C153937) *
               C153898 +
           (C32457 + C32456 + C32455) * C23990 + C32458 * C23989) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153937 +
             C31290 * C153926 + C31291 * C153901) *
                C23989 +
            (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
               C473 -
           ((C32078 + C32079 + C32080) * C153898 +
            (C32081 + C32082 + C32083) * C23990 +
            (C31294 * C153901 + C31291 * C153926 + C31290 * C153937) * C23989) *
               C474 +
           ((C31291 * C153937 + C31294 * C153926 +
             (C28212 * C7518 - C28213 * C7514 - C28212 * C7519 +
              C153462 * C7526) *
                 C153901) *
                C23989 +
            (C32681 + C32682 + C32706) * C23990 +
            (C32687 + C32688 + C32707) * C153898) *
               C475) *
              C1091 +
          (((C32083 + C32082 + C32081) * C23989 +
            (C32080 + C32079 + C32078) * C23990 +
            (C29050 * C153937 + C29433 * C153926 + C32705 * C153901) *
                C153898) *
               C474 -
           (C32458 * C153898 + (C30966 + C30965 + C30964) * C23990 +
            (C30963 + C30962 + C30961) * C23989) *
               C473 -
           (((C28212 * C32677 - C28213 * C32676 - C28212 * C32678 +
              C153462 * C32679) *
                 C153901 +
             C32705 * C153926 + C29433 * C153937) *
                C153898 +
            (C32707 + C32688 + C32687) * C23990 +
            (C32706 + C32682 + C32681) * C23989) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[338] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153637 * C153936 +
             (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
                C153849 -
            ((C4152 + C4153 + C4154) * C153637 * C153898 +
             (C4155 + C4156 + C4157) * C153637 * C153924 +
             (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
              C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
              C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                 C153637 * C153936) *
                C153601) *
               C1091 +
           (((C4157 + C4156 + C4155) * C153637 * C153936 +
             (C4154 + C4153 + C4152) * C153637 * C153924 +
             (C2689 * C4067 - C2690 * C4063 - C2689 * C4068 + C2683 * C4075 +
              C2691 * C4069 - C2692 * C4064 - C2691 * C4070 + C2684 * C4076 +
              C2693 * C4071 - C2694 * C4065 - C2693 * C4072 + C153885 * C4077) *
                 C153637 * C153898) *
                C153601 -
            (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
             (C3040 + C3039 + C3038) * C153637 * C153936) *
                C153849) *
               C153573) *
              C153840 +
          ((((C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515 +
              C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
              C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513) *
                 C153637 * C153936 +
             (C4158 + C4159 + C4160) * C153637 * C153924 +
             (C4161 + C4162 + C4163) * C153637 * C153898) *
                C153601 -
            (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
             (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
              C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
              C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                 C153637 * C153936) *
                C153849) *
               C1091 +
           (((C3047 + C3048 + C3049) * C153637 * C153936 +
             (C3050 + C3051 + C3052) * C153637 * C153924 +
             (C3053 + C3054 + C3055) * C153637 * C153898) *
                C153849 -
            ((C2693 * C4073 - C2694 * C4066 - C2693 * C4074 + C153885 * C4078 +
              C2691 * C4071 - C2692 * C4065 - C2691 * C4072 + C2684 * C4077 +
              C2689 * C4069 - C2690 * C4064 - C2689 * C4070 + C2683 * C4076) *
                 C153637 * C153898 +
             (C4163 + C4162 + C4161) * C153637 * C153924 +
             (C4160 + C4159 + C4158) * C153637 * C153936) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
             C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
             C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
             C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
             C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                C153637 * C153625 * C153849 -
            (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
             C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
             C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
             C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
             C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
                C153637 * C153625 * C153601) *
               C1091 +
           ((C134 * C951 - C135 * C945 - C134 * C952 + C121 * C963 +
             C136 * C953 - C137 * C946 - C136 * C954 + C122 * C964 +
             C138 * C955 - C139 * C947 - C138 * C956 + C123 * C965 +
             C140 * C957 - C141 * C948 - C140 * C958 + C124 * C966 +
             C142 * C959 - C143 * C949 - C142 * C960 + C125 * C967) *
                C153637 * C153625 * C153601 -
            (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
             C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
             C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
             C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
             C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
                C153637 * C153625 * C153849) *
               C153573) *
              C153840 +
          (((C134 * C494 - C135 * C479 - C134 * C495 + C121 * C515 +
             C136 * C492 - C137 * C478 - C136 * C493 + C122 * C514 +
             C138 * C490 - C139 * C477 - C138 * C491 + C123 * C513 +
             C140 * C488 - C141 * C476 - C140 * C489 + C124 * C512 +
             C142 * C508 - C143 * C486 - C142 * C509 + C125 * C522) *
                C153637 * C153625 * C153601 -
            (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
             C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
             C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
             C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
             C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
                C153637 * C153625 * C153849) *
               C1091 +
           ((C134 * C321 - C135 * C306 - C134 * C322 + C121 * C342 +
             C136 * C319 - C137 * C305 - C136 * C320 + C122 * C341 +
             C138 * C317 - C139 * C304 - C138 * C318 + C123 * C340 +
             C140 * C315 - C141 * C303 - C140 * C316 + C124 * C339 +
             C142 * C335 - C143 * C313 - C142 * C336 + C125 * C349) *
                C153637 * C153625 * C153849 -
            (C142 * C961 - C143 * C950 - C142 * C962 + C125 * C968 +
             C140 * C959 - C141 * C949 - C140 * C960 + C124 * C967 +
             C138 * C957 - C139 * C948 - C138 * C958 + C123 * C966 +
             C136 * C955 - C137 * C947 - C136 * C956 + C122 * C965 +
             C134 * C953 - C135 * C946 - C134 * C954 + C121 * C964) *
                C153637 * C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153937 +
             (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
                C153625 * C153849 -
            ((C7645 + C7646 + C7647) * C153901 +
             (C7644 + C7643 + C7642) * C153926 +
             (C7641 + C7640 + C7639) * C153937) *
                C153625 * C153601) *
               C1091 +
           (((C4157 + C4156 + C4155) * C153937 +
             (C4830 + C4831 + C4832) * C153926 +
             (C9068 + C9069 + C9070) * C153901) *
                C153625 * C153601 -
            (C9064 * C153901 + (C4155 + C4156 + C4157) * C153926 +
             (C3040 + C3039 + C3038) * C153937) *
                C153625 * C153849) *
               C153573) *
              C153840 +
          ((((C7648 + C7649 + C7650) * C153937 +
             (C7651 + C7652 + C7653) * C153926 +
             (C7654 + C7655 + C7656) * C153901) *
                C153625 * C153601 -
            (C7660 * C153901 + (C7650 + C7649 + C7648) * C153926 +
             (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
              C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
              C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                 C153937) *
                C153625 * C153849) *
               C1091 +
           (((C3047 + C3048 + C3049) * C153937 +
             (C4158 + C4159 + C4160) * C153926 +
             (C8451 + C8452 + C8453) * C153901) *
                C153625 * C153849 -
            ((C2693 * C8429 - C2694 * C8428 - C2693 * C8430 + C153885 * C8431 +
              C2691 * C6191 - C2692 * C6182 - C2691 * C6192 + C2684 * C6200 +
              C2689 * C6193 - C2690 * C6183 - C2689 * C6194 + C2683 * C6201) *
                 C153901 +
             (C8453 + C8452 + C8451) * C153926 +
             (C4160 + C4159 + C4158) * C153937) *
                C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C153637 * C23989 +
             (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
                C153849 -
            ((C25407 + C25408 + C25409) * C153637 * C153898 +
             (C25410 + C25411 + C25412) * C153637 * C23990 +
             (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
              C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
              C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                 C153637 * C23989) *
                C153601) *
               C1091 +
           (((C25412 + C25411 + C25410) * C153637 * C23989 +
             (C25409 + C25408 + C25407) * C153637 * C23990 +
             (C23992 * C4067 - C23993 * C4063 - C23992 * C4068 +
              C153933 * C4075 + C23994 * C4069 - C23995 * C4064 -
              C23994 * C4070 + C153914 * C4076 + C23996 * C4071 -
              C23997 * C4065 - C23996 * C4072 + C153885 * C4077) *
                 C153637 * C153898) *
                C153601 -
            (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
             (C24327 + C24326 + C24325) * C153637 * C23989) *
                C153849) *
               C153573) *
              C153840 +
          ((((C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515 +
              C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
              C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513) *
                 C153637 * C23989 +
             (C25413 + C25414 + C25415) * C153637 * C23990 +
             (C25416 + C25417 + C25418) * C153637 * C153898) *
                C153601 -
            (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C153637 * C23989) *
                C153849) *
               C1091 +
           (((C24334 + C24335 + C24336) * C153637 * C23989 +
             (C24337 + C24338 + C24339) * C153637 * C23990 +
             (C24340 + C24341 + C24342) * C153637 * C153898) *
                C153849 -
            ((C23996 * C4073 - C23997 * C4066 - C23996 * C4074 +
              C153885 * C4078 + C23994 * C4071 - C23995 * C4065 -
              C23994 * C4072 + C153914 * C4077 + C23992 * C4069 -
              C23993 * C4064 - C23992 * C4070 + C153933 * C4076) *
                 C153637 * C153898 +
             (C25418 + C25417 + C25416) * C153637 * C23990 +
             (C25415 + C25414 + C25413) * C153637 * C23989) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153637 * C28207 +
             C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
             C28418 * C28211) *
                C153849 -
            (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
             C29060 * C28208 +
             (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                 C153637 * C28207) *
                C153601) *
               C1091 +
           ((C29060 * C28207 + C29059 * C28208 + C29058 * C28209 +
             C29057 * C28210 +
             (C28212 * C28994 - C28213 * C28992 - C28212 * C28995 +
              C153462 * C28998) *
                 C153637 * C28211) *
                C153601 -
            (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
             C28416 * C28208 + C28415 * C28207) *
                C153849) *
               C153573) *
              C153840 +
          ((((C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                 C153637 * C28207 +
             C29061 * C28208 + C29062 * C28209 + C29063 * C28210 +
             C29064 * C28211) *
                C153601 -
            (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
             C28420 * C28208 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153637 * C28207) *
                C153849) *
               C1091 +
           ((C28420 * C28207 + C28421 * C28208 + C28422 * C28209 +
             C28423 * C28210 + C28424 * C28211) *
                C153849 -
            ((C28212 * C28996 - C28213 * C28993 - C28212 * C28997 +
              C153462 * C28999) *
                 C153637 * C28211 +
             C29064 * C28210 + C29063 * C28209 + C29062 * C28208 +
             C29061 * C28207) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                  C153937 +
              C31290 * C153926 + C31291 * C153901) *
                 C23989 +
             (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
                C153849 -
            ((C32078 + C32079 + C32080) * C153898 +
             (C32081 + C32082 + C32083) * C23990 +
             (C31294 * C153901 + C31291 * C153926 + C31290 * C153937) *
                 C23989) *
                C153601) *
               C1091 +
           (((C32083 + C32082 + C32081) * C23989 +
             (C32080 + C32079 + C32078) * C23990 +
             (C29050 * C153937 + C29433 * C153926 + C32705 * C153901) *
                 C153898) *
                C153601 -
            (C32458 * C153898 + (C30966 + C30965 + C30964) * C23990 +
             (C30963 + C30962 + C30961) * C23989) *
                C153849) *
               C153573) *
              C153840 +
          ((((C31295 * C153937 + C31296 * C153926 + C31297 * C153901) * C23989 +
             (C32084 + C32085 + C32086) * C23990 +
             (C32087 + C32088 + C32089) * C153898) *
                C153601 -
            (C31003 * C153898 + (C31000 + C30971 + C30970) * C23990 +
             (C31296 * C153901 + C31295 * C153926 +
              (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                  C153937) *
                 C23989) *
                C153849) *
               C1091 +
           (((C30970 + C30971 + C31000) * C23989 +
             (C30976 + C30977 + C31001) * C23990 +
             (C30982 + C30983 + C31002) * C153898) *
                C153849 -
            (((C28212 * C32074 - C28213 * C32073 - C28212 * C32075 +
               C153462 * C32076) *
                  C153901 +
              C30999 * C153926 + C29055 * C153937) *
                 C153898 +
             (C32089 + C32088 + C32087) * C23990 +
             (C32086 + C32085 + C32084) * C23989) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[339] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 + C136 * C154 -
           C137 * C145 - C136 * C155 + C122 * C169 + C138 * C156 - C139 * C146 -
           C138 * C157 + C123 * C170 + C140 * C158 - C141 * C147 - C140 * C159 +
           C124 * C171 + C142 * C160 - C143 * C148 - C142 * C161 +
           C125 * C172) *
              C153637 * C153625 * C153537 * C1178 -
          (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 + C140 * C317 -
           C141 * C304 - C140 * C318 + C124 * C340 + C138 * C319 - C139 * C305 -
           C138 * C320 + C123 * C341 + C136 * C321 - C137 * C306 - C136 * C322 +
           C122 * C342 + C134 * C323 - C135 * C307 - C134 * C324 +
           C121 * C343) *
              C153637 * C153625 * C153537 * C1179 +
          (C134 * C325 - C135 * C308 - C134 * C326 + C121 * C344 + C136 * C327 -
           C137 * C309 - C136 * C328 + C122 * C345 + C138 * C329 - C139 * C310 -
           C138 * C330 + C123 * C346 + C140 * C331 - C141 * C311 - C140 * C332 +
           C124 * C347 + C142 * C333 - C143 * C312 - C142 * C334 +
           C125 * C348) *
              C153637 * C153625 * C153537 * C1180 -
          (C142 * C1188 - C143 * C1183 - C142 * C1189 + C125 * C1198 +
           C140 * C1190 - C141 * C1184 - C140 * C1191 + C124 * C1199 +
           C138 * C1192 - C139 * C1185 - C138 * C1193 + C123 * C1200 +
           C136 * C1194 - C137 * C1186 - C136 * C1195 + C122 * C1201 +
           C134 * C1196 - C135 * C1187 - C134 * C1197 + C121 * C1202) *
              C153637 * C153625 * C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C153537 * C1091 -
           (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
            C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
            C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
            C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
            C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
               C153637 * C153625 * C153537 * C153573) *
              C1093 +
          ((C134 * C321 - C135 * C306 - C134 * C322 + C121 * C342 +
            C136 * C319 - C137 * C305 - C136 * C320 + C122 * C341 +
            C138 * C317 - C139 * C304 - C138 * C318 + C123 * C340 +
            C140 * C315 - C141 * C303 - C140 * C316 + C124 * C339 +
            C142 * C335 - C143 * C313 - C142 * C336 + C125 * C349) *
               C153637 * C153625 * C153537 * C153573 -
           (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
            C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
            C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
            C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
            C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
               C153637 * C153625 * C153537 * C1091) *
              C1094 +
          ((C134 * C156 - C135 * C146 - C134 * C157 + C121 * C170 +
            C136 * C158 - C137 * C147 - C136 * C159 + C122 * C171 +
            C138 * C160 - C139 * C148 - C138 * C161 + C123 * C172 +
            C140 * C162 - C141 * C149 - C140 * C163 + C124 * C173 +
            C142 * C164 - C143 * C150 - C142 * C165 + C125 * C174) *
               C153637 * C153625 * C153537 * C1091 -
           (C142 * C652 - C143 * C651 - C142 * C653 + C125 * C654 +
            C140 * C335 - C141 * C313 - C140 * C336 + C124 * C349 +
            C138 * C315 - C139 * C303 - C138 * C316 + C123 * C339 +
            C136 * C317 - C137 * C304 - C136 * C318 + C122 * C340 +
            C134 * C319 - C135 * C305 - C134 * C320 + C121 * C341) *
               C153637 * C153625 * C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C153537 * C1091 -
           ((C3044 + C3045 + C3046) * C153637 * C153898 +
            (C3043 + C3042 + C3041) * C153637 * C153924 +
            (C3040 + C3039 + C3038) * C153637 * C153936) *
               C153537 * C153573) *
              C1093 +
          (((C3047 + C3048 + C3049) * C153637 * C153936 +
            (C3050 + C3051 + C3052) * C153637 * C153924 +
            (C3053 + C3054 + C3055) * C153637 * C153898) *
               C153537 * C153573 -
           (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153637 * C153936) *
               C153537 * C1091) *
              C1094 +
          (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
             C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
             C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                C153637 * C153936 +
            (C3550 + C3551 + C3552) * C153637 * C153924 +
            (C3553 + C3554 + C3555) * C153637 * C153898) *
               C153537 * C1091 -
           ((C2693 * C1188 - C2694 * C1183 - C2693 * C1189 + C153885 * C1198 +
             C2691 * C1190 - C2692 * C1184 - C2691 * C1191 + C2684 * C1199 +
             C2689 * C1192 - C2690 * C1185 - C2689 * C1193 + C2683 * C1200) *
                C153637 * C153898 +
            (C3555 + C3554 + C3553) * C153637 * C153924 +
            (C3552 + C3551 + C3550) * C153637 * C153936) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
            C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
            C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
               C153637 * C153936 +
           (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
              C153537 * C1178 -
          (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
           (C3040 + C3039 + C3038) * C153637 * C153936) *
              C153537 * C1179 +
          (C3060 * C153936 + (C3046 + C3045 + C3044) * C153637 * C153924 +
           (C4561 + C4562 + C4563) * C153637 * C153898) *
              C153537 * C1180 -
          ((C2693 * C4530 - C2694 * C4527 - C2693 * C4531 + C153885 * C4536 +
            C2691 * C4532 - C2692 * C4528 - C2691 * C4533 + C2684 * C4537 +
            C2689 * C4534 - C2690 * C4529 - C2689 * C4535 + C2683 * C4538) *
               C153637 * C153898 +
           (C4563 + C4562 + C4561) * C153637 * C153924 + C4557 * C153936) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153937 +
            (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
               C153625 * C153537 * C1091 -
           ((C4832 + C4831 + C4830) * C153901 +
            (C4155 + C4156 + C4157) * C153926 +
            (C3040 + C3039 + C3038) * C153937) *
               C153625 * C153537 * C153573) *
              C1093 +
          (((C3047 + C3048 + C3049) * C153937 +
            (C4158 + C4159 + C4160) * C153926 +
            (C8451 + C8452 + C8453) * C153901) *
               C153625 * C153537 * C153573 -
           (C7660 * C153901 + (C7650 + C7649 + C7648) * C153926 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153937) *
               C153625 * C153537 * C1091) *
              C1094 +
          (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
             C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
             C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                C153937 +
            (C8133 + C8134 + C8135) * C153926 +
            (C8136 + C8137 + C8138) * C153901) *
               C153625 * C153537 * C1091 -
           ((C2693 * C1330 - C2694 * C1325 - C2693 * C1331 + C153885 * C1340 +
             C2691 * C1332 - C2692 * C1326 - C2691 * C1333 + C2684 * C1341 +
             C2689 * C1334 - C2690 * C1327 - C2689 * C1335 + C2683 * C1342) *
                C153901 +
            (C2693 * C959 - C2694 * C949 - C2693 * C960 + C153885 * C967 +
             C2691 * C957 - C2692 * C948 - C2691 * C958 + C2684 * C966 +
             C2689 * C955 - C2690 * C947 - C2689 * C956 + C2683 * C965) *
                C153926 +
            (C3552 + C3551 + C3550) * C153937) *
               C153625 * C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
            C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
            C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
               C153937 +
           (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
              C153625 * C153537 * C1178 -
          ((C4832 + C4831 + C4830) * C153901 +
           (C4155 + C4156 + C4157) * C153926 +
           (C3040 + C3039 + C3038) * C153937) *
              C153625 * C153537 * C1179 +
          (C3058 * C153937 + (C4154 + C4153 + C4152) * C153926 +
           (C4833 + C4834 + C4835) * C153901) *
              C153625 * C153537 * C1180 -
          ((C2693 * C4784 - C2694 * C4781 - C2693 * C4785 + C153885 * C4790 +
            C2691 * C4786 - C2692 * C4782 - C2691 * C4787 + C2684 * C4791 +
            C2689 * C4788 - C2690 * C4783 - C2689 * C4789 + C2683 * C4792) *
               C153901 +
           (C5597 + C5596 + C5595) * C153926 + C4553 * C153937) *
              C153625 * C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153537 * C1091 -
           ((C24331 + C24332 + C24333) * C153637 * C153898 +
            (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C153537 * C153573) *
              C1093 +
          (((C24334 + C24335 + C24336) * C153637 * C23989 +
            (C24337 + C24338 + C24339) * C153637 * C23990 +
            (C24340 + C24341 + C24342) * C153637 * C153898) *
               C153537 * C153573 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C153537 * C1091) *
              C1094 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C153637 * C23989 +
            (C24821 + C24822 + C24823) * C153637 * C23990 +
            (C24824 + C24825 + C24826) * C153637 * C153898) *
               C153537 * C1091 -
           ((C23996 * C1188 - C23997 * C1183 - C23996 * C1189 +
             C153885 * C1198 + C23994 * C1190 - C23995 * C1184 -
             C23994 * C1191 + C153914 * C1199 + C23992 * C1192 -
             C23993 * C1185 - C23992 * C1193 + C153933 * C1200) *
                C153637 * C153898 +
            (C24826 + C24825 + C24824) * C153637 * C23990 +
            (C24823 + C24822 + C24821) * C153637 * C23989) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
            C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
            C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
               C153637 * C23989 +
           (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
              C153537 * C1178 -
          (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
           (C24327 + C24326 + C24325) * C153637 * C23989) *
              C153537 * C1179 +
          (C24347 * C23989 + (C24333 + C24332 + C24331) * C153637 * C23990 +
           (C25804 + C25805 + C25806) * C153637 * C153898) *
              C153537 * C1180 -
          ((C23996 * C4530 - C23997 * C4527 - C23996 * C4531 + C153885 * C4536 +
            C23994 * C4532 - C23995 * C4528 - C23994 * C4533 + C153914 * C4537 +
            C23992 * C4534 - C23993 * C4529 - C23992 * C4535 +
            C153933 * C4538) *
               C153637 * C153898 +
           (C25806 + C25805 + C25804) * C153637 * C23990 + C25800 * C23989) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153537 * C1091 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C153537 * C153573) *
              C1093 +
          ((C28420 * C28207 + C28421 * C28208 + C28422 * C28209 +
            C28423 * C28210 + C28424 * C28211) *
               C153537 * C153573 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C153537 * C1091) *
              C1094 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C153637 * C28207 +
            C28705 * C28208 + C28706 * C28209 + C28707 * C28210 +
            C28708 * C28211) *
               C153537 * C1091 -
           ((C28212 * C4530 - C28213 * C4527 - C28212 * C4531 +
             C153462 * C4536) *
                C153637 * C28211 +
            C28708 * C28210 + C28707 * C28209 + C28706 * C28208 +
            C28705 * C28207) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
               C153637 * C28207 +
           C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
           C28418 * C28211) *
              C153537 * C1178 -
          (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
           C28416 * C28208 + C28415 * C28207) *
              C153537 * C1179 +
          (C28416 * C28207 + C28417 * C28208 + C28418 * C28209 +
           C28419 * C28210 + C29280 * C28211) *
              C153537 * C1180 -
          ((C28212 * C29269 - C28213 * C29268 - C28212 * C29270 +
            C153462 * C29271) *
               C153637 * C28211 +
           C29280 * C28210 + C28419 * C28209 + C28418 * C28208 +
           C28417 * C28207) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153937 +
             C31290 * C153926 + C31291 * C153901) *
                C23989 +
            (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
               C153537 * C1091 -
           ((C30967 + C30968 + C30969) * C153898 +
            (C30966 + C30965 + C30964) * C23990 +
            (C30963 + C30962 + C30961) * C23989) *
               C153537 * C153573) *
              C1093 +
          (((C30970 + C30971 + C31000) * C23989 +
            (C30976 + C30977 + C31001) * C23990 +
            (C30982 + C30983 + C31002) * C153898) *
               C153537 * C153573 -
           (C31003 * C153898 + (C31000 + C30971 + C30970) * C23990 +
            (C31296 * C153901 + C31295 * C153926 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153937) *
                C23989) *
               C153537 * C1091) *
              C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C153937 +
             C31782 * C153926 + C31783 * C153901) *
                C23989 +
            (C31518 + C31548 + C31549) * C23990 +
            (C31527 + C31550 + C31551) * C153898) *
               C153537 * C1091 -
           (((C28212 * C4784 - C28213 * C4781 - C28212 * C4785 +
              C153462 * C4790) *
                 C153901 +
             (C28212 * C4071 - C28213 * C4065 - C28212 * C4072 +
              C153462 * C4077) *
                 C153926 +
             C28703 * C153937) *
                C153898 +
            (C31551 + C31550 + C31527) * C23990 +
            (C31549 + C31548 + C31518) * C23989) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153937 +
            C31290 * C153926 + C31291 * C153901) *
               C23989 +
           (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
              C153537 * C1178 -
          (C32458 * C153898 + (C30966 + C30965 + C30964) * C23990 +
           (C30963 + C30962 + C30961) * C23989) *
              C153537 * C1179 +
          (C30993 * C23989 + (C30969 + C30968 + C30967) * C23990 +
           (C32455 + C32456 + C32457) * C153898) *
              C153537 * C1180 -
          (((C28212 * C29403 - C28213 * C29402 - C28212 * C29404 +
             C153462 * C29405) *
                C153901 +
            C29855 * C153926 + C28409 * C153937) *
               C153898 +
           (C32457 + C32456 + C32455) * C23990 + C32458 * C23989) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[340] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153637 * C153936 +
             (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
                C1898 -
            (C5591 * C153898 + (C4155 + C4156 + C4157) * C153637 * C153924 +
             (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
              C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
              C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                 C153637 * C153936) *
                C153601) *
               C153848 +
           (((C4157 + C4156 + C4155) * C153637 * C153936 +
             (C4154 + C4153 + C4152) * C153637 * C153924 +
             (C5595 + C5596 + C5597) * C153637 * C153898) *
                C153601 -
            (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
             (C3040 + C3039 + C3038) * C153637 * C153936) *
                C1898) *
               C153573) *
              C153840 +
          ((((C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515 +
              C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
              C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513) *
                 C153637 * C153936 +
             (C4158 + C4159 + C4160) * C153637 * C153924 +
             (C4161 + C4162 + C4163) * C153637 * C153898) *
                C153601 -
            (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
             (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
              C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
              C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                 C153637 * C153936) *
                C1898) *
               C153848 +
           (((C3047 + C3048 + C3049) * C153637 * C153936 +
             (C3050 + C3051 + C3052) * C153637 * C153924 +
             (C3053 + C3054 + C3055) * C153637 * C153898) *
                C1898 -
            ((C2693 * C4073 - C2694 * C4066 - C2693 * C4074 + C153885 * C4078 +
              C2691 * C4071 - C2692 * C4065 - C2691 * C4072 + C2684 * C4077 +
              C2689 * C4069 - C2690 * C4064 - C2689 * C4070 + C2683 * C4076) *
                 C153637 * C153898 +
             (C4163 + C4162 + C4161) * C153637 * C153924 +
             (C4160 + C4159 + C4158) * C153637 * C153936) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
             C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
             C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
             C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
             C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                C153637 * C153625 * C1898 -
            (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
             C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
             C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
             C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
             C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
                C153637 * C153625 * C153601) *
               C153848 +
           ((C134 * C951 - C135 * C945 - C134 * C952 + C121 * C963 +
             C136 * C953 - C137 * C946 - C136 * C954 + C122 * C964 +
             C138 * C955 - C139 * C947 - C138 * C956 + C123 * C965 +
             C140 * C957 - C141 * C948 - C140 * C958 + C124 * C966 +
             C142 * C959 - C143 * C949 - C142 * C960 + C125 * C967) *
                C153637 * C153625 * C153601 -
            (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
             C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
             C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
             C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
             C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
                C153637 * C153625 * C1898) *
               C153573) *
              C153840 +
          (((C134 * C494 - C135 * C479 - C134 * C495 + C121 * C515 +
             C136 * C492 - C137 * C478 - C136 * C493 + C122 * C514 +
             C138 * C490 - C139 * C477 - C138 * C491 + C123 * C513 +
             C140 * C488 - C141 * C476 - C140 * C489 + C124 * C512 +
             C142 * C508 - C143 * C486 - C142 * C509 + C125 * C522) *
                C153637 * C153625 * C153601 -
            (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
             C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
             C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
             C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
             C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
                C153637 * C153625 * C1898) *
               C153848 +
           ((C134 * C321 - C135 * C306 - C134 * C322 + C121 * C342 +
             C136 * C319 - C137 * C305 - C136 * C320 + C122 * C341 +
             C138 * C317 - C139 * C304 - C138 * C318 + C123 * C340 +
             C140 * C315 - C141 * C303 - C140 * C316 + C124 * C339 +
             C142 * C335 - C143 * C313 - C142 * C336 + C125 * C349) *
                C153637 * C153625 * C1898 -
            (C142 * C961 - C143 * C950 - C142 * C962 + C125 * C968 +
             C140 * C959 - C141 * C949 - C140 * C960 + C124 * C967 +
             C138 * C957 - C139 * C948 - C138 * C958 + C123 * C966 +
             C136 * C955 - C137 * C947 - C136 * C956 + C122 * C965 +
             C134 * C953 - C135 * C946 - C134 * C954 + C121 * C964) *
                C153637 * C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153937 +
             (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
                C153625 * C1898 -
            (C10404 * C153901 + (C7644 + C7643 + C7642) * C153926 +
             (C7641 + C7640 + C7639) * C153937) *
                C153625 * C153601) *
               C153848 +
           (((C4157 + C4156 + C4155) * C153937 +
             (C4830 + C4831 + C4832) * C153926 +
             (C9068 + C9069 + C9070) * C153901) *
                C153625 * C153601 -
            (C9064 * C153901 + (C4155 + C4156 + C4157) * C153926 +
             (C3040 + C3039 + C3038) * C153937) *
                C153625 * C1898) *
               C153573) *
              C153840 +
          ((((C7648 + C7649 + C7650) * C153937 +
             (C7651 + C7652 + C7653) * C153926 +
             (C7654 + C7655 + C7656) * C153901) *
                C153625 * C153601 -
            (C7660 * C153901 + (C7650 + C7649 + C7648) * C153926 +
             (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
              C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
              C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                 C153937) *
                C153625 * C1898) *
               C153848 +
           (((C3047 + C3048 + C3049) * C153937 +
             (C4158 + C4159 + C4160) * C153926 +
             (C8451 + C8452 + C8453) * C153901) *
                C153625 * C1898 -
            ((C2693 * C8429 - C2694 * C8428 - C2693 * C8430 + C153885 * C8431 +
              C2691 * C6191 - C2692 * C6182 - C2691 * C6192 + C2684 * C6200 +
              C2689 * C6193 - C2690 * C6183 - C2689 * C6194 + C2683 * C6201) *
                 C153901 +
             (C8453 + C8452 + C8451) * C153926 +
             (C4160 + C4159 + C4158) * C153937) *
                C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C153637 * C23989 +
             (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
                C1898 -
            (C26810 * C153898 + (C25410 + C25411 + C25412) * C153637 * C23990 +
             (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
              C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
              C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                 C153637 * C23989) *
                C153601) *
               C153848 +
           (((C25412 + C25411 + C25410) * C153637 * C23989 +
             (C25409 + C25408 + C25407) * C153637 * C23990 +
             (C26814 + C26815 + C26816) * C153637 * C153898) *
                C153601 -
            (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
             (C24327 + C24326 + C24325) * C153637 * C23989) *
                C1898) *
               C153573) *
              C153840 +
          ((((C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515 +
              C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
              C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513) *
                 C153637 * C23989 +
             (C25413 + C25414 + C25415) * C153637 * C23990 +
             (C25416 + C25417 + C25418) * C153637 * C153898) *
                C153601 -
            (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C153637 * C23989) *
                C1898) *
               C153848 +
           (((C24334 + C24335 + C24336) * C153637 * C23989 +
             (C24337 + C24338 + C24339) * C153637 * C23990 +
             (C24340 + C24341 + C24342) * C153637 * C153898) *
                C1898 -
            ((C23996 * C4073 - C23997 * C4066 - C23996 * C4074 +
              C153885 * C4078 + C23994 * C4071 - C23995 * C4065 -
              C23994 * C4072 + C153914 * C4077 + C23992 * C4069 -
              C23993 * C4064 - C23992 * C4070 + C153933 * C4076) *
                 C153637 * C153898 +
             (C25418 + C25417 + C25416) * C153637 * C23990 +
             (C25415 + C25414 + C25413) * C153637 * C23989) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153637 * C28207 +
             C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
             C28418 * C28211) *
                C1898 -
            (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
             C29060 * C28208 +
             (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                 C153637 * C28207) *
                C153601) *
               C153848 +
           ((C29060 * C28207 + C29059 * C28208 + C29058 * C28209 +
             C29057 * C28210 + C29856 * C28211) *
                C153601 -
            (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
             C28416 * C28208 + C28415 * C28207) *
                C1898) *
               C153573) *
              C153840 +
          ((((C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                 C153637 * C28207 +
             C29061 * C28208 + C29062 * C28209 + C29063 * C28210 +
             C29064 * C28211) *
                C153601 -
            (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
             C28420 * C28208 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153637 * C28207) *
                C1898) *
               C153848 +
           ((C28420 * C28207 + C28421 * C28208 + C28422 * C28209 +
             C28423 * C28210 + C28424 * C28211) *
                C1898 -
            ((C28212 * C28996 - C28213 * C28993 - C28212 * C28997 +
              C153462 * C28999) *
                 C153637 * C28211 +
             C29064 * C28210 + C29063 * C28209 + C29062 * C28208 +
             C29061 * C28207) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                  C153937 +
              C31290 * C153926 + C31291 * C153901) *
                 C23989 +
             (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
                C1898 -
            (C33438 * C153898 + (C32081 + C32082 + C32083) * C23990 +
             (C31294 * C153901 + C31291 * C153926 + C31290 * C153937) *
                 C23989) *
                C153601) *
               C153848 +
           (((C32083 + C32082 + C32081) * C23989 +
             (C32080 + C32079 + C32078) * C23990 +
             (C33435 + C33436 + C33437) * C153898) *
                C153601 -
            (C32458 * C153898 + (C30966 + C30965 + C30964) * C23990 +
             (C30963 + C30962 + C30961) * C23989) *
                C1898) *
               C153573) *
              C153840 +
          ((((C31295 * C153937 + C31296 * C153926 + C31297 * C153901) * C23989 +
             (C32084 + C32085 + C32086) * C23990 +
             (C32087 + C32088 + C32089) * C153898) *
                C153601 -
            (C31003 * C153898 + (C31000 + C30971 + C30970) * C23990 +
             (C31296 * C153901 + C31295 * C153926 +
              (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                  C153937) *
                 C23989) *
                C1898) *
               C153848 +
           (((C30970 + C30971 + C31000) * C23989 +
             (C30976 + C30977 + C31001) * C23990 +
             (C30982 + C30983 + C31002) * C153898) *
                C1898 -
            (((C28212 * C32074 - C28213 * C32073 - C28212 * C32075 +
               C153462 * C32076) *
                  C153901 +
              C30999 * C153926 + C29055 * C153937) *
                 C153898 +
             (C32089 + C32088 + C32087) * C23990 +
             (C32086 + C32085 + C32084) * C23989) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[341] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C153921 -
           (C5591 * C153898 + (C4155 + C4156 + C4157) * C153637 * C153924 +
            (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
             C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
             C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                C153637 * C153936) *
               C153922 +
           ((C2689 * C498 - C2690 * C481 - C2689 * C499 + C2683 * C517 +
             C2691 * C500 - C2692 * C482 - C2691 * C501 + C2684 * C518 +
             C2693 * C502 - C2694 * C483 - C2693 * C503 + C153885 * C519) *
                C153637 * C153936 +
            (C4830 + C4831 + C4832) * C153637 * C153924 +
            (C4833 + C4834 + C4835) * C153637 * C153898) *
               C2414) *
              C153848 +
          (((C4157 + C4156 + C4155) * C153637 * C153936 +
            (C4154 + C4153 + C4152) * C153637 * C153924 +
            (C5595 + C5596 + C5597) * C153637 * C153898) *
               C153922 -
           (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
            (C3040 + C3039 + C3038) * C153637 * C153936) *
               C153921 -
           ((C2693 * C4784 - C2694 * C4781 - C2693 * C4785 + C153885 * C4790 +
             C2691 * C4786 - C2692 * C4782 - C2691 * C4787 + C2684 * C4791 +
             C2689 * C4788 - C2690 * C4783 - C2689 * C4789 + C2683 * C4792) *
                C153637 * C153898 +
            (C4835 + C4834 + C4833) * C153637 * C153924 +
            (C4832 + C4831 + C4830) * C153637 * C153936) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C153921 -
           (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
            C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
            C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
            C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
            C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
               C153637 * C153625 * C153922 +
           (C134 * C498 - C135 * C481 - C134 * C499 + C121 * C517 +
            C136 * C500 - C137 * C482 - C136 * C501 + C122 * C518 +
            C138 * C502 - C139 * C483 - C138 * C503 + C123 * C519 +
            C140 * C504 - C141 * C484 - C140 * C505 + C124 * C520 +
            C142 * C506 - C143 * C485 - C142 * C507 + C125 * C521) *
               C153637 * C153625 * C2414) *
              C153848 +
          ((C134 * C951 - C135 * C945 - C134 * C952 + C121 * C963 +
            C136 * C953 - C137 * C946 - C136 * C954 + C122 * C964 +
            C138 * C955 - C139 * C947 - C138 * C956 + C123 * C965 +
            C140 * C957 - C141 * C948 - C140 * C958 + C124 * C966 +
            C142 * C959 - C143 * C949 - C142 * C960 + C125 * C967) *
               C153637 * C153625 * C153922 -
           (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
            C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
            C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
            C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
            C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
               C153637 * C153625 * C153921 -
           (C142 * C1330 - C143 * C1325 - C142 * C1331 + C125 * C1340 +
            C140 * C1332 - C141 * C1326 - C140 * C1333 + C124 * C1341 +
            C138 * C1334 - C139 * C1327 - C138 * C1335 + C123 * C1342 +
            C136 * C1336 - C137 * C1328 - C136 * C1337 + C122 * C1343 +
            C134 * C1338 - C135 * C1329 - C134 * C1339 + C121 * C1344) *
               C153637 * C153625 * C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153937 +
            (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
               C153625 * C153921 -
           (C10404 * C153901 + (C7644 + C7643 + C7642) * C153926 +
            (C7641 + C7640 + C7639) * C153937) *
               C153625 * C153922 +
           (C7659 * C153937 + (C7647 + C7646 + C7645) * C153926 +
            (C10411 + C10412 + C10413) * C153901) *
               C153625 * C2414) *
              C153848 +
          (((C4157 + C4156 + C4155) * C153937 +
            (C4830 + C4831 + C4832) * C153926 +
            (C9068 + C9069 + C9070) * C153901) *
               C153625 * C153922 -
           (C9064 * C153901 + (C4155 + C4156 + C4157) * C153926 +
            (C3040 + C3039 + C3038) * C153937) *
               C153625 * C153921 -
           ((C2693 * C9038 - C2694 * C9035 - C2693 * C9039 + C153885 * C9044 +
             C2691 * C9040 - C2692 * C9036 - C2691 * C9041 + C2684 * C9045 +
             C2689 * C9042 - C2690 * C9037 - C2689 * C9043 + C2683 * C9046) *
                C153901 +
            (C9070 + C9069 + C9068) * C153926 + C9064 * C153937) *
               C153625 * C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153921 -
           (C26810 * C153898 + (C25410 + C25411 + C25412) * C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C153922 +
           ((C23992 * C498 - C23993 * C481 - C23992 * C499 + C153933 * C517 +
             C23994 * C500 - C23995 * C482 - C23994 * C501 + C153914 * C518 +
             C23996 * C502 - C23997 * C483 - C23996 * C503 + C153885 * C519) *
                C153637 * C23989 +
            (C26061 + C26062 + C26063) * C153637 * C23990 +
            (C26064 + C26065 + C26066) * C153637 * C153898) *
               C2414) *
              C153848 +
          (((C25412 + C25411 + C25410) * C153637 * C23989 +
            (C25409 + C25408 + C25407) * C153637 * C23990 +
            (C26814 + C26815 + C26816) * C153637 * C153898) *
               C153922 -
           (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C153921 -
           ((C23996 * C4784 - C23997 * C4781 - C23996 * C4785 +
             C153885 * C4790 + C23994 * C4786 - C23995 * C4782 -
             C23994 * C4787 + C153914 * C4791 + C23992 * C4788 -
             C23993 * C4783 - C23992 * C4789 + C153933 * C4792) *
                C153637 * C153898 +
            (C26066 + C26065 + C26064) * C153637 * C23990 +
            (C26063 + C26062 + C26061) * C153637 * C23989) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153921 -
           (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
            C29060 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C153922 +
           ((C28212 * C498 - C28213 * C481 - C28212 * C499 + C153462 * C517) *
                C153637 * C28207 +
            C29435 * C28208 + C29436 * C28209 + C29437 * C28210 +
            C29438 * C28211) *
               C2414) *
              C153848 +
          ((C29060 * C28207 + C29059 * C28208 + C29058 * C28209 +
            C29057 * C28210 + C29856 * C28211) *
               C153922 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C153921 -
           ((C28212 * C29403 - C28213 * C29402 - C28212 * C29404 +
             C153462 * C29405) *
                C153637 * C28211 +
            C29438 * C28210 + C29437 * C28209 + C29436 * C28208 +
            C29435 * C28207) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153937 +
             C31290 * C153926 + C31291 * C153901) *
                C23989 +
            (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
               C153921 -
           (C33438 * C153898 + (C32081 + C32082 + C32083) * C23990 +
            (C31294 * C153901 + C31291 * C153926 + C31290 * C153937) * C23989) *
               C153922 +
           ((C31291 * C153937 + C31294 * C153926 + C34035 * C153901) * C23989 +
            (C32681 + C32682 + C32706) * C23990 +
            (C32687 + C32688 + C32707) * C153898) *
               C2414) *
              C153848 +
          (((C32083 + C32082 + C32081) * C23989 +
            (C32080 + C32079 + C32078) * C23990 +
            (C33435 + C33436 + C33437) * C153898) *
               C153922 -
           (C32458 * C153898 + (C30966 + C30965 + C30964) * C23990 +
            (C30963 + C30962 + C30961) * C23989) *
               C153921 -
           (((C28212 * C32677 - C28213 * C32676 - C28212 * C32678 +
              C153462 * C32679) *
                 C153901 +
             C32705 * C153926 + C29433 * C153937) *
                C153898 +
            (C32707 + C32688 + C32687) * C23990 +
            (C32706 + C32682 + C32681) * C23989) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[342] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
                C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
                C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
                C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
                C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                   C153637 * C153625 * C1898 -
               (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
                C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
                C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
                C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
                C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
                   C153637 * C153625 * C153601) *
                  C153521 * C1093 +
              ((C134 * C494 - C135 * C479 - C134 * C495 + C121 * C515 +
                C136 * C492 - C137 * C478 - C136 * C493 + C122 * C514 +
                C138 * C490 - C139 * C477 - C138 * C491 + C123 * C513 +
                C140 * C488 - C141 * C476 - C140 * C489 + C124 * C512 +
                C142 * C508 - C143 * C486 - C142 * C509 + C125 * C522) *
                   C153637 * C153625 * C153601 -
               (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
                C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
                C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
                C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
                C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
                   C153637 * C153625 * C1898) *
                  C153521 * C1094 +
              ((C134 * C156 - C135 * C146 - C134 * C157 + C121 * C170 +
                C136 * C158 - C137 * C147 - C136 * C159 + C122 * C171 +
                C138 * C160 - C139 * C148 - C138 * C161 + C123 * C172 +
                C140 * C162 - C141 * C149 - C140 * C163 + C124 * C173 +
                C142 * C164 - C143 * C150 - C142 * C165 + C125 * C174) *
                   C153637 * C153625 * C1898 -
               (C142 * C780 - C143 * C779 - C142 * C781 + C125 * C782 +
                C140 * C508 - C141 * C486 - C140 * C509 + C124 * C522 +
                C138 * C488 - C139 * C476 - C138 * C489 + C123 * C512 +
                C136 * C490 - C137 * C477 - C136 * C491 + C122 * C513 +
                C134 * C492 - C135 * C478 - C134 * C493 + C121 * C514) *
                   C153637 * C153625 * C153601) *
                  C153521 * C1095) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
                C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
                C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
                C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
                C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                   C153637 * C153625 * C1898 -
               (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
                C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
                C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
                C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
                C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
                   C153637 * C153625 * C153601) *
                  C298 +
              ((C134 * C951 - C135 * C945 - C134 * C952 + C121 * C963 +
                C136 * C953 - C137 * C946 - C136 * C954 + C122 * C964 +
                C138 * C955 - C139 * C947 - C138 * C956 + C123 * C965 +
                C140 * C957 - C141 * C948 - C140 * C958 + C124 * C966 +
                C142 * C959 - C143 * C949 - C142 * C960 + C125 * C967) *
                   C153637 * C153625 * C153601 -
               (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
                C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
                C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
                C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
                C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
                   C153637 * C153625 * C1898) *
                  C299 +
              ((C134 * C325 - C135 * C308 - C134 * C326 + C121 * C344 +
                C136 * C327 - C137 * C309 - C136 * C328 + C122 * C345 +
                C138 * C329 - C139 * C310 - C138 * C330 + C123 * C346 +
                C140 * C331 - C141 * C311 - C140 * C332 + C124 * C347 +
                C142 * C333 - C143 * C312 - C142 * C334 + C125 * C348) *
                   C153637 * C153625 * C1898 -
               (C142 * C1761 - C143 * C1756 - C142 * C1762 + C125 * C1771 +
                C140 * C1763 - C141 * C1757 - C140 * C1764 + C124 * C1772 +
                C138 * C1765 - C139 * C1758 - C138 * C1766 + C123 * C1773 +
                C136 * C1767 - C137 * C1759 - C136 * C1768 + C122 * C1774 +
                C134 * C1769 - C135 * C1760 - C134 * C1770 + C121 * C1775) *
                   C153637 * C153625 * C153601) *
                  C300) *
             C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 + C136 * C154 -
           C137 * C145 - C136 * C155 + C122 * C169 + C138 * C156 - C139 * C146 -
           C138 * C157 + C123 * C170 + C140 * C158 - C141 * C147 - C140 * C159 +
           C124 * C171 + C142 * C160 - C143 * C148 - C142 * C161 +
           C125 * C172) *
              C153637 * C153625 * C2104 -
          (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 + C140 * C490 -
           C141 * C477 - C140 * C491 + C124 * C513 + C138 * C492 - C139 * C478 -
           C138 * C493 + C123 * C514 + C136 * C494 - C137 * C479 - C136 * C495 +
           C122 * C515 + C134 * C496 - C135 * C480 - C134 * C497 +
           C121 * C516) *
              C153637 * C153625 * C2105 +
          (C134 * C498 - C135 * C481 - C134 * C499 + C121 * C517 + C136 * C500 -
           C137 * C482 - C136 * C501 + C122 * C518 + C138 * C502 - C139 * C483 -
           C138 * C503 + C123 * C519 + C140 * C504 - C141 * C484 - C140 * C505 +
           C124 * C520 + C142 * C506 - C143 * C485 - C142 * C507 +
           C125 * C521) *
              C153637 * C153625 * C2106 -
          (C142 * C2113 - C143 * C2108 - C142 * C2114 + C125 * C2123 +
           C140 * C2115 - C141 * C2109 - C140 * C2116 + C124 * C2124 +
           C138 * C2117 - C139 * C2110 - C138 * C2118 + C123 * C2125 +
           C136 * C2119 - C137 * C2111 - C136 * C2120 + C122 * C2126 +
           C134 * C2121 - C135 * C2112 - C134 * C2122 + C121 * C2127) *
              C153637 * C153625 * C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C1898 -
           (C5591 * C153898 + (C4155 + C4156 + C4157) * C153637 * C153924 +
            (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
             C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
             C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                C153637 * C153936) *
               C153601) *
              C153521 * C1093 +
          (((C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515 +
             C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
             C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513) *
                C153637 * C153936 +
            (C4158 + C4159 + C4160) * C153637 * C153924 +
            (C4161 + C4162 + C4163) * C153637 * C153898) *
               C153601 -
           (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153637 * C153936) *
               C1898) *
              C153521 * C1094 +
          (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
             C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
             C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                C153637 * C153936 +
            (C3550 + C3551 + C3552) * C153637 * C153924 +
            (C3553 + C3554 + C3555) * C153637 * C153898) *
               C1898 -
           ((C2693 * C1761 - C2694 * C1756 - C2693 * C1762 + C153885 * C1771 +
             C2691 * C1763 - C2692 * C1757 - C2691 * C1764 + C2684 * C1772 +
             C2689 * C1765 - C2690 * C1758 - C2689 * C1766 + C2683 * C1773) *
                C153637 * C153898 +
            (C2693 * C959 - C2694 * C949 - C2693 * C960 + C153885 * C967 +
             C2691 * C957 - C2692 * C948 - C2691 * C958 + C2684 * C966 +
             C2689 * C955 - C2690 * C947 - C2689 * C956 + C2683 * C965) *
                C153637 * C153924 +
            (C2693 * C488 - C2694 * C476 - C2693 * C489 + C153885 * C512 +
             C2691 * C490 - C2692 * C477 - C2691 * C491 + C2684 * C513 +
             C2689 * C492 - C2690 * C478 - C2689 * C493 + C2683 * C514) *
                C153637 * C153936) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C1898 -
           (C5591 * C153898 + (C4155 + C4156 + C4157) * C153637 * C153924 +
            (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
             C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
             C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                C153637 * C153936) *
               C153601) *
              C298 +
          (((C4157 + C4156 + C4155) * C153637 * C153936 +
            (C4154 + C4153 + C4152) * C153637 * C153924 +
            (C5595 + C5596 + C5597) * C153637 * C153898) *
               C153601 -
           (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
            (C3040 + C3039 + C3038) * C153637 * C153936) *
               C1898) *
              C299 +
          ((C3060 * C153936 + (C3046 + C3045 + C3044) * C153637 * C153924 +
            (C4561 + C4562 + C4563) * C153637 * C153898) *
               C1898 -
           ((C2693 * C5564 - C2694 * C5561 - C2693 * C5565 + C153885 * C5570 +
             C2691 * C5566 - C2692 * C5562 - C2691 * C5567 + C2684 * C5571 +
             C2689 * C5568 - C2690 * C5563 - C2689 * C5569 + C2683 * C5572) *
                C153637 * C153898 +
            (C5597 + C5596 + C5595) * C153637 * C153924 + C5591 * C153936) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
            C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
            C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
               C153637 * C153936 +
           (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
              C2104 -
          (C5591 * C153898 + (C4155 + C4156 + C4157) * C153637 * C153924 +
           (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
            C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
            C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
               C153637 * C153936) *
              C2105 +
          ((C2689 * C498 - C2690 * C481 - C2689 * C499 + C2683 * C517 +
            C2691 * C500 - C2692 * C482 - C2691 * C501 + C2684 * C518 +
            C2693 * C502 - C2694 * C483 - C2693 * C503 + C153885 * C519) *
               C153637 * C153936 +
           (C4830 + C4831 + C4832) * C153637 * C153924 +
           (C4833 + C4834 + C4835) * C153637 * C153898) *
              C2106 -
          ((C2693 * C6185 - C2694 * C6179 - C2693 * C6186 + C153885 * C6197 +
            C2691 * C6187 - C2692 * C6180 - C2691 * C6188 + C2684 * C6198 +
            C2689 * C6189 - C2690 * C6181 - C2689 * C6190 + C2683 * C6199) *
               C153637 * C153898 +
           (C2693 * C6191 - C2694 * C6182 - C2693 * C6192 + C153885 * C6200 +
            C2691 * C6193 - C2692 * C6183 - C2691 * C6194 + C2684 * C6201 +
            C2689 * C6195 - C2690 * C6184 - C2689 * C6196 + C2683 * C6202) *
               C153637 * C153924 +
           (C2693 * C2117 - C2694 * C2110 - C2693 * C2118 + C153885 * C2125 +
            C2691 * C2119 - C2692 * C2111 - C2691 * C2120 + C2684 * C2126 +
            C2689 * C2121 - C2690 * C2112 - C2689 * C2122 + C2683 * C2127) *
               C153637 * C153936) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153937 +
            (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
               C153625 * C1898 -
           ((C7645 + C7646 + C7647) * C153901 +
            (C7644 + C7643 + C7642) * C153926 +
            (C7641 + C7640 + C7639) * C153937) *
               C153625 * C153601) *
              C153521 * C1093 +
          (((C7648 + C7649 + C7650) * C153937 +
            (C7651 + C7652 + C7653) * C153926 +
            (C7654 + C7655 + C7656) * C153901) *
               C153625 * C153601 -
           (C7660 * C153901 + (C7650 + C7649 + C7648) * C153926 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153937) *
               C153625 * C1898) *
              C153521 * C1094 +
          (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
             C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
             C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                C153937 +
            (C8133 + C8134 + C8135) * C153926 +
            (C8136 + C8137 + C8138) * C153901) *
               C153625 * C1898 -
           ((C2693 * C2113 - C2694 * C2108 - C2693 * C2114 + C153885 * C2123 +
             C2691 * C2115 - C2692 * C2109 - C2691 * C2116 + C2684 * C2124 +
             C2689 * C2117 - C2690 * C2110 - C2689 * C2118 + C2683 * C2125) *
                C153901 +
            (C8138 + C8137 + C8136) * C153926 +
            (C8135 + C8134 + C8133) * C153937) *
               C153625 * C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153937 +
            (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
               C153625 * C1898 -
           ((C7645 + C7646 + C7647) * C153901 +
            (C7644 + C7643 + C7642) * C153926 +
            (C7641 + C7640 + C7639) * C153937) *
               C153625 * C153601) *
              C298 +
          (((C4157 + C4156 + C4155) * C153937 +
            (C4830 + C4831 + C4832) * C153926 +
            (C9068 + C9069 + C9070) * C153901) *
               C153625 * C153601 -
           (C9064 * C153901 + (C4155 + C4156 + C4157) * C153926 +
            (C3040 + C3039 + C3038) * C153937) *
               C153625 * C1898) *
              C299 +
          ((C3058 * C153937 + (C4154 + C4153 + C4152) * C153926 +
            (C4833 + C4834 + C4835) * C153901) *
               C153625 * C1898 -
           ((C2693 * C6185 - C2694 * C6179 - C2693 * C6186 + C153885 * C6197 +
             C2691 * C6187 - C2692 * C6180 - C2691 * C6188 + C2684 * C6198 +
             C2689 * C6189 - C2690 * C6181 - C2689 * C6190 + C2683 * C6199) *
                C153901 +
            (C4835 + C4834 + C4833) * C153926 + C5587 * C153937) *
               C153625 * C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
            C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
            C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
               C153937 +
           (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
              C153625 * C2104 -
          (C10404 * C153901 + (C7644 + C7643 + C7642) * C153926 +
           (C7641 + C7640 + C7639) * C153937) *
              C153625 * C2105 +
          (C7659 * C153937 + (C7647 + C7646 + C7645) * C153926 +
           (C10411 + C10412 + C10413) * C153901) *
              C153625 * C2106 -
          ((C2693 * C10381 - C2694 * C10378 - C2693 * C10382 +
            C153885 * C10387 + C2691 * C10383 - C2692 * C10379 -
            C2691 * C10384 + C2684 * C10388 + C2689 * C10385 - C2690 * C10380 -
            C2689 * C10386 + C2683 * C10389) *
               C153901 +
           (C10413 + C10412 + C10411) * C153926 + C10404 * C153937) *
              C153625 * C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C1898 -
           (C26810 * C153898 + (C25410 + C25411 + C25412) * C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C153601) *
              C153521 * C1093 +
          (((C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515 +
             C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
             C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513) *
                C153637 * C23989 +
            (C25413 + C25414 + C25415) * C153637 * C23990 +
            (C25416 + C25417 + C25418) * C153637 * C153898) *
               C153601 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C1898) *
              C153521 * C1094 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C153637 * C23989 +
            (C24821 + C24822 + C24823) * C153637 * C23990 +
            (C24824 + C24825 + C24826) * C153637 * C153898) *
               C1898 -
           ((C23996 * C1761 - C23997 * C1756 - C23996 * C1762 +
             C153885 * C1771 + C23994 * C1763 - C23995 * C1757 -
             C23994 * C1764 + C153914 * C1772 + C23992 * C1765 -
             C23993 * C1758 - C23992 * C1766 + C153933 * C1773) *
                C153637 * C153898 +
            (C23996 * C959 - C23997 * C949 - C23996 * C960 + C153885 * C967 +
             C23994 * C957 - C23995 * C948 - C23994 * C958 + C153914 * C966 +
             C23992 * C955 - C23993 * C947 - C23992 * C956 + C153933 * C965) *
                C153637 * C23990 +
            (C23996 * C488 - C23997 * C476 - C23996 * C489 + C153885 * C512 +
             C23994 * C490 - C23995 * C477 - C23994 * C491 + C153914 * C513 +
             C23992 * C492 - C23993 * C478 - C23992 * C493 + C153933 * C514) *
                C153637 * C23989) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C1898 -
           (C26810 * C153898 + (C25410 + C25411 + C25412) * C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C153601) *
              C298 +
          (((C25412 + C25411 + C25410) * C153637 * C23989 +
            (C25409 + C25408 + C25407) * C153637 * C23990 +
            (C26814 + C26815 + C26816) * C153637 * C153898) *
               C153601 -
           (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C1898) *
              C299 +
          ((C24347 * C23989 + (C24333 + C24332 + C24331) * C153637 * C23990 +
            (C25804 + C25805 + C25806) * C153637 * C153898) *
               C1898 -
           ((C23996 * C5564 - C23997 * C5561 - C23996 * C5565 +
             C153885 * C5570 + C23994 * C5566 - C23995 * C5562 -
             C23994 * C5567 + C153914 * C5571 + C23992 * C5568 -
             C23993 * C5563 - C23992 * C5569 + C153933 * C5572) *
                C153637 * C153898 +
            (C26816 + C26815 + C26814) * C153637 * C23990 + C26810 * C23989) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
            C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
            C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
               C153637 * C23989 +
           (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
              C2104 -
          (C26810 * C153898 + (C25410 + C25411 + C25412) * C153637 * C23990 +
           (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
            C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
            C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
               C153637 * C23989) *
              C2105 +
          ((C23992 * C498 - C23993 * C481 - C23992 * C499 + C153933 * C517 +
            C23994 * C500 - C23995 * C482 - C23994 * C501 + C153914 * C518 +
            C23996 * C502 - C23997 * C483 - C23996 * C503 + C153885 * C519) *
               C153637 * C23989 +
           (C26061 + C26062 + C26063) * C153637 * C23990 +
           (C26064 + C26065 + C26066) * C153637 * C153898) *
              C2106 -
          ((C23996 * C6185 - C23997 * C6179 - C23996 * C6186 + C153885 * C6197 +
            C23994 * C6187 - C23995 * C6180 - C23994 * C6188 + C153914 * C6198 +
            C23992 * C6189 - C23993 * C6181 - C23992 * C6190 +
            C153933 * C6199) *
               C153637 * C153898 +
           (C23996 * C6191 - C23997 * C6182 - C23996 * C6192 + C153885 * C6200 +
            C23994 * C6193 - C23995 * C6183 - C23994 * C6194 + C153914 * C6201 +
            C23992 * C6195 - C23993 * C6184 - C23992 * C6196 +
            C153933 * C6202) *
               C153637 * C23990 +
           (C23996 * C2117 - C23997 * C2110 - C23996 * C2118 + C153885 * C2125 +
            C23994 * C2119 - C23995 * C2111 - C23994 * C2120 + C153914 * C2126 +
            C23992 * C2121 - C23993 * C2112 - C23992 * C2122 +
            C153933 * C2127) *
               C153637 * C23989) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C1898 -
           (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
            C29060 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C153601) *
              C153521 * C1093 +
          (((C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                C153637 * C28207 +
            C29061 * C28208 + C29062 * C28209 + C29063 * C28210 +
            C29064 * C28211) *
               C153601 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C1898) *
              C153521 * C1094 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C153637 * C28207 +
            C28705 * C28208 + C28706 * C28209 + C28707 * C28210 +
            C28708 * C28211) *
               C1898 -
           ((C28212 * C5564 - C28213 * C5561 - C28212 * C5565 +
             C153462 * C5570) *
                C153637 * C28211 +
            (C28212 * C4071 - C28213 * C4065 - C28212 * C4072 +
             C153462 * C4077) *
                C153637 * C28210 +
            (C28212 * C1765 - C28213 * C1758 - C28212 * C1766 +
             C153462 * C1773) *
                C153637 * C28209 +
            (C28212 * C955 - C28213 * C947 - C28212 * C956 + C153462 * C965) *
                C153637 * C28208 +
            (C28212 * C492 - C28213 * C478 - C28212 * C493 + C153462 * C514) *
                C153637 * C28207) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C1898 -
           (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
            C29060 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C153601) *
              C298 +
          ((C29060 * C28207 + C29059 * C28208 + C29058 * C28209 +
            C29057 * C28210 + C29856 * C28211) *
               C153601 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C1898) *
              C299 +
          ((C28416 * C28207 + C28417 * C28208 + C28418 * C28209 +
            C28419 * C28210 + C29280 * C28211) *
               C1898 -
           ((C28212 * C29845 - C28213 * C29844 - C28212 * C29846 +
             C153462 * C29847) *
                C153637 * C28211 +
            C29856 * C28210 + C29057 * C28209 + C29058 * C28208 +
            C29059 * C28207) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
               C153637 * C28207 +
           C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
           C28418 * C28211) *
              C2104 -
          (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
           C29060 * C28208 +
           (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
               C153637 * C28207) *
              C2105 +
          ((C28212 * C498 - C28213 * C481 - C28212 * C499 + C153462 * C517) *
               C153637 * C28207 +
           C29435 * C28208 + C29436 * C28209 + C29437 * C28210 +
           C29438 * C28211) *
              C2106 -
          ((C28212 * C30184 - C28213 * C30182 - C28212 * C30185 +
            C153462 * C30188) *
               C153637 * C28211 +
           (C28212 * C30186 - C28213 * C30183 - C28212 * C30187 +
            C153462 * C30189) *
               C153637 * C28210 +
           (C28212 * C6189 - C28213 * C6181 - C28212 * C6190 +
            C153462 * C6199) *
               C153637 * C28209 +
           (C28212 * C6195 - C28213 * C6184 - C28212 * C6196 +
            C153462 * C6202) *
               C153637 * C28208 +
           (C28212 * C2121 - C28213 * C2112 - C28212 * C2122 +
            C153462 * C2127) *
               C153637 * C28207) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153937 +
             C31290 * C153926 + C31291 * C153901) *
                C23989 +
            (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
               C1898 -
           (C33438 * C153898 + (C32081 + C32082 + C32083) * C23990 +
            (C31294 * C153901 + C31291 * C153926 + C31290 * C153937) * C23989) *
               C153601) *
              C153521 * C1093 +
          (((C31295 * C153937 + C31296 * C153926 + C31297 * C153901) * C23989 +
            (C32084 + C32085 + C32086) * C23990 +
            (C32087 + C32088 + C32089) * C153898) *
               C153601 -
           (C31003 * C153898 + (C31000 + C30971 + C30970) * C23990 +
            (C31296 * C153901 + C31295 * C153926 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153937) *
                C23989) *
               C1898) *
              C153521 * C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C153937 +
             C31782 * C153926 + C31783 * C153901) *
                C23989 +
            (C31518 + C31548 + C31549) * C23990 +
            (C31527 + C31550 + C31551) * C153898) *
               C1898 -
           (((C28212 * C6185 - C28213 * C6179 - C28212 * C6186 +
              C153462 * C6197) *
                 C153901 +
             C31547 * C153926 + C31546 * C153937) *
                C153898 +
            ((C28212 * C6191 - C28213 * C6182 - C28212 * C6192 +
              C153462 * C6200) *
                 C153901 +
             C31545 * C153926 + C31544 * C153937) *
                C23990 +
            ((C28212 * C2117 - C28213 * C2110 - C28212 * C2118 +
              C153462 * C2125) *
                 C153901 +
             C31783 * C153926 + C31782 * C153937) *
                C23989) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153937 +
             C31290 * C153926 + C31291 * C153901) *
                C23989 +
            (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
               C1898 -
           (C33438 * C153898 + (C32081 + C32082 + C32083) * C23990 +
            (C31294 * C153901 + C31291 * C153926 + C31290 * C153937) * C23989) *
               C153601) *
              C298 +
          (((C32083 + C32082 + C32081) * C23989 +
            (C32080 + C32079 + C32078) * C23990 +
            (C33435 + C33436 + C33437) * C153898) *
               C153601 -
           (C32458 * C153898 + (C30966 + C30965 + C30964) * C23990 +
            (C30963 + C30962 + C30961) * C23989) *
               C1898) *
              C299 +
          ((C30993 * C23989 + (C30969 + C30968 + C30967) * C23990 +
            (C32455 + C32456 + C32457) * C153898) *
               C1898 -
           (((C28212 * C30184 - C28213 * C30182 - C28212 * C30185 +
              C153462 * C30188) *
                 C153901 +
             C29434 * C153926 + C29049 * C153937) *
                C153898 +
            (C33437 + C33436 + C33435) * C23990 + C33438 * C23989) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153937 +
            C31290 * C153926 + C31291 * C153901) *
               C23989 +
           (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
              C2104 -
          (C33438 * C153898 + (C32081 + C32082 + C32083) * C23990 +
           (C31294 * C153901 + C31291 * C153926 + C31290 * C153937) * C23989) *
              C2105 +
          ((C31291 * C153937 + C31294 * C153926 + C34035 * C153901) * C23989 +
           (C32681 + C32682 + C32706) * C23990 +
           (C32687 + C32688 + C32707) * C153898) *
              C2106 -
          (((C28212 * C34022 - C28213 * C34020 - C28212 * C34023 +
             C153462 * C34026) *
                C153901 +
            C32704 * C153926 + C31292 * C153937) *
               C153898 +
           ((C28212 * C34024 - C28213 * C34021 - C28212 * C34025 +
             C153462 * C34027) *
                C153901 +
            C32703 * C153926 + C31293 * C153937) *
               C23990 +
           ((C28212 * C10385 - C28213 * C10380 - C28212 * C10386 +
             C153462 * C10389) *
                C153901 +
            C34035 * C153926 + C31294 * C153937) *
               C23989) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[343] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C153921 -
           (C5591 * C153898 + (C4155 + C4156 + C4157) * C153637 * C153924 +
            (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
             C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
             C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                C153637 * C153936) *
               C153922 +
           ((C2689 * C498 - C2690 * C481 - C2689 * C499 + C2683 * C517 +
             C2691 * C500 - C2692 * C482 - C2691 * C501 + C2684 * C518 +
             C2693 * C502 - C2694 * C483 - C2693 * C503 + C153885 * C519) *
                C153637 * C153936 +
            (C4830 + C4831 + C4832) * C153637 * C153924 +
            (C4833 + C4834 + C4835) * C153637 * C153898) *
               C2414) *
              C153521 * C153840 +
          (((C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515 +
             C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
             C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513) *
                C153637 * C153936 +
            (C4158 + C4159 + C4160) * C153637 * C153924 +
            (C4161 + C4162 + C4163) * C153637 * C153898) *
               C153922 -
           (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153637 * C153936) *
               C153921 -
           ((C2693 * C3289 - C2694 * C3282 - C2693 * C3290 + C153885 * C3294 +
             C2691 * C3287 - C2692 * C3281 - C2691 * C3288 + C2684 * C3293 +
             C2689 * C3285 - C2690 * C3280 - C2689 * C3286 + C2683 * C3292) *
                C153637 * C153898 +
            (C2693 * C1332 - C2694 * C1326 - C2693 * C1333 + C153885 * C1341 +
             C2691 * C1334 - C2692 * C1327 - C2691 * C1335 + C2684 * C1342 +
             C2689 * C1336 - C2690 * C1328 - C2689 * C1337 + C2683 * C1343) *
                C153637 * C153924 +
            (C2693 * C504 - C2694 * C484 - C2693 * C505 + C153885 * C520 +
             C2691 * C502 - C2692 * C483 - C2691 * C503 + C2684 * C519 +
             C2689 * C500 - C2690 * C482 - C2689 * C501 + C2683 * C518) *
                C153637 * C153936) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C153921 -
           (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
            C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
            C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
            C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
            C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
               C153637 * C153625 * C153922 +
           (C134 * C498 - C135 * C481 - C134 * C499 + C121 * C517 +
            C136 * C500 - C137 * C482 - C136 * C501 + C122 * C518 +
            C138 * C502 - C139 * C483 - C138 * C503 + C123 * C519 +
            C140 * C504 - C141 * C484 - C140 * C505 + C124 * C520 +
            C142 * C506 - C143 * C485 - C142 * C507 + C125 * C521) *
               C153637 * C153625 * C2414) *
              C153521 * C153840 +
          ((C134 * C494 - C135 * C479 - C134 * C495 + C121 * C515 +
            C136 * C492 - C137 * C478 - C136 * C493 + C122 * C514 +
            C138 * C490 - C139 * C477 - C138 * C491 + C123 * C513 +
            C140 * C488 - C141 * C476 - C140 * C489 + C124 * C512 +
            C142 * C508 - C143 * C486 - C142 * C509 + C125 * C522) *
               C153637 * C153625 * C153922 -
           (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
            C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
            C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
            C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
            C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
               C153637 * C153625 * C153921 -
           (C142 * C510 - C143 * C487 - C142 * C511 + C125 * C523 +
            C140 * C506 - C141 * C485 - C140 * C507 + C124 * C521 +
            C138 * C504 - C139 * C484 - C138 * C505 + C123 * C520 +
            C136 * C502 - C137 * C483 - C136 * C503 + C122 * C519 +
            C134 * C500 - C135 * C482 - C134 * C501 + C121 * C518) *
               C153637 * C153625 * C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153937 +
            (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
               C153625 * C153921 -
           (C10404 * C153901 + (C7644 + C7643 + C7642) * C153926 +
            (C7641 + C7640 + C7639) * C153937) *
               C153625 * C153922 +
           (C7659 * C153937 + (C7647 + C7646 + C7645) * C153926 +
            (C10411 + C10412 + C10413) * C153901) *
               C153625 * C2414) *
              C153521 * C153840 +
          (((C7648 + C7649 + C7650) * C153937 +
            (C7651 + C7652 + C7653) * C153926 +
            (C7654 + C7655 + C7656) * C153901) *
               C153625 * C153922 -
           (C7660 * C153901 + (C7650 + C7649 + C7648) * C153926 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153937) *
               C153625 * C153921 -
           ((C2693 * C7524 - C2694 * C7517 - C2693 * C7525 + C153885 * C7529 +
             C2691 * C7522 - C2692 * C7516 - C2691 * C7523 + C2684 * C7528 +
             C2689 * C7520 - C2690 * C7515 - C2689 * C7521 + C2683 * C7527) *
                C153901 +
            (C7656 + C7655 + C7654) * C153926 + C7660 * C153937) *
               C153625 * C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153921 -
           (C26810 * C153898 + (C25410 + C25411 + C25412) * C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C153922 +
           ((C23992 * C498 - C23993 * C481 - C23992 * C499 + C153933 * C517 +
             C23994 * C500 - C23995 * C482 - C23994 * C501 + C153914 * C518 +
             C23996 * C502 - C23997 * C483 - C23996 * C503 + C153885 * C519) *
                C153637 * C23989 +
            (C26061 + C26062 + C26063) * C153637 * C23990 +
            (C26064 + C26065 + C26066) * C153637 * C153898) *
               C2414) *
              C153521 * C153840 +
          (((C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515 +
             C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
             C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513) *
                C153637 * C23989 +
            (C25413 + C25414 + C25415) * C153637 * C23990 +
            (C25416 + C25417 + C25418) * C153637 * C153898) *
               C153922 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C153921 -
           ((C23996 * C3289 - C23997 * C3282 - C23996 * C3290 +
             C153885 * C3294 + C23994 * C3287 - C23995 * C3281 -
             C23994 * C3288 + C153914 * C3293 + C23992 * C3285 -
             C23993 * C3280 - C23992 * C3286 + C153933 * C3292) *
                C153637 * C153898 +
            (C23996 * C1332 - C23997 * C1326 - C23996 * C1333 +
             C153885 * C1341 + C23994 * C1334 - C23995 * C1327 -
             C23994 * C1335 + C153914 * C1342 + C23992 * C1336 -
             C23993 * C1328 - C23992 * C1337 + C153933 * C1343) *
                C153637 * C23990 +
            (C23996 * C504 - C23997 * C484 - C23996 * C505 + C153885 * C520 +
             C23994 * C502 - C23995 * C483 - C23994 * C503 + C153914 * C519 +
             C23992 * C500 - C23993 * C482 - C23992 * C501 + C153933 * C518) *
                C153637 * C23989) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153921 -
           (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
            C29060 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C153922 +
           ((C28212 * C498 - C28213 * C481 - C28212 * C499 + C153462 * C517) *
                C153637 * C28207 +
            C29435 * C28208 + C29436 * C28209 + C29437 * C28210 +
            C29438 * C28211) *
               C2414) *
              C153521 * C153840 +
          (((C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                C153637 * C28207 +
            C29061 * C28208 + C29062 * C28209 + C29063 * C28210 +
            C29064 * C28211) *
               C153922 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C153921 -
           ((C28212 * C28550 - C28213 * C28547 - C28212 * C28551 +
             C153462 * C28553) *
                C153637 * C28211 +
            (C28212 * C4786 - C28213 * C4782 - C28212 * C4787 +
             C153462 * C4791) *
                C153637 * C28210 +
            (C28212 * C3285 - C28213 * C3280 - C28212 * C3286 +
             C153462 * C3292) *
                C153637 * C28209 +
            (C28212 * C1336 - C28213 * C1328 - C28212 * C1337 +
             C153462 * C1343) *
                C153637 * C28208 +
            (C28212 * C500 - C28213 * C482 - C28212 * C501 + C153462 * C518) *
                C153637 * C28207) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153937 +
             C31290 * C153926 + C31291 * C153901) *
                C23989 +
            (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
               C153921 -
           (C33438 * C153898 + (C32081 + C32082 + C32083) * C23990 +
            (C31294 * C153901 + C31291 * C153926 + C31290 * C153937) * C23989) *
               C153922 +
           ((C31291 * C153937 + C31294 * C153926 + C34035 * C153901) * C23989 +
            (C32681 + C32682 + C32706) * C23990 +
            (C32687 + C32688 + C32707) * C153898) *
               C2414) *
              C153521 * C153840 +
          (((C31295 * C153937 + C31296 * C153926 + C31297 * C153901) * C23989 +
            (C32084 + C32085 + C32086) * C23990 +
            (C32087 + C32088 + C32089) * C153898) *
               C153922 -
           (C31003 * C153898 + (C31000 + C30971 + C30970) * C23990 +
            (C31296 * C153901 + C31295 * C153926 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153937) *
                C23989) *
               C153921 -
           (((C28212 * C31225 - C28213 * C31222 - C28212 * C31226 +
              C153462 * C31228) *
                 C153901 +
             C31299 * C153926 + C30998 * C153937) *
                C153898 +
            ((C28212 * C9040 - C28213 * C9036 - C28212 * C9041 +
              C153462 * C9045) *
                 C153901 +
             C31298 * C153926 + C30997 * C153937) *
                C23990 +
            ((C28212 * C7520 - C28213 * C7515 - C28212 * C7521 +
              C153462 * C7527) *
                 C153901 +
             C31297 * C153926 + C31296 * C153937) *
                C23989) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[344] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C1898 -
           (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
            C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
            C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
            C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
            C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
               C153637 * C153625 * C153601) *
              C298 +
          ((C134 * C951 - C135 * C945 - C134 * C952 + C121 * C963 +
            C136 * C953 - C137 * C946 - C136 * C954 + C122 * C964 +
            C138 * C955 - C139 * C947 - C138 * C956 + C123 * C965 +
            C140 * C957 - C141 * C948 - C140 * C958 + C124 * C966 +
            C142 * C959 - C143 * C949 - C142 * C960 + C125 * C967) *
               C153637 * C153625 * C153601 -
           (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
            C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
            C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
            C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
            C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
               C153637 * C153625 * C1898) *
              C299 +
          ((C134 * C325 - C135 * C308 - C134 * C326 + C121 * C344 +
            C136 * C327 - C137 * C309 - C136 * C328 + C122 * C345 +
            C138 * C329 - C139 * C310 - C138 * C330 + C123 * C346 +
            C140 * C331 - C141 * C311 - C140 * C332 + C124 * C347 +
            C142 * C333 - C143 * C312 - C142 * C334 + C125 * C348) *
               C153637 * C153625 * C1898 -
           (C142 * C1761 - C143 * C1756 - C142 * C1762 + C125 * C1771 +
            C140 * C1763 - C141 * C1757 - C140 * C1764 + C124 * C1772 +
            C138 * C1765 - C139 * C1758 - C138 * C1766 + C123 * C1773 +
            C136 * C1767 - C137 * C1759 - C136 * C1768 + C122 * C1774 +
            C134 * C1769 - C135 * C1760 - C134 * C1770 + C121 * C1775) *
               C153637 * C153625 * C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C1898 -
           (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
            C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
            C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
            C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
            C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
               C153637 * C153625 * C153601) *
              C153521 * C1093 +
          ((C134 * C494 - C135 * C479 - C134 * C495 + C121 * C515 +
            C136 * C492 - C137 * C478 - C136 * C493 + C122 * C514 +
            C138 * C490 - C139 * C477 - C138 * C491 + C123 * C513 +
            C140 * C488 - C141 * C476 - C140 * C489 + C124 * C512 +
            C142 * C508 - C143 * C486 - C142 * C509 + C125 * C522) *
               C153637 * C153625 * C153601 -
           (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
            C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
            C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
            C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
            C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
               C153637 * C153625 * C1898) *
              C153521 * C1094 +
          ((C134 * C156 - C135 * C146 - C134 * C157 + C121 * C170 +
            C136 * C158 - C137 * C147 - C136 * C159 + C122 * C171 +
            C138 * C160 - C139 * C148 - C138 * C161 + C123 * C172 +
            C140 * C162 - C141 * C149 - C140 * C163 + C124 * C173 +
            C142 * C164 - C143 * C150 - C142 * C165 + C125 * C174) *
               C153637 * C153625 * C1898 -
           (C142 * C780 - C143 * C779 - C142 * C781 + C125 * C782 +
            C140 * C508 - C141 * C486 - C140 * C509 + C124 * C522 +
            C138 * C488 - C139 * C476 - C138 * C489 + C123 * C512 +
            C136 * C490 - C137 * C477 - C136 * C491 + C122 * C513 +
            C134 * C492 - C135 * C478 - C134 * C493 + C121 * C514) *
               C153637 * C153625 * C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C1898 -
           (C5591 * C153898 + (C4155 + C4156 + C4157) * C153637 * C153924 +
            (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
             C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
             C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                C153637 * C153936) *
               C153601) *
              C153521 * C1093 +
          (((C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515 +
             C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
             C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513) *
                C153637 * C153936 +
            (C4158 + C4159 + C4160) * C153637 * C153924 +
            (C4161 + C4162 + C4163) * C153637 * C153898) *
               C153601 -
           (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153637 * C153936) *
               C1898) *
              C153521 * C1094 +
          (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
             C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
             C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                C153637 * C153936 +
            (C3550 + C3551 + C3552) * C153637 * C153924 +
            (C3553 + C3554 + C3555) * C153637 * C153898) *
               C1898 -
           ((C2693 * C1761 - C2694 * C1756 - C2693 * C1762 + C153885 * C1771 +
             C2691 * C1763 - C2692 * C1757 - C2691 * C1764 + C2684 * C1772 +
             C2689 * C1765 - C2690 * C1758 - C2689 * C1766 + C2683 * C1773) *
                C153637 * C153898 +
            (C2693 * C959 - C2694 * C949 - C2693 * C960 + C153885 * C967 +
             C2691 * C957 - C2692 * C948 - C2691 * C958 + C2684 * C966 +
             C2689 * C955 - C2690 * C947 - C2689 * C956 + C2683 * C965) *
                C153637 * C153924 +
            (C2693 * C488 - C2694 * C476 - C2693 * C489 + C153885 * C512 +
             C2691 * C490 - C2692 * C477 - C2691 * C491 + C2684 * C513 +
             C2689 * C492 - C2690 * C478 - C2689 * C493 + C2683 * C514) *
                C153637 * C153936) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C1898 -
           (C5591 * C153898 + (C4155 + C4156 + C4157) * C153637 * C153924 +
            (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
             C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
             C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                C153637 * C153936) *
               C153601) *
              C298 +
          (((C4157 + C4156 + C4155) * C153637 * C153936 +
            (C4154 + C4153 + C4152) * C153637 * C153924 +
            (C5595 + C5596 + C5597) * C153637 * C153898) *
               C153601 -
           (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
            (C3040 + C3039 + C3038) * C153637 * C153936) *
               C1898) *
              C299 +
          ((C3060 * C153936 + (C3046 + C3045 + C3044) * C153637 * C153924 +
            (C4561 + C4562 + C4563) * C153637 * C153898) *
               C1898 -
           ((C2693 * C5564 - C2694 * C5561 - C2693 * C5565 + C153885 * C5570 +
             C2691 * C5566 - C2692 * C5562 - C2691 * C5567 + C2684 * C5571 +
             C2689 * C5568 - C2690 * C5563 - C2689 * C5569 + C2683 * C5572) *
                C153637 * C153898 +
            (C5597 + C5596 + C5595) * C153637 * C153924 + C5591 * C153936) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153937 +
            (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
               C153625 * C1898 -
           ((C7645 + C7646 + C7647) * C153901 +
            (C7644 + C7643 + C7642) * C153926 +
            (C7641 + C7640 + C7639) * C153937) *
               C153625 * C153601) *
              C153521 * C1093 +
          (((C7648 + C7649 + C7650) * C153937 +
            (C7651 + C7652 + C7653) * C153926 +
            (C7654 + C7655 + C7656) * C153901) *
               C153625 * C153601 -
           (C7660 * C153901 + (C7650 + C7649 + C7648) * C153926 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153937) *
               C153625 * C1898) *
              C153521 * C1094 +
          (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
             C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
             C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                C153937 +
            (C8133 + C8134 + C8135) * C153926 +
            (C8136 + C8137 + C8138) * C153901) *
               C153625 * C1898 -
           ((C2693 * C2113 - C2694 * C2108 - C2693 * C2114 + C153885 * C2123 +
             C2691 * C2115 - C2692 * C2109 - C2691 * C2116 + C2684 * C2124 +
             C2689 * C2117 - C2690 * C2110 - C2689 * C2118 + C2683 * C2125) *
                C153901 +
            (C8138 + C8137 + C8136) * C153926 +
            (C8135 + C8134 + C8133) * C153937) *
               C153625 * C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153937 +
            (C7639 + C7640 + C7641) * C153926 + C7659 * C153901) *
               C153625 * C1898 -
           ((C7645 + C7646 + C7647) * C153901 +
            (C7644 + C7643 + C7642) * C153926 +
            (C7641 + C7640 + C7639) * C153937) *
               C153625 * C153601) *
              C298 +
          (((C4157 + C4156 + C4155) * C153937 +
            (C4830 + C4831 + C4832) * C153926 +
            (C9068 + C9069 + C9070) * C153901) *
               C153625 * C153601 -
           (C9064 * C153901 + (C4155 + C4156 + C4157) * C153926 +
            (C3040 + C3039 + C3038) * C153937) *
               C153625 * C1898) *
              C299 +
          ((C3058 * C153937 + (C4154 + C4153 + C4152) * C153926 +
            (C4833 + C4834 + C4835) * C153901) *
               C153625 * C1898 -
           ((C2693 * C6185 - C2694 * C6179 - C2693 * C6186 + C153885 * C6197 +
             C2691 * C6187 - C2692 * C6180 - C2691 * C6188 + C2684 * C6198 +
             C2689 * C6189 - C2690 * C6181 - C2689 * C6190 + C2683 * C6199) *
                C153901 +
            (C4835 + C4834 + C4833) * C153926 + C5587 * C153937) *
               C153625 * C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C1898 -
           (C26810 * C153898 + (C25410 + C25411 + C25412) * C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C153601) *
              C153521 * C1093 +
          (((C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515 +
             C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
             C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513) *
                C153637 * C23989 +
            (C25413 + C25414 + C25415) * C153637 * C23990 +
            (C25416 + C25417 + C25418) * C153637 * C153898) *
               C153601 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C1898) *
              C153521 * C1094 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C153637 * C23989 +
            (C24821 + C24822 + C24823) * C153637 * C23990 +
            (C24824 + C24825 + C24826) * C153637 * C153898) *
               C1898 -
           ((C23996 * C1761 - C23997 * C1756 - C23996 * C1762 +
             C153885 * C1771 + C23994 * C1763 - C23995 * C1757 -
             C23994 * C1764 + C153914 * C1772 + C23992 * C1765 -
             C23993 * C1758 - C23992 * C1766 + C153933 * C1773) *
                C153637 * C153898 +
            (C23996 * C959 - C23997 * C949 - C23996 * C960 + C153885 * C967 +
             C23994 * C957 - C23995 * C948 - C23994 * C958 + C153914 * C966 +
             C23992 * C955 - C23993 * C947 - C23992 * C956 + C153933 * C965) *
                C153637 * C23990 +
            (C23996 * C488 - C23997 * C476 - C23996 * C489 + C153885 * C512 +
             C23994 * C490 - C23995 * C477 - C23994 * C491 + C153914 * C513 +
             C23992 * C492 - C23993 * C478 - C23992 * C493 + C153933 * C514) *
                C153637 * C23989) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C1898 -
           (C26810 * C153898 + (C25410 + C25411 + C25412) * C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C153601) *
              C298 +
          (((C25412 + C25411 + C25410) * C153637 * C23989 +
            (C25409 + C25408 + C25407) * C153637 * C23990 +
            (C26814 + C26815 + C26816) * C153637 * C153898) *
               C153601 -
           (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C1898) *
              C299 +
          ((C24347 * C23989 + (C24333 + C24332 + C24331) * C153637 * C23990 +
            (C25804 + C25805 + C25806) * C153637 * C153898) *
               C1898 -
           ((C23996 * C5564 - C23997 * C5561 - C23996 * C5565 +
             C153885 * C5570 + C23994 * C5566 - C23995 * C5562 -
             C23994 * C5567 + C153914 * C5571 + C23992 * C5568 -
             C23993 * C5563 - C23992 * C5569 + C153933 * C5572) *
                C153637 * C153898 +
            (C26816 + C26815 + C26814) * C153637 * C23990 + C26810 * C23989) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C1898 -
           (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
            C29060 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C153601) *
              C153521 * C1093 +
          (((C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                C153637 * C28207 +
            C29061 * C28208 + C29062 * C28209 + C29063 * C28210 +
            C29064 * C28211) *
               C153601 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C1898) *
              C153521 * C1094 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C153637 * C28207 +
            C28705 * C28208 + C28706 * C28209 + C28707 * C28210 +
            C28708 * C28211) *
               C1898 -
           ((C28212 * C5564 - C28213 * C5561 - C28212 * C5565 +
             C153462 * C5570) *
                C153637 * C28211 +
            (C28212 * C4071 - C28213 * C4065 - C28212 * C4072 +
             C153462 * C4077) *
                C153637 * C28210 +
            (C28212 * C1765 - C28213 * C1758 - C28212 * C1766 +
             C153462 * C1773) *
                C153637 * C28209 +
            (C28212 * C955 - C28213 * C947 - C28212 * C956 + C153462 * C965) *
                C153637 * C28208 +
            (C28212 * C492 - C28213 * C478 - C28212 * C493 + C153462 * C514) *
                C153637 * C28207) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C1898 -
           (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
            C29060 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C153601) *
              C298 +
          ((C29060 * C28207 + C29059 * C28208 + C29058 * C28209 +
            C29057 * C28210 + C29856 * C28211) *
               C153601 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C1898) *
              C299 +
          ((C28416 * C28207 + C28417 * C28208 + C28418 * C28209 +
            C28419 * C28210 + C29280 * C28211) *
               C1898 -
           ((C28212 * C29845 - C28213 * C29844 - C28212 * C29846 +
             C153462 * C29847) *
                C153637 * C28211 +
            C29856 * C28210 + C29057 * C28209 + C29058 * C28208 +
            C29059 * C28207) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153937 +
             C31290 * C153926 + C31291 * C153901) *
                C23989 +
            (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
               C1898 -
           (C33438 * C153898 + (C32081 + C32082 + C32083) * C23990 +
            (C31294 * C153901 + C31291 * C153926 + C31290 * C153937) * C23989) *
               C153601) *
              C153521 * C1093 +
          (((C31295 * C153937 + C31296 * C153926 + C31297 * C153901) * C23989 +
            (C32084 + C32085 + C32086) * C23990 +
            (C32087 + C32088 + C32089) * C153898) *
               C153601 -
           (C31003 * C153898 + (C31000 + C30971 + C30970) * C23990 +
            (C31296 * C153901 + C31295 * C153926 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153937) *
                C23989) *
               C1898) *
              C153521 * C1094 +
          ((((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                 C153937 +
             C31782 * C153926 + C31783 * C153901) *
                C23989 +
            (C31518 + C31548 + C31549) * C23990 +
            (C31527 + C31550 + C31551) * C153898) *
               C1898 -
           (((C28212 * C6185 - C28213 * C6179 - C28212 * C6186 +
              C153462 * C6197) *
                 C153901 +
             C31547 * C153926 + C31546 * C153937) *
                C153898 +
            ((C28212 * C6191 - C28213 * C6182 - C28212 * C6192 +
              C153462 * C6200) *
                 C153901 +
             C31545 * C153926 + C31544 * C153937) *
                C23990 +
            ((C28212 * C2117 - C28213 * C2110 - C28212 * C2118 +
              C153462 * C2125) *
                 C153901 +
             C31783 * C153926 + C31782 * C153937) *
                C23989) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153937 +
             C31290 * C153926 + C31291 * C153901) *
                C23989 +
            (C30961 + C30962 + C30963) * C23990 + C30993 * C153898) *
               C1898 -
           (C33438 * C153898 + (C32081 + C32082 + C32083) * C23990 +
            (C31294 * C153901 + C31291 * C153926 + C31290 * C153937) * C23989) *
               C153601) *
              C298 +
          (((C32083 + C32082 + C32081) * C23989 +
            (C32080 + C32079 + C32078) * C23990 +
            (C33435 + C33436 + C33437) * C153898) *
               C153601 -
           (C32458 * C153898 + (C30966 + C30965 + C30964) * C23990 +
            (C30963 + C30962 + C30961) * C23989) *
               C1898) *
              C299 +
          ((C30993 * C23989 + (C30969 + C30968 + C30967) * C23990 +
            (C32455 + C32456 + C32457) * C153898) *
               C1898 -
           (((C28212 * C30184 - C28213 * C30182 - C28212 * C30185 +
              C153462 * C30188) *
                 C153901 +
             C29434 * C153926 + C29049 * C153937) *
                C153898 +
            (C33437 + C33436 + C33435) * C23990 + C33438 * C23989) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[345] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153864 +
            (C15542 + C15543 + C15544 + C15545) * C153724) *
               C153625 * C153537 * C153848 -
           ((C12506 + C12507 + C12508 + C12509) * C153724 +
            (C11577 + C11576 + C11575 + C11574) * C153864) *
               C153625 * C153537 * C153573) *
              C153917 +
          (((C11582 + C11583 + C11584 + C11585) * C153864 +
            (C12510 + C12511 + C12512 + C12513) * C153724) *
               C153625 * C153537 * C153573 -
           ((C15553 + C15552 + C15551 + C15550) * C153724 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153864) *
               C153625 * C153537 * C153848) *
              C153918 +
          (((C11275 * C156 - C11276 * C146 - C11275 * C157 + C11269 * C170 +
             C11277 * C158 - C11278 * C147 - C11277 * C159 + C11270 * C171 +
             C11279 * C160 - C11280 * C148 - C11279 * C161 + C11271 * C172 +
             C11281 * C162 - C11282 * C149 - C11281 * C163 + C153862 * C173) *
                C153864 +
            (C11275 * C492 - C11276 * C478 - C11275 * C493 + C11269 * C514 +
             C11277 * C490 - C11278 * C477 - C11277 * C491 + C11270 * C513 +
             C11279 * C488 - C11280 * C476 - C11279 * C489 + C11271 * C512 +
             C11281 * C508 - C11282 * C486 - C11281 * C509 + C153862 * C522) *
                C153724) *
               C153625 * C153537 * C153848 -
           ((C11281 * C961 - C11282 * C950 - C11281 * C962 + C153862 * C968 +
             C11279 * C959 - C11280 * C949 - C11279 * C960 + C11271 * C967 +
             C11277 * C957 - C11278 * C948 - C11277 * C958 + C11270 * C966 +
             C11275 * C955 - C11276 * C947 - C11275 * C956 + C11269 * C965) *
                C153724 +
            (C12005 + C12004 + C12003 + C12002) * C153864) *
               C153625 * C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153864 +
             (C39442 + C39443) * C153724) *
                C23989 +
            ((C35192 + C35193) * C153864 + (C36175 + C36174) * C153724) *
                C23990 +
            C39078 * C153898) *
               C153537 * C153848 -
           ((C37406 * C153724 + C36507 * C153864) * C153898 +
            (C37407 * C153724 + (C35195 + C35194) * C153864) * C23990 +
            ((C36174 + C36175) * C153724 + (C35193 + C35192) * C153864) *
                C23989) *
               C153537 * C153573) *
              C153917 +
          ((((C35200 + C35201) * C153864 + (C36176 + C36177) * C153724) *
                C23989 +
            ((C35202 + C35203) * C153864 + (C36178 + C36179) * C153724) *
                C23990 +
            ((C35204 + C35205) * C153864 + (C36180 + C36181) * C153724) *
                C153898) *
               C153537 * C153573 -
           (C39079 * C153898 +
            ((C36177 + C36176) * C153724 + (C35201 + C35200) * C153864) *
                C23990 +
            ((C39447 + C39446) * C153724 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153864) *
                C23989) *
               C153537 * C153848) *
              C153918 +
          ((((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
              C152081 * C158 - C34900 * C147 - C152081 * C159 +
              C153472 * C171) *
                 C153864 +
             (C152100 * C492 - C34898 * C478 - C152100 * C493 + C153829 * C514 +
              C152081 * C490 - C34900 * C477 - C152081 * C491 +
              C153472 * C513) *
                 C153724) *
                C23989 +
            ((C35640 + C35641) * C153864 + (C39768 + C39769) * C153724) *
                C23990 +
            ((C35642 + C35643) * C153864 + (C39770 + C39771) * C153724) *
                C153898) *
               C153537 * C153848 -
           (((C152081 * C4073 - C34900 * C4066 - C152081 * C4074 +
              C153472 * C4078 + C152100 * C4071 - C34898 * C4065 -
              C152100 * C4072 + C153829 * C4077) *
                 C153724 +
             (C35645 + C35644) * C153864) *
                C153898 +
            ((C39771 + C39770) * C153724 + (C35643 + C35642) * C153864) *
                C23990 +
            ((C39769 + C39768) * C153724 + (C35641 + C35640) * C153864) *
                C23989) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q));
    d2ee[346] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
              C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
              C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
              C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                 C153864 +
             (C15542 + C15543 + C15544 + C15545) * C153724) *
                C153625 * C153849 -
            ((C15546 + C15547 + C15548 + C15549) * C153724 +
             (C15545 + C15544 + C15543 + C15542) * C153864) *
                C153625 * C153601) *
               C153848 +
           (((C12509 + C12508 + C12507 + C12506) * C153864 +
             (C13084 + C13085 + C13086 + C13087) * C153724) *
                C153625 * C153601 -
            ((C12506 + C12507 + C12508 + C12509) * C153724 +
             (C11577 + C11576 + C11575 + C11574) * C153864) *
                C153625 * C153849) *
               C153573) *
              C301 +
          ((((C15550 + C15551 + C15552 + C15553) * C153864 +
             (C15554 + C15555 + C15556 + C15557) * C153724) *
                C153625 * C153601 -
            ((C15553 + C15552 + C15551 + C15550) * C153724 +
             (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
              C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
              C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
              C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                 C153864) *
                C153625 * C153849) *
               C153848 +
           (((C11582 + C11583 + C11584 + C11585) * C153864 +
             (C12510 + C12511 + C12512 + C12513) * C153724) *
                C153625 * C153849 -
            ((C11281 * C1330 - C11282 * C1325 - C11281 * C1331 +
              C153862 * C1340 + C11279 * C1332 - C11280 * C1326 -
              C11279 * C1333 + C11271 * C1341 + C11277 * C1334 -
              C11278 * C1327 - C11277 * C1335 + C11270 * C1342 +
              C11275 * C1336 - C11276 * C1328 - C11275 * C1337 +
              C11269 * C1343) *
                 C153724 +
             (C12513 + C12512 + C12511 + C12510) * C153864) *
                C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C152100 * C152 - C34898 * C144 - C152100 * C153 +
               C153829 * C168 + C152081 * C154 - C34900 * C145 -
               C152081 * C155 + C153472 * C169) *
                  C153864 +
              (C39442 + C39443) * C153724) *
                 C23989 +
             ((C35192 + C35193) * C153864 + C40462 * C153724) * C23990 +
             C39078 * C153898) *
                C153849 -
            (((C36757 + C36756) * C153724 + C37407 * C153864) * C153898 +
             ((C36755 + C36754) * C153724 + C40463 * C153864) * C23990 +
             ((C39444 + C39445) * C153724 + (C39443 + C39442) * C153864) *
                 C23989) *
                C153601) *
               C153848 +
           (((C40462 * C153864 + (C36754 + C36755) * C153724) * C23989 +
             (C39073 * C153864 + (C36756 + C36757) * C153724) * C23990 +
             ((C36171 + C36170) * C153864 + (C36758 + C36759) * C153724) *
                 C153898) *
                C153601 -
            ((C37406 * C153724 + C36507 * C153864) * C153898 +
             (C37407 * C153724 + (C35195 + C35194) * C153864) * C23990 +
             (C40463 * C153724 + (C35193 + C35192) * C153864) * C23989) *
                C153849) *
               C153573) *
              C301 +
          (((((C39446 + C39447) * C153864 + (C39448 + C39449) * C153724) *
                 C23989 +
             (C40464 * C153864 + (C39450 + C39451) * C153724) * C23990 +
             (C40465 * C153864 + (C39452 + C39453) * C153724) * C153898) *
                C153601 -
            (C39079 * C153898 +
             (C40466 * C153724 + (C35201 + C35200) * C153864) * C23990 +
             ((C39447 + C39446) * C153724 +
              (C152081 * C156 - C34900 * C146 - C152081 * C157 +
               C153472 * C170 + C152100 * C154 - C34898 * C145 -
               C152100 * C155 + C153829 * C169) *
                  C153864) *
                 C23989) *
                C153849) *
               C153848 +
           ((((C35200 + C35201) * C153864 + C40464 * C153724) * C23989 +
             ((C35202 + C35203) * C153864 + C40465 * C153724) * C23990 +
             ((C35204 + C35205) * C153864 + (C36180 + C36181) * C153724) *
                 C153898) *
                C153849 -
            (((C152081 * C4784 - C34900 * C4781 - C152081 * C4785 +
               C153472 * C4790 + C152100 * C4786 - C34898 * C4782 -
               C152100 * C4787 + C153829 * C4791) *
                  C153724 +
              (C36181 + C36180) * C153864) *
                 C153898 +
             ((C39453 + C39452) * C153724 + C39074 * C153864) * C23990 +
             ((C39451 + C39450) * C153724 + C40466 * C153864) * C23989) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[347] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153864 +
            (C11275 * C496 - C11276 * C480 - C11275 * C497 + C11269 * C516 +
             C11277 * C494 - C11278 * C479 - C11277 * C495 + C11270 * C515 +
             C11279 * C492 - C11280 * C478 - C11279 * C493 + C11271 * C514 +
             C11281 * C490 - C11282 * C477 - C11281 * C491 + C153862 * C513) *
                C153724) *
               C153625 * C153537 * C298 -
           ((C12506 + C12507 + C12508 + C12509) * C153724 +
            (C11577 + C11576 + C11575 + C11574) * C153864) *
               C153625 * C153537 * C299 +
           ((C11581 + C11580 + C11579 + C11578) * C153864 +
            (C13758 + C13759 + C13760 + C13761) * C153724) *
               C153625 * C153537 * C300) *
              C301 +
          (((C11582 + C11583 + C11584 + C11585) * C153864 +
            (C12510 + C12511 + C12512 + C12513) * C153724) *
               C153625 * C153537 * C299 -
           ((C11281 * C488 - C11282 * C476 - C11281 * C489 + C153862 * C512 +
             C11279 * C490 - C11280 * C477 - C11279 * C491 + C11271 * C513 +
             C11277 * C492 - C11278 * C478 - C11277 * C493 + C11270 * C514 +
             C11275 * C494 - C11276 * C479 - C11275 * C495 + C11269 * C515) *
                C153724 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153864) *
               C153625 * C153537 * C298 -
           ((C11281 * C1761 - C11282 * C1756 - C11281 * C1762 +
             C153862 * C1771 + C11279 * C1763 - C11280 * C1757 -
             C11279 * C1764 + C11271 * C1772 + C11277 * C1765 - C11278 * C1758 -
             C11277 * C1766 + C11270 * C1773 + C11275 * C1767 - C11276 * C1759 -
             C11275 * C1768 + C11269 * C1774) *
                C153724 +
            (C11589 + C11588 + C11587 + C11586) * C153864) *
               C153625 * C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
            C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
            C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
            C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
               C153864 +
           (C11275 * C496 - C11276 * C480 - C11275 * C497 + C11269 * C516 +
            C11277 * C494 - C11278 * C479 - C11277 * C495 + C11270 * C515 +
            C11279 * C492 - C11280 * C478 - C11279 * C493 + C11271 * C514 +
            C11281 * C490 - C11282 * C477 - C11281 * C491 + C153862 * C513) *
               C153724) *
              C153625 * C153537 * C153521 * C130 -
          ((C11281 * C488 - C11282 * C476 - C11281 * C489 + C153862 * C512 +
            C11279 * C490 - C11280 * C477 - C11279 * C491 + C11271 * C513 +
            C11277 * C492 - C11278 * C478 - C11277 * C493 + C11270 * C514 +
            C11275 * C494 - C11276 * C479 - C11275 * C495 + C11269 * C515) *
               C153724 +
           (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
            C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
            C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
            C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
               C153864) *
              C153625 * C153537 * C153521 * C131 +
          ((C11275 * C156 - C11276 * C146 - C11275 * C157 + C11269 * C170 +
            C11277 * C158 - C11278 * C147 - C11277 * C159 + C11270 * C171 +
            C11279 * C160 - C11280 * C148 - C11279 * C161 + C11271 * C172 +
            C11281 * C162 - C11282 * C149 - C11281 * C163 + C153862 * C173) *
               C153864 +
           (C11275 * C492 - C11276 * C478 - C11275 * C493 + C11269 * C514 +
            C11277 * C490 - C11278 * C477 - C11277 * C491 + C11270 * C513 +
            C11279 * C488 - C11280 * C476 - C11279 * C489 + C11271 * C512 +
            C11281 * C508 - C11282 * C486 - C11281 * C509 + C153862 * C522) *
               C153724) *
              C153625 * C153537 * C153521 * C132 -
          ((C11281 * C780 - C11282 * C779 - C11281 * C781 + C153862 * C782 +
            C11279 * C508 - C11280 * C486 - C11279 * C509 + C11271 * C522 +
            C11277 * C488 - C11278 * C476 - C11277 * C489 + C11270 * C512 +
            C11275 * C490 - C11276 * C477 - C11275 * C491 + C11269 * C513) *
               C153724 +
           (C11281 * C164 - C11282 * C150 - C11281 * C165 + C153862 * C174 +
            C11279 * C162 - C11280 * C149 - C11279 * C163 + C11271 * C173 +
            C11277 * C160 - C11278 * C148 - C11277 * C161 + C11270 * C172 +
            C11275 * C158 - C11276 * C147 - C11275 * C159 + C11269 * C171) *
               C153864) *
              C153625 * C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153864 +
            (C15542 + C15543 + C15544 + C15545) * C153724) *
               C153625 * C473 -
           ((C15546 + C15547 + C15548 + C15549) * C153724 +
            (C15545 + C15544 + C15543 + C15542) * C153864) *
               C153625 * C474 +
           ((C15549 + C15548 + C15547 + C15546) * C153864 +
            (C11275 * C2121 - C11276 * C2112 - C11275 * C2122 + C11269 * C2127 +
             C11277 * C2119 - C11278 * C2111 - C11277 * C2120 + C11270 * C2126 +
             C11279 * C2117 - C11280 * C2110 - C11279 * C2118 + C11271 * C2125 +
             C11281 * C2115 - C11282 * C2109 - C11281 * C2116 +
             C153862 * C2124) *
                C153724) *
               C153625 * C475) *
              C153521 * C301 +
          (((C15550 + C15551 + C15552 + C15553) * C153864 +
            (C15554 + C15555 + C15556 + C15557) * C153724) *
               C153625 * C474 -
           ((C15553 + C15552 + C15551 + C15550) * C153724 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153864) *
               C153625 * C473 -
           ((C11281 * C2113 - C11282 * C2108 - C11281 * C2114 +
             C153862 * C2123 + C11279 * C2115 - C11280 * C2109 -
             C11279 * C2116 + C11271 * C2124 + C11277 * C2117 - C11278 * C2110 -
             C11277 * C2118 + C11270 * C2125 + C11275 * C2119 - C11276 * C2111 -
             C11275 * C2120 + C11269 * C2126) *
                C153724 +
            (C15557 + C15556 + C15555 + C15554) * C153864) *
               C153625 * C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153864 +
            (C152100 * C496 - C34898 * C480 - C152100 * C497 + C153829 * C516 +
             C152081 * C494 - C34900 * C479 - C152081 * C495 + C153472 * C515) *
                C153724) *
               C23989 +
           ((C35192 + C35193) * C153864 + (C36175 + C36174) * C153724) *
               C23990 +
           (C35208 * C153864 + (C36173 + C36172) * C153724) * C153898) *
              C153537 * C153521 * C130 -
          (((C36179 + C36178) * C153724 + C35211 * C153864) * C153898 +
           ((C36177 + C36176) * C153724 + (C35201 + C35200) * C153864) *
               C23990 +
           ((C152081 * C492 - C34900 * C478 - C152081 * C493 + C153472 * C514 +
             C152100 * C494 - C34898 * C479 - C152100 * C495 + C153829 * C515) *
                C153724 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C153864) *
               C23989) *
              C153537 * C153521 * C131 +
          (((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
             C152081 * C158 - C34900 * C147 - C152081 * C159 + C153472 * C171) *
                C153864 +
            (C152100 * C492 - C34898 * C478 - C152100 * C493 + C153829 * C514 +
             C152081 * C490 - C34900 * C477 - C152081 * C491 + C153472 * C513) *
                C153724) *
               C23989 +
           ((C35640 + C35641) * C153864 +
            (C152100 * C955 - C34898 * C947 - C152100 * C956 + C153829 * C965 +
             C152081 * C957 - C34900 * C948 - C152081 * C958 + C153472 * C966) *
                C153724) *
               C23990 +
           ((C35642 + C35643) * C153864 +
            (C152100 * C1765 - C34898 * C1758 - C152100 * C1766 +
             C153829 * C1773 + C152081 * C1763 - C34900 * C1757 -
             C152081 * C1764 + C153472 * C1772) *
                C153724) *
               C153898) *
              C153537 * C153521 * C132 -
          (((C152081 * C1761 - C34900 * C1756 - C152081 * C1762 +
             C153472 * C1771 + C152100 * C1763 - C34898 * C1757 -
             C152100 * C1764 + C153829 * C1772) *
                C153724 +
            (C152081 * C333 - C34900 * C312 - C152081 * C334 + C153472 * C348 +
             C152100 * C331 - C34898 * C311 - C152100 * C332 + C153829 * C347) *
                C153864) *
               C153898 +
           ((C152081 * C959 - C34900 * C949 - C152081 * C960 + C153472 * C967 +
             C152100 * C957 - C34898 * C948 - C152100 * C958 + C153829 * C966) *
                C153724 +
            (C152081 * C315 - C34900 * C303 - C152081 * C316 + C153472 * C339 +
             C152100 * C317 - C34898 * C304 - C152100 * C318 + C153829 * C340) *
                C153864) *
               C23990 +
           ((C152081 * C488 - C34900 * C476 - C152081 * C489 + C153472 * C512 +
             C152100 * C490 - C34898 * C477 - C152100 * C491 + C153829 * C513) *
                C153724 +
            (C152081 * C160 - C34900 * C148 - C152081 * C161 + C153472 * C172 +
             C152100 * C158 - C34898 * C147 - C152100 * C159 + C153829 * C171) *
                C153864) *
               C23989) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153864 +
             (C152100 * C496 - C34898 * C480 - C152100 * C497 + C153829 * C516 +
              C152081 * C494 - C34900 * C479 - C152081 * C495 +
              C153472 * C515) *
                 C153724) *
                C23989 +
            ((C35192 + C35193) * C153864 + (C36175 + C36174) * C153724) *
                C23990 +
            C39078 * C153898) *
               C153537 * C298 -
           ((C37406 * C153724 + C36507 * C153864) * C153898 +
            (C37407 * C153724 + (C35195 + C35194) * C153864) * C23990 +
            ((C36174 + C36175) * C153724 + (C35193 + C35192) * C153864) *
                C23989) *
               C153537 * C299 +
           (C39078 * C23989 +
            (C35209 * C153864 + (C36171 + C36170) * C153724) * C23990 +
            ((C35199 + C35198) * C153864 + (C37422 + C37423) * C153724) *
                C153898) *
               C153537 * C300) *
              C301 +
          ((((C35200 + C35201) * C153864 + (C36176 + C36177) * C153724) *
                C23989 +
            ((C35202 + C35203) * C153864 + (C36178 + C36179) * C153724) *
                C23990 +
            ((C35204 + C35205) * C153864 + (C36180 + C36181) * C153724) *
                C153898) *
               C153537 * C299 -
           (C39079 * C153898 +
            ((C36177 + C36176) * C153724 + (C35201 + C35200) * C153864) *
                C23990 +
            ((C152081 * C492 - C34900 * C478 - C152081 * C493 + C153472 * C514 +
              C152100 * C494 - C34898 * C479 - C152100 * C495 +
              C153829 * C515) *
                 C153724 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153864) *
                C23989) *
               C153537 * C298 -
           (((C152081 * C5564 - C34900 * C5561 - C152081 * C5565 +
              C153472 * C5570 + C152100 * C5566 - C34898 * C5562 -
              C152100 * C5567 + C153829 * C5571) *
                 C153724 +
             (C35207 + C35206) * C153864) *
                C153898 +
            ((C36181 + C36180) * C153724 + C35210 * C153864) * C23990 +
            C39079 * C23989) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153864 +
             (C39442 + C39443) * C153724) *
                C23989 +
            ((C35192 + C35193) * C153864 + (C36175 + C36174) * C153724) *
                C23990 +
            C39078 * C153898) *
               C473 -
           (((C36757 + C36756) * C153724 + C37407 * C153864) * C153898 +
            ((C36755 + C36754) * C153724 + (C36174 + C36175) * C153864) *
                C23990 +
            ((C39444 + C39445) * C153724 + (C39443 + C39442) * C153864) *
                C23989) *
               C474 +
           (((C39445 + C39444) * C153864 +
             (C152100 * C2121 - C34898 * C2112 - C152100 * C2122 +
              C153829 * C2127 + C152081 * C2119 - C34900 * C2111 -
              C152081 * C2120 + C153472 * C2126) *
                 C153724) *
                C23989 +
            ((C36754 + C36755) * C153864 +
             (C152100 * C6195 - C34898 * C6184 - C152100 * C6196 +
              C153829 * C6202 + C152081 * C6193 - C34900 * C6183 -
              C152081 * C6194 + C153472 * C6201) *
                 C153724) *
                C23990 +
            ((C36756 + C36757) * C153864 +
             (C152100 * C6189 - C34898 * C6181 - C152100 * C6190 +
              C153829 * C6199 + C152081 * C6187 - C34900 * C6180 -
              C152081 * C6188 + C153472 * C6198) *
                 C153724) *
                C153898) *
               C475) *
              C153521 * C301 +
          ((((C39446 + C39447) * C153864 + (C39448 + C39449) * C153724) *
                C23989 +
            ((C36176 + C36177) * C153864 + (C39450 + C39451) * C153724) *
                C23990 +
            ((C36178 + C36179) * C153864 + (C39452 + C39453) * C153724) *
                C153898) *
               C474 -
           (C39079 * C153898 +
            ((C36177 + C36176) * C153724 + (C35201 + C35200) * C153864) *
                C23990 +
            ((C39447 + C39446) * C153724 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153864) *
                C23989) *
               C473 -
           (((C152081 * C6185 - C34900 * C6179 - C152081 * C6186 +
              C153472 * C6197 + C152100 * C6187 - C34898 * C6180 -
              C152100 * C6188 + C153829 * C6198) *
                 C153724 +
             (C39453 + C39452) * C153864) *
                C153898 +
            ((C152081 * C6191 - C34900 * C6182 - C152081 * C6192 +
              C153472 * C6200 + C152100 * C6193 - C34898 * C6183 -
              C152100 * C6194 + C153829 * C6201) *
                 C153724 +
             (C39451 + C39450) * C153864) *
                C23990 +
            ((C152081 * C2117 - C34900 * C2110 - C152081 * C2118 +
              C153472 * C2125 + C152100 * C2119 - C34898 * C2111 -
              C152100 * C2120 + C153829 * C2126) *
                 C153724 +
             (C39449 + C39448) * C153864) *
                C23989) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[348] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153864 +
            (C15542 + C15543 + C15544 + C15545) * C153724) *
               C153625 * C153849 -
           ((C15546 + C15547 + C15548 + C15549) * C153724 +
            (C15545 + C15544 + C15543 + C15542) * C153864) *
               C153625 * C153601) *
              C153521 * C153917 +
          (((C15550 + C15551 + C15552 + C15553) * C153864 +
            (C15554 + C15555 + C15556 + C15557) * C153724) *
               C153625 * C153601 -
           ((C15553 + C15552 + C15551 + C15550) * C153724 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153864) *
               C153625 * C153849) *
              C153521 * C153918 +
          (((C11275 * C156 - C11276 * C146 - C11275 * C157 + C11269 * C170 +
             C11277 * C158 - C11278 * C147 - C11277 * C159 + C11270 * C171 +
             C11279 * C160 - C11280 * C148 - C11279 * C161 + C11271 * C172 +
             C11281 * C162 - C11282 * C149 - C11281 * C163 + C153862 * C173) *
                C153864 +
            (C15970 + C15971 + C15972 + C15973) * C153724) *
               C153625 * C153849 -
           ((C11281 * C510 - C11282 * C487 - C11281 * C511 + C153862 * C523 +
             C11279 * C506 - C11280 * C485 - C11279 * C507 + C11271 * C521 +
             C11277 * C504 - C11278 * C484 - C11277 * C505 + C11270 * C520 +
             C11275 * C502 - C11276 * C483 - C11275 * C503 + C11269 * C519) *
                C153724 +
            (C15973 + C15972 + C15971 + C15970) * C153864) *
               C153625 * C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153864 +
             (C39442 + C39443) * C153724) *
                C23989 +
            ((C35192 + C35193) * C153864 + (C36175 + C36174) * C153724) *
                C23990 +
            C39078 * C153898) *
               C153849 -
           (((C36757 + C36756) * C153724 + C37407 * C153864) * C153898 +
            ((C36755 + C36754) * C153724 + (C36174 + C36175) * C153864) *
                C23990 +
            ((C39444 + C39445) * C153724 + (C39443 + C39442) * C153864) *
                C23989) *
               C153601) *
              C153521 * C153917 +
          ((((C39446 + C39447) * C153864 + (C39448 + C39449) * C153724) *
                C23989 +
            ((C36176 + C36177) * C153864 + (C39450 + C39451) * C153724) *
                C23990 +
            ((C36178 + C36179) * C153864 + (C39452 + C39453) * C153724) *
                C153898) *
               C153601 -
           (C39079 * C153898 +
            ((C36177 + C36176) * C153724 + (C35201 + C35200) * C153864) *
                C23990 +
            ((C39447 + C39446) * C153724 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153864) *
                C23989) *
               C153849) *
              C153521 * C153918 +
          ((((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
              C152081 * C158 - C34900 * C147 - C152081 * C159 +
              C153472 * C171) *
                 C153864 +
             (C40074 + C40075) * C153724) *
                C23989 +
            ((C35640 + C35641) * C153864 + (C39768 + C39769) * C153724) *
                C23990 +
            ((C35642 + C35643) * C153864 + (C39770 + C39771) * C153724) *
                C153898) *
               C153849 -
           (((C152081 * C3289 - C34900 * C3282 - C152081 * C3290 +
              C153472 * C3294 + C152100 * C3287 - C34898 * C3281 -
              C152100 * C3288 + C153829 * C3293) *
                 C153724 +
             (C39771 + C39770) * C153864) *
                C153898 +
            ((C152081 * C1332 - C34900 * C1326 - C152081 * C1333 +
              C153472 * C1341 + C152100 * C1334 - C34898 * C1327 -
              C152100 * C1335 + C153829 * C1342) *
                 C153724 +
             (C39769 + C39768) * C153864) *
                C23990 +
            ((C152081 * C504 - C34900 * C484 - C152081 * C505 + C153472 * C520 +
              C152100 * C502 - C34898 * C483 - C152100 * C503 +
              C153829 * C519) *
                 C153724 +
             (C40075 + C40074) * C153864) *
                C23989) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q));
    d2ee[349] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
            C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
            C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
            C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
               C153864 +
           (C11275 * C496 - C11276 * C480 - C11275 * C497 + C11269 * C516 +
            C11277 * C494 - C11278 * C479 - C11277 * C495 + C11270 * C515 +
            C11279 * C492 - C11280 * C478 - C11279 * C493 + C11271 * C514 +
            C11281 * C490 - C11282 * C477 - C11281 * C491 + C153862 * C513) *
               C153724) *
              C153625 * C153537 * C153521 * C130 -
          ((C11281 * C488 - C11282 * C476 - C11281 * C489 + C153862 * C512 +
            C11279 * C490 - C11280 * C477 - C11279 * C491 + C11271 * C513 +
            C11277 * C492 - C11278 * C478 - C11277 * C493 + C11270 * C514 +
            C11275 * C494 - C11276 * C479 - C11275 * C495 + C11269 * C515) *
               C153724 +
           (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
            C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
            C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
            C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
               C153864) *
              C153625 * C153537 * C153521 * C131 +
          ((C11275 * C156 - C11276 * C146 - C11275 * C157 + C11269 * C170 +
            C11277 * C158 - C11278 * C147 - C11277 * C159 + C11270 * C171 +
            C11279 * C160 - C11280 * C148 - C11279 * C161 + C11271 * C172 +
            C11281 * C162 - C11282 * C149 - C11281 * C163 + C153862 * C173) *
               C153864 +
           (C11275 * C492 - C11276 * C478 - C11275 * C493 + C11269 * C514 +
            C11277 * C490 - C11278 * C477 - C11277 * C491 + C11270 * C513 +
            C11279 * C488 - C11280 * C476 - C11279 * C489 + C11271 * C512 +
            C11281 * C508 - C11282 * C486 - C11281 * C509 + C153862 * C522) *
               C153724) *
              C153625 * C153537 * C153521 * C132 -
          ((C11281 * C780 - C11282 * C779 - C11281 * C781 + C153862 * C782 +
            C11279 * C508 - C11280 * C486 - C11279 * C509 + C11271 * C522 +
            C11277 * C488 - C11278 * C476 - C11277 * C489 + C11270 * C512 +
            C11275 * C490 - C11276 * C477 - C11275 * C491 + C11269 * C513) *
               C153724 +
           (C11281 * C164 - C11282 * C150 - C11281 * C165 + C153862 * C174 +
            C11279 * C162 - C11280 * C149 - C11279 * C163 + C11271 * C173 +
            C11277 * C160 - C11278 * C148 - C11277 * C161 + C11270 * C172 +
            C11275 * C158 - C11276 * C147 - C11275 * C159 + C11269 * C171) *
               C153864) *
              C153625 * C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153864 +
            (C11275 * C496 - C11276 * C480 - C11275 * C497 + C11269 * C516 +
             C11277 * C494 - C11278 * C479 - C11277 * C495 + C11270 * C515 +
             C11279 * C492 - C11280 * C478 - C11279 * C493 + C11271 * C514 +
             C11281 * C490 - C11282 * C477 - C11281 * C491 + C153862 * C513) *
                C153724) *
               C153625 * C153537 * C298 -
           ((C12506 + C12507 + C12508 + C12509) * C153724 +
            (C11577 + C11576 + C11575 + C11574) * C153864) *
               C153625 * C153537 * C299 +
           ((C11581 + C11580 + C11579 + C11578) * C153864 +
            (C13758 + C13759 + C13760 + C13761) * C153724) *
               C153625 * C153537 * C300) *
              C301 +
          (((C11582 + C11583 + C11584 + C11585) * C153864 +
            (C12510 + C12511 + C12512 + C12513) * C153724) *
               C153625 * C153537 * C299 -
           ((C11281 * C488 - C11282 * C476 - C11281 * C489 + C153862 * C512 +
             C11279 * C490 - C11280 * C477 - C11279 * C491 + C11271 * C513 +
             C11277 * C492 - C11278 * C478 - C11277 * C493 + C11270 * C514 +
             C11275 * C494 - C11276 * C479 - C11275 * C495 + C11269 * C515) *
                C153724 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153864) *
               C153625 * C153537 * C298 -
           ((C11281 * C1761 - C11282 * C1756 - C11281 * C1762 +
             C153862 * C1771 + C11279 * C1763 - C11280 * C1757 -
             C11279 * C1764 + C11271 * C1772 + C11277 * C1765 - C11278 * C1758 -
             C11277 * C1766 + C11270 * C1773 + C11275 * C1767 - C11276 * C1759 -
             C11275 * C1768 + C11269 * C1774) *
                C153724 +
            (C11589 + C11588 + C11587 + C11586) * C153864) *
               C153625 * C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153864 +
            (C152100 * C496 - C34898 * C480 - C152100 * C497 + C153829 * C516 +
             C152081 * C494 - C34900 * C479 - C152081 * C495 + C153472 * C515) *
                C153724) *
               C23989 +
           ((C35192 + C35193) * C153864 + (C36175 + C36174) * C153724) *
               C23990 +
           (C35208 * C153864 + (C36173 + C36172) * C153724) * C153898) *
              C153537 * C153521 * C130 -
          (((C36179 + C36178) * C153724 + C35211 * C153864) * C153898 +
           ((C36177 + C36176) * C153724 + (C35201 + C35200) * C153864) *
               C23990 +
           ((C152081 * C492 - C34900 * C478 - C152081 * C493 + C153472 * C514 +
             C152100 * C494 - C34898 * C479 - C152100 * C495 + C153829 * C515) *
                C153724 +
            (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
             C152100 * C154 - C34898 * C145 - C152100 * C155 + C153829 * C169) *
                C153864) *
               C23989) *
              C153537 * C153521 * C131 +
          (((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
             C152081 * C158 - C34900 * C147 - C152081 * C159 + C153472 * C171) *
                C153864 +
            (C152100 * C492 - C34898 * C478 - C152100 * C493 + C153829 * C514 +
             C152081 * C490 - C34900 * C477 - C152081 * C491 + C153472 * C513) *
                C153724) *
               C23989 +
           ((C35640 + C35641) * C153864 +
            (C152100 * C955 - C34898 * C947 - C152100 * C956 + C153829 * C965 +
             C152081 * C957 - C34900 * C948 - C152081 * C958 + C153472 * C966) *
                C153724) *
               C23990 +
           ((C35642 + C35643) * C153864 +
            (C152100 * C1765 - C34898 * C1758 - C152100 * C1766 +
             C153829 * C1773 + C152081 * C1763 - C34900 * C1757 -
             C152081 * C1764 + C153472 * C1772) *
                C153724) *
               C153898) *
              C153537 * C153521 * C132 -
          (((C152081 * C1761 - C34900 * C1756 - C152081 * C1762 +
             C153472 * C1771 + C152100 * C1763 - C34898 * C1757 -
             C152100 * C1764 + C153829 * C1772) *
                C153724 +
            (C152081 * C333 - C34900 * C312 - C152081 * C334 + C153472 * C348 +
             C152100 * C331 - C34898 * C311 - C152100 * C332 + C153829 * C347) *
                C153864) *
               C153898 +
           ((C152081 * C959 - C34900 * C949 - C152081 * C960 + C153472 * C967 +
             C152100 * C957 - C34898 * C948 - C152100 * C958 + C153829 * C966) *
                C153724 +
            (C152081 * C315 - C34900 * C303 - C152081 * C316 + C153472 * C339 +
             C152100 * C317 - C34898 * C304 - C152100 * C318 + C153829 * C340) *
                C153864) *
               C23990 +
           ((C152081 * C488 - C34900 * C476 - C152081 * C489 + C153472 * C512 +
             C152100 * C490 - C34898 * C477 - C152100 * C491 + C153829 * C513) *
                C153724 +
            (C152081 * C160 - C34900 * C148 - C152081 * C161 + C153472 * C172 +
             C152100 * C158 - C34898 * C147 - C152100 * C159 + C153829 * C171) *
                C153864) *
               C23989) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153864 +
             (C152100 * C496 - C34898 * C480 - C152100 * C497 + C153829 * C516 +
              C152081 * C494 - C34900 * C479 - C152081 * C495 +
              C153472 * C515) *
                 C153724) *
                C23989 +
            ((C35192 + C35193) * C153864 + (C36175 + C36174) * C153724) *
                C23990 +
            C39078 * C153898) *
               C153537 * C298 -
           ((C37406 * C153724 + C36507 * C153864) * C153898 +
            (C37407 * C153724 + (C35195 + C35194) * C153864) * C23990 +
            ((C36174 + C36175) * C153724 + (C35193 + C35192) * C153864) *
                C23989) *
               C153537 * C299 +
           (C39078 * C23989 +
            (C35209 * C153864 + (C36171 + C36170) * C153724) * C23990 +
            ((C35199 + C35198) * C153864 + (C37422 + C37423) * C153724) *
                C153898) *
               C153537 * C300) *
              C301 +
          ((((C35200 + C35201) * C153864 + (C36176 + C36177) * C153724) *
                C23989 +
            ((C35202 + C35203) * C153864 + (C36178 + C36179) * C153724) *
                C23990 +
            ((C35204 + C35205) * C153864 + (C36180 + C36181) * C153724) *
                C153898) *
               C153537 * C299 -
           (C39079 * C153898 +
            ((C36177 + C36176) * C153724 + (C35201 + C35200) * C153864) *
                C23990 +
            ((C152081 * C492 - C34900 * C478 - C152081 * C493 + C153472 * C514 +
              C152100 * C494 - C34898 * C479 - C152100 * C495 +
              C153829 * C515) *
                 C153724 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153864) *
                C23989) *
               C153537 * C298 -
           (((C152081 * C5564 - C34900 * C5561 - C152081 * C5565 +
              C153472 * C5570 + C152100 * C5566 - C34898 * C5562 -
              C152100 * C5567 + C153829 * C5571) *
                 C153724 +
             (C35207 + C35206) * C153864) *
                C153898 +
            ((C36181 + C36180) * C153724 + C35210 * C153864) * C23990 +
            C39079 * C23989) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[350] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153864 +
            (C15542 + C15543 + C15544 + C15545) * C153724) *
               C153625 * C153537 * C153919 -
           ((C12506 + C12507 + C12508 + C12509) * C153724 +
            (C11577 + C11576 + C11575 + C11574) * C153864) *
               C153625 * C153537 * C153920 +
           ((C11581 + C11580 + C11579 + C11578) * C153864 +
            (C13758 + C13759 + C13760 + C13761) * C153724) *
               C153625 * C153537 * C1469) *
              C153840 +
          (((C11582 + C11583 + C11584 + C11585) * C153864 +
            (C12510 + C12511 + C12512 + C12513) * C153724) *
               C153625 * C153537 * C153920 -
           ((C15553 + C15552 + C15551 + C15550) * C153724 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153864) *
               C153625 * C153537 * C153919 -
           ((C11281 * C1761 - C11282 * C1756 - C11281 * C1762 +
             C153862 * C1771 + C11279 * C1763 - C11280 * C1757 -
             C11279 * C1764 + C11271 * C1772 + C11277 * C1765 - C11278 * C1758 -
             C11277 * C1766 + C11270 * C1773 + C11275 * C1767 - C11276 * C1759 -
             C11275 * C1768 + C11269 * C1774) *
                C153724 +
            (C11589 + C11588 + C11587 + C11586) * C153864) *
               C153625 * C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153864 +
             (C39442 + C39443) * C153724) *
                C23989 +
            ((C35192 + C35193) * C153864 + C40462 * C153724) * C23990 +
            C39078 * C153898) *
               C153537 * C153919 -
           (C40953 * C153898 +
            (C37407 * C153724 + (C35195 + C35194) * C153864) * C23990 +
            (C40463 * C153724 + (C35193 + C35192) * C153864) * C23989) *
               C153537 * C153920 +
           (C39078 * C23989 +
            (C35209 * C153864 + (C36171 + C36170) * C153724) * C23990 +
            ((C35199 + C35198) * C153864 + (C37422 + C37423) * C153724) *
                C153898) *
               C153537 * C1469) *
              C153840 +
          ((((C35200 + C35201) * C153864 + C40464 * C153724) * C23989 +
            ((C35202 + C35203) * C153864 + C40465 * C153724) * C23990 +
            ((C35204 + C35205) * C153864 + (C36180 + C36181) * C153724) *
                C153898) *
               C153537 * C153920 -
           (C39079 * C153898 +
            (C40466 * C153724 + (C35201 + C35200) * C153864) * C23990 +
            ((C39447 + C39446) * C153724 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153864) *
                C23989) *
               C153537 * C153919 -
           (((C152081 * C5564 - C34900 * C5561 - C152081 * C5565 +
              C153472 * C5570 + C152100 * C5566 - C34898 * C5562 -
              C152100 * C5567 + C153829 * C5571) *
                 C153724 +
             (C35207 + C35206) * C153864) *
                C153898 +
            ((C36181 + C36180) * C153724 + C35210 * C153864) * C23990 +
            C39079 * C23989) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[351] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153864 +
            (C15542 + C15543 + C15544 + C15545) * C153724) *
               C153625 * C153849 -
           ((C15546 + C15547 + C15548 + C15549) * C153724 +
            (C15545 + C15544 + C15543 + C15542) * C153864) *
               C153625 * C153601) *
              C153919 +
          (((C12509 + C12508 + C12507 + C12506) * C153864 +
            (C13084 + C13085 + C13086 + C13087) * C153724) *
               C153625 * C153601 -
           ((C12506 + C12507 + C12508 + C12509) * C153724 +
            (C11577 + C11576 + C11575 + C11574) * C153864) *
               C153625 * C153849) *
              C153920 +
          (((C11581 + C11580 + C11579 + C11578) * C153864 +
            (C13758 + C13759 + C13760 + C13761) * C153724) *
               C153625 * C153849 -
           ((C11281 * C3289 - C11282 * C3282 - C11281 * C3290 +
             C153862 * C3294 + C11279 * C3287 - C11280 * C3281 -
             C11279 * C3288 + C11271 * C3293 + C11277 * C3285 - C11278 * C3280 -
             C11277 * C3286 + C11270 * C3292 + C11275 * C3283 - C11276 * C3279 -
             C11275 * C3284 + C11269 * C3291) *
                C153724 +
            (C13761 + C13760 + C13759 + C13758) * C153864) *
               C153625 * C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153864 +
             (C39442 + C39443) * C153724) *
                C23989 +
            ((C35192 + C35193) * C153864 + C40462 * C153724) * C23990 +
            C39078 * C153898) *
               C153849 -
           (C42245 * C153898 + (C41245 * C153724 + C40463 * C153864) * C23990 +
            ((C39444 + C39445) * C153724 + (C39443 + C39442) * C153864) *
                C23989) *
               C153601) *
              C153919 +
          (((C40462 * C153864 + C41246 * C153724) * C23989 +
            (C39073 * C153864 + C41255 * C153724) * C23990 +
            (C42244 * C153864 + (C36758 + C36759) * C153724) * C153898) *
               C153601 -
           (C40953 * C153898 +
            (C37407 * C153724 + (C35195 + C35194) * C153864) * C23990 +
            (C40463 * C153724 + (C35193 + C35192) * C153864) * C23989) *
               C153849) *
              C153920 +
          ((C39078 * C23989 + (C35209 * C153864 + C42244 * C153724) * C23990 +
            ((C35199 + C35198) * C153864 + (C37422 + C37423) * C153724) *
                C153898) *
               C153849 -
           (((C152081 * C28550 - C34900 * C28547 - C152081 * C28551 +
              C153472 * C28553 + C152100 * C28548 - C34898 * C28546 -
              C152100 * C28549 + C153829 * C28552) *
                 C153724 +
             (C37423 + C37422) * C153864) *
                C153898 +
            ((C36759 + C36758) * C153724 + C37406 * C153864) * C23990 +
            C42245 * C23989) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[352] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
            C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
            C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
            C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
               C153864 +
           (C15542 + C15543 + C15544 + C15545) * C153724) *
              C153625 * C153537 * C1178 -
          ((C12506 + C12507 + C12508 + C12509) * C153724 +
           (C11577 + C11576 + C11575 + C11574) * C153864) *
              C153625 * C153537 * C1179 +
          ((C11581 + C11580 + C11579 + C11578) * C153864 +
           (C13758 + C13759 + C13760 + C13761) * C153724) *
              C153625 * C153537 * C1180 -
          ((C11281 * C4073 - C11282 * C4066 - C11281 * C4074 + C153862 * C4078 +
            C11279 * C4071 - C11280 * C4065 - C11279 * C4072 + C11271 * C4077 +
            C11277 * C4069 - C11278 * C4064 - C11277 * C4070 + C11270 * C4076 +
            C11275 * C4067 - C11276 * C4063 - C11275 * C4068 + C11269 * C4075) *
               C153724 +
           (C12865 + C12864 + C12863 + C12862) * C153864) *
              C153625 * C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153864 +
            (C15542 + C15543 + C15544 + C15545) * C153724) *
               C153625 * C153537 * C1091 -
           ((C12506 + C12507 + C12508 + C12509) * C153724 +
            (C11577 + C11576 + C11575 + C11574) * C153864) *
               C153625 * C153537 * C153573) *
              C1093 +
          (((C11582 + C11583 + C11584 + C11585) * C153864 +
            (C12510 + C12511 + C12512 + C12513) * C153724) *
               C153625 * C153537 * C153573 -
           ((C15553 + C15552 + C15551 + C15550) * C153724 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153864) *
               C153625 * C153537 * C1091) *
              C1094 +
          (((C11275 * C156 - C11276 * C146 - C11275 * C157 + C11269 * C170 +
             C11277 * C158 - C11278 * C147 - C11277 * C159 + C11270 * C171 +
             C11279 * C160 - C11280 * C148 - C11279 * C161 + C11271 * C172 +
             C11281 * C162 - C11282 * C149 - C11281 * C163 + C153862 * C173) *
                C153864 +
            (C15970 + C15971 + C15972 + C15973) * C153724) *
               C153625 * C153537 * C1091 -
           ((C11281 * C961 - C11282 * C950 - C11281 * C962 + C153862 * C968 +
             C11279 * C959 - C11280 * C949 - C11279 * C960 + C11271 * C967 +
             C11277 * C957 - C11278 * C948 - C11277 * C958 + C11270 * C966 +
             C11275 * C955 - C11276 * C947 - C11275 * C956 + C11269 * C965) *
                C153724 +
            (C12005 + C12004 + C12003 + C12002) * C153864) *
               C153625 * C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153864 +
            (C15542 + C15543 + C15544 + C15545) * C153724) *
               C153625 * C473 -
           ((C15546 + C15547 + C15548 + C15549) * C153724 +
            (C15545 + C15544 + C15543 + C15542) * C153864) *
               C153625 * C474 +
           ((C15549 + C15548 + C15547 + C15546) * C153864 +
            (C11275 * C2121 - C11276 * C2112 - C11275 * C2122 + C11269 * C2127 +
             C11277 * C2119 - C11278 * C2111 - C11277 * C2120 + C11270 * C2126 +
             C11279 * C2117 - C11280 * C2110 - C11279 * C2118 + C11271 * C2125 +
             C11281 * C2115 - C11282 * C2109 - C11281 * C2116 +
             C153862 * C2124) *
                C153724) *
               C153625 * C475) *
              C1091 +
          (((C12509 + C12508 + C12507 + C12506) * C153864 +
            (C13084 + C13085 + C13086 + C13087) * C153724) *
               C153625 * C474 -
           ((C12506 + C12507 + C12508 + C12509) * C153724 +
            (C11577 + C11576 + C11575 + C11574) * C153864) *
               C153625 * C473 -
           ((C11281 * C8429 - C11282 * C8428 - C11281 * C8430 +
             C153862 * C8431 + C11279 * C6191 - C11280 * C6182 -
             C11279 * C6192 + C11271 * C6200 + C11277 * C6193 - C11278 * C6183 -
             C11277 * C6194 + C11270 * C6201 + C11275 * C6195 - C11276 * C6184 -
             C11275 * C6196 + C11269 * C6202) *
                C153724 +
            (C13087 + C13086 + C13085 + C13084) * C153864) *
               C153625 * C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153864 +
             (C39442 + C39443) * C153724) *
                C23989 +
            ((C35192 + C35193) * C153864 + C40462 * C153724) * C23990 +
            C39078 * C153898) *
               C153537 * C1091 -
           ((C37406 * C153724 + C36507 * C153864) * C153898 +
            (C37407 * C153724 + (C35195 + C35194) * C153864) * C23990 +
            (C40463 * C153724 + (C35193 + C35192) * C153864) * C23989) *
               C153537 * C153573) *
              C1093 +
          ((((C35200 + C35201) * C153864 + C40464 * C153724) * C23989 +
            ((C35202 + C35203) * C153864 + C40465 * C153724) * C23990 +
            ((C35204 + C35205) * C153864 + (C36180 + C36181) * C153724) *
                C153898) *
               C153537 * C153573 -
           (C39079 * C153898 +
            (C40466 * C153724 + (C35201 + C35200) * C153864) * C23990 +
            ((C39447 + C39446) * C153724 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153864) *
                C23989) *
               C153537 * C1091) *
              C1094 +
          ((((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
              C152081 * C158 - C34900 * C147 - C152081 * C159 +
              C153472 * C171) *
                 C153864 +
             (C40074 + C40075) * C153724) *
                C23989 +
            ((C35640 + C35641) * C153864 + (C39768 + C39769) * C153724) *
                C23990 +
            ((C35642 + C35643) * C153864 + (C39770 + C39771) * C153724) *
                C153898) *
               C153537 * C1091 -
           (((C152081 * C4073 - C34900 * C4066 - C152081 * C4074 +
              C153472 * C4078 + C152100 * C4071 - C34898 * C4065 -
              C152100 * C4072 + C153829 * C4077) *
                 C153724 +
             (C35645 + C35644) * C153864) *
                C153898 +
            ((C39771 + C39770) * C153724 + (C35643 + C35642) * C153864) *
                C23990 +
            ((C39769 + C39768) * C153724 + (C35641 + C35640) * C153864) *
                C23989) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153864 +
            (C39442 + C39443) * C153724) *
               C23989 +
           ((C35192 + C35193) * C153864 + C40462 * C153724) * C23990 +
           C39078 * C153898) *
              C153537 * C1178 -
          (C40953 * C153898 +
           (C37407 * C153724 + (C35195 + C35194) * C153864) * C23990 +
           (C40463 * C153724 + (C35193 + C35192) * C153864) * C23989) *
              C153537 * C1179 +
          (C39078 * C23989 +
           (C35209 * C153864 + (C36171 + C36170) * C153724) * C23990 +
           ((C35199 + C35198) * C153864 + (C37422 + C37423) * C153724) *
               C153898) *
              C153537 * C1180 -
          (((C152081 * C28996 - C34900 * C28993 - C152081 * C28997 +
             C153472 * C28999 + C152100 * C28994 - C34898 * C28992 -
             C152100 * C28995 + C153829 * C28998) *
                C153724 +
            (C36523 + C36522) * C153864) *
               C153898 +
           ((C37423 + C37422) * C153724 + C36506 * C153864) * C23990 +
           C40953 * C23989) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153864 +
             (C39442 + C39443) * C153724) *
                C23989 +
            ((C35192 + C35193) * C153864 + C40462 * C153724) * C23990 +
            C39078 * C153898) *
               C473 -
           ((C41244 * C153724 + C37407 * C153864) * C153898 +
            (C41245 * C153724 + C40463 * C153864) * C23990 +
            ((C39444 + C39445) * C153724 + (C39443 + C39442) * C153864) *
                C23989) *
               C474 +
           (((C39445 + C39444) * C153864 +
             (C152100 * C2121 - C34898 * C2112 - C152100 * C2122 +
              C153829 * C2127 + C152081 * C2119 - C34900 * C2111 -
              C152081 * C2120 + C153472 * C2126) *
                 C153724) *
                C23989 +
            (C41246 * C153864 + (C41272 + C41273) * C153724) * C23990 +
            (C41255 * C153864 + (C41274 + C41275) * C153724) * C153898) *
               C475) *
              C1091 +
          (((C40462 * C153864 + C41246 * C153724) * C23989 +
            (C39073 * C153864 + C41255 * C153724) * C23990 +
            ((C36171 + C36170) * C153864 + (C36758 + C36759) * C153724) *
                C153898) *
               C474 -
           (C40953 * C153898 +
            (C37407 * C153724 + (C35195 + C35194) * C153864) * C23990 +
            (C40463 * C153724 + (C35193 + C35192) * C153864) * C23989) *
               C473 -
           (((C152081 * C32074 - C34900 * C32073 - C152081 * C32075 +
              C153472 * C32076 + C152100 * C30186 - C34898 * C30183 -
              C152100 * C30187 + C153829 * C30189) *
                 C153724 +
             (C36759 + C36758) * C153864) *
                C153898 +
            ((C41275 + C41274) * C153724 + C41244 * C153864) * C23990 +
            ((C41273 + C41272) * C153724 + C41245 * C153864) * C23989) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[353] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
              C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
              C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
              C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                 C153864 +
             (C15542 + C15543 + C15544 + C15545) * C153724) *
                C153625 * C153849 -
            ((C15546 + C15547 + C15548 + C15549) * C153724 +
             (C15545 + C15544 + C15543 + C15542) * C153864) *
                C153625 * C153601) *
               C1091 +
           (((C12509 + C12508 + C12507 + C12506) * C153864 +
             (C13084 + C13085 + C13086 + C13087) * C153724) *
                C153625 * C153601 -
            ((C12506 + C12507 + C12508 + C12509) * C153724 +
             (C11577 + C11576 + C11575 + C11574) * C153864) *
                C153625 * C153849) *
               C153573) *
              C153840 +
          ((((C15550 + C15551 + C15552 + C15553) * C153864 +
             (C15554 + C15555 + C15556 + C15557) * C153724) *
                C153625 * C153601 -
            ((C15553 + C15552 + C15551 + C15550) * C153724 +
             (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
              C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
              C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
              C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                 C153864) *
                C153625 * C153849) *
               C1091 +
           (((C11582 + C11583 + C11584 + C11585) * C153864 +
             (C12510 + C12511 + C12512 + C12513) * C153724) *
                C153625 * C153849 -
            ((C11281 * C1330 - C11282 * C1325 - C11281 * C1331 +
              C153862 * C1340 + C11279 * C1332 - C11280 * C1326 -
              C11279 * C1333 + C11271 * C1341 + C11277 * C1334 -
              C11278 * C1327 - C11277 * C1335 + C11270 * C1342 +
              C11275 * C1336 - C11276 * C1328 - C11275 * C1337 +
              C11269 * C1343) *
                 C153724 +
             (C12513 + C12512 + C12511 + C12510) * C153864) *
                C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C152100 * C152 - C34898 * C144 - C152100 * C153 +
               C153829 * C168 + C152081 * C154 - C34900 * C145 -
               C152081 * C155 + C153472 * C169) *
                  C153864 +
              (C39442 + C39443) * C153724) *
                 C23989 +
             ((C35192 + C35193) * C153864 + C40462 * C153724) * C23990 +
             C39078 * C153898) *
                C153849 -
            ((C41244 * C153724 + C37407 * C153864) * C153898 +
             (C41245 * C153724 + C40463 * C153864) * C23990 +
             ((C39444 + C39445) * C153724 + (C39443 + C39442) * C153864) *
                 C23989) *
                C153601) *
               C1091 +
           (((C40462 * C153864 + C41246 * C153724) * C23989 +
             (C39073 * C153864 + C41255 * C153724) * C23990 +
             ((C36171 + C36170) * C153864 + (C36758 + C36759) * C153724) *
                 C153898) *
                C153601 -
            (C40953 * C153898 +
             (C37407 * C153724 + (C35195 + C35194) * C153864) * C23990 +
             (C40463 * C153724 + (C35193 + C35192) * C153864) * C23989) *
                C153849) *
               C153573) *
              C153840 +
          (((((C39446 + C39447) * C153864 + (C39448 + C39449) * C153724) *
                 C23989 +
             (C40464 * C153864 + (C39450 + C39451) * C153724) * C23990 +
             (C40465 * C153864 + (C39452 + C39453) * C153724) * C153898) *
                C153601 -
            (C39079 * C153898 +
             (C40466 * C153724 + (C35201 + C35200) * C153864) * C23990 +
             ((C39447 + C39446) * C153724 +
              (C152081 * C156 - C34900 * C146 - C152081 * C157 +
               C153472 * C170 + C152100 * C154 - C34898 * C145 -
               C152100 * C155 + C153829 * C169) *
                  C153864) *
                 C23989) *
                C153849) *
               C1091 +
           ((((C35200 + C35201) * C153864 + C40464 * C153724) * C23989 +
             ((C35202 + C35203) * C153864 + C40465 * C153724) * C23990 +
             ((C35204 + C35205) * C153864 + (C36180 + C36181) * C153724) *
                 C153898) *
                C153849 -
            (((C152081 * C4784 - C34900 * C4781 - C152081 * C4785 +
               C153472 * C4790 + C152100 * C4786 - C34898 * C4782 -
               C152100 * C4787 + C153829 * C4791) *
                  C153724 +
              (C36181 + C36180) * C153864) *
                 C153898 +
             ((C39453 + C39452) * C153724 + C39074 * C153864) * C23990 +
             ((C39451 + C39450) * C153724 + C40466 * C153864) * C23989) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[354] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153864 +
            (C15542 + C15543 + C15544 + C15545) * C153724) *
               C153625 * C153537 * C1091 -
           ((C12506 + C12507 + C12508 + C12509) * C153724 +
            (C11577 + C11576 + C11575 + C11574) * C153864) *
               C153625 * C153537 * C153573) *
              C1093 +
          (((C11582 + C11583 + C11584 + C11585) * C153864 +
            (C12510 + C12511 + C12512 + C12513) * C153724) *
               C153625 * C153537 * C153573 -
           ((C15553 + C15552 + C15551 + C15550) * C153724 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153864) *
               C153625 * C153537 * C1091) *
              C1094 +
          (((C11275 * C156 - C11276 * C146 - C11275 * C157 + C11269 * C170 +
             C11277 * C158 - C11278 * C147 - C11277 * C159 + C11270 * C171 +
             C11279 * C160 - C11280 * C148 - C11279 * C161 + C11271 * C172 +
             C11281 * C162 - C11282 * C149 - C11281 * C163 + C153862 * C173) *
                C153864 +
            (C15970 + C15971 + C15972 + C15973) * C153724) *
               C153625 * C153537 * C1091 -
           ((C11281 * C961 - C11282 * C950 - C11281 * C962 + C153862 * C968 +
             C11279 * C959 - C11280 * C949 - C11279 * C960 + C11271 * C967 +
             C11277 * C957 - C11278 * C948 - C11277 * C958 + C11270 * C966 +
             C11275 * C955 - C11276 * C947 - C11275 * C956 + C11269 * C965) *
                C153724 +
            (C12005 + C12004 + C12003 + C12002) * C153864) *
               C153625 * C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
            C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
            C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
            C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
               C153864 +
           (C15542 + C15543 + C15544 + C15545) * C153724) *
              C153625 * C153537 * C1178 -
          ((C12506 + C12507 + C12508 + C12509) * C153724 +
           (C11577 + C11576 + C11575 + C11574) * C153864) *
              C153625 * C153537 * C1179 +
          ((C11581 + C11580 + C11579 + C11578) * C153864 +
           (C13758 + C13759 + C13760 + C13761) * C153724) *
              C153625 * C153537 * C1180 -
          ((C11281 * C4073 - C11282 * C4066 - C11281 * C4074 + C153862 * C4078 +
            C11279 * C4071 - C11280 * C4065 - C11279 * C4072 + C11271 * C4077 +
            C11277 * C4069 - C11278 * C4064 - C11277 * C4070 + C11270 * C4076 +
            C11275 * C4067 - C11276 * C4063 - C11275 * C4068 + C11269 * C4075) *
               C153724 +
           (C12865 + C12864 + C12863 + C12862) * C153864) *
              C153625 * C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153864 +
             (C39442 + C39443) * C153724) *
                C23989 +
            ((C35192 + C35193) * C153864 + C40462 * C153724) * C23990 +
            C39078 * C153898) *
               C153537 * C1091 -
           ((C37406 * C153724 + C36507 * C153864) * C153898 +
            (C37407 * C153724 + (C35195 + C35194) * C153864) * C23990 +
            (C40463 * C153724 + (C35193 + C35192) * C153864) * C23989) *
               C153537 * C153573) *
              C1093 +
          ((((C35200 + C35201) * C153864 + C40464 * C153724) * C23989 +
            ((C35202 + C35203) * C153864 + C40465 * C153724) * C23990 +
            ((C35204 + C35205) * C153864 + (C36180 + C36181) * C153724) *
                C153898) *
               C153537 * C153573 -
           (C39079 * C153898 +
            (C40466 * C153724 + (C35201 + C35200) * C153864) * C23990 +
            ((C39447 + C39446) * C153724 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153864) *
                C23989) *
               C153537 * C1091) *
              C1094 +
          ((((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
              C152081 * C158 - C34900 * C147 - C152081 * C159 +
              C153472 * C171) *
                 C153864 +
             (C40074 + C40075) * C153724) *
                C23989 +
            ((C35640 + C35641) * C153864 + (C39768 + C39769) * C153724) *
                C23990 +
            ((C35642 + C35643) * C153864 + (C39770 + C39771) * C153724) *
                C153898) *
               C153537 * C1091 -
           (((C152081 * C4073 - C34900 * C4066 - C152081 * C4074 +
              C153472 * C4078 + C152100 * C4071 - C34898 * C4065 -
              C152100 * C4072 + C153829 * C4077) *
                 C153724 +
             (C35645 + C35644) * C153864) *
                C153898 +
            ((C39771 + C39770) * C153724 + (C35643 + C35642) * C153864) *
                C23990 +
            ((C39769 + C39768) * C153724 + (C35641 + C35640) * C153864) *
                C23989) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153864 +
            (C39442 + C39443) * C153724) *
               C23989 +
           ((C35192 + C35193) * C153864 + C40462 * C153724) * C23990 +
           C39078 * C153898) *
              C153537 * C1178 -
          (C40953 * C153898 +
           (C37407 * C153724 + (C35195 + C35194) * C153864) * C23990 +
           (C40463 * C153724 + (C35193 + C35192) * C153864) * C23989) *
              C153537 * C1179 +
          (C39078 * C23989 +
           (C35209 * C153864 + (C36171 + C36170) * C153724) * C23990 +
           ((C35199 + C35198) * C153864 + (C37422 + C37423) * C153724) *
               C153898) *
              C153537 * C1180 -
          (((C152081 * C28996 - C34900 * C28993 - C152081 * C28997 +
             C153472 * C28999 + C152100 * C28994 - C34898 * C28992 -
             C152100 * C28995 + C153829 * C28998) *
                C153724 +
            (C36523 + C36522) * C153864) *
               C153898 +
           ((C37423 + C37422) * C153724 + C36506 * C153864) * C23990 +
           C40953 * C23989) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[355] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
              C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
              C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
              C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                 C153864 +
             (C15542 + C15543 + C15544 + C15545) * C153724) *
                C153625 * C1898 -
            ((C15546 + C15547 + C15548 + C15549) * C153724 +
             (C15545 + C15544 + C15543 + C15542) * C153864) *
                C153625 * C153601) *
               C153848 +
           (((C12509 + C12508 + C12507 + C12506) * C153864 +
             (C13084 + C13085 + C13086 + C13087) * C153724) *
                C153625 * C153601 -
            ((C12506 + C12507 + C12508 + C12509) * C153724 +
             (C11577 + C11576 + C11575 + C11574) * C153864) *
                C153625 * C1898) *
               C153573) *
              C153840 +
          ((((C15550 + C15551 + C15552 + C15553) * C153864 +
             (C15554 + C15555 + C15556 + C15557) * C153724) *
                C153625 * C153601 -
            ((C15553 + C15552 + C15551 + C15550) * C153724 +
             (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
              C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
              C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
              C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                 C153864) *
                C153625 * C1898) *
               C153848 +
           (((C11582 + C11583 + C11584 + C11585) * C153864 +
             (C12510 + C12511 + C12512 + C12513) * C153724) *
                C153625 * C1898 -
            ((C11281 * C1330 - C11282 * C1325 - C11281 * C1331 +
              C153862 * C1340 + C11279 * C1332 - C11280 * C1326 -
              C11279 * C1333 + C11271 * C1341 + C11277 * C1334 -
              C11278 * C1327 - C11277 * C1335 + C11270 * C1342 +
              C11275 * C1336 - C11276 * C1328 - C11275 * C1337 +
              C11269 * C1343) *
                 C153724 +
             (C12513 + C12512 + C12511 + C12510) * C153864) *
                C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C152100 * C152 - C34898 * C144 - C152100 * C153 +
               C153829 * C168 + C152081 * C154 - C34900 * C145 -
               C152081 * C155 + C153472 * C169) *
                  C153864 +
              (C39442 + C39443) * C153724) *
                 C23989 +
             ((C35192 + C35193) * C153864 + C40462 * C153724) * C23990 +
             C39078 * C153898) *
                C1898 -
            (C42245 * C153898 + (C41245 * C153724 + C40463 * C153864) * C23990 +
             ((C39444 + C39445) * C153724 + (C39443 + C39442) * C153864) *
                 C23989) *
                C153601) *
               C153848 +
           (((C40462 * C153864 + C41246 * C153724) * C23989 +
             (C39073 * C153864 + C41255 * C153724) * C23990 +
             (C42244 * C153864 + (C36758 + C36759) * C153724) * C153898) *
                C153601 -
            (C40953 * C153898 +
             (C37407 * C153724 + (C35195 + C35194) * C153864) * C23990 +
             (C40463 * C153724 + (C35193 + C35192) * C153864) * C23989) *
                C1898) *
               C153573) *
              C153840 +
          (((((C39446 + C39447) * C153864 + (C39448 + C39449) * C153724) *
                 C23989 +
             (C40464 * C153864 + (C39450 + C39451) * C153724) * C23990 +
             (C40465 * C153864 + (C39452 + C39453) * C153724) * C153898) *
                C153601 -
            (C39079 * C153898 +
             (C40466 * C153724 + (C35201 + C35200) * C153864) * C23990 +
             ((C39447 + C39446) * C153724 +
              (C152081 * C156 - C34900 * C146 - C152081 * C157 +
               C153472 * C170 + C152100 * C154 - C34898 * C145 -
               C152100 * C155 + C153829 * C169) *
                  C153864) *
                 C23989) *
                C1898) *
               C153848 +
           ((((C35200 + C35201) * C153864 + C40464 * C153724) * C23989 +
             ((C35202 + C35203) * C153864 + C40465 * C153724) * C23990 +
             ((C35204 + C35205) * C153864 + (C36180 + C36181) * C153724) *
                 C153898) *
                C1898 -
            (((C152081 * C4784 - C34900 * C4781 - C152081 * C4785 +
               C153472 * C4790 + C152100 * C4786 - C34898 * C4782 -
               C152100 * C4787 + C153829 * C4791) *
                  C153724 +
              (C36181 + C36180) * C153864) *
                 C153898 +
             ((C39453 + C39452) * C153724 + C39074 * C153864) * C23990 +
             ((C39451 + C39450) * C153724 + C40466 * C153864) * C23989) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[356] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153864 +
            (C15542 + C15543 + C15544 + C15545) * C153724) *
               C153625 * C153921 -
           ((C15546 + C15547 + C15548 + C15549) * C153724 +
            (C15545 + C15544 + C15543 + C15542) * C153864) *
               C153625 * C153922 +
           ((C15549 + C15548 + C15547 + C15546) * C153864 +
            (C17938 + C17939 + C17940 + C17941) * C153724) *
               C153625 * C2414) *
              C153848 +
          (((C12509 + C12508 + C12507 + C12506) * C153864 +
            (C13084 + C13085 + C13086 + C13087) * C153724) *
               C153625 * C153922 -
           ((C12506 + C12507 + C12508 + C12509) * C153724 +
            (C11577 + C11576 + C11575 + C11574) * C153864) *
               C153625 * C153921 -
           ((C11281 * C8429 - C11282 * C8428 - C11281 * C8430 +
             C153862 * C8431 + C11279 * C6191 - C11280 * C6182 -
             C11279 * C6192 + C11271 * C6200 + C11277 * C6193 - C11278 * C6183 -
             C11277 * C6194 + C11270 * C6201 + C11275 * C6195 - C11276 * C6184 -
             C11275 * C6196 + C11269 * C6202) *
                C153724 +
            (C13087 + C13086 + C13085 + C13084) * C153864) *
               C153625 * C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153864 +
             (C39442 + C39443) * C153724) *
                C23989 +
            ((C35192 + C35193) * C153864 + C40462 * C153724) * C23990 +
            C39078 * C153898) *
               C153921 -
           (C42245 * C153898 + (C41245 * C153724 + C40463 * C153864) * C23990 +
            ((C39444 + C39445) * C153724 + (C39443 + C39442) * C153864) *
                C23989) *
               C153922 +
           (((C39445 + C39444) * C153864 + (C43032 + C43033) * C153724) *
                C23989 +
            (C41246 * C153864 + (C41272 + C41273) * C153724) * C23990 +
            (C41255 * C153864 + (C41274 + C41275) * C153724) * C153898) *
               C2414) *
              C153848 +
          (((C40462 * C153864 + C41246 * C153724) * C23989 +
            (C39073 * C153864 + C41255 * C153724) * C23990 +
            (C42244 * C153864 + (C36758 + C36759) * C153724) * C153898) *
               C153922 -
           (C40953 * C153898 +
            (C37407 * C153724 + (C35195 + C35194) * C153864) * C23990 +
            (C40463 * C153724 + (C35193 + C35192) * C153864) * C23989) *
               C153921 -
           (((C152081 * C32074 - C34900 * C32073 - C152081 * C32075 +
              C153472 * C32076 + C152100 * C30186 - C34898 * C30183 -
              C152100 * C30187 + C153829 * C30189) *
                 C153724 +
             (C36759 + C36758) * C153864) *
                C153898 +
            ((C41275 + C41274) * C153724 + C41244 * C153864) * C23990 +
            ((C41273 + C41272) * C153724 + C41245 * C153864) * C23989) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[357] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153864 +
            (C15542 + C15543 + C15544 + C15545) * C153724) *
               C153625 * C1898 -
           ((C15546 + C15547 + C15548 + C15549) * C153724 +
            (C15545 + C15544 + C15543 + C15542) * C153864) *
               C153625 * C153601) *
              C298 +
          (((C12509 + C12508 + C12507 + C12506) * C153864 +
            (C13084 + C13085 + C13086 + C13087) * C153724) *
               C153625 * C153601 -
           ((C12506 + C12507 + C12508 + C12509) * C153724 +
            (C11577 + C11576 + C11575 + C11574) * C153864) *
               C153625 * C1898) *
              C299 +
          (((C11581 + C11580 + C11579 + C11578) * C153864 +
            (C13758 + C13759 + C13760 + C13761) * C153724) *
               C153625 * C1898 -
           ((C11281 * C3289 - C11282 * C3282 - C11281 * C3290 +
             C153862 * C3294 + C11279 * C3287 - C11280 * C3281 -
             C11279 * C3288 + C11271 * C3293 + C11277 * C3285 - C11278 * C3280 -
             C11277 * C3286 + C11270 * C3292 + C11275 * C3283 - C11276 * C3279 -
             C11275 * C3284 + C11269 * C3291) *
                C153724 +
            (C13761 + C13760 + C13759 + C13758) * C153864) *
               C153625 * C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153864 +
            (C15542 + C15543 + C15544 + C15545) * C153724) *
               C153625 * C1898 -
           ((C15546 + C15547 + C15548 + C15549) * C153724 +
            (C15545 + C15544 + C15543 + C15542) * C153864) *
               C153625 * C153601) *
              C153521 * C1093 +
          (((C15550 + C15551 + C15552 + C15553) * C153864 +
            (C15554 + C15555 + C15556 + C15557) * C153724) *
               C153625 * C153601 -
           ((C15553 + C15552 + C15551 + C15550) * C153724 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153864) *
               C153625 * C1898) *
              C153521 * C1094 +
          (((C11275 * C156 - C11276 * C146 - C11275 * C157 + C11269 * C170 +
             C11277 * C158 - C11278 * C147 - C11277 * C159 + C11270 * C171 +
             C11279 * C160 - C11280 * C148 - C11279 * C161 + C11271 * C172 +
             C11281 * C162 - C11282 * C149 - C11281 * C163 + C153862 * C173) *
                C153864 +
            (C15970 + C15971 + C15972 + C15973) * C153724) *
               C153625 * C1898 -
           ((C11281 * C510 - C11282 * C487 - C11281 * C511 + C153862 * C523 +
             C11279 * C506 - C11280 * C485 - C11279 * C507 + C11271 * C521 +
             C11277 * C504 - C11278 * C484 - C11277 * C505 + C11270 * C520 +
             C11275 * C502 - C11276 * C483 - C11275 * C503 + C11269 * C519) *
                C153724 +
            (C15973 + C15972 + C15971 + C15970) * C153864) *
               C153625 * C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
            C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
            C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
            C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
               C153864 +
           (C15542 + C15543 + C15544 + C15545) * C153724) *
              C153625 * C2104 -
          ((C15546 + C15547 + C15548 + C15549) * C153724 +
           (C15545 + C15544 + C15543 + C15542) * C153864) *
              C153625 * C2105 +
          ((C15549 + C15548 + C15547 + C15546) * C153864 +
           (C17938 + C17939 + C17940 + C17941) * C153724) *
              C153625 * C2106 -
          ((C11281 * C7524 - C11282 * C7517 - C11281 * C7525 + C153862 * C7529 +
            C11279 * C7522 - C11280 * C7516 - C11279 * C7523 + C11271 * C7528 +
            C11277 * C7520 - C11278 * C7515 - C11277 * C7521 + C11270 * C7527 +
            C11275 * C7518 - C11276 * C7514 - C11275 * C7519 + C11269 * C7526) *
               C153724 +
           (C17941 + C17940 + C17939 + C17938) * C153864) *
              C153625 * C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153864 +
             (C39442 + C39443) * C153724) *
                C23989 +
            ((C35192 + C35193) * C153864 + C40462 * C153724) * C23990 +
            C39078 * C153898) *
               C1898 -
           (C42245 * C153898 + (C41245 * C153724 + C40463 * C153864) * C23990 +
            ((C39444 + C39445) * C153724 + (C39443 + C39442) * C153864) *
                C23989) *
               C153601) *
              C153521 * C1093 +
          ((((C39446 + C39447) * C153864 + (C39448 + C39449) * C153724) *
                C23989 +
            (C40464 * C153864 + (C39450 + C39451) * C153724) * C23990 +
            (C40465 * C153864 + (C39452 + C39453) * C153724) * C153898) *
               C153601 -
           (C39079 * C153898 +
            (C40466 * C153724 + (C35201 + C35200) * C153864) * C23990 +
            ((C39447 + C39446) * C153724 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153864) *
                C23989) *
               C1898) *
              C153521 * C1094 +
          ((((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
              C152081 * C158 - C34900 * C147 - C152081 * C159 +
              C153472 * C171) *
                 C153864 +
             (C40074 + C40075) * C153724) *
                C23989 +
            ((C35640 + C35641) * C153864 + (C39768 + C39769) * C153724) *
                C23990 +
            ((C35642 + C35643) * C153864 + (C39770 + C39771) * C153724) *
                C153898) *
               C1898 -
           (((C152081 * C3289 - C34900 * C3282 - C152081 * C3290 +
              C153472 * C3294 + C152100 * C3287 - C34898 * C3281 -
              C152100 * C3288 + C153829 * C3293) *
                 C153724 +
             (C39771 + C39770) * C153864) *
                C153898 +
            ((C152081 * C1332 - C34900 * C1326 - C152081 * C1333 +
              C153472 * C1341 + C152100 * C1334 - C34898 * C1327 -
              C152100 * C1335 + C153829 * C1342) *
                 C153724 +
             (C39769 + C39768) * C153864) *
                C23990 +
            ((C152081 * C504 - C34900 * C484 - C152081 * C505 + C153472 * C520 +
              C152100 * C502 - C34898 * C483 - C152100 * C503 +
              C153829 * C519) *
                 C153724 +
             (C40075 + C40074) * C153864) *
                C23989) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153864 +
             (C39442 + C39443) * C153724) *
                C23989 +
            ((C35192 + C35193) * C153864 + C40462 * C153724) * C23990 +
            C39078 * C153898) *
               C1898 -
           (C42245 * C153898 + (C41245 * C153724 + C40463 * C153864) * C23990 +
            ((C39444 + C39445) * C153724 + (C39443 + C39442) * C153864) *
                C23989) *
               C153601) *
              C298 +
          (((C40462 * C153864 + C41246 * C153724) * C23989 +
            (C39073 * C153864 + C41255 * C153724) * C23990 +
            (C42244 * C153864 + (C36758 + C36759) * C153724) * C153898) *
               C153601 -
           (C40953 * C153898 +
            (C37407 * C153724 + (C35195 + C35194) * C153864) * C23990 +
            (C40463 * C153724 + (C35193 + C35192) * C153864) * C23989) *
               C1898) *
              C299 +
          ((C39078 * C23989 + (C35209 * C153864 + C42244 * C153724) * C23990 +
            ((C35199 + C35198) * C153864 + (C37422 + C37423) * C153724) *
                C153898) *
               C1898 -
           (((C152081 * C28550 - C34900 * C28547 - C152081 * C28551 +
              C153472 * C28553 + C152100 * C28548 - C34898 * C28546 -
              C152100 * C28549 + C153829 * C28552) *
                 C153724 +
             (C37423 + C37422) * C153864) *
                C153898 +
            ((C36759 + C36758) * C153724 + C37406 * C153864) * C23990 +
            C42245 * C23989) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
             C152081 * C154 - C34900 * C145 - C152081 * C155 + C153472 * C169) *
                C153864 +
            (C39442 + C39443) * C153724) *
               C23989 +
           ((C35192 + C35193) * C153864 + C40462 * C153724) * C23990 +
           C39078 * C153898) *
              C2104 -
          (C42245 * C153898 + (C41245 * C153724 + C40463 * C153864) * C23990 +
           ((C39444 + C39445) * C153724 + (C39443 + C39442) * C153864) *
               C23989) *
              C2105 +
          (((C39445 + C39444) * C153864 + (C43032 + C43033) * C153724) *
               C23989 +
           (C41246 * C153864 + (C41272 + C41273) * C153724) * C23990 +
           (C41255 * C153864 + (C41274 + C41275) * C153724) * C153898) *
              C2106 -
          (((C152081 * C31225 - C34900 * C31222 - C152081 * C31226 +
             C153472 * C31228 + C152100 * C31223 - C34898 * C31221 -
             C152100 * C31224 + C153829 * C31227) *
                C153724 +
            (C41275 + C41274) * C153864) *
               C153898 +
           ((C152081 * C9040 - C34900 * C9036 - C152081 * C9041 +
             C153472 * C9045 + C152100 * C9042 - C34898 * C9037 -
             C152100 * C9043 + C153829 * C9046) *
                C153724 +
            (C41273 + C41272) * C153864) *
               C23990 +
           ((C152081 * C7520 - C34900 * C7515 - C152081 * C7521 +
             C153472 * C7527 + C152100 * C7518 - C34898 * C7514 -
             C152100 * C7519 + C153829 * C7526) *
                C153724 +
            (C43033 + C43032) * C153864) *
               C23989) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[358] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153864 +
            (C15542 + C15543 + C15544 + C15545) * C153724) *
               C153625 * C153921 -
           ((C15546 + C15547 + C15548 + C15549) * C153724 +
            (C15545 + C15544 + C15543 + C15542) * C153864) *
               C153625 * C153922 +
           ((C15549 + C15548 + C15547 + C15546) * C153864 +
            (C17938 + C17939 + C17940 + C17941) * C153724) *
               C153625 * C2414) *
              C153521 * C153840 +
          (((C15550 + C15551 + C15552 + C15553) * C153864 +
            (C15554 + C15555 + C15556 + C15557) * C153724) *
               C153625 * C153922 -
           ((C15553 + C15552 + C15551 + C15550) * C153724 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153864) *
               C153625 * C153921 -
           ((C11281 * C2113 - C11282 * C2108 - C11281 * C2114 +
             C153862 * C2123 + C11279 * C2115 - C11280 * C2109 -
             C11279 * C2116 + C11271 * C2124 + C11277 * C2117 - C11278 * C2110 -
             C11277 * C2118 + C11270 * C2125 + C11275 * C2119 - C11276 * C2111 -
             C11275 * C2120 + C11269 * C2126) *
                C153724 +
            (C15557 + C15556 + C15555 + C15554) * C153864) *
               C153625 * C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153864 +
             (C39442 + C39443) * C153724) *
                C23989 +
            ((C35192 + C35193) * C153864 + C40462 * C153724) * C23990 +
            C39078 * C153898) *
               C153921 -
           (C42245 * C153898 + (C41245 * C153724 + C40463 * C153864) * C23990 +
            ((C39444 + C39445) * C153724 + (C39443 + C39442) * C153864) *
                C23989) *
               C153922 +
           (((C39445 + C39444) * C153864 + (C43032 + C43033) * C153724) *
                C23989 +
            (C41246 * C153864 + (C41272 + C41273) * C153724) * C23990 +
            (C41255 * C153864 + (C41274 + C41275) * C153724) * C153898) *
               C2414) *
              C153521 * C153840 +
          ((((C39446 + C39447) * C153864 + (C39448 + C39449) * C153724) *
                C23989 +
            (C40464 * C153864 + (C39450 + C39451) * C153724) * C23990 +
            (C40465 * C153864 + (C39452 + C39453) * C153724) * C153898) *
               C153922 -
           (C39079 * C153898 +
            (C40466 * C153724 + (C35201 + C35200) * C153864) * C23990 +
            ((C39447 + C39446) * C153724 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153864) *
                C23989) *
               C153921 -
           (((C152081 * C6185 - C34900 * C6179 - C152081 * C6186 +
              C153472 * C6197 + C152100 * C6187 - C34898 * C6180 -
              C152100 * C6188 + C153829 * C6198) *
                 C153724 +
             (C39453 + C39452) * C153864) *
                C153898 +
            ((C152081 * C6191 - C34900 * C6182 - C152081 * C6192 +
              C153472 * C6200 + C152100 * C6193 - C34898 * C6183 -
              C152100 * C6194 + C153829 * C6201) *
                 C153724 +
             (C39451 + C39450) * C153864) *
                C23990 +
            ((C152081 * C2117 - C34900 * C2110 - C152081 * C2118 +
              C153472 * C2125 + C152100 * C2119 - C34898 * C2111 -
              C152100 * C2120 + C153829 * C2126) *
                 C153724 +
             (C39449 + C39448) * C153864) *
                C23989) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[359] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153864 +
            (C15542 + C15543 + C15544 + C15545) * C153724) *
               C153625 * C1898 -
           ((C15546 + C15547 + C15548 + C15549) * C153724 +
            (C15545 + C15544 + C15543 + C15542) * C153864) *
               C153625 * C153601) *
              C153521 * C1093 +
          (((C15550 + C15551 + C15552 + C15553) * C153864 +
            (C15554 + C15555 + C15556 + C15557) * C153724) *
               C153625 * C153601 -
           ((C15553 + C15552 + C15551 + C15550) * C153724 +
            (C11281 * C160 - C11282 * C148 - C11281 * C161 + C153862 * C172 +
             C11279 * C158 - C11280 * C147 - C11279 * C159 + C11271 * C171 +
             C11277 * C156 - C11278 * C146 - C11277 * C157 + C11270 * C170 +
             C11275 * C154 - C11276 * C145 - C11275 * C155 + C11269 * C169) *
                C153864) *
               C153625 * C1898) *
              C153521 * C1094 +
          (((C11275 * C156 - C11276 * C146 - C11275 * C157 + C11269 * C170 +
             C11277 * C158 - C11278 * C147 - C11277 * C159 + C11270 * C171 +
             C11279 * C160 - C11280 * C148 - C11279 * C161 + C11271 * C172 +
             C11281 * C162 - C11282 * C149 - C11281 * C163 + C153862 * C173) *
                C153864 +
            (C15970 + C15971 + C15972 + C15973) * C153724) *
               C153625 * C1898 -
           ((C11281 * C510 - C11282 * C487 - C11281 * C511 + C153862 * C523 +
             C11279 * C506 - C11280 * C485 - C11279 * C507 + C11271 * C521 +
             C11277 * C504 - C11278 * C484 - C11277 * C505 + C11270 * C520 +
             C11275 * C502 - C11276 * C483 - C11275 * C503 + C11269 * C519) *
                C153724 +
            (C15973 + C15972 + C15971 + C15970) * C153864) *
               C153625 * C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C11275 * C152 - C11276 * C144 - C11275 * C153 + C11269 * C168 +
             C11277 * C154 - C11278 * C145 - C11277 * C155 + C11270 * C169 +
             C11279 * C156 - C11280 * C146 - C11279 * C157 + C11271 * C170 +
             C11281 * C158 - C11282 * C147 - C11281 * C159 + C153862 * C171) *
                C153864 +
            (C15542 + C15543 + C15544 + C15545) * C153724) *
               C153625 * C1898 -
           ((C15546 + C15547 + C15548 + C15549) * C153724 +
            (C15545 + C15544 + C15543 + C15542) * C153864) *
               C153625 * C153601) *
              C298 +
          (((C12509 + C12508 + C12507 + C12506) * C153864 +
            (C13084 + C13085 + C13086 + C13087) * C153724) *
               C153625 * C153601 -
           ((C12506 + C12507 + C12508 + C12509) * C153724 +
            (C11577 + C11576 + C11575 + C11574) * C153864) *
               C153625 * C1898) *
              C299 +
          (((C11581 + C11580 + C11579 + C11578) * C153864 +
            (C13758 + C13759 + C13760 + C13761) * C153724) *
               C153625 * C1898 -
           ((C11281 * C3289 - C11282 * C3282 - C11281 * C3290 +
             C153862 * C3294 + C11279 * C3287 - C11280 * C3281 -
             C11279 * C3288 + C11271 * C3293 + C11277 * C3285 - C11278 * C3280 -
             C11277 * C3286 + C11270 * C3292 + C11275 * C3283 - C11276 * C3279 -
             C11275 * C3284 + C11269 * C3291) *
                C153724 +
            (C13761 + C13760 + C13759 + C13758) * C153864) *
               C153625 * C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153864 +
             (C39442 + C39443) * C153724) *
                C23989 +
            ((C35192 + C35193) * C153864 + C40462 * C153724) * C23990 +
            C39078 * C153898) *
               C1898 -
           (C42245 * C153898 + (C41245 * C153724 + C40463 * C153864) * C23990 +
            ((C39444 + C39445) * C153724 + (C39443 + C39442) * C153864) *
                C23989) *
               C153601) *
              C153521 * C1093 +
          ((((C39446 + C39447) * C153864 + (C39448 + C39449) * C153724) *
                C23989 +
            (C40464 * C153864 + (C39450 + C39451) * C153724) * C23990 +
            (C40465 * C153864 + (C39452 + C39453) * C153724) * C153898) *
               C153601 -
           (C39079 * C153898 +
            (C40466 * C153724 + (C35201 + C35200) * C153864) * C23990 +
            ((C39447 + C39446) * C153724 +
             (C152081 * C156 - C34900 * C146 - C152081 * C157 + C153472 * C170 +
              C152100 * C154 - C34898 * C145 - C152100 * C155 +
              C153829 * C169) *
                 C153864) *
                C23989) *
               C1898) *
              C153521 * C1094 +
          ((((C152100 * C156 - C34898 * C146 - C152100 * C157 + C153829 * C170 +
              C152081 * C158 - C34900 * C147 - C152081 * C159 +
              C153472 * C171) *
                 C153864 +
             (C40074 + C40075) * C153724) *
                C23989 +
            ((C35640 + C35641) * C153864 + (C39768 + C39769) * C153724) *
                C23990 +
            ((C35642 + C35643) * C153864 + (C39770 + C39771) * C153724) *
                C153898) *
               C1898 -
           (((C152081 * C3289 - C34900 * C3282 - C152081 * C3290 +
              C153472 * C3294 + C152100 * C3287 - C34898 * C3281 -
              C152100 * C3288 + C153829 * C3293) *
                 C153724 +
             (C39771 + C39770) * C153864) *
                C153898 +
            ((C152081 * C1332 - C34900 * C1326 - C152081 * C1333 +
              C153472 * C1341 + C152100 * C1334 - C34898 * C1327 -
              C152100 * C1335 + C153829 * C1342) *
                 C153724 +
             (C39769 + C39768) * C153864) *
                C23990 +
            ((C152081 * C504 - C34900 * C484 - C152081 * C505 + C153472 * C520 +
              C152100 * C502 - C34898 * C483 - C152100 * C503 +
              C153829 * C519) *
                 C153724 +
             (C40075 + C40074) * C153864) *
                C23989) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C152100 * C152 - C34898 * C144 - C152100 * C153 + C153829 * C168 +
              C152081 * C154 - C34900 * C145 - C152081 * C155 +
              C153472 * C169) *
                 C153864 +
             (C39442 + C39443) * C153724) *
                C23989 +
            ((C35192 + C35193) * C153864 + C40462 * C153724) * C23990 +
            C39078 * C153898) *
               C1898 -
           (C42245 * C153898 + (C41245 * C153724 + C40463 * C153864) * C23990 +
            ((C39444 + C39445) * C153724 + (C39443 + C39442) * C153864) *
                C23989) *
               C153601) *
              C298 +
          (((C40462 * C153864 + C41246 * C153724) * C23989 +
            (C39073 * C153864 + C41255 * C153724) * C23990 +
            (C42244 * C153864 + (C36758 + C36759) * C153724) * C153898) *
               C153601 -
           (C40953 * C153898 +
            (C37407 * C153724 + (C35195 + C35194) * C153864) * C23990 +
            (C40463 * C153724 + (C35193 + C35192) * C153864) * C23989) *
               C1898) *
              C299 +
          ((C39078 * C23989 + (C35209 * C153864 + C42244 * C153724) * C23990 +
            ((C35199 + C35198) * C153864 + (C37422 + C37423) * C153724) *
                C153898) *
               C1898 -
           (((C152081 * C28550 - C34900 * C28547 - C152081 * C28551 +
              C153472 * C28553 + C152100 * C28548 - C34898 * C28546 -
              C152100 * C28549 + C153829 * C28552) *
                 C153724 +
             (C37423 + C37422) * C153864) *
                C153898 +
            ((C36759 + C36758) * C153724 + C37406 * C153864) * C23990 +
            C42245 * C23989) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[360] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C153537 * C153848 -
           (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
            C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
            C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
            C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
            C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
               C153637 * C153625 * C153537 * C153573) *
              C153917 +
          ((C134 * C321 - C135 * C306 - C134 * C322 + C121 * C342 +
            C136 * C319 - C137 * C305 - C136 * C320 + C122 * C341 +
            C138 * C317 - C139 * C304 - C138 * C318 + C123 * C340 +
            C140 * C315 - C141 * C303 - C140 * C316 + C124 * C339 +
            C142 * C335 - C143 * C313 - C142 * C336 + C125 * C349) *
               C153637 * C153625 * C153537 * C153573 -
           (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
            C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
            C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
            C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
            C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
               C153637 * C153625 * C153537 * C153848) *
              C153918 +
          ((C134 * C156 - C135 * C146 - C134 * C157 + C121 * C170 +
            C136 * C158 - C137 * C147 - C136 * C159 + C122 * C171 +
            C138 * C160 - C139 * C148 - C138 * C161 + C123 * C172 +
            C140 * C162 - C141 * C149 - C140 * C163 + C124 * C173 +
            C142 * C164 - C143 * C150 - C142 * C165 + C125 * C174) *
               C153637 * C153625 * C153537 * C153848 -
           (C142 * C652 - C143 * C651 - C142 * C653 + C125 * C654 +
            C140 * C335 - C141 * C313 - C140 * C336 + C124 * C349 +
            C138 * C315 - C139 * C303 - C138 * C316 + C123 * C339 +
            C136 * C317 - C137 * C304 - C136 * C318 + C122 * C340 +
            C134 * C319 - C135 * C305 - C134 * C320 + C121 * C341) *
               C153637 * C153625 * C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C153537 * C153848 -
           ((C3044 + C3045 + C3046) * C153637 * C153898 +
            (C3043 + C3042 + C3041) * C153637 * C153924 +
            (C3040 + C3039 + C3038) * C153637 * C153936) *
               C153537 * C153573) *
              C153917 +
          (((C3047 + C3048 + C3049) * C153637 * C153936 +
            (C3050 + C3051 + C3052) * C153637 * C153924 +
            (C3053 + C3054 + C3055) * C153637 * C153898) *
               C153537 * C153573 -
           (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153637 * C153936) *
               C153537 * C153848) *
              C153918 +
          (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
             C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
             C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                C153637 * C153936 +
            (C3550 + C3551 + C3552) * C153637 * C153924 +
            (C3553 + C3554 + C3555) * C153637 * C153898) *
               C153537 * C153848 -
           ((C2693 * C1188 - C2694 * C1183 - C2693 * C1189 + C153885 * C1198 +
             C2691 * C1190 - C2692 * C1184 - C2691 * C1191 + C2684 * C1199 +
             C2689 * C1192 - C2690 * C1185 - C2689 * C1193 + C2683 * C1200) *
                C153637 * C153898 +
            (C3555 + C3554 + C3553) * C153637 * C153924 +
            (C3552 + C3551 + C3550) * C153637 * C153936) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153537 * C153848 -
           ((C24331 + C24332 + C24333) * C153637 * C153898 +
            (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C153537 * C153573) *
              C153917 +
          (((C24334 + C24335 + C24336) * C153637 * C23989 +
            (C24337 + C24338 + C24339) * C153637 * C23990 +
            (C24340 + C24341 + C24342) * C153637 * C153898) *
               C153537 * C153573 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C153537 * C153848) *
              C153918 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C153637 * C23989 +
            (C24821 + C24822 + C24823) * C153637 * C23990 +
            (C24824 + C24825 + C24826) * C153637 * C153898) *
               C153537 * C153848 -
           ((C23996 * C1188 - C23997 * C1183 - C23996 * C1189 +
             C153885 * C1198 + C23994 * C1190 - C23995 * C1184 -
             C23994 * C1191 + C153914 * C1199 + C23992 * C1192 -
             C23993 * C1185 - C23992 * C1193 + C153933 * C1200) *
                C153637 * C153898 +
            (C24826 + C24825 + C24824) * C153637 * C23990 +
            (C24823 + C24822 + C24821) * C153637 * C23989) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153537 * C153848 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C153537 * C153573) *
              C153917 +
          ((C28420 * C28207 + C28421 * C28208 + C28422 * C28209 +
            C28423 * C28210 + C28424 * C28211) *
               C153537 * C153573 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C153537 * C153848) *
              C153918 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C153637 * C28207 +
            C28705 * C28208 + C28706 * C28209 + C28707 * C28210 +
            C28708 * C28211) *
               C153537 * C153848 -
           ((C28212 * C4530 - C28213 * C4527 - C28212 * C4531 +
             C153462 * C4536) *
                C153637 * C28211 +
            C28708 * C28210 + C28707 * C28209 + C28706 * C28208 +
            C28705 * C28207) *
               C153537 * C153573) *
              C650)) /
            (p * q * std::sqrt(p + q));
    d2ee[361] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
             C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
             C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
             C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
             C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                C153637 * C153625 * C153849 -
            (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
             C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
             C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
             C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
             C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
                C153637 * C153625 * C153601) *
               C153848 +
           ((C134 * C951 - C135 * C945 - C134 * C952 + C121 * C963 +
             C136 * C953 - C137 * C946 - C136 * C954 + C122 * C964 +
             C138 * C955 - C139 * C947 - C138 * C956 + C123 * C965 +
             C140 * C957 - C141 * C948 - C140 * C958 + C124 * C966 +
             C142 * C959 - C143 * C949 - C142 * C960 + C125 * C967) *
                C153637 * C153625 * C153601 -
            (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
             C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
             C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
             C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
             C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
                C153637 * C153625 * C153849) *
               C153573) *
              C301 +
          (((C134 * C494 - C135 * C479 - C134 * C495 + C121 * C515 +
             C136 * C492 - C137 * C478 - C136 * C493 + C122 * C514 +
             C138 * C490 - C139 * C477 - C138 * C491 + C123 * C513 +
             C140 * C488 - C141 * C476 - C140 * C489 + C124 * C512 +
             C142 * C508 - C143 * C486 - C142 * C509 + C125 * C522) *
                C153637 * C153625 * C153601 -
            (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
             C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
             C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
             C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
             C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
                C153637 * C153625 * C153849) *
               C153848 +
           ((C134 * C321 - C135 * C306 - C134 * C322 + C121 * C342 +
             C136 * C319 - C137 * C305 - C136 * C320 + C122 * C341 +
             C138 * C317 - C139 * C304 - C138 * C318 + C123 * C340 +
             C140 * C315 - C141 * C303 - C140 * C316 + C124 * C339 +
             C142 * C335 - C143 * C313 - C142 * C336 + C125 * C349) *
                C153637 * C153625 * C153849 -
            (C142 * C961 - C143 * C950 - C142 * C962 + C125 * C968 +
             C140 * C959 - C141 * C949 - C140 * C960 + C124 * C967 +
             C138 * C957 - C139 * C948 - C138 * C958 + C123 * C966 +
             C136 * C955 - C137 * C947 - C136 * C956 + C122 * C965 +
             C134 * C953 - C135 * C946 - C134 * C954 + C121 * C964) *
                C153637 * C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153637 * C153936 +
             (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
                C153849 -
            ((C4152 + C4153 + C4154) * C153637 * C153898 +
             (C4155 + C4156 + C4157) * C153637 * C153924 +
             (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
              C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
              C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                 C153637 * C153936) *
                C153601) *
               C153848 +
           (((C4157 + C4156 + C4155) * C153637 * C153936 +
             (C4154 + C4153 + C4152) * C153637 * C153924 +
             (C2689 * C4067 - C2690 * C4063 - C2689 * C4068 + C2683 * C4075 +
              C2691 * C4069 - C2692 * C4064 - C2691 * C4070 + C2684 * C4076 +
              C2693 * C4071 - C2694 * C4065 - C2693 * C4072 + C153885 * C4077) *
                 C153637 * C153898) *
                C153601 -
            ((C3044 + C3045 + C3046) * C153637 * C153898 +
             (C3043 + C3042 + C3041) * C153637 * C153924 +
             (C3040 + C3039 + C3038) * C153637 * C153936) *
                C153849) *
               C153573) *
              C301 +
          ((((C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515 +
              C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
              C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513) *
                 C153637 * C153936 +
             (C4158 + C4159 + C4160) * C153637 * C153924 +
             (C4161 + C4162 + C4163) * C153637 * C153898) *
                C153601 -
            (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
             (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
              C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
              C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                 C153637 * C153936) *
                C153849) *
               C153848 +
           (((C3047 + C3048 + C3049) * C153637 * C153936 +
             (C3050 + C3051 + C3052) * C153637 * C153924 +
             (C3053 + C3054 + C3055) * C153637 * C153898) *
                C153849 -
            ((C2693 * C4073 - C2694 * C4066 - C2693 * C4074 + C153885 * C4078 +
              C2691 * C4071 - C2692 * C4065 - C2691 * C4072 + C2684 * C4077 +
              C2689 * C4069 - C2690 * C4064 - C2689 * C4070 + C2683 * C4076) *
                 C153637 * C153898 +
             (C4163 + C4162 + C4161) * C153637 * C153924 +
             (C4160 + C4159 + C4158) * C153637 * C153936) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C153637 * C23989 +
             (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
                C153849 -
            ((C25407 + C25408 + C25409) * C153637 * C153898 +
             (C25410 + C25411 + C25412) * C153637 * C23990 +
             (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
              C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
              C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                 C153637 * C23989) *
                C153601) *
               C153848 +
           (((C25412 + C25411 + C25410) * C153637 * C23989 +
             (C25409 + C25408 + C25407) * C153637 * C23990 +
             (C23992 * C4067 - C23993 * C4063 - C23992 * C4068 +
              C153933 * C4075 + C23994 * C4069 - C23995 * C4064 -
              C23994 * C4070 + C153914 * C4076 + C23996 * C4071 -
              C23997 * C4065 - C23996 * C4072 + C153885 * C4077) *
                 C153637 * C153898) *
                C153601 -
            ((C24331 + C24332 + C24333) * C153637 * C153898 +
             (C24330 + C24329 + C24328) * C153637 * C23990 +
             (C24327 + C24326 + C24325) * C153637 * C23989) *
                C153849) *
               C153573) *
              C301 +
          ((((C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515 +
              C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
              C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513) *
                 C153637 * C23989 +
             (C25413 + C25414 + C25415) * C153637 * C23990 +
             (C25416 + C25417 + C25418) * C153637 * C153898) *
                C153601 -
            (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C153637 * C23989) *
                C153849) *
               C153848 +
           (((C24334 + C24335 + C24336) * C153637 * C23989 +
             (C24337 + C24338 + C24339) * C153637 * C23990 +
             (C24340 + C24341 + C24342) * C153637 * C153898) *
                C153849 -
            ((C23996 * C4073 - C23997 * C4066 - C23996 * C4074 +
              C153885 * C4078 + C23994 * C4071 - C23995 * C4065 -
              C23994 * C4072 + C153914 * C4077 + C23992 * C4069 -
              C23993 * C4064 - C23992 * C4070 + C153933 * C4076) *
                 C153637 * C153898 +
             (C25418 + C25417 + C25416) * C153637 * C23990 +
             (C25415 + C25414 + C25413) * C153637 * C23989) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153637 * C28207 +
             C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
             C28418 * C28211) *
                C153849 -
            (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
             C29060 * C28208 +
             (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                 C153637 * C28207) *
                C153601) *
               C153848 +
           ((C29060 * C28207 + C29059 * C28208 + C29058 * C28209 +
             C29057 * C28210 +
             (C28212 * C28994 - C28213 * C28992 - C28212 * C28995 +
              C153462 * C28998) *
                 C153637 * C28211) *
                C153601 -
            (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
             C28416 * C28208 + C28415 * C28207) *
                C153849) *
               C153573) *
              C301 +
          ((((C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                 C153637 * C28207 +
             C29061 * C28208 + C29062 * C28209 + C29063 * C28210 +
             C29064 * C28211) *
                C153601 -
            (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
             C28420 * C28208 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153637 * C28207) *
                C153849) *
               C153848 +
           ((C28420 * C28207 + C28421 * C28208 + C28422 * C28209 +
             C28423 * C28210 + C28424 * C28211) *
                C153849 -
            ((C28212 * C28996 - C28213 * C28993 - C28212 * C28997 +
              C153462 * C28999) *
                 C153637 * C28211 +
             C29064 * C28210 + C29063 * C28209 + C29062 * C28208 +
             C29061 * C28207) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[362] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C153537 * C298 -
           (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
            C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
            C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
            C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
            C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
               C153637 * C153625 * C153537 * C299 +
           (C134 * C325 - C135 * C308 - C134 * C326 + C121 * C344 +
            C136 * C327 - C137 * C309 - C136 * C328 + C122 * C345 +
            C138 * C329 - C139 * C310 - C138 * C330 + C123 * C346 +
            C140 * C331 - C141 * C311 - C140 * C332 + C124 * C347 +
            C142 * C333 - C143 * C312 - C142 * C334 + C125 * C348) *
               C153637 * C153625 * C153537 * C300) *
              C301 +
          ((C134 * C321 - C135 * C306 - C134 * C322 + C121 * C342 +
            C136 * C319 - C137 * C305 - C136 * C320 + C122 * C341 +
            C138 * C317 - C139 * C304 - C138 * C318 + C123 * C340 +
            C140 * C315 - C141 * C303 - C140 * C316 + C124 * C339 +
            C142 * C335 - C143 * C313 - C142 * C336 + C125 * C349) *
               C153637 * C153625 * C153537 * C299 -
           (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
            C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
            C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
            C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
            C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
               C153637 * C153625 * C153537 * C298 -
           (C142 * C337 - C143 * C314 - C142 * C338 + C125 * C350 +
            C140 * C333 - C141 * C312 - C140 * C334 + C124 * C348 +
            C138 * C331 - C139 * C311 - C138 * C332 + C123 * C347 +
            C136 * C329 - C137 * C310 - C136 * C330 + C122 * C346 +
            C134 * C327 - C135 * C309 - C134 * C328 + C121 * C345) *
               C153637 * C153625 * C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 + C136 * C154 -
           C137 * C145 - C136 * C155 + C122 * C169 + C138 * C156 - C139 * C146 -
           C138 * C157 + C123 * C170 + C140 * C158 - C141 * C147 - C140 * C159 +
           C124 * C171 + C142 * C160 - C143 * C148 - C142 * C161 +
           C125 * C172) *
              C153637 * C153625 * C153537 * C153521 * C130 -
          (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 + C140 * C160 -
           C141 * C148 - C140 * C161 + C124 * C172 + C138 * C158 - C139 * C147 -
           C138 * C159 + C123 * C171 + C136 * C156 - C137 * C146 - C136 * C157 +
           C122 * C170 + C134 * C154 - C135 * C145 - C134 * C155 +
           C121 * C169) *
              C153637 * C153625 * C153537 * C153521 * C131 +
          (C134 * C156 - C135 * C146 - C134 * C157 + C121 * C170 + C136 * C158 -
           C137 * C147 - C136 * C159 + C122 * C171 + C138 * C160 - C139 * C148 -
           C138 * C161 + C123 * C172 + C140 * C162 - C141 * C149 - C140 * C163 +
           C124 * C173 + C142 * C164 - C143 * C150 - C142 * C165 +
           C125 * C174) *
              C153637 * C153625 * C153537 * C153521 * C132 -
          (C142 * C166 - C143 * C151 - C142 * C167 + C125 * C175 + C140 * C164 -
           C141 * C150 - C140 * C165 + C124 * C174 + C138 * C162 - C139 * C149 -
           C138 * C163 + C123 * C173 + C136 * C160 - C137 * C148 - C136 * C161 +
           C122 * C172 + C134 * C158 - C135 * C147 - C134 * C159 +
           C121 * C171) *
              C153637 * C153625 * C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C473 -
           (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
            C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
            C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
            C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
            C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
               C153637 * C153625 * C474 +
           (C134 * C498 - C135 * C481 - C134 * C499 + C121 * C517 +
            C136 * C500 - C137 * C482 - C136 * C501 + C122 * C518 +
            C138 * C502 - C139 * C483 - C138 * C503 + C123 * C519 +
            C140 * C504 - C141 * C484 - C140 * C505 + C124 * C520 +
            C142 * C506 - C143 * C485 - C142 * C507 + C125 * C521) *
               C153637 * C153625 * C475) *
              C153521 * C301 +
          ((C134 * C494 - C135 * C479 - C134 * C495 + C121 * C515 +
            C136 * C492 - C137 * C478 - C136 * C493 + C122 * C514 +
            C138 * C490 - C139 * C477 - C138 * C491 + C123 * C513 +
            C140 * C488 - C141 * C476 - C140 * C489 + C124 * C512 +
            C142 * C508 - C143 * C486 - C142 * C509 + C125 * C522) *
               C153637 * C153625 * C474 -
           (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
            C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
            C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
            C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
            C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
               C153637 * C153625 * C473 -
           (C142 * C510 - C143 * C487 - C142 * C511 + C125 * C523 +
            C140 * C506 - C141 * C485 - C140 * C507 + C124 * C521 +
            C138 * C504 - C139 * C484 - C138 * C505 + C123 * C520 +
            C136 * C502 - C137 * C483 - C136 * C503 + C122 * C519 +
            C134 * C500 - C135 * C482 - C134 * C501 + C121 * C518) *
               C153637 * C153625 * C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
            C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
            C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
               C153637 * C153936 +
           (C2689 * C323 - C2690 * C307 - C2689 * C324 + C2683 * C343 +
            C2691 * C321 - C2692 * C306 - C2691 * C322 + C2684 * C342 +
            C2693 * C319 - C2694 * C305 - C2693 * C320 + C153885 * C341) *
               C153637 * C153924 +
           (C2689 * C325 - C2690 * C308 - C2689 * C326 + C2683 * C344 +
            C2691 * C327 - C2692 * C309 - C2691 * C328 + C2684 * C345 +
            C2693 * C329 - C2694 * C310 - C2693 * C330 + C153885 * C346) *
               C153637 * C153898) *
              C153537 * C153521 * C130 -
          ((C2693 * C331 - C2694 * C311 - C2693 * C332 + C153885 * C347 +
            C2691 * C329 - C2692 * C310 - C2691 * C330 + C2684 * C346 +
            C2689 * C327 - C2690 * C309 - C2689 * C328 + C2683 * C345) *
               C153637 * C153898 +
           (C2693 * C317 - C2694 * C304 - C2693 * C318 + C153885 * C340 +
            C2691 * C319 - C2692 * C305 - C2691 * C320 + C2684 * C341 +
            C2689 * C321 - C2690 * C306 - C2689 * C322 + C2683 * C342) *
               C153637 * C153924 +
           (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
            C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
            C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
               C153637 * C153936) *
              C153537 * C153521 * C131 +
          ((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
            C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
            C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
               C153637 * C153936 +
           (C2689 * C319 - C2690 * C305 - C2689 * C320 + C2683 * C341 +
            C2691 * C317 - C2692 * C304 - C2691 * C318 + C2684 * C340 +
            C2693 * C315 - C2694 * C303 - C2693 * C316 + C153885 * C339) *
               C153637 * C153924 +
           (C2689 * C329 - C2690 * C310 - C2689 * C330 + C2683 * C346 +
            C2691 * C331 - C2692 * C311 - C2691 * C332 + C2684 * C347 +
            C2693 * C333 - C2694 * C312 - C2693 * C334 + C153885 * C348) *
               C153637 * C153898) *
              C153537 * C153521 * C132 -
          ((C2693 * C337 - C2694 * C314 - C2693 * C338 + C153885 * C350 +
            C2691 * C333 - C2692 * C312 - C2691 * C334 + C2684 * C348 +
            C2689 * C331 - C2690 * C311 - C2689 * C332 + C2683 * C347) *
               C153637 * C153898 +
           (C2693 * C335 - C2694 * C313 - C2693 * C336 + C153885 * C349 +
            C2691 * C315 - C2692 * C303 - C2691 * C316 + C2684 * C339 +
            C2689 * C317 - C2690 * C304 - C2689 * C318 + C2683 * C340) *
               C153637 * C153924 +
           (C2693 * C162 - C2694 * C149 - C2693 * C163 + C153885 * C173 +
            C2691 * C160 - C2692 * C148 - C2691 * C161 + C2684 * C172 +
            C2689 * C158 - C2690 * C147 - C2689 * C159 + C2683 * C171) *
               C153637 * C153936) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C153537 * C298 -
           ((C3044 + C3045 + C3046) * C153637 * C153898 +
            (C3043 + C3042 + C3041) * C153637 * C153924 +
            (C3040 + C3039 + C3038) * C153637 * C153936) *
               C153537 * C299 +
           (C3060 * C153936 + (C3046 + C3045 + C3044) * C153637 * C153924 +
            (C2689 * C2917 - C2690 * C2913 - C2689 * C2918 + C2683 * C2925 +
             C2691 * C2919 - C2692 * C2914 - C2691 * C2920 + C2684 * C2926 +
             C2693 * C2921 - C2694 * C2915 - C2693 * C2922 + C153885 * C2927) *
                C153637 * C153898) *
               C153537 * C300) *
              C301 +
          (((C3047 + C3048 + C3049) * C153637 * C153936 +
            (C3050 + C3051 + C3052) * C153637 * C153924 +
            (C3053 + C3054 + C3055) * C153637 * C153898) *
               C153537 * C299 -
           (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153637 * C153936) *
               C153537 * C298 -
           ((C2693 * C2923 - C2694 * C2916 - C2693 * C2924 + C153885 * C2928 +
             C2691 * C2921 - C2692 * C2915 - C2691 * C2922 + C2684 * C2927 +
             C2689 * C2919 - C2690 * C2914 - C2689 * C2920 + C2683 * C2926) *
                C153637 * C153898 +
            (C3055 + C3054 + C3053) * C153637 * C153924 + C3061 * C153936) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C473 -
           ((C2693 * C1765 - C2694 * C1758 - C2693 * C1766 + C153885 * C1773 +
             C2691 * C1767 - C2692 * C1759 - C2691 * C1768 + C2684 * C1774 +
             C2689 * C1769 - C2690 * C1760 - C2689 * C1770 + C2683 * C1775) *
                C153637 * C153898 +
            (C2693 * C955 - C2694 * C947 - C2693 * C956 + C153885 * C965 +
             C2691 * C953 - C2692 * C946 - C2691 * C954 + C2684 * C964 +
             C2689 * C951 - C2690 * C945 - C2689 * C952 + C2683 * C963) *
                C153637 * C153924 +
            (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
             C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
             C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                C153637 * C153936) *
               C474 +
           ((C2689 * C498 - C2690 * C481 - C2689 * C499 + C2683 * C517 +
             C2691 * C500 - C2692 * C482 - C2691 * C501 + C2684 * C518 +
             C2693 * C502 - C2694 * C483 - C2693 * C503 + C153885 * C519) *
                C153637 * C153936 +
            (C2689 * C1338 - C2690 * C1329 - C2689 * C1339 + C2683 * C1344 +
             C2691 * C1336 - C2692 * C1328 - C2691 * C1337 + C2684 * C1343 +
             C2693 * C1334 - C2694 * C1327 - C2693 * C1335 + C153885 * C1342) *
                C153637 * C153924 +
            (C2689 * C3283 - C2690 * C3279 - C2689 * C3284 + C2683 * C3291 +
             C2691 * C3285 - C2692 * C3280 - C2691 * C3286 + C2684 * C3292 +
             C2693 * C3287 - C2694 * C3281 - C2693 * C3288 + C153885 * C3293) *
                C153637 * C153898) *
               C475) *
              C153521 * C301 +
          (((C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515 +
             C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
             C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513) *
                C153637 * C153936 +
            (C2689 * C953 - C2690 * C946 - C2689 * C954 + C2683 * C964 +
             C2691 * C955 - C2692 * C947 - C2691 * C956 + C2684 * C965 +
             C2693 * C957 - C2694 * C948 - C2693 * C958 + C153885 * C966) *
                C153637 * C153924 +
            (C2689 * C1767 - C2690 * C1759 - C2689 * C1768 + C2683 * C1774 +
             C2691 * C1765 - C2692 * C1758 - C2691 * C1766 + C2684 * C1773 +
             C2693 * C1763 - C2694 * C1757 - C2693 * C1764 + C153885 * C1772) *
                C153637 * C153898) *
               C474 -
           (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153637 * C153936) *
               C473 -
           ((C2693 * C3289 - C2694 * C3282 - C2693 * C3290 + C153885 * C3294 +
             C2691 * C3287 - C2692 * C3281 - C2691 * C3288 + C2684 * C3293 +
             C2689 * C3285 - C2690 * C3280 - C2689 * C3286 + C2683 * C3292) *
                C153637 * C153898 +
            (C2693 * C1332 - C2694 * C1326 - C2693 * C1333 + C153885 * C1341 +
             C2691 * C1334 - C2692 * C1327 - C2691 * C1335 + C2684 * C1342 +
             C2689 * C1336 - C2690 * C1328 - C2689 * C1337 + C2683 * C1343) *
                C153637 * C153924 +
            (C2693 * C504 - C2694 * C484 - C2693 * C505 + C153885 * C520 +
             C2691 * C502 - C2692 * C483 - C2691 * C503 + C2684 * C519 +
             C2689 * C500 - C2690 * C482 - C2689 * C501 + C2683 * C518) *
                C153637 * C153936) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
            C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
            C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
               C153637 * C23989 +
           (C23992 * C323 - C23993 * C307 - C23992 * C324 + C153933 * C343 +
            C23994 * C321 - C23995 * C306 - C23994 * C322 + C153914 * C342 +
            C23996 * C319 - C23997 * C305 - C23996 * C320 + C153885 * C341) *
               C153637 * C23990 +
           (C23992 * C325 - C23993 * C308 - C23992 * C326 + C153933 * C344 +
            C23994 * C327 - C23995 * C309 - C23994 * C328 + C153914 * C345 +
            C23996 * C329 - C23997 * C310 - C23996 * C330 + C153885 * C346) *
               C153637 * C153898) *
              C153537 * C153521 * C130 -
          ((C23996 * C331 - C23997 * C311 - C23996 * C332 + C153885 * C347 +
            C23994 * C329 - C23995 * C310 - C23994 * C330 + C153914 * C346 +
            C23992 * C327 - C23993 * C309 - C23992 * C328 + C153933 * C345) *
               C153637 * C153898 +
           (C23996 * C317 - C23997 * C304 - C23996 * C318 + C153885 * C340 +
            C23994 * C319 - C23995 * C305 - C23994 * C320 + C153914 * C341 +
            C23992 * C321 - C23993 * C306 - C23992 * C322 + C153933 * C342) *
               C153637 * C23990 +
           (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
            C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
            C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
               C153637 * C23989) *
              C153537 * C153521 * C131 +
          ((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
            C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
            C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
               C153637 * C23989 +
           (C23992 * C319 - C23993 * C305 - C23992 * C320 + C153933 * C341 +
            C23994 * C317 - C23995 * C304 - C23994 * C318 + C153914 * C340 +
            C23996 * C315 - C23997 * C303 - C23996 * C316 + C153885 * C339) *
               C153637 * C23990 +
           (C23992 * C329 - C23993 * C310 - C23992 * C330 + C153933 * C346 +
            C23994 * C331 - C23995 * C311 - C23994 * C332 + C153914 * C347 +
            C23996 * C333 - C23997 * C312 - C23996 * C334 + C153885 * C348) *
               C153637 * C153898) *
              C153537 * C153521 * C132 -
          ((C23996 * C337 - C23997 * C314 - C23996 * C338 + C153885 * C350 +
            C23994 * C333 - C23995 * C312 - C23994 * C334 + C153914 * C348 +
            C23992 * C331 - C23993 * C311 - C23992 * C332 + C153933 * C347) *
               C153637 * C153898 +
           (C23996 * C335 - C23997 * C313 - C23996 * C336 + C153885 * C349 +
            C23994 * C315 - C23995 * C303 - C23994 * C316 + C153914 * C339 +
            C23992 * C317 - C23993 * C304 - C23992 * C318 + C153933 * C340) *
               C153637 * C23990 +
           (C23996 * C162 - C23997 * C149 - C23996 * C163 + C153885 * C173 +
            C23994 * C160 - C23995 * C148 - C23994 * C161 + C153914 * C172 +
            C23992 * C158 - C23993 * C147 - C23992 * C159 + C153933 * C171) *
               C153637 * C23989) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153537 * C298 -
           ((C24331 + C24332 + C24333) * C153637 * C153898 +
            (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C153537 * C299 +
           (C24347 * C23989 + (C24333 + C24332 + C24331) * C153637 * C23990 +
            (C23992 * C2917 - C23993 * C2913 - C23992 * C2918 +
             C153933 * C2925 + C23994 * C2919 - C23995 * C2914 -
             C23994 * C2920 + C153914 * C2926 + C23996 * C2921 -
             C23997 * C2915 - C23996 * C2922 + C153885 * C2927) *
                C153637 * C153898) *
               C153537 * C300) *
              C301 +
          (((C24334 + C24335 + C24336) * C153637 * C23989 +
            (C24337 + C24338 + C24339) * C153637 * C23990 +
            (C24340 + C24341 + C24342) * C153637 * C153898) *
               C153537 * C299 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C153537 * C298 -
           ((C23996 * C2923 - C23997 * C2916 - C23996 * C2924 +
             C153885 * C2928 + C23994 * C2921 - C23995 * C2915 -
             C23994 * C2922 + C153914 * C2927 + C23992 * C2919 -
             C23993 * C2914 - C23992 * C2920 + C153933 * C2926) *
                C153637 * C153898 +
            (C24342 + C24341 + C24340) * C153637 * C23990 + C24348 * C23989) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C473 -
           ((C23996 * C1765 - C23997 * C1758 - C23996 * C1766 +
             C153885 * C1773 + C23994 * C1767 - C23995 * C1759 -
             C23994 * C1768 + C153914 * C1774 + C23992 * C1769 -
             C23993 * C1760 - C23992 * C1770 + C153933 * C1775) *
                C153637 * C153898 +
            (C23996 * C955 - C23997 * C947 - C23996 * C956 + C153885 * C965 +
             C23994 * C953 - C23995 * C946 - C23994 * C954 + C153914 * C964 +
             C23992 * C951 - C23993 * C945 - C23992 * C952 + C153933 * C963) *
                C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C474 +
           ((C23992 * C498 - C23993 * C481 - C23992 * C499 + C153933 * C517 +
             C23994 * C500 - C23995 * C482 - C23994 * C501 + C153914 * C518 +
             C23996 * C502 - C23997 * C483 - C23996 * C503 + C153885 * C519) *
                C153637 * C23989 +
            (C23992 * C1338 - C23993 * C1329 - C23992 * C1339 +
             C153933 * C1344 + C23994 * C1336 - C23995 * C1328 -
             C23994 * C1337 + C153914 * C1343 + C23996 * C1334 -
             C23997 * C1327 - C23996 * C1335 + C153885 * C1342) *
                C153637 * C23990 +
            (C23992 * C3283 - C23993 * C3279 - C23992 * C3284 +
             C153933 * C3291 + C23994 * C3285 - C23995 * C3280 -
             C23994 * C3286 + C153914 * C3292 + C23996 * C3287 -
             C23997 * C3281 - C23996 * C3288 + C153885 * C3293) *
                C153637 * C153898) *
               C475) *
              C153521 * C301 +
          (((C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515 +
             C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
             C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513) *
                C153637 * C23989 +
            (C23992 * C953 - C23993 * C946 - C23992 * C954 + C153933 * C964 +
             C23994 * C955 - C23995 * C947 - C23994 * C956 + C153914 * C965 +
             C23996 * C957 - C23997 * C948 - C23996 * C958 + C153885 * C966) *
                C153637 * C23990 +
            (C23992 * C1767 - C23993 * C1759 - C23992 * C1768 +
             C153933 * C1774 + C23994 * C1765 - C23995 * C1758 -
             C23994 * C1766 + C153914 * C1773 + C23996 * C1763 -
             C23997 * C1757 - C23996 * C1764 + C153885 * C1772) *
                C153637 * C153898) *
               C474 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C473 -
           ((C23996 * C3289 - C23997 * C3282 - C23996 * C3290 +
             C153885 * C3294 + C23994 * C3287 - C23995 * C3281 -
             C23994 * C3288 + C153914 * C3293 + C23992 * C3285 -
             C23993 * C3280 - C23992 * C3286 + C153933 * C3292) *
                C153637 * C153898 +
            (C23996 * C1332 - C23997 * C1326 - C23996 * C1333 +
             C153885 * C1341 + C23994 * C1334 - C23995 * C1327 -
             C23994 * C1335 + C153914 * C1342 + C23992 * C1336 -
             C23993 * C1328 - C23992 * C1337 + C153933 * C1343) *
                C153637 * C23990 +
            (C23996 * C504 - C23997 * C484 - C23996 * C505 + C153885 * C520 +
             C23994 * C502 - C23995 * C483 - C23994 * C503 + C153914 * C519 +
             C23992 * C500 - C23993 * C482 - C23992 * C501 + C153933 * C518) *
                C153637 * C23989) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
               C153637 * C28207 +
           (C28212 * C323 - C28213 * C307 - C28212 * C324 + C153462 * C343) *
               C153637 * C28208 +
           (C28212 * C325 - C28213 * C308 - C28212 * C326 + C153462 * C344) *
               C153637 * C28209 +
           (C28212 * C1196 - C28213 * C1187 - C28212 * C1197 +
            C153462 * C1202) *
               C153637 * C28210 +
           (C28212 * C2917 - C28213 * C2913 - C28212 * C2918 +
            C153462 * C2925) *
               C153637 * C28211) *
              C153537 * C153521 * C130 -
          ((C28212 * C2919 - C28213 * C2914 - C28212 * C2920 +
            C153462 * C2926) *
               C153637 * C28211 +
           (C28212 * C1194 - C28213 * C1186 - C28212 * C1195 +
            C153462 * C1201) *
               C153637 * C28210 +
           (C28212 * C327 - C28213 * C309 - C28212 * C328 + C153462 * C345) *
               C153637 * C28209 +
           (C28212 * C321 - C28213 * C306 - C28212 * C322 + C153462 * C342) *
               C153637 * C28208 +
           (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
               C153637 * C28207) *
              C153537 * C153521 * C131 +
          ((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
               C153637 * C28207 +
           (C28212 * C319 - C28213 * C305 - C28212 * C320 + C153462 * C341) *
               C153637 * C28208 +
           (C28212 * C329 - C28213 * C310 - C28212 * C330 + C153462 * C346) *
               C153637 * C28209 +
           (C28212 * C1192 - C28213 * C1185 - C28212 * C1193 +
            C153462 * C1200) *
               C153637 * C28210 +
           (C28212 * C2921 - C28213 * C2915 - C28212 * C2922 +
            C153462 * C2927) *
               C153637 * C28211) *
              C153537 * C153521 * C132 -
          ((C28212 * C2923 - C28213 * C2916 - C28212 * C2924 +
            C153462 * C2928) *
               C153637 * C28211 +
           (C28212 * C1190 - C28213 * C1184 - C28212 * C1191 +
            C153462 * C1199) *
               C153637 * C28210 +
           (C28212 * C331 - C28213 * C311 - C28212 * C332 + C153462 * C347) *
               C153637 * C28209 +
           (C28212 * C317 - C28213 * C304 - C28212 * C318 + C153462 * C340) *
               C153637 * C28208 +
           (C28212 * C158 - C28213 * C147 - C28212 * C159 + C153462 * C171) *
               C153637 * C28207) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153537 * C298 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C153537 * C299 +
           (C28416 * C28207 + C28417 * C28208 + C28418 * C28209 +
            C28419 * C28210 +
            (C28212 * C28338 - C28213 * C28336 - C28212 * C28339 +
             C153462 * C28342) *
                C153637 * C28211) *
               C153537 * C300) *
              C301 +
          ((C28420 * C28207 + C28421 * C28208 + C28422 * C28209 +
            C28423 * C28210 + C28424 * C28211) *
               C153537 * C299 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C153537 * C298 -
           ((C28212 * C28340 - C28213 * C28337 - C28212 * C28341 +
             C153462 * C28343) *
                C153637 * C28211 +
            C28424 * C28210 + C28423 * C28209 + C28422 * C28208 +
            C28421 * C28207) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C473 -
           ((C28212 * C5568 - C28213 * C5563 - C28212 * C5569 +
             C153462 * C5572) *
                C153637 * C28211 +
            (C28212 * C4067 - C28213 * C4063 - C28212 * C4068 +
             C153462 * C4075) *
                C153637 * C28210 +
            (C28212 * C1769 - C28213 * C1760 - C28212 * C1770 +
             C153462 * C1775) *
                C153637 * C28209 +
            (C28212 * C951 - C28213 * C945 - C28212 * C952 + C153462 * C963) *
                C153637 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C474 +
           ((C28212 * C498 - C28213 * C481 - C28212 * C499 + C153462 * C517) *
                C153637 * C28207 +
            (C28212 * C1338 - C28213 * C1329 - C28212 * C1339 +
             C153462 * C1344) *
                C153637 * C28208 +
            (C28212 * C3283 - C28213 * C3279 - C28212 * C3284 +
             C153462 * C3291) *
                C153637 * C28209 +
            (C28212 * C4788 - C28213 * C4783 - C28212 * C4789 +
             C153462 * C4792) *
                C153637 * C28210 +
            (C28212 * C28548 - C28213 * C28546 - C28212 * C28549 +
             C153462 * C28552) *
                C153637 * C28211) *
               C475) *
              C153521 * C301 +
          (((C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                C153637 * C28207 +
            (C28212 * C953 - C28213 * C946 - C28212 * C954 + C153462 * C964) *
                C153637 * C28208 +
            (C28212 * C1767 - C28213 * C1759 - C28212 * C1768 +
             C153462 * C1774) *
                C153637 * C28209 +
            (C28212 * C4069 - C28213 * C4064 - C28212 * C4070 +
             C153462 * C4076) *
                C153637 * C28210 +
            (C28212 * C5566 - C28213 * C5562 - C28212 * C5567 +
             C153462 * C5571) *
                C153637 * C28211) *
               C474 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C473 -
           ((C28212 * C28550 - C28213 * C28547 - C28212 * C28551 +
             C153462 * C28553) *
                C153637 * C28211 +
            (C28212 * C4786 - C28213 * C4782 - C28212 * C4787 +
             C153462 * C4791) *
                C153637 * C28210 +
            (C28212 * C3285 - C28213 * C3280 - C28212 * C3286 +
             C153462 * C3292) *
                C153637 * C28209 +
            (C28212 * C1336 - C28213 * C1328 - C28212 * C1337 +
             C153462 * C1343) *
                C153637 * C28208 +
            (C28212 * C500 - C28213 * C482 - C28212 * C501 + C153462 * C518) *
                C153637 * C28207) *
               C475) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[363] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C153849 -
           (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
            C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
            C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
            C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
            C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
               C153637 * C153625 * C153601) *
              C153521 * C153917 +
          ((C134 * C494 - C135 * C479 - C134 * C495 + C121 * C515 +
            C136 * C492 - C137 * C478 - C136 * C493 + C122 * C514 +
            C138 * C490 - C139 * C477 - C138 * C491 + C123 * C513 +
            C140 * C488 - C141 * C476 - C140 * C489 + C124 * C512 +
            C142 * C508 - C143 * C486 - C142 * C509 + C125 * C522) *
               C153637 * C153625 * C153601 -
           (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
            C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
            C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
            C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
            C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
               C153637 * C153625 * C153849) *
              C153521 * C153918 +
          ((C134 * C156 - C135 * C146 - C134 * C157 + C121 * C170 +
            C136 * C158 - C137 * C147 - C136 * C159 + C122 * C171 +
            C138 * C160 - C139 * C148 - C138 * C161 + C123 * C172 +
            C140 * C162 - C141 * C149 - C140 * C163 + C124 * C173 +
            C142 * C164 - C143 * C150 - C142 * C165 + C125 * C174) *
               C153637 * C153625 * C153849 -
           (C142 * C780 - C143 * C779 - C142 * C781 + C125 * C782 +
            C140 * C508 - C141 * C486 - C140 * C509 + C124 * C522 +
            C138 * C488 - C139 * C476 - C138 * C489 + C123 * C512 +
            C136 * C490 - C137 * C477 - C136 * C491 + C122 * C513 +
            C134 * C492 - C135 * C478 - C134 * C493 + C121 * C514) *
               C153637 * C153625 * C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C153849 -
           ((C2693 * C1765 - C2694 * C1758 - C2693 * C1766 + C153885 * C1773 +
             C2691 * C1767 - C2692 * C1759 - C2691 * C1768 + C2684 * C1774 +
             C2689 * C1769 - C2690 * C1760 - C2689 * C1770 + C2683 * C1775) *
                C153637 * C153898 +
            (C2693 * C955 - C2694 * C947 - C2693 * C956 + C153885 * C965 +
             C2691 * C953 - C2692 * C946 - C2691 * C954 + C2684 * C964 +
             C2689 * C951 - C2690 * C945 - C2689 * C952 + C2683 * C963) *
                C153637 * C153924 +
            (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
             C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
             C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                C153637 * C153936) *
               C153601) *
              C153521 * C153917 +
          (((C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515 +
             C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
             C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513) *
                C153637 * C153936 +
            (C2689 * C953 - C2690 * C946 - C2689 * C954 + C2683 * C964 +
             C2691 * C955 - C2692 * C947 - C2691 * C956 + C2684 * C965 +
             C2693 * C957 - C2694 * C948 - C2693 * C958 + C153885 * C966) *
                C153637 * C153924 +
            (C2689 * C1767 - C2690 * C1759 - C2689 * C1768 + C2683 * C1774 +
             C2691 * C1765 - C2692 * C1758 - C2691 * C1766 + C2684 * C1773 +
             C2693 * C1763 - C2694 * C1757 - C2693 * C1764 + C153885 * C1772) *
                C153637 * C153898) *
               C153601 -
           (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153637 * C153936) *
               C153849) *
              C153521 * C153918 +
          (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
             C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
             C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                C153637 * C153936 +
            (C3550 + C3551 + C3552) * C153637 * C153924 +
            (C3553 + C3554 + C3555) * C153637 * C153898) *
               C153849 -
           ((C2693 * C1761 - C2694 * C1756 - C2693 * C1762 + C153885 * C1771 +
             C2691 * C1763 - C2692 * C1757 - C2691 * C1764 + C2684 * C1772 +
             C2689 * C1765 - C2690 * C1758 - C2689 * C1766 + C2683 * C1773) *
                C153637 * C153898 +
            (C2693 * C959 - C2694 * C949 - C2693 * C960 + C153885 * C967 +
             C2691 * C957 - C2692 * C948 - C2691 * C958 + C2684 * C966 +
             C2689 * C955 - C2690 * C947 - C2689 * C956 + C2683 * C965) *
                C153637 * C153924 +
            (C2693 * C488 - C2694 * C476 - C2693 * C489 + C153885 * C512 +
             C2691 * C490 - C2692 * C477 - C2691 * C491 + C2684 * C513 +
             C2689 * C492 - C2690 * C478 - C2689 * C493 + C2683 * C514) *
                C153637 * C153936) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153849 -
           ((C23996 * C1765 - C23997 * C1758 - C23996 * C1766 +
             C153885 * C1773 + C23994 * C1767 - C23995 * C1759 -
             C23994 * C1768 + C153914 * C1774 + C23992 * C1769 -
             C23993 * C1760 - C23992 * C1770 + C153933 * C1775) *
                C153637 * C153898 +
            (C23996 * C955 - C23997 * C947 - C23996 * C956 + C153885 * C965 +
             C23994 * C953 - C23995 * C946 - C23994 * C954 + C153914 * C964 +
             C23992 * C951 - C23993 * C945 - C23992 * C952 + C153933 * C963) *
                C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C153601) *
              C153521 * C153917 +
          (((C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515 +
             C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
             C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513) *
                C153637 * C23989 +
            (C23992 * C953 - C23993 * C946 - C23992 * C954 + C153933 * C964 +
             C23994 * C955 - C23995 * C947 - C23994 * C956 + C153914 * C965 +
             C23996 * C957 - C23997 * C948 - C23996 * C958 + C153885 * C966) *
                C153637 * C23990 +
            (C23992 * C1767 - C23993 * C1759 - C23992 * C1768 +
             C153933 * C1774 + C23994 * C1765 - C23995 * C1758 -
             C23994 * C1766 + C153914 * C1773 + C23996 * C1763 -
             C23997 * C1757 - C23996 * C1764 + C153885 * C1772) *
                C153637 * C153898) *
               C153601 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C153849) *
              C153521 * C153918 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C153637 * C23989 +
            (C24821 + C24822 + C24823) * C153637 * C23990 +
            (C24824 + C24825 + C24826) * C153637 * C153898) *
               C153849 -
           ((C23996 * C1761 - C23997 * C1756 - C23996 * C1762 +
             C153885 * C1771 + C23994 * C1763 - C23995 * C1757 -
             C23994 * C1764 + C153914 * C1772 + C23992 * C1765 -
             C23993 * C1758 - C23992 * C1766 + C153933 * C1773) *
                C153637 * C153898 +
            (C23996 * C959 - C23997 * C949 - C23996 * C960 + C153885 * C967 +
             C23994 * C957 - C23995 * C948 - C23994 * C958 + C153914 * C966 +
             C23992 * C955 - C23993 * C947 - C23992 * C956 + C153933 * C965) *
                C153637 * C23990 +
            (C23996 * C488 - C23997 * C476 - C23996 * C489 + C153885 * C512 +
             C23994 * C490 - C23995 * C477 - C23994 * C491 + C153914 * C513 +
             C23992 * C492 - C23993 * C478 - C23992 * C493 + C153933 * C514) *
                C153637 * C23989) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153849 -
           ((C28212 * C5568 - C28213 * C5563 - C28212 * C5569 +
             C153462 * C5572) *
                C153637 * C28211 +
            (C28212 * C4067 - C28213 * C4063 - C28212 * C4068 +
             C153462 * C4075) *
                C153637 * C28210 +
            (C28212 * C1769 - C28213 * C1760 - C28212 * C1770 +
             C153462 * C1775) *
                C153637 * C28209 +
            (C28212 * C951 - C28213 * C945 - C28212 * C952 + C153462 * C963) *
                C153637 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C153601) *
              C153521 * C153917 +
          (((C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                C153637 * C28207 +
            (C28212 * C953 - C28213 * C946 - C28212 * C954 + C153462 * C964) *
                C153637 * C28208 +
            (C28212 * C1767 - C28213 * C1759 - C28212 * C1768 +
             C153462 * C1774) *
                C153637 * C28209 +
            (C28212 * C4069 - C28213 * C4064 - C28212 * C4070 +
             C153462 * C4076) *
                C153637 * C28210 +
            (C28212 * C5566 - C28213 * C5562 - C28212 * C5567 +
             C153462 * C5571) *
                C153637 * C28211) *
               C153601 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C153849) *
              C153521 * C153918 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C153637 * C28207 +
            C28705 * C28208 + C28706 * C28209 + C28707 * C28210 +
            C28708 * C28211) *
               C153849 -
           ((C28212 * C5564 - C28213 * C5561 - C28212 * C5565 +
             C153462 * C5570) *
                C153637 * C28211 +
            (C28212 * C4071 - C28213 * C4065 - C28212 * C4072 +
             C153462 * C4077) *
                C153637 * C28210 +
            (C28212 * C1765 - C28213 * C1758 - C28212 * C1766 +
             C153462 * C1773) *
                C153637 * C28209 +
            (C28212 * C955 - C28213 * C947 - C28212 * C956 + C153462 * C965) *
                C153637 * C28208 +
            (C28212 * C492 - C28213 * C478 - C28212 * C493 + C153462 * C514) *
                C153637 * C28207) *
               C153601) *
              C153521 * C650)) /
            (p * q * std::sqrt(p + q));
    d2ee[364] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 + C136 * C154 -
           C137 * C145 - C136 * C155 + C122 * C169 + C138 * C156 - C139 * C146 -
           C138 * C157 + C123 * C170 + C140 * C158 - C141 * C147 - C140 * C159 +
           C124 * C171 + C142 * C160 - C143 * C148 - C142 * C161 +
           C125 * C172) *
              C153637 * C153625 * C153537 * C153521 * C130 -
          (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 + C140 * C160 -
           C141 * C148 - C140 * C161 + C124 * C172 + C138 * C158 - C139 * C147 -
           C138 * C159 + C123 * C171 + C136 * C156 - C137 * C146 - C136 * C157 +
           C122 * C170 + C134 * C154 - C135 * C145 - C134 * C155 +
           C121 * C169) *
              C153637 * C153625 * C153537 * C153521 * C131 +
          (C134 * C156 - C135 * C146 - C134 * C157 + C121 * C170 + C136 * C158 -
           C137 * C147 - C136 * C159 + C122 * C171 + C138 * C160 - C139 * C148 -
           C138 * C161 + C123 * C172 + C140 * C162 - C141 * C149 - C140 * C163 +
           C124 * C173 + C142 * C164 - C143 * C150 - C142 * C165 +
           C125 * C174) *
              C153637 * C153625 * C153537 * C153521 * C132 -
          (C142 * C166 - C143 * C151 - C142 * C167 + C125 * C175 + C140 * C164 -
           C141 * C150 - C140 * C165 + C124 * C174 + C138 * C162 - C139 * C149 -
           C138 * C163 + C123 * C173 + C136 * C160 - C137 * C148 - C136 * C161 +
           C122 * C172 + C134 * C158 - C135 * C147 - C134 * C159 +
           C121 * C171) *
              C153637 * C153625 * C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C153537 * C298 -
           (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
            C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
            C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
            C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
            C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
               C153637 * C153625 * C153537 * C299 +
           (C134 * C325 - C135 * C308 - C134 * C326 + C121 * C344 +
            C136 * C327 - C137 * C309 - C136 * C328 + C122 * C345 +
            C138 * C329 - C139 * C310 - C138 * C330 + C123 * C346 +
            C140 * C331 - C141 * C311 - C140 * C332 + C124 * C347 +
            C142 * C333 - C143 * C312 - C142 * C334 + C125 * C348) *
               C153637 * C153625 * C153537 * C300) *
              C301 +
          ((C134 * C321 - C135 * C306 - C134 * C322 + C121 * C342 +
            C136 * C319 - C137 * C305 - C136 * C320 + C122 * C341 +
            C138 * C317 - C139 * C304 - C138 * C318 + C123 * C340 +
            C140 * C315 - C141 * C303 - C140 * C316 + C124 * C339 +
            C142 * C335 - C143 * C313 - C142 * C336 + C125 * C349) *
               C153637 * C153625 * C153537 * C299 -
           (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
            C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
            C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
            C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
            C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
               C153637 * C153625 * C153537 * C298 -
           (C142 * C337 - C143 * C314 - C142 * C338 + C125 * C350 +
            C140 * C333 - C141 * C312 - C140 * C334 + C124 * C348 +
            C138 * C331 - C139 * C311 - C138 * C332 + C123 * C347 +
            C136 * C329 - C137 * C310 - C136 * C330 + C122 * C346 +
            C134 * C327 - C135 * C309 - C134 * C328 + C121 * C345) *
               C153637 * C153625 * C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
            C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
            C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
               C153637 * C153936 +
           (C2689 * C323 - C2690 * C307 - C2689 * C324 + C2683 * C343 +
            C2691 * C321 - C2692 * C306 - C2691 * C322 + C2684 * C342 +
            C2693 * C319 - C2694 * C305 - C2693 * C320 + C153885 * C341) *
               C153637 * C153924 +
           (C2689 * C325 - C2690 * C308 - C2689 * C326 + C2683 * C344 +
            C2691 * C327 - C2692 * C309 - C2691 * C328 + C2684 * C345 +
            C2693 * C329 - C2694 * C310 - C2693 * C330 + C153885 * C346) *
               C153637 * C153898) *
              C153537 * C153521 * C130 -
          ((C2693 * C331 - C2694 * C311 - C2693 * C332 + C153885 * C347 +
            C2691 * C329 - C2692 * C310 - C2691 * C330 + C2684 * C346 +
            C2689 * C327 - C2690 * C309 - C2689 * C328 + C2683 * C345) *
               C153637 * C153898 +
           (C2693 * C317 - C2694 * C304 - C2693 * C318 + C153885 * C340 +
            C2691 * C319 - C2692 * C305 - C2691 * C320 + C2684 * C341 +
            C2689 * C321 - C2690 * C306 - C2689 * C322 + C2683 * C342) *
               C153637 * C153924 +
           (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
            C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
            C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
               C153637 * C153936) *
              C153537 * C153521 * C131 +
          ((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
            C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
            C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
               C153637 * C153936 +
           (C2689 * C319 - C2690 * C305 - C2689 * C320 + C2683 * C341 +
            C2691 * C317 - C2692 * C304 - C2691 * C318 + C2684 * C340 +
            C2693 * C315 - C2694 * C303 - C2693 * C316 + C153885 * C339) *
               C153637 * C153924 +
           (C2689 * C329 - C2690 * C310 - C2689 * C330 + C2683 * C346 +
            C2691 * C331 - C2692 * C311 - C2691 * C332 + C2684 * C347 +
            C2693 * C333 - C2694 * C312 - C2693 * C334 + C153885 * C348) *
               C153637 * C153898) *
              C153537 * C153521 * C132 -
          ((C2693 * C337 - C2694 * C314 - C2693 * C338 + C153885 * C350 +
            C2691 * C333 - C2692 * C312 - C2691 * C334 + C2684 * C348 +
            C2689 * C331 - C2690 * C311 - C2689 * C332 + C2683 * C347) *
               C153637 * C153898 +
           (C2693 * C335 - C2694 * C313 - C2693 * C336 + C153885 * C349 +
            C2691 * C315 - C2692 * C303 - C2691 * C316 + C2684 * C339 +
            C2689 * C317 - C2690 * C304 - C2689 * C318 + C2683 * C340) *
               C153637 * C153924 +
           (C2693 * C162 - C2694 * C149 - C2693 * C163 + C153885 * C173 +
            C2691 * C160 - C2692 * C148 - C2691 * C161 + C2684 * C172 +
            C2689 * C158 - C2690 * C147 - C2689 * C159 + C2683 * C171) *
               C153637 * C153936) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C153537 * C298 -
           ((C3044 + C3045 + C3046) * C153637 * C153898 +
            (C3043 + C3042 + C3041) * C153637 * C153924 +
            (C3040 + C3039 + C3038) * C153637 * C153936) *
               C153537 * C299 +
           (C3060 * C153936 + (C3046 + C3045 + C3044) * C153637 * C153924 +
            (C2689 * C2917 - C2690 * C2913 - C2689 * C2918 + C2683 * C2925 +
             C2691 * C2919 - C2692 * C2914 - C2691 * C2920 + C2684 * C2926 +
             C2693 * C2921 - C2694 * C2915 - C2693 * C2922 + C153885 * C2927) *
                C153637 * C153898) *
               C153537 * C300) *
              C301 +
          (((C3047 + C3048 + C3049) * C153637 * C153936 +
            (C3050 + C3051 + C3052) * C153637 * C153924 +
            (C3053 + C3054 + C3055) * C153637 * C153898) *
               C153537 * C299 -
           (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153637 * C153936) *
               C153537 * C298 -
           ((C2693 * C2923 - C2694 * C2916 - C2693 * C2924 + C153885 * C2928 +
             C2691 * C2921 - C2692 * C2915 - C2691 * C2922 + C2684 * C2927 +
             C2689 * C2919 - C2690 * C2914 - C2689 * C2920 + C2683 * C2926) *
                C153637 * C153898 +
            (C3055 + C3054 + C3053) * C153637 * C153924 + C3061 * C153936) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
            C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
            C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
               C153637 * C23989 +
           (C23992 * C323 - C23993 * C307 - C23992 * C324 + C153933 * C343 +
            C23994 * C321 - C23995 * C306 - C23994 * C322 + C153914 * C342 +
            C23996 * C319 - C23997 * C305 - C23996 * C320 + C153885 * C341) *
               C153637 * C23990 +
           (C23992 * C325 - C23993 * C308 - C23992 * C326 + C153933 * C344 +
            C23994 * C327 - C23995 * C309 - C23994 * C328 + C153914 * C345 +
            C23996 * C329 - C23997 * C310 - C23996 * C330 + C153885 * C346) *
               C153637 * C153898) *
              C153537 * C153521 * C130 -
          ((C23996 * C331 - C23997 * C311 - C23996 * C332 + C153885 * C347 +
            C23994 * C329 - C23995 * C310 - C23994 * C330 + C153914 * C346 +
            C23992 * C327 - C23993 * C309 - C23992 * C328 + C153933 * C345) *
               C153637 * C153898 +
           (C23996 * C317 - C23997 * C304 - C23996 * C318 + C153885 * C340 +
            C23994 * C319 - C23995 * C305 - C23994 * C320 + C153914 * C341 +
            C23992 * C321 - C23993 * C306 - C23992 * C322 + C153933 * C342) *
               C153637 * C23990 +
           (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
            C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
            C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
               C153637 * C23989) *
              C153537 * C153521 * C131 +
          ((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
            C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
            C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
               C153637 * C23989 +
           (C23992 * C319 - C23993 * C305 - C23992 * C320 + C153933 * C341 +
            C23994 * C317 - C23995 * C304 - C23994 * C318 + C153914 * C340 +
            C23996 * C315 - C23997 * C303 - C23996 * C316 + C153885 * C339) *
               C153637 * C23990 +
           (C23992 * C329 - C23993 * C310 - C23992 * C330 + C153933 * C346 +
            C23994 * C331 - C23995 * C311 - C23994 * C332 + C153914 * C347 +
            C23996 * C333 - C23997 * C312 - C23996 * C334 + C153885 * C348) *
               C153637 * C153898) *
              C153537 * C153521 * C132 -
          ((C23996 * C337 - C23997 * C314 - C23996 * C338 + C153885 * C350 +
            C23994 * C333 - C23995 * C312 - C23994 * C334 + C153914 * C348 +
            C23992 * C331 - C23993 * C311 - C23992 * C332 + C153933 * C347) *
               C153637 * C153898 +
           (C23996 * C335 - C23997 * C313 - C23996 * C336 + C153885 * C349 +
            C23994 * C315 - C23995 * C303 - C23994 * C316 + C153914 * C339 +
            C23992 * C317 - C23993 * C304 - C23992 * C318 + C153933 * C340) *
               C153637 * C23990 +
           (C23996 * C162 - C23997 * C149 - C23996 * C163 + C153885 * C173 +
            C23994 * C160 - C23995 * C148 - C23994 * C161 + C153914 * C172 +
            C23992 * C158 - C23993 * C147 - C23992 * C159 + C153933 * C171) *
               C153637 * C23989) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153537 * C298 -
           ((C24331 + C24332 + C24333) * C153637 * C153898 +
            (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C153537 * C299 +
           (C24347 * C23989 + (C24333 + C24332 + C24331) * C153637 * C23990 +
            (C23992 * C2917 - C23993 * C2913 - C23992 * C2918 +
             C153933 * C2925 + C23994 * C2919 - C23995 * C2914 -
             C23994 * C2920 + C153914 * C2926 + C23996 * C2921 -
             C23997 * C2915 - C23996 * C2922 + C153885 * C2927) *
                C153637 * C153898) *
               C153537 * C300) *
              C301 +
          (((C24334 + C24335 + C24336) * C153637 * C23989 +
            (C24337 + C24338 + C24339) * C153637 * C23990 +
            (C24340 + C24341 + C24342) * C153637 * C153898) *
               C153537 * C299 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C153537 * C298 -
           ((C23996 * C2923 - C23997 * C2916 - C23996 * C2924 +
             C153885 * C2928 + C23994 * C2921 - C23995 * C2915 -
             C23994 * C2922 + C153914 * C2927 + C23992 * C2919 -
             C23993 * C2914 - C23992 * C2920 + C153933 * C2926) *
                C153637 * C153898 +
            (C24342 + C24341 + C24340) * C153637 * C23990 + C24348 * C23989) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
               C153637 * C28207 +
           (C28212 * C323 - C28213 * C307 - C28212 * C324 + C153462 * C343) *
               C153637 * C28208 +
           (C28212 * C325 - C28213 * C308 - C28212 * C326 + C153462 * C344) *
               C153637 * C28209 +
           (C28212 * C1196 - C28213 * C1187 - C28212 * C1197 +
            C153462 * C1202) *
               C153637 * C28210 +
           (C28212 * C2917 - C28213 * C2913 - C28212 * C2918 +
            C153462 * C2925) *
               C153637 * C28211) *
              C153537 * C153521 * C130 -
          ((C28212 * C2919 - C28213 * C2914 - C28212 * C2920 +
            C153462 * C2926) *
               C153637 * C28211 +
           (C28212 * C1194 - C28213 * C1186 - C28212 * C1195 +
            C153462 * C1201) *
               C153637 * C28210 +
           (C28212 * C327 - C28213 * C309 - C28212 * C328 + C153462 * C345) *
               C153637 * C28209 +
           (C28212 * C321 - C28213 * C306 - C28212 * C322 + C153462 * C342) *
               C153637 * C28208 +
           (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
               C153637 * C28207) *
              C153537 * C153521 * C131 +
          ((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
               C153637 * C28207 +
           (C28212 * C319 - C28213 * C305 - C28212 * C320 + C153462 * C341) *
               C153637 * C28208 +
           (C28212 * C329 - C28213 * C310 - C28212 * C330 + C153462 * C346) *
               C153637 * C28209 +
           (C28212 * C1192 - C28213 * C1185 - C28212 * C1193 +
            C153462 * C1200) *
               C153637 * C28210 +
           (C28212 * C2921 - C28213 * C2915 - C28212 * C2922 +
            C153462 * C2927) *
               C153637 * C28211) *
              C153537 * C153521 * C132 -
          ((C28212 * C2923 - C28213 * C2916 - C28212 * C2924 +
            C153462 * C2928) *
               C153637 * C28211 +
           (C28212 * C1190 - C28213 * C1184 - C28212 * C1191 +
            C153462 * C1199) *
               C153637 * C28210 +
           (C28212 * C331 - C28213 * C311 - C28212 * C332 + C153462 * C347) *
               C153637 * C28209 +
           (C28212 * C317 - C28213 * C304 - C28212 * C318 + C153462 * C340) *
               C153637 * C28208 +
           (C28212 * C158 - C28213 * C147 - C28212 * C159 + C153462 * C171) *
               C153637 * C28207) *
              C153537 * C153521 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153537 * C298 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C153537 * C299 +
           (C28416 * C28207 + C28417 * C28208 + C28418 * C28209 +
            C28419 * C28210 +
            (C28212 * C28338 - C28213 * C28336 - C28212 * C28339 +
             C153462 * C28342) *
                C153637 * C28211) *
               C153537 * C300) *
              C301 +
          ((C28420 * C28207 + C28421 * C28208 + C28422 * C28209 +
            C28423 * C28210 + C28424 * C28211) *
               C153537 * C299 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C153537 * C298 -
           ((C28212 * C28340 - C28213 * C28337 - C28212 * C28341 +
             C153462 * C28343) *
                C153637 * C28211 +
            C28424 * C28210 + C28423 * C28209 + C28422 * C28208 +
            C28421 * C28207) *
               C153537 * C300) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[365] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C153537 * C153919 -
           (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
            C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
            C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
            C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
            C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
               C153637 * C153625 * C153537 * C153920 +
           (C134 * C325 - C135 * C308 - C134 * C326 + C121 * C344 +
            C136 * C327 - C137 * C309 - C136 * C328 + C122 * C345 +
            C138 * C329 - C139 * C310 - C138 * C330 + C123 * C346 +
            C140 * C331 - C141 * C311 - C140 * C332 + C124 * C347 +
            C142 * C333 - C143 * C312 - C142 * C334 + C125 * C348) *
               C153637 * C153625 * C153537 * C1469) *
              C153840 +
          ((C134 * C321 - C135 * C306 - C134 * C322 + C121 * C342 +
            C136 * C319 - C137 * C305 - C136 * C320 + C122 * C341 +
            C138 * C317 - C139 * C304 - C138 * C318 + C123 * C340 +
            C140 * C315 - C141 * C303 - C140 * C316 + C124 * C339 +
            C142 * C335 - C143 * C313 - C142 * C336 + C125 * C349) *
               C153637 * C153625 * C153537 * C153920 -
           (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
            C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
            C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
            C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
            C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
               C153637 * C153625 * C153537 * C153919 -
           (C142 * C337 - C143 * C314 - C142 * C338 + C125 * C350 +
            C140 * C333 - C141 * C312 - C140 * C334 + C124 * C348 +
            C138 * C331 - C139 * C311 - C138 * C332 + C123 * C347 +
            C136 * C329 - C137 * C310 - C136 * C330 + C122 * C346 +
            C134 * C327 - C135 * C309 - C134 * C328 + C121 * C345) *
               C153637 * C153625 * C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C153537 * C153919 -
           (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
            (C3040 + C3039 + C3038) * C153637 * C153936) *
               C153537 * C153920 +
           (C3060 * C153936 + (C3046 + C3045 + C3044) * C153637 * C153924 +
            (C4561 + C4562 + C4563) * C153637 * C153898) *
               C153537 * C1469) *
              C153840 +
          (((C3047 + C3048 + C3049) * C153637 * C153936 +
            (C3050 + C3051 + C3052) * C153637 * C153924 +
            (C3053 + C3054 + C3055) * C153637 * C153898) *
               C153537 * C153920 -
           (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153637 * C153936) *
               C153537 * C153919 -
           ((C2693 * C2923 - C2694 * C2916 - C2693 * C2924 + C153885 * C2928 +
             C2691 * C2921 - C2692 * C2915 - C2691 * C2922 + C2684 * C2927 +
             C2689 * C2919 - C2690 * C2914 - C2689 * C2920 + C2683 * C2926) *
                C153637 * C153898 +
            (C3055 + C3054 + C3053) * C153637 * C153924 + C3061 * C153936) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153537 * C153919 -
           (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C153537 * C153920 +
           (C24347 * C23989 + (C24333 + C24332 + C24331) * C153637 * C23990 +
            (C25804 + C25805 + C25806) * C153637 * C153898) *
               C153537 * C1469) *
              C153840 +
          (((C24334 + C24335 + C24336) * C153637 * C23989 +
            (C24337 + C24338 + C24339) * C153637 * C23990 +
            (C24340 + C24341 + C24342) * C153637 * C153898) *
               C153537 * C153920 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C153537 * C153919 -
           ((C23996 * C2923 - C23997 * C2916 - C23996 * C2924 +
             C153885 * C2928 + C23994 * C2921 - C23995 * C2915 -
             C23994 * C2922 + C153914 * C2927 + C23992 * C2919 -
             C23993 * C2914 - C23992 * C2920 + C153933 * C2926) *
                C153637 * C153898 +
            (C24342 + C24341 + C24340) * C153637 * C23990 + C24348 * C23989) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153537 * C153919 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C153537 * C153920 +
           (C28416 * C28207 + C28417 * C28208 + C28418 * C28209 +
            C28419 * C28210 + C29280 * C28211) *
               C153537 * C1469) *
              C153840 +
          ((C28420 * C28207 + C28421 * C28208 + C28422 * C28209 +
            C28423 * C28210 + C28424 * C28211) *
               C153537 * C153920 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C153537 * C153919 -
           ((C28212 * C28340 - C28213 * C28337 - C28212 * C28341 +
             C153462 * C28343) *
                C153637 * C28211 +
            C28424 * C28210 + C28423 * C28209 + C28422 * C28208 +
            C28421 * C28207) *
               C153537 * C1469) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[366] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C153849 -
           (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
            C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
            C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
            C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
            C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
               C153637 * C153625 * C153601) *
              C153919 +
          ((C134 * C951 - C135 * C945 - C134 * C952 + C121 * C963 +
            C136 * C953 - C137 * C946 - C136 * C954 + C122 * C964 +
            C138 * C955 - C139 * C947 - C138 * C956 + C123 * C965 +
            C140 * C957 - C141 * C948 - C140 * C958 + C124 * C966 +
            C142 * C959 - C143 * C949 - C142 * C960 + C125 * C967) *
               C153637 * C153625 * C153601 -
           (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
            C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
            C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
            C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
            C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
               C153637 * C153625 * C153849) *
              C153920 +
          ((C134 * C325 - C135 * C308 - C134 * C326 + C121 * C344 +
            C136 * C327 - C137 * C309 - C136 * C328 + C122 * C345 +
            C138 * C329 - C139 * C310 - C138 * C330 + C123 * C346 +
            C140 * C331 - C141 * C311 - C140 * C332 + C124 * C347 +
            C142 * C333 - C143 * C312 - C142 * C334 + C125 * C348) *
               C153637 * C153625 * C153849 -
           (C142 * C1761 - C143 * C1756 - C142 * C1762 + C125 * C1771 +
            C140 * C1763 - C141 * C1757 - C140 * C1764 + C124 * C1772 +
            C138 * C1765 - C139 * C1758 - C138 * C1766 + C123 * C1773 +
            C136 * C1767 - C137 * C1759 - C136 * C1768 + C122 * C1774 +
            C134 * C1769 - C135 * C1760 - C134 * C1770 + C121 * C1775) *
               C153637 * C153625 * C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C153849 -
           (C5591 * C153898 + (C4155 + C4156 + C4157) * C153637 * C153924 +
            (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
             C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
             C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                C153637 * C153936) *
               C153601) *
              C153919 +
          (((C4157 + C4156 + C4155) * C153637 * C153936 +
            (C4154 + C4153 + C4152) * C153637 * C153924 +
            (C5595 + C5596 + C5597) * C153637 * C153898) *
               C153601 -
           (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
            (C3040 + C3039 + C3038) * C153637 * C153936) *
               C153849) *
              C153920 +
          ((C3060 * C153936 + (C3046 + C3045 + C3044) * C153637 * C153924 +
            (C4561 + C4562 + C4563) * C153637 * C153898) *
               C153849 -
           ((C2693 * C5564 - C2694 * C5561 - C2693 * C5565 + C153885 * C5570 +
             C2691 * C5566 - C2692 * C5562 - C2691 * C5567 + C2684 * C5571 +
             C2689 * C5568 - C2690 * C5563 - C2689 * C5569 + C2683 * C5572) *
                C153637 * C153898 +
            (C5597 + C5596 + C5595) * C153637 * C153924 + C5591 * C153936) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153849 -
           (C26810 * C153898 + (C25410 + C25411 + C25412) * C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C153601) *
              C153919 +
          (((C25412 + C25411 + C25410) * C153637 * C23989 +
            (C25409 + C25408 + C25407) * C153637 * C23990 +
            (C26814 + C26815 + C26816) * C153637 * C153898) *
               C153601 -
           (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C153849) *
              C153920 +
          ((C24347 * C23989 + (C24333 + C24332 + C24331) * C153637 * C23990 +
            (C25804 + C25805 + C25806) * C153637 * C153898) *
               C153849 -
           ((C23996 * C5564 - C23997 * C5561 - C23996 * C5565 +
             C153885 * C5570 + C23994 * C5566 - C23995 * C5562 -
             C23994 * C5567 + C153914 * C5571 + C23992 * C5568 -
             C23993 * C5563 - C23992 * C5569 + C153933 * C5572) *
                C153637 * C153898 +
            (C26816 + C26815 + C26814) * C153637 * C23990 + C26810 * C23989) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153849 -
           (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
            C29060 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C153601) *
              C153919 +
          ((C29060 * C28207 + C29059 * C28208 + C29058 * C28209 +
            C29057 * C28210 + C29856 * C28211) *
               C153601 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C153849) *
              C153920 +
          ((C28416 * C28207 + C28417 * C28208 + C28418 * C28209 +
            C28419 * C28210 + C29280 * C28211) *
               C153849 -
           ((C28212 * C29845 - C28213 * C29844 - C28212 * C29846 +
             C153462 * C29847) *
                C153637 * C28211 +
            C29856 * C28210 + C29057 * C28209 + C29058 * C28208 +
            C29059 * C28207) *
               C153601) *
              C1469) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[367] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 + C136 * C154 -
           C137 * C145 - C136 * C155 + C122 * C169 + C138 * C156 - C139 * C146 -
           C138 * C157 + C123 * C170 + C140 * C158 - C141 * C147 - C140 * C159 +
           C124 * C171 + C142 * C160 - C143 * C148 - C142 * C161 +
           C125 * C172) *
              C153637 * C153625 * C153537 * C1178 -
          (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 + C140 * C317 -
           C141 * C304 - C140 * C318 + C124 * C340 + C138 * C319 - C139 * C305 -
           C138 * C320 + C123 * C341 + C136 * C321 - C137 * C306 - C136 * C322 +
           C122 * C342 + C134 * C323 - C135 * C307 - C134 * C324 +
           C121 * C343) *
              C153637 * C153625 * C153537 * C1179 +
          (C134 * C325 - C135 * C308 - C134 * C326 + C121 * C344 + C136 * C327 -
           C137 * C309 - C136 * C328 + C122 * C345 + C138 * C329 - C139 * C310 -
           C138 * C330 + C123 * C346 + C140 * C331 - C141 * C311 - C140 * C332 +
           C124 * C347 + C142 * C333 - C143 * C312 - C142 * C334 +
           C125 * C348) *
              C153637 * C153625 * C153537 * C1180 -
          (C142 * C1188 - C143 * C1183 - C142 * C1189 + C125 * C1198 +
           C140 * C1190 - C141 * C1184 - C140 * C1191 + C124 * C1199 +
           C138 * C1192 - C139 * C1185 - C138 * C1193 + C123 * C1200 +
           C136 * C1194 - C137 * C1186 - C136 * C1195 + C122 * C1201 +
           C134 * C1196 - C135 * C1187 - C134 * C1197 + C121 * C1202) *
              C153637 * C153625 * C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C153537 * C1091 -
           (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
            C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
            C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
            C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
            C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
               C153637 * C153625 * C153537 * C153573) *
              C1093 +
          ((C134 * C321 - C135 * C306 - C134 * C322 + C121 * C342 +
            C136 * C319 - C137 * C305 - C136 * C320 + C122 * C341 +
            C138 * C317 - C139 * C304 - C138 * C318 + C123 * C340 +
            C140 * C315 - C141 * C303 - C140 * C316 + C124 * C339 +
            C142 * C335 - C143 * C313 - C142 * C336 + C125 * C349) *
               C153637 * C153625 * C153537 * C153573 -
           (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
            C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
            C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
            C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
            C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
               C153637 * C153625 * C153537 * C1091) *
              C1094 +
          ((C134 * C156 - C135 * C146 - C134 * C157 + C121 * C170 +
            C136 * C158 - C137 * C147 - C136 * C159 + C122 * C171 +
            C138 * C160 - C139 * C148 - C138 * C161 + C123 * C172 +
            C140 * C162 - C141 * C149 - C140 * C163 + C124 * C173 +
            C142 * C164 - C143 * C150 - C142 * C165 + C125 * C174) *
               C153637 * C153625 * C153537 * C1091 -
           (C142 * C652 - C143 * C651 - C142 * C653 + C125 * C654 +
            C140 * C335 - C141 * C313 - C140 * C336 + C124 * C349 +
            C138 * C315 - C139 * C303 - C138 * C316 + C123 * C339 +
            C136 * C317 - C137 * C304 - C136 * C318 + C122 * C340 +
            C134 * C319 - C135 * C305 - C134 * C320 + C121 * C341) *
               C153637 * C153625 * C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C473 -
           (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
            C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
            C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
            C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
            C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
               C153637 * C153625 * C474 +
           (C134 * C498 - C135 * C481 - C134 * C499 + C121 * C517 +
            C136 * C500 - C137 * C482 - C136 * C501 + C122 * C518 +
            C138 * C502 - C139 * C483 - C138 * C503 + C123 * C519 +
            C140 * C504 - C141 * C484 - C140 * C505 + C124 * C520 +
            C142 * C506 - C143 * C485 - C142 * C507 + C125 * C521) *
               C153637 * C153625 * C475) *
              C1091 +
          ((C134 * C951 - C135 * C945 - C134 * C952 + C121 * C963 +
            C136 * C953 - C137 * C946 - C136 * C954 + C122 * C964 +
            C138 * C955 - C139 * C947 - C138 * C956 + C123 * C965 +
            C140 * C957 - C141 * C948 - C140 * C958 + C124 * C966 +
            C142 * C959 - C143 * C949 - C142 * C960 + C125 * C967) *
               C153637 * C153625 * C474 -
           (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
            C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
            C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
            C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
            C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
               C153637 * C153625 * C473 -
           (C142 * C1330 - C143 * C1325 - C142 * C1331 + C125 * C1340 +
            C140 * C1332 - C141 * C1326 - C140 * C1333 + C124 * C1341 +
            C138 * C1334 - C139 * C1327 - C138 * C1335 + C123 * C1342 +
            C136 * C1336 - C137 * C1328 - C136 * C1337 + C122 * C1343 +
            C134 * C1338 - C135 * C1329 - C134 * C1339 + C121 * C1344) *
               C153637 * C153625 * C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C153537 * C1091 -
           ((C3044 + C3045 + C3046) * C153637 * C153898 +
            (C3043 + C3042 + C3041) * C153637 * C153924 +
            (C3040 + C3039 + C3038) * C153637 * C153936) *
               C153537 * C153573) *
              C1093 +
          (((C3047 + C3048 + C3049) * C153637 * C153936 +
            (C3050 + C3051 + C3052) * C153637 * C153924 +
            (C3053 + C3054 + C3055) * C153637 * C153898) *
               C153537 * C153573 -
           (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153637 * C153936) *
               C153537 * C1091) *
              C1094 +
          (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
             C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
             C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                C153637 * C153936 +
            (C3550 + C3551 + C3552) * C153637 * C153924 +
            (C3553 + C3554 + C3555) * C153637 * C153898) *
               C153537 * C1091 -
           ((C2693 * C1188 - C2694 * C1183 - C2693 * C1189 + C153885 * C1198 +
             C2691 * C1190 - C2692 * C1184 - C2691 * C1191 + C2684 * C1199 +
             C2689 * C1192 - C2690 * C1185 - C2689 * C1193 + C2683 * C1200) *
                C153637 * C153898 +
            (C3555 + C3554 + C3553) * C153637 * C153924 +
            (C3552 + C3551 + C3550) * C153637 * C153936) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
            C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
            C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
               C153637 * C153936 +
           (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
              C153537 * C1178 -
          (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
           (C3040 + C3039 + C3038) * C153637 * C153936) *
              C153537 * C1179 +
          (C3060 * C153936 + (C3046 + C3045 + C3044) * C153637 * C153924 +
           (C4561 + C4562 + C4563) * C153637 * C153898) *
              C153537 * C1180 -
          ((C2693 * C4530 - C2694 * C4527 - C2693 * C4531 + C153885 * C4536 +
            C2691 * C4532 - C2692 * C4528 - C2691 * C4533 + C2684 * C4537 +
            C2689 * C4534 - C2690 * C4529 - C2689 * C4535 + C2683 * C4538) *
               C153637 * C153898 +
           (C4563 + C4562 + C4561) * C153637 * C153924 + C4557 * C153936) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C473 -
           ((C4152 + C4153 + C4154) * C153637 * C153898 +
            (C4155 + C4156 + C4157) * C153637 * C153924 +
            (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
             C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
             C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                C153637 * C153936) *
               C474 +
           ((C2689 * C498 - C2690 * C481 - C2689 * C499 + C2683 * C517 +
             C2691 * C500 - C2692 * C482 - C2691 * C501 + C2684 * C518 +
             C2693 * C502 - C2694 * C483 - C2693 * C503 + C153885 * C519) *
                C153637 * C153936 +
            (C4830 + C4831 + C4832) * C153637 * C153924 +
            (C4833 + C4834 + C4835) * C153637 * C153898) *
               C475) *
              C1091 +
          (((C4157 + C4156 + C4155) * C153637 * C153936 +
            (C4154 + C4153 + C4152) * C153637 * C153924 +
            (C2689 * C4067 - C2690 * C4063 - C2689 * C4068 + C2683 * C4075 +
             C2691 * C4069 - C2692 * C4064 - C2691 * C4070 + C2684 * C4076 +
             C2693 * C4071 - C2694 * C4065 - C2693 * C4072 + C153885 * C4077) *
                C153637 * C153898) *
               C474 -
           (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
            (C3040 + C3039 + C3038) * C153637 * C153936) *
               C473 -
           ((C2693 * C4784 - C2694 * C4781 - C2693 * C4785 + C153885 * C4790 +
             C2691 * C4786 - C2692 * C4782 - C2691 * C4787 + C2684 * C4791 +
             C2689 * C4788 - C2690 * C4783 - C2689 * C4789 + C2683 * C4792) *
                C153637 * C153898 +
            (C4835 + C4834 + C4833) * C153637 * C153924 +
            (C4832 + C4831 + C4830) * C153637 * C153936) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153537 * C1091 -
           ((C24331 + C24332 + C24333) * C153637 * C153898 +
            (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C153537 * C153573) *
              C1093 +
          (((C24334 + C24335 + C24336) * C153637 * C23989 +
            (C24337 + C24338 + C24339) * C153637 * C23990 +
            (C24340 + C24341 + C24342) * C153637 * C153898) *
               C153537 * C153573 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C153537 * C1091) *
              C1094 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C153637 * C23989 +
            (C24821 + C24822 + C24823) * C153637 * C23990 +
            (C24824 + C24825 + C24826) * C153637 * C153898) *
               C153537 * C1091 -
           ((C23996 * C1188 - C23997 * C1183 - C23996 * C1189 +
             C153885 * C1198 + C23994 * C1190 - C23995 * C1184 -
             C23994 * C1191 + C153914 * C1199 + C23992 * C1192 -
             C23993 * C1185 - C23992 * C1193 + C153933 * C1200) *
                C153637 * C153898 +
            (C24826 + C24825 + C24824) * C153637 * C23990 +
            (C24823 + C24822 + C24821) * C153637 * C23989) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
            C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
            C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
               C153637 * C23989 +
           (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
              C153537 * C1178 -
          (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
           (C24327 + C24326 + C24325) * C153637 * C23989) *
              C153537 * C1179 +
          (C24347 * C23989 + (C24333 + C24332 + C24331) * C153637 * C23990 +
           (C25804 + C25805 + C25806) * C153637 * C153898) *
              C153537 * C1180 -
          ((C23996 * C4530 - C23997 * C4527 - C23996 * C4531 + C153885 * C4536 +
            C23994 * C4532 - C23995 * C4528 - C23994 * C4533 + C153914 * C4537 +
            C23992 * C4534 - C23993 * C4529 - C23992 * C4535 +
            C153933 * C4538) *
               C153637 * C153898 +
           (C25806 + C25805 + C25804) * C153637 * C23990 + C25800 * C23989) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C473 -
           ((C25407 + C25408 + C25409) * C153637 * C153898 +
            (C25410 + C25411 + C25412) * C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C474 +
           ((C23992 * C498 - C23993 * C481 - C23992 * C499 + C153933 * C517 +
             C23994 * C500 - C23995 * C482 - C23994 * C501 + C153914 * C518 +
             C23996 * C502 - C23997 * C483 - C23996 * C503 + C153885 * C519) *
                C153637 * C23989 +
            (C26061 + C26062 + C26063) * C153637 * C23990 +
            (C26064 + C26065 + C26066) * C153637 * C153898) *
               C475) *
              C1091 +
          (((C25412 + C25411 + C25410) * C153637 * C23989 +
            (C25409 + C25408 + C25407) * C153637 * C23990 +
            (C23992 * C4067 - C23993 * C4063 - C23992 * C4068 +
             C153933 * C4075 + C23994 * C4069 - C23995 * C4064 -
             C23994 * C4070 + C153914 * C4076 + C23996 * C4071 -
             C23997 * C4065 - C23996 * C4072 + C153885 * C4077) *
                C153637 * C153898) *
               C474 -
           (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C473 -
           ((C23996 * C4784 - C23997 * C4781 - C23996 * C4785 +
             C153885 * C4790 + C23994 * C4786 - C23995 * C4782 -
             C23994 * C4787 + C153914 * C4791 + C23992 * C4788 -
             C23993 * C4783 - C23992 * C4789 + C153933 * C4792) *
                C153637 * C153898 +
            (C26066 + C26065 + C26064) * C153637 * C23990 +
            (C26063 + C26062 + C26061) * C153637 * C23989) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153537 * C1091 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C153537 * C153573) *
              C1093 +
          ((C28420 * C28207 + C28421 * C28208 + C28422 * C28209 +
            C28423 * C28210 + C28424 * C28211) *
               C153537 * C153573 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C153537 * C1091) *
              C1094 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C153637 * C28207 +
            C28705 * C28208 + C28706 * C28209 + C28707 * C28210 +
            C28708 * C28211) *
               C153537 * C1091 -
           ((C28212 * C4530 - C28213 * C4527 - C28212 * C4531 +
             C153462 * C4536) *
                C153637 * C28211 +
            C28708 * C28210 + C28707 * C28209 + C28706 * C28208 +
            C28705 * C28207) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
               C153637 * C28207 +
           C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
           C28418 * C28211) *
              C153537 * C1178 -
          (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
           C28416 * C28208 + C28415 * C28207) *
              C153537 * C1179 +
          (C28416 * C28207 + C28417 * C28208 + C28418 * C28209 +
           C28419 * C28210 + C29280 * C28211) *
              C153537 * C1180 -
          ((C28212 * C29269 - C28213 * C29268 - C28212 * C29270 +
            C153462 * C29271) *
               C153637 * C28211 +
           C29280 * C28210 + C28419 * C28209 + C28418 * C28208 +
           C28417 * C28207) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C473 -
           (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
            C29060 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C474 +
           ((C28212 * C498 - C28213 * C481 - C28212 * C499 + C153462 * C517) *
                C153637 * C28207 +
            C29435 * C28208 + C29436 * C28209 + C29437 * C28210 +
            C29438 * C28211) *
               C475) *
              C1091 +
          ((C29060 * C28207 + C29059 * C28208 + C29058 * C28209 +
            C29057 * C28210 +
            (C28212 * C28994 - C28213 * C28992 - C28212 * C28995 +
             C153462 * C28998) *
                C153637 * C28211) *
               C474 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C473 -
           ((C28212 * C29403 - C28213 * C29402 - C28212 * C29404 +
             C153462 * C29405) *
                C153637 * C28211 +
            C29438 * C28210 + C29437 * C28209 + C29436 * C28208 +
            C29435 * C28207) *
               C475) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[368] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
             C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
             C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
             C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
             C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                C153637 * C153625 * C153849 -
            (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
             C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
             C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
             C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
             C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
                C153637 * C153625 * C153601) *
               C1091 +
           ((C134 * C951 - C135 * C945 - C134 * C952 + C121 * C963 +
             C136 * C953 - C137 * C946 - C136 * C954 + C122 * C964 +
             C138 * C955 - C139 * C947 - C138 * C956 + C123 * C965 +
             C140 * C957 - C141 * C948 - C140 * C958 + C124 * C966 +
             C142 * C959 - C143 * C949 - C142 * C960 + C125 * C967) *
                C153637 * C153625 * C153601 -
            (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
             C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
             C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
             C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
             C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
                C153637 * C153625 * C153849) *
               C153573) *
              C153840 +
          (((C134 * C494 - C135 * C479 - C134 * C495 + C121 * C515 +
             C136 * C492 - C137 * C478 - C136 * C493 + C122 * C514 +
             C138 * C490 - C139 * C477 - C138 * C491 + C123 * C513 +
             C140 * C488 - C141 * C476 - C140 * C489 + C124 * C512 +
             C142 * C508 - C143 * C486 - C142 * C509 + C125 * C522) *
                C153637 * C153625 * C153601 -
            (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
             C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
             C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
             C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
             C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
                C153637 * C153625 * C153849) *
               C1091 +
           ((C134 * C321 - C135 * C306 - C134 * C322 + C121 * C342 +
             C136 * C319 - C137 * C305 - C136 * C320 + C122 * C341 +
             C138 * C317 - C139 * C304 - C138 * C318 + C123 * C340 +
             C140 * C315 - C141 * C303 - C140 * C316 + C124 * C339 +
             C142 * C335 - C143 * C313 - C142 * C336 + C125 * C349) *
                C153637 * C153625 * C153849 -
            (C142 * C961 - C143 * C950 - C142 * C962 + C125 * C968 +
             C140 * C959 - C141 * C949 - C140 * C960 + C124 * C967 +
             C138 * C957 - C139 * C948 - C138 * C958 + C123 * C966 +
             C136 * C955 - C137 * C947 - C136 * C956 + C122 * C965 +
             C134 * C953 - C135 * C946 - C134 * C954 + C121 * C964) *
                C153637 * C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153637 * C153936 +
             (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
                C153849 -
            ((C4152 + C4153 + C4154) * C153637 * C153898 +
             (C4155 + C4156 + C4157) * C153637 * C153924 +
             (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
              C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
              C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                 C153637 * C153936) *
                C153601) *
               C1091 +
           (((C4157 + C4156 + C4155) * C153637 * C153936 +
             (C4154 + C4153 + C4152) * C153637 * C153924 +
             (C2689 * C4067 - C2690 * C4063 - C2689 * C4068 + C2683 * C4075 +
              C2691 * C4069 - C2692 * C4064 - C2691 * C4070 + C2684 * C4076 +
              C2693 * C4071 - C2694 * C4065 - C2693 * C4072 + C153885 * C4077) *
                 C153637 * C153898) *
                C153601 -
            (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
             (C3040 + C3039 + C3038) * C153637 * C153936) *
                C153849) *
               C153573) *
              C153840 +
          ((((C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515 +
              C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
              C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513) *
                 C153637 * C153936 +
             (C4158 + C4159 + C4160) * C153637 * C153924 +
             (C4161 + C4162 + C4163) * C153637 * C153898) *
                C153601 -
            (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
             (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
              C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
              C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                 C153637 * C153936) *
                C153849) *
               C1091 +
           (((C3047 + C3048 + C3049) * C153637 * C153936 +
             (C3050 + C3051 + C3052) * C153637 * C153924 +
             (C3053 + C3054 + C3055) * C153637 * C153898) *
                C153849 -
            ((C2693 * C4073 - C2694 * C4066 - C2693 * C4074 + C153885 * C4078 +
              C2691 * C4071 - C2692 * C4065 - C2691 * C4072 + C2684 * C4077 +
              C2689 * C4069 - C2690 * C4064 - C2689 * C4070 + C2683 * C4076) *
                 C153637 * C153898 +
             (C4163 + C4162 + C4161) * C153637 * C153924 +
             (C4160 + C4159 + C4158) * C153637 * C153936) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C153637 * C23989 +
             (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
                C153849 -
            ((C25407 + C25408 + C25409) * C153637 * C153898 +
             (C25410 + C25411 + C25412) * C153637 * C23990 +
             (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
              C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
              C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                 C153637 * C23989) *
                C153601) *
               C1091 +
           (((C25412 + C25411 + C25410) * C153637 * C23989 +
             (C25409 + C25408 + C25407) * C153637 * C23990 +
             (C23992 * C4067 - C23993 * C4063 - C23992 * C4068 +
              C153933 * C4075 + C23994 * C4069 - C23995 * C4064 -
              C23994 * C4070 + C153914 * C4076 + C23996 * C4071 -
              C23997 * C4065 - C23996 * C4072 + C153885 * C4077) *
                 C153637 * C153898) *
                C153601 -
            (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
             (C24327 + C24326 + C24325) * C153637 * C23989) *
                C153849) *
               C153573) *
              C153840 +
          ((((C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515 +
              C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
              C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513) *
                 C153637 * C23989 +
             (C25413 + C25414 + C25415) * C153637 * C23990 +
             (C25416 + C25417 + C25418) * C153637 * C153898) *
                C153601 -
            (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C153637 * C23989) *
                C153849) *
               C1091 +
           (((C24334 + C24335 + C24336) * C153637 * C23989 +
             (C24337 + C24338 + C24339) * C153637 * C23990 +
             (C24340 + C24341 + C24342) * C153637 * C153898) *
                C153849 -
            ((C23996 * C4073 - C23997 * C4066 - C23996 * C4074 +
              C153885 * C4078 + C23994 * C4071 - C23995 * C4065 -
              C23994 * C4072 + C153914 * C4077 + C23992 * C4069 -
              C23993 * C4064 - C23992 * C4070 + C153933 * C4076) *
                 C153637 * C153898 +
             (C25418 + C25417 + C25416) * C153637 * C23990 +
             (C25415 + C25414 + C25413) * C153637 * C23989) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153637 * C28207 +
             C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
             C28418 * C28211) *
                C153849 -
            (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
             C29060 * C28208 +
             (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                 C153637 * C28207) *
                C153601) *
               C1091 +
           ((C29060 * C28207 + C29059 * C28208 + C29058 * C28209 +
             C29057 * C28210 +
             (C28212 * C28994 - C28213 * C28992 - C28212 * C28995 +
              C153462 * C28998) *
                 C153637 * C28211) *
                C153601 -
            (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
             C28416 * C28208 + C28415 * C28207) *
                C153849) *
               C153573) *
              C153840 +
          ((((C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                 C153637 * C28207 +
             C29061 * C28208 + C29062 * C28209 + C29063 * C28210 +
             C29064 * C28211) *
                C153601 -
            (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
             C28420 * C28208 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153637 * C28207) *
                C153849) *
               C1091 +
           ((C28420 * C28207 + C28421 * C28208 + C28422 * C28209 +
             C28423 * C28210 + C28424 * C28211) *
                C153849 -
            ((C28212 * C28996 - C28213 * C28993 - C28212 * C28997 +
              C153462 * C28999) *
                 C153637 * C28211 +
             C29064 * C28210 + C29063 * C28209 + C29062 * C28208 +
             C29061 * C28207) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[369] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C153537 * C1091 -
           (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
            C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
            C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
            C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
            C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
               C153637 * C153625 * C153537 * C153573) *
              C1093 +
          ((C134 * C321 - C135 * C306 - C134 * C322 + C121 * C342 +
            C136 * C319 - C137 * C305 - C136 * C320 + C122 * C341 +
            C138 * C317 - C139 * C304 - C138 * C318 + C123 * C340 +
            C140 * C315 - C141 * C303 - C140 * C316 + C124 * C339 +
            C142 * C335 - C143 * C313 - C142 * C336 + C125 * C349) *
               C153637 * C153625 * C153537 * C153573 -
           (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
            C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
            C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
            C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
            C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
               C153637 * C153625 * C153537 * C1091) *
              C1094 +
          ((C134 * C156 - C135 * C146 - C134 * C157 + C121 * C170 +
            C136 * C158 - C137 * C147 - C136 * C159 + C122 * C171 +
            C138 * C160 - C139 * C148 - C138 * C161 + C123 * C172 +
            C140 * C162 - C141 * C149 - C140 * C163 + C124 * C173 +
            C142 * C164 - C143 * C150 - C142 * C165 + C125 * C174) *
               C153637 * C153625 * C153537 * C1091 -
           (C142 * C652 - C143 * C651 - C142 * C653 + C125 * C654 +
            C140 * C335 - C141 * C313 - C140 * C336 + C124 * C349 +
            C138 * C315 - C139 * C303 - C138 * C316 + C123 * C339 +
            C136 * C317 - C137 * C304 - C136 * C318 + C122 * C340 +
            C134 * C319 - C135 * C305 - C134 * C320 + C121 * C341) *
               C153637 * C153625 * C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 + C136 * C154 -
           C137 * C145 - C136 * C155 + C122 * C169 + C138 * C156 - C139 * C146 -
           C138 * C157 + C123 * C170 + C140 * C158 - C141 * C147 - C140 * C159 +
           C124 * C171 + C142 * C160 - C143 * C148 - C142 * C161 +
           C125 * C172) *
              C153637 * C153625 * C153537 * C1178 -
          (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 + C140 * C317 -
           C141 * C304 - C140 * C318 + C124 * C340 + C138 * C319 - C139 * C305 -
           C138 * C320 + C123 * C341 + C136 * C321 - C137 * C306 - C136 * C322 +
           C122 * C342 + C134 * C323 - C135 * C307 - C134 * C324 +
           C121 * C343) *
              C153637 * C153625 * C153537 * C1179 +
          (C134 * C325 - C135 * C308 - C134 * C326 + C121 * C344 + C136 * C327 -
           C137 * C309 - C136 * C328 + C122 * C345 + C138 * C329 - C139 * C310 -
           C138 * C330 + C123 * C346 + C140 * C331 - C141 * C311 - C140 * C332 +
           C124 * C347 + C142 * C333 - C143 * C312 - C142 * C334 +
           C125 * C348) *
              C153637 * C153625 * C153537 * C1180 -
          (C142 * C1188 - C143 * C1183 - C142 * C1189 + C125 * C1198 +
           C140 * C1190 - C141 * C1184 - C140 * C1191 + C124 * C1199 +
           C138 * C1192 - C139 * C1185 - C138 * C1193 + C123 * C1200 +
           C136 * C1194 - C137 * C1186 - C136 * C1195 + C122 * C1201 +
           C134 * C1196 - C135 * C1187 - C134 * C1197 + C121 * C1202) *
              C153637 * C153625 * C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C153537 * C1091 -
           ((C3044 + C3045 + C3046) * C153637 * C153898 +
            (C3043 + C3042 + C3041) * C153637 * C153924 +
            (C3040 + C3039 + C3038) * C153637 * C153936) *
               C153537 * C153573) *
              C1093 +
          (((C3047 + C3048 + C3049) * C153637 * C153936 +
            (C3050 + C3051 + C3052) * C153637 * C153924 +
            (C3053 + C3054 + C3055) * C153637 * C153898) *
               C153537 * C153573 -
           (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153637 * C153936) *
               C153537 * C1091) *
              C1094 +
          (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
             C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
             C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                C153637 * C153936 +
            (C3550 + C3551 + C3552) * C153637 * C153924 +
            (C3553 + C3554 + C3555) * C153637 * C153898) *
               C153537 * C1091 -
           ((C2693 * C1188 - C2694 * C1183 - C2693 * C1189 + C153885 * C1198 +
             C2691 * C1190 - C2692 * C1184 - C2691 * C1191 + C2684 * C1199 +
             C2689 * C1192 - C2690 * C1185 - C2689 * C1193 + C2683 * C1200) *
                C153637 * C153898 +
            (C3555 + C3554 + C3553) * C153637 * C153924 +
            (C3552 + C3551 + C3550) * C153637 * C153936) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
            C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
            C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
               C153637 * C153936 +
           (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
              C153537 * C1178 -
          (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
           (C3040 + C3039 + C3038) * C153637 * C153936) *
              C153537 * C1179 +
          (C3060 * C153936 + (C3046 + C3045 + C3044) * C153637 * C153924 +
           (C4561 + C4562 + C4563) * C153637 * C153898) *
              C153537 * C1180 -
          ((C2693 * C4530 - C2694 * C4527 - C2693 * C4531 + C153885 * C4536 +
            C2691 * C4532 - C2692 * C4528 - C2691 * C4533 + C2684 * C4537 +
            C2689 * C4534 - C2690 * C4529 - C2689 * C4535 + C2683 * C4538) *
               C153637 * C153898 +
           (C4563 + C4562 + C4561) * C153637 * C153924 + C4557 * C153936) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153537 * C1091 -
           ((C24331 + C24332 + C24333) * C153637 * C153898 +
            (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C153537 * C153573) *
              C1093 +
          (((C24334 + C24335 + C24336) * C153637 * C23989 +
            (C24337 + C24338 + C24339) * C153637 * C23990 +
            (C24340 + C24341 + C24342) * C153637 * C153898) *
               C153537 * C153573 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C153537 * C1091) *
              C1094 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C153637 * C23989 +
            (C24821 + C24822 + C24823) * C153637 * C23990 +
            (C24824 + C24825 + C24826) * C153637 * C153898) *
               C153537 * C1091 -
           ((C23996 * C1188 - C23997 * C1183 - C23996 * C1189 +
             C153885 * C1198 + C23994 * C1190 - C23995 * C1184 -
             C23994 * C1191 + C153914 * C1199 + C23992 * C1192 -
             C23993 * C1185 - C23992 * C1193 + C153933 * C1200) *
                C153637 * C153898 +
            (C24826 + C24825 + C24824) * C153637 * C23990 +
            (C24823 + C24822 + C24821) * C153637 * C23989) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
            C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
            C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
               C153637 * C23989 +
           (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
              C153537 * C1178 -
          (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
           (C24327 + C24326 + C24325) * C153637 * C23989) *
              C153537 * C1179 +
          (C24347 * C23989 + (C24333 + C24332 + C24331) * C153637 * C23990 +
           (C25804 + C25805 + C25806) * C153637 * C153898) *
              C153537 * C1180 -
          ((C23996 * C4530 - C23997 * C4527 - C23996 * C4531 + C153885 * C4536 +
            C23994 * C4532 - C23995 * C4528 - C23994 * C4533 + C153914 * C4537 +
            C23992 * C4534 - C23993 * C4529 - C23992 * C4535 +
            C153933 * C4538) *
               C153637 * C153898 +
           (C25806 + C25805 + C25804) * C153637 * C23990 + C25800 * C23989) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153537 * C1091 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C153537 * C153573) *
              C1093 +
          ((C28420 * C28207 + C28421 * C28208 + C28422 * C28209 +
            C28423 * C28210 + C28424 * C28211) *
               C153537 * C153573 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C153537 * C1091) *
              C1094 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C153637 * C28207 +
            C28705 * C28208 + C28706 * C28209 + C28707 * C28210 +
            C28708 * C28211) *
               C153537 * C1091 -
           ((C28212 * C4530 - C28213 * C4527 - C28212 * C4531 +
             C153462 * C4536) *
                C153637 * C28211 +
            C28708 * C28210 + C28707 * C28209 + C28706 * C28208 +
            C28705 * C28207) *
               C153537 * C153573) *
              C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
               C153637 * C28207 +
           C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
           C28418 * C28211) *
              C153537 * C1178 -
          (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
           C28416 * C28208 + C28415 * C28207) *
              C153537 * C1179 +
          (C28416 * C28207 + C28417 * C28208 + C28418 * C28209 +
           C28419 * C28210 + C29280 * C28211) *
              C153537 * C1180 -
          ((C28212 * C29269 - C28213 * C29268 - C28212 * C29270 +
            C153462 * C29271) *
               C153637 * C28211 +
           C29280 * C28210 + C28419 * C28209 + C28418 * C28208 +
           C28417 * C28207) *
              C153537 * C1181) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[370] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
             C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
             C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
             C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
             C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
                C153637 * C153625 * C1898 -
            (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
             C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
             C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
             C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
             C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
                C153637 * C153625 * C153601) *
               C153848 +
           ((C134 * C951 - C135 * C945 - C134 * C952 + C121 * C963 +
             C136 * C953 - C137 * C946 - C136 * C954 + C122 * C964 +
             C138 * C955 - C139 * C947 - C138 * C956 + C123 * C965 +
             C140 * C957 - C141 * C948 - C140 * C958 + C124 * C966 +
             C142 * C959 - C143 * C949 - C142 * C960 + C125 * C967) *
                C153637 * C153625 * C153601 -
            (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
             C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
             C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
             C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
             C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
                C153637 * C153625 * C1898) *
               C153573) *
              C153840 +
          (((C134 * C494 - C135 * C479 - C134 * C495 + C121 * C515 +
             C136 * C492 - C137 * C478 - C136 * C493 + C122 * C514 +
             C138 * C490 - C139 * C477 - C138 * C491 + C123 * C513 +
             C140 * C488 - C141 * C476 - C140 * C489 + C124 * C512 +
             C142 * C508 - C143 * C486 - C142 * C509 + C125 * C522) *
                C153637 * C153625 * C153601 -
            (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
             C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
             C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
             C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
             C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
                C153637 * C153625 * C1898) *
               C153848 +
           ((C134 * C321 - C135 * C306 - C134 * C322 + C121 * C342 +
             C136 * C319 - C137 * C305 - C136 * C320 + C122 * C341 +
             C138 * C317 - C139 * C304 - C138 * C318 + C123 * C340 +
             C140 * C315 - C141 * C303 - C140 * C316 + C124 * C339 +
             C142 * C335 - C143 * C313 - C142 * C336 + C125 * C349) *
                C153637 * C153625 * C1898 -
            (C142 * C961 - C143 * C950 - C142 * C962 + C125 * C968 +
             C140 * C959 - C141 * C949 - C140 * C960 + C124 * C967 +
             C138 * C957 - C139 * C948 - C138 * C958 + C123 * C966 +
             C136 * C955 - C137 * C947 - C136 * C956 + C122 * C965 +
             C134 * C953 - C135 * C946 - C134 * C954 + C121 * C964) *
                C153637 * C153625 * C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
              C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
              C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                 C153637 * C153936 +
             (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
                C1898 -
            (C5591 * C153898 + (C4155 + C4156 + C4157) * C153637 * C153924 +
             (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
              C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
              C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                 C153637 * C153936) *
                C153601) *
               C153848 +
           (((C4157 + C4156 + C4155) * C153637 * C153936 +
             (C4154 + C4153 + C4152) * C153637 * C153924 +
             (C5595 + C5596 + C5597) * C153637 * C153898) *
                C153601 -
            (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
             (C3040 + C3039 + C3038) * C153637 * C153936) *
                C1898) *
               C153573) *
              C153840 +
          ((((C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515 +
              C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
              C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513) *
                 C153637 * C153936 +
             (C4158 + C4159 + C4160) * C153637 * C153924 +
             (C4161 + C4162 + C4163) * C153637 * C153898) *
                C153601 -
            (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
             (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
              C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
              C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                 C153637 * C153936) *
                C1898) *
               C153848 +
           (((C3047 + C3048 + C3049) * C153637 * C153936 +
             (C3050 + C3051 + C3052) * C153637 * C153924 +
             (C3053 + C3054 + C3055) * C153637 * C153898) *
                C1898 -
            ((C2693 * C4073 - C2694 * C4066 - C2693 * C4074 + C153885 * C4078 +
              C2691 * C4071 - C2692 * C4065 - C2691 * C4072 + C2684 * C4077 +
              C2689 * C4069 - C2690 * C4064 - C2689 * C4070 + C2683 * C4076) *
                 C153637 * C153898 +
             (C4163 + C4162 + C4161) * C153637 * C153924 +
             (C4160 + C4159 + C4158) * C153637 * C153936) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
              C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
              C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                 C153637 * C23989 +
             (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
                C1898 -
            (C26810 * C153898 + (C25410 + C25411 + C25412) * C153637 * C23990 +
             (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
              C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
              C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                 C153637 * C23989) *
                C153601) *
               C153848 +
           (((C25412 + C25411 + C25410) * C153637 * C23989 +
             (C25409 + C25408 + C25407) * C153637 * C23990 +
             (C26814 + C26815 + C26816) * C153637 * C153898) *
                C153601 -
            (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
             (C24327 + C24326 + C24325) * C153637 * C23989) *
                C1898) *
               C153573) *
              C153840 +
          ((((C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515 +
              C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
              C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513) *
                 C153637 * C23989 +
             (C25413 + C25414 + C25415) * C153637 * C23990 +
             (C25416 + C25417 + C25418) * C153637 * C153898) *
                C153601 -
            (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
             (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
              C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
              C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                 C153637 * C23989) *
                C1898) *
               C153848 +
           (((C24334 + C24335 + C24336) * C153637 * C23989 +
             (C24337 + C24338 + C24339) * C153637 * C23990 +
             (C24340 + C24341 + C24342) * C153637 * C153898) *
                C1898 -
            ((C23996 * C4073 - C23997 * C4066 - C23996 * C4074 +
              C153885 * C4078 + C23994 * C4071 - C23995 * C4065 -
              C23994 * C4072 + C153914 * C4077 + C23992 * C4069 -
              C23993 * C4064 - C23992 * C4070 + C153933 * C4076) *
                 C153637 * C153898 +
             (C25418 + C25417 + C25416) * C153637 * C23990 +
             (C25415 + C25414 + C25413) * C153637 * C23989) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                 C153637 * C28207 +
             C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
             C28418 * C28211) *
                C1898 -
            (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
             C29060 * C28208 +
             (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                 C153637 * C28207) *
                C153601) *
               C153848 +
           ((C29060 * C28207 + C29059 * C28208 + C29058 * C28209 +
             C29057 * C28210 + C29856 * C28211) *
                C153601 -
            (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
             C28416 * C28208 + C28415 * C28207) *
                C1898) *
               C153573) *
              C153840 +
          ((((C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                 C153637 * C28207 +
             C29061 * C28208 + C29062 * C28209 + C29063 * C28210 +
             C29064 * C28211) *
                C153601 -
            (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
             C28420 * C28208 +
             (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                 C153637 * C28207) *
                C1898) *
               C153848 +
           ((C28420 * C28207 + C28421 * C28208 + C28422 * C28209 +
             C28423 * C28210 + C28424 * C28211) *
                C1898 -
            ((C28212 * C28996 - C28213 * C28993 - C28212 * C28997 +
              C153462 * C28999) *
                 C153637 * C28211 +
             C29064 * C28210 + C29063 * C28209 + C29062 * C28208 +
             C29061 * C28207) *
                C153601) *
               C153573) *
              C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[371] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C153921 -
           (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
            C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
            C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
            C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
            C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
               C153637 * C153625 * C153922 +
           (C134 * C498 - C135 * C481 - C134 * C499 + C121 * C517 +
            C136 * C500 - C137 * C482 - C136 * C501 + C122 * C518 +
            C138 * C502 - C139 * C483 - C138 * C503 + C123 * C519 +
            C140 * C504 - C141 * C484 - C140 * C505 + C124 * C520 +
            C142 * C506 - C143 * C485 - C142 * C507 + C125 * C521) *
               C153637 * C153625 * C2414) *
              C153848 +
          ((C134 * C951 - C135 * C945 - C134 * C952 + C121 * C963 +
            C136 * C953 - C137 * C946 - C136 * C954 + C122 * C964 +
            C138 * C955 - C139 * C947 - C138 * C956 + C123 * C965 +
            C140 * C957 - C141 * C948 - C140 * C958 + C124 * C966 +
            C142 * C959 - C143 * C949 - C142 * C960 + C125 * C967) *
               C153637 * C153625 * C153922 -
           (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
            C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
            C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
            C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
            C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
               C153637 * C153625 * C153921 -
           (C142 * C1330 - C143 * C1325 - C142 * C1331 + C125 * C1340 +
            C140 * C1332 - C141 * C1326 - C140 * C1333 + C124 * C1341 +
            C138 * C1334 - C139 * C1327 - C138 * C1335 + C123 * C1342 +
            C136 * C1336 - C137 * C1328 - C136 * C1337 + C122 * C1343 +
            C134 * C1338 - C135 * C1329 - C134 * C1339 + C121 * C1344) *
               C153637 * C153625 * C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C153921 -
           (C5591 * C153898 + (C4155 + C4156 + C4157) * C153637 * C153924 +
            (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
             C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
             C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                C153637 * C153936) *
               C153922 +
           ((C2689 * C498 - C2690 * C481 - C2689 * C499 + C2683 * C517 +
             C2691 * C500 - C2692 * C482 - C2691 * C501 + C2684 * C518 +
             C2693 * C502 - C2694 * C483 - C2693 * C503 + C153885 * C519) *
                C153637 * C153936 +
            (C4830 + C4831 + C4832) * C153637 * C153924 +
            (C4833 + C4834 + C4835) * C153637 * C153898) *
               C2414) *
              C153848 +
          (((C4157 + C4156 + C4155) * C153637 * C153936 +
            (C4154 + C4153 + C4152) * C153637 * C153924 +
            (C5595 + C5596 + C5597) * C153637 * C153898) *
               C153922 -
           (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
            (C3040 + C3039 + C3038) * C153637 * C153936) *
               C153921 -
           ((C2693 * C4784 - C2694 * C4781 - C2693 * C4785 + C153885 * C4790 +
             C2691 * C4786 - C2692 * C4782 - C2691 * C4787 + C2684 * C4791 +
             C2689 * C4788 - C2690 * C4783 - C2689 * C4789 + C2683 * C4792) *
                C153637 * C153898 +
            (C4835 + C4834 + C4833) * C153637 * C153924 +
            (C4832 + C4831 + C4830) * C153637 * C153936) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153921 -
           (C26810 * C153898 + (C25410 + C25411 + C25412) * C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C153922 +
           ((C23992 * C498 - C23993 * C481 - C23992 * C499 + C153933 * C517 +
             C23994 * C500 - C23995 * C482 - C23994 * C501 + C153914 * C518 +
             C23996 * C502 - C23997 * C483 - C23996 * C503 + C153885 * C519) *
                C153637 * C23989 +
            (C26061 + C26062 + C26063) * C153637 * C23990 +
            (C26064 + C26065 + C26066) * C153637 * C153898) *
               C2414) *
              C153848 +
          (((C25412 + C25411 + C25410) * C153637 * C23989 +
            (C25409 + C25408 + C25407) * C153637 * C23990 +
            (C26814 + C26815 + C26816) * C153637 * C153898) *
               C153922 -
           (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C153921 -
           ((C23996 * C4784 - C23997 * C4781 - C23996 * C4785 +
             C153885 * C4790 + C23994 * C4786 - C23995 * C4782 -
             C23994 * C4787 + C153914 * C4791 + C23992 * C4788 -
             C23993 * C4783 - C23992 * C4789 + C153933 * C4792) *
                C153637 * C153898 +
            (C26066 + C26065 + C26064) * C153637 * C23990 +
            (C26063 + C26062 + C26061) * C153637 * C23989) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153921 -
           (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
            C29060 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C153922 +
           ((C28212 * C498 - C28213 * C481 - C28212 * C499 + C153462 * C517) *
                C153637 * C28207 +
            C29435 * C28208 + C29436 * C28209 + C29437 * C28210 +
            C29438 * C28211) *
               C2414) *
              C153848 +
          ((C29060 * C28207 + C29059 * C28208 + C29058 * C28209 +
            C29057 * C28210 + C29856 * C28211) *
               C153922 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C153921 -
           ((C28212 * C29403 - C28213 * C29402 - C28212 * C29404 +
             C153462 * C29405) *
                C153637 * C28211 +
            C29438 * C28210 + C29437 * C28209 + C29436 * C28208 +
            C29435 * C28207) *
               C2414) *
              C153573) *
         C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[372] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C1898 -
           (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
            C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
            C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
            C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
            C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
               C153637 * C153625 * C153601) *
              C298 +
          ((C134 * C951 - C135 * C945 - C134 * C952 + C121 * C963 +
            C136 * C953 - C137 * C946 - C136 * C954 + C122 * C964 +
            C138 * C955 - C139 * C947 - C138 * C956 + C123 * C965 +
            C140 * C957 - C141 * C948 - C140 * C958 + C124 * C966 +
            C142 * C959 - C143 * C949 - C142 * C960 + C125 * C967) *
               C153637 * C153625 * C153601 -
           (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
            C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
            C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
            C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
            C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
               C153637 * C153625 * C1898) *
              C299 +
          ((C134 * C325 - C135 * C308 - C134 * C326 + C121 * C344 +
            C136 * C327 - C137 * C309 - C136 * C328 + C122 * C345 +
            C138 * C329 - C139 * C310 - C138 * C330 + C123 * C346 +
            C140 * C331 - C141 * C311 - C140 * C332 + C124 * C347 +
            C142 * C333 - C143 * C312 - C142 * C334 + C125 * C348) *
               C153637 * C153625 * C1898 -
           (C142 * C1761 - C143 * C1756 - C142 * C1762 + C125 * C1771 +
            C140 * C1763 - C141 * C1757 - C140 * C1764 + C124 * C1772 +
            C138 * C1765 - C139 * C1758 - C138 * C1766 + C123 * C1773 +
            C136 * C1767 - C137 * C1759 - C136 * C1768 + C122 * C1774 +
            C134 * C1769 - C135 * C1760 - C134 * C1770 + C121 * C1775) *
               C153637 * C153625 * C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C1898 -
           (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
            C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
            C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
            C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
            C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
               C153637 * C153625 * C153601) *
              C153521 * C1093 +
          ((C134 * C494 - C135 * C479 - C134 * C495 + C121 * C515 +
            C136 * C492 - C137 * C478 - C136 * C493 + C122 * C514 +
            C138 * C490 - C139 * C477 - C138 * C491 + C123 * C513 +
            C140 * C488 - C141 * C476 - C140 * C489 + C124 * C512 +
            C142 * C508 - C143 * C486 - C142 * C509 + C125 * C522) *
               C153637 * C153625 * C153601 -
           (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
            C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
            C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
            C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
            C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
               C153637 * C153625 * C1898) *
              C153521 * C1094 +
          ((C134 * C156 - C135 * C146 - C134 * C157 + C121 * C170 +
            C136 * C158 - C137 * C147 - C136 * C159 + C122 * C171 +
            C138 * C160 - C139 * C148 - C138 * C161 + C123 * C172 +
            C140 * C162 - C141 * C149 - C140 * C163 + C124 * C173 +
            C142 * C164 - C143 * C150 - C142 * C165 + C125 * C174) *
               C153637 * C153625 * C1898 -
           (C142 * C780 - C143 * C779 - C142 * C781 + C125 * C782 +
            C140 * C508 - C141 * C486 - C140 * C509 + C124 * C522 +
            C138 * C488 - C139 * C476 - C138 * C489 + C123 * C512 +
            C136 * C490 - C137 * C477 - C136 * C491 + C122 * C513 +
            C134 * C492 - C135 * C478 - C134 * C493 + C121 * C514) *
               C153637 * C153625 * C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 + C136 * C154 -
           C137 * C145 - C136 * C155 + C122 * C169 + C138 * C156 - C139 * C146 -
           C138 * C157 + C123 * C170 + C140 * C158 - C141 * C147 - C140 * C159 +
           C124 * C171 + C142 * C160 - C143 * C148 - C142 * C161 +
           C125 * C172) *
              C153637 * C153625 * C2104 -
          (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 + C140 * C490 -
           C141 * C477 - C140 * C491 + C124 * C513 + C138 * C492 - C139 * C478 -
           C138 * C493 + C123 * C514 + C136 * C494 - C137 * C479 - C136 * C495 +
           C122 * C515 + C134 * C496 - C135 * C480 - C134 * C497 +
           C121 * C516) *
              C153637 * C153625 * C2105 +
          (C134 * C498 - C135 * C481 - C134 * C499 + C121 * C517 + C136 * C500 -
           C137 * C482 - C136 * C501 + C122 * C518 + C138 * C502 - C139 * C483 -
           C138 * C503 + C123 * C519 + C140 * C504 - C141 * C484 - C140 * C505 +
           C124 * C520 + C142 * C506 - C143 * C485 - C142 * C507 +
           C125 * C521) *
              C153637 * C153625 * C2106 -
          (C142 * C2113 - C143 * C2108 - C142 * C2114 + C125 * C2123 +
           C140 * C2115 - C141 * C2109 - C140 * C2116 + C124 * C2124 +
           C138 * C2117 - C139 * C2110 - C138 * C2118 + C123 * C2125 +
           C136 * C2119 - C137 * C2111 - C136 * C2120 + C122 * C2126 +
           C134 * C2121 - C135 * C2112 - C134 * C2122 + C121 * C2127) *
              C153637 * C153625 * C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C1898 -
           (C5591 * C153898 + (C4155 + C4156 + C4157) * C153637 * C153924 +
            (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
             C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
             C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                C153637 * C153936) *
               C153601) *
              C153521 * C1093 +
          (((C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515 +
             C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
             C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513) *
                C153637 * C153936 +
            (C4158 + C4159 + C4160) * C153637 * C153924 +
            (C4161 + C4162 + C4163) * C153637 * C153898) *
               C153601 -
           (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153637 * C153936) *
               C1898) *
              C153521 * C1094 +
          (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
             C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
             C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                C153637 * C153936 +
            (C3550 + C3551 + C3552) * C153637 * C153924 +
            (C3553 + C3554 + C3555) * C153637 * C153898) *
               C1898 -
           ((C2693 * C1761 - C2694 * C1756 - C2693 * C1762 + C153885 * C1771 +
             C2691 * C1763 - C2692 * C1757 - C2691 * C1764 + C2684 * C1772 +
             C2689 * C1765 - C2690 * C1758 - C2689 * C1766 + C2683 * C1773) *
                C153637 * C153898 +
            (C2693 * C959 - C2694 * C949 - C2693 * C960 + C153885 * C967 +
             C2691 * C957 - C2692 * C948 - C2691 * C958 + C2684 * C966 +
             C2689 * C955 - C2690 * C947 - C2689 * C956 + C2683 * C965) *
                C153637 * C153924 +
            (C2693 * C488 - C2694 * C476 - C2693 * C489 + C153885 * C512 +
             C2691 * C490 - C2692 * C477 - C2691 * C491 + C2684 * C513 +
             C2689 * C492 - C2690 * C478 - C2689 * C493 + C2683 * C514) *
                C153637 * C153936) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C1898 -
           (C5591 * C153898 + (C4155 + C4156 + C4157) * C153637 * C153924 +
            (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
             C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
             C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                C153637 * C153936) *
               C153601) *
              C298 +
          (((C4157 + C4156 + C4155) * C153637 * C153936 +
            (C4154 + C4153 + C4152) * C153637 * C153924 +
            (C5595 + C5596 + C5597) * C153637 * C153898) *
               C153601 -
           (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
            (C3040 + C3039 + C3038) * C153637 * C153936) *
               C1898) *
              C299 +
          ((C3060 * C153936 + (C3046 + C3045 + C3044) * C153637 * C153924 +
            (C4561 + C4562 + C4563) * C153637 * C153898) *
               C1898 -
           ((C2693 * C5564 - C2694 * C5561 - C2693 * C5565 + C153885 * C5570 +
             C2691 * C5566 - C2692 * C5562 - C2691 * C5567 + C2684 * C5571 +
             C2689 * C5568 - C2690 * C5563 - C2689 * C5569 + C2683 * C5572) *
                C153637 * C153898 +
            (C5597 + C5596 + C5595) * C153637 * C153924 + C5591 * C153936) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
            C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
            C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
               C153637 * C153936 +
           (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
              C2104 -
          (C5591 * C153898 + (C4155 + C4156 + C4157) * C153637 * C153924 +
           (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
            C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
            C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
               C153637 * C153936) *
              C2105 +
          ((C2689 * C498 - C2690 * C481 - C2689 * C499 + C2683 * C517 +
            C2691 * C500 - C2692 * C482 - C2691 * C501 + C2684 * C518 +
            C2693 * C502 - C2694 * C483 - C2693 * C503 + C153885 * C519) *
               C153637 * C153936 +
           (C4830 + C4831 + C4832) * C153637 * C153924 +
           (C4833 + C4834 + C4835) * C153637 * C153898) *
              C2106 -
          ((C2693 * C6185 - C2694 * C6179 - C2693 * C6186 + C153885 * C6197 +
            C2691 * C6187 - C2692 * C6180 - C2691 * C6188 + C2684 * C6198 +
            C2689 * C6189 - C2690 * C6181 - C2689 * C6190 + C2683 * C6199) *
               C153637 * C153898 +
           (C2693 * C6191 - C2694 * C6182 - C2693 * C6192 + C153885 * C6200 +
            C2691 * C6193 - C2692 * C6183 - C2691 * C6194 + C2684 * C6201 +
            C2689 * C6195 - C2690 * C6184 - C2689 * C6196 + C2683 * C6202) *
               C153637 * C153924 +
           (C2693 * C2117 - C2694 * C2110 - C2693 * C2118 + C153885 * C2125 +
            C2691 * C2119 - C2692 * C2111 - C2691 * C2120 + C2684 * C2126 +
            C2689 * C2121 - C2690 * C2112 - C2689 * C2122 + C2683 * C2127) *
               C153637 * C153936) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C1898 -
           (C26810 * C153898 + (C25410 + C25411 + C25412) * C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C153601) *
              C153521 * C1093 +
          (((C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515 +
             C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
             C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513) *
                C153637 * C23989 +
            (C25413 + C25414 + C25415) * C153637 * C23990 +
            (C25416 + C25417 + C25418) * C153637 * C153898) *
               C153601 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C1898) *
              C153521 * C1094 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C153637 * C23989 +
            (C24821 + C24822 + C24823) * C153637 * C23990 +
            (C24824 + C24825 + C24826) * C153637 * C153898) *
               C1898 -
           ((C23996 * C1761 - C23997 * C1756 - C23996 * C1762 +
             C153885 * C1771 + C23994 * C1763 - C23995 * C1757 -
             C23994 * C1764 + C153914 * C1772 + C23992 * C1765 -
             C23993 * C1758 - C23992 * C1766 + C153933 * C1773) *
                C153637 * C153898 +
            (C23996 * C959 - C23997 * C949 - C23996 * C960 + C153885 * C967 +
             C23994 * C957 - C23995 * C948 - C23994 * C958 + C153914 * C966 +
             C23992 * C955 - C23993 * C947 - C23992 * C956 + C153933 * C965) *
                C153637 * C23990 +
            (C23996 * C488 - C23997 * C476 - C23996 * C489 + C153885 * C512 +
             C23994 * C490 - C23995 * C477 - C23994 * C491 + C153914 * C513 +
             C23992 * C492 - C23993 * C478 - C23992 * C493 + C153933 * C514) *
                C153637 * C23989) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C1898 -
           (C26810 * C153898 + (C25410 + C25411 + C25412) * C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C153601) *
              C298 +
          (((C25412 + C25411 + C25410) * C153637 * C23989 +
            (C25409 + C25408 + C25407) * C153637 * C23990 +
            (C26814 + C26815 + C26816) * C153637 * C153898) *
               C153601 -
           (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C1898) *
              C299 +
          ((C24347 * C23989 + (C24333 + C24332 + C24331) * C153637 * C23990 +
            (C25804 + C25805 + C25806) * C153637 * C153898) *
               C1898 -
           ((C23996 * C5564 - C23997 * C5561 - C23996 * C5565 +
             C153885 * C5570 + C23994 * C5566 - C23995 * C5562 -
             C23994 * C5567 + C153914 * C5571 + C23992 * C5568 -
             C23993 * C5563 - C23992 * C5569 + C153933 * C5572) *
                C153637 * C153898 +
            (C26816 + C26815 + C26814) * C153637 * C23990 + C26810 * C23989) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
            C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
            C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
               C153637 * C23989 +
           (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
              C2104 -
          (C26810 * C153898 + (C25410 + C25411 + C25412) * C153637 * C23990 +
           (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
            C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
            C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
               C153637 * C23989) *
              C2105 +
          ((C23992 * C498 - C23993 * C481 - C23992 * C499 + C153933 * C517 +
            C23994 * C500 - C23995 * C482 - C23994 * C501 + C153914 * C518 +
            C23996 * C502 - C23997 * C483 - C23996 * C503 + C153885 * C519) *
               C153637 * C23989 +
           (C26061 + C26062 + C26063) * C153637 * C23990 +
           (C26064 + C26065 + C26066) * C153637 * C153898) *
              C2106 -
          ((C23996 * C6185 - C23997 * C6179 - C23996 * C6186 + C153885 * C6197 +
            C23994 * C6187 - C23995 * C6180 - C23994 * C6188 + C153914 * C6198 +
            C23992 * C6189 - C23993 * C6181 - C23992 * C6190 +
            C153933 * C6199) *
               C153637 * C153898 +
           (C23996 * C6191 - C23997 * C6182 - C23996 * C6192 + C153885 * C6200 +
            C23994 * C6193 - C23995 * C6183 - C23994 * C6194 + C153914 * C6201 +
            C23992 * C6195 - C23993 * C6184 - C23992 * C6196 +
            C153933 * C6202) *
               C153637 * C23990 +
           (C23996 * C2117 - C23997 * C2110 - C23996 * C2118 + C153885 * C2125 +
            C23994 * C2119 - C23995 * C2111 - C23994 * C2120 + C153914 * C2126 +
            C23992 * C2121 - C23993 * C2112 - C23992 * C2122 +
            C153933 * C2127) *
               C153637 * C23989) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C1898 -
           (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
            C29060 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C153601) *
              C153521 * C1093 +
          (((C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                C153637 * C28207 +
            C29061 * C28208 + C29062 * C28209 + C29063 * C28210 +
            C29064 * C28211) *
               C153601 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C1898) *
              C153521 * C1094 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C153637 * C28207 +
            C28705 * C28208 + C28706 * C28209 + C28707 * C28210 +
            C28708 * C28211) *
               C1898 -
           ((C28212 * C5564 - C28213 * C5561 - C28212 * C5565 +
             C153462 * C5570) *
                C153637 * C28211 +
            (C28212 * C4071 - C28213 * C4065 - C28212 * C4072 +
             C153462 * C4077) *
                C153637 * C28210 +
            (C28212 * C1765 - C28213 * C1758 - C28212 * C1766 +
             C153462 * C1773) *
                C153637 * C28209 +
            (C28212 * C955 - C28213 * C947 - C28212 * C956 + C153462 * C965) *
                C153637 * C28208 +
            (C28212 * C492 - C28213 * C478 - C28212 * C493 + C153462 * C514) *
                C153637 * C28207) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C1898 -
           (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
            C29060 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C153601) *
              C298 +
          ((C29060 * C28207 + C29059 * C28208 + C29058 * C28209 +
            C29057 * C28210 + C29856 * C28211) *
               C153601 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C1898) *
              C299 +
          ((C28416 * C28207 + C28417 * C28208 + C28418 * C28209 +
            C28419 * C28210 + C29280 * C28211) *
               C1898 -
           ((C28212 * C29845 - C28213 * C29844 - C28212 * C29846 +
             C153462 * C29847) *
                C153637 * C28211 +
            C29856 * C28210 + C29057 * C28209 + C29058 * C28208 +
            C29059 * C28207) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
               C153637 * C28207 +
           C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
           C28418 * C28211) *
              C2104 -
          (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
           C29060 * C28208 +
           (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
               C153637 * C28207) *
              C2105 +
          ((C28212 * C498 - C28213 * C481 - C28212 * C499 + C153462 * C517) *
               C153637 * C28207 +
           C29435 * C28208 + C29436 * C28209 + C29437 * C28210 +
           C29438 * C28211) *
              C2106 -
          ((C28212 * C30184 - C28213 * C30182 - C28212 * C30185 +
            C153462 * C30188) *
               C153637 * C28211 +
           (C28212 * C30186 - C28213 * C30183 - C28212 * C30187 +
            C153462 * C30189) *
               C153637 * C28210 +
           (C28212 * C6189 - C28213 * C6181 - C28212 * C6190 +
            C153462 * C6199) *
               C153637 * C28209 +
           (C28212 * C6195 - C28213 * C6184 - C28212 * C6196 +
            C153462 * C6202) *
               C153637 * C28208 +
           (C28212 * C2121 - C28213 * C2112 - C28212 * C2122 +
            C153462 * C2127) *
               C153637 * C28207) *
              C2107) *
         C153521 * C153502) /
            (p * q * std::sqrt(p + q));
    d2ee[373] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C153921 -
           (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
            C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
            C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
            C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
            C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
               C153637 * C153625 * C153922 +
           (C134 * C498 - C135 * C481 - C134 * C499 + C121 * C517 +
            C136 * C500 - C137 * C482 - C136 * C501 + C122 * C518 +
            C138 * C502 - C139 * C483 - C138 * C503 + C123 * C519 +
            C140 * C504 - C141 * C484 - C140 * C505 + C124 * C520 +
            C142 * C506 - C143 * C485 - C142 * C507 + C125 * C521) *
               C153637 * C153625 * C2414) *
              C153521 * C153840 +
          ((C134 * C494 - C135 * C479 - C134 * C495 + C121 * C515 +
            C136 * C492 - C137 * C478 - C136 * C493 + C122 * C514 +
            C138 * C490 - C139 * C477 - C138 * C491 + C123 * C513 +
            C140 * C488 - C141 * C476 - C140 * C489 + C124 * C512 +
            C142 * C508 - C143 * C486 - C142 * C509 + C125 * C522) *
               C153637 * C153625 * C153922 -
           (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
            C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
            C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
            C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
            C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
               C153637 * C153625 * C153921 -
           (C142 * C510 - C143 * C487 - C142 * C511 + C125 * C523 +
            C140 * C506 - C141 * C485 - C140 * C507 + C124 * C521 +
            C138 * C504 - C139 * C484 - C138 * C505 + C123 * C520 +
            C136 * C502 - C137 * C483 - C136 * C503 + C122 * C519 +
            C134 * C500 - C135 * C482 - C134 * C501 + C121 * C518) *
               C153637 * C153625 * C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C153921 -
           (C5591 * C153898 + (C4155 + C4156 + C4157) * C153637 * C153924 +
            (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
             C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
             C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                C153637 * C153936) *
               C153922 +
           ((C2689 * C498 - C2690 * C481 - C2689 * C499 + C2683 * C517 +
             C2691 * C500 - C2692 * C482 - C2691 * C501 + C2684 * C518 +
             C2693 * C502 - C2694 * C483 - C2693 * C503 + C153885 * C519) *
                C153637 * C153936 +
            (C4830 + C4831 + C4832) * C153637 * C153924 +
            (C4833 + C4834 + C4835) * C153637 * C153898) *
               C2414) *
              C153521 * C153840 +
          (((C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515 +
             C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
             C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513) *
                C153637 * C153936 +
            (C4158 + C4159 + C4160) * C153637 * C153924 +
            (C4161 + C4162 + C4163) * C153637 * C153898) *
               C153922 -
           (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153637 * C153936) *
               C153921 -
           ((C2693 * C3289 - C2694 * C3282 - C2693 * C3290 + C153885 * C3294 +
             C2691 * C3287 - C2692 * C3281 - C2691 * C3288 + C2684 * C3293 +
             C2689 * C3285 - C2690 * C3280 - C2689 * C3286 + C2683 * C3292) *
                C153637 * C153898 +
            (C2693 * C1332 - C2694 * C1326 - C2693 * C1333 + C153885 * C1341 +
             C2691 * C1334 - C2692 * C1327 - C2691 * C1335 + C2684 * C1342 +
             C2689 * C1336 - C2690 * C1328 - C2689 * C1337 + C2683 * C1343) *
                C153637 * C153924 +
            (C2693 * C504 - C2694 * C484 - C2693 * C505 + C153885 * C520 +
             C2691 * C502 - C2692 * C483 - C2691 * C503 + C2684 * C519 +
             C2689 * C500 - C2690 * C482 - C2689 * C501 + C2683 * C518) *
                C153637 * C153936) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C153921 -
           (C26810 * C153898 + (C25410 + C25411 + C25412) * C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C153922 +
           ((C23992 * C498 - C23993 * C481 - C23992 * C499 + C153933 * C517 +
             C23994 * C500 - C23995 * C482 - C23994 * C501 + C153914 * C518 +
             C23996 * C502 - C23997 * C483 - C23996 * C503 + C153885 * C519) *
                C153637 * C23989 +
            (C26061 + C26062 + C26063) * C153637 * C23990 +
            (C26064 + C26065 + C26066) * C153637 * C153898) *
               C2414) *
              C153521 * C153840 +
          (((C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515 +
             C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
             C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513) *
                C153637 * C23989 +
            (C25413 + C25414 + C25415) * C153637 * C23990 +
            (C25416 + C25417 + C25418) * C153637 * C153898) *
               C153922 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C153921 -
           ((C23996 * C3289 - C23997 * C3282 - C23996 * C3290 +
             C153885 * C3294 + C23994 * C3287 - C23995 * C3281 -
             C23994 * C3288 + C153914 * C3293 + C23992 * C3285 -
             C23993 * C3280 - C23992 * C3286 + C153933 * C3292) *
                C153637 * C153898 +
            (C23996 * C1332 - C23997 * C1326 - C23996 * C1333 +
             C153885 * C1341 + C23994 * C1334 - C23995 * C1327 -
             C23994 * C1335 + C153914 * C1342 + C23992 * C1336 -
             C23993 * C1328 - C23992 * C1337 + C153933 * C1343) *
                C153637 * C23990 +
            (C23996 * C504 - C23997 * C484 - C23996 * C505 + C153885 * C520 +
             C23994 * C502 - C23995 * C483 - C23994 * C503 + C153914 * C519 +
             C23992 * C500 - C23993 * C482 - C23992 * C501 + C153933 * C518) *
                C153637 * C23989) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C153921 -
           (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
            C29060 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C153922 +
           ((C28212 * C498 - C28213 * C481 - C28212 * C499 + C153462 * C517) *
                C153637 * C28207 +
            C29435 * C28208 + C29436 * C28209 + C29437 * C28210 +
            C29438 * C28211) *
               C2414) *
              C153521 * C153840 +
          (((C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                C153637 * C28207 +
            C29061 * C28208 + C29062 * C28209 + C29063 * C28210 +
            C29064 * C28211) *
               C153922 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C153921 -
           ((C28212 * C28550 - C28213 * C28547 - C28212 * C28551 +
             C153462 * C28553) *
                C153637 * C28211 +
            (C28212 * C4786 - C28213 * C4782 - C28212 * C4787 +
             C153462 * C4791) *
                C153637 * C28210 +
            (C28212 * C3285 - C28213 * C3280 - C28212 * C3286 +
             C153462 * C3292) *
                C153637 * C28209 +
            (C28212 * C1336 - C28213 * C1328 - C28212 * C1337 +
             C153462 * C1343) *
                C153637 * C28208 +
            (C28212 * C500 - C28213 * C482 - C28212 * C501 + C153462 * C518) *
                C153637 * C28207) *
               C2414) *
              C153521 * C153508)) /
            (p * q * std::sqrt(p + q));
    d2ee[374] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C1898 -
           (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
            C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
            C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
            C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
            C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
               C153637 * C153625 * C153601) *
              C153521 * C1093 +
          ((C134 * C494 - C135 * C479 - C134 * C495 + C121 * C515 +
            C136 * C492 - C137 * C478 - C136 * C493 + C122 * C514 +
            C138 * C490 - C139 * C477 - C138 * C491 + C123 * C513 +
            C140 * C488 - C141 * C476 - C140 * C489 + C124 * C512 +
            C142 * C508 - C143 * C486 - C142 * C509 + C125 * C522) *
               C153637 * C153625 * C153601 -
           (C142 * C162 - C143 * C149 - C142 * C163 + C125 * C173 +
            C140 * C160 - C141 * C148 - C140 * C161 + C124 * C172 +
            C138 * C158 - C139 * C147 - C138 * C159 + C123 * C171 +
            C136 * C156 - C137 * C146 - C136 * C157 + C122 * C170 +
            C134 * C154 - C135 * C145 - C134 * C155 + C121 * C169) *
               C153637 * C153625 * C1898) *
              C153521 * C1094 +
          ((C134 * C156 - C135 * C146 - C134 * C157 + C121 * C170 +
            C136 * C158 - C137 * C147 - C136 * C159 + C122 * C171 +
            C138 * C160 - C139 * C148 - C138 * C161 + C123 * C172 +
            C140 * C162 - C141 * C149 - C140 * C163 + C124 * C173 +
            C142 * C164 - C143 * C150 - C142 * C165 + C125 * C174) *
               C153637 * C153625 * C1898 -
           (C142 * C780 - C143 * C779 - C142 * C781 + C125 * C782 +
            C140 * C508 - C141 * C486 - C140 * C509 + C124 * C522 +
            C138 * C488 - C139 * C476 - C138 * C489 + C123 * C512 +
            C136 * C490 - C137 * C477 - C136 * C491 + C122 * C513 +
            C134 * C492 - C135 * C478 - C134 * C493 + C121 * C514) *
               C153637 * C153625 * C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C152 - C135 * C144 - C134 * C153 + C121 * C168 +
            C136 * C154 - C137 * C145 - C136 * C155 + C122 * C169 +
            C138 * C156 - C139 * C146 - C138 * C157 + C123 * C170 +
            C140 * C158 - C141 * C147 - C140 * C159 + C124 * C171 +
            C142 * C160 - C143 * C148 - C142 * C161 + C125 * C172) *
               C153637 * C153625 * C1898 -
           (C142 * C488 - C143 * C476 - C142 * C489 + C125 * C512 +
            C140 * C490 - C141 * C477 - C140 * C491 + C124 * C513 +
            C138 * C492 - C139 * C478 - C138 * C493 + C123 * C514 +
            C136 * C494 - C137 * C479 - C136 * C495 + C122 * C515 +
            C134 * C496 - C135 * C480 - C134 * C497 + C121 * C516) *
               C153637 * C153625 * C153601) *
              C298 +
          ((C134 * C951 - C135 * C945 - C134 * C952 + C121 * C963 +
            C136 * C953 - C137 * C946 - C136 * C954 + C122 * C964 +
            C138 * C955 - C139 * C947 - C138 * C956 + C123 * C965 +
            C140 * C957 - C141 * C948 - C140 * C958 + C124 * C966 +
            C142 * C959 - C143 * C949 - C142 * C960 + C125 * C967) *
               C153637 * C153625 * C153601 -
           (C142 * C315 - C143 * C303 - C142 * C316 + C125 * C339 +
            C140 * C317 - C141 * C304 - C140 * C318 + C124 * C340 +
            C138 * C319 - C139 * C305 - C138 * C320 + C123 * C341 +
            C136 * C321 - C137 * C306 - C136 * C322 + C122 * C342 +
            C134 * C323 - C135 * C307 - C134 * C324 + C121 * C343) *
               C153637 * C153625 * C1898) *
              C299 +
          ((C134 * C325 - C135 * C308 - C134 * C326 + C121 * C344 +
            C136 * C327 - C137 * C309 - C136 * C328 + C122 * C345 +
            C138 * C329 - C139 * C310 - C138 * C330 + C123 * C346 +
            C140 * C331 - C141 * C311 - C140 * C332 + C124 * C347 +
            C142 * C333 - C143 * C312 - C142 * C334 + C125 * C348) *
               C153637 * C153625 * C1898 -
           (C142 * C1761 - C143 * C1756 - C142 * C1762 + C125 * C1771 +
            C140 * C1763 - C141 * C1757 - C140 * C1764 + C124 * C1772 +
            C138 * C1765 - C139 * C1758 - C138 * C1766 + C123 * C1773 +
            C136 * C1767 - C137 * C1759 - C136 * C1768 + C122 * C1774 +
            C134 * C1769 - C135 * C1760 - C134 * C1770 + C121 * C1775) *
               C153637 * C153625 * C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C1898 -
           (C5591 * C153898 + (C4155 + C4156 + C4157) * C153637 * C153924 +
            (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
             C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
             C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                C153637 * C153936) *
               C153601) *
              C153521 * C1093 +
          (((C2689 * C494 - C2690 * C479 - C2689 * C495 + C2683 * C515 +
             C2691 * C492 - C2692 * C478 - C2691 * C493 + C2684 * C514 +
             C2693 * C490 - C2694 * C477 - C2693 * C491 + C153885 * C513) *
                C153637 * C153936 +
            (C4158 + C4159 + C4160) * C153637 * C153924 +
            (C4161 + C4162 + C4163) * C153637 * C153898) *
               C153601 -
           (C3061 * C153898 + (C3049 + C3048 + C3047) * C153637 * C153924 +
            (C2693 * C158 - C2694 * C147 - C2693 * C159 + C153885 * C171 +
             C2691 * C156 - C2692 * C146 - C2691 * C157 + C2684 * C170 +
             C2689 * C154 - C2690 * C145 - C2689 * C155 + C2683 * C169) *
                C153637 * C153936) *
               C1898) *
              C153521 * C1094 +
          (((C2689 * C156 - C2690 * C146 - C2689 * C157 + C2683 * C170 +
             C2691 * C158 - C2692 * C147 - C2691 * C159 + C2684 * C171 +
             C2693 * C160 - C2694 * C148 - C2693 * C161 + C153885 * C172) *
                C153637 * C153936 +
            (C3550 + C3551 + C3552) * C153637 * C153924 +
            (C3553 + C3554 + C3555) * C153637 * C153898) *
               C1898 -
           ((C2693 * C1761 - C2694 * C1756 - C2693 * C1762 + C153885 * C1771 +
             C2691 * C1763 - C2692 * C1757 - C2691 * C1764 + C2684 * C1772 +
             C2689 * C1765 - C2690 * C1758 - C2689 * C1766 + C2683 * C1773) *
                C153637 * C153898 +
            (C2693 * C959 - C2694 * C949 - C2693 * C960 + C153885 * C967 +
             C2691 * C957 - C2692 * C948 - C2691 * C958 + C2684 * C966 +
             C2689 * C955 - C2690 * C947 - C2689 * C956 + C2683 * C965) *
                C153637 * C153924 +
            (C2693 * C488 - C2694 * C476 - C2693 * C489 + C153885 * C512 +
             C2691 * C490 - C2692 * C477 - C2691 * C491 + C2684 * C513 +
             C2689 * C492 - C2690 * C478 - C2689 * C493 + C2683 * C514) *
                C153637 * C153936) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C2689 * C152 - C2690 * C144 - C2689 * C153 + C2683 * C168 +
             C2691 * C154 - C2692 * C145 - C2691 * C155 + C2684 * C169 +
             C2693 * C156 - C2694 * C146 - C2693 * C157 + C153885 * C170) *
                C153637 * C153936 +
            (C3038 + C3039 + C3040) * C153637 * C153924 + C3060 * C153898) *
               C1898 -
           (C5591 * C153898 + (C4155 + C4156 + C4157) * C153637 * C153924 +
            (C2693 * C492 - C2694 * C478 - C2693 * C493 + C153885 * C514 +
             C2691 * C494 - C2692 * C479 - C2691 * C495 + C2684 * C515 +
             C2689 * C496 - C2690 * C480 - C2689 * C497 + C2683 * C516) *
                C153637 * C153936) *
               C153601) *
              C298 +
          (((C4157 + C4156 + C4155) * C153637 * C153936 +
            (C4154 + C4153 + C4152) * C153637 * C153924 +
            (C5595 + C5596 + C5597) * C153637 * C153898) *
               C153601 -
           (C4557 * C153898 + (C3043 + C3042 + C3041) * C153637 * C153924 +
            (C3040 + C3039 + C3038) * C153637 * C153936) *
               C1898) *
              C299 +
          ((C3060 * C153936 + (C3046 + C3045 + C3044) * C153637 * C153924 +
            (C4561 + C4562 + C4563) * C153637 * C153898) *
               C1898 -
           ((C2693 * C5564 - C2694 * C5561 - C2693 * C5565 + C153885 * C5570 +
             C2691 * C5566 - C2692 * C5562 - C2691 * C5567 + C2684 * C5571 +
             C2689 * C5568 - C2690 * C5563 - C2689 * C5569 + C2683 * C5572) *
                C153637 * C153898 +
            (C5597 + C5596 + C5595) * C153637 * C153924 + C5591 * C153936) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C1898 -
           (C26810 * C153898 + (C25410 + C25411 + C25412) * C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C153601) *
              C153521 * C1093 +
          (((C23992 * C494 - C23993 * C479 - C23992 * C495 + C153933 * C515 +
             C23994 * C492 - C23995 * C478 - C23994 * C493 + C153914 * C514 +
             C23996 * C490 - C23997 * C477 - C23996 * C491 + C153885 * C513) *
                C153637 * C23989 +
            (C25413 + C25414 + C25415) * C153637 * C23990 +
            (C25416 + C25417 + C25418) * C153637 * C153898) *
               C153601 -
           (C24348 * C153898 + (C24336 + C24335 + C24334) * C153637 * C23990 +
            (C23996 * C158 - C23997 * C147 - C23996 * C159 + C153885 * C171 +
             C23994 * C156 - C23995 * C146 - C23994 * C157 + C153914 * C170 +
             C23992 * C154 - C23993 * C145 - C23992 * C155 + C153933 * C169) *
                C153637 * C23989) *
               C1898) *
              C153521 * C1094 +
          (((C23992 * C156 - C23993 * C146 - C23992 * C157 + C153933 * C170 +
             C23994 * C158 - C23995 * C147 - C23994 * C159 + C153914 * C171 +
             C23996 * C160 - C23997 * C148 - C23996 * C161 + C153885 * C172) *
                C153637 * C23989 +
            (C24821 + C24822 + C24823) * C153637 * C23990 +
            (C24824 + C24825 + C24826) * C153637 * C153898) *
               C1898 -
           ((C23996 * C1761 - C23997 * C1756 - C23996 * C1762 +
             C153885 * C1771 + C23994 * C1763 - C23995 * C1757 -
             C23994 * C1764 + C153914 * C1772 + C23992 * C1765 -
             C23993 * C1758 - C23992 * C1766 + C153933 * C1773) *
                C153637 * C153898 +
            (C23996 * C959 - C23997 * C949 - C23996 * C960 + C153885 * C967 +
             C23994 * C957 - C23995 * C948 - C23994 * C958 + C153914 * C966 +
             C23992 * C955 - C23993 * C947 - C23992 * C956 + C153933 * C965) *
                C153637 * C23990 +
            (C23996 * C488 - C23997 * C476 - C23996 * C489 + C153885 * C512 +
             C23994 * C490 - C23995 * C477 - C23994 * C491 + C153914 * C513 +
             C23992 * C492 - C23993 * C478 - C23992 * C493 + C153933 * C514) *
                C153637 * C23989) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C23992 * C152 - C23993 * C144 - C23992 * C153 + C153933 * C168 +
             C23994 * C154 - C23995 * C145 - C23994 * C155 + C153914 * C169 +
             C23996 * C156 - C23997 * C146 - C23996 * C157 + C153885 * C170) *
                C153637 * C23989 +
            (C24325 + C24326 + C24327) * C153637 * C23990 + C24347 * C153898) *
               C1898 -
           (C26810 * C153898 + (C25410 + C25411 + C25412) * C153637 * C23990 +
            (C23996 * C492 - C23997 * C478 - C23996 * C493 + C153885 * C514 +
             C23994 * C494 - C23995 * C479 - C23994 * C495 + C153914 * C515 +
             C23992 * C496 - C23993 * C480 - C23992 * C497 + C153933 * C516) *
                C153637 * C23989) *
               C153601) *
              C298 +
          (((C25412 + C25411 + C25410) * C153637 * C23989 +
            (C25409 + C25408 + C25407) * C153637 * C23990 +
            (C26814 + C26815 + C26816) * C153637 * C153898) *
               C153601 -
           (C25800 * C153898 + (C24330 + C24329 + C24328) * C153637 * C23990 +
            (C24327 + C24326 + C24325) * C153637 * C23989) *
               C1898) *
              C299 +
          ((C24347 * C23989 + (C24333 + C24332 + C24331) * C153637 * C23990 +
            (C25804 + C25805 + C25806) * C153637 * C153898) *
               C1898 -
           ((C23996 * C5564 - C23997 * C5561 - C23996 * C5565 +
             C153885 * C5570 + C23994 * C5566 - C23995 * C5562 -
             C23994 * C5567 + C153914 * C5571 + C23992 * C5568 -
             C23993 * C5563 - C23992 * C5569 + C153933 * C5572) *
                C153637 * C153898 +
            (C26816 + C26815 + C26814) * C153637 * C23990 + C26810 * C23989) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C1898 -
           (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
            C29060 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C153601) *
              C153521 * C1093 +
          (((C28212 * C494 - C28213 * C479 - C28212 * C495 + C153462 * C515) *
                C153637 * C28207 +
            C29061 * C28208 + C29062 * C28209 + C29063 * C28210 +
            C29064 * C28211) *
               C153601 -
           (C28423 * C28211 + C28422 * C28210 + C28421 * C28209 +
            C28420 * C28208 +
            (C28212 * C154 - C28213 * C145 - C28212 * C155 + C153462 * C169) *
                C153637 * C28207) *
               C1898) *
              C153521 * C1094 +
          (((C28212 * C156 - C28213 * C146 - C28212 * C157 + C153462 * C170) *
                C153637 * C28207 +
            C28705 * C28208 + C28706 * C28209 + C28707 * C28210 +
            C28708 * C28211) *
               C1898 -
           ((C28212 * C5564 - C28213 * C5561 - C28212 * C5565 +
             C153462 * C5570) *
                C153637 * C28211 +
            (C28212 * C4071 - C28213 * C4065 - C28212 * C4072 +
             C153462 * C4077) *
                C153637 * C28210 +
            (C28212 * C1765 - C28213 * C1758 - C28212 * C1766 +
             C153462 * C1773) *
                C153637 * C28209 +
            (C28212 * C955 - C28213 * C947 - C28212 * C956 + C153462 * C965) *
                C153637 * C28208 +
            (C28212 * C492 - C28213 * C478 - C28212 * C493 + C153462 * C514) *
                C153637 * C28207) *
               C153601) *
              C153521 * C1095)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C28212 * C152 - C28213 * C144 - C28212 * C153 + C153462 * C168) *
                C153637 * C28207 +
            C28415 * C28208 + C28416 * C28209 + C28417 * C28210 +
            C28418 * C28211) *
               C1898 -
           (C29057 * C28211 + C29058 * C28210 + C29059 * C28209 +
            C29060 * C28208 +
            (C28212 * C496 - C28213 * C480 - C28212 * C497 + C153462 * C516) *
                C153637 * C28207) *
               C153601) *
              C298 +
          ((C29060 * C28207 + C29059 * C28208 + C29058 * C28209 +
            C29057 * C28210 + C29856 * C28211) *
               C153601 -
           (C28419 * C28211 + C28418 * C28210 + C28417 * C28209 +
            C28416 * C28208 + C28415 * C28207) *
               C1898) *
              C299 +
          ((C28416 * C28207 + C28417 * C28208 + C28418 * C28209 +
            C28419 * C28210 + C29280 * C28211) *
               C1898 -
           ((C28212 * C29845 - C28213 * C29844 - C28212 * C29846 +
             C153462 * C29847) *
                C153637 * C28211 +
            C29856 * C28210 + C29057 * C28209 + C29058 * C28208 +
            C29059 * C28207) *
               C153601) *
              C300) *
         C153502) /
            (p * q * std::sqrt(p + q));
}
