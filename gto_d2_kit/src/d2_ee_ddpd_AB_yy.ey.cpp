/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_ddpd_AB_yy.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2212_12_22(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C152045 = ae + be;
    const double C152044 = ae * be;
    const double C152043 = yA - yB;
    const double C152052 = 0 * be;
    const double C152112 = 0 * ae;
    const double C152107 = 0 * be;
    const double C152106 = 0 * be;
    const double C152191 = 0 * be;
    const double C152267 = p + q;
    const double C152266 = p * q;
    const double C152273 = bs[3];
    const double C152272 = yP - yQ;
    const double C152280 = bs[4];
    const double C152278 = xP - xQ;
    const double C152288 = bs[5];
    const double C152297 = bs[6];
    const double C152308 = bs[7];
    const double C152323 = bs[8];
    const double C152352 = bs[2];
    const double C152482 = zP - zQ;
    const double C136 = bs[0];
    const double C153631 = xA - xB;
    const double C153668 = ce + de;
    const double C153667 = ce * de;
    const double C153666 = xC - xD;
    const double C153690 = yC - yD;
    const double C153706 = zC - zD;
    const double C153805 = zA - zB;
    const double C152053 = std::pow(C152045, 2);
    const double C152085 = 2 * C152045;
    const double C152060 = 2 * C152044;
    const double C152054 = C152044 * C152043;
    const double C153788 = std::pow(C152043, 2);
    const double C153847 = C152043 * be;
    const double C153845 = C152043 * ae;
    const double C152109 = C152043 * C152052;
    const double C152108 = C152052 / C152045;
    const double C152155 = -2 * C152052;
    const double C152119 = C152112 / C152045;
    const double C152114 = C152043 * C152107;
    const double C152154 = -2 * C152107;
    const double C152192 = C152191 / C152045;
    const double C152268 = 2 * C152266;
    const double C152275 = std::pow(C152272, 2);
    const double C152338 = C152272 * ae;
    const double C152337 = C152272 * be;
    const double C152290 = std::pow(C152278, 2);
    const double C152530 = std::pow(C152482, 2);
    const double C153634 = C153631 * be;
    const double C153633 = C153631 * ae;
    const double C153632 = std::pow(C153631, 2);
    const double C153670 = 2 * C153668;
    const double C153680 = std::pow(C153668, 2);
    const double C153672 = C153666 * de;
    const double C153671 = C153666 * ce;
    const double C153669 = std::pow(C153666, 2);
    const double C153691 = std::pow(C153690, 2);
    const double C153743 = C153690 * de;
    const double C153742 = C153690 * ce;
    const double C153707 = std::pow(C153706, 2);
    const double C153771 = C153706 * de;
    const double C153770 = C153706 * ce;
    const double C153806 = std::pow(C153805, 2);
    const double C153889 = C153805 * be;
    const double C153887 = C153805 * ae;
    const double C152055 = 2 * C152053;
    const double C152196 = 4 * C152053;
    const double C152153 = C152053 * C152085;
    const double C153646 = std::pow(C152085, -1);
    const double C154007 = std::pow(C152085, -2);
    const double C153789 = C153788 * C152044;
    const double C154031 = std::pow(C153845, 2);
    const double C152117 = C152109 / C152045;
    const double C152164 = ae * C152155;
    const double C152120 = C152114 / C152045;
    const double C152163 = ae * C152154;
    const double C152270 = C152268 / C152267;
    const double C160 =
        ((std::pow(yP - yQ, 2) * bs[2] * std::pow(C152268 / C152267, 2) -
          (bs[1] * C152268) / C152267) *
         C152044) /
        C152053;
    const double C137 = -(C152278 * bs[1] * C152268) / C152267;
    const double C341 = -(C152272 * bs[1] * C152268) / C152267;
    const double C570 = -(C152482 * bs[1] * C152268) / C152267;
    const double C152282 = C152275 * C152280;
    const double C152291 = C152275 * C152288;
    const double C152299 = C152275 * C152297;
    const double C152311 = C152275 * C152308;
    const double C152326 = C152275 * C152323;
    const double C152340 = C152288 * C152338;
    const double C152345 = C152280 * C152338;
    const double C152356 = C152273 * C152338;
    const double C152376 = C152297 * C152338;
    const double C152402 = C152308 * C152338;
    const double C152438 = C152323 * C152338;
    const double C145 = (-(bs[1] * C152338 * C152268) / C152267) / C152045;
    const double C152339 = C152288 * C152337;
    const double C152344 = C152280 * C152337;
    const double C152355 = C152273 * C152337;
    const double C152372 = C152297 * C152337;
    const double C152396 = C152308 * C152337;
    const double C152430 = C152323 * C152337;
    const double C144 = (-(bs[1] * C152337 * C152268) / C152267) / C152045;
    const double C154000 = std::pow(C153633, 2);
    const double C153635 = C153632 * C152044;
    const double C153681 = std::pow(C153670, -1);
    const double C154019 = std::pow(C153670, -2);
    const double C153685 = 2 * C153680;
    const double C154017 = 4 * C153680;
    const double C153673 = C153669 * C153667;
    const double C153692 = C153691 * C153667;
    const double C153708 = C153707 * C153667;
    const double C153807 = C153806 * C152044;
    const double C154033 = std::pow(C153887, 2);
    const double C152111 = C152052 / C152055;
    const double C152116 = C152107 / C152055;
    const double C152115 = C152106 / C152055;
    const double C152198 = C152045 * C152196;
    const double C154010 = 4 * C152153;
    const double C153790 = C153789 / C152045;
    const double C152121 = 0 - C152117;
    const double C152169 = C152164 / C152153;
    const double C152168 = C152043 * C152164;
    const double C152124 = 0 - C152120;
    const double C152167 = C152163 / C152153;
    const double C152274 = -C152270;
    const double C152281 = std::pow(C152270, 4);
    const double C152298 = std::pow(C152270, 6);
    const double C152324 = std::pow(C152270, 8);
    const double C152351 = std::pow(C152270, 2);
    const double C161 =
        ((xP - xQ) *
         (bs[2] * std::pow(C152270, 2) +
          std::pow(yP - yQ, 2) * bs[3] * std::pow(-C152270, 3)) *
         C152044) /
        C152053;
    const double C153636 = C153635 / C152045;
    const double C153674 = C153673 / C153668;
    const double C153693 = C153692 / C153668;
    const double C153709 = C153708 / C153668;
    const double C153808 = C153807 / C152045;
    const double C153791 = -C153790;
    const double C152125 = C152121 * ae;
    const double C152172 = C152168 / C152053;
    const double C152129 = C152124 * ae;
    const double C152276 = std::pow(C152274, 3);
    const double C152289 = std::pow(C152274, 5);
    const double C152309 = std::pow(C152274, 7);
    const double C152283 = C152282 * C152281;
    const double C152287 = C152280 * C152281;
    const double C152347 = C152281 * C152345;
    const double C152346 = C152281 * C152344;
    const double C152300 = C152299 * C152298;
    const double C152307 = C152297 * C152298;
    const double C152382 = C152298 * C152376;
    const double C152378 = C152298 * C152372;
    const double C152327 = C152326 * C152324;
    const double C152444 = C152324 * C152438;
    const double C152440 = C152324 * C152430;
    const double C152354 = C152352 * C152351;
    const double C146 = (C152278 * C152351 * C152352 * C152337) / C152045;
    const double C147 = (C152278 * C152351 * C152352 * C152338) / C152045;
    const double C357 = (C152272 * C152351 * C152352 * C152337) / C152045 -
                        (be * bs[1] * C152268) / (C152267 * C152045);
    const double C358 = (C152272 * C152351 * C152352 * C152338) / C152045 -
                        (ae * bs[1] * C152268) / (C152267 * C152045);
    const double C586 = (C152482 * C152351 * C152352 * C152337) / C152045;
    const double C587 = (C152482 * C152351 * C152352 * C152338) / C152045;
    const double C153637 = -C153636;
    const double C153675 = -C153674;
    const double C153694 = -C153693;
    const double C153710 = -C153709;
    const double C153809 = -C153808;
    const double C153792 = std::exp(C153791);
    const double C152130 = C152125 / C152045;
    const double C152133 = C152129 / C152045;
    const double C152279 = C152273 * C152276;
    const double C152358 = C152276 * C152356;
    const double C152357 = C152276 * C152355;
    const double C162 =
        ((bs[2] * std::pow(C152270, 2) + C152275 * C152273 * C152276) *
             C152044 +
         (C152273 * C152276 + C152275 * bs[4] * std::pow(C152270, 4)) *
             C152044 * std::pow(xP - xQ, 2)) /
        C152053;
    const double C377 =
        (ae * C152351 * C152352 * C152337 + be * C152351 * C152352 * C152338 +
         C152272 * (C152352 * C152351 + C152275 * C152273 * C152276) *
             C152044) /
        C152053;
    const double C152292 = C152291 * C152289;
    const double C152296 = C152288 * C152289;
    const double C152342 = C152289 * C152340;
    const double C152341 = C152289 * C152339;
    const double C152312 = C152311 * C152309;
    const double C152322 = C152308 * C152309;
    const double C152408 = C152309 * C152402;
    const double C152404 = C152309 * C152396;
    const double C152365 = C152287 * C152290;
    const double C152373 = C152278 * C152287;
    const double C152554 = C152287 * ae;
    const double C152552 = C152287 * C152275;
    const double C152551 = C152272 * C152287;
    const double C152550 = C152287 * be;
    const double C153570 = C152287 * C152530;
    const double C153594 = C152482 * C152287;
    const double C152362 = C152278 * C152347;
    const double C152525 = C152272 * C152347;
    const double C152547 = be * C152347;
    const double C152360 = C152278 * C152346;
    const double C152522 = C152272 * C152346;
    const double C152546 = ae * C152346;
    const double C152399 = C152307 * C152290;
    const double C152433 = C152278 * C152307;
    const double C152848 = C152307 * ae;
    const double C152842 = C152307 * C152275;
    const double C152841 = C152272 * C152307;
    const double C152840 = C152307 * be;
    const double C153620 = C152307 * C152530;
    const double C152385 = C152382 * C152290;
    const double C152401 = C152278 * C152382;
    const double C152746 = C152272 * C152382;
    const double C152835 = be * C152382;
    const double C152958 = C152382 * C152530;
    const double C152984 = C152482 * C152382;
    const double C152383 = C152378 * C152290;
    const double C152395 = C152278 * C152378;
    const double C152740 = C152272 * C152378;
    const double C152834 = ae * C152378;
    const double C152957 = C152378 * C152530;
    const double C152983 = C152482 * C152378;
    const double C152447 = C152444 * C152290;
    const double C152907 = C152278 * C152444;
    const double C153039 = C152272 * C152444;
    const double C152445 = C152440 * C152290;
    const double C152901 = C152278 * C152440;
    const double C153029 = C152272 * C152440;
    const double C606 =
        ((zP - zQ) * (C152354 + C152275 * C152273 * C152276) * C152044) /
        C152053;
    const double C138 = C152354 * C152290 - (bs[1] * C152268) / C152267;
    const double C340 = C152272 * C152278 * C152354;
    const double C342 = C152354 * C152275 - (bs[1] * C152268) / C152267;
    const double C569 = C152482 * C152278 * C152354;
    const double C571 = C152354 * C152530 - (bs[1] * C152268) / C152267;
    const double C1105 = C152482 * C152272 * C152354;
    const double C153638 = std::exp(C153637);
    const double C153676 = std::exp(C153675);
    const double C153695 = std::exp(C153694);
    const double C153711 = std::exp(C153710);
    const double C153810 = std::exp(C153809);
    const double C172 = C153792 * C161;
    const double C152056 = C152054 * C153792;
    const double C134 = -(2 * ae * be * (yA - yB) * C153792) / (ae + be);
    const double C135 =
        -((C153792 - (C152043 * 2 * C152044 * C152043 * C153792) / C152045) *
          2 * C152044) /
        C152045;
    const double C153846 = C153792 / C152085;
    const double C153848 = C153792 * C153845;
    const double C153855 = C153646 * C153792;
    const double C154038 = C153792 * C153847;
    const double C154071 = C154007 * C153792;
    const double C154069 = C153792 * C154031;
    const double C152134 = C152130 - C152116;
    const double C152137 = C152133 - C152115;
    const double C152284 = C152279 + C152283;
    const double C152361 = C152278 * C152279;
    const double C152526 = C152279 * ae;
    const double C152524 = C152272 * C152279;
    const double C152523 = C152279 * be;
    const double C139 =
        2 * C152278 * C152354 + C152278 * (C152354 + C152279 * C152290);
    const double C339 = C152272 * (C152354 + C152279 * C152290);
    const double C568 = C152482 * (C152354 + C152279 * C152290);
    const double C1375 =
        2 * C152272 * C152354 + C152272 * (C152354 + C152279 * C152275);
    const double C1948 = C152482 * (C152354 + C152279 * C152275);
    const double C2300 =
        2 * C152482 * C152354 + C152482 * (C152354 + C152279 * C152530);
    const double C7740 = 3 * (C152354 + C152279 * C152530) +
                         C152482 * (2 * C152482 * C152279 +
                                    C152482 * (C152279 + C152287 * C152530));
    const double C149 =
        (C152351 * C152352 * C152338 + C152358 * C152290) / C152045;
    const double C151 =
        (2 * C152278 * C152358 + C152278 * (C152358 + C152347 * C152290)) /
        C152045;
    const double C354 = (C152272 * (C152358 + C152347 * C152290) +
                         (C152354 + C152279 * C152290) * ae) /
                        C152045;
    const double C356 =
        (C152272 * C152278 * C152358 + C152278 * C152354 * ae) / C152045;
    const double C360 = (C152351 * C152352 * C152338 +
                         C152272 * (C152272 * C152358 + C152354 * ae) +
                         C152272 * C152354 * ae) /
                        C152045;
    const double C583 = (C152482 * (C152358 + C152347 * C152290)) / C152045;
    const double C585 = (C152482 * C152278 * C152358) / C152045;
    const double C589 =
        (C152351 * C152352 * C152338 + C152358 * C152530) / C152045;
    const double C1112 =
        (C152482 * (C152272 * C152358 + C152354 * ae)) / C152045;
    const double C2310 =
        (2 * C152482 * C152358 + C152482 * (C152358 + C152347 * C152530)) /
        C152045;
    const double C148 =
        (C152351 * C152352 * C152337 + C152357 * C152290) / C152045;
    const double C150 =
        (2 * C152278 * C152357 + C152278 * (C152357 + C152346 * C152290)) /
        C152045;
    const double C353 = (C152272 * (C152357 + C152346 * C152290) +
                         (C152354 + C152279 * C152290) * be) /
                        C152045;
    const double C355 =
        (C152272 * C152278 * C152357 + C152278 * C152354 * be) / C152045;
    const double C359 = (C152351 * C152352 * C152337 +
                         C152272 * (C152272 * C152357 + C152354 * be) +
                         C152272 * C152354 * be) /
                        C152045;
    const double C582 = (C152482 * (C152357 + C152346 * C152290)) / C152045;
    const double C584 = (C152482 * C152278 * C152357) / C152045;
    const double C588 =
        (C152351 * C152352 * C152337 + C152357 * C152530) / C152045;
    const double C1111 =
        (C152482 * (C152272 * C152357 + C152354 * be)) / C152045;
    const double C2309 =
        (2 * C152482 * C152357 + C152482 * (C152357 + C152346 * C152530)) /
        C152045;
    const double C176 = C153792 * C162;
    const double C152293 = C152287 + C152292;
    const double C152301 = C152296 + C152300;
    const double C152374 = C152296 * C152290;
    const double C152398 = C152278 * C152296;
    const double C152747 = C152296 * ae;
    const double C152743 = C152296 * C152275;
    const double C152742 = C152272 * C152296;
    const double C152741 = C152296 * be;
    const double C153595 = C152296 * C152530;
    const double C153619 = C152482 * C152296;
    const double C152366 = C152342 * C152290;
    const double C152375 = C152278 * C152342;
    const double C152553 = C152272 * C152342;
    const double C152737 = be * C152342;
    const double C152804 = C152482 * C152342;
    const double C153386 = C152342 * C152530;
    const double C7745 = (3 * (C152358 + C152347 * C152530) +
                          C152482 * (2 * C152482 * C152347 +
                                     C152482 * (C152347 + C152342 * C152530))) /
                         C152045;
    const double C152364 = C152341 * C152290;
    const double C152371 = C152278 * C152341;
    const double C152549 = C152272 * C152341;
    const double C152736 = ae * C152341;
    const double C152803 = C152482 * C152341;
    const double C153383 = C152341 * C152530;
    const double C7744 = (3 * (C152357 + C152346 * C152530) +
                          C152482 * (2 * C152482 * C152346 +
                                     C152482 * (C152346 + C152341 * C152530))) /
                         C152045;
    const double C152313 = C152307 + C152312;
    const double C152328 = C152322 + C152327;
    const double C152434 = C152322 * C152290;
    const double C152902 = C152278 * C152322;
    const double C153040 = C152322 * ae;
    const double C153032 = C152322 * C152275;
    const double C153031 = C152272 * C152322;
    const double C153030 = C152322 * be;
    const double C152411 = C152408 * C152290;
    const double C152437 = C152278 * C152408;
    const double C152847 = C152272 * C152408;
    const double C153024 = be * C152408;
    const double C153100 = C152408 * C152530;
    const double C153125 = C152482 * C152408;
    const double C152409 = C152404 * C152290;
    const double C152429 = C152278 * C152404;
    const double C152839 = C152272 * C152404;
    const double C153023 = ae * C152404;
    const double C153099 = C152404 * C152530;
    const double C153124 = C152482 * C152404;
    const double C152368 = C152279 + C152365;
    const double C152379 = 2 * C152373;
    const double C152518 = C152373 * ae;
    const double C152516 = C152272 * C152373;
    const double C152515 = C152373 * be;
    const double C152558 = C152279 + C152552;
    const double C152560 = C152551 * ae;
    const double C152557 = C152551 * be;
    const double C152744 = 2 * C152551;
    const double C153571 = C152279 + C153570;
    const double C153596 = 2 * C153594;
    const double C591 = (C152278 * C152358 + C152362 * C152530) / C152045;
    const double C590 = (C152278 * C152357 + C152360 * C152530) / C152045;
    const double C152555 = C152546 + C152547;
    const double C152406 = C152296 + C152399;
    const double C152441 = 2 * C152433;
    const double C152705 = C152433 * ae;
    const double C152701 = C152433 * C152275;
    const double C152700 = C152272 * C152433;
    const double C152699 = C152433 * be;
    const double C153602 = C152433 * C152530;
    const double C152854 = C152296 + C152842;
    const double C152856 = C152841 * ae;
    const double C152853 = C152841 * be;
    const double C153033 = 2 * C152841;
    const double C153612 = C152841 * C152530;
    const double C153622 = C152296 + C153620;
    const double C152388 = C152342 + C152385;
    const double C152407 = 2 * C152401;
    const double C152576 = C152272 * C152401;
    const double C152695 = be * C152401;
    const double C152795 = C152482 * C152401;
    const double C153380 = C152401 * C152530;
    const double C152961 = C152342 + C152958;
    const double C152989 = be * C152984;
    const double C153147 = 2 * C152984;
    const double C152386 = C152341 + C152383;
    const double C152403 = 2 * C152395;
    const double C152572 = C152272 * C152395;
    const double C152694 = ae * C152395;
    const double C152794 = C152482 * C152395;
    const double C153377 = C152395 * C152530;
    const double C152851 = C152834 + C152835;
    const double C152960 = C152341 + C152957;
    const double C152988 = ae * C152983;
    const double C153145 = 2 * C152983;
    const double C152450 = C152408 + C152447;
    const double C152916 = C152272 * C152907;
    const double C152448 = C152404 + C152445;
    const double C152912 = C152272 * C152901;
    const double C7760 = C153792 * C606;
    const double C153640 = C153638 * C153633;
    const double C153639 = C153638 / C152085;
    const double C153648 = C153646 * C153638;
    const double C154003 = C153638 * C153634;
    const double C154058 = C154007 * C153638;
    const double C154052 = C153638 * C154000;
    const double C153677 = C153676 * C153671;
    const double C153682 = C153681 * C153676;
    const double C154014 = C153676 * C153672;
    const double C154011 = C153676 / C153670;
    const double C1283 = C154019 * C153676;
    const double C153744 = C153695 * C153742;
    const double C153747 = C153681 * C153695;
    const double C154023 = C153695 * C153743;
    const double C154018 = C153695 / C153670;
    const double C334 = C154019 * C153695;
    const double C153772 = C153711 * C153770;
    const double C153775 = C153681 * C153711;
    const double C154027 = C153711 * C153771;
    const double C154020 = C153711 / C153670;
    const double C565 = C154019 * C153711;
    const double C153888 = C153810 / C152085;
    const double C153890 = C153810 * C153887;
    const double C153897 = C153646 * C153810;
    const double C154045 = C153810 * C153889;
    const double C154074 = C154007 * C153810;
    const double C154072 = C153810 * C154033;
    const double C152059 = 2 * C152056;
    const double C152113 = C152056 / C152053;
    const double C152157 = -4 * C152056;
    const double C2881 =
        ((0 * ae) / C152045 - C152056 / C152053) / (2 * C152045) +
        (0 * ae) / C152045;
    const double C11439 = (0 * ae) / C152045 - C152056 / C152053;
    const double C171 = C134 * C147;
    const double C169 = C134 * C146;
    const double C7759 = C134 * C587;
    const double C7757 = C134 * C586;
    const double C174 = C135 * C138;
    const double C170 = C135 * C137;
    const double C399 = C135 * C340;
    const double C628 = C135 * C569;
    const double C7764 = C135 * C571;
    const double C7758 = C135 * C570;
    const double C8579 = C135 * C1105;
    const double C24206 = (C153792 * std::pow(C153847, 2)) / C152053 + C153846;
    const double C153849 = C153848 * C153847;
    const double C153854 = C153848 / C152055;
    const double C154035 = C153848 / C152045;
    const double C154032 = C153646 * C153848;
    const double C153856 = C153855 * C153847;
    const double C154044 = C153855 / C152196;
    const double C154042 = C153845 * C153855;
    const double C154041 = 2 * C153855;
    const double C28426 = C153855 / C154010;
    const double C83602 = C153855 / C152085;
    const double C154076 = C154038 / C152045;
    const double C24207 = (-2 * C153646 * C154038) / C152045;
    const double C154096 = C154069 / C152053;
    const double C152139 = C152134 / C152085;
    const double C152138 = C152043 * C152134;
    const double C152156 = 2 * C152134;
    const double C152142 = C152137 + C152108;
    const double C152285 = C152284 * C152044;
    const double C361 =
        (C152278 * C152357 + C152272 * (C152272 * C152360 + C152361 * be) +
         C152272 * C152361 * be) /
        C152045;
    const double C362 =
        (C152278 * C152358 + C152272 * (C152272 * C152362 + C152361 * ae) +
         C152272 * C152361 * ae) /
        C152045;
    const double C1113 =
        (C152482 * (C152272 * C152360 + C152361 * be)) / C152045;
    const double C1114 =
        (C152482 * (C152272 * C152362 + C152361 * ae)) / C152045;
    const double C343 = C152278 * C152354 + C152361 * C152275;
    const double C572 = C152278 * C152354 + C152361 * C152530;
    const double C1106 = C152482 * C152272 * C152361;
    const double C1374 =
        2 * C152272 * C152361 + C152272 * (C152361 + C152373 * C152275);
    const double C1947 = C152482 * (C152361 + C152373 * C152275);
    const double C2299 =
        2 * C152482 * C152361 + C152482 * (C152361 + C152373 * C152530);
    const double C152528 = C152525 + C152526;
    const double C1517 = C152272 * C152354 + C152524 * C152530;
    const double C6368 =
        2 * C152482 * C152524 + C152482 * (C152524 + C152551 * C152530);
    const double C152527 = C152522 + C152523;
    const double C178 = C135 * C139;
    const double C395 = C135 * C339;
    const double C624 = C135 * C568;
    const double C9951 = C135 * C1948;
    const double C7778 = C135 * C2300;
    const double C10566 = C135 * C7740;
    const double C175 = C134 * C149;
    const double C179 = C134 * C151;
    const double C396 = C134 * C354;
    const double C400 = C134 * C356;
    const double C625 = C134 * C583;
    const double C629 = C134 * C585;
    const double C7765 = C134 * C589;
    const double C8580 = C134 * C1112;
    const double C7779 = C134 * C2310;
    const double C173 = C134 * C148;
    const double C177 = C134 * C150;
    const double C394 = C134 * C353;
    const double C398 = C134 * C355;
    const double C623 = C134 * C582;
    const double C627 = C134 * C584;
    const double C7763 = C134 * C588;
    const double C8578 = C134 * C1111;
    const double C7777 = C134 * C2309;
    const double C152294 = C152293 * C152044;
    const double C152302 = C152301 * C152044;
    const double C152380 = C152287 + C152374;
    const double C152405 = 2 * C152398;
    const double C152577 = C152398 * ae;
    const double C152575 = C152398 * C152275;
    const double C152574 = C152272 * C152398;
    const double C152573 = C152398 * be;
    const double C153567 = C152398 * C152530;
    const double C153601 = C152482 * C152398;
    const double C7741 = 3 * (C152361 + C152373 * C152530) +
                         C152482 * (2 * C152482 * C152373 +
                                    C152482 * (C152373 + C152398 * C152530));
    const double C152753 = C152746 + C152747;
    const double C152752 = C152287 + C152743;
    const double C152754 = C152742 * ae;
    const double C152751 = C152742 * be;
    const double C152843 = 2 * C152742;
    const double C153591 = C152742 * C152530;
    const double C153611 = C152482 * C152742;
    const double C9201 = 3 * (C152524 + C152551 * C152530) +
                         C152482 * (2 * C152482 * C152551 +
                                    C152482 * (C152551 + C152742 * C152530));
    const double C152750 = C152740 + C152741;
    const double C153597 = C152287 + C153595;
    const double C153621 = 2 * C153619;
    const double C152369 = C152347 + C152366;
    const double C152381 = 2 * C152375;
    const double C152517 = C152272 * C152375;
    const double C152570 = be * C152375;
    const double C2308 =
        (2 * C152482 * C152362 + C152482 * (C152362 + C152375 * C152530)) /
        C152045;
    const double C7747 = (3 * (C152362 + C152375 * C152530) +
                          C152482 * (2 * C152482 * C152375 +
                                     C152482 * (C152375 + C152401 * C152530))) /
                         C152045;
    const double C152559 = C152553 + C152554;
    const double C152807 = be * C152804;
    const double C153435 = 2 * C152804;
    const double C153387 = C152347 + C153386;
    const double C10567 = C134 * C7745;
    const double C152367 = C152346 + C152364;
    const double C152377 = 2 * C152371;
    const double C152514 = C152272 * C152371;
    const double C152569 = ae * C152371;
    const double C2307 =
        (2 * C152482 * C152360 + C152482 * (C152360 + C152371 * C152530)) /
        C152045;
    const double C7746 = (3 * (C152360 + C152371 * C152530) +
                          C152482 * (2 * C152482 * C152371 +
                                     C152482 * (C152371 + C152395 * C152530))) /
                         C152045;
    const double C152556 = C152549 + C152550;
    const double C152749 = C152736 + C152737;
    const double C152806 = ae * C152803;
    const double C153431 = 2 * C152803;
    const double C153384 = C152346 + C153383;
    const double C10565 = C134 * C7744;
    const double C152314 = C152313 * C152044;
    const double C152329 = C152328 * C152044;
    const double C152442 = C152307 + C152434;
    const double C152917 = C152902 * ae;
    const double C152915 = C152902 * C152275;
    const double C152914 = C152272 * C152902;
    const double C152913 = C152902 * be;
    const double C153048 = C153039 + C153040;
    const double C153047 = C152307 + C153032;
    const double C153049 = C153031 * ae;
    const double C153046 = C153031 * be;
    const double C153045 = C153029 + C153030;
    const double C152414 = C152382 + C152411;
    const double C152443 = 2 * C152437;
    const double C152704 = C152272 * C152437;
    const double C152897 = be * C152437;
    const double C152970 = C152437 * C152530;
    const double C153001 = C152482 * C152437;
    const double C152855 = C152847 + C152848;
    const double C153105 = C152382 + C153100;
    const double C153132 = be * C153125;
    const double C152412 = C152378 + C152409;
    const double C152439 = 2 * C152429;
    const double C152698 = C152272 * C152429;
    const double C152896 = ae * C152429;
    const double C152969 = C152429 * C152530;
    const double C153000 = C152482 * C152429;
    const double C152852 = C152839 + C152840;
    const double C153044 = C153023 + C153024;
    const double C153104 = C152378 + C153099;
    const double C153131 = ae * C153124;
    const double C140 = 3 * (C152354 + C152279 * C152290) +
                        C152278 * (2 * C152361 + C152278 * C152368);
    const double C338 = C152272 * (2 * C152361 + C152278 * C152368);
    const double C344 = C152354 + C152279 * C152290 + C152368 * C152275;
    const double C567 = C152482 * (2 * C152361 + C152278 * C152368);
    const double C573 = C152354 + C152279 * C152290 + C152368 * C152530;
    const double C1107 = C152482 * C152272 * C152368;
    const double C1516 = C152272 * C152361 + C152516 * C152530;
    const double C3189 = 3 * (C152354 + C152279 * C152275) +
                         C152272 * (2 * C152524 + C152272 * C152558);
    const double C3507 = C152354 + C152279 * C152275 + C152558 * C152530;
    const double C4379 = C152482 * (2 * C152524 + C152272 * C152558);
    const double C10553 =
        4 * (2 * C152482 * C152279 + C152482 * C153571) +
        C152482 *
            (3 * C153571 + C152482 * (2 * C152482 * C152287 +
                                      C152482 * (C152287 + C152296 * C152530)));
    const double C633 = C134 * C591;
    const double C631 = C134 * C590;
    const double C152410 = C152278 * C152406;
    const double C152432 = 3 * C152406;
    const double C152600 = C152406 * ae;
    const double C152598 = C152406 * C152275;
    const double C152597 = C152272 * C152406;
    const double C152596 = C152406 * be;
    const double C153564 = C152406 * C152530;
    const double C152710 = C152398 + C152701;
    const double C152712 = C152700 * ae;
    const double C152709 = C152700 * be;
    const double C152903 = 2 * C152700;
    const double C153608 = C152700 * C152530;
    const double C153604 = C152398 + C153602;
    const double C152864 = C152854 * ae;
    const double C152862 = C152272 * C152854;
    const double C152861 = C152854 * be;
    const double C153034 = 3 * C152854;
    const double C153588 = C152854 * C152530;
    const double C153614 = C152742 + C153612;
    const double C153623 = C152482 * C153622;
    const double C152390 = C152278 * C152388;
    const double C152400 = 3 * C152388;
    const double C152508 = C152272 * C152388;
    const double C152593 = be * C152388;
    const double C152798 = be * C152795;
    const double C153443 = 2 * C152795;
    const double C153381 = C152375 + C153380;
    const double C152964 = be * C152961;
    const double C153436 = C152482 * C152961;
    const double C153465 = 3 * C152961;
    const double C152389 = C152278 * C152386;
    const double C152394 = 3 * C152386;
    const double C152505 = C152272 * C152386;
    const double C152592 = ae * C152386;
    const double C152707 = C152694 + C152695;
    const double C152797 = ae * C152794;
    const double C153439 = 2 * C152794;
    const double C153378 = C152371 + C153377;
    const double C152963 = ae * C152960;
    const double C153432 = C152482 * C152960;
    const double C153461 = 3 * C152960;
    const double C152992 = C152988 + C152989;
    const double C152453 = C152278 * C152450;
    const double C152662 = C152272 * C152450;
    const double C152451 = C152278 * C152448;
    const double C152656 = C152272 * C152448;
    const double C153641 = C153640 * C153634;
    const double C153647 = C153640 / C152055;
    const double C154004 = C153646 * C153640;
    const double C154002 = C153640 / C152045;
    const double C2874 = (C153638 * std::pow(C153634, 2)) / C152053 + C153639;
    const double C153649 = C153648 * C153634;
    const double C154036 = C153648 / C152196;
    const double C154008 = C153633 * C153648;
    const double C154006 = 2 * C153648;
    const double C126 = C153648 / C154010;
    const double C83605 = C153648 / C152085;
    const double C154054 = C154003 / C152045;
    const double C2875 = (-2 * C153646 * C154003) / C152045;
    const double C154085 = C154052 / C152053;
    const double C154015 = C153677 / C153685;
    const double C154013 = C153677 / C153668;
    const double C154012 = C153677 * C153672;
    const double C1282 = (2 * C153681 * C153677) / C153668;
    const double C154016 = C153682 * C153672;
    const double C133 = C153682 / C154017;
    const double C796 = C153682 / C153670;
    const double C154061 = C154014 / C153668;
    const double C1281 = (C153676 * std::pow(C153671, 2)) / C153680 + C154011;
    const double C154025 = C153744 / C153685;
    const double C154024 = C153744 * C153743;
    const double C154021 = C153744 / C153668;
    const double C333 = (2 * C153681 * C153744) / C153668;
    const double C154026 = C153747 * C153743;
    const double C1369 = C153747 / C154017;
    const double C1657 = C153747 / C153670;
    const double C154063 = C154023 / C153668;
    const double C332 = (C153695 * std::pow(C153742, 2)) / C153680 + C154018;
    const double C154029 = C153772 / C153685;
    const double C154028 = C153772 * C153771;
    const double C154022 = C153772 / C153668;
    const double C564 = (2 * C153681 * C153772) / C153668;
    const double C154030 = C153775 * C153771;
    const double C2295 = C153775 / C154017;
    const double C2602 = C153775 / C153670;
    const double C154066 = C154027 / C153668;
    const double C563 = (C153711 * std::pow(C153770, 2)) / C153680 + C154020;
    const double C47632 = (C153810 * std::pow(C153889, 2)) / C152053 + C153888;
    const double C153891 = C153890 * C153889;
    const double C153896 = C153890 / C152055;
    const double C154037 = C153890 / C152045;
    const double C154034 = C153646 * C153890;
    const double C153898 = C153897 * C153889;
    const double C154051 = C153897 / C152196;
    const double C154049 = C153887 * C153897;
    const double C154048 = 2 * C153897;
    const double C55722 = C153897 / C154010;
    const double C116097 = C153897 / C152085;
    const double C154081 = C154045 / C152045;
    const double C47633 = (-2 * C153646 * C154045) / C152045;
    const double C154098 = C154072 / C152053;
    const double C152061 = C152043 * C152059;
    const double C24216 =
        ((-C152059 / C152045) / C152085 - (0 * be) / C152045) / C152085 -
        (0 * be) / C152045;
    const double C70502 = (-C152059 / C152045) / C152085 - (0 * be) / C152045;
    const double C152123 = C152119 - C152113;
    const double C152165 = C152157 / C152045;
    const double C11456 = C11439 * C354;
    const double C11454 = C11439 * C353;
    const double C11448 = C11439 * C356;
    const double C11446 = C11439 * C355;
    const double C19470 = C11439 * C1112;
    const double C19468 = C11439 * C1111;
    const double C193 = C169 - C170;
    const double C7799 = C7757 - C7758;
    const double C24234 = C24206 * C162;
    const double C24222 = C24206 * C161;
    const double C31190 = C24206 * C606;
    const double C153850 = C153849 / C152053;
    const double C11453 = C154035 * C162;
    const double C11445 = C154035 * C161;
    const double C19467 = C154035 * C606;
    const double C2877 =
        (((0 - (C152043 * C152052) / C152045) * ae) / C152045 -
         (0 * be) / C152055) /
            (2 * C152045) +
        ((C152043 *
              (((C153792 - (C152043 * 2 * C152056) / C152045) * ae) / C152045 -
               C152052 / C152055) +
          C154035) *
         ae) /
            C152045 +
        (0 * ae) / C152045 - C152056 / C152053;
    const double C154070 = 2 * C154032;
    const double C153857 = C153856 / C152045;
    const double C154079 = C154042 / C152055;
    const double C154100 = C154035 - C154076;
    const double C70494 = -C154076;
    const double C154109 = C154096 + C153846;
    const double C152143 = C152138 + 0;
    const double C152175 = C152172 + C152156;
    const double C152146 = C152142 / C152085;
    const double C163 =
        (2 * C152278 * C152285 +
         C152278 * (C152285 + (C152280 * C152281 +
                               C152275 * bs[5] * std::pow(C152274, 5)) *
                                  C152044 * std::pow(C152278, 2))) /
        C152053;
    const double C376 = (ae * C152278 * C152276 * C152273 * C152337 +
                         be * C152278 * C152276 * C152273 * C152338 +
                         C152272 * C152278 * C152285) /
                        C152053;
    const double C378 =
        ((C152354 + C152275 * C152273 * C152276) * C152044 +
         ae * (C152272 * C152357 + C152354 * be) +
         be * (C152272 * C152358 + C152354 * ae) +
         C152272 * (ae * C152357 + be * C152358 + C152272 * C152285)) /
        C152053;
    const double C605 = ((zP - zQ) * C152278 * C152285) / C152053;
    const double C607 = ((C152354 + C152275 * C152273 * C152276) * C152044 +
                         C152285 * std::pow(zP - zQ, 2)) /
                        C152053;
    const double C1123 = (ae * C152482 * C152357 + be * C152482 * C152358 +
                          C152272 * C152482 * C152285) /
                         C152053;
    const double C402 = C134 * C361;
    const double C2892 = C2881 * C361;
    const double C11726 = C11439 * C361;
    const double C404 = C134 * C362;
    const double C2894 = C2881 * C362;
    const double C11728 = C11439 * C362;
    const double C1130 = C134 * C1113;
    const double C12004 = C11439 * C1113;
    const double C1132 = C134 * C1114;
    const double C12006 = C11439 * C1114;
    const double C403 = C135 * C343;
    const double C632 = C135 * C572;
    const double C1131 = C135 * C1106;
    const double C7490 = C135 * C1947;
    const double C7774 = C135 * C2299;
    const double C1385 =
        (2 * (C152272 * C152358 + C152354 * ae) +
         C152272 * (C152358 + C152272 * C152528 + C152524 * ae) +
         (C152354 + C152279 * C152275) * ae) /
        C152045;
    const double C1527 =
        (C152272 * C152358 + C152354 * ae + C152528 * C152530) / C152045;
    const double C1958 =
        (C152482 * (C152358 + C152272 * C152528 + C152524 * ae)) / C152045;
    const double C8585 = C135 * C1517;
    const double C9213 = C135 * C6368;
    const double C1384 =
        (2 * (C152272 * C152357 + C152354 * be) +
         C152272 * (C152357 + C152272 * C152527 + C152524 * be) +
         (C152354 + C152279 * C152275) * be) /
        C152045;
    const double C1526 =
        (C152272 * C152357 + C152354 * be + C152527 * C152530) / C152045;
    const double C1957 =
        (C152482 * (C152357 + C152272 * C152527 + C152524 * be)) / C152045;
    const double C194 = C173 - C174;
    const double C195 = C177 - C178;
    const double C420 = C394 - C395;
    const double C421 = C398 - C399;
    const double C649 = C623 - C624;
    const double C650 = C627 - C628;
    const double C7800 = C7763 - C7764;
    const double C8604 = C8578 - C8579;
    const double C7803 = C7777 - C7778;
    const double C152513 = C152278 * C152294;
    const double C152548 = C152272 * C152294;
    const double C152642 = C152482 * C152294;
    const double C164 =
        (3 * (C152285 + C152294 * C152290) +
         C152278 *
             (2 * C152278 * C152294 +
              C152278 * (C152294 + (C152288 * C152289 +
                                    C152275 * bs[6] * std::pow(C152270, 6)) *
                                       C152044 * C152290))) /
        C152053;
    const double C375 =
        (ae * (C152276 * C152273 * C152337 + C152346 * C152290) +
         be * (C152276 * C152273 * C152338 + C152347 * C152290) +
         C152272 * (C152285 + C152294 * C152290)) /
        C152053;
    const double C379 =
        (C152278 * C152285 + ae * (C152272 * C152360 + C152361 * be) +
         be * (C152272 * C152362 + C152361 * ae) +
         C152272 *
             (ae * C152360 + be * C152362 + C152272 * C152278 * C152294)) /
        C152053;
    const double C604 = ((zP - zQ) * (C152285 + C152294 * C152290)) / C152053;
    const double C608 =
        (C152278 * C152285 + C152278 * C152294 * std::pow(zP - zQ, 2)) /
        C152053;
    const double C1124 = (ae * C152482 * C152360 + be * C152482 * C152362 +
                          C152272 * C152482 * C152278 * C152294) /
                         C152053;
    const double C1390 =
        (2 * (ae * C152357 + be * C152358 + C152272 * C152285) +
         ae * (C152357 + C152272 * C152527 + C152524 * be) +
         be * (C152358 + C152272 * C152528 + C152524 * ae) +
         C152272 *
             (C152285 + ae * C152527 + be * C152528 +
              C152272 * (ae * C152346 + be * C152347 + C152272 * C152294))) /
        C152053;
    const double C1532 = (ae * (C152357 + C152346 * C152530) +
                          be * (C152358 + C152347 * C152530) +
                          C152272 * (C152285 + C152294 * C152530)) /
                         C152053;
    const double C1963 =
        (C152482 * C152285 + ae * C152482 * C152527 + be * C152482 * C152528 +
         C152272 * (ae * C152482 * C152346 + be * C152482 * C152347 +
                    C152272 * C152482 * C152294)) /
        C152053;
    const double C2315 =
        (2 * C152482 * C152285 + C152482 * (C152285 + C152294 * C152530)) /
        C152053;
    const double C152303 = C152302 * C152290;
    const double C152306 = C152278 * C152302;
    const double C152738 = C152272 * C152302;
    const double C152782 = C152302 * C152530;
    const double C152805 = C152482 * C152302;
    const double C152384 = C152278 * C152380;
    const double C152397 = 3 * C152380;
    const double C152509 = C152380 * ae;
    const double C152507 = C152272 * C152380;
    const double C152506 = C152380 * be;
    const double C1373 =
        2 * C152272 * C152368 + C152272 * (C152368 + C152380 * C152275);
    const double C1946 = C152482 * (C152368 + C152380 * C152275);
    const double C2298 =
        2 * C152482 * C152368 + C152482 * (C152368 + C152380 * C152530);
    const double C7742 = 3 * (C152368 + C152380 * C152530) +
                         C152482 * (2 * C152482 * C152380 +
                                    C152482 * (C152380 + C152406 * C152530));
    const double C152582 = C152576 + C152577;
    const double C152581 = C152373 + C152575;
    const double C152583 = C152574 * ae;
    const double C152580 = C152574 * be;
    const double C152702 = 2 * C152574;
    const double C6366 =
        2 * C152482 * C152516 + C152482 * (C152516 + C152574 * C152530);
    const double C9200 = 3 * (C152516 + C152574 * C152530) +
                         C152482 * (2 * C152482 * C152574 +
                                    C152482 * (C152574 + C152700 * C152530));
    const double C152579 = C152572 + C152573;
    const double C153568 = C152373 + C153567;
    const double C153603 = 2 * C153601;
    const double C7782 = C135 * C7741;
    const double C152760 = C152272 * C152753;
    const double C152846 = 2 * C152753;
    const double C152833 = be * C152753;
    const double C152982 = C152482 * C152753;
    const double C153428 = C152753 * C152530;
    const double C152761 = C152752 * ae;
    const double C152759 = C152272 * C152752;
    const double C152758 = C152752 * be;
    const double C152844 = 3 * C152752;
    const double C6367 =
        2 * C152482 * C152558 + C152482 * (C152558 + C152752 * C152530);
    const double C31178 = 3 * (C152558 + C152752 * C152530) +
                          C152482 * (2 * C152482 * C152752 +
                                     C152482 * (C152752 + C152854 * C152530));
    const double C153592 = C152551 + C153591;
    const double C153613 = 2 * C153611;
    const double C56418 = C135 * C9201;
    const double C152757 = C152272 * C152750;
    const double C152838 = 2 * C152750;
    const double C152832 = ae * C152750;
    const double C152981 = C152482 * C152750;
    const double C153425 = C152750 * C152530;
    const double C153598 = C152482 * C153597;
    const double C153618 = 3 * C153597;
    const double C153 = (3 * (C152358 + C152347 * C152290) +
                         C152278 * (2 * C152362 + C152278 * C152369)) /
                        C152045;
    const double C352 = (C152272 * (2 * C152362 + C152278 * C152369) +
                         (2 * C152361 + C152278 * C152368) * ae) /
                        C152045;
    const double C364 = (C152358 + C152347 * C152290 +
                         C152272 * (C152272 * C152369 + C152368 * ae) +
                         C152272 * C152368 * ae) /
                        C152045;
    const double C581 = (C152482 * (2 * C152362 + C152278 * C152369)) / C152045;
    const double C593 =
        (C152358 + C152347 * C152290 + C152369 * C152530) / C152045;
    const double C1116 =
        (C152482 * (C152272 * C152369 + C152368 * ae)) / C152045;
    const double C2306 =
        (2 * C152482 * C152369 + C152482 * (C152369 + C152388 * C152530)) /
        C152045;
    const double C152520 = C152517 + C152518;
    const double C7775 = C134 * C2308;
    const double C7783 = C134 * C7747;
    const double C152563 = C152272 * C152559;
    const double C152745 = 2 * C152559;
    const double C152735 = be * C152559;
    const double C6380 =
        (2 * C152482 * C152528 + C152482 * (C152528 + C152559 * C152530)) /
        C152045;
    const double C9207 = (3 * (C152528 + C152559 * C152530) +
                          C152482 * (2 * C152482 * C152559 +
                                     C152482 * (C152559 + C152753 * C152530))) /
                         C152045;
    const double C10559 =
        (4 * (2 * C152482 * C152347 + C152482 * C153387) +
         C152482 *
             (3 * C153387 + C152482 * (2 * C152804 + C152482 * C152961))) /
        C152045;
    const double C152 = (3 * (C152357 + C152346 * C152290) +
                         C152278 * (2 * C152360 + C152278 * C152367)) /
                        C152045;
    const double C351 = (C152272 * (2 * C152360 + C152278 * C152367) +
                         (2 * C152361 + C152278 * C152368) * be) /
                        C152045;
    const double C363 = (C152357 + C152346 * C152290 +
                         C152272 * (C152272 * C152367 + C152368 * be) +
                         C152272 * C152368 * be) /
                        C152045;
    const double C580 = (C152482 * (2 * C152360 + C152278 * C152367)) / C152045;
    const double C592 =
        (C152357 + C152346 * C152290 + C152367 * C152530) / C152045;
    const double C1115 =
        (C152482 * (C152272 * C152367 + C152368 * be)) / C152045;
    const double C2305 =
        (2 * C152482 * C152367 + C152482 * (C152367 + C152386 * C152530)) /
        C152045;
    const double C152519 = C152514 + C152515;
    const double C152578 = C152569 + C152570;
    const double C7773 = C134 * C2307;
    const double C7781 = C134 * C7746;
    const double C152562 = C152272 * C152556;
    const double C152739 = 2 * C152556;
    const double C152734 = ae * C152556;
    const double C3519 =
        (C152285 + C152294 * C152530 + ae * (C152527 + C152556 * C152530) +
         be * (C152528 + C152559 * C152530) +
         C152272 * (ae * (C152346 + C152341 * C152530) +
                    be * (C152347 + C152342 * C152530) +
                    C152272 * (C152294 + C152302 * C152530))) /
        C152053;
    const double C6379 =
        (2 * C152482 * C152527 + C152482 * (C152527 + C152556 * C152530)) /
        C152045;
    const double C9206 = (3 * (C152527 + C152556 * C152530) +
                          C152482 * (2 * C152482 * C152556 +
                                     C152482 * (C152556 + C152750 * C152530))) /
                         C152045;
    const double C152809 = C152806 + C152807;
    const double C10558 =
        (4 * (2 * C152482 * C152346 + C152482 * C153384) +
         C152482 *
             (3 * C153384 + C152482 * (2 * C152803 + C152482 * C152960))) /
        C152045;
    const double C10572 = C10565 - C10566;
    const double C152315 = C152314 * C152290;
    const double C152321 = C152278 * C152314;
    const double C152836 = C152272 * C152314;
    const double C152959 = C152314 * C152530;
    const double C152985 = C152482 * C152314;
    const double C152330 = C152329 * C152290;
    const double C152898 = C152278 * C152329;
    const double C153025 = C152272 * C152329;
    const double C153101 = C152329 * C152530;
    const double C153126 = C152482 * C152329;
    const double C152446 = C152278 * C152442;
    const double C152663 = C152442 * ae;
    const double C152659 = C152442 * C152275;
    const double C152658 = C152272 * C152442;
    const double C152657 = C152442 * be;
    const double C152924 = C152916 + C152917;
    const double C152923 = C152433 + C152915;
    const double C152925 = C152914 * ae;
    const double C152922 = C152914 * be;
    const double C152921 = C152912 + C152913;
    const double C153057 = C152272 * C153048;
    const double C153058 = C153047 * ae;
    const double C153056 = C152272 * C153047;
    const double C153055 = C153047 * be;
    const double C153054 = C152272 * C153045;
    const double C152417 = C152278 * C152414;
    const double C152436 = 3 * C152414;
    const double C152599 = C152272 * C152414;
    const double C152653 = be * C152414;
    const double C152786 = C152482 * C152414;
    const double C153374 = C152414 * C152530;
    const double C7749 = (3 * (C152369 + C152388 * C152530) +
                          C152482 * (2 * C152482 * C152388 +
                                     C152482 * (C152388 + C152414 * C152530))) /
                         C152045;
    const double C152711 = C152704 + C152705;
    const double C152973 = C152401 + C152970;
    const double C153006 = be * C153001;
    const double C152863 = C152272 * C152855;
    const double C153038 = 2 * C152855;
    const double C153022 = be * C152855;
    const double C153098 = C152855 * C152530;
    const double C153123 = C152482 * C152855;
    const double C153110 = be * C153105;
    const double C153148 = C152482 * C153105;
    const double C152415 = C152278 * C152412;
    const double C152428 = 3 * C152412;
    const double C152595 = C152272 * C152412;
    const double C152652 = ae * C152412;
    const double C152785 = C152482 * C152412;
    const double C153371 = C152412 * C152530;
    const double C7748 = (3 * (C152367 + C152386 * C152530) +
                          C152482 * (2 * C152482 * C152386 +
                                     C152482 * (C152386 + C152412 * C152530))) /
                         C152045;
    const double C152708 = C152698 + C152699;
    const double C152910 = C152896 + C152897;
    const double C152972 = C152395 + C152969;
    const double C153005 = ae * C153000;
    const double C152860 = C152272 * C152852;
    const double C153028 = 2 * C152852;
    const double C153021 = ae * C152852;
    const double C153097 = C152852 * C152530;
    const double C153122 = C152482 * C152852;
    const double C153109 = ae * C153104;
    const double C153146 = C152482 * C153104;
    const double C153136 = C153131 + C153132;
    const double C182 = C135 * C140;
    const double C391 = C135 * C338;
    const double C407 = C135 * C344;
    const double C620 = C135 * C567;
    const double C636 = C135 * C573;
    const double C1135 = C135 * C1107;
    const double C7486 = C135 * C1516;
    const double C9957 = C135 * C3507;
    const double C55981 = C135 * C10553;
    const double C152413 = C152405 + C152410;
    const double C152604 = C152380 + C152598;
    const double C152606 = C152597 * ae;
    const double C152603 = C152597 * be;
    const double C152660 = 2 * C152597;
    const double C153565 = C152380 + C153564;
    const double C152719 = C152710 * ae;
    const double C152717 = C152272 * C152710;
    const double C152716 = C152710 * be;
    const double C152904 = 3 * C152710;
    const double C153609 = C152574 + C153608;
    const double C153605 = C152482 * C153604;
    const double C152867 = C152843 + C152862;
    const double C153589 = C152752 + C153588;
    const double C153615 = C152482 * C153614;
    const double C153624 = C153621 + C153623;
    const double C152392 = C152381 + C152390;
    const double C153437 = C153435 + C153436;
    const double C152391 = C152377 + C152389;
    const double C152601 = C152592 + C152593;
    const double C152800 = C152797 + C152798;
    const double C152966 = C152963 + C152964;
    const double C153433 = C153431 + C153432;
    const double C152456 = C152443 + C152453;
    const double C152454 = C152439 + C152451;
    const double C153642 = C153641 / C152053;
    const double C154055 = 2 * C154004;
    const double C153650 = C153649 / C152045;
    const double C154059 = C154008 / C152055;
    const double C154086 = C154002 - C154054;
    const double C74316 = -C154054;
    const double C154106 = C154085 + C153639;
    const double C154060 = C154012 / C153680;
    const double C154062 = C154016 / C153668;
    const double C335 = -C154061;
    const double C154064 = C154024 / C153680;
    const double C154065 = C154026 / C153668;
    const double C1279 = -C154063;
    const double C154067 = C154028 / C153680;
    const double C154068 = C154030 / C153668;
    const double C2086 = -C154066;
    const double C153892 = C153891 / C152053;
    const double C154073 = 2 * C154034;
    const double C153899 = C153898 / C152045;
    const double C154084 = C154049 / C152055;
    const double C154103 = C154037 - C154081;
    const double C98524 = -C154081;
    const double C154110 = C154098 + C153888;
    const double C152062 = C152061 / C152045;
    const double C24229 = C24216 * C362;
    const double C24227 = C24216 * C361;
    const double C70519 = C70502 * C354;
    const double C70517 = C70502 * C353;
    const double C70511 = C70502 * C356;
    const double C70509 = C70502 * C355;
    const double C70791 = C70502 * C362;
    const double C70789 = C70502 * C361;
    const double C71069 = C70502 * C1114;
    const double C71067 = C70502 * C1113;
    const double C78791 = C70502 * C1112;
    const double C78789 = C70502 * C1111;
    const double C152128 = C152043 * C152123;
    const double C152161 = 2 * C152123;
    const double C152190 = C152123 / C152085;
    const double C199 = C193 - C171;
    const double C7808 = C7799 - C7759;
    const double C153851 = C153846 - C153850;
    const double C2918 = C2877 * C151;
    const double C2916 = C2877 * C150;
    const double C2898 = C2877 * C149;
    const double C2896 = C2877 * C148;
    const double C2886 = C2877 * C147;
    const double C2884 = C2877 * C146;
    const double C3232 = C2877 * C362;
    const double C3230 = C2877 * C361;
    const double C3228 = C2877 * C356;
    const double C3226 = C2877 * C355;
    const double C3216 = C2877 * C354;
    const double C3214 = C2877 * C353;
    const double C3550 = C2877 * C591;
    const double C3548 = C2877 * C590;
    const double C3546 = C2877 * C585;
    const double C3544 = C2877 * C584;
    const double C3534 = C2877 * C583;
    const double C3532 = C2877 * C582;
    const double C4398 = C2877 * C1114;
    const double C4396 = C2877 * C1113;
    const double C52090 = C2877 * C2308;
    const double C52088 = C2877 * C2307;
    const double C52086 = C2877 * C2310;
    const double C52084 = C2877 * C2309;
    const double C52066 = C2877 * C589;
    const double C52064 = C2877 * C588;
    const double C52054 = C2877 * C587;
    const double C52052 = C2877 * C586;
    const double C52870 = C2877 * C1112;
    const double C52868 = C2877 * C1111;
    const double C54890 = C2877 * C7745;
    const double C54888 = C2877 * C7744;
    const double C154097 = C154070 / C152045;
    const double C153858 = C153854 - C153857;
    const double C154111 = C154100 / C152085;
    const double C70516 = C70494 * C162;
    const double C70508 = C70494 * C161;
    const double C78788 = C70494 * C606;
    const double C2899 = C154109 * C162;
    const double C2887 = C154109 * C161;
    const double C52055 = C154109 * C606;
    const double C152147 = C152143 * be;
    const double C152178 = C152175 * be;
    const double C180 = C153792 * C163;
    const double C2919 = C154109 * C163;
    const double C11461 = C154035 * C163;
    const double C24254 = C24206 * C163;
    const double C70524 = C70494 * C163;
    const double C401 = C153792 * C376;
    const double C3229 = C154109 * C376;
    const double C11449 = C153855 * C376;
    const double C11733 = C154035 * C376;
    const double C24226 = C24207 * C376;
    const double C24548 = C24206 * C376;
    const double C70512 = C153855 * C376;
    const double C70796 = C70494 * C376;
    const double C630 = C153792 * C605;
    const double C3547 = C154109 * C605;
    const double C12011 = C154035 * C605;
    const double C24850 = C24206 * C605;
    const double C71074 = C70494 * C605;
    const double C7766 = C153792 * C607;
    const double C19482 = C154035 * C607;
    const double C31202 = C24206 * C607;
    const double C52067 = C154109 * C607;
    const double C78797 = C70494 * C607;
    const double C8581 = C153792 * C1123;
    const double C19471 = C153855 * C1123;
    const double C20497 = C154035 * C1123;
    const double C31194 = C24207 * C1123;
    const double C32010 = C24206 * C1123;
    const double C52871 = C154109 * C1123;
    const double C78792 = C153855 * C1123;
    const double C79868 = C70494 * C1123;
    const double C422 = C402 - C403;
    const double C651 = C631 - C632;
    const double C1146 = C1130 - C1131;
    const double C8586 = C134 * C1527;
    const double C19477 = C11439 * C1527;
    const double C52882 = C2877 * C1527;
    const double C78800 = C70502 * C1527;
    const double C9952 = C134 * C1958;
    const double C20500 = C11439 * C1958;
    const double C31197 = C24216 * C1958;
    const double C52062 = C2881 * C1958;
    const double C54265 = C2877 * C1958;
    const double C79871 = C70502 * C1958;
    const double C8584 = C134 * C1526;
    const double C19475 = C11439 * C1526;
    const double C52880 = C2877 * C1526;
    const double C78798 = C70502 * C1526;
    const double C9950 = C134 * C1957;
    const double C20498 = C11439 * C1957;
    const double C31195 = C24216 * C1957;
    const double C52060 = C2881 * C1957;
    const double C54263 = C2877 * C1957;
    const double C79869 = C70502 * C1957;
    const double C200 = C194 - C175;
    const double C201 = C195 - C179;
    const double C428 = C420 - C396;
    const double C429 = C421 - C400;
    const double C657 = C649 - C625;
    const double C658 = C650 - C629;
    const double C7809 = C7800 - C7765;
    const double C8608 = C8604 - C8580;
    const double C7812 = C7803 - C7779;
    const double C152561 = C152555 + C152548;
    const double C184 = C153792 * C164;
    const double C2923 = C154109 * C164;
    const double C11473 = C154035 * C164;
    const double C24258 = C24206 * C164;
    const double C70536 = C70494 * C164;
    const double C397 = C153792 * C375;
    const double C3217 = C154109 * C375;
    const double C11457 = C153855 * C375;
    const double C11725 = C154035 * C375;
    const double C24238 = C24207 * C375;
    const double C24536 = C24206 * C375;
    const double C70520 = C153855 * C375;
    const double C70788 = C70494 * C375;
    const double C405 = C153792 * C379;
    const double C2895 = C154071 * C379;
    const double C3233 = C154109 * C379;
    const double C11737 = C154035 * C379;
    const double C11729 = C153855 * C379;
    const double C24230 = C154071 * C379;
    const double C24552 = C24206 * C379;
    const double C24544 = C24207 * C379;
    const double C70800 = C70494 * C379;
    const double C70792 = C153855 * C379;
    const double C83624 = C83602 * C379;
    const double C626 = C153792 * C604;
    const double C3535 = C154109 * C604;
    const double C12003 = C154035 * C604;
    const double C24838 = C24206 * C604;
    const double C71066 = C70494 * C604;
    const double C634 = C153792 * C608;
    const double C3551 = C154109 * C608;
    const double C12015 = C154035 * C608;
    const double C24854 = C24206 * C608;
    const double C71078 = C70494 * C608;
    const double C1133 = C153792 * C1124;
    const double C4399 = C154109 * C1124;
    const double C12007 = C153855 * C1124;
    const double C12753 = C154035 * C1124;
    const double C24846 = C24207 * C1124;
    const double C25686 = C24206 * C1124;
    const double C71070 = C153855 * C1124;
    const double C71816 = C70494 * C1124;
    const double C8587 = C153792 * C1532;
    const double C19478 = C153855 * C1532;
    const double C21316 = C154035 * C1532;
    const double C31206 = C24207 * C1532;
    const double C32022 = C24206 * C1532;
    const double C52883 = C154109 * C1532;
    const double C78801 = C153855 * C1532;
    const double C79877 = C70494 * C1532;
    const double C9953 = C153792 * C1963;
    const double C20501 = C153855 * C1963;
    const double C22296 = C154035 * C1963;
    const double C31198 = C154071 * C1963;
    const double C32014 = C24207 * C1963;
    const double C33409 = C24206 * C1963;
    const double C52063 = C154071 * C1963;
    const double C54266 = C154109 * C1963;
    const double C79872 = C153855 * C1963;
    const double C81672 = C70494 * C1963;
    const double C93778 = C83602 * C1963;
    const double C7780 = C153792 * C2315;
    const double C23084 = C154035 * C2315;
    const double C31222 = C24206 * C2315;
    const double C52087 = C154109 * C2315;
    const double C78818 = C70494 * C2315;
    const double C152304 = C152294 + C152303;
    const double C152310 = 2 * C152306;
    const double C152571 = C152272 * C152306;
    const double C152644 = C152482 * C152306;
    const double C1531 = (ae * (C152360 + C152371 * C152530) +
                          be * (C152362 + C152375 * C152530) +
                          C152272 * (C152513 + C152306 * C152530)) /
                         C152053;
    const double C2314 =
        (2 * C152482 * C152513 + C152482 * (C152513 + C152306 * C152530)) /
        C152053;
    const double C152756 = C152749 + C152738;
    const double C152783 = C152294 + C152782;
    const double C152808 = C152272 * C152805;
    const double C153160 = 2 * C152805;
    const double C152387 = C152379 + C152384;
    const double C152511 = C152508 + C152509;
    const double C1515 = C152272 * C152368 + C152507 * C152530;
    const double C6364 =
        2 * C152482 * C152507 + C152482 * (C152507 + C152597 * C152530);
    const double C152510 = C152505 + C152506;
    const double C7494 = C135 * C1946;
    const double C7770 = C135 * C2298;
    const double C7786 = C135 * C7742;
    const double C152586 = C152272 * C152582;
    const double C152703 = 2 * C152582;
    const double C152693 = be * C152582;
    const double C3190 = 3 * (C152361 + C152373 * C152275) +
                         C152272 * (2 * C152516 + C152272 * C152581);
    const double C3508 = C152361 + C152373 * C152275 + C152581 * C152530;
    const double C4380 = C152482 * (2 * C152516 + C152272 * C152581);
    const double C6365 =
        2 * C152482 * C152581 + C152482 * (C152581 + C152710 * C152530);
    const double C8591 = C135 * C6366;
    const double C56425 = C135 * C9200;
    const double C152585 = C152272 * C152579;
    const double C152697 = 2 * C152579;
    const double C152692 = ae * C152579;
    const double C10552 =
        4 * (2 * C152482 * C152373 + C152482 * C153568) +
        C152482 *
            (3 * C153568 + C152482 * (2 * C152482 * C152398 +
                                      C152482 * (C152398 + C152433 * C152530)));
    const double C152765 = C152342 + C152760;
    const double C152987 = be * C152982;
    const double C153457 = 2 * C152982;
    const double C153429 = C152559 + C153428;
    const double C152764 = C152744 + C152759;
    const double C57183 = C135 * C6367;
    const double C57187 = C135 * C31178;
    const double C34030 =
        4 * (2 * C152482 * C152551 + C152482 * C153592) +
        C152482 *
            (3 * C153592 + C152482 * (2 * C152482 * C152742 +
                                      C152482 * (C152742 + C152841 * C152530)));
    const double C152763 = C152341 + C152757;
    const double C152850 = C152302 + C152832;
    const double C152986 = ae * C152981;
    const double C153453 = 2 * C152981;
    const double C153426 = C152556 + C153425;
    const double C153599 = C153596 + C153598;
    const double C183 = C134 * C153;
    const double C2922 = C2877 * C153;
    const double C392 = C134 * C352;
    const double C3829 = C2877 * C352;
    const double C11464 = C11439 * C352;
    const double C70527 = C70502 * C352;
    const double C408 = C134 * C364;
    const double C2906 = C2881 * C364;
    const double C3244 = C2877 * C364;
    const double C11720 = C11439 * C364;
    const double C24241 = C24216 * C364;
    const double C70783 = C70502 * C364;
    const double C621 = C134 * C581;
    const double C4070 = C2877 * C581;
    const double C637 = C134 * C593;
    const double C3562 = C2877 * C593;
    const double C1136 = C134 * C1116;
    const double C4410 = C2877 * C1116;
    const double C11998 = C11439 * C1116;
    const double C71061 = C70502 * C1116;
    const double C7771 = C134 * C2306;
    const double C1383 =
        (2 * (C152272 * C152362 + C152361 * ae) +
         C152272 * (C152362 + C152272 * C152520 + C152516 * ae) +
         (C152361 + C152373 * C152275) * ae) /
        C152045;
    const double C1525 =
        (C152272 * C152362 + C152361 * ae + C152520 * C152530) / C152045;
    const double C1956 =
        (C152482 * (C152362 + C152272 * C152520 + C152516 * ae)) / C152045;
    const double C6376 =
        (2 * C152482 * C152520 + C152482 * (C152520 + C152582 * C152530)) /
        C152045;
    const double C152565 = C152347 + C152563;
    const double C9214 = C134 * C6380;
    const double C23087 = C11439 * C6380;
    const double C53515 = C2877 * C6380;
    const double C78813 = C70502 * C6380;
    const double C56419 = C134 * C9207;
    const double C62289 = C11439 * C9207;
    const double C82479 = C70502 * C9207;
    const double C55982 = C134 * C10559;
    const double C181 = C134 * C152;
    const double C2920 = C2877 * C152;
    const double C390 = C134 * C351;
    const double C3827 = C2877 * C351;
    const double C11462 = C11439 * C351;
    const double C70525 = C70502 * C351;
    const double C406 = C134 * C363;
    const double C2904 = C2881 * C363;
    const double C3242 = C2877 * C363;
    const double C11718 = C11439 * C363;
    const double C24239 = C24216 * C363;
    const double C70781 = C70502 * C363;
    const double C619 = C134 * C580;
    const double C4068 = C2877 * C580;
    const double C635 = C134 * C592;
    const double C3560 = C2877 * C592;
    const double C1134 = C134 * C1115;
    const double C4408 = C2877 * C1115;
    const double C11996 = C11439 * C1115;
    const double C71059 = C70502 * C1115;
    const double C7769 = C134 * C2305;
    const double C1389 =
        (2 * (ae * C152360 + be * C152362 + C152272 * C152513) +
         ae * (C152360 + C152272 * C152519 + C152516 * be) +
         be * (C152362 + C152272 * C152520 + C152516 * ae) +
         C152272 *
             (C152513 + ae * C152519 + be * C152520 +
              C152272 * (ae * C152371 + be * C152375 + C152272 * C152306))) /
        C152053;
    const double C1962 =
        (C152482 * C152513 + ae * C152482 * C152519 + be * C152482 * C152520 +
         C152272 * (ae * C152482 * C152371 + be * C152482 * C152375 +
                    C152272 * C152482 * C152306)) /
        C152053;
    const double C1382 =
        (2 * (C152272 * C152360 + C152361 * be) +
         C152272 * (C152360 + C152272 * C152519 + C152516 * be) +
         (C152361 + C152373 * C152275) * be) /
        C152045;
    const double C1524 =
        (C152272 * C152360 + C152361 * be + C152519 * C152530) / C152045;
    const double C1955 =
        (C152482 * (C152360 + C152272 * C152519 + C152516 * be)) / C152045;
    const double C6375 =
        (2 * C152482 * C152519 + C152482 * (C152519 + C152579 * C152530)) /
        C152045;
    const double C7802 = C7773 - C7774;
    const double C7804 = C7781 - C7782;
    const double C152564 = C152346 + C152562;
    const double C152748 = C152294 + C152734;
    const double C9959 = C153792 * C3519;
    const double C21320 = C153855 * C3519;
    const double C31210 = C154071 * C3519;
    const double C32026 = C24207 * C3519;
    const double C33421 = C24206 * C3519;
    const double C52075 = C154071 * C3519;
    const double C54278 = C154109 * C3519;
    const double C61496 = C154035 * C3519;
    const double C79881 = C153855 * C3519;
    const double C81680 = C70494 * C3519;
    const double C93784 = C83602 * C3519;
    const double C9212 = C134 * C6379;
    const double C23085 = C11439 * C6379;
    const double C53513 = C2877 * C6379;
    const double C78811 = C70502 * C6379;
    const double C56417 = C134 * C9206;
    const double C62287 = C11439 * C9206;
    const double C82477 = C70502 * C9206;
    const double C55980 = C134 * C10558;
    const double C10573 = C10572 - C10567;
    const double C152316 = C152302 + C152315;
    const double C152325 = 2 * C152321;
    const double C152696 = C152272 * C152321;
    const double C152779 = C152321 * C152530;
    const double C152796 = C152482 * C152321;
    const double C3520 =
        (C152513 + C152306 * C152530 + ae * (C152519 + C152579 * C152530) +
         be * (C152520 + C152582 * C152530) +
         C152272 * (ae * (C152371 + C152395 * C152530) +
                    be * (C152375 + C152401 * C152530) +
                    C152272 * (C152306 + C152321 * C152530))) /
        C152053;
    const double C152859 = C152851 + C152836;
    const double C152962 = C152302 + C152959;
    const double C152990 = C152272 * C152985;
    const double C153149 = 2 * C152985;
    const double C152331 = C152314 + C152330;
    const double C152911 = C152272 * C152898;
    const double C152971 = C152898 * C152530;
    const double C153002 = C152482 * C152898;
    const double C153053 = C153044 + C153025;
    const double C153106 = C152314 + C153101;
    const double C153133 = C152272 * C153126;
    const double C152449 = C152441 + C152446;
    const double C152669 = C152662 + C152663;
    const double C152668 = C152406 + C152659;
    const double C152670 = C152658 * ae;
    const double C152667 = C152658 * be;
    const double C9199 = 3 * (C152507 + C152597 * C152530) +
                         C152482 * (2 * C152482 * C152597 +
                                    C152482 * (C152597 + C152658 * C152530));
    const double C152666 = C152656 + C152657;
    const double C152930 = C152272 * C152924;
    const double C152931 = C152923 * ae;
    const double C152929 = C152272 * C152923;
    const double C152928 = C152923 * be;
    const double C31179 = 3 * (C152581 + C152710 * C152530) +
                          C152482 * (2 * C152482 * C152710 +
                                     C152482 * (C152710 + C152923 * C152530));
    const double C152927 = C152272 * C152921;
    const double C153062 = C152408 + C153057;
    const double C153061 = C153033 + C153056;
    const double C153060 = C152404 + C153054;
    const double C152420 = C152407 + C152417;
    const double C152605 = C152599 + C152600;
    const double C152789 = be * C152786;
    const double C153375 = C152388 + C153374;
    const double C7787 = C134 * C7749;
    const double C152718 = C152272 * C152711;
    const double C152906 = 2 * C152711;
    const double C152895 = be * C152711;
    const double C152999 = C152482 * C152711;
    const double C153450 = C152711 * C152530;
    const double C9205 = (3 * (C152520 + C152582 * C152530) +
                          C152482 * (2 * C152482 * C152582 +
                                     C152482 * (C152582 + C152711 * C152530))) /
                         C152045;
    const double C152976 = be * C152973;
    const double C153444 = C152482 * C152973;
    const double C10557 =
        (4 * (2 * C152482 * C152375 + C152482 * C153381) +
         C152482 *
             (3 * C153381 + C152482 * (2 * C152795 + C152482 * C152973))) /
        C152045;
    const double C152868 = C152382 + C152863;
    const double C153103 = C152753 + C153098;
    const double C153130 = be * C153123;
    const double C153152 = C153147 + C153148;
    const double C152418 = C152403 + C152415;
    const double C152602 = C152595 + C152596;
    const double C152665 = C152652 + C152653;
    const double C152788 = ae * C152785;
    const double C153372 = C152386 + C153371;
    const double C7785 = C134 * C7748;
    const double C152715 = C152272 * C152708;
    const double C152900 = 2 * C152708;
    const double C152894 = ae * C152708;
    const double C152998 = C152482 * C152708;
    const double C153447 = C152708 * C152530;
    const double C9204 = (3 * (C152519 + C152579 * C152530) +
                          C152482 * (2 * C152482 * C152579 +
                                     C152482 * (C152579 + C152708 * C152530))) /
                         C152045;
    const double C152975 = ae * C152972;
    const double C153440 = C152482 * C152972;
    const double C10556 =
        (4 * (2 * C152482 * C152371 + C152482 * C153378) +
         C152482 *
             (3 * C153378 + C152482 * (2 * C152794 + C152482 * C152972))) /
        C152045;
    const double C153009 = C153005 + C153006;
    const double C152866 = C152378 + C152860;
    const double C153043 = C152314 + C153021;
    const double C153102 = C152750 + C153097;
    const double C153129 = ae * C153122;
    const double C153113 = C153109 + C153110;
    const double C153151 = C153145 + C153146;
    const double C152416 = C152278 * C152413;
    const double C152431 = 4 * C152413;
    const double C152501 = C152413 * ae;
    const double C152499 = C152272 * C152413;
    const double C152498 = C152413 * be;
    const double C3191 = 3 * (C152368 + C152380 * C152275) +
                         C152272 * (2 * C152507 + C152272 * C152604);
    const double C3509 = C152368 + C152380 * C152275 + C152604 * C152530;
    const double C4381 = C152482 * (2 * C152507 + C152272 * C152604);
    const double C10551 =
        4 * (2 * C152482 * C152380 + C152482 * C153565) +
        C152482 *
            (3 * C153565 + C152482 * (2 * C152482 * C152406 +
                                      C152482 * (C152406 + C152442 * C152530)));
    const double C152722 = C152702 + C152717;
    const double C56409 =
        4 * (2 * C152482 * C152574 + C152482 * C153609) +
        C152482 *
            (3 * C153609 + C152482 * (2 * C152482 * C152700 +
                                      C152482 * (C152700 + C152914 * C152530)));
    const double C153606 = C153603 + C153605;
    const double C152874 = C152867 * ae;
    const double C152872 = C152272 * C152867;
    const double C152871 = C152867 * be;
    const double C153035 = 4 * C152867;
    const double C34029 =
        4 * (2 * C152482 * C152752 + C152482 * C153589) +
        C152482 *
            (3 * C153589 + C152482 * (2 * C152482 * C152854 +
                                      C152482 * (C152854 + C153047 * C152530)));
    const double C153616 = C153613 + C153615;
    const double C153625 = C152482 * C153624;
    const double C155 = (4 * (2 * C152362 + C152278 * C152369) +
                         C152278 * (3 * C152369 + C152278 * C152392)) /
                        C152045;
    const double C579 = (C152482 * (3 * C152369 + C152278 * C152392)) / C152045;
    const double C595 =
        (2 * C152362 + C152278 * C152369 + C152392 * C152530) / C152045;
    const double C154 = (4 * (2 * C152360 + C152278 * C152367) +
                         C152278 * (3 * C152367 + C152278 * C152391)) /
                        C152045;
    const double C578 = (C152482 * (3 * C152367 + C152278 * C152391)) / C152045;
    const double C594 =
        (2 * C152360 + C152278 * C152367 + C152391 * C152530) / C152045;
    const double C152459 = C152278 * C152456;
    const double C152622 = C152272 * C152456;
    const double C152457 = C152278 * C152454;
    const double C152618 = C152272 * C152454;
    const double C153643 = C153639 - C153642;
    const double C154087 = C154055 / C152045;
    const double C153651 = C153647 - C153650;
    const double C154107 = C154086 / C152085;
    const double C154090 = C154011 - C154060;
    const double C154091 = C154015 - C154062;
    const double C154092 = C154018 - C154064;
    const double C154093 = C154025 - C154065;
    const double C154094 = C154020 - C154067;
    const double C154095 = C154029 - C154068;
    const double C153893 = C153888 - C153892;
    const double C154099 = C154073 / C152045;
    const double C153900 = C153896 - C153899;
    const double C154113 = C154103 / C152085;
    const double C152063 = C153792 - C152062;
    const double C152132 = C152128 + C153855;
    const double C152193 = C152190 - C152192;
    const double C205 = C199 + C172;
    const double C7817 = C7808 + C7760;
    const double C83652 = C153851 * C164;
    const double C83648 = C153851 * C163;
    const double C83628 = C153851 * C162;
    const double C83616 = C153851 * C161;
    const double C83946 = C153851 * C379;
    const double C83942 = C153851 * C376;
    const double C83930 = C153851 * C375;
    const double C84248 = C153851 * C608;
    const double C84244 = C153851 * C605;
    const double C84232 = C153851 * C604;
    const double C85080 = C153851 * C1124;
    const double C93792 = C153851 * C607;
    const double C93770 = C153851 * C606;
    const double C94809 = C153851 * C1123;
    const double C95629 = C153851 * C1532;
    const double C96616 = C153851 * C1963;
    const double C97411 = C153851 * C2315;
    const double C150689 = C153851 * C3519;
    const double C154039 = C153851 * C153845;
    const double C154078 = C154041 + C153851;
    const double C2903 = C154097 * C375;
    const double C2891 = C154097 * C376;
    const double C3225 = C154097 * C379;
    const double C3543 = C154097 * C1124;
    const double C52071 = C154097 * C1532;
    const double C52059 = C154097 * C1123;
    const double C52887 = C154097 * C3519;
    const double C52875 = C154097 * C1963;
    const double C83632 = C153858 * C375;
    const double C83620 = C153858 * C376;
    const double C83938 = C153858 * C379;
    const double C84240 = C153858 * C1124;
    const double C93788 = C153858 * C1532;
    const double C93774 = C153858 * C1123;
    const double C94813 = C153858 * C1963;
    const double C95633 = C153858 * C3519;
    const double C154043 = C153858 / C152085;
    const double C154040 = C153858 * C153845;
    const double C34917 = C154111 - (C153851 * C153847) / C152045;
    const double C152149 = C152147 / C152045;
    const double C152181 = C152178 / C152045;
    const double C430 = C422 - C404;
    const double C659 = C651 - C633;
    const double C1150 = C1146 - C1132;
    const double C8605 = C8584 - C8585;
    const double C9962 = C9950 - C9951;
    const double C206 = C200 + C176;
    const double C207 = C201 + C180;
    const double C437 = C429 + C401;
    const double C666 = C658 + C630;
    const double C7818 = C7809 + C7766;
    const double C8612 = C8608 + C8581;
    const double C436 = C428 + C397;
    const double C665 = C657 + C626;
    const double C7821 = C7812 + C7780;
    const double C165 =
        (4 * (2 * C152278 * C152294 + C152278 * C152304) +
         C152278 * (3 * C152304 +
                    C152278 * (2 * C152278 * C152302 +
                               C152278 * (C152302 + (C152297 * C152298 +
                                                     C152275 * bs[7] *
                                                         std::pow(C152274, 7)) *
                                                        C152044 * C152290)))) /
        C152053;
    const double C374 =
        (ae *
             (2 * C152278 * C152346 + C152278 * (C152346 + C152341 * C152290)) +
         be *
             (2 * C152278 * C152347 + C152278 * (C152347 + C152342 * C152290)) +
         C152272 * (2 * C152278 * C152294 + C152278 * C152304)) /
        C152053;
    const double C380 =
        (C152285 + C152294 * C152290 + ae * (C152272 * C152367 + C152368 * be) +
         be * (C152272 * C152369 + C152368 * ae) +
         C152272 * (ae * C152367 + be * C152369 + C152272 * C152304)) /
        C152053;
    const double C603 =
        ((zP - zQ) * (2 * C152278 * C152294 + C152278 * C152304)) / C152053;
    const double C609 =
        (C152285 + C152294 * C152290 + C152304 * std::pow(zP - zQ, 2)) /
        C152053;
    const double C1125 = (ae * C152482 * C152367 + be * C152482 * C152369 +
                          C152272 * C152482 * C152304) /
                         C152053;
    const double C152584 = C152578 + C152571;
    const double C3555 = C154097 * C1531;
    const double C7488 = C153792 * C1531;
    const double C12019 = C153855 * C1531;
    const double C20507 = C154035 * C1531;
    const double C24858 = C24207 * C1531;
    const double C32034 = C24206 * C1531;
    const double C52895 = C154109 * C1531;
    const double C71082 = C153855 * C1531;
    const double C78460 = C70494 * C1531;
    const double C84252 = C153858 * C1531;
    const double C94822 = C153851 * C1531;
    const double C7776 = C153792 * C2314;
    const double C19489 = C154035 * C2314;
    const double C31226 = C24206 * C2314;
    const double C52091 = C154109 * C2314;
    const double C78810 = C70494 * C2314;
    const double C93798 = C153851 * C2314;
    const double C152762 = C152272 * C152756;
    const double C152829 = 2 * C152756;
    const double C6385 =
        (2 * C152642 + C152482 * C152783 +
         ae *
             (2 * C152482 * C152556 + C152482 * (C152556 + C152750 * C152530)) +
         be *
             (2 * C152482 * C152559 + C152482 * (C152559 + C152753 * C152530)) +
         C152272 *
             (ae * (2 * C152803 + C152482 * (C152341 + C152378 * C152530)) +
              be * (2 * C152804 + C152482 * (C152342 + C152382 * C152530)) +
              C152272 *
                  (2 * C152805 + C152482 * (C152302 + C152314 * C152530)))) /
        C152053;
    const double C6386 =
        (ae *
             (2 * C152482 * C152346 + C152482 * (C152346 + C152341 * C152530)) +
         be *
             (2 * C152482 * C152347 + C152482 * (C152347 + C152342 * C152530)) +
         C152272 * (2 * C152642 + C152482 * C152783)) /
        C152053;
    const double C7752 = (3 * (C152285 + C152294 * C152530) +
                          C152482 * (2 * C152642 + C152482 * C152783)) /
                         C152053;
    const double C9210 =
        (ae * (3 * (C152346 + C152341 * C152530) +
               C152482 *
                   (2 * C152803 + C152482 * (C152341 + C152378 * C152530))) +
         be * (3 * (C152347 + C152342 * C152530) +
               C152482 *
                   (2 * C152804 + C152482 * (C152342 + C152382 * C152530))) +
         C152272 * (3 * C152783 +
                    C152482 * (2 * C152805 +
                               C152482 * (C152302 + C152314 * C152530)))) /
        C152053;
    const double C10562 =
        (4 * (2 * C152642 + C152482 * C152783) +
         C152482 * (3 * C152783 +
                    C152482 * (2 * C152805 +
                               C152482 * (C152302 + C152314 * C152530)))) /
        C152053;
    const double C152810 = C152809 + C152808;
    const double C349 = (C152272 * (3 * C152367 + C152278 * C152391) +
                         (3 * C152368 + C152278 * C152387) * be) /
                        C152045;
    const double C350 = (C152272 * (3 * C152369 + C152278 * C152392) +
                         (3 * C152368 + C152278 * C152387) * ae) /
                        C152045;
    const double C365 = (2 * C152360 + C152278 * C152367 +
                         C152272 * (C152272 * C152391 + C152387 * be) +
                         C152272 * C152387 * be) /
                        C152045;
    const double C366 = (2 * C152362 + C152278 * C152369 +
                         C152272 * (C152272 * C152392 + C152387 * ae) +
                         C152272 * C152387 * ae) /
                        C152045;
    const double C1117 =
        (C152482 * (C152272 * C152391 + C152387 * be)) / C152045;
    const double C1118 =
        (C152482 * (C152272 * C152392 + C152387 * ae)) / C152045;
    const double C141 = 4 * (2 * C152361 + C152278 * C152368) +
                        C152278 * (3 * C152368 + C152278 * C152387);
    const double C337 = C152272 * (3 * C152368 + C152278 * C152387);
    const double C345 = 2 * C152361 + C152278 * C152368 + C152387 * C152275;
    const double C566 = C152482 * (3 * C152368 + C152278 * C152387);
    const double C574 = 2 * C152361 + C152278 * C152368 + C152387 * C152530;
    const double C1108 = C152482 * C152272 * C152387;
    const double C1372 =
        2 * C152272 * C152387 + C152272 * (C152387 + C152413 * C152275);
    const double C1945 = C152482 * (C152387 + C152413 * C152275);
    const double C2297 =
        2 * C152482 * C152387 + C152482 * (C152387 + C152413 * C152530);
    const double C1381 =
        (2 * (C152272 * C152369 + C152368 * ae) +
         C152272 * (C152369 + C152272 * C152511 + C152507 * ae) +
         (C152368 + C152380 * C152275) * ae) /
        C152045;
    const double C1523 =
        (C152272 * C152369 + C152368 * ae + C152511 * C152530) / C152045;
    const double C1954 =
        (C152482 * (C152369 + C152272 * C152511 + C152507 * ae)) / C152045;
    const double C7482 = C135 * C1515;
    const double C8595 = C135 * C6364;
    const double C1380 =
        (2 * (C152272 * C152367 + C152368 * be) +
         C152272 * (C152367 + C152272 * C152510 + C152507 * be) +
         (C152368 + C152380 * C152275) * be) /
        C152045;
    const double C1522 =
        (C152272 * C152367 + C152368 * be + C152510 * C152530) / C152045;
    const double C1953 =
        (C152482 * (C152367 + C152272 * C152510 + C152507 * be)) / C152045;
    const double C152588 = C152375 + C152586;
    const double C7498 = C135 * C3508;
    const double C63594 = C135 * C6365;
    const double C152587 = C152371 + C152585;
    const double C152706 = C152306 + C152692;
    const double C55989 = C135 * C10552;
    const double C152768 = C152765 + C152754;
    const double C4803 = 4 * (2 * C152524 + C152272 * C152558) +
                         C152272 * (3 * C152558 + C152272 * C152764);
    const double C5033 = 2 * C152524 + C152272 * C152558 + C152764 * C152530;
    const double C5771 = C152482 * (3 * C152558 + C152272 * C152764);
    const double C30183 =
        2 * C152482 * C152764 + C152482 * (C152764 + C152867 * C152530);
    const double C56767 = C135 * C34030;
    const double C152767 = C152763 + C152751;
    const double C152858 = C152850 + C152833;
    const double C152991 = C152805 + C152986;
    const double C55967 =
        5 * (3 * C153571 + C152482 * C153599) +
        C152482 *
            (4 * C153599 +
             C152482 * (3 * C153597 +
                        C152482 * (2 * C152482 * C152296 +
                                   C152482 * (C152296 + C152307 * C152530))));
    const double C3220 = C2881 * C1383;
    const double C11740 = C11439 * C1383;
    const double C24539 = C24216 * C1383;
    const double C70803 = C70502 * C1383;
    const double C7487 = C134 * C1525;
    const double C12018 = C11439 * C1525;
    const double C52894 = C2877 * C1525;
    const double C71081 = C70502 * C1525;
    const double C3538 = C2881 * C1956;
    const double C7491 = C134 * C1956;
    const double C12756 = C11439 * C1956;
    const double C24841 = C24216 * C1956;
    const double C71819 = C70502 * C1956;
    const double C102415 = C2877 * C1956;
    const double C8592 = C134 * C6376;
    const double C19492 = C11439 * C6376;
    const double C78805 = C70502 * C6376;
    const double C152567 = C152565 + C152560;
    const double C196 = C181 - C182;
    const double C419 = C390 - C391;
    const double C423 = C406 - C407;
    const double C648 = C619 - C620;
    const double C652 = C635 - C636;
    const double C1147 = C1134 - C1135;
    const double C7801 = C7769 - C7770;
    const double C3237 = C154097 * C1389;
    const double C3221 = C154071 * C1389;
    const double C11741 = C153855 * C1389;
    const double C24556 = C24207 * C1389;
    const double C24540 = C154071 * C1389;
    const double C34947 = C154044 * C1389;
    const double C70804 = C153855 * C1389;
    const double C74342 = C154044 * C1389;
    const double C83950 = C153858 * C1389;
    const double C83934 = C83602 * C1389;
    const double C3539 = C154071 * C1962;
    const double C4403 = C154097 * C1962;
    const double C7492 = C153792 * C1962;
    const double C12757 = C153855 * C1962;
    const double C19149 = C154035 * C1962;
    const double C24842 = C154071 * C1962;
    const double C25690 = C24207 * C1962;
    const double C39061 = C24206 * C1962;
    const double C71820 = C153855 * C1962;
    const double C78464 = C70494 * C1962;
    const double C84236 = C83602 * C1962;
    const double C85084 = C153858 * C1962;
    const double C93459 = C153851 * C1962;
    const double C102416 = C154109 * C1962;
    const double C3218 = C2881 * C1382;
    const double C11738 = C11439 * C1382;
    const double C24537 = C24216 * C1382;
    const double C70801 = C70502 * C1382;
    const double C7485 = C134 * C1524;
    const double C12016 = C11439 * C1524;
    const double C52892 = C2877 * C1524;
    const double C71079 = C70502 * C1524;
    const double C3536 = C2881 * C1955;
    const double C7489 = C134 * C1955;
    const double C12754 = C11439 * C1955;
    const double C24839 = C24216 * C1955;
    const double C71817 = C70502 * C1955;
    const double C102413 = C2877 * C1955;
    const double C8590 = C134 * C6375;
    const double C19490 = C11439 * C6375;
    const double C78803 = C70502 * C6375;
    const double C7811 = C7802 - C7775;
    const double C7813 = C7804 - C7783;
    const double C152566 = C152564 + C152557;
    const double C152755 = C152748 + C152735;
    const double C9219 = C9212 - C9213;
    const double C56428 = C56417 - C56418;
    const double C55992 = C55980 - C55981;
    const double C152317 = C152278 * C152316;
    const double C152320 = 3 * C152316;
    const double C152594 = C152272 * C152316;
    const double C152646 = C152482 * C152316;
    const double C1388 =
        (2 * (ae * C152367 + be * C152369 + C152272 * C152304) +
         ae * (C152367 + C152272 * C152510 + C152507 * be) +
         be * (C152369 + C152272 * C152511 + C152507 * ae) +
         C152272 *
             (C152304 + ae * C152510 + be * C152511 +
              C152272 * (ae * C152386 + be * C152388 + C152272 * C152316))) /
        C152053;
    const double C1530 = (ae * (C152367 + C152386 * C152530) +
                          be * (C152369 + C152388 * C152530) +
                          C152272 * (C152304 + C152316 * C152530)) /
                         C152053;
    const double C1961 =
        (C152482 * C152304 + ae * C152482 * C152510 + be * C152482 * C152511 +
         C152272 * (ae * C152482 * C152386 + be * C152482 * C152388 +
                    C152272 * C152482 * C152316)) /
        C152053;
    const double C2313 =
        (2 * C152482 * C152304 + C152482 * (C152304 + C152316 * C152530)) /
        C152053;
    const double C152714 = C152707 + C152696;
    const double C152780 = C152306 + C152779;
    const double C152799 = C152272 * C152796;
    const double C153166 = 2 * C152796;
    const double C3559 = C154071 * C3520;
    const double C7500 = C153792 * C3520;
    const double C20511 = C153855 * C3520;
    const double C24862 = C154071 * C3520;
    const double C32038 = C24207 * C3520;
    const double C52899 = C154097 * C3520;
    const double C58429 = C154035 * C3520;
    const double C78472 = C70494 * C3520;
    const double C78456 = C153855 * C3520;
    const double C84256 = C83602 * C3520;
    const double C94826 = C153858 * C3520;
    const double C152865 = C152272 * C152859;
    const double C153018 = 2 * C152859;
    const double C152965 = C152272 * C152962;
    const double C153161 = C152482 * C152962;
    const double C153170 = 3 * C152962;
    const double C152994 = C152992 + C152990;
    const double C152332 = C152278 * C152331;
    const double C152654 = C152272 * C152331;
    const double C152776 = C152331 * C152530;
    const double C152787 = C152482 * C152331;
    const double C152920 = C152910 + C152911;
    const double C152974 = C152321 + C152971;
    const double C153007 = C152272 * C153002;
    const double C153059 = C152272 * C153053;
    const double C153111 = C152272 * C153106;
    const double C153150 = C152482 * C153106;
    const double C153139 = C153136 + C153133;
    const double C152452 = C152278 * C152449;
    const double C152623 = C152449 * ae;
    const double C152621 = C152449 * C152275;
    const double C152620 = C152272 * C152449;
    const double C152619 = C152449 * be;
    const double C7743 = 3 * (C152387 + C152413 * C152530) +
                         C152482 * (2 * C152482 * C152413 +
                                    C152482 * (C152413 + C152449 * C152530));
    const double C152676 = C152272 * C152669;
    const double C152677 = C152668 * ae;
    const double C152675 = C152272 * C152668;
    const double C152674 = C152668 * be;
    const double C6363 =
        2 * C152482 * C152604 + C152482 * (C152604 + C152668 * C152530);
    const double C152673 = C152272 * C152666;
    const double C152935 = C152437 + C152930;
    const double C152934 = C152903 + C152929;
    const double C152933 = C152429 + C152927;
    const double C153067 = C153062 + C153049;
    const double C153068 = C153061 * ae;
    const double C153066 = C152272 * C153061;
    const double C153065 = C153061 * be;
    const double C32651 = 3 * (C152764 + C152867 * C152530) +
                          C152482 * (2 * C152482 * C152867 +
                                     C152482 * (C152867 + C153061 * C152530));
    const double C153064 = C153060 + C153046;
    const double C152422 = C152278 * C152420;
    const double C152435 = 4 * C152420;
    const double C152500 = C152272 * C152420;
    const double C152616 = be * C152420;
    const double C2304 =
        (2 * C152482 * C152392 + C152482 * (C152392 + C152420 * C152530)) /
        C152045;
    const double C7751 = (3 * (C152392 + C152420 * C152530) +
                          C152482 * (2 * C152482 * C152420 +
                                     C152482 * (C152420 + C152456 * C152530))) /
                         C152045;
    const double C152609 = C152272 * C152605;
    const double C152661 = 2 * C152605;
    const double C152651 = be * C152605;
    const double C6372 =
        (2 * C152482 * C152511 + C152482 * (C152511 + C152605 * C152530)) /
        C152045;
    const double C9203 = (3 * (C152511 + C152605 * C152530) +
                          C152482 * (2 * C152482 * C152605 +
                                     C152482 * (C152605 + C152669 * C152530))) /
                         C152045;
    const double C10555 =
        (4 * (2 * C152482 * C152388 + C152482 * C153375) +
         C152482 * (3 * C153375 +
                    C152482 * (2 * C152786 +
                               C152482 * (C152414 + C152450 * C152530)))) /
        C152045;
    const double C152723 = C152401 + C152718;
    const double C153004 = be * C152999;
    const double C153451 = C152582 + C153450;
    const double C56426 = C134 * C9205;
    const double C58740 = C11439 * C9205;
    const double C78827 = C70502 * C9205;
    const double C153445 = C153443 + C153444;
    const double C55990 = C134 * C10557;
    const double C152873 = C152868 + C152856;
    const double C153108 = be * C153103;
    const double C153458 = C152482 * C153103;
    const double C34034 =
        (4 * (2 * C152482 * C152559 + C152482 * C153429) +
         C152482 *
             (3 * C153429 + C152482 * (2 * C152982 + C152482 * C153103))) /
        C152045;
    const double C153155 = be * C153152;
    const double C153466 = C152482 * C153152;
    const double C55970 =
        (5 * (3 * C153387 + C152482 * C153437) +
         C152482 *
             (4 * C153437 + C152482 * (3 * C152961 + C152482 * C153152))) /
        C152045;
    const double C152421 = C152278 * C152418;
    const double C152427 = 4 * C152418;
    const double C152497 = C152272 * C152418;
    const double C152615 = ae * C152418;
    const double C2303 =
        (2 * C152482 * C152391 + C152482 * (C152391 + C152418 * C152530)) /
        C152045;
    const double C7750 = (3 * (C152391 + C152418 * C152530) +
                          C152482 * (2 * C152482 * C152418 +
                                     C152482 * (C152418 + C152454 * C152530))) /
                         C152045;
    const double C152608 = C152272 * C152602;
    const double C152655 = 2 * C152602;
    const double C152650 = ae * C152602;
    const double C3521 =
        (C152304 + C152316 * C152530 + ae * (C152510 + C152602 * C152530) +
         be * (C152511 + C152605 * C152530) +
         C152272 * (ae * (C152386 + C152412 * C152530) +
                    be * (C152388 + C152414 * C152530) +
                    C152272 * (C152316 + C152331 * C152530))) /
        C152053;
    const double C6371 =
        (2 * C152482 * C152510 + C152482 * (C152510 + C152602 * C152530)) /
        C152045;
    const double C9202 = (3 * (C152510 + C152602 * C152530) +
                          C152482 * (2 * C152482 * C152602 +
                                     C152482 * (C152602 + C152666 * C152530))) /
                         C152045;
    const double C152791 = C152788 + C152789;
    const double C10554 =
        (4 * (2 * C152482 * C152386 + C152482 * C153372) +
         C152482 * (3 * C153372 +
                    C152482 * (2 * C152785 +
                               C152482 * (C152412 + C152448 * C152530)))) /
        C152045;
    const double C7805 = C7785 - C7786;
    const double C152721 = C152395 + C152715;
    const double C152909 = C152321 + C152894;
    const double C153003 = ae * C152998;
    const double C153448 = C152579 + C153447;
    const double C56424 = C134 * C9204;
    const double C58738 = C11439 * C9204;
    const double C78825 = C70502 * C9204;
    const double C152978 = C152975 + C152976;
    const double C153441 = C153439 + C153440;
    const double C55988 = C134 * C10556;
    const double C152870 = C152866 + C152853;
    const double C153052 = C153043 + C153022;
    const double C153107 = ae * C153102;
    const double C153454 = C152482 * C153102;
    const double C34033 =
        (4 * (2 * C152482 * C152556 + C152482 * C153426) +
         C152482 *
             (3 * C153426 + C152482 * (2 * C152981 + C152482 * C153102))) /
        C152045;
    const double C153135 = C152985 + C153129;
    const double C153154 = ae * C153151;
    const double C153462 = C152482 * C153151;
    const double C55969 =
        (5 * (3 * C153384 + C152482 * C153433) +
         C152482 *
             (4 * C153433 + C152482 * (3 * C152960 + C152482 * C153151))) /
        C152045;
    const double C152419 = C152397 + C152416;
    const double C1514 = C152272 * C152387 + C152499 * C152530;
    const double C7502 = C135 * C3509;
    const double C4802 = 4 * (2 * C152516 + C152272 * C152581) +
                         C152272 * (3 * C152581 + C152272 * C152722);
    const double C5032 = 2 * C152516 + C152272 * C152581 + C152722 * C152530;
    const double C5770 = C152482 * (3 * C152581 + C152272 * C152722);
    const double C55968 =
        5 * (3 * C153568 + C152482 * C153606) +
        C152482 *
            (4 * C153606 +
             C152482 * (3 * C153604 +
                        C152482 * (2 * C152482 * C152433 +
                                   C152482 * (C152433 + C152902 * C152530))));
    const double C152877 = C152844 + C152872;
    const double C56761 =
        5 * (3 * C153592 + C152482 * C153616) +
        C152482 *
            (4 * C153616 +
             C152482 * (3 * C153614 +
                        C152482 * (2 * C152482 * C152841 +
                                   C152482 * (C152841 + C153031 * C152530))));
    const double C153626 = C153618 + C153625;
    const double C187 = C134 * C155;
    const double C617 = C134 * C579;
    const double C641 = C134 * C595;
    const double C185 = C134 * C154;
    const double C615 = C134 * C578;
    const double C639 = C134 * C594;
    const double C152462 = C152436 + C152459;
    const double C152460 = C152428 + C152457;
    const double C154001 = C153643 * C153633;
    const double C154057 = C154006 + C153643;
    const double C154009 = C153651 / C152085;
    const double C154005 = C153651 * C153633;
    const double C11433 = C154107 - (C153643 * C153634) / C152045;
    const double C130 =
        (C154090 * C153671) / C153668 + (C154013 - C154061) / C153670;
    const double C131 =
        (C154091 * C153671) / C153668 + (2 * C153682 + C154090) / C153670;
    const double C132 = (C153671 * C153682) / C153685 + C154091 / C153670;
    const double C1366 =
        (C154092 * C153742) / C153668 + (C154021 - C154063) / C153670;
    const double C1367 =
        (C154093 * C153742) / C153668 + (2 * C153747 + C154092) / C153670;
    const double C1368 = (C153742 * C153747) / C153685 + C154093 / C153670;
    const double C2292 =
        (C154094 * C153770) / C153668 + (C154022 - C154066) / C153670;
    const double C2293 =
        (C154095 * C153770) / C153668 + (2 * C153775 + C154094) / C153670;
    const double C2294 = (C153770 * C153775) / C153685 + C154095 / C153670;
    const double C154046 = C153893 * C153887;
    const double C154083 = C154048 + C153893;
    const double C154050 = C153900 / C152085;
    const double C154047 = C153900 * C153887;
    const double C63394 = C154113 - (C153893 * C153889) / C152045;
    const double C152064 = C152063 * C152060;
    const double C152110 = C152063 * ae;
    const double C2879 =
        ((C152063 * ae) / C152045 - C152052 / C152055) / (2 * C152045) +
        ((C152043 * ((0 * ae) / C152045 - C152056 / C152053) + C153855) * ae) /
            C152045;
    const double C11437 = (C152063 * ae) / C152045 - C152052 / C152055;
    const double C24212 =
        ((-(0 * be) / C152045) / C152085 -
         ((0 - (C152043 * C152052) / C152045) * be) / C152045) /
            C152085 -
        ((C152043 *
              ((-C152052 / C152045) / C152085 - (C152063 * be) / C152045) +
          C70494) *
         be) /
            C152045 +
        (-C152059 / C152045) / C152085 - (0 * be) / C152045;
    const double C24214 =
        ((-C152052 / C152045) / C152085 - (C152063 * be) / C152045) / C152085 -
        ((C152043 * ((-C152059 / C152045) / C152085 - (0 * be) / C152045) +
          C153855) *
         be) /
            C152045;
    const double C70500 = (-C152108) / C152085 - (C152063 * be) / C152045;
    const double C152136 = C152132 * be;
    const double C83635 = C152193 * C364;
    const double C83633 = C152193 * C363;
    const double C83623 = C152193 * C362;
    const double C83621 = C152193 * C361;
    const double C83933 = C152193 * C1383;
    const double C83931 = C152193 * C1382;
    const double C84235 = C152193 * C1956;
    const double C84233 = C152193 * C1955;
    const double C93777 = C152193 * C1958;
    const double C93775 = C152193 * C1957;
    const double C152197 = 2 * C152193;
    const double C28436 =
        (C152193 / C152085 + (0 * ae) / C152045) / C152085 - (0 * be) / C152045;
    const double C34929 = C152193 / C152085 - (0 * be) / C152045;
    const double C74324 = C152193 / C152085 + (0 * ae) / C152045;
    const double C7825 = C7817 * C2874;
    const double C48072 = C7817 * C154106;
    const double C55976 = C7817 * C153638;
    const double C63794 = C7817 * C154002;
    const double C107704 = C7817 * C74316;
    const double C116535 = C7817 * C153643;
    const double C154075 = C154039 / C152045;
    const double C154101 = C154078 / C152085;
    const double C154102 = C154079 + C154043;
    const double C34919 = C154043 - C153856 / C152055;
    const double C154077 = C154040 / C152045;
    const double C34967 = C34917 * C163;
    const double C34963 = C34917 * C162;
    const double C34935 = C34917 * C161;
    const double C35229 = C34917 * C379;
    const double C35225 = C34917 * C376;
    const double C35479 = C34917 * C608;
    const double C35475 = C34917 * C605;
    const double C35713 = C34917 * C375;
    const double C35935 = C34917 * C604;
    const double C36221 = C34917 * C1124;
    const double C44376 = C34917 * C607;
    const double C44348 = C34917 * C606;
    const double C45050 = C34917 * C1123;
    const double C45596 = C34917 * C1532;
    const double C46270 = C34917 * C1963;
    const double C46816 = C34917 * C2315;
    const double C152150 = C152146 - C152149;
    const double C152183 = C152167 - C152181;
    const double C438 = C430 + C405;
    const double C667 = C659 + C634;
    const double C1154 = C1150 + C1133;
    const double C8609 = C8605 - C8586;
    const double C9964 = C9962 - C9952;
    const double C7789 = C666 * C2874;
    const double C7761 = C666 * C2875;
    const double C48081 = C666 * C154106;
    const double C48073 = C666 * C154087;
    const double C55984 = C666 * C153638;
    const double C63802 = C666 * C154002;
    const double C63795 = C666 * C153648;
    const double C107712 = C666 * C74316;
    const double C107705 = C666 * C153648;
    const double C116544 = C666 * C153643;
    const double C116536 = C666 * C153651;
    const double C7826 = C7818 * C2874;
    const double C48075 = C7818 * C154106;
    const double C55977 = C7818 * C153638;
    const double C63796 = C7818 * C154002;
    const double C107706 = C7818 * C74316;
    const double C116538 = C7818 * C153643;
    const double C8616 = C8612 * C2874;
    const double C48826 = C8612 * C154106;
    const double C56414 = C8612 * C153638;
    const double C64466 = C8612 * C154002;
    const double C108376 = C8612 * C74316;
    const double C117289 = C8612 * C153643;
    const double C7790 = C665 * C2875;
    const double C7762 = C665 * C154058;
    const double C8278 = C665 * C2874;
    const double C48082 = C665 * C154087;
    const double C48074 = C665 * C154058;
    const double C48530 = C665 * C154106;
    const double C56244 = C665 * C153638;
    const double C63803 = C665 * C153648;
    const double C64202 = C665 * C154002;
    const double C107713 = C665 * C153648;
    const double C108112 = C665 * C74316;
    const double C116545 = C665 * C153651;
    const double C116537 = C665 * C83605;
    const double C116993 = C665 * C153643;
    const double C7829 = C7821 * C2874;
    const double C48080 = C7821 * C154106;
    const double C55978 = C7821 * C153638;
    const double C63798 = C7821 * C154002;
    const double C107708 = C7821 * C74316;
    const double C116543 = C7821 * C153643;
    const double C188 = C153792 * C165;
    const double C11477 = C154035 * C165;
    const double C70540 = C70494 * C165;
    const double C393 = C153792 * C374;
    const double C2915 = C154097 * C374;
    const double C3830 = C154109 * C374;
    const double C11465 = C153855 * C374;
    const double C11717 = C154035 * C374;
    const double C24250 = C24207 * C374;
    const double C25133 = C24206 * C374;
    const double C70528 = C153855 * C374;
    const double C70780 = C70494 * C374;
    const double C83644 = C153858 * C374;
    const double C84527 = C153851 * C374;
    const double C409 = C153792 * C380;
    const double C2907 = C154071 * C380;
    const double C3245 = C154109 * C380;
    const double C3213 = C154097 * C380;
    const double C11745 = C154035 * C380;
    const double C11721 = C153855 * C380;
    const double C24242 = C154071 * C380;
    const double C24564 = C24206 * C380;
    const double C24532 = C24207 * C380;
    const double C70808 = C70494 * C380;
    const double C70784 = C153855 * C380;
    const double C83636 = C83602 * C380;
    const double C83958 = C153851 * C380;
    const double C83926 = C153858 * C380;
    const double C622 = C153792 * C603;
    const double C4071 = C154109 * C603;
    const double C11995 = C154035 * C603;
    const double C25374 = C24206 * C603;
    const double C71058 = C70494 * C603;
    const double C84768 = C153851 * C603;
    const double C638 = C153792 * C609;
    const double C3563 = C154109 * C609;
    const double C12023 = C154035 * C609;
    const double C24866 = C24206 * C609;
    const double C71086 = C70494 * C609;
    const double C84260 = C153851 * C609;
    const double C1137 = C153792 * C1125;
    const double C3531 = C154097 * C1125;
    const double C4411 = C154109 * C1125;
    const double C11999 = C153855 * C1125;
    const double C12761 = C154035 * C1125;
    const double C24834 = C24207 * C1125;
    const double C25698 = C24206 * C1125;
    const double C71062 = C153855 * C1125;
    const double C71824 = C70494 * C1125;
    const double C84228 = C153858 * C1125;
    const double C85092 = C153851 * C1125;
    const double C31214 = C154071 * C6385;
    const double C32663 = C24207 * C6385;
    const double C52079 = C154071 * C6385;
    const double C53520 = C154097 * C6385;
    const double C57185 = C153792 * C6385;
    const double C60516 = C153855 * C6385;
    const double C69173 = C154035 * C6385;
    const double C80692 = C153855 * C6385;
    const double C97419 = C83602 * C6385;
    const double C136398 = C70494 * C6385;
    const double C149943 = C153858 * C6385;
    const double C9215 = C153792 * C6386;
    const double C23088 = C153855 * C6386;
    const double C31218 = C24207 * C6386;
    const double C32659 = C24206 * C6386;
    const double C52083 = C154097 * C6386;
    const double C53516 = C154109 * C6386;
    const double C60512 = C154035 * C6386;
    const double C78814 = C153855 * C6386;
    const double C80688 = C70494 * C6386;
    const double C97415 = C153858 * C6386;
    const double C149939 = C153851 * C6386;
    const double C10568 = C153792 * C7752;
    const double C34042 = C24206 * C7752;
    const double C54891 = C154109 * C7752;
    const double C62286 = C154035 * C7752;
    const double C82476 = C70494 * C7752;
    const double C151293 = C153851 * C7752;
    const double C34046 = C24207 * C9210;
    const double C54895 = C154097 * C9210;
    const double C56420 = C153792 * C9210;
    const double C62290 = C153855 * C9210;
    const double C68510 = C154035 * C9210;
    const double C82480 = C153855 * C9210;
    const double C135735 = C70494 * C9210;
    const double C151297 = C153858 * C9210;
    const double C55983 = C153792 * C10562;
    const double C69707 = C154035 * C10562;
    const double C136932 = C70494 * C10562;
    const double C386 = C134 * C349;
    const double C11466 = C11439 * C349;
    const double C70529 = C70502 * C349;
    const double C388 = C134 * C350;
    const double C11468 = C11439 * C350;
    const double C70531 = C70502 * C350;
    const double C410 = C134 * C365;
    const double C2908 = C2881 * C365;
    const double C11710 = C11439 * C365;
    const double C24243 = C24216 * C365;
    const double C70773 = C70502 * C365;
    const double C83637 = C152193 * C365;
    const double C412 = C134 * C366;
    const double C2910 = C2881 * C366;
    const double C11712 = C11439 * C366;
    const double C24245 = C24216 * C366;
    const double C70775 = C70502 * C366;
    const double C83639 = C152193 * C366;
    const double C1138 = C134 * C1117;
    const double C11988 = C11439 * C1117;
    const double C71051 = C70502 * C1117;
    const double C1140 = C134 * C1118;
    const double C11990 = C11439 * C1118;
    const double C71053 = C70502 * C1118;
    const double C186 = C135 * C141;
    const double C387 = C135 * C337;
    const double C411 = C135 * C345;
    const double C616 = C135 * C566;
    const double C640 = C135 * C574;
    const double C1139 = C135 * C1108;
    const double C15447 = C135 * C1945;
    const double C7796 = C135 * C2297;
    const double C3208 = C2881 * C1381;
    const double C11748 = C11439 * C1381;
    const double C24527 = C24216 * C1381;
    const double C70811 = C70502 * C1381;
    const double C83921 = C152193 * C1381;
    const double C7483 = C134 * C1523;
    const double C12026 = C11439 * C1523;
    const double C71089 = C70502 * C1523;
    const double C3526 = C2881 * C1954;
    const double C7495 = C134 * C1954;
    const double C12764 = C11439 * C1954;
    const double C24829 = C24216 * C1954;
    const double C71827 = C70502 * C1954;
    const double C84223 = C152193 * C1954;
    const double C3206 = C2881 * C1380;
    const double C11746 = C11439 * C1380;
    const double C24525 = C24216 * C1380;
    const double C70809 = C70502 * C1380;
    const double C83919 = C152193 * C1380;
    const double C7481 = C134 * C1522;
    const double C12024 = C11439 * C1522;
    const double C71087 = C70502 * C1522;
    const double C3524 = C2881 * C1953;
    const double C7493 = C134 * C1953;
    const double C12762 = C11439 * C1953;
    const double C24827 = C24216 * C1953;
    const double C71825 = C70502 * C1953;
    const double C84221 = C152193 * C1953;
    const double C152590 = C152588 + C152583;
    const double C152589 = C152587 + C152580;
    const double C152713 = C152706 + C152693;
    const double C152770 = C152272 * C152768;
    const double C152845 = 3 * C152768;
    const double C152831 = be * C152768;
    const double C152769 = C152272 * C152767;
    const double C152837 = 3 * C152767;
    const double C152830 = ae * C152767;
    const double C152993 = C152991 + C152987;
    const double C57529 = C135 * C55967;
    const double C3194 =
        (3 * (C152358 + C152272 * C152528 + C152524 * ae) +
         C152272 * (2 * C152528 + C152272 * C152567 + C152558 * ae) +
         (2 * C152524 + C152272 * C152558) * ae) /
        C152045;
    const double C3512 =
        (C152358 + C152272 * C152528 + C152524 * ae + C152567 * C152530) /
        C152045;
    const double C4384 =
        (C152482 * (2 * C152528 + C152272 * C152567 + C152558 * ae)) / C152045;
    const double C6378 =
        (2 * C152482 * C152567 + C152482 * (C152567 + C152768 * C152530)) /
        C152045;
    const double C202 = C196 - C183;
    const double C427 = C419 - C392;
    const double C431 = C423 - C408;
    const double C656 = C648 - C621;
    const double C660 = C652 - C637;
    const double C1151 = C1147 - C1136;
    const double C7810 = C7801 - C7771;
    const double C7506 = C7485 - C7486;
    const double C7507 = C7489 - C7490;
    const double C8606 = C8590 - C8591;
    const double C7820 = C7811 + C7776;
    const double C3201 =
        (3 * (C152285 + ae * C152527 + be * C152528 + C152272 * C152561) +
         ae * (2 * C152527 + C152272 * C152566 + C152558 * be) +
         be * (2 * C152528 + C152272 * C152567 + C152558 * ae) +
         C152272 * (2 * C152561 + ae * C152566 + be * C152567 +
                    C152272 * (C152294 + ae * C152556 + be * C152559 +
                               C152272 * (ae * C152341 + be * C152342 +
                                          C152272 * C152302)))) /
        C152053;
    const double C4391 =
        (2 * (ae * C152482 * C152346 + be * C152482 * C152347 +
              C152272 * C152642) +
         ae * C152482 * C152566 + be * C152482 * C152567 +
         C152272 * (C152642 + ae * C152482 * C152556 + be * C152482 * C152559 +
                    C152272 * (ae * C152482 * C152341 + be * C152482 * C152342 +
                               C152272 * C152482 * C152302))) /
        C152053;
    const double C5042 =
        (2 * (ae * (C152346 + C152341 * C152530) +
              be * (C152347 + C152342 * C152530) + C152272 * C152783) +
         ae * (C152566 + C152767 * C152530) +
         be * (C152567 + C152768 * C152530) +
         C152272 * (C152783 + ae * (C152556 + C152750 * C152530) +
                    be * (C152559 + C152753 * C152530) +
                    C152272 * (ae * (C152341 + C152378 * C152530) +
                               be * (C152342 + C152382 * C152530) +
                               C152272 * (C152302 + C152314 * C152530)))) /
        C152053;
    const double C3193 =
        (3 * (C152357 + C152272 * C152527 + C152524 * be) +
         C152272 * (2 * C152527 + C152272 * C152566 + C152558 * be) +
         (2 * C152524 + C152272 * C152558) * be) /
        C152045;
    const double C3511 =
        (C152357 + C152272 * C152527 + C152524 * be + C152566 * C152530) /
        C152045;
    const double C4383 =
        (C152482 * (2 * C152527 + C152272 * C152566 + C152558 * be)) / C152045;
    const double C6377 =
        (2 * C152482 * C152566 + C152482 * (C152566 + C152767 * C152530)) /
        C152045;
    const double C152766 = C152755 + C152762;
    const double C9221 = C9219 - C9214;
    const double C56430 = C56428 - C56419;
    const double C55994 = C55992 - C55982;
    const double C152318 = C152310 + C152317;
    const double C152607 = C152601 + C152594;
    const double C3249 = C154097 * C1388;
    const double C3209 = C154071 * C1388;
    const double C11749 = C153855 * C1388;
    const double C24568 = C24207 * C1388;
    const double C24528 = C154071 * C1388;
    const double C34951 = C154044 * C1388;
    const double C70812 = C153855 * C1388;
    const double C74346 = C154044 * C1388;
    const double C83962 = C153858 * C1388;
    const double C83922 = C83602 * C1388;
    const double C3567 = C154097 * C1530;
    const double C7484 = C153792 * C1530;
    const double C12027 = C153855 * C1530;
    const double C20515 = C154035 * C1530;
    const double C24870 = C24207 * C1530;
    const double C71090 = C153855 * C1530;
    const double C79176 = C70494 * C1530;
    const double C84264 = C153858 * C1530;
    const double C3527 = C154071 * C1961;
    const double C4415 = C154097 * C1961;
    const double C7496 = C153792 * C1961;
    const double C12765 = C153855 * C1961;
    const double C19157 = C154035 * C1961;
    const double C24830 = C154071 * C1961;
    const double C25702 = C24207 * C1961;
    const double C71828 = C153855 * C1961;
    const double C84224 = C83602 * C1961;
    const double C85096 = C153858 * C1961;
    const double C88222 = C70494 * C1961;
    const double C7772 = C153792 * C2313;
    const double C19497 = C154035 * C2313;
    const double C78832 = C70494 * C2313;
    const double C152720 = C152272 * C152714;
    const double C152891 = 2 * C152714;
    const double C6383 =
        (2 * C152644 + C152482 * C152780 +
         ae *
             (2 * C152482 * C152579 + C152482 * (C152579 + C152708 * C152530)) +
         be *
             (2 * C152482 * C152582 + C152482 * (C152582 + C152711 * C152530)) +
         C152272 *
             (ae * (2 * C152794 + C152482 * (C152395 + C152429 * C152530)) +
              be * (2 * C152795 + C152482 * (C152401 + C152437 * C152530)) +
              C152272 * (2 * C152796 +
                         C152482 * (C152321 + C152278 * C152329 * C152530)))) /
        C152053;
    const double C6384 =
        (ae *
             (2 * C152482 * C152371 + C152482 * (C152371 + C152395 * C152530)) +
         be *
             (2 * C152482 * C152375 + C152482 * (C152375 + C152401 * C152530)) +
         C152272 * (2 * C152644 + C152482 * C152780)) /
        C152053;
    const double C7753 = (3 * (C152513 + C152306 * C152530) +
                          C152482 * (2 * C152644 + C152482 * C152780)) /
                         C152053;
    const double C9209 =
        (ae * (3 * (C152371 + C152395 * C152530) +
               C152482 *
                   (2 * C152794 + C152482 * (C152395 + C152429 * C152530))) +
         be * (3 * (C152375 + C152401 * C152530) +
               C152482 *
                   (2 * C152795 + C152482 * (C152401 + C152437 * C152530))) +
         C152272 *
             (3 * C152780 +
              C152482 * (2 * C152796 +
                         C152482 * (C152321 + C152278 * C152329 * C152530)))) /
        C152053;
    const double C10561 =
        (4 * (2 * C152644 + C152482 * C152780) +
         C152482 *
             (3 * C152780 +
              C152482 * (2 * C152796 +
                         C152482 * (C152321 + C152278 * C152329 * C152530)))) /
        C152053;
    const double C152801 = C152800 + C152799;
    const double C152869 = C152858 + C152865;
    const double C152967 = C152966 + C152965;
    const double C153162 = C153160 + C153161;
    const double C152995 = C152272 * C152994;
    const double C153119 = 2 * C152994;
    const double C152333 = C152325 + C152332;
    const double C152672 = C152665 + C152654;
    const double C152777 = C152316 + C152776;
    const double C152790 = C152272 * C152787;
    const double C152926 = C152272 * C152920;
    const double C152977 = C152272 * C152974;
    const double C153167 = C152482 * C152974;
    const double C31185 =
        (3 * C152780 + C152482 * (2 * C152796 + C152482 * C152974) +
         ae * (3 * (C152579 + C152708 * C152530) +
               C152482 *
                   (2 * C152998 + C152482 * (C152708 + C152921 * C152530))) +
         be * (3 * (C152582 + C152711 * C152530) +
               C152482 *
                   (2 * C152999 + C152482 * (C152711 + C152924 * C152530))) +
         C152272 *
             (ae * (3 * C152972 +
                    C152482 * (2 * C153000 +
                               C152482 * (C152429 + C152901 * C152530))) +
              be * (3 * C152973 +
                    C152482 * (2 * C153001 +
                               C152482 * (C152437 + C152907 * C152530))) +
              C152272 * (3 * C152974 +
                         C152482 * (2 * C153002 +
                                    C152482 * (C152898 +
                                               C152278 *
                                                   (C152323 * C152324 +
                                                    C152275 * bs[9] *
                                                        std::pow(C152274, 9)) *
                                                   C152044 * C152530))))) /
        C152053;
    const double C153011 = C153009 + C153007;
    const double C153115 = C153113 + C153111;
    const double C153153 = C153149 + C153150;
    const double C153140 = C152272 * C153139;
    const double C152455 = C152432 + C152452;
    const double C152628 = C152622 + C152623;
    const double C152627 = C152413 + C152621;
    const double C152629 = C152620 * ae;
    const double C152626 = C152620 * be;
    const double C8573 =
        2 * C152482 * C152499 + C152482 * (C152499 + C152620 * C152530);
    const double C152625 = C152618 + C152619;
    const double C152681 = C152414 + C152676;
    const double C152680 = C152660 + C152675;
    const double C152679 = C152412 + C152673;
    const double C152940 = C152935 + C152925;
    const double C152941 = C152934 * ae;
    const double C152939 = C152272 * C152934;
    const double C152938 = C152934 * be;
    const double C32002 =
        2 * C152482 * C152722 + C152482 * (C152722 + C152934 * C152530);
    const double C152937 = C152933 + C152922;
    const double C153072 = C152272 * C153067;
    const double C153071 = C153034 + C153066;
    const double C153070 = C152272 * C153064;
    const double C152424 = C152400 + C152422;
    const double C152503 = C152500 + C152501;
    const double C7797 = C134 * C2304;
    const double C152611 = C152388 + C152609;
    const double C8596 = C134 * C6372;
    const double C19500 = C11439 * C6372;
    const double C78835 = C70502 * C6372;
    const double C152726 = C152723 + C152712;
    const double C56411 =
        (4 * (2 * C152482 * C152582 + C152482 * C153451) +
         C152482 * (3 * C153451 +
                    C152482 * (2 * C152999 +
                               C152482 * (C152711 + C152924 * C152530)))) /
        C152045;
    const double C55972 =
        (5 * (3 * C153381 + C152482 * C153445) +
         C152482 * (4 * C153445 +
                    C152482 * (3 * C152973 +
                               C152482 * (2 * C153001 +
                                          C152482 * (C152437 +
                                                     C152907 * C152530))))) /
        C152045;
    const double C152878 = C152272 * C152873;
    const double C153037 = 3 * C152873;
    const double C153020 = be * C152873;
    const double C153121 = C152482 * C152873;
    const double C153422 = C152873 * C152530;
    const double C31181 =
        (3 * (C152567 + C152768 * C152530) +
         C152482 * (2 * C152482 * C152768 +
                    C152482 * (C152768 + C152873 * C152530))) /
        C152045;
    const double C153459 = C153457 + C153458;
    const double C56768 = C134 * C34034;
    const double C69710 = C11439 * C34034;
    const double C136935 = C70502 * C34034;
    const double C153467 = C153465 + C153466;
    const double C57530 = C134 * C55970;
    const double C152423 = C152394 + C152421;
    const double C152502 = C152497 + C152498;
    const double C152624 = C152615 + C152616;
    const double C7795 = C134 * C2303;
    const double C152610 = C152386 + C152608;
    const double C152664 = C152316 + C152650;
    const double C3571 = C154071 * C3521;
    const double C7504 = C153792 * C3521;
    const double C20519 = C153855 * C3521;
    const double C24874 = C154071 * C3521;
    const double C79180 = C153855 * C3521;
    const double C84268 = C83602 * C3521;
    const double C8594 = C134 * C6371;
    const double C19498 = C11439 * C6371;
    const double C78833 = C70502 * C6371;
    const double C7814 = C7805 - C7787;
    const double C152725 = C152721 + C152709;
    const double C152919 = C152909 + C152895;
    const double C153008 = C152796 + C153003;
    const double C56410 =
        (4 * (2 * C152482 * C152579 + C152482 * C153448) +
         C152482 * (3 * C153448 +
                    C152482 * (2 * C152998 +
                               C152482 * (C152708 + C152921 * C152530)))) /
        C152045;
    const double C56429 = C56424 - C56425;
    const double C55971 =
        (5 * (3 * C153378 + C152482 * C153441) +
         C152482 * (4 * C153441 +
                    C152482 * (3 * C152972 +
                               C152482 * (2 * C153000 +
                                          C152482 * (C152429 +
                                                     C152901 * C152530))))) /
        C152045;
    const double C55993 = C55988 - C55989;
    const double C152876 = C152272 * C152870;
    const double C153027 = 3 * C152870;
    const double C153019 = ae * C152870;
    const double C153120 = C152482 * C152870;
    const double C153419 = C152870 * C152530;
    const double C31180 =
        (3 * (C152566 + C152767 * C152530) +
         C152482 * (2 * C152482 * C152767 +
                    C152482 * (C152767 + C152870 * C152530))) /
        C152045;
    const double C153063 = C153052 + C153059;
    const double C153112 = C152962 + C153107;
    const double C153455 = C153453 + C153454;
    const double C56766 = C134 * C34033;
    const double C69708 = C11439 * C34033;
    const double C136933 = C70502 * C34033;
    const double C153138 = C153135 + C153130;
    const double C153157 = C153154 + C153155;
    const double C153463 = C153461 + C153462;
    const double C57528 = C134 * C55969;
    const double C142 = 5 * (3 * C152368 + C152278 * C152387) +
                        C152278 * (4 * C152387 + C152278 * C152419);
    const double C346 = 3 * C152368 + C152278 * C152387 + C152419 * C152275;
    const double C347 = C152272 * (4 * C152387 + C152278 * C152419);
    const double C575 = 3 * C152368 + C152278 * C152387 + C152419 * C152530;
    const double C576 = C152482 * (4 * C152387 + C152278 * C152419);
    const double C1109 = C152482 * C152272 * C152419;
    const double C8054 = C135 * C1514;
    const double C28560 = 5 * (3 * C152558 + C152272 * C152764) +
                          C152272 * (4 * C152764 + C152272 * C152877);
    const double C28690 = 3 * C152558 + C152272 * C152764 + C152877 * C152530;
    const double C29104 = C152482 * (4 * C152764 + C152272 * C152877);
    const double C57523 =
        6 * (4 * C153599 + C152482 * C153626) +
        C152482 *
            (5 * C153626 +
             C152482 * (4 * C153624 +
                        C152482 * (3 * C153622 +
                                   C152482 * (2 * C152482 * C152307 +
                                              C152482 * (C152307 +
                                                         C152322 * C152530)))));
    const double C152464 = C152278 * C152462;
    const double C152492 = C152272 * C152462;
    const double C152463 = C152278 * C152460;
    const double C152489 = C152272 * C152460;
    const double C154053 = C154001 / C152045;
    const double C154088 = C154057 / C152085;
    const double C154089 = C154059 + C154009;
    const double C11435 = C154009 - C153649 / C152055;
    const double C154056 = C154005 / C152045;
    const double C15655 = C666 * C11433;
    const double C15654 = C7818 * C11433;
    const double C15647 = C7817 * C11433;
    const double C16051 = C665 * C11433;
    const double C16313 = C8612 * C11433;
    const double C18011 = C7821 * C11433;
    const double C154080 = C154046 / C152045;
    const double C154104 = C154083 / C152085;
    const double C154105 = C154084 + C154050;
    const double C63396 = C154050 - C153898 / C152055;
    const double C154082 = C154047 / C152045;
    const double C152069 = C152043 * C152064;
    const double C152160 = C152064 / C152055;
    const double C2878 =
        (ae * -2 * C152052) / (C152053 * 2 * C152045) +
        (((C152043 *
           ((-4 * C152056) / C152045 - (C152043 * C152064) / C152045) * ae) /
              C152045 +
          2 * ((C152063 * ae) / C152045 - C152052 / C152055)) *
         ae) /
            C152045 -
        C152064 / C152055;
    const double C2882 = (-C152064 / C152045) / (4 * C152053);
    const double C11440 = (-C152064 / C152045) / (2 * C152045);
    const double C24217 = (-C152064 / C152045) / (4 * C152053);
    const double C28437 =
        (-C152064 / C152045) / (4 * C152053 * std::pow(C152085, 2));
    const double C34930 = (-C152064 / C152045) / (4 * C152153);
    const double C70503 = (-C152064 / C152045) / C152085;
    const double C74325 = (-C152064 / C152045) / (4 * C152153);
    const double C83611 = (-C152064 / C152045) / C152196;
    const double C152118 = C152110 / C152045;
    const double C2926 = C2879 * C350;
    const double C2924 = C2879 * C349;
    const double C2914 = C2879 * C352;
    const double C2912 = C2879 * C351;
    const double C2902 = C2879 * C354;
    const double C2900 = C2879 * C353;
    const double C2890 = C2879 * C356;
    const double C2888 = C2879 * C355;
    const double C3248 = C2879 * C1381;
    const double C3246 = C2879 * C1380;
    const double C3236 = C2879 * C1383;
    const double C3234 = C2879 * C1382;
    const double C3224 = C2879 * C362;
    const double C3222 = C2879 * C361;
    const double C3212 = C2879 * C364;
    const double C3210 = C2879 * C363;
    const double C3566 = C2879 * C1523;
    const double C3564 = C2879 * C1522;
    const double C3554 = C2879 * C1525;
    const double C3552 = C2879 * C1524;
    const double C3542 = C2879 * C1114;
    const double C3540 = C2879 * C1113;
    const double C3530 = C2879 * C1116;
    const double C3528 = C2879 * C1115;
    const double C3833 = C2879 * C366;
    const double C3831 = C2879 * C365;
    const double C4074 = C2879 * C1118;
    const double C4072 = C2879 * C1117;
    const double C4414 = C2879 * C1954;
    const double C4412 = C2879 * C1953;
    const double C4402 = C2879 * C1956;
    const double C4400 = C2879 * C1955;
    const double C52094 = C2879 * C6376;
    const double C52092 = C2879 * C6375;
    const double C52082 = C2879 * C6380;
    const double C52080 = C2879 * C6379;
    const double C52070 = C2879 * C1527;
    const double C52068 = C2879 * C1526;
    const double C52058 = C2879 * C1112;
    const double C52056 = C2879 * C1111;
    const double C52874 = C2879 * C1958;
    const double C52872 = C2879 * C1957;
    const double C54894 = C2879 * C9207;
    const double C54892 = C2879 * C9206;
    const double C11476 = C11437 * C155;
    const double C11474 = C11437 * C154;
    const double C11472 = C11437 * C153;
    const double C11470 = C11437 * C152;
    const double C11460 = C11437 * C151;
    const double C11458 = C11437 * C150;
    const double C11452 = C11437 * C149;
    const double C11450 = C11437 * C148;
    const double C11444 = C11437 * C147;
    const double C11442 = C11437 * C146;
    const double C11752 = C11437 * C366;
    const double C11750 = C11437 * C365;
    const double C11744 = C11437 * C364;
    const double C11742 = C11437 * C363;
    const double C11736 = C11437 * C362;
    const double C11734 = C11437 * C361;
    const double C11732 = C11437 * C356;
    const double C11730 = C11437 * C355;
    const double C11724 = C11437 * C354;
    const double C11722 = C11437 * C353;
    const double C11716 = C11437 * C352;
    const double C11714 = C11437 * C351;
    const double C12030 = C11437 * C595;
    const double C12028 = C11437 * C594;
    const double C12022 = C11437 * C593;
    const double C12020 = C11437 * C592;
    const double C12014 = C11437 * C591;
    const double C12012 = C11437 * C590;
    const double C12010 = C11437 * C585;
    const double C12008 = C11437 * C584;
    const double C12002 = C11437 * C583;
    const double C12000 = C11437 * C582;
    const double C11994 = C11437 * C581;
    const double C11992 = C11437 * C580;
    const double C12270 = C11437 * C350;
    const double C12268 = C11437 * C349;
    const double C12480 = C11437 * C579;
    const double C12478 = C11437 * C578;
    const double C12768 = C11437 * C1118;
    const double C12766 = C11437 * C1117;
    const double C12760 = C11437 * C1116;
    const double C12758 = C11437 * C1115;
    const double C12752 = C11437 * C1114;
    const double C12750 = C11437 * C1113;
    const double C19156 = C11437 * C1954;
    const double C19154 = C11437 * C1953;
    const double C19148 = C11437 * C1956;
    const double C19146 = C11437 * C1955;
    const double C19496 = C11437 * C2306;
    const double C19494 = C11437 * C2305;
    const double C19488 = C11437 * C2308;
    const double C19486 = C11437 * C2307;
    const double C19481 = C11437 * C589;
    const double C19479 = C11437 * C588;
    const double C19466 = C11437 * C587;
    const double C19464 = C11437 * C586;
    const double C20514 = C11437 * C1523;
    const double C20512 = C11437 * C1522;
    const double C20506 = C11437 * C1525;
    const double C20504 = C11437 * C1524;
    const double C20496 = C11437 * C1112;
    const double C20494 = C11437 * C1111;
    const double C21315 = C11437 * C1527;
    const double C21313 = C11437 * C1526;
    const double C22295 = C11437 * C1958;
    const double C22293 = C11437 * C1957;
    const double C23083 = C11437 * C2310;
    const double C23081 = C11437 * C2309;
    const double C58736 = C11437 * C7747;
    const double C58734 = C11437 * C7746;
    const double C59722 = C11437 * C6376;
    const double C59720 = C11437 * C6375;
    const double C60511 = C11437 * C6380;
    const double C60509 = C11437 * C6379;
    const double C62285 = C11437 * C7745;
    const double C62283 = C11437 * C7744;
    const double C68509 = C11437 * C9207;
    const double C68507 = C11437 * C9206;
    const double C69706 = C11437 * C10559;
    const double C69704 = C11437 * C10558;
    const double C24257 = C24212 * C153;
    const double C24255 = C24212 * C152;
    const double C24253 = C24212 * C151;
    const double C24251 = C24212 * C150;
    const double C24233 = C24212 * C149;
    const double C24231 = C24212 * C148;
    const double C24221 = C24212 * C147;
    const double C24219 = C24212 * C146;
    const double C24563 = C24212 * C364;
    const double C24561 = C24212 * C363;
    const double C24551 = C24212 * C362;
    const double C24549 = C24212 * C361;
    const double C24547 = C24212 * C356;
    const double C24545 = C24212 * C355;
    const double C24535 = C24212 * C354;
    const double C24533 = C24212 * C353;
    const double C24865 = C24212 * C593;
    const double C24863 = C24212 * C592;
    const double C24853 = C24212 * C591;
    const double C24851 = C24212 * C590;
    const double C24849 = C24212 * C585;
    const double C24847 = C24212 * C584;
    const double C24837 = C24212 * C583;
    const double C24835 = C24212 * C582;
    const double C25132 = C24212 * C352;
    const double C25130 = C24212 * C351;
    const double C25373 = C24212 * C581;
    const double C25371 = C24212 * C580;
    const double C25697 = C24212 * C1116;
    const double C25695 = C24212 * C1115;
    const double C25685 = C24212 * C1114;
    const double C25683 = C24212 * C1113;
    const double C31225 = C24212 * C2308;
    const double C31223 = C24212 * C2307;
    const double C31221 = C24212 * C2310;
    const double C31219 = C24212 * C2309;
    const double C31201 = C24212 * C589;
    const double C31199 = C24212 * C588;
    const double C31189 = C24212 * C587;
    const double C31187 = C24212 * C586;
    const double C32033 = C24212 * C1525;
    const double C32031 = C24212 * C1524;
    const double C32021 = C24212 * C1527;
    const double C32019 = C24212 * C1526;
    const double C32009 = C24212 * C1112;
    const double C32007 = C24212 * C1111;
    const double C32658 = C24212 * C6380;
    const double C32656 = C24212 * C6379;
    const double C33408 = C24212 * C1958;
    const double C33406 = C24212 * C1957;
    const double C34041 = C24212 * C7745;
    const double C34039 = C24212 * C7744;
    const double C39060 = C24212 * C1956;
    const double C39058 = C24212 * C1955;
    const double C24261 = C24214 * C350;
    const double C24259 = C24214 * C349;
    const double C24249 = C24214 * C352;
    const double C24247 = C24214 * C351;
    const double C24237 = C24214 * C354;
    const double C24235 = C24214 * C353;
    const double C24225 = C24214 * C356;
    const double C24223 = C24214 * C355;
    const double C24567 = C24214 * C1381;
    const double C24565 = C24214 * C1380;
    const double C24555 = C24214 * C1383;
    const double C24553 = C24214 * C1382;
    const double C24543 = C24214 * C362;
    const double C24541 = C24214 * C361;
    const double C24531 = C24214 * C364;
    const double C24529 = C24214 * C363;
    const double C24869 = C24214 * C1523;
    const double C24867 = C24214 * C1522;
    const double C24857 = C24214 * C1525;
    const double C24855 = C24214 * C1524;
    const double C24845 = C24214 * C1114;
    const double C24843 = C24214 * C1113;
    const double C24833 = C24214 * C1116;
    const double C24831 = C24214 * C1115;
    const double C25136 = C24214 * C366;
    const double C25134 = C24214 * C365;
    const double C25377 = C24214 * C1118;
    const double C25375 = C24214 * C1117;
    const double C25701 = C24214 * C1954;
    const double C25699 = C24214 * C1953;
    const double C25689 = C24214 * C1956;
    const double C25687 = C24214 * C1955;
    const double C31229 = C24214 * C6376;
    const double C31227 = C24214 * C6375;
    const double C31217 = C24214 * C6380;
    const double C31215 = C24214 * C6379;
    const double C31205 = C24214 * C1527;
    const double C31203 = C24214 * C1526;
    const double C31193 = C24214 * C1112;
    const double C31191 = C24214 * C1111;
    const double C32013 = C24214 * C1958;
    const double C32011 = C24214 * C1957;
    const double C34045 = C24214 * C9207;
    const double C34043 = C24214 * C9206;
    const double C70539 = C70500 * C155;
    const double C70537 = C70500 * C154;
    const double C70535 = C70500 * C153;
    const double C70533 = C70500 * C152;
    const double C70523 = C70500 * C151;
    const double C70521 = C70500 * C150;
    const double C70515 = C70500 * C149;
    const double C70513 = C70500 * C148;
    const double C70507 = C70500 * C147;
    const double C70505 = C70500 * C146;
    const double C70815 = C70500 * C366;
    const double C70813 = C70500 * C365;
    const double C70807 = C70500 * C364;
    const double C70805 = C70500 * C363;
    const double C70799 = C70500 * C362;
    const double C70797 = C70500 * C361;
    const double C70795 = C70500 * C356;
    const double C70793 = C70500 * C355;
    const double C70787 = C70500 * C354;
    const double C70785 = C70500 * C353;
    const double C70779 = C70500 * C352;
    const double C70777 = C70500 * C351;
    const double C71093 = C70500 * C595;
    const double C71091 = C70500 * C594;
    const double C71085 = C70500 * C593;
    const double C71083 = C70500 * C592;
    const double C71077 = C70500 * C591;
    const double C71075 = C70500 * C590;
    const double C71073 = C70500 * C585;
    const double C71071 = C70500 * C584;
    const double C71065 = C70500 * C583;
    const double C71063 = C70500 * C582;
    const double C71057 = C70500 * C581;
    const double C71055 = C70500 * C580;
    const double C71333 = C70500 * C350;
    const double C71331 = C70500 * C349;
    const double C71543 = C70500 * C579;
    const double C71541 = C70500 * C578;
    const double C71831 = C70500 * C1118;
    const double C71829 = C70500 * C1117;
    const double C71823 = C70500 * C1116;
    const double C71821 = C70500 * C1115;
    const double C71815 = C70500 * C1114;
    const double C71813 = C70500 * C1113;
    const double C78463 = C70500 * C1956;
    const double C78461 = C70500 * C1955;
    const double C78459 = C70500 * C1525;
    const double C78457 = C70500 * C1524;
    const double C78831 = C70500 * C2306;
    const double C78829 = C70500 * C2305;
    const double C78823 = C70500 * C7747;
    const double C78821 = C70500 * C7746;
    const double C78817 = C70500 * C2310;
    const double C78815 = C70500 * C2309;
    const double C78809 = C70500 * C2308;
    const double C78807 = C70500 * C2307;
    const double C78796 = C70500 * C589;
    const double C78794 = C70500 * C588;
    const double C78787 = C70500 * C587;
    const double C78785 = C70500 * C586;
    const double C79175 = C70500 * C1523;
    const double C79173 = C70500 * C1522;
    const double C79885 = C70500 * C6376;
    const double C79883 = C70500 * C6375;
    const double C79876 = C70500 * C1527;
    const double C79874 = C70500 * C1526;
    const double C79867 = C70500 * C1112;
    const double C79865 = C70500 * C1111;
    const double C80687 = C70500 * C6380;
    const double C80685 = C70500 * C6379;
    const double C81671 = C70500 * C1958;
    const double C81669 = C70500 * C1957;
    const double C82475 = C70500 * C7745;
    const double C82473 = C70500 * C7744;
    const double C88221 = C70500 * C1954;
    const double C88219 = C70500 * C1953;
    const double C135734 = C70500 * C9207;
    const double C135732 = C70500 * C9206;
    const double C136931 = C70500 * C10559;
    const double C136929 = C70500 * C10558;
    const double C152141 = C152136 / C152045;
    const double C34950 = C34929 * C1381;
    const double C34948 = C34929 * C1380;
    const double C34946 = C34929 * C1383;
    const double C34944 = C34929 * C1382;
    const double C74345 = C74324 * C1381;
    const double C74343 = C74324 * C1380;
    const double C74341 = C74324 * C1383;
    const double C74339 = C74324 * C1382;
    const double C154116 = C154075 + C154111;
    const double C34918 = C154101 - (C153858 * C153847) / C152045;
    const double C74350 = C154102 * C380;
    const double C74338 = C154102 * C379;
    const double C74612 = C154102 * C1389;
    const double C74882 = C154102 * C3520;
    const double C74862 = C154102 * C1962;
    const double C75116 = C154102 * C1388;
    const double C75338 = C154102 * C1961;
    const double C130926 = C154102 * C3519;
    const double C130914 = C154102 * C1963;
    const double C133382 = C154102 * C6385;
    const double C28425 = C154102 / C152085 - C153856 / C152198;
    const double C34955 = C34919 * C380;
    const double C34943 = C34919 * C379;
    const double C35217 = C34919 * C1389;
    const double C35487 = C34919 * C3520;
    const double C35467 = C34919 * C1962;
    const double C35721 = C34919 * C1388;
    const double C35943 = C34919 * C1961;
    const double C44368 = C34919 * C3519;
    const double C44356 = C34919 * C1963;
    const double C46824 = C34919 * C6385;
    const double C154112 = C154077 + C154101;
    const double C7792 = C667 * C2874;
    const double C7767 = C667 * C2875;
    const double C15659 = C667 * C11433;
    const double C48084 = C667 * C154106;
    const double C48076 = C667 * C154087;
    const double C55985 = C667 * C153638;
    const double C63804 = C667 * C154002;
    const double C63797 = C667 * C153648;
    const double C107714 = C667 * C74316;
    const double C107707 = C667 * C153648;
    const double C116547 = C667 * C153643;
    const double C116539 = C667 * C153651;
    const double C8598 = C1154 * C2874;
    const double C8582 = C1154 * C2875;
    const double C16317 = C1154 * C11433;
    const double C48832 = C1154 * C154106;
    const double C48827 = C1154 * C154087;
    const double C56421 = C1154 * C153638;
    const double C64472 = C1154 * C154002;
    const double C64467 = C1154 * C153648;
    const double C108382 = C1154 * C74316;
    const double C108377 = C1154 * C153648;
    const double C117295 = C1154 * C153643;
    const double C117290 = C1154 * C153651;
    const double C8613 = C8609 + C8587;
    const double C9966 = C9964 + C9953;
    const double C10574 = C10573 + C10568;
    const double C197 = C185 - C186;
    const double C418 = C386 - C387;
    const double C424 = C410 - C411;
    const double C647 = C615 - C616;
    const double C653 = C639 - C640;
    const double C1148 = C1138 - C1139;
    const double C7505 = C7481 - C7482;
    const double C7508 = C7493 - C7494;
    const double C3196 =
        (3 * (C152362 + C152272 * C152520 + C152516 * ae) +
         C152272 * (2 * C152520 + C152272 * C152590 + C152581 * ae) +
         (2 * C152516 + C152272 * C152581) * ae) /
        C152045;
    const double C3514 =
        (C152362 + C152272 * C152520 + C152516 * ae + C152590 * C152530) /
        C152045;
    const double C4386 =
        (C152482 * (2 * C152520 + C152272 * C152590 + C152581 * ae)) / C152045;
    const double C3202 =
        (3 * (C152513 + ae * C152519 + be * C152520 + C152272 * C152584) +
         ae * (2 * C152519 + C152272 * C152589 + C152581 * be) +
         be * (2 * C152520 + C152272 * C152590 + C152581 * ae) +
         C152272 * (2 * C152584 + ae * C152589 + be * C152590 +
                    C152272 * (C152306 + ae * C152579 + be * C152582 +
                               C152272 * (ae * C152395 + be * C152401 +
                                          C152272 * C152321)))) /
        C152053;
    const double C4392 =
        (2 * (ae * C152482 * C152371 + be * C152482 * C152375 +
              C152272 * C152644) +
         ae * C152482 * C152589 + be * C152482 * C152590 +
         C152272 * (C152644 + ae * C152482 * C152579 + be * C152482 * C152582 +
                    C152272 * (ae * C152482 * C152395 + be * C152482 * C152401 +
                               C152272 * C152482 * C152321))) /
        C152053;
    const double C3195 =
        (3 * (C152360 + C152272 * C152519 + C152516 * be) +
         C152272 * (2 * C152519 + C152272 * C152589 + C152581 * be) +
         (2 * C152516 + C152272 * C152581) * be) /
        C152045;
    const double C3513 =
        (C152360 + C152272 * C152519 + C152516 * be + C152589 * C152530) /
        C152045;
    const double C4385 =
        (C152482 * (2 * C152519 + C152272 * C152589 + C152581 * be)) / C152045;
    const double C152772 = C152745 + C152770;
    const double C152771 = C152739 + C152769;
    const double C152849 = C152829 + C152830;
    const double C9958 = C134 * C3512;
    const double C21319 = C11439 * C3512;
    const double C31209 = C24216 * C3512;
    const double C32025 = C24214 * C3512;
    const double C33420 = C24212 * C3512;
    const double C52074 = C2881 * C3512;
    const double C52886 = C2879 * C3512;
    const double C54277 = C2877 * C3512;
    const double C61495 = C11437 * C3512;
    const double C79880 = C70502 * C3512;
    const double C81679 = C70500 * C3512;
    const double C93783 = C152193 * C3512;
    const double C22299 = C11439 * C4384;
    const double C32017 = C24216 * C4384;
    const double C33412 = C24214 * C4384;
    const double C44359 = C34929 * C4384;
    const double C52878 = C2881 * C4384;
    const double C54269 = C2879 * C4384;
    const double C81675 = C70502 * C4384;
    const double C94816 = C152193 * C4384;
    const double C130917 = C74324 * C4384;
    const double C31213 = C24216 * C6378;
    const double C32662 = C24214 * C6378;
    const double C52078 = C2881 * C6378;
    const double C53519 = C2879 * C6378;
    const double C57184 = C134 * C6378;
    const double C60515 = C11439 * C6378;
    const double C69172 = C11437 * C6378;
    const double C80691 = C70502 * C6378;
    const double C97418 = C152193 * C6378;
    const double C136397 = C70500 * C6378;
    const double C208 = C202 + C184;
    const double C435 = C427 + C393;
    const double C439 = C431 + C409;
    const double C664 = C656 + C622;
    const double C668 = C660 + C638;
    const double C1155 = C1151 + C1137;
    const double C7512 = C7506 - C7487;
    const double C7513 = C7507 - C7491;
    const double C8610 = C8606 - C8592;
    const double C7830 = C7820 * C2874;
    const double C7828 = C7820 * C2875;
    const double C48087 = C7820 * C154106;
    const double C48079 = C7820 * C154087;
    const double C55986 = C7820 * C153638;
    const double C63806 = C7820 * C154002;
    const double C63799 = C7820 * C153648;
    const double C107716 = C7820 * C74316;
    const double C107709 = C7820 * C153648;
    const double C116550 = C7820 * C153643;
    const double C116542 = C7820 * C153651;
    const double C22300 = C153855 * C4391;
    const double C32018 = C154071 * C4391;
    const double C33413 = C24207 * C4391;
    const double C44360 = C154044 * C4391;
    const double C45058 = C34919 * C4391;
    const double C52879 = C154071 * C4391;
    const double C54270 = C154097 * C4391;
    const double C81676 = C153855 * C4391;
    const double C94817 = C83602 * C4391;
    const double C96620 = C153858 * C4391;
    const double C130918 = C154044 * C4391;
    const double C131616 = C154102 * C4391;
    const double C32030 = C154071 * C5042;
    const double C33425 = C24207 * C5042;
    const double C44364 = C154044 * C5042;
    const double C45604 = C34919 * C5042;
    const double C52891 = C154071 * C5042;
    const double C54282 = C154097 * C5042;
    const double C61500 = C153855 * C5042;
    const double C81684 = C153855 * C5042;
    const double C95637 = C83602 * C5042;
    const double C130922 = C154044 * C5042;
    const double C132162 = C154102 * C5042;
    const double C150693 = C153858 * C5042;
    const double C9956 = C134 * C3511;
    const double C21317 = C11439 * C3511;
    const double C31207 = C24216 * C3511;
    const double C32023 = C24214 * C3511;
    const double C33418 = C24212 * C3511;
    const double C52072 = C2881 * C3511;
    const double C52884 = C2879 * C3511;
    const double C54275 = C2877 * C3511;
    const double C61493 = C11437 * C3511;
    const double C79878 = C70502 * C3511;
    const double C81677 = C70500 * C3511;
    const double C93781 = C152193 * C3511;
    const double C22297 = C11439 * C4383;
    const double C32015 = C24216 * C4383;
    const double C33410 = C24214 * C4383;
    const double C44357 = C34929 * C4383;
    const double C52876 = C2881 * C4383;
    const double C54267 = C2879 * C4383;
    const double C81673 = C70502 * C4383;
    const double C94814 = C152193 * C4383;
    const double C130915 = C74324 * C4383;
    const double C31211 = C24216 * C6377;
    const double C32660 = C24214 * C6377;
    const double C52076 = C2881 * C6377;
    const double C53517 = C2879 * C6377;
    const double C57182 = C134 * C6377;
    const double C60513 = C11439 * C6377;
    const double C69170 = C11437 * C6377;
    const double C80689 = C70502 * C6377;
    const double C97416 = C152193 * C6377;
    const double C136395 = C70500 * C6377;
    const double C9222 = C9221 + C9215;
    const double C56432 = C56430 + C56420;
    const double C55996 = C55994 + C55983;
    const double C166 =
        (5 * (3 * C152304 + C152278 * C152318) +
         C152278 *
             (4 * C152318 +
              C152278 *
                  (3 * C152316 +
                   C152278 * (2 * C152278 * C152314 +
                              C152278 * (C152314 + (C152308 * C152309 +
                                                    C152275 * bs[8] *
                                                        std::pow(C152270, 8)) *
                                                       C152044 * C152290))))) /
        C152053;
    const double C373 =
        (ae * (3 * (C152281 * C152280 * C152337 + C152341 * C152290) +
               C152278 * (2 * C152278 * C152341 +
                          C152278 * (C152341 +
                                     C152298 * C152297 * C152337 * C152290))) +
         be * (3 * (C152281 * C152280 * C152338 + C152342 * C152290) +
               C152278 * (2 * C152278 * C152342 +
                          C152278 * (C152342 +
                                     C152298 * C152297 * C152338 * C152290))) +
         C152272 * (3 * C152304 + C152278 * C152318)) /
        C152053;
    const double C381 =
        (2 * C152278 * C152294 + C152278 * C152304 +
         ae * (C152272 * C152391 + C152387 * be) +
         be * (C152272 * C152392 + C152387 * ae) +
         C152272 * (ae * C152391 + be * C152392 + C152272 * C152318)) /
        C152053;
    const double C602 =
        ((zP - zQ) * (3 * C152304 + C152278 * C152318)) / C152053;
    const double C610 = (2 * C152278 * C152294 + C152278 * C152304 +
                         C152318 * std::pow(zP - zQ, 2)) /
                        C152053;
    const double C1126 = (ae * C152482 * C152391 + be * C152482 * C152392 +
                          C152272 * C152482 * C152318) /
                         C152053;
    const double C7819 = C7810 + C7772;
    const double C152724 = C152713 + C152720;
    const double C31234 = C154071 * C6383;
    const double C52099 = C154071 * C6383;
    const double C59727 = C153855 * C6383;
    const double C63596 = C153792 * C6383;
    const double C79890 = C153855 * C6383;
    const double C93806 = C83602 * C6383;
    const double C8593 = C153792 * C6384;
    const double C19493 = C153855 * C6384;
    const double C31230 = C24207 * C6384;
    const double C52095 = C154097 * C6384;
    const double C59723 = C154035 * C6384;
    const double C78806 = C153855 * C6384;
    const double C79886 = C70494 * C6384;
    const double C93802 = C153858 * C6384;
    const double C7784 = C153792 * C7753;
    const double C58737 = C154035 * C7753;
    const double C78824 = C70494 * C7753;
    const double C56427 = C153792 * C9209;
    const double C58741 = C153855 * C9209;
    const double C78828 = C153855 * C9209;
    const double C55991 = C153792 * C10561;
    const double C152875 = C152272 * C152869;
    const double C153015 = 3 * C152869;
    const double C152996 = C152993 + C152995;
    const double C152334 = C152278 * C152333;
    const double C152617 = C152272 * C152333;
    const double C152648 = C152482 * C152333;
    const double C1529 = (ae * (C152391 + C152418 * C152530) +
                          be * (C152392 + C152420 * C152530) +
                          C152272 * (C152318 + C152333 * C152530)) /
                         C152053;
    const double C2312 =
        (2 * C152482 * C152318 + C152482 * (C152318 + C152333 * C152530)) /
        C152053;
    const double C152678 = C152272 * C152672;
    const double C6381 =
        (2 * C152646 + C152482 * C152777 +
         ae *
             (2 * C152482 * C152602 + C152482 * (C152602 + C152666 * C152530)) +
         be *
             (2 * C152482 * C152605 + C152482 * (C152605 + C152669 * C152530)) +
         C152272 *
             (ae * (2 * C152785 + C152482 * (C152412 + C152448 * C152530)) +
              be * (2 * C152786 + C152482 * (C152414 + C152450 * C152530)) +
              C152272 *
                  (2 * C152787 +
                   C152482 * (C152331 + (C152329 + (C152323 * C152324 +
                                                    C152275 * bs[9] *
                                                        std::pow(C152274, 9)) *
                                                       C152044 * C152290) *
                                            C152530)))) /
        C152053;
    const double C6382 =
        (ae *
             (2 * C152482 * C152386 + C152482 * (C152386 + C152412 * C152530)) +
         be *
             (2 * C152482 * C152388 + C152482 * (C152388 + C152414 * C152530)) +
         C152272 * (2 * C152646 + C152482 * C152777)) /
        C152053;
    const double C7754 = (3 * (C152304 + C152316 * C152530) +
                          C152482 * (2 * C152646 + C152482 * C152777)) /
                         C152053;
    const double C9208 =
        (ae * (3 * (C152386 + C152412 * C152530) +
               C152482 *
                   (2 * C152785 + C152482 * (C152412 + C152448 * C152530))) +
         be * (3 * (C152388 + C152414 * C152530) +
               C152482 *
                   (2 * C152786 + C152482 * (C152414 + C152450 * C152530))) +
         C152272 *
             (3 * C152777 +
              C152482 *
                  (2 * C152787 +
                   C152482 * (C152331 + (C152329 + (C152323 * C152324 +
                                                    C152275 * bs[9] *
                                                        std::pow(C152274, 9)) *
                                                       C152044 * C152290) *
                                            C152530)))) /
        C152053;
    const double C10560 =
        (4 * (2 * C152646 + C152482 * C152777) +
         C152482 *
             (3 * C152777 +
              C152482 *
                  (2 * C152787 +
                   C152482 * (C152331 + (C152329 + (C152323 * C152324 +
                                                    C152275 * bs[9] *
                                                        std::pow(C152274, 9)) *
                                                       C152044 * C152290) *
                                            C152530)))) /
        C152053;
    const double C152792 = C152791 + C152790;
    const double C152979 = C152978 + C152977;
    const double C153168 = C153166 + C153167;
    const double C153012 = C152272 * C153011;
    const double C153116 = C152272 * C153115;
    const double C153156 = C152272 * C153153;
    const double C153171 = C152482 * C153153;
    const double C31184 =
        (3 * C152783 + C152482 * C153162 +
         ae * (3 * (C152556 + C152750 * C152530) +
               C152482 * (2 * C152981 + C152482 * C153102)) +
         be * (3 * (C152559 + C152753 * C152530) +
               C152482 * (2 * C152982 + C152482 * C153103)) +
         C152272 * (ae * (3 * C152960 + C152482 * C153151) +
                    be * (3 * C152961 + C152482 * C153152) +
                    C152272 * (3 * C152962 + C152482 * C153153))) /
        C152053;
    const double C152458 = C152278 * C152455;
    const double C152493 = C152455 * ae;
    const double C152491 = C152272 * C152455;
    const double C152490 = C152455 * be;
    const double C1371 =
        2 * C152272 * C152419 + C152272 * (C152419 + C152455 * C152275);
    const double C1944 = C152482 * (C152419 + C152455 * C152275);
    const double C2296 =
        2 * C152482 * C152419 + C152482 * (C152419 + C152455 * C152530);
    const double C152632 = C152272 * C152628;
    const double C3192 = 3 * (C152387 + C152413 * C152275) +
                         C152272 * (2 * C152499 + C152272 * C152627);
    const double C3510 = C152387 + C152413 * C152275 + C152627 * C152530;
    const double C4382 = C152482 * (2 * C152499 + C152272 * C152627);
    const double C152631 = C152272 * C152625;
    const double C152684 = C152681 + C152670;
    const double C4801 = 4 * (2 * C152507 + C152272 * C152604) +
                         C152272 * (3 * C152604 + C152272 * C152680);
    const double C5031 = 2 * C152507 + C152272 * C152604 + C152680 * C152530;
    const double C5769 = C152482 * (3 * C152604 + C152272 * C152680);
    const double C152683 = C152679 + C152667;
    const double C152945 = C152272 * C152940;
    const double C152944 = C152904 + C152939;
    const double C152943 = C152272 * C152937;
    const double C153077 = C153038 + C153072;
    const double C153078 = C153071 * ae;
    const double C153076 = C152272 * C153071;
    const double C153075 = C153071 * be;
    const double C30182 =
        2 * C152482 * C152877 + C152482 * (C152877 + C153071 * C152530);
    const double C153074 = C153028 + C153070;
    const double C157 = (5 * (3 * C152369 + C152278 * C152392) +
                         C152278 * (4 * C152392 + C152278 * C152424)) /
                        C152045;
    const double C368 = (3 * C152369 + C152278 * C152392 +
                         C152272 * (C152272 * C152424 + C152419 * ae) +
                         C152272 * C152419 * ae) /
                        C152045;
    const double C370 = (C152272 * (4 * C152392 + C152278 * C152424) +
                         (4 * C152387 + C152278 * C152419) * ae) /
                        C152045;
    const double C597 =
        (3 * C152369 + C152278 * C152392 + C152424 * C152530) / C152045;
    const double C599 = (C152482 * (4 * C152392 + C152278 * C152424)) / C152045;
    const double C1120 =
        (C152482 * (C152272 * C152424 + C152419 * ae)) / C152045;
    const double C2302 =
        (2 * C152482 * C152424 + C152482 * (C152424 + C152462 * C152530)) /
        C152045;
    const double C1379 =
        (2 * (C152272 * C152392 + C152387 * ae) +
         C152272 * (C152392 + C152272 * C152503 + C152499 * ae) +
         (C152387 + C152413 * C152275) * ae) /
        C152045;
    const double C1521 =
        (C152272 * C152392 + C152387 * ae + C152503 * C152530) / C152045;
    const double C1952 =
        (C152482 * (C152392 + C152272 * C152503 + C152499 * ae)) / C152045;
    const double C8575 =
        (2 * C152482 * C152503 + C152482 * (C152503 + C152628 * C152530)) /
        C152045;
    const double C152613 = C152611 + C152606;
    const double C152728 = C152272 * C152726;
    const double C152905 = 3 * C152726;
    const double C152893 = be * C152726;
    const double C6374 =
        (2 * C152482 * C152590 + C152482 * (C152590 + C152726 * C152530)) /
        C152045;
    const double C31183 =
        (3 * (C152590 + C152726 * C152530) +
         C152482 * (2 * C152482 * C152726 +
                    C152482 * (C152726 + C152940 * C152530))) /
        C152045;
    const double C152881 = C152846 + C152878;
    const double C153128 = be * C153121;
    const double C153423 = C152768 + C153422;
    const double C34049 = C24216 * C31181;
    const double C54898 = C2881 * C31181;
    const double C57188 = C134 * C31181;
    const double C68513 = C11439 * C31181;
    const double C135738 = C70502 * C31181;
    const double C151300 = C152193 * C31181;
    const double C56763 =
        (5 * (3 * C153429 + C152482 * C153459) +
         C152482 * (4 * C153459 +
                    C152482 * (3 * C153103 +
                               C152482 * (2 * C153123 +
                                          C152482 * (C152855 +
                                                     C153048 * C152530))))) /
        C152045;
    const double C57525 =
        (6 * (4 * C153437 + C152482 * C153467) +
         C152482 *
             (5 * C153467 +
              C152482 *
                  (4 * C153152 +
                   C152482 * (3 * C153105 +
                              C152482 * (2 * C153125 +
                                         C152482 * (C152408 +
                                                    C152444 * C152530)))))) /
        C152045;
    const double C156 = (5 * (3 * C152367 + C152278 * C152391) +
                         C152278 * (4 * C152391 + C152278 * C152423)) /
                        C152045;
    const double C367 = (3 * C152367 + C152278 * C152391 +
                         C152272 * (C152272 * C152423 + C152419 * be) +
                         C152272 * C152419 * be) /
                        C152045;
    const double C369 = (C152272 * (4 * C152391 + C152278 * C152423) +
                         (4 * C152387 + C152278 * C152419) * be) /
                        C152045;
    const double C596 =
        (3 * C152367 + C152278 * C152391 + C152423 * C152530) / C152045;
    const double C598 = (C152482 * (4 * C152391 + C152278 * C152423)) / C152045;
    const double C1119 =
        (C152482 * (C152272 * C152423 + C152419 * be)) / C152045;
    const double C2301 =
        (2 * C152482 * C152423 + C152482 * (C152423 + C152460 * C152530)) /
        C152045;
    const double C1387 =
        (2 * (ae * C152391 + be * C152392 + C152272 * C152318) +
         ae * (C152391 + C152272 * C152502 + C152499 * be) +
         be * (C152392 + C152272 * C152503 + C152499 * ae) +
         C152272 *
             (C152318 + ae * C152502 + be * C152503 +
              C152272 * (ae * C152418 + be * C152420 + C152272 * C152333))) /
        C152053;
    const double C1960 =
        (C152482 * C152318 + ae * C152482 * C152502 + be * C152482 * C152503 +
         C152272 * (ae * C152482 * C152418 + be * C152482 * C152420 +
                    C152272 * C152482 * C152333)) /
        C152053;
    const double C3522 =
        (C152318 + C152333 * C152530 + ae * (C152502 + C152625 * C152530) +
         be * (C152503 + C152628 * C152530) +
         C152272 *
             (ae * (C152418 + C152454 * C152530) +
              be * (C152420 + C152456 * C152530) +
              C152272 * (C152333 +
                         (2 * C152278 * C152329 +
                          C152278 * (C152329 +
                                     (C152323 * C152324 +
                                      C152275 * bs[9] * std::pow(C152274, 9)) *
                                         C152044 * C152290)) *
                             C152530))) /
        C152053;
    const double C1378 =
        (2 * (C152272 * C152391 + C152387 * be) +
         C152272 * (C152391 + C152272 * C152502 + C152499 * be) +
         (C152387 + C152413 * C152275) * be) /
        C152045;
    const double C1520 =
        (C152272 * C152391 + C152387 * be + C152502 * C152530) / C152045;
    const double C1951 =
        (C152482 * (C152391 + C152272 * C152502 + C152499 * be)) / C152045;
    const double C8574 =
        (2 * C152482 * C152502 + C152482 * (C152502 + C152625 * C152530)) /
        C152045;
    const double C7806 = C7795 - C7796;
    const double C152612 = C152610 + C152603;
    const double C152671 = C152664 + C152651;
    const double C8607 = C8594 - C8595;
    const double C152727 = C152272 * C152725;
    const double C152899 = 3 * C152725;
    const double C152892 = ae * C152725;
    const double C5041 =
        (2 * (ae * (C152371 + C152395 * C152530) +
              be * (C152375 + C152401 * C152530) + C152272 * C152780) +
         ae * (C152589 + C152725 * C152530) +
         be * (C152590 + C152726 * C152530) +
         C152272 *
             (C152780 + ae * (C152579 + C152708 * C152530) +
              be * (C152582 + C152711 * C152530) +
              C152272 * (ae * (C152395 + C152429 * C152530) +
                         be * (C152401 + C152437 * C152530) +
                         C152272 * (C152321 + C152278 * C152329 * C152530)))) /
        C152053;
    const double C6373 =
        (2 * C152482 * C152589 + C152482 * (C152589 + C152725 * C152530)) /
        C152045;
    const double C31182 =
        (3 * (C152589 + C152725 * C152530) +
         C152482 * (2 * C152482 * C152725 +
                    C152482 * (C152725 + C152937 * C152530))) /
        C152045;
    const double C152932 = C152919 + C152926;
    const double C153010 = C153008 + C153004;
    const double C56431 = C56429 - C56426;
    const double C55995 = C55993 - C55990;
    const double C152880 = C152838 + C152876;
    const double C153042 = C153018 + C153019;
    const double C153127 = ae * C153120;
    const double C153420 = C152767 + C153419;
    const double C34047 = C24216 * C31180;
    const double C54896 = C2881 * C31180;
    const double C57186 = C134 * C31180;
    const double C68511 = C11439 * C31180;
    const double C135736 = C70502 * C31180;
    const double C151298 = C152193 * C31180;
    const double C153069 = C152272 * C153063;
    const double C153114 = C153112 + C153108;
    const double C56762 =
        (5 * (3 * C153426 + C152482 * C153455) +
         C152482 * (4 * C153455 +
                    C152482 * (3 * C153102 +
                               C152482 * (2 * C153122 +
                                          C152482 * (C152852 +
                                                     C153045 * C152530))))) /
        C152045;
    const double C56770 = C56766 - C56767;
    const double C153141 = C153138 + C153140;
    const double C57524 =
        (6 * (4 * C153433 + C152482 * C153463) +
         C152482 *
             (5 * C153463 +
              C152482 *
                  (4 * C153151 +
                   C152482 * (3 * C153104 +
                              C152482 * (2 * C153124 +
                                         C152482 * (C152404 +
                                                    C152440 * C152530)))))) /
        C152045;
    const double C57532 = C57528 - C57529;
    const double C190 = C135 * C142;
    const double C415 = C135 * C346;
    const double C803 = C135 * C347;
    const double C644 = C135 * C575;
    const double C938 = C135 * C576;
    const double C1143 = C135 * C1109;
    const double C152466 = C152435 + C152464;
    const double C152465 = C152427 + C152463;
    const double C154115 = C154053 + C154107;
    const double C11434 = C154088 - (C153651 * C153634) / C152045;
    const double C98917 = C665 * C154089;
    const double C125 = C154089 / C152085 - C153649 / C152198;
    const double C15649 = C665 * C11435;
    const double C154108 = C154056 + C154088;
    const double C154117 = C154080 + C154113;
    const double C63395 = C154104 - (C153900 * C153889) / C152045;
    const double C55721 = C154105 / C152085 - C153898 / C152198;
    const double C154114 = C154082 + C154104;
    const double C152162 = C152069 / C152055;
    const double C152158 = C152069 / C152045;
    const double C2880 =
        (((-4 * C152056) / C152045 - C152069 / C152045) * ae) / C152055 +
        ((2 * ((0 * ae) / C152045 - C152056 / C152053) - C152069 / C152055) *
         ae) /
            C152045;
    const double C11438 =
        (((-4 * C152056) / C152045 - C152069 / C152045) * ae) / C152045;
    const double C24213 =
        (-(be * -2 * C152052) / C152053) / C152085 -
        ((2 * ((-C152052 / C152045) / C152085 - (C152063 * be) / C152045) -
          (C152043 * ((-4 * C152056) / C152045 - C152069 / C152045) * be) /
              C152045) *
         be) /
            C152045 -
        C152064 / C152055;
    const double C24215 =
        (-(((-4 * C152056) / C152045 - C152069 / C152045) * be) / C152045) /
            C152085 -
        ((2 * ((-C152059 / C152045) / C152085 - (0 * be) / C152045) -
          C152069 / C152055) *
         be) /
            C152045;
    const double C2921 = C2878 * C140;
    const double C2917 = C2878 * C139;
    const double C2897 = C2878 * C138;
    const double C2885 = C2878 * C137;
    const double C3243 = C2878 * C344;
    const double C3231 = C2878 * C343;
    const double C3227 = C2878 * C340;
    const double C3215 = C2878 * C339;
    const double C3561 = C2878 * C573;
    const double C3549 = C2878 * C572;
    const double C3545 = C2878 * C569;
    const double C3533 = C2878 * C568;
    const double C3828 = C2878 * C338;
    const double C4069 = C2878 * C567;
    const double C4409 = C2878 * C1107;
    const double C4397 = C2878 * C1106;
    const double C52089 = C2878 * C2299;
    const double C52085 = C2878 * C2300;
    const double C52065 = C2878 * C571;
    const double C52053 = C2878 * C570;
    const double C52893 = C2878 * C1516;
    const double C52881 = C2878 * C1517;
    const double C52869 = C2878 * C1105;
    const double C53514 = C2878 * C6368;
    const double C54276 = C2878 * C3507;
    const double C54264 = C2878 * C1948;
    const double C54889 = C2878 * C7740;
    const double C102414 = C2878 * C1947;
    const double C2929 = C2882 * C346;
    const double C2909 = C2882 * C345;
    const double C2905 = C2882 * C344;
    const double C2893 = C2882 * C343;
    const double C3251 = C2882 * C3191;
    const double C3239 = C2882 * C3190;
    const double C3219 = C2882 * C1374;
    const double C3207 = C2882 * C1373;
    const double C3569 = C2882 * C3509;
    const double C3557 = C2882 * C3508;
    const double C3537 = C2882 * C1947;
    const double C3525 = C2882 * C1946;
    const double C3836 = C2882 * C1372;
    const double C4077 = C2882 * C1945;
    const double C4417 = C2882 * C4381;
    const double C4405 = C2882 * C4380;
    const double C52097 = C2882 * C6365;
    const double C52077 = C2882 * C6367;
    const double C52073 = C2882 * C3507;
    const double C52061 = C2882 * C1948;
    const double C52901 = C2882 * C5032;
    const double C52889 = C2882 * C5033;
    const double C52877 = C2882 * C4379;
    const double C53522 = C2882 * C30183;
    const double C54284 = C2882 * C28690;
    const double C54272 = C2882 * C5771;
    const double C54897 = C2882 * C31178;
    const double C102422 = C2882 * C5770;
    const double C11479 = C11440 * C347;
    const double C11467 = C11440 * C337;
    const double C11463 = C11440 * C338;
    const double C11455 = C11440 * C339;
    const double C11447 = C11440 * C340;
    const double C11755 = C11440 * C1372;
    const double C11747 = C11440 * C1373;
    const double C11739 = C11440 * C1374;
    const double C11727 = C11440 * C343;
    const double C11719 = C11440 * C344;
    const double C11711 = C11440 * C345;
    const double C12033 = C11440 * C1514;
    const double C12025 = C11440 * C1515;
    const double C12017 = C11440 * C1516;
    const double C12005 = C11440 * C1106;
    const double C11997 = C11440 * C1107;
    const double C11989 = C11440 * C1108;
    const double C12273 = C11440 * C346;
    const double C12483 = C11440 * C1109;
    const double C12771 = C11440 * C1945;
    const double C12763 = C11440 * C1946;
    const double C12755 = C11440 * C1947;
    const double C19159 = C11440 * C4381;
    const double C19151 = C11440 * C4380;
    const double C19499 = C11440 * C6364;
    const double C19491 = C11440 * C6366;
    const double C19476 = C11440 * C1517;
    const double C19469 = C11440 * C1105;
    const double C20517 = C11440 * C3509;
    const double C20509 = C11440 * C3508;
    const double C20499 = C11440 * C1948;
    const double C21318 = C11440 * C3507;
    const double C22298 = C11440 * C4379;
    const double C23086 = C11440 * C6368;
    const double C58431 = C11440 * C5032;
    const double C58739 = C11440 * C9200;
    const double C59725 = C11440 * C6365;
    const double C60514 = C11440 * C6367;
    const double C61498 = C11440 * C5033;
    const double C62288 = C11440 * C9201;
    const double C68512 = C11440 * C31178;
    const double C69175 = C11440 * C30183;
    const double C69709 = C11440 * C34030;
    const double C24264 = C24217 * C346;
    const double C24244 = C24217 * C345;
    const double C24240 = C24217 * C344;
    const double C24228 = C24217 * C343;
    const double C24570 = C24217 * C3191;
    const double C24558 = C24217 * C3190;
    const double C24538 = C24217 * C1374;
    const double C24526 = C24217 * C1373;
    const double C24872 = C24217 * C3509;
    const double C24860 = C24217 * C3508;
    const double C24840 = C24217 * C1947;
    const double C24828 = C24217 * C1946;
    const double C25139 = C24217 * C1372;
    const double C25380 = C24217 * C1945;
    const double C25704 = C24217 * C4381;
    const double C25692 = C24217 * C4380;
    const double C31232 = C24217 * C6365;
    const double C31212 = C24217 * C6367;
    const double C31208 = C24217 * C3507;
    const double C31196 = C24217 * C1948;
    const double C32040 = C24217 * C5032;
    const double C32028 = C24217 * C5033;
    const double C32016 = C24217 * C4379;
    const double C32665 = C24217 * C30183;
    const double C33427 = C24217 * C28690;
    const double C33415 = C24217 * C5771;
    const double C34048 = C24217 * C31178;
    const double C39067 = C24217 * C5770;
    const double C34977 = C34930 * C1372;
    const double C34949 = C34930 * C1373;
    const double C34945 = C34930 * C1374;
    const double C35239 = C34930 * C4802;
    const double C35211 = C34930 * C3190;
    const double C35489 = C34930 * C5032;
    const double C35461 = C34930 * C4380;
    const double C35723 = C34930 * C3191;
    const double C35945 = C34930 * C4381;
    const double C36231 = C34930 * C5770;
    const double C44362 = C34930 * C5033;
    const double C44358 = C34930 * C4379;
    const double C45060 = C34930 * C5771;
    const double C45606 = C34930 * C28690;
    const double C46280 = C34930 * C29104;
    const double C46826 = C34930 * C30183;
    const double C70542 = C70503 * C347;
    const double C70530 = C70503 * C337;
    const double C70526 = C70503 * C338;
    const double C70518 = C70503 * C339;
    const double C70510 = C70503 * C340;
    const double C70818 = C70503 * C1372;
    const double C70810 = C70503 * C1373;
    const double C70802 = C70503 * C1374;
    const double C70790 = C70503 * C343;
    const double C70782 = C70503 * C344;
    const double C70774 = C70503 * C345;
    const double C71096 = C70503 * C1514;
    const double C71088 = C70503 * C1515;
    const double C71080 = C70503 * C1516;
    const double C71068 = C70503 * C1106;
    const double C71060 = C70503 * C1107;
    const double C71052 = C70503 * C1108;
    const double C71336 = C70503 * C346;
    const double C71546 = C70503 * C1109;
    const double C71834 = C70503 * C1945;
    const double C71826 = C70503 * C1946;
    const double C71818 = C70503 * C1947;
    const double C78474 = C70503 * C5032;
    const double C78466 = C70503 * C4380;
    const double C78454 = C70503 * C3508;
    const double C78834 = C70503 * C6364;
    const double C78826 = C70503 * C9200;
    const double C78812 = C70503 * C6368;
    const double C78804 = C70503 * C6366;
    const double C78799 = C70503 * C1517;
    const double C78790 = C70503 * C1105;
    const double C79178 = C70503 * C3509;
    const double C79888 = C70503 * C6365;
    const double C79879 = C70503 * C3507;
    const double C79870 = C70503 * C1948;
    const double C80690 = C70503 * C6367;
    const double C81682 = C70503 * C5033;
    const double C81674 = C70503 * C4379;
    const double C82478 = C70503 * C9201;
    const double C88224 = C70503 * C4381;
    const double C135737 = C70503 * C31178;
    const double C136400 = C70503 * C30183;
    const double C136934 = C70503 * C34030;
    const double C74372 = C74325 * C1372;
    const double C74344 = C74325 * C1373;
    const double C74340 = C74325 * C1374;
    const double C74634 = C74325 * C4802;
    const double C74606 = C74325 * C3190;
    const double C74884 = C74325 * C5032;
    const double C74856 = C74325 * C4380;
    const double C75118 = C74325 * C3191;
    const double C75340 = C74325 * C4381;
    const double C75626 = C74325 * C5770;
    const double C130920 = C74325 * C5033;
    const double C130916 = C74325 * C4379;
    const double C131618 = C74325 * C5771;
    const double C132164 = C74325 * C28690;
    const double C132838 = C74325 * C29104;
    const double C133384 = C74325 * C30183;
    const double C83658 = C83611 * C346;
    const double C83638 = C83611 * C345;
    const double C83634 = C83611 * C344;
    const double C83622 = C83611 * C343;
    const double C83964 = C83611 * C3191;
    const double C83952 = C83611 * C3190;
    const double C83932 = C83611 * C1374;
    const double C83920 = C83611 * C1373;
    const double C84266 = C83611 * C3509;
    const double C84254 = C83611 * C3508;
    const double C84234 = C83611 * C1947;
    const double C84222 = C83611 * C1946;
    const double C84533 = C83611 * C1372;
    const double C84774 = C83611 * C1945;
    const double C85098 = C83611 * C4381;
    const double C85086 = C83611 * C4380;
    const double C93465 = C83611 * C5770;
    const double C93804 = C83611 * C6365;
    const double C93782 = C83611 * C3507;
    const double C93776 = C83611 * C1948;
    const double C94828 = C83611 * C5032;
    const double C94815 = C83611 * C4379;
    const double C95635 = C83611 * C5033;
    const double C96622 = C83611 * C5771;
    const double C97417 = C83611 * C6367;
    const double C149945 = C83611 * C30183;
    const double C150695 = C83611 * C28690;
    const double C151299 = C83611 * C31178;
    const double C152122 = C152118 - C152111;
    const double C74362 = C154116 * C163;
    const double C74358 = C154116 * C162;
    const double C74330 = C154116 * C161;
    const double C74624 = C154116 * C379;
    const double C74620 = C154116 * C376;
    const double C74874 = C154116 * C608;
    const double C74870 = C154116 * C605;
    const double C75108 = C154116 * C375;
    const double C75330 = C154116 * C604;
    const double C75616 = C154116 * C1124;
    const double C130934 = C154116 * C607;
    const double C130906 = C154116 * C606;
    const double C131608 = C154116 * C1123;
    const double C132154 = C154116 * C1532;
    const double C132828 = C154116 * C1963;
    const double C133374 = C154116 * C2315;
    const double C28422 =
        (C154109 + 2 * C153851) / C152085 - (C154116 * C153847) / C152045;
    const double C34971 = C34918 * C374;
    const double C34959 = C34918 * C375;
    const double C34939 = C34918 * C376;
    const double C35233 = C34918 * C1389;
    const double C35221 = C34918 * C379;
    const double C35483 = C34918 * C1531;
    const double C35471 = C34918 * C1124;
    const double C35717 = C34918 * C380;
    const double C35939 = C34918 * C1125;
    const double C36225 = C34918 * C1962;
    const double C44372 = C34918 * C1532;
    const double C44352 = C34918 * C1123;
    const double C45054 = C34918 * C1963;
    const double C45600 = C34918 * C3519;
    const double C46274 = C34918 * C4391;
    const double C46820 = C34918 * C6386;
    const double C74366 = C154112 * C374;
    const double C74354 = C154112 * C375;
    const double C74334 = C154112 * C376;
    const double C74628 = C154112 * C1389;
    const double C74616 = C154112 * C379;
    const double C74878 = C154112 * C1531;
    const double C74866 = C154112 * C1124;
    const double C75112 = C154112 * C380;
    const double C75334 = C154112 * C1125;
    const double C75620 = C154112 * C1962;
    const double C130930 = C154112 * C1532;
    const double C130910 = C154112 * C1123;
    const double C131612 = C154112 * C1963;
    const double C132158 = C154112 * C3519;
    const double C132832 = C154112 * C4391;
    const double C133378 = C154112 * C6386;
    const double C28423 = (C154097 + 2 * C153858 + C154116) / C152085 -
                          (C154112 * C153847) / C152045;
    const double C28424 = (C154071 + C153855 / C152045 + C154112) / C152085 -
                          (C154102 * C153847) / C152045;
    const double C7833 = C7826 + C7767;
    const double C48090 = C48075 + C48076;
    const double C63810 = C63796 + C63797;
    const double C107720 = C107706 + C107707;
    const double C116553 = C116538 + C116539;
    const double C8617 = C8613 * C2874;
    const double C16839 = C8613 * C11433;
    const double C48829 = C8613 * C154106;
    const double C56415 = C8613 * C153638;
    const double C64468 = C8613 * C154002;
    const double C108378 = C8613 * C74316;
    const double C117292 = C8613 * C153643;
    const double C9968 = C9966 * C2874;
    const double C17489 = C9966 * C11433;
    const double C50151 = C9966 * C154106;
    const double C57180 = C9966 * C153638;
    const double C65646 = C9966 * C154002;
    const double C109556 = C9966 * C74316;
    const double C118614 = C9966 * C153643;
    const double C10575 = C10574 * C2874;
    const double C50740 = C10574 * C154106;
    const double C55979 = C10574 * C153638;
    const double C63801 = C10574 * C154002;
    const double C107711 = C10574 * C74316;
    const double C119203 = C10574 * C153643;
    const double C203 = C197 - C187;
    const double C426 = C418 - C388;
    const double C432 = C424 - C412;
    const double C655 = C647 - C617;
    const double C661 = C653 - C641;
    const double C1152 = C1148 - C1140;
    const double C7511 = C7505 - C7483;
    const double C7514 = C7508 - C7495;
    const double C3240 = C2881 * C3196;
    const double C24559 = C24216 * C3196;
    const double C35212 = C34929 * C3196;
    const double C74607 = C74324 * C3196;
    const double C83953 = C152193 * C3196;
    const double C3558 = C2881 * C3514;
    const double C7499 = C134 * C3514;
    const double C20510 = C11439 * C3514;
    const double C24861 = C24216 * C3514;
    const double C32037 = C24214 * C3514;
    const double C52898 = C2879 * C3514;
    const double C58428 = C11437 * C3514;
    const double C78471 = C70500 * C3514;
    const double C78455 = C70502 * C3514;
    const double C84255 = C152193 * C3514;
    const double C4406 = C2881 * C4386;
    const double C19152 = C11439 * C4386;
    const double C25693 = C24216 * C4386;
    const double C35462 = C34929 * C4386;
    const double C39064 = C24214 * C4386;
    const double C74857 = C74324 * C4386;
    const double C78467 = C70502 * C4386;
    const double C85087 = C152193 * C4386;
    const double C102419 = C2879 * C4386;
    const double C3241 = C154071 * C3202;
    const double C24560 = C154071 * C3202;
    const double C35237 = C34919 * C3202;
    const double C35213 = C154044 * C3202;
    const double C74632 = C154102 * C3202;
    const double C74608 = C154044 * C3202;
    const double C83954 = C83602 * C3202;
    const double C4407 = C154071 * C4392;
    const double C19153 = C153855 * C4392;
    const double C25694 = C154071 * C4392;
    const double C35463 = C154044 * C4392;
    const double C36229 = C34919 * C4392;
    const double C39065 = C24207 * C4392;
    const double C74858 = C154044 * C4392;
    const double C75624 = C154102 * C4392;
    const double C78468 = C153855 * C4392;
    const double C85088 = C83602 * C4392;
    const double C93463 = C153858 * C4392;
    const double C102420 = C154097 * C4392;
    const double C3238 = C2881 * C3195;
    const double C24557 = C24216 * C3195;
    const double C35210 = C34929 * C3195;
    const double C74605 = C74324 * C3195;
    const double C83951 = C152193 * C3195;
    const double C3556 = C2881 * C3513;
    const double C7497 = C134 * C3513;
    const double C20508 = C11439 * C3513;
    const double C24859 = C24216 * C3513;
    const double C32035 = C24214 * C3513;
    const double C52896 = C2879 * C3513;
    const double C58426 = C11437 * C3513;
    const double C78469 = C70500 * C3513;
    const double C78453 = C70502 * C3513;
    const double C84253 = C152193 * C3513;
    const double C4404 = C2881 * C4385;
    const double C19150 = C11439 * C4385;
    const double C25691 = C24216 * C4385;
    const double C35460 = C34929 * C4385;
    const double C39062 = C24214 * C4385;
    const double C74855 = C74324 * C4385;
    const double C78465 = C70502 * C4385;
    const double C85085 = C152193 * C4385;
    const double C102417 = C2879 * C4385;
    const double C152774 = C152772 + C152761;
    const double C152773 = C152771 + C152758;
    const double C152857 = C152849 + C152831;
    const double C7791 = C664 * C154058;
    const double C8279 = C664 * C2875;
    const double C15657 = C664 * C11435;
    const double C15650 = C664 * C154036;
    const double C48083 = C664 * C154058;
    const double C48531 = C664 * C154087;
    const double C64203 = C664 * C153648;
    const double C98925 = C664 * C154089;
    const double C98918 = C664 * C154036;
    const double C108113 = C664 * C153648;
    const double C116546 = C664 * C83605;
    const double C116994 = C664 * C153651;
    const double C7793 = C668 * C2875;
    const double C7768 = C668 * C154058;
    const double C8281 = C668 * C2874;
    const double C15652 = C668 * C11435;
    const double C48085 = C668 * C154087;
    const double C48077 = C668 * C154058;
    const double C48533 = C668 * C154106;
    const double C56245 = C668 * C153638;
    const double C63805 = C668 * C153648;
    const double C64204 = C668 * C154002;
    const double C98920 = C668 * C154089;
    const double C107715 = C668 * C153648;
    const double C108114 = C668 * C74316;
    const double C116548 = C668 * C153651;
    const double C116540 = C668 * C83605;
    const double C116996 = C668 * C153643;
    const double C8599 = C1155 * C2875;
    const double C8583 = C1155 * C154058;
    const double C16315 = C1155 * C11435;
    const double C48833 = C1155 * C154087;
    const double C48828 = C1155 * C154058;
    const double C64473 = C1155 * C153648;
    const double C99583 = C1155 * C154089;
    const double C108383 = C1155 * C153648;
    const double C117296 = C1155 * C153651;
    const double C117291 = C1155 * C83605;
    const double C7518 = C7512 + C7488;
    const double C7519 = C7513 + C7492;
    const double C10564 = C7828 + C7829;
    const double C50739 = C48079 + C48080;
    const double C63811 = C63798 + C63799;
    const double C66171 = C63799 + C63798;
    const double C107721 = C107708 + C107709;
    const double C110081 = C107709 + C107708;
    const double C119202 = C116542 + C116543;
    const double C9963 = C9956 - C9957;
    const double C57190 = C57182 - C57183;
    const double C9223 = C9222 * C2874;
    const double C49420 = C9222 * C154106;
    const double C56416 = C9222 * C153638;
    const double C64470 = C9222 * C154002;
    const double C108380 = C9222 * C74316;
    const double C117883 = C9222 * C153643;
    const double C56434 = C56432 * C153638;
    const double C64996 = C56432 * C154002;
    const double C108906 = C56432 * C74316;
    const double C55998 = C55996 * C153638;
    const double C66172 = C55996 * C154002;
    const double C110082 = C55996 * C74316;
    const double C192 = C153792 * C166;
    const double C389 = C153792 * C373;
    const double C2927 = C154097 * C373;
    const double C11469 = C153855 * C373;
    const double C12271 = C154035 * C373;
    const double C24262 = C24207 * C373;
    const double C70532 = C153855 * C373;
    const double C71334 = C70494 * C373;
    const double C83656 = C153858 * C373;
    const double C413 = C153792 * C381;
    const double C2911 = C154071 * C381;
    const double C3834 = C154097 * C381;
    const double C11753 = C154035 * C381;
    const double C11713 = C153855 * C381;
    const double C24246 = C154071 * C381;
    const double C25137 = C24207 * C381;
    const double C34975 = C34919 * C381;
    const double C70816 = C70494 * C381;
    const double C70776 = C153855 * C381;
    const double C74370 = C154102 * C381;
    const double C83640 = C83602 * C381;
    const double C84531 = C153858 * C381;
    const double C618 = C153792 * C602;
    const double C12481 = C154035 * C602;
    const double C71544 = C70494 * C602;
    const double C642 = C153792 * C610;
    const double C12031 = C154035 * C610;
    const double C71094 = C70494 * C610;
    const double C1141 = C153792 * C1126;
    const double C4075 = C154097 * C1126;
    const double C11991 = C153855 * C1126;
    const double C12769 = C154035 * C1126;
    const double C25378 = C24207 * C1126;
    const double C71054 = C153855 * C1126;
    const double C71832 = C70494 * C1126;
    const double C84772 = C153858 * C1126;
    const double C7831 = C7819 * C2875;
    const double C7827 = C7819 * C154058;
    const double C18013 = C7819 * C11435;
    const double C48088 = C7819 * C154087;
    const double C48078 = C7819 * C154058;
    const double C56246 = C7819 * C153638;
    const double C63807 = C7819 * C153648;
    const double C64206 = C7819 * C154002;
    const double C101281 = C7819 * C154089;
    const double C107717 = C7819 * C153648;
    const double C108116 = C7819 * C74316;
    const double C116551 = C7819 * C153651;
    const double C116541 = C7819 * C83605;
    const double C8614 = C8610 + C8593;
    const double C7822 = C7813 + C7784;
    const double C152335 = C152320 + C152334;
    const double C152630 = C152624 + C152617;
    const double C7755 =
        (3 * (C152318 + C152333 * C152530) +
         C152482 *
             (2 * C152648 +
              C152482 * (C152333 +
                         (2 * C152278 * C152329 +
                          C152278 * (C152329 +
                                     (C152323 * C152324 +
                                      C152275 * bs[9] * std::pow(C152274, 9)) *
                                         C152044 * C152290)) *
                             C152530))) /
        C152053;
    const double C8576 =
        (ae *
             (2 * C152482 * C152418 + C152482 * (C152418 + C152454 * C152530)) +
         be *
             (2 * C152482 * C152420 + C152482 * (C152420 + C152456 * C152530)) +
         C152272 *
             (2 * C152648 +
              C152482 * (C152333 +
                         (2 * C152278 * C152329 +
                          C152278 * (C152329 +
                                     (C152323 * C152324 +
                                      C152275 * bs[9] * std::pow(C152274, 9)) *
                                         C152044 * C152290)) *
                             C152530))) /
        C152053;
    const double C8056 = C153792 * C1529;
    const double C12035 = C153855 * C1529;
    const double C71098 = C153855 * C1529;
    const double C7798 = C153792 * C2312;
    const double C8597 = C153792 * C6382;
    const double C19501 = C153855 * C6382;
    const double C78836 = C153855 * C6382;
    const double C7788 = C153792 * C7754;
    const double C32005 =
        (2 * (ae * (2 * C152794 + C152482 * C152972) +
              be * (2 * C152795 + C152482 * C152973) + C152272 * C153168) +
         ae *
             (2 * C152482 * C152725 + C152482 * (C152725 + C152937 * C152530)) +
         be *
             (2 * C152482 * C152726 + C152482 * (C152726 + C152940 * C152530)) +
         C152272 *
             (C153168 +
              ae * (2 * C152998 + C152482 * (C152708 + C152921 * C152530)) +
              be * (2 * C152999 + C152482 * (C152711 + C152924 * C152530)) +
              C152272 * (ae * (2 * C153000 +
                               C152482 * (C152429 + C152901 * C152530)) +
                         be * (2 * C153001 +
                               C152482 * (C152437 + C152907 * C152530)) +
                         C152272 * (2 * C153002 +
                                    C152482 * (C152898 +
                                               C152278 *
                                                   (C152323 * C152324 +
                                                    C152275 * bs[9] *
                                                        std::pow(C152274, 9)) *
                                                   C152044 * C152530))))) /
        C152053;
    const double C55974 =
        (5 * (3 * C152780 + C152482 * C153168) +
         C152482 *
             (4 * C153168 +
              C152482 * (3 * C152974 +
                         C152482 * (2 * C153002 +
                                    C152482 * (C152898 +
                                               C152278 *
                                                   (C152323 * C152324 +
                                                    C152275 * bs[9] *
                                                        std::pow(C152274, 9)) *
                                                   C152044 * C152530))))) /
        C152053;
    const double C56412 =
        (ae *
             (4 * (2 * C152794 + C152482 * C152972) +
              C152482 * (3 * C152972 +
                         C152482 * (2 * C153000 +
                                    C152482 * (C152429 + C152901 * C152530)))) +
         be *
             (4 * (2 * C152795 + C152482 * C152973) +
              C152482 * (3 * C152973 +
                         C152482 * (2 * C153001 +
                                    C152482 * (C152437 + C152907 * C152530)))) +
         C152272 *
             (4 * C153168 +
              C152482 * (3 * C152974 +
                         C152482 * (2 * C153002 +
                                    C152482 * (C152898 +
                                               C152278 *
                                                   (C152323 * C152324 +
                                                    C152275 * bs[9] *
                                                        std::pow(C152274, 9)) *
                                                   C152044 * C152530))))) /
        C152053;
    const double C153158 = C153157 + C153156;
    const double C153172 = C153170 + C153171;
    const double C34050 = C154071 * C31184;
    const double C54899 = C154071 * C31184;
    const double C57189 = C153792 * C31184;
    const double C68514 = C153855 * C31184;
    const double C135739 = C153855 * C31184;
    const double C151301 = C83602 * C31184;
    const double C152461 = C152431 + C152458;
    const double C152495 = C152492 + C152493;
    const double C1513 = C152272 * C152419 + C152491 * C152530;
    const double C152494 = C152489 + C152490;
    const double C152634 = C152420 + C152632;
    const double C152633 = C152418 + C152631;
    const double C152686 = C152272 * C152684;
    const double C152685 = C152272 * C152683;
    const double C152947 = C152906 + C152945;
    const double C28561 = 5 * (3 * C152581 + C152272 * C152722) +
                          C152272 * (4 * C152722 + C152272 * C152944);
    const double C28691 = 3 * C152581 + C152272 * C152722 + C152944 * C152530;
    const double C29105 = C152482 * (4 * C152722 + C152272 * C152944);
    const double C152946 = C152900 + C152943;
    const double C153082 = C153077 + C153058;
    const double C153081 = C153035 + C153076;
    const double C153080 = C153074 + C153055;
    const double C191 = C134 * C157;
    const double C416 = C134 * C368;
    const double C2930 = C2881 * C368;
    const double C12274 = C11439 * C368;
    const double C24265 = C24216 * C368;
    const double C71337 = C70502 * C368;
    const double C83659 = C152193 * C368;
    const double C804 = C134 * C370;
    const double C11480 = C11439 * C370;
    const double C70543 = C70502 * C370;
    const double C645 = C134 * C597;
    const double C939 = C134 * C599;
    const double C1144 = C134 * C1120;
    const double C12484 = C11439 * C1120;
    const double C71547 = C70502 * C1120;
    const double C3837 = C2881 * C1379;
    const double C11756 = C11439 * C1379;
    const double C25140 = C24216 * C1379;
    const double C34978 = C34929 * C1379;
    const double C70819 = C70502 * C1379;
    const double C74373 = C74324 * C1379;
    const double C84534 = C152193 * C1379;
    const double C8055 = C134 * C1521;
    const double C12034 = C11439 * C1521;
    const double C71097 = C70502 * C1521;
    const double C4078 = C2881 * C1952;
    const double C12772 = C11439 * C1952;
    const double C15448 = C134 * C1952;
    const double C25381 = C24216 * C1952;
    const double C71835 = C70502 * C1952;
    const double C84775 = C152193 * C1952;
    const double C3198 =
        (3 * (C152369 + C152272 * C152511 + C152507 * ae) +
         C152272 * (2 * C152511 + C152272 * C152613 + C152604 * ae) +
         (2 * C152507 + C152272 * C152604) * ae) /
        C152045;
    const double C3516 =
        (C152369 + C152272 * C152511 + C152507 * ae + C152613 * C152530) /
        C152045;
    const double C4388 =
        (C152482 * (2 * C152511 + C152272 * C152613 + C152604 * ae)) / C152045;
    const double C6370 =
        (2 * C152482 * C152613 + C152482 * (C152613 + C152684 * C152530)) /
        C152045;
    const double C152730 = C152703 + C152728;
    const double C31233 = C24216 * C6374;
    const double C52098 = C2881 * C6374;
    const double C59726 = C11439 * C6374;
    const double C63595 = C134 * C6374;
    const double C79889 = C70502 * C6374;
    const double C93805 = C152193 * C6374;
    const double C152883 = C152881 + C152864;
    const double C34032 =
        (4 * (2 * C152482 * C152768 + C152482 * C153423) +
         C152482 * (3 * C153423 +
                    C152482 * (2 * C153121 +
                               C152482 * (C152873 + C153067 * C152530)))) /
        C152045;
    const double C189 = C134 * C156;
    const double C414 = C134 * C367;
    const double C2928 = C2881 * C367;
    const double C12272 = C11439 * C367;
    const double C24263 = C24216 * C367;
    const double C71335 = C70502 * C367;
    const double C83657 = C152193 * C367;
    const double C802 = C134 * C369;
    const double C11478 = C11439 * C369;
    const double C70541 = C70502 * C369;
    const double C643 = C134 * C596;
    const double C937 = C134 * C598;
    const double C1142 = C134 * C1119;
    const double C12482 = C11439 * C1119;
    const double C71545 = C70502 * C1119;
    const double C3838 = C154071 * C1387;
    const double C11757 = C153855 * C1387;
    const double C25141 = C154071 * C1387;
    const double C34979 = C154044 * C1387;
    const double C70820 = C153855 * C1387;
    const double C74374 = C154044 * C1387;
    const double C84535 = C83602 * C1387;
    const double C4079 = C154071 * C1960;
    const double C12773 = C153855 * C1960;
    const double C15449 = C153792 * C1960;
    const double C25382 = C154071 * C1960;
    const double C71836 = C153855 * C1960;
    const double C84776 = C83602 * C1960;
    const double C3835 = C2881 * C1378;
    const double C11754 = C11439 * C1378;
    const double C25138 = C24216 * C1378;
    const double C34976 = C34929 * C1378;
    const double C70817 = C70502 * C1378;
    const double C74371 = C74324 * C1378;
    const double C84532 = C152193 * C1378;
    const double C8053 = C134 * C1520;
    const double C12032 = C11439 * C1520;
    const double C71095 = C70502 * C1520;
    const double C4076 = C2881 * C1951;
    const double C12770 = C11439 * C1951;
    const double C15446 = C134 * C1951;
    const double C25379 = C24216 * C1951;
    const double C71833 = C70502 * C1951;
    const double C84773 = C152193 * C1951;
    const double C7815 = C7806 - C7797;
    const double C3203 =
        (3 * (C152304 + ae * C152510 + be * C152511 + C152272 * C152607) +
         ae * (2 * C152510 + C152272 * C152612 + C152604 * be) +
         be * (2 * C152511 + C152272 * C152613 + C152604 * ae) +
         C152272 * (2 * C152607 + ae * C152612 + be * C152613 +
                    C152272 * (C152316 + ae * C152602 + be * C152605 +
                               C152272 * (ae * C152412 + be * C152414 +
                                          C152272 * C152331)))) /
        C152053;
    const double C4393 =
        (2 * (ae * C152482 * C152386 + be * C152482 * C152388 +
              C152272 * C152646) +
         ae * C152482 * C152612 + be * C152482 * C152613 +
         C152272 * (C152646 + ae * C152482 * C152602 + be * C152482 * C152605 +
                    C152272 * (ae * C152482 * C152412 + be * C152482 * C152414 +
                               C152272 * C152482 * C152331))) /
        C152053;
    const double C5040 =
        (2 * (ae * (C152386 + C152412 * C152530) +
              be * (C152388 + C152414 * C152530) + C152272 * C152777) +
         ae * (C152612 + C152683 * C152530) +
         be * (C152613 + C152684 * C152530) +
         C152272 *
             (C152777 + ae * (C152602 + C152666 * C152530) +
              be * (C152605 + C152669 * C152530) +
              C152272 *
                  (ae * (C152412 + C152448 * C152530) +
                   be * (C152414 + C152450 * C152530) +
                   C152272 * (C152331 + (C152329 + (C152323 * C152324 +
                                                    C152275 * bs[9] *
                                                        std::pow(C152274, 9)) *
                                                       C152044 * C152290) *
                                            C152530)))) /
        C152053;
    const double C3197 =
        (3 * (C152367 + C152272 * C152510 + C152507 * be) +
         C152272 * (2 * C152510 + C152272 * C152612 + C152604 * be) +
         (2 * C152507 + C152272 * C152604) * be) /
        C152045;
    const double C3515 =
        (C152367 + C152272 * C152510 + C152507 * be + C152612 * C152530) /
        C152045;
    const double C4387 =
        (C152482 * (2 * C152510 + C152272 * C152612 + C152604 * be)) / C152045;
    const double C6369 =
        (2 * C152482 * C152612 + C152482 * (C152612 + C152683 * C152530)) /
        C152045;
    const double C152682 = C152671 + C152678;
    const double C8611 = C8607 - C8596;
    const double C152729 = C152697 + C152727;
    const double C152908 = C152891 + C152892;
    const double C32042 = C154071 * C5041;
    const double C35491 = C154044 * C5041;
    const double C52903 = C154071 * C5041;
    const double C58433 = C153855 * C5041;
    const double C74886 = C154044 * C5041;
    const double C78476 = C153855 * C5041;
    const double C94830 = C83602 * C5041;
    const double C31231 = C24216 * C6373;
    const double C52096 = C2881 * C6373;
    const double C59724 = C11439 * C6373;
    const double C63593 = C134 * C6373;
    const double C79887 = C70502 * C6373;
    const double C93803 = C152193 * C6373;
    const double C152936 = C152272 * C152932;
    const double C153013 = C153010 + C153012;
    const double C56433 = C56431 + C56427;
    const double C55997 = C55995 + C55991;
    const double C152882 = C152880 + C152861;
    const double C153051 = C153042 + C153020;
    const double C153134 = C153119 + C153127;
    const double C34031 =
        (4 * (2 * C152482 * C152767 + C152482 * C153420) +
         C152482 * (3 * C153420 +
                    C152482 * (2 * C153120 +
                               C152482 * (C152870 + C153064 * C152530)))) /
        C152045;
    const double C57191 = C57186 - C57187;
    const double C153117 = C153114 + C153116;
    const double C56771 = C56770 - C56768;
    const double C153142 = C152272 * C153141;
    const double C57533 = C57532 - C57530;
    const double C159 = (6 * (4 * C152392 + C152278 * C152424) +
                         C152278 * (5 * C152424 + C152278 * C152466)) /
                        C152045;
    const double C601 =
        (4 * C152392 + C152278 * C152424 + C152466 * C152530) / C152045;
    const double C934 = (C152482 * (5 * C152424 + C152278 * C152466)) / C152045;
    const double C1128 =
        (ae * C152482 * C152465 + be * C152482 * C152466 +
         C152272 * C152482 *
             (4 * C152333 +
              C152278 *
                  (3 * C152331 +
                   C152278 * (2 * C152278 * C152329 +
                              C152278 * (C152329 + (C152323 * C152324 +
                                                    C152275 * bs[9] *
                                                        std::pow(C152274, 9)) *
                                                       C152044 * C152290))))) /
        C152053;
    const double C158 = (6 * (4 * C152391 + C152278 * C152423) +
                         C152278 * (5 * C152423 + C152278 * C152465)) /
                        C152045;
    const double C600 =
        (4 * C152391 + C152278 * C152423 + C152465 * C152530) / C152045;
    const double C933 = (C152482 * (5 * C152423 + C152278 * C152465)) / C152045;
    const double C98927 = C667 * C154115;
    const double C98923 = C666 * C154115;
    const double C98922 = C7818 * C154115;
    const double C98915 = C7817 * C154115;
    const double C99319 = C665 * C154115;
    const double C99585 = C1154 * C154115;
    const double C99581 = C8612 * C154115;
    const double C100107 = C8613 * C154115;
    const double C100757 = C9966 * C154115;
    const double C101279 = C7821 * C154115;
    const double C122 =
        (C154106 + 2 * C153643) / C152085 - (C154115 * C153634) / C152045;
    const double C15660 = C668 * C11434;
    const double C15656 = C665 * C11434;
    const double C15653 = C667 * C11434;
    const double C15648 = C666 * C11434;
    const double C16052 = C664 * C11434;
    const double C16318 = C1155 * C11434;
    const double C16314 = C1154 * C11434;
    const double C18012 = C7820 * C11434;
    const double C98928 = C668 * C154108;
    const double C98924 = C665 * C154108;
    const double C98921 = C667 * C154108;
    const double C98916 = C666 * C154108;
    const double C99320 = C664 * C154108;
    const double C99586 = C1155 * C154108;
    const double C99582 = C1154 * C154108;
    const double C101280 = C7820 * C154108;
    const double C123 = (C154087 + 2 * C153651 + C154115) / C152085 -
                        (C154108 * C153634) / C152045;
    const double C124 = (C154058 + C153648 / C152045 + C154108) / C152085 -
                        (C154089 * C153634) / C152045;
    const double C55718 =
        (C154110 + 2 * C153893) / C152085 - (C154117 * C153889) / C152045;
    const double C55719 = (C154099 + 2 * C153900 + C154117) / C152085 -
                          (C154114 * C153889) / C152045;
    const double C55720 = (C154074 + C153897 / C152045 + C154114) / C152085 -
                          (C154105 * C153889) / C152045;
    const double C152166 = C152161 - C152162;
    const double C152170 = C152165 - C152158;
    const double C2925 = C2880 * C337;
    const double C2913 = C2880 * C338;
    const double C2901 = C2880 * C339;
    const double C2889 = C2880 * C340;
    const double C3247 = C2880 * C1373;
    const double C3235 = C2880 * C1374;
    const double C3223 = C2880 * C343;
    const double C3211 = C2880 * C344;
    const double C3565 = C2880 * C1515;
    const double C3553 = C2880 * C1516;
    const double C3541 = C2880 * C1106;
    const double C3529 = C2880 * C1107;
    const double C3832 = C2880 * C345;
    const double C4073 = C2880 * C1108;
    const double C4413 = C2880 * C1946;
    const double C4401 = C2880 * C1947;
    const double C52093 = C2880 * C6366;
    const double C52081 = C2880 * C6368;
    const double C52069 = C2880 * C1517;
    const double C52057 = C2880 * C1105;
    const double C52897 = C2880 * C3508;
    const double C52885 = C2880 * C3507;
    const double C52873 = C2880 * C1948;
    const double C53518 = C2880 * C6367;
    const double C54280 = C2880 * C5033;
    const double C54268 = C2880 * C4379;
    const double C54893 = C2880 * C9201;
    const double C102418 = C2880 * C4380;
    const double C11475 = C11438 * C141;
    const double C11471 = C11438 * C140;
    const double C11459 = C11438 * C139;
    const double C11451 = C11438 * C138;
    const double C11443 = C11438 * C137;
    const double C11751 = C11438 * C345;
    const double C11743 = C11438 * C344;
    const double C11735 = C11438 * C343;
    const double C11731 = C11438 * C340;
    const double C11723 = C11438 * C339;
    const double C11715 = C11438 * C338;
    const double C12029 = C11438 * C574;
    const double C12021 = C11438 * C573;
    const double C12013 = C11438 * C572;
    const double C12009 = C11438 * C569;
    const double C12001 = C11438 * C568;
    const double C11993 = C11438 * C567;
    const double C12269 = C11438 * C337;
    const double C12479 = C11438 * C566;
    const double C12767 = C11438 * C1108;
    const double C12759 = C11438 * C1107;
    const double C12751 = C11438 * C1106;
    const double C19155 = C11438 * C1946;
    const double C19147 = C11438 * C1947;
    const double C19495 = C11438 * C2298;
    const double C19487 = C11438 * C2299;
    const double C19480 = C11438 * C571;
    const double C19465 = C11438 * C570;
    const double C20513 = C11438 * C1515;
    const double C20505 = C11438 * C1516;
    const double C20495 = C11438 * C1105;
    const double C21314 = C11438 * C1517;
    const double C22294 = C11438 * C1948;
    const double C23082 = C11438 * C2300;
    const double C58427 = C11438 * C3508;
    const double C58735 = C11438 * C7741;
    const double C59721 = C11438 * C6366;
    const double C60510 = C11438 * C6368;
    const double C61494 = C11438 * C3507;
    const double C62284 = C11438 * C7740;
    const double C68508 = C11438 * C9201;
    const double C69171 = C11438 * C6367;
    const double C69705 = C11438 * C10553;
    const double C24256 = C24213 * C140;
    const double C24252 = C24213 * C139;
    const double C24232 = C24213 * C138;
    const double C24220 = C24213 * C137;
    const double C24562 = C24213 * C344;
    const double C24550 = C24213 * C343;
    const double C24546 = C24213 * C340;
    const double C24534 = C24213 * C339;
    const double C24864 = C24213 * C573;
    const double C24852 = C24213 * C572;
    const double C24848 = C24213 * C569;
    const double C24836 = C24213 * C568;
    const double C25131 = C24213 * C338;
    const double C25372 = C24213 * C567;
    const double C25696 = C24213 * C1107;
    const double C25684 = C24213 * C1106;
    const double C31224 = C24213 * C2299;
    const double C31220 = C24213 * C2300;
    const double C31200 = C24213 * C571;
    const double C31188 = C24213 * C570;
    const double C32032 = C24213 * C1516;
    const double C32020 = C24213 * C1517;
    const double C32008 = C24213 * C1105;
    const double C32657 = C24213 * C6368;
    const double C33419 = C24213 * C3507;
    const double C33407 = C24213 * C1948;
    const double C34040 = C24213 * C7740;
    const double C39059 = C24213 * C1947;
    const double C24260 = C24215 * C337;
    const double C24248 = C24215 * C338;
    const double C24236 = C24215 * C339;
    const double C24224 = C24215 * C340;
    const double C24566 = C24215 * C1373;
    const double C24554 = C24215 * C1374;
    const double C24542 = C24215 * C343;
    const double C24530 = C24215 * C344;
    const double C24868 = C24215 * C1515;
    const double C24856 = C24215 * C1516;
    const double C24844 = C24215 * C1106;
    const double C24832 = C24215 * C1107;
    const double C25135 = C24215 * C345;
    const double C25376 = C24215 * C1108;
    const double C25700 = C24215 * C1946;
    const double C25688 = C24215 * C1947;
    const double C31228 = C24215 * C6366;
    const double C31216 = C24215 * C6368;
    const double C31204 = C24215 * C1517;
    const double C31192 = C24215 * C1105;
    const double C32036 = C24215 * C3508;
    const double C32024 = C24215 * C3507;
    const double C32012 = C24215 * C1948;
    const double C32661 = C24215 * C6367;
    const double C33423 = C24215 * C5033;
    const double C33411 = C24215 * C4379;
    const double C34044 = C24215 * C9201;
    const double C39063 = C24215 * C4380;
    const double C2941 = C2920 - C2921;
    const double C2940 = C2916 - C2917;
    const double C2935 = C2896 - C2897;
    const double C2932 = C2884 - C2885;
    const double C3263 = C3242 - C3243;
    const double C3260 = C3230 - C3231;
    const double C3259 = C3226 - C3227;
    const double C3256 = C3214 - C3215;
    const double C3581 = C3560 - C3561;
    const double C3578 = C3548 - C3549;
    const double C3577 = C3544 - C3545;
    const double C3574 = C3532 - C3533;
    const double C3840 = C3827 - C3828;
    const double C4081 = C4068 - C4069;
    const double C4423 = C4408 - C4409;
    const double C4420 = C4396 - C4397;
    const double C52110 = C52088 - C52089;
    const double C52109 = C52084 - C52085;
    const double C52104 = C52064 - C52065;
    const double C52101 = C52052 - C52053;
    const double C52910 = C52892 - C52893;
    const double C52907 = C52880 - C52881;
    const double C52904 = C52868 - C52869;
    const double C53526 = C53513 - C53514;
    const double C54290 = C54275 - C54276;
    const double C54287 = C54263 - C54264;
    const double C54901 = C54888 - C54889;
    const double C102425 = C102413 - C102414;
    const double C2938 = C2908 - C2909;
    const double C2937 = C2904 - C2905;
    const double C2934 = C2892 - C2893;
    const double C3257 = C3218 - C3219;
    const double C3254 = C3206 - C3207;
    const double C3575 = C3536 - C3537;
    const double C3572 = C3524 - C3525;
    const double C52107 = C52076 - C52077;
    const double C52106 = C52072 - C52073;
    const double C52103 = C52060 - C52061;
    const double C52906 = C52876 - C52877;
    const double C54903 = C54896 - C54897;
    const double C11488 = C11466 - C11467;
    const double C11487 = C11462 - C11463;
    const double C11485 = C11454 - C11455;
    const double C11483 = C11446 - C11447;
    const double C11767 = C11746 - C11747;
    const double C11765 = C11738 - C11739;
    const double C11762 = C11726 - C11727;
    const double C11760 = C11718 - C11719;
    const double C11758 = C11710 - C11711;
    const double C12045 = C12024 - C12025;
    const double C12043 = C12016 - C12017;
    const double C12040 = C12004 - C12005;
    const double C12038 = C11996 - C11997;
    const double C12036 = C11988 - C11989;
    const double C12777 = C12762 - C12763;
    const double C12775 = C12754 - C12755;
    const double C19509 = C19498 - C19499;
    const double C19507 = C19490 - C19491;
    const double C19504 = C19475 - C19476;
    const double C19503 = C19468 - C19469;
    const double C20522 = C20498 - C20499;
    const double C21322 = C21317 - C21318;
    const double C22302 = C22297 - C22298;
    const double C23090 = C23085 - C23086;
    const double C58746 = C58738 - C58739;
    const double C60520 = C60513 - C60514;
    const double C62293 = C62287 - C62288;
    const double C68518 = C68511 - C68512;
    const double C69714 = C69708 - C69709;
    const double C24273 = C24243 - C24244;
    const double C24272 = C24239 - C24240;
    const double C24269 = C24227 - C24228;
    const double C24576 = C24537 - C24538;
    const double C24573 = C24525 - C24526;
    const double C24878 = C24839 - C24840;
    const double C24875 = C24827 - C24828;
    const double C31242 = C31211 - C31212;
    const double C31241 = C31207 - C31208;
    const double C31238 = C31195 - C31196;
    const double C32045 = C32015 - C32016;
    const double C34054 = C34047 - C34048;
    const double C34984 = C34948 - C34949;
    const double C34983 = C34944 - C34945;
    const double C44380 = C44357 - C44358;
    const double C70551 = C70529 - C70530;
    const double C70550 = C70525 - C70526;
    const double C70548 = C70517 - C70518;
    const double C70546 = C70509 - C70510;
    const double C70830 = C70809 - C70810;
    const double C70828 = C70801 - C70802;
    const double C70825 = C70789 - C70790;
    const double C70823 = C70781 - C70782;
    const double C70821 = C70773 - C70774;
    const double C71108 = C71087 - C71088;
    const double C71106 = C71079 - C71080;
    const double C71103 = C71067 - C71068;
    const double C71101 = C71059 - C71060;
    const double C71099 = C71051 - C71052;
    const double C71840 = C71825 - C71826;
    const double C71838 = C71817 - C71818;
    const double C78850 = C78833 - C78834;
    const double C78848 = C78825 - C78826;
    const double C78845 = C78811 - C78812;
    const double C78843 = C78803 - C78804;
    const double C78841 = C78798 - C78799;
    const double C78839 = C78789 - C78790;
    const double C79896 = C79878 - C79879;
    const double C79894 = C79869 - C79870;
    const double C80696 = C80689 - C80690;
    const double C81686 = C81673 - C81674;
    const double C82483 = C82477 - C82478;
    const double C135743 = C135736 - C135737;
    const double C136939 = C136933 - C136934;
    const double C74379 = C74343 - C74344;
    const double C74378 = C74339 - C74340;
    const double C130938 = C130915 - C130916;
    const double C83667 = C83637 - C83638;
    const double C83666 = C83633 - C83634;
    const double C83663 = C83621 - C83622;
    const double C83970 = C83931 - C83932;
    const double C83967 = C83919 - C83920;
    const double C84272 = C84233 - C84234;
    const double C84269 = C84221 - C84222;
    const double C93812 = C93781 - C93782;
    const double C93809 = C93775 - C93776;
    const double C94834 = C94814 - C94815;
    const double C97422 = C97416 - C97417;
    const double C151305 = C151298 - C151299;
    const double C152127 = C152122 / C152085;
    const double C152126 = C152043 * C152122;
    const double C152159 = 2 * C152122;
    const double C209 = C203 + C188;
    const double C7517 = C7511 + C7484;
    const double C7520 = C7514 + C7496;
    const double C3262 = C3238 - C3239;
    const double C24581 = C24557 - C24558;
    const double C35242 = C35210 - C35211;
    const double C74637 = C74605 - C74606;
    const double C83975 = C83951 - C83952;
    const double C3580 = C3556 - C3557;
    const double C7509 = C7497 - C7498;
    const double C20524 = C20508 - C20509;
    const double C24883 = C24859 - C24860;
    const double C78477 = C78453 - C78454;
    const double C84277 = C84253 - C84254;
    const double C4422 = C4404 - C4405;
    const double C19163 = C19150 - C19151;
    const double C25709 = C25691 - C25692;
    const double C35492 = C35460 - C35461;
    const double C74887 = C74855 - C74856;
    const double C78480 = C78465 - C78466;
    const double C85103 = C85085 - C85086;
    const double C4809 =
        (4 * (2 * C152528 + C152272 * C152567 + C152558 * ae) +
         C152272 * (3 * C152567 + C152272 * C152774 + C152764 * ae) +
         (3 * C152558 + C152272 * C152764) * ae) /
        C152045;
    const double C5039 =
        (2 * C152528 + C152272 * C152567 + C152558 * ae + C152774 * C152530) /
        C152045;
    const double C5777 =
        (C152482 * (3 * C152567 + C152272 * C152774 + C152764 * ae)) / C152045;
    const double C4812 =
        (4 * (2 * C152561 + ae * C152566 + be * C152567 + C152272 * C152766) +
         ae * (3 * C152566 + C152272 * C152773 + C152764 * be) +
         be * (3 * C152567 + C152272 * C152774 + C152764 * ae) +
         C152272 *
             (3 * C152766 + ae * C152773 + be * C152774 +
              C152272 * (2 * C152756 + ae * C152767 + be * C152768 +
                         C152272 * (C152302 + ae * C152750 + be * C152753 +
                                    C152272 * (ae * C152378 + be * C152382 +
                                               C152272 * C152314))))) /
        C152053;
    const double C5780 =
        (3 * (C152642 + ae * C152482 * C152556 + be * C152482 * C152559 +
              C152272 * C152810) +
         ae * C152482 * C152773 + be * C152482 * C152774 +
         C152272 *
             (2 * C152810 + ae * C152482 * C152767 + be * C152482 * C152768 +
              C152272 *
                  (C152805 + ae * C152482 * C152750 + be * C152482 * C152753 +
                   C152272 * (ae * C152482 * C152378 + be * C152482 * C152382 +
                              C152272 * C152482 * C152314)))) /
        C152053;
    const double C4808 =
        (4 * (2 * C152527 + C152272 * C152566 + C152558 * be) +
         C152272 * (3 * C152566 + C152272 * C152773 + C152764 * be) +
         (3 * C152558 + C152272 * C152764) * be) /
        C152045;
    const double C5038 =
        (2 * C152527 + C152272 * C152566 + C152558 * be + C152773 * C152530) /
        C152045;
    const double C5776 =
        (C152482 * (3 * C152566 + C152272 * C152773 + C152764 * be)) / C152045;
    const double C152879 = C152857 + C152875;
    const double C7807 = C7793 + C7792;
    const double C7834 = C7833 + C7768;
    const double C48091 = C48085 + C48084;
    const double C48092 = C48090 + C48077;
    const double C63813 = C63805 + C63804;
    const double C107723 = C107715 + C107714;
    const double C116554 = C116548 + C116547;
    const double C116555 = C116553 + C116540;
    const double C8601 = C7518 * C2874;
    const double C8588 = C7518 * C2875;
    const double C16840 = C7518 * C11434;
    const double C48835 = C7518 * C154106;
    const double C48830 = C7518 * C154087;
    const double C56422 = C7518 * C153638;
    const double C64474 = C7518 * C154002;
    const double C64469 = C7518 * C153648;
    const double C100108 = C7518 * C154108;
    const double C108384 = C7518 * C74316;
    const double C108379 = C7518 * C153648;
    const double C117298 = C7518 * C153643;
    const double C117293 = C7518 * C153651;
    const double C9954 = C7519 * C2875;
    const double C17490 = C7519 * C11434;
    const double C50152 = C7519 * C154087;
    const double C65647 = C7519 * C153648;
    const double C100758 = C7519 * C154108;
    const double C109557 = C7519 * C153648;
    const double C118615 = C7519 * C153651;
    const double C9965 = C9963 - C9958;
    const double C57192 = C57190 - C57184;
    const double C434 = C426 + C389;
    const double C440 = C432 + C413;
    const double C663 = C655 + C618;
    const double C669 = C661 + C642;
    const double C1156 = C1152 + C1141;
    const double C10571 = C7827 + C10564;
    const double C50743 = C48078 + C50739;
    const double C63812 = C63807 + C63806;
    const double C107722 = C107717 + C107716;
    const double C119206 = C116541 + C119202;
    const double C9216 = C8614 * C2875;
    const double C49421 = C8614 * C154087;
    const double C56423 = C8614 * C153638;
    const double C64476 = C8614 * C154002;
    const double C64471 = C8614 * C153648;
    const double C108386 = C8614 * C74316;
    const double C108381 = C8614 * C153648;
    const double C117884 = C8614 * C153651;
    const double C10569 = C7822 * C2875;
    const double C50741 = C7822 * C154087;
    const double C55987 = C7822 * C153638;
    const double C63808 = C7822 * C154002;
    const double C63800 = C7822 * C153648;
    const double C107718 = C7822 * C74316;
    const double C107710 = C7822 * C153648;
    const double C119204 = C7822 * C153651;
    const double C167 =
        (6 * (4 * C152318 + C152278 * C152335) +
         C152278 *
             (5 * C152335 +
              C152278 *
                  (4 * C152333 +
                   C152278 *
                       (3 * C152331 +
                        C152278 *
                            (2 * C152278 * C152329 +
                             C152278 * (C152329 + (C152323 * C152324 +
                                                   C152275 * bs[9] *
                                                       std::pow(C152274, 9)) *
                                                      C152044 * C152290)))))) /
        C152053;
    const double C382 =
        (3 * C152304 + C152278 * C152318 +
         ae * (C152272 * C152423 + C152419 * be) +
         be * (C152272 * C152424 + C152419 * ae) +
         C152272 * (ae * C152423 + be * C152424 + C152272 * C152335)) /
        C152053;
    const double C383 = (ae * (4 * C152391 + C152278 * C152423) +
                         be * (4 * C152392 + C152278 * C152424) +
                         C152272 * (4 * C152318 + C152278 * C152335)) /
                        C152053;
    const double C611 =
        (3 * C152304 + C152278 * C152318 + C152335 * std::pow(zP - zQ, 2)) /
        C152053;
    const double C612 =
        ((zP - zQ) * (4 * C152318 + C152278 * C152335)) / C152053;
    const double C613 =
        (4 * C152318 + C152278 * C152335 +
         (4 * C152333 +
          C152278 *
              (3 * C152331 +
               C152278 * (2 * C152278 * C152329 +
                          C152278 * (C152329 +
                                     (C152323 * C152324 +
                                      C152275 * bs[9] * std::pow(C152274, 9)) *
                                         C152044 * C152290)))) *
             std::pow(zP - zQ, 2)) /
        C152053;
    const double C800 =
        (ae * (5 * C152423 + C152278 * C152465) +
         be * (5 * C152424 + C152278 * C152466) +
         C152272 *
             (5 * C152335 +
              C152278 *
                  (4 * C152333 +
                   C152278 *
                       (3 * C152331 +
                        C152278 *
                            (2 * C152278 * C152329 +
                             C152278 * (C152329 + (C152323 * C152324 +
                                                   C152275 * bs[9] *
                                                       std::pow(C152274, 9)) *
                                                      C152044 * C152290)))))) /
        C152053;
    const double C935 =
        ((zP - zQ) *
         (5 * C152335 +
          C152278 *
              (4 * C152333 +
               C152278 * (3 * C152331 +
                          C152278 * (2 * C152278 * C152329 +
                                     C152278 * (C152329 +
                                                (C152323 * C152324 +
                                                 C152275 * bs[9] *
                                                     std::pow(C152274, 9)) *
                                                    C152044 * C152290)))))) /
        C152053;
    const double C1127 = (ae * C152482 * C152423 + be * C152482 * C152424 +
                          C152272 * C152482 * C152335) /
                         C152053;
    const double C1528 =
        (ae * (C152423 + C152460 * C152530) +
         be * (C152424 + C152462 * C152530) +
         C152272 *
             (C152335 +
              (3 * C152331 +
               C152278 * (2 * C152278 * C152329 +
                          C152278 * (C152329 +
                                     (C152323 * C152324 +
                                      C152275 * bs[9] * std::pow(C152274, 9)) *
                                         C152044 * C152290))) *
                  C152530)) /
        C152053;
    const double C2311 =
        (2 * C152482 * C152335 +
         C152482 *
             (C152335 +
              (3 * C152331 +
               C152278 * (2 * C152278 * C152329 +
                          C152278 * (C152329 +
                                     (C152323 * C152324 +
                                      C152275 * bs[9] * std::pow(C152274, 9)) *
                                         C152044 * C152290))) *
                  C152530)) /
        C152053;
    const double C7823 = C7814 + C7788;
    const double C30189 =
        (2 * (ae * (2 * C152803 + C152482 * C152960) +
              be * (2 * C152804 + C152482 * C152961) + C152272 * C153162) +
         ae *
             (2 * C152482 * C152767 + C152482 * (C152767 + C152870 * C152530)) +
         be *
             (2 * C152482 * C152768 + C152482 * (C152768 + C152873 * C152530)) +
         C152272 *
             (C153162 + ae * (2 * C152981 + C152482 * C153102) +
              be * (2 * C152982 + C152482 * C153103) + C152272 * C153158)) /
        C152053;
    const double C32654 =
        (2 * (ae * (3 * C152960 + C152482 * C153151) +
              be * (3 * C152961 + C152482 * C153152) + C152272 * C153172) +
         ae * (3 * (C152767 + C152870 * C152530) +
               C152482 *
                   (2 * C153120 + C152482 * (C152870 + C153064 * C152530))) +
         be * (3 * (C152768 + C152873 * C152530) +
               C152482 *
                   (2 * C153121 + C152482 * (C152873 + C153067 * C152530))) +
         C152272 *
             (C153172 +
              ae * (3 * C153102 +
                    C152482 * (2 * C153122 +
                               C152482 * (C152852 + C153045 * C152530))) +
              be * (3 * C153103 +
                    C152482 * (2 * C153123 +
                               C152482 * (C152855 + C153048 * C152530))) +
              C152272 *
                  (ae * (3 * C153104 +
                         C152482 * (2 * C153124 +
                                    C152482 * (C152404 + C152440 * C152530))) +
                   be * (3 * C153105 +
                         C152482 * (2 * C153125 +
                                    C152482 * (C152408 + C152444 * C152530))) +
                   C152272 *
                       (3 * C153106 +
                        C152482 *
                            (2 * C153126 +
                             C152482 * (C152329 + (C152323 * C152324 +
                                                   C152275 * bs[9] *
                                                       std::pow(C152274, 9)) *
                                                      C152044 * C152530)))))) /
        C152053;
    const double C34035 =
        (4 * C153162 + C152482 * C153172 +
         ae *
             (4 * (2 * C152981 + C152482 * C153102) +
              C152482 * (3 * C153102 +
                         C152482 * (2 * C153122 +
                                    C152482 * (C152852 + C153045 * C152530)))) +
         be *
             (4 * (2 * C152982 + C152482 * C153103) +
              C152482 * (3 * C153103 +
                         C152482 * (2 * C153123 +
                                    C152482 * (C152855 + C153048 * C152530)))) +
         C152272 *
             (ae * (4 * C153151 +
                    C152482 *
                        (3 * C153104 +
                         C152482 * (2 * C153124 +
                                    C152482 * (C152404 + C152440 * C152530)))) +
              be * (4 * C153152 +
                    C152482 *
                        (3 * C153105 +
                         C152482 * (2 * C153125 +
                                    C152482 * (C152408 + C152444 * C152530)))) +
              C152272 *
                  (4 * C153153 +
                   C152482 *
                       (3 * C153106 +
                        C152482 *
                            (2 * C153126 +
                             C152482 * (C152329 + (C152323 * C152324 +
                                                   C152275 * bs[9] *
                                                       std::pow(C152274, 9)) *
                                                      C152044 * C152530)))))) /
        C152053;
    const double C34036 = (ae * (4 * (2 * C152803 + C152482 * C152960) +
                                 C152482 * (3 * C152960 + C152482 * C153151)) +
                           be * (4 * (2 * C152804 + C152482 * C152961) +
                                 C152482 * (3 * C152961 + C152482 * C153152)) +
                           C152272 * (4 * C153162 + C152482 * C153172)) /
                          C152053;
    const double C55973 = (5 * (3 * C152783 + C152482 * C153162) +
                           C152482 * (4 * C153162 + C152482 * C153172)) /
                          C152053;
    const double C56764 =
        (ae * (5 * (3 * C152960 + C152482 * C153151) +
               C152482 *
                   (4 * C153151 +
                    C152482 * (3 * C153104 +
                               C152482 * (2 * C153124 +
                                          C152482 * (C152404 +
                                                     C152440 * C152530))))) +
         be * (5 * (3 * C152961 + C152482 * C153152) +
               C152482 *
                   (4 * C153152 +
                    C152482 * (3 * C153105 +
                               C152482 * (2 * C153125 +
                                          C152482 * (C152408 +
                                                     C152444 * C152530))))) +
         C152272 *
             (5 * C153172 +
              C152482 *
                  (4 * C153153 +
                   C152482 *
                       (3 * C153106 +
                        C152482 *
                            (2 * C153126 +
                             C152482 * (C152329 + (C152323 * C152324 +
                                                   C152275 * bs[9] *
                                                       std::pow(C152274, 9)) *
                                                      C152044 * C152530)))))) /
        C152053;
    const double C57526 =
        (6 * (4 * C153162 + C152482 * C153172) +
         C152482 *
             (5 * C153172 +
              C152482 *
                  (4 * C153153 +
                   C152482 *
                       (3 * C153106 +
                        C152482 *
                            (2 * C153126 +
                             C152482 * (C152329 + (C152323 * C152324 +
                                                   C152275 * bs[9] *
                                                       std::pow(C152274, 9)) *
                                                      C152044 * C152530)))))) /
        C152053;
    const double C384 =
        (4 * C152318 + C152278 * C152335 +
         ae * (C152272 * C152465 + C152461 * be) +
         be * (C152272 * C152466 + C152461 * ae) +
         C152272 *
             (ae * C152465 + be * C152466 +
              C152272 *
                  (4 * C152333 +
                   C152278 *
                       (3 * C152331 +
                        C152278 *
                            (2 * C152278 * C152329 +
                             C152278 * (C152329 + (C152323 * C152324 +
                                                   C152275 * bs[9] *
                                                       std::pow(C152274, 9)) *
                                                      C152044 * C152290)))))) /
        C152053;
    const double C371 = (4 * C152391 + C152278 * C152423 +
                         C152272 * (C152272 * C152465 + C152461 * be) +
                         C152272 * C152461 * be) /
                        C152045;
    const double C372 = (4 * C152392 + C152278 * C152424 +
                         C152272 * (C152272 * C152466 + C152461 * ae) +
                         C152272 * C152461 * ae) /
                        C152045;
    const double C798 = (C152272 * (5 * C152423 + C152278 * C152465) +
                         (5 * C152419 + C152278 * C152461) * be) /
                        C152045;
    const double C799 = (C152272 * (5 * C152424 + C152278 * C152466) +
                         (5 * C152419 + C152278 * C152461) * ae) /
                        C152045;
    const double C1121 =
        (C152482 * (C152272 * C152465 + C152461 * be)) / C152045;
    const double C1122 =
        (C152482 * (C152272 * C152466 + C152461 * ae)) / C152045;
    const double C143 = 6 * (4 * C152387 + C152278 * C152419) +
                        C152278 * (5 * C152419 + C152278 * C152461);
    const double C348 = 4 * C152387 + C152278 * C152419 + C152461 * C152275;
    const double C577 = 4 * C152387 + C152278 * C152419 + C152461 * C152530;
    const double C797 = C152272 * (5 * C152419 + C152278 * C152461);
    const double C932 = C152482 * (5 * C152419 + C152278 * C152461);
    const double C1110 = C152482 * C152272 * C152461;
    const double C1377 =
        (2 * (C152272 * C152424 + C152419 * ae) +
         C152272 * (C152424 + C152272 * C152495 + C152491 * ae) +
         (C152419 + C152455 * C152275) * ae) /
        C152045;
    const double C1519 =
        (C152272 * C152424 + C152419 * ae + C152495 * C152530) / C152045;
    const double C1950 =
        (C152482 * (C152424 + C152272 * C152495 + C152491 * ae)) / C152045;
    const double C1386 =
        (2 * (ae * C152423 + be * C152424 + C152272 * C152335) +
         ae * (C152423 + C152272 * C152494 + C152491 * be) +
         be * (C152424 + C152272 * C152495 + C152491 * ae) +
         C152272 *
             (C152335 + ae * C152494 + be * C152495 +
              C152272 *
                  (ae * C152460 + be * C152462 +
                   C152272 *
                       (3 * C152331 +
                        C152278 *
                            (2 * C152278 * C152329 +
                             C152278 * (C152329 + (C152323 * C152324 +
                                                   C152275 * bs[9] *
                                                       std::pow(C152274, 9)) *
                                                      C152044 * C152290)))))) /
        C152053;
    const double C1959 =
        (C152482 * C152335 + ae * C152482 * C152494 + be * C152482 * C152495 +
         C152272 *
             (ae * C152482 * C152460 + be * C152482 * C152462 +
              C152272 * C152482 *
                  (3 * C152331 +
                   C152278 * (2 * C152278 * C152329 +
                              C152278 * (C152329 + (C152323 * C152324 +
                                                    C152275 * bs[9] *
                                                        std::pow(C152274, 9)) *
                                                       C152044 * C152290))))) /
        C152053;
    const double C1376 =
        (2 * (C152272 * C152423 + C152419 * be) +
         C152272 * (C152423 + C152272 * C152494 + C152491 * be) +
         (C152419 + C152455 * C152275) * be) /
        C152045;
    const double C1518 =
        (C152272 * C152423 + C152419 * be + C152494 * C152530) / C152045;
    const double C1949 =
        (C152482 * (C152423 + C152272 * C152494 + C152491 * be)) / C152045;
    const double C152636 = C152634 + C152629;
    const double C152635 = C152633 + C152626;
    const double C152688 = C152661 + C152686;
    const double C152687 = C152655 + C152685;
    const double C152949 = C152947 + C152931;
    const double C152948 = C152946 + C152928;
    const double C153085 = C152272 * C153082;
    const double C29316 = 6 * (4 * C152764 + C152272 * C152877) +
                          C152272 * (5 * C152877 + C152272 * C153081);
    const double C29442 = 4 * C152764 + C152272 * C152877 + C153081 * C152530;
    const double C29852 = C152482 * (5 * C152877 + C152272 * C153081);
    const double C153084 = C152272 * C153080;
    const double C3252 = C2881 * C3198;
    const double C24571 = C24216 * C3198;
    const double C35724 = C34929 * C3198;
    const double C75119 = C74324 * C3198;
    const double C83965 = C152193 * C3198;
    const double C3570 = C2881 * C3516;
    const double C7503 = C134 * C3516;
    const double C20518 = C11439 * C3516;
    const double C24873 = C24216 * C3516;
    const double C79179 = C70502 * C3516;
    const double C84267 = C152193 * C3516;
    const double C4418 = C2881 * C4388;
    const double C19160 = C11439 * C4388;
    const double C25705 = C24216 * C4388;
    const double C35946 = C34929 * C4388;
    const double C75341 = C74324 * C4388;
    const double C85099 = C152193 * C4388;
    const double C88225 = C70502 * C4388;
    const double C152732 = C152730 + C152719;
    const double C152885 = C152272 * C152883;
    const double C153036 = 4 * C152883;
    const double C153017 = be * C152883;
    const double C30187 =
        (2 * C152482 * C152774 + C152482 * (C152774 + C152883 * C152530)) /
        C152045;
    const double C32653 =
        (3 * (C152774 + C152883 * C152530) +
         C152482 * (2 * C152482 * C152883 +
                    C152482 * (C152883 + C153082 * C152530))) /
        C152045;
    const double C198 = C189 - C190;
    const double C425 = C414 - C415;
    const double C2943 = C2928 - C2929;
    const double C12277 = C12272 - C12273;
    const double C24278 = C24263 - C24264;
    const double C71340 = C71335 - C71336;
    const double C83672 = C83657 - C83658;
    const double C806 = C802 - C803;
    const double C11491 = C11478 - C11479;
    const double C70554 = C70541 - C70542;
    const double C654 = C643 - C644;
    const double C941 = C937 - C938;
    const double C1149 = C1142 - C1143;
    const double C12487 = C12482 - C12483;
    const double C71550 = C71545 - C71546;
    const double C3842 = C3835 - C3836;
    const double C11769 = C11754 - C11755;
    const double C25145 = C25138 - C25139;
    const double C34991 = C34976 - C34977;
    const double C70832 = C70817 - C70818;
    const double C74386 = C74371 - C74372;
    const double C84539 = C84532 - C84533;
    const double C8057 = C8053 - C8054;
    const double C12047 = C12032 - C12033;
    const double C71110 = C71095 - C71096;
    const double C4083 = C4076 - C4077;
    const double C12779 = C12770 - C12771;
    const double C15450 = C15446 - C15447;
    const double C25386 = C25379 - C25380;
    const double C71842 = C71833 - C71834;
    const double C84780 = C84773 - C84774;
    const double C7824 = C7815 + C7798;
    const double C3253 = C154071 * C3203;
    const double C24572 = C154071 * C3203;
    const double C35725 = C154044 * C3203;
    const double C75120 = C154044 * C3203;
    const double C83966 = C83602 * C3203;
    const double C4419 = C154071 * C4393;
    const double C19161 = C153855 * C4393;
    const double C25706 = C154071 * C4393;
    const double C35947 = C154044 * C4393;
    const double C75342 = C154044 * C4393;
    const double C85100 = C83602 * C4393;
    const double C88226 = C153855 * C4393;
    const double C3250 = C2881 * C3197;
    const double C24569 = C24216 * C3197;
    const double C35722 = C34929 * C3197;
    const double C75117 = C74324 * C3197;
    const double C83963 = C152193 * C3197;
    const double C3568 = C2881 * C3515;
    const double C7501 = C134 * C3515;
    const double C20516 = C11439 * C3515;
    const double C24871 = C24216 * C3515;
    const double C79177 = C70502 * C3515;
    const double C84265 = C152193 * C3515;
    const double C4416 = C2881 * C4387;
    const double C19158 = C11439 * C4387;
    const double C25703 = C24216 * C4387;
    const double C35944 = C34929 * C4387;
    const double C75339 = C74324 * C4387;
    const double C85097 = C152193 * C4387;
    const double C88223 = C70502 * C4387;
    const double C8615 = C8611 + C8597;
    const double C152731 = C152729 + C152716;
    const double C152918 = C152908 + C152893;
    const double C31247 = C31231 - C31232;
    const double C52112 = C52096 - C52097;
    const double C59730 = C59724 - C59725;
    const double C63597 = C63593 - C63594;
    const double C79898 = C79887 - C79888;
    const double C93819 = C93803 - C93804;
    const double C56435 = C56433 * C153638;
    const double C64997 = C56433 * C153648;
    const double C108907 = C56433 * C153648;
    const double C55999 = C55997 * C153638;
    const double C66173 = C55997 * C153648;
    const double C110083 = C55997 * C153648;
    const double C152884 = C152272 * C152882;
    const double C153026 = 4 * C152882;
    const double C153016 = ae * C152882;
    const double C28696 =
        (3 * (C152783 + ae * (C152556 + C152750 * C152530) +
              be * (C152559 + C152753 * C152530) + C152272 * C152967) +
         ae * (C152773 + C152882 * C152530) +
         be * (C152774 + C152883 * C152530) +
         C152272 * (2 * C152967 + ae * (C152767 + C152870 * C152530) +
                    be * (C152768 + C152873 * C152530) +
                    C152272 * (C152962 + ae * (C152750 + C152852 * C152530) +
                               be * (C152753 + C152855 * C152530) +
                               C152272 * (ae * (C152378 + C152404 * C152530) +
                                          be * (C152382 + C152408 * C152530) +
                                          C152272 * (C152314 +
                                                     C152329 * C152530))))) /
        C152053;
    const double C30188 =
        (3 * (2 * C152805 + C152482 * C152962 +
              ae * (2 * C152981 + C152482 * C153102) +
              be * (2 * C152982 + C152482 * C153103) + C152272 * C153158) +
         ae *
             (2 * C152482 * C152882 + C152482 * (C152882 + C153080 * C152530)) +
         be *
             (2 * C152482 * C152883 + C152482 * (C152883 + C153082 * C152530)) +
         C152272 *
             (2 * C153158 +
              ae * (2 * C153120 + C152482 * (C152870 + C153064 * C152530)) +
              be * (2 * C153121 + C152482 * (C152873 + C153067 * C152530)) +
              C152272 *
                  (C153153 +
                   ae *
                       (2 * C153122 + C152482 * (C152852 + C153045 * C152530)) +
                   be *
                       (2 * C153123 + C152482 * (C152855 + C153048 * C152530)) +
                   C152272 *
                       (ae * (2 * C153124 +
                              C152482 * (C152404 + C152440 * C152530)) +
                        be * (2 * C153125 +
                              C152482 * (C152408 + C152444 * C152530)) +
                        C152272 *
                            (2 * C153126 +
                             C152482 * (C152329 + (C152323 * C152324 +
                                                   C152275 * bs[9] *
                                                       std::pow(C152274, 9)) *
                                                      C152044 * C152530)))))) /
        C152053;
    const double C30186 =
        (2 * C152482 * C152773 + C152482 * (C152773 + C152882 * C152530)) /
        C152045;
    const double C32652 =
        (3 * (C152773 + C152882 * C152530) +
         C152482 * (2 * C152482 * C152882 +
                    C152482 * (C152882 + C153080 * C152530))) /
        C152045;
    const double C153073 = C153051 + C153069;
    const double C153137 = C153134 + C153128;
    const double C57193 = C57191 - C57188;
    const double C152171 = C152166 * be;
    const double C152173 = C152170 * ae;
    const double C70501 = -(C152170 * be) / C152045;
    const double C2942 = C2924 - C2925;
    const double C2939 = C2912 - C2913;
    const double C2936 = C2900 - C2901;
    const double C2933 = C2888 - C2889;
    const double C3264 = C3246 - C3247;
    const double C3261 = C3234 - C3235;
    const double C3258 = C3222 - C3223;
    const double C3255 = C3210 - C3211;
    const double C3582 = C3564 - C3565;
    const double C3579 = C3552 - C3553;
    const double C3576 = C3540 - C3541;
    const double C3573 = C3528 - C3529;
    const double C3841 = C3831 - C3832;
    const double C4082 = C4072 - C4073;
    const double C4424 = C4412 - C4413;
    const double C4421 = C4400 - C4401;
    const double C52111 = C52092 - C52093;
    const double C52108 = C52080 - C52081;
    const double C52105 = C52068 - C52069;
    const double C52102 = C52056 - C52057;
    const double C52911 = C52896 - C52897;
    const double C52908 = C52884 - C52885;
    const double C52905 = C52872 - C52873;
    const double C53527 = C53517 - C53518;
    const double C54288 = C54267 - C54268;
    const double C54902 = C54892 - C54893;
    const double C102426 = C102417 - C102418;
    const double C11490 = C11474 - C11475;
    const double C11489 = C11470 - C11471;
    const double C11486 = C11458 - C11459;
    const double C11484 = C11450 - C11451;
    const double C11482 = C11442 - C11443;
    const double C11768 = C11750 - C11751;
    const double C11766 = C11742 - C11743;
    const double C11764 = C11734 - C11735;
    const double C11763 = C11730 - C11731;
    const double C11761 = C11722 - C11723;
    const double C11759 = C11714 - C11715;
    const double C12046 = C12028 - C12029;
    const double C12044 = C12020 - C12021;
    const double C12042 = C12012 - C12013;
    const double C12041 = C12008 - C12009;
    const double C12039 = C12000 - C12001;
    const double C12037 = C11992 - C11993;
    const double C12276 = C12268 - C12269;
    const double C12486 = C12478 - C12479;
    const double C12778 = C12766 - C12767;
    const double C12776 = C12758 - C12759;
    const double C12774 = C12750 - C12751;
    const double C19164 = C19154 - C19155;
    const double C19162 = C19146 - C19147;
    const double C19508 = C19494 - C19495;
    const double C19506 = C19486 - C19487;
    const double C19505 = C19479 - C19480;
    const double C19502 = C19464 - C19465;
    const double C20525 = C20512 - C20513;
    const double C20523 = C20504 - C20505;
    const double C20521 = C20494 - C20495;
    const double C21321 = C21313 - C21314;
    const double C22301 = C22293 - C22294;
    const double C23089 = C23081 - C23082;
    const double C58434 = C58426 - C58427;
    const double C58745 = C58734 - C58735;
    const double C59729 = C59720 - C59721;
    const double C60519 = C60509 - C60510;
    const double C61501 = C61493 - C61494;
    const double C62292 = C62283 - C62284;
    const double C68517 = C68507 - C68508;
    const double C69178 = C69170 - C69171;
    const double C69713 = C69704 - C69705;
    const double C24276 = C24255 - C24256;
    const double C24275 = C24251 - C24252;
    const double C24270 = C24231 - C24232;
    const double C24267 = C24219 - C24220;
    const double C24582 = C24561 - C24562;
    const double C24579 = C24549 - C24550;
    const double C24578 = C24545 - C24546;
    const double C24575 = C24533 - C24534;
    const double C24884 = C24863 - C24864;
    const double C24881 = C24851 - C24852;
    const double C24880 = C24847 - C24848;
    const double C24877 = C24835 - C24836;
    const double C25143 = C25130 - C25131;
    const double C25384 = C25371 - C25372;
    const double C25710 = C25695 - C25696;
    const double C25707 = C25683 - C25684;
    const double C31245 = C31223 - C31224;
    const double C31244 = C31219 - C31220;
    const double C31239 = C31199 - C31200;
    const double C31236 = C31187 - C31188;
    const double C32049 = C32031 - C32032;
    const double C32046 = C32019 - C32020;
    const double C32043 = C32007 - C32008;
    const double C32669 = C32656 - C32657;
    const double C33433 = C33418 - C33419;
    const double C33430 = C33406 - C33407;
    const double C34052 = C34039 - C34040;
    const double C39070 = C39058 - C39059;
    const double C24277 = C24259 - C24260;
    const double C24274 = C24247 - C24248;
    const double C24271 = C24235 - C24236;
    const double C24268 = C24223 - C24224;
    const double C24583 = C24565 - C24566;
    const double C24580 = C24553 - C24554;
    const double C24577 = C24541 - C24542;
    const double C24574 = C24529 - C24530;
    const double C24885 = C24867 - C24868;
    const double C24882 = C24855 - C24856;
    const double C24879 = C24843 - C24844;
    const double C24876 = C24831 - C24832;
    const double C25144 = C25134 - C25135;
    const double C25385 = C25375 - C25376;
    const double C25711 = C25699 - C25700;
    const double C25708 = C25687 - C25688;
    const double C31246 = C31227 - C31228;
    const double C31243 = C31215 - C31216;
    const double C31240 = C31203 - C31204;
    const double C31237 = C31191 - C31192;
    const double C32050 = C32035 - C32036;
    const double C32047 = C32023 - C32024;
    const double C32044 = C32011 - C32012;
    const double C32670 = C32660 - C32661;
    const double C33431 = C33410 - C33411;
    const double C34053 = C34043 - C34044;
    const double C39071 = C39062 - C39063;
    const double C2953 = C2941 - C2922;
    const double C2952 = C2940 - C2918;
    const double C2947 = C2935 - C2898;
    const double C2944 = C2932 - C2886;
    const double C3275 = C3263 - C3244;
    const double C3272 = C3260 - C3232;
    const double C3271 = C3259 - C3228;
    const double C3268 = C3256 - C3216;
    const double C3593 = C3581 - C3562;
    const double C3590 = C3578 - C3550;
    const double C3589 = C3577 - C3546;
    const double C3586 = C3574 - C3534;
    const double C3843 = C3840 - C3829;
    const double C4084 = C4081 - C4070;
    const double C4429 = C4423 - C4410;
    const double C4426 = C4420 - C4398;
    const double C52123 = C52110 - C52090;
    const double C52122 = C52109 - C52086;
    const double C52117 = C52104 - C52066;
    const double C52114 = C52101 - C52054;
    const double C52919 = C52910 - C52894;
    const double C52916 = C52907 - C52882;
    const double C52913 = C52904 - C52870;
    const double C53530 = C53526 - C53515;
    const double C54296 = C54290 - C54277;
    const double C54293 = C54287 - C54265;
    const double C54905 = C54901 - C54890;
    const double C102428 = C102425 - C102415;
    const double C2950 = C2938 - C2910;
    const double C2949 = C2937 - C2906;
    const double C2946 = C2934 - C2894;
    const double C3269 = C3257 - C3220;
    const double C3266 = C3254 - C3208;
    const double C3587 = C3575 - C3538;
    const double C3584 = C3572 - C3526;
    const double C52120 = C52107 - C52078;
    const double C52119 = C52106 - C52074;
    const double C52116 = C52103 - C52062;
    const double C52915 = C52906 - C52878;
    const double C54907 = C54903 - C54898;
    const double C11498 = C11488 - C11468;
    const double C11497 = C11487 - C11464;
    const double C11495 = C11485 - C11456;
    const double C11493 = C11483 - C11448;
    const double C11779 = C11767 - C11748;
    const double C11777 = C11765 - C11740;
    const double C11774 = C11762 - C11728;
    const double C11772 = C11760 - C11720;
    const double C11770 = C11758 - C11712;
    const double C12057 = C12045 - C12026;
    const double C12055 = C12043 - C12018;
    const double C12052 = C12040 - C12006;
    const double C12050 = C12038 - C11998;
    const double C12048 = C12036 - C11990;
    const double C12783 = C12777 - C12764;
    const double C12781 = C12775 - C12756;
    const double C19517 = C19509 - C19500;
    const double C19515 = C19507 - C19492;
    const double C19512 = C19504 - C19477;
    const double C19511 = C19503 - C19470;
    const double C20528 = C20522 - C20500;
    const double C21324 = C21322 - C21319;
    const double C22304 = C22302 - C22299;
    const double C23092 = C23090 - C23087;
    const double C58750 = C58746 - C58740;
    const double C60523 = C60520 - C60515;
    const double C62296 = C62293 - C62289;
    const double C68521 = C68518 - C68513;
    const double C69716 = C69714 - C69710;
    const double C24285 = C24273 - C24245;
    const double C24284 = C24272 - C24241;
    const double C24281 = C24269 - C24229;
    const double C24588 = C24576 - C24539;
    const double C24585 = C24573 - C24527;
    const double C24890 = C24878 - C24841;
    const double C24887 = C24875 - C24829;
    const double C31255 = C31242 - C31213;
    const double C31254 = C31241 - C31209;
    const double C31251 = C31238 - C31197;
    const double C32054 = C32045 - C32017;
    const double C34058 = C34054 - C34049;
    const double C34996 = C34984 - C34950;
    const double C34995 = C34983 - C34946;
    const double C44388 = C44380 - C44359;
    const double C70561 = C70551 - C70531;
    const double C70560 = C70550 - C70527;
    const double C70558 = C70548 - C70519;
    const double C70556 = C70546 - C70511;
    const double C70842 = C70830 - C70811;
    const double C70840 = C70828 - C70803;
    const double C70837 = C70825 - C70791;
    const double C70835 = C70823 - C70783;
    const double C70833 = C70821 - C70775;
    const double C71120 = C71108 - C71089;
    const double C71118 = C71106 - C71081;
    const double C71115 = C71103 - C71069;
    const double C71113 = C71101 - C71061;
    const double C71111 = C71099 - C71053;
    const double C71846 = C71840 - C71827;
    const double C71844 = C71838 - C71819;
    const double C78864 = C78850 - C78835;
    const double C78862 = C78848 - C78827;
    const double C78859 = C78845 - C78813;
    const double C78857 = C78843 - C78805;
    const double C78856 = C78841 - C78800;
    const double C78854 = C78839 - C78791;
    const double C79902 = C79896 - C79880;
    const double C79900 = C79894 - C79871;
    const double C80699 = C80696 - C80691;
    const double C81690 = C81686 - C81675;
    const double C82486 = C82483 - C82479;
    const double C135746 = C135743 - C135738;
    const double C136941 = C136939 - C136935;
    const double C74391 = C74379 - C74345;
    const double C74390 = C74378 - C74341;
    const double C130946 = C130938 - C130917;
    const double C83679 = C83667 - C83639;
    const double C83678 = C83666 - C83635;
    const double C83675 = C83663 - C83623;
    const double C83982 = C83970 - C83933;
    const double C83979 = C83967 - C83921;
    const double C84284 = C84272 - C84235;
    const double C84281 = C84269 - C84223;
    const double C93823 = C93812 - C93783;
    const double C93822 = C93809 - C93777;
    const double C94842 = C94834 - C94816;
    const double C97425 = C97422 - C97418;
    const double C151309 = C151305 - C151300;
    const double C152145 = C152127 - C152141;
    const double C152131 = C152126 + C154035;
    const double C8602 = C7517 * C2875;
    const double C8589 = C7517 * C154058;
    const double C16841 = C7517 * C11435;
    const double C48836 = C7517 * C154087;
    const double C48831 = C7517 * C154058;
    const double C64475 = C7517 * C153648;
    const double C100109 = C7517 * C154089;
    const double C108385 = C7517 * C153648;
    const double C117299 = C7517 * C153651;
    const double C117294 = C7517 * C83605;
    const double C9955 = C7520 * C154058;
    const double C17491 = C7520 * C11435;
    const double C50153 = C7520 * C154058;
    const double C100759 = C7520 * C154089;
    const double C118616 = C7520 * C83605;
    const double C3274 = C3262 - C3240;
    const double C24593 = C24581 - C24559;
    const double C35250 = C35242 - C35212;
    const double C74645 = C74637 - C74607;
    const double C83987 = C83975 - C83953;
    const double C3592 = C3580 - C3558;
    const double C7515 = C7509 - C7499;
    const double C20530 = C20524 - C20510;
    const double C24895 = C24883 - C24861;
    const double C78483 = C78477 - C78455;
    const double C84289 = C84277 - C84255;
    const double C4428 = C4422 - C4406;
    const double C19167 = C19163 - C19152;
    const double C25715 = C25709 - C25693;
    const double C35500 = C35492 - C35462;
    const double C74895 = C74887 - C74857;
    const double C78486 = C78480 - C78467;
    const double C85109 = C85103 - C85087;
    const double C32029 = C24216 * C5039;
    const double C33424 = C24214 * C5039;
    const double C44363 = C34929 * C5039;
    const double C52890 = C2881 * C5039;
    const double C54281 = C2879 * C5039;
    const double C61499 = C11439 * C5039;
    const double C81683 = C70502 * C5039;
    const double C95636 = C152193 * C5039;
    const double C130921 = C74324 * C5039;
    const double C33416 = C24216 * C5777;
    const double C45061 = C34929 * C5777;
    const double C54273 = C2881 * C5777;
    const double C96623 = C152193 * C5777;
    const double C131619 = C74324 * C5777;
    const double C33417 = C154071 * C5780;
    const double C45062 = C154044 * C5780;
    const double C46278 = C34919 * C5780;
    const double C54274 = C154071 * C5780;
    const double C96624 = C83602 * C5780;
    const double C131620 = C154044 * C5780;
    const double C132836 = C154102 * C5780;
    const double C32027 = C24216 * C5038;
    const double C33422 = C24214 * C5038;
    const double C44361 = C34929 * C5038;
    const double C52888 = C2881 * C5038;
    const double C54279 = C2879 * C5038;
    const double C61497 = C11439 * C5038;
    const double C81681 = C70502 * C5038;
    const double C95634 = C152193 * C5038;
    const double C130919 = C74324 * C5038;
    const double C33414 = C24216 * C5776;
    const double C45059 = C34929 * C5776;
    const double C54271 = C2881 * C5776;
    const double C96621 = C152193 * C5776;
    const double C131617 = C74324 * C5776;
    const double C9218 = C8588 + C8617;
    const double C49423 = C48830 + C48829;
    const double C64999 = C64469 + C64468;
    const double C108909 = C108379 + C108378;
    const double C117886 = C117293 + C117292;
    const double C9967 = C9965 + C9959;
    const double C57194 = C57192 + C57185;
    const double C8280 = C663 * C154058;
    const double C15658 = C663 * C154036;
    const double C16053 = C663 * C11435;
    const double C48532 = C663 * C154058;
    const double C98926 = C663 * C154036;
    const double C99321 = C663 * C154089;
    const double C116995 = C663 * C83605;
    const double C7794 = C669 * C154058;
    const double C8282 = C669 * C2875;
    const double C15661 = C669 * C11435;
    const double C15651 = C669 * C154036;
    const double C48086 = C669 * C154058;
    const double C48534 = C669 * C154087;
    const double C64205 = C669 * C153648;
    const double C98929 = C669 * C154089;
    const double C98919 = C669 * C154036;
    const double C108115 = C669 * C153648;
    const double C116549 = C669 * C83605;
    const double C116997 = C669 * C153651;
    const double C8600 = C1156 * C154058;
    const double C16319 = C1156 * C11435;
    const double C16316 = C1156 * C154036;
    const double C48834 = C1156 * C154058;
    const double C99587 = C1156 * C154089;
    const double C99584 = C1156 * C154036;
    const double C117297 = C1156 * C83605;
    const double C64998 = C64471 + C64470;
    const double C108908 = C108381 + C108380;
    const double C66170 = C63800 + C63801;
    const double C110080 = C107710 + C107711;
    const double C417 = C153792 * C382;
    const double C2931 = C154071 * C382;
    const double C12275 = C153855 * C382;
    const double C24266 = C154071 * C382;
    const double C71338 = C153855 * C382;
    const double C83660 = C83602 * C382;
    const double C805 = C153792 * C383;
    const double C11481 = C153855 * C383;
    const double C70544 = C153855 * C383;
    const double C646 = C153792 * C611;
    const double C940 = C153792 * C612;
    const double C1145 = C153792 * C1127;
    const double C12485 = C153855 * C1127;
    const double C71548 = C153855 * C1127;
    const double C10570 = C7823 * C154058;
    const double C50742 = C7823 * C154058;
    const double C56247 = C7823 * C153638;
    const double C63809 = C7823 * C153648;
    const double C107719 = C7823 * C153648;
    const double C119205 = C7823 * C83605;
    const double C32667 = C154071 * C30189;
    const double C46828 = C154044 * C30189;
    const double C53524 = C154071 * C30189;
    const double C69177 = C153855 * C30189;
    const double C133386 = C154044 * C30189;
    const double C136402 = C153855 * C30189;
    const double C149947 = C83602 * C30189;
    const double C56769 = C153792 * C34036;
    const double C69711 = C153855 * C34036;
    const double C136936 = C153855 * C34036;
    const double C57531 = C153792 * C55973;
    const double C3200 =
        (3 * (C152392 + C152272 * C152503 + C152499 * ae) +
         C152272 * (2 * C152503 + C152272 * C152636 + C152627 * ae) +
         (2 * C152499 + C152272 * C152627) * ae) /
        C152045;
    const double C3518 =
        (C152392 + C152272 * C152503 + C152499 * ae + C152636 * C152530) /
        C152045;
    const double C4390 =
        (C152482 * (2 * C152503 + C152272 * C152636 + C152627 * ae)) / C152045;
    const double C3204 =
        (3 * (C152318 + ae * C152502 + be * C152503 + C152272 * C152630) +
         ae * (2 * C152502 + C152272 * C152635 + C152627 * be) +
         be * (2 * C152503 + C152272 * C152636 + C152627 * ae) +
         C152272 *
             (2 * C152630 + ae * C152635 + be * C152636 +
              C152272 *
                  (C152333 + ae * C152625 + be * C152628 +
                   C152272 *
                       (ae * C152454 + be * C152456 +
                        C152272 *
                            (2 * C152278 * C152329 +
                             C152278 * (C152329 + (C152323 * C152324 +
                                                   C152275 * bs[9] *
                                                       std::pow(C152274, 9)) *
                                                      C152044 * C152290)))))) /
        C152053;
    const double C4394 =
        (2 * (ae * C152482 * C152418 + be * C152482 * C152420 +
              C152272 * C152648) +
         ae * C152482 * C152635 + be * C152482 * C152636 +
         C152272 *
             (C152648 + ae * C152482 * C152625 + be * C152482 * C152628 +
              C152272 * (ae * C152482 * C152454 + be * C152482 * C152456 +
                         C152272 * C152482 *
                             (2 * C152278 * C152329 +
                              C152278 * (C152329 + (C152323 * C152324 +
                                                    C152275 * bs[9] *
                                                        std::pow(C152274, 9)) *
                                                       C152044 * C152290))))) /
        C152053;
    const double C3199 =
        (3 * (C152391 + C152272 * C152502 + C152499 * be) +
         C152272 * (2 * C152502 + C152272 * C152635 + C152627 * be) +
         (2 * C152499 + C152272 * C152627) * be) /
        C152045;
    const double C3517 =
        (C152391 + C152272 * C152502 + C152499 * be + C152635 * C152530) /
        C152045;
    const double C4389 =
        (C152482 * (2 * C152502 + C152272 * C152635 + C152627 * be)) / C152045;
    const double C152690 = C152688 + C152677;
    const double C152689 = C152687 + C152674;
    const double C152951 = C152272 * C152949;
    const double C152950 = C152272 * C152948;
    const double C153087 = C153037 + C153085;
    const double C153086 = C153027 + C153084;
    const double C4807 =
        (4 * (2 * C152520 + C152272 * C152590 + C152581 * ae) +
         C152272 * (3 * C152590 + C152272 * C152732 + C152722 * ae) +
         (3 * C152581 + C152272 * C152722) * ae) /
        C152045;
    const double C5037 =
        (2 * C152520 + C152272 * C152590 + C152581 * ae + C152732 * C152530) /
        C152045;
    const double C5775 =
        (C152482 * (3 * C152590 + C152272 * C152732 + C152722 * ae)) / C152045;
    const double C32004 =
        (2 * C152482 * C152732 + C152482 * (C152732 + C152949 * C152530)) /
        C152045;
    const double C152887 = C152845 + C152885;
    const double C32666 = C24216 * C30187;
    const double C46827 = C34929 * C30187;
    const double C53523 = C2881 * C30187;
    const double C69176 = C11439 * C30187;
    const double C133385 = C74324 * C30187;
    const double C136401 = C70502 * C30187;
    const double C149946 = C152193 * C30187;
    const double C204 = C198 - C191;
    const double C433 = C425 - C416;
    const double C2955 = C2943 - C2930;
    const double C12279 = C12277 - C12274;
    const double C24290 = C24278 - C24265;
    const double C71342 = C71340 - C71337;
    const double C83684 = C83672 - C83659;
    const double C807 = C806 - C804;
    const double C11501 = C11491 - C11480;
    const double C70564 = C70554 - C70543;
    const double C662 = C654 - C645;
    const double C942 = C941 - C939;
    const double C1153 = C1149 - C1144;
    const double C12489 = C12487 - C12484;
    const double C71552 = C71550 - C71547;
    const double C3845 = C3842 - C3837;
    const double C11781 = C11769 - C11756;
    const double C25148 = C25145 - C25140;
    const double C35003 = C34991 - C34978;
    const double C70844 = C70832 - C70819;
    const double C74398 = C74386 - C74373;
    const double C84542 = C84539 - C84534;
    const double C8058 = C8057 - C8055;
    const double C12059 = C12047 - C12034;
    const double C71122 = C71110 - C71097;
    const double C4086 = C4083 - C4078;
    const double C12785 = C12779 - C12772;
    const double C15451 = C15450 - C15448;
    const double C25389 = C25386 - C25381;
    const double C71848 = C71842 - C71835;
    const double C84783 = C84780 - C84775;
    const double C7832 = C7824 * C154058;
    const double C18014 = C7824 * C154036;
    const double C48089 = C7824 * C154058;
    const double C64207 = C7824 * C153648;
    const double C101282 = C7824 * C154036;
    const double C108117 = C7824 * C153648;
    const double C116552 = C7824 * C83605;
    const double C3265 = C3250 - C3251;
    const double C24584 = C24569 - C24570;
    const double C35729 = C35722 - C35723;
    const double C75124 = C75117 - C75118;
    const double C83978 = C83963 - C83964;
    const double C3583 = C3568 - C3569;
    const double C7510 = C7501 - C7502;
    const double C20526 = C20516 - C20517;
    const double C24886 = C24871 - C24872;
    const double C79182 = C79177 - C79178;
    const double C84280 = C84265 - C84266;
    const double C4425 = C4416 - C4417;
    const double C19165 = C19158 - C19159;
    const double C25712 = C25703 - C25704;
    const double C35951 = C35944 - C35945;
    const double C75346 = C75339 - C75340;
    const double C85106 = C85097 - C85098;
    const double C88228 = C88223 - C88224;
    const double C9217 = C8615 * C154058;
    const double C49422 = C8615 * C154058;
    const double C64477 = C8615 * C153648;
    const double C108387 = C8615 * C153648;
    const double C117885 = C8615 * C83605;
    const double C4811 =
        (4 * (2 * C152584 + ae * C152589 + be * C152590 + C152272 * C152724) +
         ae * (3 * C152589 + C152272 * C152731 + C152722 * be) +
         be * (3 * C152590 + C152272 * C152732 + C152722 * ae) +
         C152272 *
             (3 * C152724 + ae * C152731 + be * C152732 +
              C152272 *
                  (2 * C152714 + ae * C152725 + be * C152726 +
                   C152272 * (C152321 + ae * C152708 + be * C152711 +
                              C152272 * (ae * C152429 + be * C152437 +
                                         C152272 * C152278 * C152329))))) /
        C152053;
    const double C5779 =
        (3 * (C152644 + ae * C152482 * C152579 + be * C152482 * C152582 +
              C152272 * C152801) +
         ae * C152482 * C152731 + be * C152482 * C152732 +
         C152272 *
             (2 * C152801 + ae * C152482 * C152725 + be * C152482 * C152726 +
              C152272 *
                  (C152796 + ae * C152482 * C152708 + be * C152482 * C152711 +
                   C152272 * (ae * C152482 * C152429 + be * C152482 * C152437 +
                              C152272 * C152482 * C152278 * C152329)))) /
        C152053;
    const double C28697 =
        (3 * (C152780 + ae * (C152579 + C152708 * C152530) +
              be * (C152582 + C152711 * C152530) + C152272 * C152979) +
         ae * (C152731 + C152948 * C152530) +
         be * (C152732 + C152949 * C152530) +
         C152272 *
             (2 * C152979 + ae * (C152725 + C152937 * C152530) +
              be * (C152726 + C152940 * C152530) +
              C152272 * (C152974 + ae * (C152708 + C152921 * C152530) +
                         be * (C152711 + C152924 * C152530) +
                         C152272 * (ae * (C152429 + C152901 * C152530) +
                                    be * (C152437 + C152907 * C152530) +
                                    C152272 * (C152898 +
                                               C152278 *
                                                   (C152323 * C152324 +
                                                    C152275 * bs[9] *
                                                        std::pow(C152274, 9)) *
                                                   C152044 * C152530))))) /
        C152053;
    const double C4806 =
        (4 * (2 * C152519 + C152272 * C152589 + C152581 * be) +
         C152272 * (3 * C152589 + C152272 * C152731 + C152722 * be) +
         (3 * C152581 + C152272 * C152722) * be) /
        C152045;
    const double C5036 =
        (2 * C152519 + C152272 * C152589 + C152581 * be + C152731 * C152530) /
        C152045;
    const double C5774 =
        (C152482 * (3 * C152589 + C152272 * C152731 + C152722 * be)) / C152045;
    const double C32003 =
        (2 * C152482 * C152731 + C152482 * (C152731 + C152948 * C152530)) /
        C152045;
    const double C152942 = C152918 + C152936;
    const double C31260 = C31247 - C31233;
    const double C52125 = C52112 - C52098;
    const double C59732 = C59730 - C59726;
    const double C63598 = C63597 - C63595;
    const double C79904 = C79898 - C79889;
    const double C93828 = C93819 - C93805;
    const double C152886 = C152837 + C152884;
    const double C153041 = C153015 + C153016;
    const double C33429 = C154071 * C28696;
    const double C45608 = C154044 * C28696;
    const double C54286 = C154071 * C28696;
    const double C132166 = C154044 * C28696;
    const double C150697 = C83602 * C28696;
    const double C32664 = C24216 * C30186;
    const double C46825 = C34929 * C30186;
    const double C53521 = C2881 * C30186;
    const double C69174 = C11439 * C30186;
    const double C133383 = C74324 * C30186;
    const double C136399 = C70502 * C30186;
    const double C149944 = C152193 * C30186;
    const double C153079 = C152272 * C153073;
    const double C153143 = C153137 + C153142;
    const double C57195 = C57193 + C57189;
    const double C152174 = C152171 / C152045;
    const double C152177 = C152173 / C152055;
    const double C152176 = C152043 * C152173;
    const double C70538 = C70501 * C141;
    const double C70534 = C70501 * C140;
    const double C70522 = C70501 * C139;
    const double C70514 = C70501 * C138;
    const double C70506 = C70501 * C137;
    const double C70814 = C70501 * C345;
    const double C70806 = C70501 * C344;
    const double C70798 = C70501 * C343;
    const double C70794 = C70501 * C340;
    const double C70786 = C70501 * C339;
    const double C70778 = C70501 * C338;
    const double C71092 = C70501 * C574;
    const double C71084 = C70501 * C573;
    const double C71076 = C70501 * C572;
    const double C71072 = C70501 * C569;
    const double C71064 = C70501 * C568;
    const double C71056 = C70501 * C567;
    const double C71332 = C70501 * C337;
    const double C71542 = C70501 * C566;
    const double C71830 = C70501 * C1108;
    const double C71822 = C70501 * C1107;
    const double C71814 = C70501 * C1106;
    const double C78470 = C70501 * C3508;
    const double C78462 = C70501 * C1947;
    const double C78458 = C70501 * C1516;
    const double C78830 = C70501 * C2298;
    const double C78822 = C70501 * C7741;
    const double C78816 = C70501 * C2300;
    const double C78808 = C70501 * C2299;
    const double C78795 = C70501 * C571;
    const double C78786 = C70501 * C570;
    const double C79174 = C70501 * C1515;
    const double C79884 = C70501 * C6366;
    const double C79875 = C70501 * C1517;
    const double C79866 = C70501 * C1105;
    const double C80686 = C70501 * C6368;
    const double C81678 = C70501 * C3507;
    const double C81670 = C70501 * C1948;
    const double C82474 = C70501 * C7740;
    const double C88220 = C70501 * C1946;
    const double C135733 = C70501 * C9201;
    const double C136396 = C70501 * C6367;
    const double C136930 = C70501 * C10553;
    const double C2954 = C2942 - C2926;
    const double C2951 = C2939 - C2914;
    const double C2948 = C2936 - C2902;
    const double C2945 = C2933 - C2890;
    const double C3276 = C3264 - C3248;
    const double C3273 = C3261 - C3236;
    const double C3270 = C3258 - C3224;
    const double C3267 = C3255 - C3212;
    const double C3594 = C3582 - C3566;
    const double C3591 = C3579 - C3554;
    const double C3588 = C3576 - C3542;
    const double C3585 = C3573 - C3530;
    const double C3844 = C3841 - C3833;
    const double C4085 = C4082 - C4074;
    const double C4430 = C4424 - C4414;
    const double C4427 = C4421 - C4402;
    const double C52124 = C52111 - C52094;
    const double C52121 = C52108 - C52082;
    const double C52118 = C52105 - C52070;
    const double C52115 = C52102 - C52058;
    const double C52920 = C52911 - C52898;
    const double C52917 = C52908 - C52886;
    const double C52914 = C52905 - C52874;
    const double C53531 = C53527 - C53519;
    const double C54294 = C54288 - C54269;
    const double C54906 = C54902 - C54894;
    const double C102429 = C102426 - C102419;
    const double C11500 = C11490 - C11476;
    const double C11499 = C11489 - C11472;
    const double C11496 = C11486 - C11460;
    const double C11494 = C11484 - C11452;
    const double C11492 = C11482 - C11444;
    const double C11780 = C11768 - C11752;
    const double C11778 = C11766 - C11744;
    const double C11776 = C11764 - C11736;
    const double C11775 = C11763 - C11732;
    const double C11773 = C11761 - C11724;
    const double C11771 = C11759 - C11716;
    const double C12058 = C12046 - C12030;
    const double C12056 = C12044 - C12022;
    const double C12054 = C12042 - C12014;
    const double C12053 = C12041 - C12010;
    const double C12051 = C12039 - C12002;
    const double C12049 = C12037 - C11994;
    const double C12278 = C12276 - C12270;
    const double C12488 = C12486 - C12480;
    const double C12784 = C12778 - C12768;
    const double C12782 = C12776 - C12760;
    const double C12780 = C12774 - C12752;
    const double C19168 = C19164 - C19156;
    const double C19166 = C19162 - C19148;
    const double C19516 = C19508 - C19496;
    const double C19514 = C19506 - C19488;
    const double C19513 = C19505 - C19481;
    const double C19510 = C19502 - C19466;
    const double C20531 = C20525 - C20514;
    const double C20529 = C20523 - C20506;
    const double C20527 = C20521 - C20496;
    const double C21323 = C21321 - C21315;
    const double C22303 = C22301 - C22295;
    const double C23091 = C23089 - C23083;
    const double C58436 = C58434 - C58428;
    const double C58749 = C58745 - C58736;
    const double C59731 = C59729 - C59722;
    const double C60522 = C60519 - C60511;
    const double C61503 = C61501 - C61495;
    const double C62295 = C62292 - C62285;
    const double C68520 = C68517 - C68509;
    const double C69180 = C69178 - C69172;
    const double C69715 = C69713 - C69706;
    const double C24288 = C24276 - C24257;
    const double C24287 = C24275 - C24253;
    const double C24282 = C24270 - C24233;
    const double C24279 = C24267 - C24221;
    const double C24594 = C24582 - C24563;
    const double C24591 = C24579 - C24551;
    const double C24590 = C24578 - C24547;
    const double C24587 = C24575 - C24535;
    const double C24896 = C24884 - C24865;
    const double C24893 = C24881 - C24853;
    const double C24892 = C24880 - C24849;
    const double C24889 = C24877 - C24837;
    const double C25146 = C25143 - C25132;
    const double C25387 = C25384 - C25373;
    const double C25716 = C25710 - C25697;
    const double C25713 = C25707 - C25685;
    const double C31258 = C31245 - C31225;
    const double C31257 = C31244 - C31221;
    const double C31252 = C31239 - C31201;
    const double C31249 = C31236 - C31189;
    const double C32058 = C32049 - C32033;
    const double C32055 = C32046 - C32021;
    const double C32052 = C32043 - C32009;
    const double C32673 = C32669 - C32658;
    const double C33439 = C33433 - C33420;
    const double C33436 = C33430 - C33408;
    const double C34056 = C34052 - C34041;
    const double C39073 = C39070 - C39060;
    const double C24289 = C24277 - C24261;
    const double C24286 = C24274 - C24249;
    const double C24283 = C24271 - C24237;
    const double C24280 = C24268 - C24225;
    const double C24595 = C24583 - C24567;
    const double C24592 = C24580 - C24555;
    const double C24589 = C24577 - C24543;
    const double C24586 = C24574 - C24531;
    const double C24897 = C24885 - C24869;
    const double C24894 = C24882 - C24857;
    const double C24891 = C24879 - C24845;
    const double C24888 = C24876 - C24833;
    const double C25147 = C25144 - C25136;
    const double C25388 = C25385 - C25377;
    const double C25717 = C25711 - C25701;
    const double C25714 = C25708 - C25689;
    const double C31259 = C31246 - C31229;
    const double C31256 = C31243 - C31217;
    const double C31253 = C31240 - C31205;
    const double C31250 = C31237 - C31193;
    const double C32059 = C32050 - C32037;
    const double C32056 = C32047 - C32025;
    const double C32053 = C32044 - C32013;
    const double C32674 = C32670 - C32662;
    const double C33437 = C33431 - C33412;
    const double C34057 = C34053 - C34045;
    const double C39074 = C39071 - C39064;
    const double C2965 = C2953 + C2923;
    const double C2964 = C2952 + C2919;
    const double C2959 = C2947 + C2899;
    const double C2956 = C2944 + C2887;
    const double C3287 = C3275 + C3245;
    const double C3284 = C3272 + C3233;
    const double C3283 = C3271 + C3229;
    const double C3280 = C3268 + C3217;
    const double C3605 = C3593 + C3563;
    const double C3602 = C3590 + C3551;
    const double C3601 = C3589 + C3547;
    const double C3598 = C3586 + C3535;
    const double C3846 = C3843 + C3830;
    const double C4087 = C4084 + C4071;
    const double C4435 = C4429 + C4411;
    const double C4432 = C4426 + C4399;
    const double C52136 = C52123 + C52091;
    const double C52135 = C52122 + C52087;
    const double C52130 = C52117 + C52067;
    const double C52127 = C52114 + C52055;
    const double C52928 = C52919 + C52895;
    const double C52925 = C52916 + C52883;
    const double C52922 = C52913 + C52871;
    const double C53534 = C53530 + C53516;
    const double C54302 = C54296 + C54278;
    const double C54299 = C54293 + C54266;
    const double C54908 = C54905 + C54891;
    const double C102431 = C102428 + C102416;
    const double C2962 = C2950 + C2911;
    const double C2961 = C2949 + C2907;
    const double C2958 = C2946 + C2895;
    const double C3281 = C3269 + C3221;
    const double C3278 = C3266 + C3209;
    const double C3599 = C3587 + C3539;
    const double C3596 = C3584 + C3527;
    const double C52133 = C52120 + C52079;
    const double C52132 = C52119 + C52075;
    const double C52129 = C52116 + C52063;
    const double C52924 = C52915 + C52879;
    const double C54910 = C54907 + C54899;
    const double C11508 = C11498 + C11469;
    const double C11507 = C11497 + C11465;
    const double C11505 = C11495 + C11457;
    const double C11503 = C11493 + C11449;
    const double C11791 = C11779 + C11749;
    const double C11789 = C11777 + C11741;
    const double C11786 = C11774 + C11729;
    const double C11784 = C11772 + C11721;
    const double C11782 = C11770 + C11713;
    const double C12069 = C12057 + C12027;
    const double C12067 = C12055 + C12019;
    const double C12064 = C12052 + C12007;
    const double C12062 = C12050 + C11999;
    const double C12060 = C12048 + C11991;
    const double C12789 = C12783 + C12765;
    const double C12787 = C12781 + C12757;
    const double C19525 = C19517 + C19501;
    const double C19523 = C19515 + C19493;
    const double C19520 = C19512 + C19478;
    const double C19519 = C19511 + C19471;
    const double C20534 = C20528 + C20501;
    const double C21326 = C21324 + C21320;
    const double C22306 = C22304 + C22300;
    const double C23094 = C23092 + C23088;
    const double C58752 = C58750 + C58741;
    const double C60526 = C60523 + C60516;
    const double C62298 = C62296 + C62290;
    const double C68523 = C68521 + C68514;
    const double C24297 = C24285 + C24246;
    const double C24296 = C24284 + C24242;
    const double C24293 = C24281 + C24230;
    const double C24600 = C24588 + C24540;
    const double C24597 = C24585 + C24528;
    const double C24902 = C24890 + C24842;
    const double C24899 = C24887 + C24830;
    const double C31268 = C31255 + C31214;
    const double C31267 = C31254 + C31210;
    const double C31264 = C31251 + C31198;
    const double C32063 = C32054 + C32018;
    const double C34061 = C34058 + C34050;
    const double C35008 = C34996 + C34951;
    const double C35007 = C34995 + C34947;
    const double C44396 = C44388 + C44360;
    const double C70571 = C70561 + C70532;
    const double C70570 = C70560 + C70528;
    const double C70568 = C70558 + C70520;
    const double C70566 = C70556 + C70512;
    const double C70854 = C70842 + C70812;
    const double C70852 = C70840 + C70804;
    const double C70849 = C70837 + C70792;
    const double C70847 = C70835 + C70784;
    const double C70845 = C70833 + C70776;
    const double C71132 = C71120 + C71090;
    const double C71130 = C71118 + C71082;
    const double C71127 = C71115 + C71070;
    const double C71125 = C71113 + C71062;
    const double C71123 = C71111 + C71054;
    const double C71852 = C71846 + C71828;
    const double C71850 = C71844 + C71820;
    const double C78877 = C78864 + C78836;
    const double C78875 = C78862 + C78828;
    const double C78872 = C78859 + C78814;
    const double C78870 = C78857 + C78806;
    const double C78869 = C78856 + C78801;
    const double C78867 = C78854 + C78792;
    const double C79908 = C79902 + C79881;
    const double C79906 = C79900 + C79872;
    const double C80702 = C80699 + C80692;
    const double C81694 = C81690 + C81676;
    const double C82488 = C82486 + C82480;
    const double C135748 = C135746 + C135739;
    const double C74403 = C74391 + C74346;
    const double C74402 = C74390 + C74342;
    const double C130954 = C130946 + C130918;
    const double C83691 = C83679 + C83640;
    const double C83690 = C83678 + C83636;
    const double C83687 = C83675 + C83624;
    const double C83994 = C83982 + C83934;
    const double C83991 = C83979 + C83922;
    const double C84296 = C84284 + C84236;
    const double C84293 = C84281 + C84224;
    const double C93832 = C93823 + C93784;
    const double C93831 = C93822 + C93778;
    const double C94848 = C94842 + C94817;
    const double C97428 = C97425 + C97419;
    const double C151312 = C151309 + C151301;
    const double C83655 = C152145 * C350;
    const double C83653 = C152145 * C349;
    const double C83643 = C152145 * C352;
    const double C83641 = C152145 * C351;
    const double C83631 = C152145 * C354;
    const double C83629 = C152145 * C353;
    const double C83619 = C152145 * C356;
    const double C83617 = C152145 * C355;
    const double C83961 = C152145 * C1381;
    const double C83959 = C152145 * C1380;
    const double C83949 = C152145 * C1383;
    const double C83947 = C152145 * C1382;
    const double C83937 = C152145 * C362;
    const double C83935 = C152145 * C361;
    const double C83925 = C152145 * C364;
    const double C83923 = C152145 * C363;
    const double C84263 = C152145 * C1523;
    const double C84261 = C152145 * C1522;
    const double C84251 = C152145 * C1525;
    const double C84249 = C152145 * C1524;
    const double C84239 = C152145 * C1114;
    const double C84237 = C152145 * C1113;
    const double C84227 = C152145 * C1116;
    const double C84225 = C152145 * C1115;
    const double C84530 = C152145 * C366;
    const double C84528 = C152145 * C365;
    const double C84771 = C152145 * C1118;
    const double C84769 = C152145 * C1117;
    const double C85095 = C152145 * C1954;
    const double C85093 = C152145 * C1953;
    const double C85083 = C152145 * C1956;
    const double C85081 = C152145 * C1955;
    const double C93462 = C152145 * C4386;
    const double C93460 = C152145 * C4385;
    const double C93801 = C152145 * C6376;
    const double C93799 = C152145 * C6375;
    const double C93787 = C152145 * C1527;
    const double C93785 = C152145 * C1526;
    const double C93773 = C152145 * C1112;
    const double C93771 = C152145 * C1111;
    const double C94825 = C152145 * C3514;
    const double C94823 = C152145 * C3513;
    const double C94812 = C152145 * C1958;
    const double C94810 = C152145 * C1957;
    const double C95632 = C152145 * C3512;
    const double C95630 = C152145 * C3511;
    const double C96619 = C152145 * C4384;
    const double C96617 = C152145 * C4383;
    const double C97414 = C152145 * C6380;
    const double C97412 = C152145 * C6379;
    const double C149942 = C152145 * C6378;
    const double C149940 = C152145 * C6377;
    const double C150692 = C152145 * C5039;
    const double C150690 = C152145 * C5038;
    const double C151296 = C152145 * C9207;
    const double C151294 = C152145 * C9206;
    const double C28434 =
        (C152145 / C152085 + ((C152043 * C152193 + C83602) * ae) / C152045) /
            C152085 -
        ((C152043 * (C152193 / C152085 + (0 * ae) / C152045) + C154044) * be) /
            C152045;
    const double C34927 =
        C152145 / C152085 - ((C152043 * C152193 + C83602) * be) / C152045;
    const double C74322 =
        C152145 / C152085 + ((C152043 * C152193 + C83602) * ae) / C152045;
    const double C152135 = C152131 * be;
    const double C3286 = C3274 + C3241;
    const double C24605 = C24593 + C24560;
    const double C35258 = C35250 + C35213;
    const double C74653 = C74645 + C74608;
    const double C83999 = C83987 + C83954;
    const double C3604 = C3592 + C3559;
    const double C7521 = C7515 + C7500;
    const double C20536 = C20530 + C20511;
    const double C24907 = C24895 + C24862;
    const double C78489 = C78483 + C78456;
    const double C84301 = C84289 + C84256;
    const double C4434 = C4428 + C4407;
    const double C19171 = C19167 + C19153;
    const double C25721 = C25715 + C25694;
    const double C35508 = C35500 + C35463;
    const double C74903 = C74895 + C74858;
    const double C78492 = C78486 + C78468;
    const double C85115 = C85109 + C85088;
    const double C32048 = C32027 - C32028;
    const double C33434 = C33422 - C33423;
    const double C44381 = C44361 - C44362;
    const double C52909 = C52888 - C52889;
    const double C54291 = C54279 - C54280;
    const double C61502 = C61497 - C61498;
    const double C81688 = C81681 - C81682;
    const double C95640 = C95634 - C95635;
    const double C130939 = C130919 - C130920;
    const double C33432 = C33414 - C33415;
    const double C45066 = C45059 - C45060;
    const double C54289 = C54271 - C54272;
    const double C96627 = C96621 - C96622;
    const double C131624 = C131617 - C131618;
    const double C9220 = C8589 + C9218;
    const double C49424 = C48831 + C49423;
    const double C117887 = C117294 + C117886;
    const double C9969 = C9967 * C2874;
    const double C50154 = C9967 * C154106;
    const double C57181 = C9967 * C153638;
    const double C65648 = C9967 * C154002;
    const double C109558 = C9967 * C74316;
    const double C118617 = C9967 * C153643;
    const double C57196 = C57194 * C153638;
    const double C65650 = C57194 * C154002;
    const double C109560 = C57194 * C74316;
    const double C7816 = C7794 + C7807;
    const double C48093 = C48086 + C48091;
    const double C116556 = C116549 + C116554;
    const double C56772 = C56771 + C56769;
    const double C69718 = C69716 + C69711;
    const double C136943 = C136941 + C136936;
    const double C57534 = C57533 + C57531;
    const double C4805 =
        (4 * (2 * C152511 + C152272 * C152613 + C152604 * ae) +
         C152272 * (3 * C152613 + C152272 * C152690 + C152680 * ae) +
         (3 * C152604 + C152272 * C152680) * ae) /
        C152045;
    const double C5035 =
        (2 * C152511 + C152272 * C152613 + C152604 * ae + C152690 * C152530) /
        C152045;
    const double C5773 =
        (C152482 * (3 * C152613 + C152272 * C152690 + C152680 * ae)) / C152045;
    const double C4810 =
        (4 * (2 * C152607 + ae * C152612 + be * C152613 + C152272 * C152682) +
         ae * (3 * C152612 + C152272 * C152689 + C152680 * be) +
         be * (3 * C152613 + C152272 * C152690 + C152680 * ae) +
         C152272 *
             (3 * C152682 + ae * C152689 + be * C152690 +
              C152272 *
                  (2 * C152672 + ae * C152683 + be * C152684 +
                   C152272 *
                       (C152331 + ae * C152666 + be * C152669 +
                        C152272 *
                            (ae * C152448 + be * C152450 +
                             C152272 * (C152329 + (C152323 * C152324 +
                                                   C152275 * bs[9] *
                                                       std::pow(C152274, 9)) *
                                                      C152044 * C152290)))))) /
        C152053;
    const double C5778 =
        (3 * (C152646 + ae * C152482 * C152602 + be * C152482 * C152605 +
              C152272 * C152792) +
         ae * C152482 * C152689 + be * C152482 * C152690 +
         C152272 *
             (2 * C152792 + ae * C152482 * C152683 + be * C152482 * C152684 +
              C152272 *
                  (C152787 + ae * C152482 * C152666 + be * C152482 * C152669 +
                   C152272 * (ae * C152482 * C152448 + be * C152482 * C152450 +
                              C152272 * C152482 *
                                  (C152329 +
                                   (C152323 * C152324 +
                                    C152275 * bs[9] * std::pow(C152274, 9)) *
                                       C152044 * C152290))))) /
        C152053;
    const double C4804 =
        (4 * (2 * C152510 + C152272 * C152612 + C152604 * be) +
         C152272 * (3 * C152612 + C152272 * C152689 + C152680 * be) +
         (3 * C152604 + C152272 * C152680) * be) /
        C152045;
    const double C5034 =
        (2 * C152510 + C152272 * C152612 + C152604 * be + C152689 * C152530) /
        C152045;
    const double C5772 =
        (C152482 * (3 * C152612 + C152272 * C152689 + C152680 * be)) / C152045;
    const double C152953 = C152905 + C152951;
    const double C152952 = C152899 + C152950;
    const double C153089 = C153087 + C153068;
    const double C153088 = C153086 + C153065;
    const double C35240 = C34929 * C4807;
    const double C74635 = C74324 * C4807;
    const double C32041 = C24216 * C5037;
    const double C35490 = C34929 * C5037;
    const double C52902 = C2881 * C5037;
    const double C58432 = C11439 * C5037;
    const double C74885 = C74324 * C5037;
    const double C78475 = C70502 * C5037;
    const double C94829 = C152193 * C5037;
    const double C36232 = C34929 * C5775;
    const double C39068 = C24216 * C5775;
    const double C75627 = C74324 * C5775;
    const double C93466 = C152193 * C5775;
    const double C102423 = C2881 * C5775;
    const double C152889 = C152887 + C152874;
    const double C210 = C204 + C192;
    const double C441 = C433 + C417;
    const double C2967 = C2955 + C2931;
    const double C12281 = C12279 + C12275;
    const double C24302 = C24290 + C24266;
    const double C71344 = C71342 + C71338;
    const double C83696 = C83684 + C83660;
    const double C808 = C807 + C805;
    const double C11511 = C11501 + C11481;
    const double C70574 = C70564 + C70544;
    const double C670 = C662 + C646;
    const double C943 = C942 + C940;
    const double C1157 = C1153 + C1145;
    const double C12491 = C12489 + C12485;
    const double C71554 = C71552 + C71548;
    const double C3848 = C3845 + C3838;
    const double C11793 = C11781 + C11757;
    const double C25151 = C25148 + C25141;
    const double C35015 = C35003 + C34979;
    const double C70856 = C70844 + C70820;
    const double C74410 = C74398 + C74374;
    const double C84545 = C84542 + C84535;
    const double C8059 = C8058 + C8056;
    const double C12071 = C12059 + C12035;
    const double C71134 = C71122 + C71098;
    const double C4089 = C4086 + C4079;
    const double C12791 = C12785 + C12773;
    const double C15452 = C15451 + C15449;
    const double C25392 = C25389 + C25382;
    const double C71854 = C71848 + C71836;
    const double C84786 = C84783 + C84776;
    const double C3277 = C3265 - C3252;
    const double C24596 = C24584 - C24571;
    const double C35733 = C35729 - C35724;
    const double C75128 = C75124 - C75119;
    const double C83990 = C83978 - C83965;
    const double C3595 = C3583 - C3570;
    const double C7516 = C7510 - C7503;
    const double C20532 = C20526 - C20518;
    const double C24898 = C24886 - C24873;
    const double C79184 = C79182 - C79179;
    const double C84292 = C84280 - C84267;
    const double C4431 = C4425 - C4418;
    const double C19169 = C19165 - C19160;
    const double C25718 = C25712 - C25705;
    const double C35955 = C35951 - C35946;
    const double C75350 = C75346 - C75341;
    const double C85112 = C85106 - C85099;
    const double C88230 = C88228 - C88225;
    const double C35241 = C154044 * C4811;
    const double C74636 = C154044 * C4811;
    const double C36233 = C154044 * C5779;
    const double C39069 = C154071 * C5779;
    const double C75628 = C154044 * C5779;
    const double C93467 = C83602 * C5779;
    const double C102424 = C154071 * C5779;
    const double C35238 = C34929 * C4806;
    const double C74633 = C74324 * C4806;
    const double C32039 = C24216 * C5036;
    const double C35488 = C34929 * C5036;
    const double C52900 = C2881 * C5036;
    const double C58430 = C11439 * C5036;
    const double C74883 = C74324 * C5036;
    const double C78473 = C70502 * C5036;
    const double C94827 = C152193 * C5036;
    const double C36230 = C34929 * C5774;
    const double C39066 = C24216 * C5774;
    const double C75625 = C74324 * C5774;
    const double C93464 = C152193 * C5774;
    const double C102421 = C2881 * C5774;
    const double C31273 = C31260 + C31234;
    const double C52138 = C52125 + C52099;
    const double C59734 = C59732 + C59727;
    const double C63599 = C63598 + C63596;
    const double C79910 = C79904 + C79890;
    const double C93837 = C93828 + C93806;
    const double C152888 = C152886 + C152871;
    const double C153050 = C153041 + C153017;
    const double C32671 = C32664 - C32665;
    const double C46832 = C46825 - C46826;
    const double C53528 = C53521 - C53522;
    const double C69179 = C69174 - C69175;
    const double C133390 = C133383 - C133384;
    const double C136404 = C136399 - C136400;
    const double C149951 = C149944 - C149945;
    const double C57197 = C57195 * C153638;
    const double C152180 = C152177 - C152174;
    const double C152179 = C152176 / C152045;
    const double C70553 = C70537 - C70538;
    const double C70552 = C70533 - C70534;
    const double C70549 = C70521 - C70522;
    const double C70547 = C70513 - C70514;
    const double C70545 = C70505 - C70506;
    const double C70831 = C70813 - C70814;
    const double C70829 = C70805 - C70806;
    const double C70827 = C70797 - C70798;
    const double C70826 = C70793 - C70794;
    const double C70824 = C70785 - C70786;
    const double C70822 = C70777 - C70778;
    const double C71109 = C71091 - C71092;
    const double C71107 = C71083 - C71084;
    const double C71105 = C71075 - C71076;
    const double C71104 = C71071 - C71072;
    const double C71102 = C71063 - C71064;
    const double C71100 = C71055 - C71056;
    const double C71339 = C71331 - C71332;
    const double C71549 = C71541 - C71542;
    const double C71841 = C71829 - C71830;
    const double C71839 = C71821 - C71822;
    const double C71837 = C71813 - C71814;
    const double C78481 = C78469 - C78470;
    const double C78479 = C78461 - C78462;
    const double C78478 = C78457 - C78458;
    const double C78849 = C78829 - C78830;
    const double C78847 = C78821 - C78822;
    const double C78846 = C78815 - C78816;
    const double C78844 = C78807 - C78808;
    const double C78840 = C78794 - C78795;
    const double C78838 = C78785 - C78786;
    const double C79181 = C79173 - C79174;
    const double C79897 = C79883 - C79884;
    const double C79895 = C79874 - C79875;
    const double C79893 = C79865 - C79866;
    const double C80695 = C80685 - C80686;
    const double C81687 = C81677 - C81678;
    const double C81685 = C81669 - C81670;
    const double C82482 = C82473 - C82474;
    const double C88227 = C88219 - C88220;
    const double C135742 = C135732 - C135733;
    const double C136403 = C136395 - C136396;
    const double C136938 = C136929 - C136930;
    const double C2966 = C2954 + C2927;
    const double C2963 = C2951 + C2915;
    const double C2960 = C2948 + C2903;
    const double C2957 = C2945 + C2891;
    const double C3288 = C3276 + C3249;
    const double C3285 = C3273 + C3237;
    const double C3282 = C3270 + C3225;
    const double C3279 = C3267 + C3213;
    const double C3606 = C3594 + C3567;
    const double C3603 = C3591 + C3555;
    const double C3600 = C3588 + C3543;
    const double C3597 = C3585 + C3531;
    const double C3847 = C3844 + C3834;
    const double C4088 = C4085 + C4075;
    const double C4436 = C4430 + C4415;
    const double C4433 = C4427 + C4403;
    const double C52137 = C52124 + C52095;
    const double C52134 = C52121 + C52083;
    const double C52131 = C52118 + C52071;
    const double C52128 = C52115 + C52059;
    const double C52929 = C52920 + C52899;
    const double C52926 = C52917 + C52887;
    const double C52923 = C52914 + C52875;
    const double C53535 = C53531 + C53520;
    const double C54300 = C54294 + C54270;
    const double C54909 = C54906 + C54895;
    const double C102432 = C102429 + C102420;
    const double C11510 = C11500 + C11477;
    const double C11509 = C11499 + C11473;
    const double C11506 = C11496 + C11461;
    const double C11504 = C11494 + C11453;
    const double C11502 = C11492 + C11445;
    const double C11792 = C11780 + C11753;
    const double C11790 = C11778 + C11745;
    const double C11788 = C11776 + C11737;
    const double C11787 = C11775 + C11733;
    const double C11785 = C11773 + C11725;
    const double C11783 = C11771 + C11717;
    const double C12070 = C12058 + C12031;
    const double C12068 = C12056 + C12023;
    const double C12066 = C12054 + C12015;
    const double C12065 = C12053 + C12011;
    const double C12063 = C12051 + C12003;
    const double C12061 = C12049 + C11995;
    const double C12280 = C12278 + C12271;
    const double C12490 = C12488 + C12481;
    const double C12790 = C12784 + C12769;
    const double C12788 = C12782 + C12761;
    const double C12786 = C12780 + C12753;
    const double C19172 = C19168 + C19157;
    const double C19170 = C19166 + C19149;
    const double C19524 = C19516 + C19497;
    const double C19522 = C19514 + C19489;
    const double C19521 = C19513 + C19482;
    const double C19518 = C19510 + C19467;
    const double C20537 = C20531 + C20515;
    const double C20535 = C20529 + C20507;
    const double C20533 = C20527 + C20497;
    const double C21325 = C21323 + C21316;
    const double C22305 = C22303 + C22296;
    const double C23093 = C23091 + C23084;
    const double C58438 = C58436 + C58429;
    const double C58751 = C58749 + C58737;
    const double C59733 = C59731 + C59723;
    const double C60525 = C60522 + C60512;
    const double C61505 = C61503 + C61496;
    const double C62297 = C62295 + C62286;
    const double C68522 = C68520 + C68510;
    const double C69182 = C69180 + C69173;
    const double C69717 = C69715 + C69707;
    const double C24300 = C24288 + C24258;
    const double C24299 = C24287 + C24254;
    const double C24294 = C24282 + C24234;
    const double C24291 = C24279 + C24222;
    const double C24606 = C24594 + C24564;
    const double C24603 = C24591 + C24552;
    const double C24602 = C24590 + C24548;
    const double C24599 = C24587 + C24536;
    const double C24908 = C24896 + C24866;
    const double C24905 = C24893 + C24854;
    const double C24904 = C24892 + C24850;
    const double C24901 = C24889 + C24838;
    const double C25149 = C25146 + C25133;
    const double C25390 = C25387 + C25374;
    const double C25722 = C25716 + C25698;
    const double C25719 = C25713 + C25686;
    const double C31271 = C31258 + C31226;
    const double C31270 = C31257 + C31222;
    const double C31265 = C31252 + C31202;
    const double C31262 = C31249 + C31190;
    const double C32067 = C32058 + C32034;
    const double C32064 = C32055 + C32022;
    const double C32061 = C32052 + C32010;
    const double C32677 = C32673 + C32659;
    const double C33445 = C33439 + C33421;
    const double C33442 = C33436 + C33409;
    const double C34059 = C34056 + C34042;
    const double C39076 = C39073 + C39061;
    const double C24301 = C24289 + C24262;
    const double C24298 = C24286 + C24250;
    const double C24295 = C24283 + C24238;
    const double C24292 = C24280 + C24226;
    const double C24607 = C24595 + C24568;
    const double C24604 = C24592 + C24556;
    const double C24601 = C24589 + C24544;
    const double C24598 = C24586 + C24532;
    const double C24909 = C24897 + C24870;
    const double C24906 = C24894 + C24858;
    const double C24903 = C24891 + C24846;
    const double C24900 = C24888 + C24834;
    const double C25150 = C25147 + C25137;
    const double C25391 = C25388 + C25378;
    const double C25723 = C25717 + C25702;
    const double C25720 = C25714 + C25690;
    const double C31272 = C31259 + C31230;
    const double C31269 = C31256 + C31218;
    const double C31266 = C31253 + C31206;
    const double C31263 = C31250 + C31194;
    const double C32068 = C32059 + C32038;
    const double C32065 = C32056 + C32026;
    const double C32062 = C32053 + C32014;
    const double C32678 = C32674 + C32663;
    const double C33443 = C33437 + C33413;
    const double C34060 = C34057 + C34046;
    const double C39077 = C39074 + C39065;
    const double C34974 = C34927 * C366;
    const double C34972 = C34927 * C365;
    const double C34954 = C34927 * C364;
    const double C34952 = C34927 * C363;
    const double C34942 = C34927 * C362;
    const double C34940 = C34927 * C361;
    const double C35236 = C34927 * C3196;
    const double C35234 = C34927 * C3195;
    const double C35216 = C34927 * C1383;
    const double C35214 = C34927 * C1382;
    const double C35486 = C34927 * C3514;
    const double C35484 = C34927 * C3513;
    const double C35466 = C34927 * C1956;
    const double C35464 = C34927 * C1955;
    const double C35720 = C34927 * C1381;
    const double C35718 = C34927 * C1380;
    const double C35942 = C34927 * C1954;
    const double C35940 = C34927 * C1953;
    const double C36228 = C34927 * C4386;
    const double C36226 = C34927 * C4385;
    const double C44367 = C34927 * C3512;
    const double C44365 = C34927 * C3511;
    const double C44355 = C34927 * C1958;
    const double C44353 = C34927 * C1957;
    const double C45057 = C34927 * C4384;
    const double C45055 = C34927 * C4383;
    const double C45603 = C34927 * C5039;
    const double C45601 = C34927 * C5038;
    const double C46277 = C34927 * C5777;
    const double C46275 = C34927 * C5776;
    const double C46823 = C34927 * C6378;
    const double C46821 = C34927 * C6377;
    const double C74369 = C74322 * C366;
    const double C74367 = C74322 * C365;
    const double C74349 = C74322 * C364;
    const double C74347 = C74322 * C363;
    const double C74337 = C74322 * C362;
    const double C74335 = C74322 * C361;
    const double C74631 = C74322 * C3196;
    const double C74629 = C74322 * C3195;
    const double C74611 = C74322 * C1383;
    const double C74609 = C74322 * C1382;
    const double C74881 = C74322 * C3514;
    const double C74879 = C74322 * C3513;
    const double C74861 = C74322 * C1956;
    const double C74859 = C74322 * C1955;
    const double C75115 = C74322 * C1381;
    const double C75113 = C74322 * C1380;
    const double C75337 = C74322 * C1954;
    const double C75335 = C74322 * C1953;
    const double C75623 = C74322 * C4386;
    const double C75621 = C74322 * C4385;
    const double C130925 = C74322 * C3512;
    const double C130923 = C74322 * C3511;
    const double C130913 = C74322 * C1958;
    const double C130911 = C74322 * C1957;
    const double C131615 = C74322 * C4384;
    const double C131613 = C74322 * C4383;
    const double C132161 = C74322 * C5039;
    const double C132159 = C74322 * C5038;
    const double C132835 = C74322 * C5777;
    const double C132833 = C74322 * C5776;
    const double C133381 = C74322 * C6378;
    const double C133379 = C74322 * C6377;
    const double C152140 = C152135 / C152045;
    const double C9960 = C7521 * C2875;
    const double C50155 = C7521 * C154087;
    const double C65649 = C7521 * C153648;
    const double C109559 = C7521 * C153648;
    const double C118618 = C7521 * C153651;
    const double C32057 = C32048 - C32029;
    const double C33440 = C33434 - C33424;
    const double C44389 = C44381 - C44363;
    const double C52918 = C52909 - C52890;
    const double C54297 = C54291 - C54281;
    const double C61504 = C61502 - C61499;
    const double C81692 = C81688 - C81683;
    const double C95643 = C95640 - C95636;
    const double C130947 = C130939 - C130921;
    const double C33438 = C33432 - C33416;
    const double C45070 = C45066 - C45061;
    const double C54295 = C54289 - C54273;
    const double C96630 = C96627 - C96623;
    const double C131628 = C131624 - C131619;
    const double C56773 = C56772 * C153638;
    const double C57535 = C57534 * C153638;
    const double C152955 = C152953 + C152941;
    const double C152954 = C152952 + C152938;
    const double C153091 = C152272 * C153089;
    const double C153090 = C152272 * C153088;
    const double C28563 =
        (5 * (3 * C152567 + C152272 * C152774 + C152764 * ae) +
         C152272 * (4 * C152774 + C152272 * C152889 + C152877 * ae) +
         (4 * C152764 + C152272 * C152877) * ae) /
        C152045;
    const double C28693 =
        (3 * C152567 + C152272 * C152774 + C152764 * ae + C152889 * C152530) /
        C152045;
    const double C29107 =
        (C152482 * (4 * C152774 + C152272 * C152889 + C152877 * ae)) / C152045;
    const double C30185 =
        (2 * C152482 * C152889 + C152482 * (C152889 + C153089 * C152530)) /
        C152045;
    const double C8283 = C670 * C154058;
    const double C15662 = C670 * C154036;
    const double C48535 = C670 * C154058;
    const double C98930 = C670 * C154036;
    const double C116998 = C670 * C83605;
    const double C16054 = C943 * C154036;
    const double C99322 = C943 * C154036;
    const double C16320 = C1157 * C154036;
    const double C99588 = C1157 * C154036;
    const double C8603 = C8059 * C154058;
    const double C16842 = C8059 * C154036;
    const double C48837 = C8059 * C154058;
    const double C100110 = C8059 * C154036;
    const double C117300 = C8059 * C83605;
    const double C17492 = C15452 * C154036;
    const double C100760 = C15452 * C154036;
    const double C3289 = C3277 + C3253;
    const double C24608 = C24596 + C24572;
    const double C35737 = C35733 + C35725;
    const double C75132 = C75128 + C75120;
    const double C84002 = C83990 + C83966;
    const double C3607 = C3595 + C3571;
    const double C7522 = C7516 + C7504;
    const double C20538 = C20532 + C20519;
    const double C24910 = C24898 + C24874;
    const double C79186 = C79184 + C79180;
    const double C84304 = C84292 + C84268;
    const double C4437 = C4431 + C4419;
    const double C19173 = C19169 + C19161;
    const double C25724 = C25718 + C25706;
    const double C35959 = C35955 + C35947;
    const double C75354 = C75350 + C75342;
    const double C85118 = C85112 + C85100;
    const double C88232 = C88230 + C88226;
    const double C35249 = C35238 - C35239;
    const double C74644 = C74633 - C74634;
    const double C32051 = C32039 - C32040;
    const double C35499 = C35488 - C35489;
    const double C52912 = C52900 - C52901;
    const double C58435 = C58430 - C58431;
    const double C74894 = C74883 - C74884;
    const double C78482 = C78473 - C78474;
    const double C94838 = C94827 - C94828;
    const double C36237 = C36230 - C36231;
    const double C39072 = C39066 - C39067;
    const double C75632 = C75625 - C75626;
    const double C93470 = C93464 - C93465;
    const double C102427 = C102421 - C102422;
    const double C65651 = C63599 * C153648;
    const double C109561 = C63599 * C153648;
    const double C28566 =
        (5 * (3 * C152766 + ae * C152773 + be * C152774 + C152272 * C152879) +
         ae * (4 * C152773 + C152272 * C152888 + C152877 * be) +
         be * (4 * C152774 + C152272 * C152889 + C152877 * ae) +
         C152272 *
             (4 * C152879 + ae * C152888 + be * C152889 +
              C152272 *
                  (3 * C152869 + ae * C152882 + be * C152883 +
                   C152272 *
                       (2 * C152859 + ae * C152870 + be * C152873 +
                        C152272 * (C152314 + ae * C152852 + be * C152855 +
                                   C152272 * (ae * C152404 + be * C152408 +
                                              C152272 * C152329)))))) /
        C152053;
    const double C29110 =
        (4 * (2 * C152810 + ae * C152482 * C152767 + be * C152482 * C152768 +
              C152272 * C152996) +
         ae * C152482 * C152888 + be * C152482 * C152889 +
         C152272 *
             (3 * C152996 + ae * C152482 * C152882 + be * C152482 * C152883 +
              C152272 *
                  (2 * C152994 + ae * C152482 * C152870 +
                   be * C152482 * C152873 +
                   C152272 * (C152985 + ae * C152482 * C152852 +
                              be * C152482 * C152855 +
                              C152272 * (ae * C152482 * C152404 +
                                         be * C152482 * C152408 +
                                         C152272 * C152482 * C152329))))) /
        C152053;
    const double C29445 =
        (4 * (2 * C152967 + ae * (C152767 + C152870 * C152530) +
              be * (C152768 + C152873 * C152530) + C152272 * C153117) +
         ae * (C152888 + C153088 * C152530) +
         be * (C152889 + C153089 * C152530) +
         C152272 *
             (3 * C153117 + ae * (C152882 + C153080 * C152530) +
              be * (C152883 + C153082 * C152530) +
              C152272 *
                  (2 * C153115 + ae * (C152870 + C153064 * C152530) +
                   be * (C152873 + C153067 * C152530) +
                   C152272 *
                       (C153106 + ae * (C152852 + C153045 * C152530) +
                        be * (C152855 + C153048 * C152530) +
                        C152272 *
                            (ae * (C152404 + C152440 * C152530) +
                             be * (C152408 + C152444 * C152530) +
                             C152272 * (C152329 + (C152323 * C152324 +
                                                   C152275 * bs[9] *
                                                       std::pow(C152274, 9)) *
                                                      C152044 * C152530)))))) /
        C152053;
    const double C28562 =
        (5 * (3 * C152566 + C152272 * C152773 + C152764 * be) +
         C152272 * (4 * C152773 + C152272 * C152888 + C152877 * be) +
         (4 * C152764 + C152272 * C152877) * be) /
        C152045;
    const double C28692 =
        (3 * C152566 + C152272 * C152773 + C152764 * be + C152888 * C152530) /
        C152045;
    const double C29106 =
        (C152482 * (4 * C152773 + C152272 * C152888 + C152877 * be)) / C152045;
    const double C30184 =
        (2 * C152482 * C152888 + C152482 * (C152888 + C153088 * C152530)) /
        C152045;
    const double C153083 = C153050 + C153079;
    const double C32675 = C32671 - C32666;
    const double C46836 = C46832 - C46827;
    const double C53532 = C53528 - C53523;
    const double C69181 = C69179 - C69176;
    const double C133394 = C133390 - C133385;
    const double C136406 = C136404 - C136401;
    const double C149955 = C149951 - C149946;
    const double C83654 = C152180 * C337;
    const double C83642 = C152180 * C338;
    const double C83630 = C152180 * C339;
    const double C83618 = C152180 * C340;
    const double C83960 = C152180 * C1373;
    const double C83948 = C152180 * C1374;
    const double C83936 = C152180 * C343;
    const double C83924 = C152180 * C344;
    const double C84262 = C152180 * C1515;
    const double C84250 = C152180 * C1516;
    const double C84238 = C152180 * C1106;
    const double C84226 = C152180 * C1107;
    const double C84529 = C152180 * C345;
    const double C84770 = C152180 * C1108;
    const double C85094 = C152180 * C1946;
    const double C85082 = C152180 * C1947;
    const double C93461 = C152180 * C4380;
    const double C93800 = C152180 * C6366;
    const double C93786 = C152180 * C1517;
    const double C93772 = C152180 * C1105;
    const double C94824 = C152180 * C3508;
    const double C94811 = C152180 * C1948;
    const double C95631 = C152180 * C3507;
    const double C96618 = C152180 * C4379;
    const double C97413 = C152180 * C6368;
    const double C149941 = C152180 * C6367;
    const double C150691 = C152180 * C5033;
    const double C151295 = C152180 * C9201;
    const double C28435 =
        (C152180 / C152085 + ((C152197 - C152069 / C152198) * ae) / C152045) /
            C152085 -
        ((2 * (C152193 / C152085 + (0 * ae) / C152045) -
          C152069 / (C152045 * 4 * C152153)) *
         be) /
            C152045;
    const double C34928 =
        C152180 / C152085 - ((C152197 - C152069 / C152198) * be) / C152045;
    const double C74323 =
        C152180 / C152085 + ((C152197 - C152069 / C152198) * ae) / C152045;
    const double C152182 = C152179 + C152159;
    const double C70563 = C70553 - C70539;
    const double C70562 = C70552 - C70535;
    const double C70559 = C70549 - C70523;
    const double C70557 = C70547 - C70515;
    const double C70555 = C70545 - C70507;
    const double C70843 = C70831 - C70815;
    const double C70841 = C70829 - C70807;
    const double C70839 = C70827 - C70799;
    const double C70838 = C70826 - C70795;
    const double C70836 = C70824 - C70787;
    const double C70834 = C70822 - C70779;
    const double C71121 = C71109 - C71093;
    const double C71119 = C71107 - C71085;
    const double C71117 = C71105 - C71077;
    const double C71116 = C71104 - C71073;
    const double C71114 = C71102 - C71065;
    const double C71112 = C71100 - C71057;
    const double C71341 = C71339 - C71333;
    const double C71551 = C71549 - C71543;
    const double C71847 = C71841 - C71831;
    const double C71845 = C71839 - C71823;
    const double C71843 = C71837 - C71815;
    const double C78487 = C78481 - C78471;
    const double C78485 = C78479 - C78463;
    const double C78484 = C78478 - C78459;
    const double C78863 = C78849 - C78831;
    const double C78861 = C78847 - C78823;
    const double C78860 = C78846 - C78817;
    const double C78858 = C78844 - C78809;
    const double C78855 = C78840 - C78796;
    const double C78853 = C78838 - C78787;
    const double C79183 = C79181 - C79175;
    const double C79903 = C79897 - C79885;
    const double C79901 = C79895 - C79876;
    const double C79899 = C79893 - C79867;
    const double C80698 = C80695 - C80687;
    const double C81691 = C81687 - C81679;
    const double C81689 = C81685 - C81671;
    const double C82485 = C82482 - C82475;
    const double C88229 = C88227 - C88221;
    const double C135745 = C135742 - C135734;
    const double C136405 = C136403 - C136397;
    const double C136940 = C136938 - C136931;
    const double C2969 = C2963 + C2964;
    const double C2968 = C2959 + C2960;
    const double C3826 = C3279 + C3280;
    const double C52100 = C3603 + C3602;
    const double C102726 = C3602 + C3603;
    const double C102725 = C3600 + C3601;
    const double C102724 = C3601 + C3600;
    const double C4067 = C3597 + C3598;
    const double C103310 = C3598 + C3597;
    const double C103699 = C4433 + C4432;
    const double C103698 = C4432 + C4433;
    const double C54887 = C52134 + C52135;
    const double C52139 = C52130 + C52131;
    const double C53525 = C52926 + C52925;
    const double C11514 = C11508 + C11509;
    const double C11515 = C11507 + C11506;
    const double C11513 = C11506 + C11507;
    const double C11512 = C11504 + C11505;
    const double C12267 = C11784 + C11785;
    const double C12266 = C11782 + C11783;
    const double C19485 = C12068 + C12069;
    const double C19473 = C12069 + C12068;
    const double C19484 = C12066 + C12067;
    const double C19474 = C12067 + C12066;
    const double C19483 = C12064 + C12065;
    const double C19472 = C12065 + C12064;
    const double C12477 = C12062 + C12063;
    const double C18855 = C12063 + C12062;
    const double C12476 = C12060 + C12061;
    const double C20107 = C12061 + C12060;
    const double C19816 = C12789 + C12788;
    const double C20503 = C12788 + C12789;
    const double C20520 = C12787 + C12786;
    const double C20502 = C12786 + C12787;
    const double C58733 = C19522 + C19523;
    const double C58732 = C19523 + C19522;
    const double C58730 = C19521 + C19520;
    const double C59728 = C20536 + C20535;
    const double C59719 = C20535 + C20536;
    const double C60518 = C21326 + C21325;
    const double C62282 = C23094 + C23093;
    const double C67339 = C23093 + C23094;
    const double C68515 = C60526 + C60525;
    const double C69702 = C62298 + C62297;
    const double C24304 = C24298 + C24299;
    const double C24303 = C24294 + C24295;
    const double C25129 = C24598 + C24599;
    const double C31235 = C24906 + C24905;
    const double C39371 = C24905 + C24906;
    const double C39370 = C24903 + C24904;
    const double C39369 = C24904 + C24903;
    const double C25370 = C24900 + C24901;
    const double C39955 = C24901 + C24900;
    const double C40344 = C25720 + C25719;
    const double C40343 = C25719 + C25720;
    const double C34038 = C31269 + C31270;
    const double C31274 = C31265 + C31266;
    const double C32668 = C32065 + C32064;
    const double C152144 = C152139 - C152140;
    const double C32066 = C32057 + C32030;
    const double C33446 = C33440 + C33425;
    const double C44397 = C44389 + C44364;
    const double C52927 = C52918 + C52891;
    const double C54303 = C54297 + C54282;
    const double C61506 = C61504 + C61500;
    const double C81696 = C81692 + C81684;
    const double C95646 = C95643 + C95637;
    const double C130955 = C130947 + C130922;
    const double C33444 = C33438 + C33417;
    const double C45074 = C45070 + C45062;
    const double C54301 = C54295 + C54274;
    const double C96633 = C96630 + C96624;
    const double C131632 = C131628 + C131620;
    const double C28565 =
        (5 * (3 * C152590 + C152272 * C152732 + C152722 * ae) +
         C152272 * (4 * C152732 + C152272 * C152955 + C152944 * ae) +
         (4 * C152722 + C152272 * C152944) * ae) /
        C152045;
    const double C28695 =
        (3 * C152590 + C152272 * C152732 + C152722 * ae + C152955 * C152530) /
        C152045;
    const double C29109 =
        (C152482 * (4 * C152732 + C152272 * C152955 + C152944 * ae)) / C152045;
    const double C28567 =
        (5 * (3 * C152724 + ae * C152731 + be * C152732 + C152272 * C152942) +
         ae * (4 * C152731 + C152272 * C152954 + C152944 * be) +
         be * (4 * C152732 + C152272 * C152955 + C152944 * ae) +
         C152272 *
             (4 * C152942 + ae * C152954 + be * C152955 +
              C152272 *
                  (3 * C152932 + ae * C152948 + be * C152949 +
                   C152272 *
                       (2 * C152920 + ae * C152937 + be * C152940 +
                        C152272 * (C152898 + ae * C152921 + be * C152924 +
                                   C152272 * (ae * C152901 + be * C152907 +
                                              C152272 * C152278 *
                                                  (C152323 * C152324 +
                                                   C152275 * bs[9] *
                                                       std::pow(C152274, 9)) *
                                                  C152044)))))) /
        C152053;
    const double C29111 =
        (4 * (2 * C152801 + ae * C152482 * C152725 + be * C152482 * C152726 +
              C152272 * C153013) +
         ae * C152482 * C152954 + be * C152482 * C152955 +
         C152272 *
             (3 * C153013 + ae * C152482 * C152948 + be * C152482 * C152949 +
              C152272 * (2 * C153011 + ae * C152482 * C152937 +
                         be * C152482 * C152940 +
                         C152272 * (C153002 + ae * C152482 * C152921 +
                                    be * C152482 * C152924 +
                                    C152272 * (ae * C152482 * C152901 +
                                               be * C152482 * C152907 +
                                               C152272 * C152482 * C152278 *
                                                   (C152323 * C152324 +
                                                    C152275 * bs[9] *
                                                        std::pow(C152274, 9)) *
                                                   C152044))))) /
        C152053;
    const double C28564 =
        (5 * (3 * C152589 + C152272 * C152731 + C152722 * be) +
         C152272 * (4 * C152731 + C152272 * C152954 + C152944 * be) +
         (4 * C152722 + C152272 * C152944) * be) /
        C152045;
    const double C28694 =
        (3 * C152589 + C152272 * C152731 + C152722 * be + C152954 * C152530) /
        C152045;
    const double C29108 =
        (C152482 * (4 * C152731 + C152272 * C152954 + C152944 * be)) / C152045;
    const double C153093 = C153036 + C153091;
    const double C153092 = C153026 + C153090;
    const double C33428 = C24216 * C28693;
    const double C45607 = C34929 * C28693;
    const double C54285 = C2881 * C28693;
    const double C132165 = C74324 * C28693;
    const double C150696 = C152193 * C28693;
    const double C46281 = C34929 * C29107;
    const double C132839 = C74324 * C29107;
    const double C9961 = C7522 * C154058;
    const double C50156 = C7522 * C154058;
    const double C118619 = C7522 * C83605;
    const double C35257 = C35249 - C35240;
    const double C74652 = C74644 - C74635;
    const double C32060 = C32051 - C32041;
    const double C35507 = C35499 - C35490;
    const double C52921 = C52912 - C52902;
    const double C58437 = C58435 - C58432;
    const double C74902 = C74894 - C74885;
    const double C78488 = C78482 - C78475;
    const double C94845 = C94838 - C94829;
    const double C36241 = C36237 - C36232;
    const double C39075 = C39072 - C39068;
    const double C75636 = C75632 - C75627;
    const double C93473 = C93470 - C93466;
    const double C102430 = C102427 - C102423;
    const double C46282 = C154044 * C29110;
    const double C132840 = C154044 * C29110;
    const double C33426 = C24216 * C28692;
    const double C45605 = C34929 * C28692;
    const double C54283 = C2881 * C28692;
    const double C132163 = C74324 * C28692;
    const double C150694 = C152193 * C28692;
    const double C46279 = C34929 * C29106;
    const double C132837 = C74324 * C29106;
    const double C32679 = C32675 + C32667;
    const double C46840 = C46836 + C46828;
    const double C53536 = C53532 + C53524;
    const double C69183 = C69181 + C69177;
    const double C133398 = C133394 + C133386;
    const double C136408 = C136406 + C136402;
    const double C149959 = C149955 + C149947;
    const double C83671 = C83653 - C83654;
    const double C83668 = C83641 - C83642;
    const double C83665 = C83629 - C83630;
    const double C83662 = C83617 - C83618;
    const double C83977 = C83959 - C83960;
    const double C83974 = C83947 - C83948;
    const double C83971 = C83935 - C83936;
    const double C83968 = C83923 - C83924;
    const double C84279 = C84261 - C84262;
    const double C84276 = C84249 - C84250;
    const double C84273 = C84237 - C84238;
    const double C84270 = C84225 - C84226;
    const double C84538 = C84528 - C84529;
    const double C84779 = C84769 - C84770;
    const double C85105 = C85093 - C85094;
    const double C85102 = C85081 - C85082;
    const double C93469 = C93460 - C93461;
    const double C93818 = C93799 - C93800;
    const double C93813 = C93785 - C93786;
    const double C93808 = C93771 - C93772;
    const double C94837 = C94823 - C94824;
    const double C94833 = C94810 - C94811;
    const double C95639 = C95630 - C95631;
    const double C96626 = C96617 - C96618;
    const double C97421 = C97412 - C97413;
    const double C149950 = C149940 - C149941;
    const double C150699 = C150690 - C150691;
    const double C151304 = C151294 - C151295;
    const double C34973 = C34928 * C345;
    const double C34953 = C34928 * C344;
    const double C34941 = C34928 * C343;
    const double C35235 = C34928 * C3190;
    const double C35215 = C34928 * C1374;
    const double C35485 = C34928 * C3508;
    const double C35465 = C34928 * C1947;
    const double C35719 = C34928 * C1373;
    const double C35941 = C34928 * C1946;
    const double C36227 = C34928 * C4380;
    const double C44366 = C34928 * C3507;
    const double C44354 = C34928 * C1948;
    const double C45056 = C34928 * C4379;
    const double C45602 = C34928 * C5033;
    const double C46276 = C34928 * C5771;
    const double C46822 = C34928 * C6367;
    const double C74368 = C74323 * C345;
    const double C74348 = C74323 * C344;
    const double C74336 = C74323 * C343;
    const double C74630 = C74323 * C3190;
    const double C74610 = C74323 * C1374;
    const double C74880 = C74323 * C3508;
    const double C74860 = C74323 * C1947;
    const double C75114 = C74323 * C1373;
    const double C75336 = C74323 * C1946;
    const double C75622 = C74323 * C4380;
    const double C130924 = C74323 * C3507;
    const double C130912 = C74323 * C1948;
    const double C131614 = C74323 * C4379;
    const double C132160 = C74323 * C5033;
    const double C132834 = C74323 * C5771;
    const double C133380 = C74323 * C6367;
    const double C152184 = C152182 * be;
    const double C70573 = C70563 + C70540;
    const double C70572 = C70562 + C70536;
    const double C70569 = C70559 + C70524;
    const double C70567 = C70557 + C70516;
    const double C70565 = C70555 + C70508;
    const double C70855 = C70843 + C70816;
    const double C70853 = C70841 + C70808;
    const double C70851 = C70839 + C70800;
    const double C70850 = C70838 + C70796;
    const double C70848 = C70836 + C70788;
    const double C70846 = C70834 + C70780;
    const double C71133 = C71121 + C71094;
    const double C71131 = C71119 + C71086;
    const double C71129 = C71117 + C71078;
    const double C71128 = C71116 + C71074;
    const double C71126 = C71114 + C71066;
    const double C71124 = C71112 + C71058;
    const double C71343 = C71341 + C71334;
    const double C71553 = C71551 + C71544;
    const double C71853 = C71847 + C71832;
    const double C71851 = C71845 + C71824;
    const double C71849 = C71843 + C71816;
    const double C78493 = C78487 + C78472;
    const double C78491 = C78485 + C78464;
    const double C78490 = C78484 + C78460;
    const double C78876 = C78863 + C78832;
    const double C78874 = C78861 + C78824;
    const double C78873 = C78860 + C78818;
    const double C78871 = C78858 + C78810;
    const double C78868 = C78855 + C78797;
    const double C78866 = C78853 + C78788;
    const double C79185 = C79183 + C79176;
    const double C79909 = C79903 + C79886;
    const double C79907 = C79901 + C79877;
    const double C79905 = C79899 + C79868;
    const double C80701 = C80698 + C80688;
    const double C81695 = C81691 + C81680;
    const double C81693 = C81689 + C81672;
    const double C82487 = C82485 + C82476;
    const double C88231 = C88229 + C88222;
    const double C135747 = C135745 + C135735;
    const double C136407 = C136405 + C136398;
    const double C136942 = C136940 + C136932;
    const double C2971 = C2962 + C2969;
    const double C2970 = C2968 + C2961;
    const double C3839 = C3278 + C3826;
    const double C52113 = C3604 + C52100;
    const double C102729 = C102726 + C3604;
    const double C102728 = C3599 + C102725;
    const double C102727 = C102724 + C3599;
    const double C4080 = C3596 + C4067;
    const double C103311 = C103310 + C3596;
    const double C103701 = C4434 + C103699;
    const double C103700 = C103698 + C4434;
    const double C54900 = C52133 + C54887;
    const double C52140 = C52139 + C52132;
    const double C58742 = C19473 * C153648;
    const double C120709 = C19473 * C153648;
    const double C58731 = C19484 * C153648;
    const double C120708 = C19484 * C153648;
    const double C58743 = C19474 * C154002;
    const double C67341 = C19474 * C153638;
    const double C120710 = C19474 * C74316;
    const double C62281 = C58732 * C153648;
    const double C67340 = C58732 * C153638;
    const double C124196 = C58732 * C153648;
    const double C58744 = C58730 * C154002;
    const double C67338 = C58730 * C153638;
    const double C120707 = C58730 * C74316;
    const double C60517 = C59728 * C153648;
    const double C122453 = C59728 * C153648;
    const double C60521 = C60518 * C154002;
    const double C68516 = C60518 * C153638;
    const double C122454 = C60518 * C74316;
    const double C62291 = C62282 * C154002;
    const double C69703 = C62282 * C153638;
    const double C124197 = C62282 * C74316;
    const double C67342 = C67339 * C153638;
    const double C68519 = C68515 * C153638;
    const double C69712 = C69702 * C153638;
    const double C24306 = C24297 + C24304;
    const double C24305 = C24303 + C24296;
    const double C25142 = C24597 + C25129;
    const double C31248 = C24907 + C31235;
    const double C39374 = C39371 + C24907;
    const double C39373 = C24902 + C39370;
    const double C39372 = C39369 + C24902;
    const double C25383 = C24899 + C25370;
    const double C39956 = C39955 + C24899;
    const double C40346 = C25721 + C40344;
    const double C40345 = C40343 + C25721;
    const double C34051 = C31268 + C34038;
    const double C31275 = C31274 + C31267;
    const double C152148 = C152144 + C152123;
    const double C32672 = C32066 + C32668;
    const double C53529 = C52927 + C53525;
    const double C153095 = C153093 + C153078;
    const double C153094 = C153092 + C153075;
    const double C35265 = C35257 + C35241;
    const double C74660 = C74652 + C74636;
    const double C32069 = C32060 + C32042;
    const double C35515 = C35507 + C35491;
    const double C52930 = C52921 + C52903;
    const double C58439 = C58437 + C58433;
    const double C74910 = C74902 + C74886;
    const double C78494 = C78488 + C78476;
    const double C94851 = C94845 + C94830;
    const double C36245 = C36241 + C36233;
    const double C39078 = C39075 + C39069;
    const double C75640 = C75636 + C75628;
    const double C93476 = C93473 + C93467;
    const double C102433 = C102430 + C102424;
    const double C33435 = C33426 - C33427;
    const double C45612 = C45605 - C45606;
    const double C54292 = C54283 - C54284;
    const double C132170 = C132163 - C132164;
    const double C150700 = C150694 - C150695;
    const double C46286 = C46279 - C46280;
    const double C132844 = C132837 - C132838;
    const double C83683 = C83671 - C83655;
    const double C83680 = C83668 - C83643;
    const double C83677 = C83665 - C83631;
    const double C83674 = C83662 - C83619;
    const double C83989 = C83977 - C83961;
    const double C83986 = C83974 - C83949;
    const double C83983 = C83971 - C83937;
    const double C83980 = C83968 - C83925;
    const double C84291 = C84279 - C84263;
    const double C84288 = C84276 - C84251;
    const double C84285 = C84273 - C84239;
    const double C84282 = C84270 - C84227;
    const double C84541 = C84538 - C84530;
    const double C84782 = C84779 - C84771;
    const double C85111 = C85105 - C85095;
    const double C85108 = C85102 - C85083;
    const double C93472 = C93469 - C93462;
    const double C93827 = C93818 - C93801;
    const double C93824 = C93813 - C93787;
    const double C93821 = C93808 - C93773;
    const double C94844 = C94837 - C94825;
    const double C94841 = C94833 - C94812;
    const double C95642 = C95639 - C95632;
    const double C96629 = C96626 - C96619;
    const double C97424 = C97421 - C97414;
    const double C149954 = C149950 - C149942;
    const double C150702 = C150699 - C150692;
    const double C151308 = C151304 - C151296;
    const double C34990 = C34972 - C34973;
    const double C34985 = C34952 - C34953;
    const double C34982 = C34940 - C34941;
    const double C35248 = C35234 - C35235;
    const double C35243 = C35214 - C35215;
    const double C35498 = C35484 - C35485;
    const double C35493 = C35464 - C35465;
    const double C35728 = C35718 - C35719;
    const double C35950 = C35940 - C35941;
    const double C36236 = C36226 - C36227;
    const double C44382 = C44365 - C44366;
    const double C44379 = C44353 - C44354;
    const double C45065 = C45055 - C45056;
    const double C45611 = C45601 - C45602;
    const double C46285 = C46275 - C46276;
    const double C46831 = C46821 - C46822;
    const double C74385 = C74367 - C74368;
    const double C74380 = C74347 - C74348;
    const double C74377 = C74335 - C74336;
    const double C74643 = C74629 - C74630;
    const double C74638 = C74609 - C74610;
    const double C74893 = C74879 - C74880;
    const double C74888 = C74859 - C74860;
    const double C75123 = C75113 - C75114;
    const double C75345 = C75335 - C75336;
    const double C75631 = C75621 - C75622;
    const double C130940 = C130923 - C130924;
    const double C130937 = C130911 - C130912;
    const double C131623 = C131613 - C131614;
    const double C132169 = C132159 - C132160;
    const double C132843 = C132833 - C132834;
    const double C133389 = C133379 - C133380;
    const double C152185 = C152184 / C152045;
    const double C70577 = C70571 + C70572;
    const double C70578 = C70570 + C70569;
    const double C70576 = C70569 + C70570;
    const double C70575 = C70567 + C70568;
    const double C71330 = C70847 + C70848;
    const double C71329 = C70845 + C70846;
    const double C78837 = C71132 + C71131;
    const double C79478 = C71131 + C71132;
    const double C78819 = C71130 + C71129;
    const double C78802 = C71129 + C71130;
    const double C78820 = C71127 + C71128;
    const double C78793 = C71128 + C71127;
    const double C71540 = C71125 + C71126;
    const double C79477 = C71126 + C71125;
    const double C71539 = C71123 + C71124;
    const double C89104 = C71124 + C71123;
    const double C88813 = C71852 + C71851;
    const double C89491 = C71851 + C71852;
    const double C79892 = C71850 + C71849;
    const double C79873 = C71849 + C71850;
    const double C79891 = C78489 + C78490;
    const double C79882 = C78490 + C78489;
    const double C82472 = C78872 + C78873;
    const double C134564 = C78873 + C78872;
    const double C78880 = C78871 + C78870;
    const double C78879 = C78870 + C78871;
    const double C78878 = C78868 + C78869;
    const double C80694 = C79908 + C79907;
    const double C135740 = C80702 + C80701;
    const double C136927 = C82488 + C82487;
    const double C52126 = C52113 * C153638;
    const double C54904 = C54900 * C153638;
    const double C52141 = C52140 * C153638;
    const double C58747 = C58742 + C58743;
    const double C120712 = C120709 + C120710;
    const double C58748 = C58744 + C58731;
    const double C120711 = C120707 + C120708;
    const double C60524 = C60517 + C60521;
    const double C122455 = C122453 + C122454;
    const double C62294 = C62281 + C62291;
    const double C124198 = C124196 + C124197;
    const double C31261 = C31248 * C153638;
    const double C34055 = C34051 * C153638;
    const double C31276 = C31275 * C153638;
    const double C83651 = C152148 * C153;
    const double C83649 = C152148 * C152;
    const double C83647 = C152148 * C151;
    const double C83645 = C152148 * C150;
    const double C83627 = C152148 * C149;
    const double C83625 = C152148 * C148;
    const double C83615 = C152148 * C147;
    const double C83613 = C152148 * C146;
    const double C83957 = C152148 * C364;
    const double C83955 = C152148 * C363;
    const double C83945 = C152148 * C362;
    const double C83943 = C152148 * C361;
    const double C83941 = C152148 * C356;
    const double C83939 = C152148 * C355;
    const double C83929 = C152148 * C354;
    const double C83927 = C152148 * C353;
    const double C84259 = C152148 * C593;
    const double C84257 = C152148 * C592;
    const double C84247 = C152148 * C591;
    const double C84245 = C152148 * C590;
    const double C84243 = C152148 * C585;
    const double C84241 = C152148 * C584;
    const double C84231 = C152148 * C583;
    const double C84229 = C152148 * C582;
    const double C84526 = C152148 * C352;
    const double C84524 = C152148 * C351;
    const double C84767 = C152148 * C581;
    const double C84765 = C152148 * C580;
    const double C85091 = C152148 * C1116;
    const double C85089 = C152148 * C1115;
    const double C85079 = C152148 * C1114;
    const double C85077 = C152148 * C1113;
    const double C93458 = C152148 * C1956;
    const double C93456 = C152148 * C1955;
    const double C93797 = C152148 * C2308;
    const double C93795 = C152148 * C2307;
    const double C93791 = C152148 * C589;
    const double C93789 = C152148 * C588;
    const double C93769 = C152148 * C587;
    const double C93767 = C152148 * C586;
    const double C94821 = C152148 * C1525;
    const double C94819 = C152148 * C1524;
    const double C94808 = C152148 * C1112;
    const double C94806 = C152148 * C1111;
    const double C95628 = C152148 * C1527;
    const double C95626 = C152148 * C1526;
    const double C96615 = C152148 * C1958;
    const double C96613 = C152148 * C1957;
    const double C97410 = C152148 * C2310;
    const double C97408 = C152148 * C2309;
    const double C149938 = C152148 * C6380;
    const double C149936 = C152148 * C6379;
    const double C150688 = C152148 * C3512;
    const double C150686 = C152148 * C3511;
    const double C151292 = C152148 * C7745;
    const double C151290 = C152148 * C7744;
    const double C28428 =
        (((((0 - (C152043 * C152106) / C152045) * ae) / C152045 -
           (0 * be) / C152055 + (2 * C152107) / C152045) /
              C152085 -
          ((C152043 * C152142 + 0) * be) / C152045 + C152116 - C152130) /
             C152085 +
         ((C152043 * C152150 + 0) * ae) / C152045) /
            C152085 -
        ((C152043 * (C152150 / C152085 +
                     ((C152043 * C152148 + C153851) * ae) / C152045 + C152145) +
          C154116) *
         be) /
            C152045 +
        C152148 / C152085 + ((C152043 * C152145 + C153858) * ae) / C152045 +
        2 * (C152123 / C152085 - (0 * be) / C152045);
    const double C28430 =
        (C152150 / C152085 + ((C152043 * C152148 + C153851) * ae) / C152045 +
         C152145) /
            C152085 -
        ((C152043 *
              (C152148 / C152085 +
               ((C152043 * C152145 + C153858) * ae) / C152045 + 2 * C152193) +
          C154112) *
         be) /
            C152045 +
        2 * (C152145 / C152085 + ((C152043 * C152193 + C83602) * ae) / C152045);
    const double C28432 =
        (C152148 / C152085 + ((C152043 * C152145 + C153858) * ae) / C152045 +
         C152197) /
            C152085 -
        ((C152043 * (C152145 / C152085 +
                     ((C152043 * C152193 + C83602) * ae) / C152045) +
          C154102) *
         be) /
            C152045 +
        3 * (C152193 / C152085 + (0 * ae) / C152045);
    const double C34923 = C152150 / C152085 -
                          ((C152043 * C152148 + C153851) * be) / C152045 +
                          C152145;
    const double C34925 = C152148 / C152085 -
                          ((C152043 * C152145 + C153858) * be) / C152045 +
                          C152197;
    const double C74318 = C152150 / C152085 +
                          ((C152043 * C152148 + C153851) * ae) / C152045 +
                          C152145;
    const double C74320 = C152148 / C152085 +
                          ((C152043 * C152145 + C153858) * ae) / C152045 +
                          C152197;
    const double C32676 = C32672 * C153638;
    const double C53533 = C53529 * C153638;
    const double C29318 =
        (6 * (4 * C152774 + C152272 * C152889 + C152877 * ae) +
         C152272 * (5 * C152889 + C152272 * C153095 + C153081 * ae) +
         (5 * C152877 + C152272 * C153081) * ae) /
        C152045;
    const double C29444 =
        (4 * C152774 + C152272 * C152889 + C152877 * ae + C153095 * C152530) /
        C152045;
    const double C29854 =
        (C152482 * (5 * C152889 + C152272 * C153095 + C153081 * ae)) / C152045;
    const double C29319 =
        (6 * (4 * C152879 + ae * C152888 + be * C152889 + C152272 * C153083) +
         ae * (5 * C152888 + C152272 * C153094 + C153081 * be) +
         be * (5 * C152889 + C152272 * C153095 + C153081 * ae) +
         C152272 *
             (5 * C153083 + ae * C153094 + be * C153095 +
              C152272 *
                  (4 * C153073 + ae * C153088 + be * C153089 +
                   C152272 *
                       (3 * C153063 + ae * C153080 + be * C153082 +
                        C152272 *
                            (2 * C153053 + ae * C153064 + be * C153067 +
                             C152272 *
                                 (C152329 + ae * C153045 + be * C153048 +
                                  C152272 * (ae * C152440 + be * C152444 +
                                             C152272 *
                                                 (C152323 * C152324 +
                                                  C152275 * bs[9] *
                                                      std::pow(C152274, 9)) *
                                                 C152044))))))) /
        C152053;
    const double C29855 =
        (5 * (3 * C152996 + ae * C152482 * C152882 + be * C152482 * C152883 +
              C152272 * C153143) +
         ae * C152482 * C153094 + be * C152482 * C153095 +
         C152272 *
             (4 * C153143 + ae * C152482 * C153088 + be * C152482 * C153089 +
              C152272 *
                  (3 * C153141 + ae * C152482 * C153080 +
                   be * C152482 * C153082 +
                   C152272 *
                       (2 * C153139 + ae * C152482 * C153064 +
                        be * C152482 * C153067 +
                        C152272 * (C153126 + ae * C152482 * C153045 +
                                   be * C152482 * C153048 +
                                   C152272 * (ae * C152482 * C152440 +
                                              be * C152482 * C152444 +
                                              C152272 * C152482 *
                                                  (C152323 * C152324 +
                                                   C152275 * bs[9] *
                                                       std::pow(C152274, 9)) *
                                                  C152044)))))) /
        C152053;
    const double C29317 =
        (6 * (4 * C152773 + C152272 * C152888 + C152877 * be) +
         C152272 * (5 * C152888 + C152272 * C153094 + C153081 * be) +
         (5 * C152877 + C152272 * C153081) * be) /
        C152045;
    const double C29443 =
        (4 * C152773 + C152272 * C152888 + C152877 * be + C153094 * C152530) /
        C152045;
    const double C29853 =
        (C152482 * (5 * C152888 + C152272 * C153094 + C153081 * be)) / C152045;
    const double C33441 = C33435 - C33428;
    const double C45616 = C45612 - C45607;
    const double C54298 = C54292 - C54285;
    const double C132174 = C132170 - C132165;
    const double C150703 = C150700 - C150696;
    const double C46290 = C46286 - C46281;
    const double C132848 = C132844 - C132839;
    const double C83695 = C83683 + C83656;
    const double C83692 = C83680 + C83644;
    const double C83689 = C83677 + C83632;
    const double C83686 = C83674 + C83620;
    const double C84001 = C83989 + C83962;
    const double C83998 = C83986 + C83950;
    const double C83995 = C83983 + C83938;
    const double C83992 = C83980 + C83926;
    const double C84303 = C84291 + C84264;
    const double C84300 = C84288 + C84252;
    const double C84297 = C84285 + C84240;
    const double C84294 = C84282 + C84228;
    const double C84544 = C84541 + C84531;
    const double C84785 = C84782 + C84772;
    const double C85117 = C85111 + C85096;
    const double C85114 = C85108 + C85084;
    const double C93475 = C93472 + C93463;
    const double C93836 = C93827 + C93802;
    const double C93833 = C93824 + C93788;
    const double C93830 = C93821 + C93774;
    const double C94850 = C94844 + C94826;
    const double C94847 = C94841 + C94813;
    const double C95645 = C95642 + C95633;
    const double C96632 = C96629 + C96620;
    const double C97427 = C97424 + C97415;
    const double C149958 = C149954 + C149943;
    const double C150705 = C150702 + C150693;
    const double C151311 = C151308 + C151297;
    const double C35002 = C34990 - C34974;
    const double C34997 = C34985 - C34954;
    const double C34994 = C34982 - C34942;
    const double C35256 = C35248 - C35236;
    const double C35251 = C35243 - C35216;
    const double C35506 = C35498 - C35486;
    const double C35501 = C35493 - C35466;
    const double C35732 = C35728 - C35720;
    const double C35954 = C35950 - C35942;
    const double C36240 = C36236 - C36228;
    const double C44390 = C44382 - C44367;
    const double C44387 = C44379 - C44355;
    const double C45069 = C45065 - C45057;
    const double C45615 = C45611 - C45603;
    const double C46289 = C46285 - C46277;
    const double C46835 = C46831 - C46823;
    const double C74397 = C74385 - C74369;
    const double C74392 = C74380 - C74349;
    const double C74389 = C74377 - C74337;
    const double C74651 = C74643 - C74631;
    const double C74646 = C74638 - C74611;
    const double C74901 = C74893 - C74881;
    const double C74896 = C74888 - C74861;
    const double C75127 = C75123 - C75115;
    const double C75349 = C75345 - C75337;
    const double C75635 = C75631 - C75623;
    const double C130948 = C130940 - C130925;
    const double C130945 = C130937 - C130913;
    const double C131627 = C131623 - C131615;
    const double C132173 = C132169 - C132161;
    const double C132847 = C132843 - C132835;
    const double C133393 = C133389 - C133381;
    const double C152186 = C152169 - C152185;
    const double C78851 = C78837 * C153648;
    const double C143586 = C78837 * C153648;
    const double C78852 = C78819 * C74316;
    const double C134566 = C78819 * C153638;
    const double C143587 = C78819 * C154002;
    const double C78842 = C78802 * C153648;
    const double C143585 = C78802 * C153648;
    const double C80693 = C79891 * C153648;
    const double C145330 = C79891 * C153648;
    const double C82481 = C82472 * C74316;
    const double C136928 = C82472 * C153638;
    const double C147074 = C82472 * C154002;
    const double C134567 = C134564 * C153638;
    const double C82471 = C78879 * C153648;
    const double C134565 = C78879 * C153638;
    const double C147073 = C78879 * C153648;
    const double C78881 = C78878 * C74316;
    const double C134563 = C78878 * C153638;
    const double C143584 = C78878 * C154002;
    const double C80697 = C80694 * C74316;
    const double C135741 = C80694 * C153638;
    const double C145331 = C80694 * C154002;
    const double C135744 = C135740 * C153638;
    const double C136937 = C136927 * C153638;
    const double C34966 = C34923 * C151;
    const double C34964 = C34923 * C150;
    const double C34962 = C34923 * C149;
    const double C34960 = C34923 * C148;
    const double C34934 = C34923 * C147;
    const double C34932 = C34923 * C146;
    const double C35228 = C34923 * C362;
    const double C35226 = C34923 * C361;
    const double C35224 = C34923 * C356;
    const double C35222 = C34923 * C355;
    const double C35478 = C34923 * C591;
    const double C35476 = C34923 * C590;
    const double C35474 = C34923 * C585;
    const double C35472 = C34923 * C584;
    const double C35712 = C34923 * C354;
    const double C35710 = C34923 * C353;
    const double C35934 = C34923 * C583;
    const double C35932 = C34923 * C582;
    const double C36220 = C34923 * C1114;
    const double C36218 = C34923 * C1113;
    const double C44375 = C34923 * C589;
    const double C44373 = C34923 * C588;
    const double C44347 = C34923 * C587;
    const double C44345 = C34923 * C586;
    const double C45049 = C34923 * C1112;
    const double C45047 = C34923 * C1111;
    const double C45595 = C34923 * C1527;
    const double C45593 = C34923 * C1526;
    const double C46269 = C34923 * C1958;
    const double C46267 = C34923 * C1957;
    const double C46815 = C34923 * C2310;
    const double C46813 = C34923 * C2309;
    const double C34970 = C34925 * C352;
    const double C34968 = C34925 * C351;
    const double C34958 = C34925 * C354;
    const double C34956 = C34925 * C353;
    const double C34938 = C34925 * C356;
    const double C34936 = C34925 * C355;
    const double C35232 = C34925 * C1383;
    const double C35230 = C34925 * C1382;
    const double C35220 = C34925 * C362;
    const double C35218 = C34925 * C361;
    const double C35482 = C34925 * C1525;
    const double C35480 = C34925 * C1524;
    const double C35470 = C34925 * C1114;
    const double C35468 = C34925 * C1113;
    const double C35716 = C34925 * C364;
    const double C35714 = C34925 * C363;
    const double C35938 = C34925 * C1116;
    const double C35936 = C34925 * C1115;
    const double C36224 = C34925 * C1956;
    const double C36222 = C34925 * C1955;
    const double C44371 = C34925 * C1527;
    const double C44369 = C34925 * C1526;
    const double C44351 = C34925 * C1112;
    const double C44349 = C34925 * C1111;
    const double C45053 = C34925 * C1958;
    const double C45051 = C34925 * C1957;
    const double C45599 = C34925 * C3512;
    const double C45597 = C34925 * C3511;
    const double C46273 = C34925 * C4384;
    const double C46271 = C34925 * C4383;
    const double C46819 = C34925 * C6380;
    const double C46817 = C34925 * C6379;
    const double C74361 = C74318 * C151;
    const double C74359 = C74318 * C150;
    const double C74357 = C74318 * C149;
    const double C74355 = C74318 * C148;
    const double C74329 = C74318 * C147;
    const double C74327 = C74318 * C146;
    const double C74623 = C74318 * C362;
    const double C74621 = C74318 * C361;
    const double C74619 = C74318 * C356;
    const double C74617 = C74318 * C355;
    const double C74873 = C74318 * C591;
    const double C74871 = C74318 * C590;
    const double C74869 = C74318 * C585;
    const double C74867 = C74318 * C584;
    const double C75107 = C74318 * C354;
    const double C75105 = C74318 * C353;
    const double C75329 = C74318 * C583;
    const double C75327 = C74318 * C582;
    const double C75615 = C74318 * C1114;
    const double C75613 = C74318 * C1113;
    const double C130933 = C74318 * C589;
    const double C130931 = C74318 * C588;
    const double C130905 = C74318 * C587;
    const double C130903 = C74318 * C586;
    const double C131607 = C74318 * C1112;
    const double C131605 = C74318 * C1111;
    const double C132153 = C74318 * C1527;
    const double C132151 = C74318 * C1526;
    const double C132827 = C74318 * C1958;
    const double C132825 = C74318 * C1957;
    const double C133373 = C74318 * C2310;
    const double C133371 = C74318 * C2309;
    const double C74365 = C74320 * C352;
    const double C74363 = C74320 * C351;
    const double C74353 = C74320 * C354;
    const double C74351 = C74320 * C353;
    const double C74333 = C74320 * C356;
    const double C74331 = C74320 * C355;
    const double C74627 = C74320 * C1383;
    const double C74625 = C74320 * C1382;
    const double C74615 = C74320 * C362;
    const double C74613 = C74320 * C361;
    const double C74877 = C74320 * C1525;
    const double C74875 = C74320 * C1524;
    const double C74865 = C74320 * C1114;
    const double C74863 = C74320 * C1113;
    const double C75111 = C74320 * C364;
    const double C75109 = C74320 * C363;
    const double C75333 = C74320 * C1116;
    const double C75331 = C74320 * C1115;
    const double C75619 = C74320 * C1956;
    const double C75617 = C74320 * C1955;
    const double C130929 = C74320 * C1527;
    const double C130927 = C74320 * C1526;
    const double C130909 = C74320 * C1112;
    const double C130907 = C74320 * C1111;
    const double C131611 = C74320 * C1958;
    const double C131609 = C74320 * C1957;
    const double C132157 = C74320 * C3512;
    const double C132155 = C74320 * C3511;
    const double C132831 = C74320 * C4384;
    const double C132829 = C74320 * C4383;
    const double C133377 = C74320 * C6380;
    const double C133375 = C74320 * C6379;
    const double C33447 = C33441 + C33429;
    const double C45620 = C45616 + C45608;
    const double C54304 = C54298 + C54286;
    const double C132178 = C132174 + C132166;
    const double C150706 = C150703 + C150697;
    const double C46294 = C46290 + C46282;
    const double C132852 = C132848 + C132840;
    const double C35014 = C35002 + C34975;
    const double C35009 = C34997 + C34955;
    const double C35006 = C34994 + C34943;
    const double C35264 = C35256 + C35237;
    const double C35259 = C35251 + C35217;
    const double C35514 = C35506 + C35487;
    const double C35509 = C35501 + C35467;
    const double C35736 = C35732 + C35721;
    const double C35958 = C35954 + C35943;
    const double C36244 = C36240 + C36229;
    const double C44398 = C44390 + C44368;
    const double C44395 = C44387 + C44356;
    const double C45073 = C45069 + C45058;
    const double C45619 = C45615 + C45604;
    const double C46293 = C46289 + C46278;
    const double C46839 = C46835 + C46824;
    const double C74409 = C74397 + C74370;
    const double C74404 = C74392 + C74350;
    const double C74401 = C74389 + C74338;
    const double C74659 = C74651 + C74632;
    const double C74654 = C74646 + C74612;
    const double C74909 = C74901 + C74882;
    const double C74904 = C74896 + C74862;
    const double C75131 = C75127 + C75116;
    const double C75353 = C75349 + C75338;
    const double C75639 = C75635 + C75624;
    const double C130956 = C130948 + C130926;
    const double C130953 = C130945 + C130914;
    const double C131631 = C131627 + C131616;
    const double C132177 = C132173 + C132162;
    const double C132851 = C132847 + C132836;
    const double C133397 = C133393 + C133382;
    const double C152187 = C152186 - C152160;
    const double C78865 = C78851 + C78852;
    const double C143589 = C143586 + C143587;
    const double C82484 = C82471 + C82481;
    const double C147075 = C147073 + C147074;
    const double C78882 = C78881 + C78842;
    const double C143588 = C143584 + C143585;
    const double C80700 = C80693 + C80697;
    const double C145332 = C145330 + C145331;
    const double C83650 = C152187 * C140;
    const double C83646 = C152187 * C139;
    const double C83626 = C152187 * C138;
    const double C83614 = C152187 * C137;
    const double C83956 = C152187 * C344;
    const double C83944 = C152187 * C343;
    const double C83940 = C152187 * C340;
    const double C83928 = C152187 * C339;
    const double C84258 = C152187 * C573;
    const double C84246 = C152187 * C572;
    const double C84242 = C152187 * C569;
    const double C84230 = C152187 * C568;
    const double C84525 = C152187 * C338;
    const double C84766 = C152187 * C567;
    const double C85090 = C152187 * C1107;
    const double C85078 = C152187 * C1106;
    const double C93457 = C152187 * C1947;
    const double C93796 = C152187 * C2299;
    const double C93790 = C152187 * C571;
    const double C93768 = C152187 * C570;
    const double C94820 = C152187 * C1516;
    const double C94807 = C152187 * C1105;
    const double C95627 = C152187 * C1517;
    const double C96614 = C152187 * C1948;
    const double C97409 = C152187 * C2300;
    const double C149937 = C152187 * C6368;
    const double C150687 = C152187 * C3507;
    const double C151291 = C152187 * C7740;
    const double C28429 =
        (((ae * -2 * C152106) / C152153 -
          (((C152043 * C152163) / C152053 + 2 * C152142) * be) / C152045 -
          C152164 / C152053) /
             C152085 +
         ((C152043 * C152183 + 2 * C152150) * ae) / C152045) /
            C152085 -
        ((C152043 *
              (C152183 / C152085 +
               ((C152043 * C152187 + 2 * C152148) * ae) / C152045 + C152180) +
          2 * (C152150 / C152085 +
               ((C152043 * C152148 + C153851) * ae) / C152045 + C152145)) *
         be) /
            C152045 +
        C152187 / C152085 + ((C152043 * C152180 + 2 * C152145) * ae) / C152045 +
        (-2 * C152064) / (C152045 * 4 * C152053);
    const double C28431 =
        (C152183 / C152085 +
         ((C152043 * C152187 + 2 * C152148) * ae) / C152045 + C152180) /
            C152085 -
        ((C152043 * (C152187 / C152085 +
                     ((C152043 * C152180 + 2 * C152145) * ae) / C152045 +
                     (-2 * C152064) / C152198) +
          2 * (C152148 / C152085 +
               ((C152043 * C152145 + C153858) * ae) / C152045 + C152197)) *
         be) /
            C152045 +
        2 * (C152180 / C152085 +
             ((C152197 - C152069 / C152198) * ae) / C152045);
    const double C28433 =
        (C152187 / C152085 +
         ((C152043 * C152180 + 2 * C152145) * ae) / C152045 +
         (-2 * C152064) / C152198) /
            C152085 -
        ((C152043 * (C152180 / C152085 +
                     ((C152197 - C152069 / C152198) * ae) / C152045) +
          2 * (C152145 / C152085 +
               ((C152043 * C152193 + C83602) * ae) / C152045)) *
         be) /
            C152045 +
        (-3 * C152064) / (C152045 * 4 * C152153);
    const double C34924 = C152183 / C152085 -
                          ((C152043 * C152187 + 2 * C152148) * be) / C152045 +
                          C152180;
    const double C34926 = C152187 / C152085 -
                          ((C152043 * C152180 + 2 * C152145) * be) / C152045 +
                          (-2 * C152064) / C152198;
    const double C74319 = C152183 / C152085 +
                          ((C152043 * C152187 + 2 * C152148) * ae) / C152045 +
                          C152180;
    const double C74321 = C152187 / C152085 +
                          ((C152043 * C152180 + 2 * C152145) * ae) / C152045 +
                          (-2 * C152064) / C152198;
    const double C83670 = C83649 - C83650;
    const double C83669 = C83645 - C83646;
    const double C83664 = C83625 - C83626;
    const double C83661 = C83613 - C83614;
    const double C83976 = C83955 - C83956;
    const double C83973 = C83943 - C83944;
    const double C83972 = C83939 - C83940;
    const double C83969 = C83927 - C83928;
    const double C84278 = C84257 - C84258;
    const double C84275 = C84245 - C84246;
    const double C84274 = C84241 - C84242;
    const double C84271 = C84229 - C84230;
    const double C84537 = C84524 - C84525;
    const double C84778 = C84765 - C84766;
    const double C85104 = C85089 - C85090;
    const double C85101 = C85077 - C85078;
    const double C93468 = C93456 - C93457;
    const double C93817 = C93795 - C93796;
    const double C93814 = C93789 - C93790;
    const double C93807 = C93767 - C93768;
    const double C94836 = C94819 - C94820;
    const double C94832 = C94806 - C94807;
    const double C95638 = C95626 - C95627;
    const double C96625 = C96613 - C96614;
    const double C97420 = C97408 - C97409;
    const double C149949 = C149936 - C149937;
    const double C150698 = C150686 - C150687;
    const double C151303 = C151290 - C151291;
    const double C34965 = C34924 * C139;
    const double C34961 = C34924 * C138;
    const double C34933 = C34924 * C137;
    const double C35227 = C34924 * C343;
    const double C35223 = C34924 * C340;
    const double C35477 = C34924 * C572;
    const double C35473 = C34924 * C569;
    const double C35711 = C34924 * C339;
    const double C35933 = C34924 * C568;
    const double C36219 = C34924 * C1106;
    const double C44374 = C34924 * C571;
    const double C44346 = C34924 * C570;
    const double C45048 = C34924 * C1105;
    const double C45594 = C34924 * C1517;
    const double C46268 = C34924 * C1948;
    const double C46814 = C34924 * C2300;
    const double C34969 = C34926 * C338;
    const double C34957 = C34926 * C339;
    const double C34937 = C34926 * C340;
    const double C35231 = C34926 * C1374;
    const double C35219 = C34926 * C343;
    const double C35481 = C34926 * C1516;
    const double C35469 = C34926 * C1106;
    const double C35715 = C34926 * C344;
    const double C35937 = C34926 * C1107;
    const double C36223 = C34926 * C1947;
    const double C44370 = C34926 * C1517;
    const double C44350 = C34926 * C1105;
    const double C45052 = C34926 * C1948;
    const double C45598 = C34926 * C3507;
    const double C46272 = C34926 * C4379;
    const double C46818 = C34926 * C6368;
    const double C74360 = C74319 * C139;
    const double C74356 = C74319 * C138;
    const double C74328 = C74319 * C137;
    const double C74622 = C74319 * C343;
    const double C74618 = C74319 * C340;
    const double C74872 = C74319 * C572;
    const double C74868 = C74319 * C569;
    const double C75106 = C74319 * C339;
    const double C75328 = C74319 * C568;
    const double C75614 = C74319 * C1106;
    const double C130932 = C74319 * C571;
    const double C130904 = C74319 * C570;
    const double C131606 = C74319 * C1105;
    const double C132152 = C74319 * C1517;
    const double C132826 = C74319 * C1948;
    const double C133372 = C74319 * C2300;
    const double C74364 = C74321 * C338;
    const double C74352 = C74321 * C339;
    const double C74332 = C74321 * C340;
    const double C74626 = C74321 * C1374;
    const double C74614 = C74321 * C343;
    const double C74876 = C74321 * C1516;
    const double C74864 = C74321 * C1106;
    const double C75110 = C74321 * C344;
    const double C75332 = C74321 * C1107;
    const double C75618 = C74321 * C1947;
    const double C130928 = C74321 * C1517;
    const double C130908 = C74321 * C1105;
    const double C131610 = C74321 * C1948;
    const double C132156 = C74321 * C3507;
    const double C132830 = C74321 * C4379;
    const double C133376 = C74321 * C6368;
    const double C83682 = C83670 - C83651;
    const double C83681 = C83669 - C83647;
    const double C83676 = C83664 - C83627;
    const double C83673 = C83661 - C83615;
    const double C83988 = C83976 - C83957;
    const double C83985 = C83973 - C83945;
    const double C83984 = C83972 - C83941;
    const double C83981 = C83969 - C83929;
    const double C84290 = C84278 - C84259;
    const double C84287 = C84275 - C84247;
    const double C84286 = C84274 - C84243;
    const double C84283 = C84271 - C84231;
    const double C84540 = C84537 - C84526;
    const double C84781 = C84778 - C84767;
    const double C85110 = C85104 - C85091;
    const double C85107 = C85101 - C85079;
    const double C93471 = C93468 - C93458;
    const double C93826 = C93817 - C93797;
    const double C93825 = C93814 - C93791;
    const double C93820 = C93807 - C93769;
    const double C94843 = C94836 - C94821;
    const double C94840 = C94832 - C94808;
    const double C95641 = C95638 - C95628;
    const double C96628 = C96625 - C96615;
    const double C97423 = C97420 - C97410;
    const double C149953 = C149949 - C149938;
    const double C150701 = C150698 - C150688;
    const double C151307 = C151303 - C151292;
    const double C34988 = C34964 - C34965;
    const double C34987 = C34960 - C34961;
    const double C34980 = C34932 - C34933;
    const double C35246 = C35226 - C35227;
    const double C35245 = C35222 - C35223;
    const double C35496 = C35476 - C35477;
    const double C35495 = C35472 - C35473;
    const double C35726 = C35710 - C35711;
    const double C35948 = C35932 - C35933;
    const double C36234 = C36218 - C36219;
    const double C44384 = C44373 - C44374;
    const double C44377 = C44345 - C44346;
    const double C45063 = C45047 - C45048;
    const double C45609 = C45593 - C45594;
    const double C46283 = C46267 - C46268;
    const double C46829 = C46813 - C46814;
    const double C34989 = C34968 - C34969;
    const double C34986 = C34956 - C34957;
    const double C34981 = C34936 - C34937;
    const double C35247 = C35230 - C35231;
    const double C35244 = C35218 - C35219;
    const double C35497 = C35480 - C35481;
    const double C35494 = C35468 - C35469;
    const double C35727 = C35714 - C35715;
    const double C35949 = C35936 - C35937;
    const double C36235 = C36222 - C36223;
    const double C44383 = C44369 - C44370;
    const double C44378 = C44349 - C44350;
    const double C45064 = C45051 - C45052;
    const double C45610 = C45597 - C45598;
    const double C46284 = C46271 - C46272;
    const double C46830 = C46817 - C46818;
    const double C74383 = C74359 - C74360;
    const double C74382 = C74355 - C74356;
    const double C74375 = C74327 - C74328;
    const double C74641 = C74621 - C74622;
    const double C74640 = C74617 - C74618;
    const double C74891 = C74871 - C74872;
    const double C74890 = C74867 - C74868;
    const double C75121 = C75105 - C75106;
    const double C75343 = C75327 - C75328;
    const double C75629 = C75613 - C75614;
    const double C130942 = C130931 - C130932;
    const double C130935 = C130903 - C130904;
    const double C131621 = C131605 - C131606;
    const double C132167 = C132151 - C132152;
    const double C132841 = C132825 - C132826;
    const double C133387 = C133371 - C133372;
    const double C74384 = C74363 - C74364;
    const double C74381 = C74351 - C74352;
    const double C74376 = C74331 - C74332;
    const double C74642 = C74625 - C74626;
    const double C74639 = C74613 - C74614;
    const double C74892 = C74875 - C74876;
    const double C74889 = C74863 - C74864;
    const double C75122 = C75109 - C75110;
    const double C75344 = C75331 - C75332;
    const double C75630 = C75617 - C75618;
    const double C130941 = C130927 - C130928;
    const double C130936 = C130907 - C130908;
    const double C131622 = C131609 - C131610;
    const double C132168 = C132155 - C132156;
    const double C132842 = C132829 - C132830;
    const double C133388 = C133375 - C133376;
    const double C83694 = C83682 + C83652;
    const double C83693 = C83681 + C83648;
    const double C83688 = C83676 + C83628;
    const double C83685 = C83673 + C83616;
    const double C84000 = C83988 + C83958;
    const double C83997 = C83985 + C83946;
    const double C83996 = C83984 + C83942;
    const double C83993 = C83981 + C83930;
    const double C84302 = C84290 + C84260;
    const double C84299 = C84287 + C84248;
    const double C84298 = C84286 + C84244;
    const double C84295 = C84283 + C84232;
    const double C84543 = C84540 + C84527;
    const double C84784 = C84781 + C84768;
    const double C85116 = C85110 + C85092;
    const double C85113 = C85107 + C85080;
    const double C93474 = C93471 + C93459;
    const double C93835 = C93826 + C93798;
    const double C93834 = C93825 + C93792;
    const double C93829 = C93820 + C93770;
    const double C94849 = C94843 + C94822;
    const double C94846 = C94840 + C94809;
    const double C95644 = C95641 + C95629;
    const double C96631 = C96628 + C96616;
    const double C97426 = C97423 + C97411;
    const double C149957 = C149953 + C149939;
    const double C150704 = C150701 + C150689;
    const double C151310 = C151307 + C151293;
    const double C35000 = C34988 - C34966;
    const double C34999 = C34987 - C34962;
    const double C34992 = C34980 - C34934;
    const double C35254 = C35246 - C35228;
    const double C35253 = C35245 - C35224;
    const double C35504 = C35496 - C35478;
    const double C35503 = C35495 - C35474;
    const double C35730 = C35726 - C35712;
    const double C35952 = C35948 - C35934;
    const double C36238 = C36234 - C36220;
    const double C44392 = C44384 - C44375;
    const double C44385 = C44377 - C44347;
    const double C45067 = C45063 - C45049;
    const double C45613 = C45609 - C45595;
    const double C46287 = C46283 - C46269;
    const double C46833 = C46829 - C46815;
    const double C35001 = C34989 - C34970;
    const double C34998 = C34986 - C34958;
    const double C34993 = C34981 - C34938;
    const double C35255 = C35247 - C35232;
    const double C35252 = C35244 - C35220;
    const double C35505 = C35497 - C35482;
    const double C35502 = C35494 - C35470;
    const double C35731 = C35727 - C35716;
    const double C35953 = C35949 - C35938;
    const double C36239 = C36235 - C36224;
    const double C44391 = C44383 - C44371;
    const double C44386 = C44378 - C44351;
    const double C45068 = C45064 - C45053;
    const double C45614 = C45610 - C45599;
    const double C46288 = C46284 - C46273;
    const double C46834 = C46830 - C46819;
    const double C74395 = C74383 - C74361;
    const double C74394 = C74382 - C74357;
    const double C74387 = C74375 - C74329;
    const double C74649 = C74641 - C74623;
    const double C74648 = C74640 - C74619;
    const double C74899 = C74891 - C74873;
    const double C74898 = C74890 - C74869;
    const double C75125 = C75121 - C75107;
    const double C75347 = C75343 - C75329;
    const double C75633 = C75629 - C75615;
    const double C130950 = C130942 - C130933;
    const double C130943 = C130935 - C130905;
    const double C131625 = C131621 - C131607;
    const double C132171 = C132167 - C132153;
    const double C132845 = C132841 - C132827;
    const double C133391 = C133387 - C133373;
    const double C74396 = C74384 - C74365;
    const double C74393 = C74381 - C74353;
    const double C74388 = C74376 - C74333;
    const double C74650 = C74642 - C74627;
    const double C74647 = C74639 - C74615;
    const double C74900 = C74892 - C74877;
    const double C74897 = C74889 - C74865;
    const double C75126 = C75122 - C75111;
    const double C75348 = C75344 - C75333;
    const double C75634 = C75630 - C75619;
    const double C130949 = C130941 - C130929;
    const double C130944 = C130936 - C130909;
    const double C131626 = C131622 - C131611;
    const double C132172 = C132168 - C132157;
    const double C132846 = C132842 - C132831;
    const double C133392 = C133388 - C133377;
    const double C83698 = C83692 + C83693;
    const double C83697 = C83688 + C83689;
    const double C84523 = C83992 + C83993;
    const double C93794 = C84299 + C84300;
    const double C93780 = C84300 + C84299;
    const double C93793 = C84297 + C84298;
    const double C93779 = C84298 + C84297;
    const double C84764 = C84294 + C84295;
    const double C94418 = C84295 + C84294;
    const double C94831 = C85114 + C85113;
    const double C94818 = C85113 + C85114;
    const double C148624 = C93834 + C93833;
    const double C149948 = C95645 + C95644;
    const double C151289 = C97427 + C97426;
    const double C35012 = C35000 + C34967;
    const double C35011 = C34999 + C34963;
    const double C35004 = C34992 + C34935;
    const double C35262 = C35254 + C35229;
    const double C35261 = C35253 + C35225;
    const double C35512 = C35504 + C35479;
    const double C35511 = C35503 + C35475;
    const double C35734 = C35730 + C35713;
    const double C35956 = C35952 + C35935;
    const double C36242 = C36238 + C36221;
    const double C44400 = C44392 + C44376;
    const double C44393 = C44385 + C44348;
    const double C45071 = C45067 + C45050;
    const double C45617 = C45613 + C45596;
    const double C46291 = C46287 + C46270;
    const double C46837 = C46833 + C46816;
    const double C35013 = C35001 + C34971;
    const double C35010 = C34998 + C34959;
    const double C35005 = C34993 + C34939;
    const double C35263 = C35255 + C35233;
    const double C35260 = C35252 + C35221;
    const double C35513 = C35505 + C35483;
    const double C35510 = C35502 + C35471;
    const double C35735 = C35731 + C35717;
    const double C35957 = C35953 + C35939;
    const double C36243 = C36239 + C36225;
    const double C44399 = C44391 + C44372;
    const double C44394 = C44386 + C44352;
    const double C45072 = C45068 + C45054;
    const double C45618 = C45614 + C45600;
    const double C46292 = C46288 + C46274;
    const double C46838 = C46834 + C46820;
    const double C74407 = C74395 + C74362;
    const double C74406 = C74394 + C74358;
    const double C74399 = C74387 + C74330;
    const double C74657 = C74649 + C74624;
    const double C74656 = C74648 + C74620;
    const double C74907 = C74899 + C74874;
    const double C74906 = C74898 + C74870;
    const double C75129 = C75125 + C75108;
    const double C75351 = C75347 + C75330;
    const double C75637 = C75633 + C75616;
    const double C130958 = C130950 + C130934;
    const double C130951 = C130943 + C130906;
    const double C131629 = C131625 + C131608;
    const double C132175 = C132171 + C132154;
    const double C132849 = C132845 + C132828;
    const double C133395 = C133391 + C133374;
    const double C74408 = C74396 + C74366;
    const double C74405 = C74393 + C74354;
    const double C74400 = C74388 + C74334;
    const double C74658 = C74650 + C74628;
    const double C74655 = C74647 + C74616;
    const double C74908 = C74900 + C74878;
    const double C74905 = C74897 + C74866;
    const double C75130 = C75126 + C75112;
    const double C75352 = C75348 + C75334;
    const double C75638 = C75634 + C75620;
    const double C130957 = C130949 + C130930;
    const double C130952 = C130944 + C130910;
    const double C131630 = C131626 + C131612;
    const double C132176 = C132172 + C132158;
    const double C132850 = C132846 + C132832;
    const double C133396 = C133392 + C133378;
    const double C83700 = C83691 + C83698;
    const double C83699 = C83697 + C83690;
    const double C84536 = C83991 + C84523;
    const double C93816 = C93794 + C84301;
    const double C93811 = C84301 + C93780;
    const double C93815 = C84296 + C93793;
    const double C93810 = C93779 + C84296;
    const double C84777 = C84293 + C84764;
    const double C94419 = C94418 + C84293;
    const double C94839 = C85115 + C94831;
    const double C94835 = C94818 + C85115;
    const double C148626 = C148624 + C93832;
    const double C149952 = C95646 + C149948;
    const double C151302 = C97428 + C151289;
    const double C148625 = C93811 * C153638;
    const double C148627 = C148626 * C153638;
    const double C149956 = C149952 * C153638;
    const double C151306 = C151302 * C153638;
    d2ee[0] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C153643 +
            (C83685 + C83686 + C83687) * C153651 + C83699 * C83605) *
               C153810 * C153711 * C154021 -
           (C84536 * C83605 + (C83994 + C83995 + C83996) * C153651 +
            (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
             C83602 * C1390 + C152145 * C359 - C152180 * C342 - C152145 * C360 +
             C153858 * C378 + C152148 * C357 - C152187 * C341 - C152148 * C358 +
             C153851 * C377) *
                C153643) *
               C153810 * C153711 * C153747) *
              C154090 +
          (((C83996 + C83995 + C83994) * C153643 +
            (C83993 + C83992 + C83991) * C153651 +
            (C84543 + C84544 + C84545) * C83605) *
               C153810 * C153711 * C153747 -
           (C83700 * C83605 + (C83690 + C83689 + C83688) * C153651 +
            (C83687 + C83686 + C83685) * C153643) *
               C153810 * C153711 * C154021) *
              C154091 +
          ((C83699 * C153643 + (C83693 + C83692 + C83691) * C153651 +
            (C83694 + C83695 + C83696) * C83605) *
               C153810 * C153711 * C154021 -
           ((C152193 * C1376 - C83611 * C1371 - C152193 * C1377 +
             C83602 * C1386 + C152145 * C367 - C152180 * C346 - C152145 * C368 +
             C153858 * C382 + C152148 * C349 - C152187 * C337 - C152148 * C350 +
             C153851 * C373) *
                C83605 +
            (C84545 + C84544 + C84543) * C153651 + C84536 * C153643) *
               C153810 * C153711 * C153747) *
              C796)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
                     C153851 * C160 + C152145 * C357 - C152180 * C341 -
                     C152145 * C358 + C153858 * C377 + C152193 * C359 -
                     C83611 * C342 - C152193 * C360 + C83602 * C378) *
                        C153643 +
                    (C83685 + C83686 + C83687) * C153651 + C83699 * C83605) *
                       C153810 * C154022 -
                   (C84777 * C83605 + (C84296 + C84297 + C84298) * C153651 +
                    (C152193 * C1957 - C83611 * C1948 - C152193 * C1958 +
                     C83602 * C1963 + C152145 * C1111 - C152180 * C1105 -
                     C152145 * C1112 + C153858 * C1123 + C152148 * C586 -
                     C152187 * C570 - C152148 * C587 + C153851 * C606) *
                        C153643) *
                       C153810 * C153775) *
                      C154021 +
                  (((C152148 * C1111 - C152187 * C1105 - C152148 * C1112 +
                     C153851 * C1123 + C152145 * C1957 - C152180 * C1948 -
                     C152145 * C1958 + C153858 * C1963 + C152193 * C4383 -
                     C83611 * C4379 - C152193 * C4384 + C83602 * C4391) *
                        C153643 +
                    (C85113 + C85114 + C85115) * C153651 +
                    (C85116 + C85117 + C85118) * C83605) *
                       C153810 * C153775 -
                   (C84536 * C83605 + (C83994 + C83995 + C83996) * C153651 +
                    (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
                     C83602 * C1390 + C152145 * C359 - C152180 * C342 -
                     C152145 * C360 + C153858 * C378 + C152148 * C357 -
                     C152187 * C341 - C152148 * C358 + C153851 * C377) *
                        C153643) *
                       C153810 * C154022) *
                      C153747) *
                     C335 +
                 ((((C84298 + C84297 + C84296) * C153643 +
                    (C84295 + C84294 + C84293) * C153651 +
                    (C84784 + C84785 + C84786) * C83605) *
                       C153810 * C153775 -
                   (C83700 * C83605 + (C83690 + C83689 + C83688) * C153651 +
                    (C83687 + C83686 + C83685) * C153643) *
                       C153810 * C154022) *
                      C154021 +
                  (((C83996 + C83995 + C83994) * C153643 +
                    (C83993 + C83992 + C83991) * C153651 +
                    (C84543 + C84544 + C84545) * C83605) *
                       C153810 * C154022 -
                   ((C152193 * C4389 - C83611 * C4382 - C152193 * C4390 +
                     C83602 * C4394 + C152145 * C1951 - C152180 * C1945 -
                     C152145 * C1952 + C153858 * C1960 + C152148 * C1117 -
                     C152187 * C1108 - C152148 * C1118 + C153851 * C1126) *
                        C83605 +
                    (C85118 + C85117 + C85116) * C153651 +
                    (C85115 + C85114 + C85113) * C153643) *
                       C153810 * C153775) *
                      C153747) *
                     C153682)) /
               (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C153643 +
            (C83685 + C83686 + C83687) * C153651 + C83699 * C83605) *
               C153810 * C153711 * C332 -
           ((C83991 + C83992 + C83993) * C83605 +
            (C83994 + C83995 + C83996) * C153651 +
            (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
             C83602 * C1390 + C152145 * C359 - C152180 * C342 - C152145 * C360 +
             C153858 * C378 + C152148 * C357 - C152187 * C341 - C152148 * C358 +
             C153851 * C377) *
                C153643) *
               C153810 * C153711 * C333 +
           ((C152148 * C359 - C152187 * C342 - C152148 * C360 + C153851 * C378 +
             C152145 * C1384 - C152180 * C1375 - C152145 * C1385 +
             C153858 * C1390 + C152193 * C3193 - C83611 * C3189 -
             C152193 * C3194 + C83602 * C3201) *
                C153643 +
            (C83997 + C83998 + C83999) * C153651 +
            (C84000 + C84001 + C84002) * C83605) *
               C153810 * C153711 * C334) *
              C335 +
          (((C83996 + C83995 + C83994) * C153643 +
            (C83993 + C83992 + C83991) * C153651 +
            (C152148 * C351 - C152187 * C338 - C152148 * C352 + C153851 * C374 +
             C152145 * C365 - C152180 * C345 - C152145 * C366 + C153858 * C381 +
             C152193 * C1378 - C83611 * C1372 - C152193 * C1379 +
             C83602 * C1387) *
                C83605) *
               C153810 * C153711 * C333 -
           (C83700 * C83605 + (C83690 + C83689 + C83688) * C153651 +
            (C83687 + C83686 + C83685) * C153643) *
               C153810 * C153711 * C332 -
           ((C152193 * C3199 - C83611 * C3192 - C152193 * C3200 +
             C83602 * C3204 + C152145 * C1378 - C152180 * C1372 -
             C152145 * C1379 + C153858 * C1387 + C152148 * C365 -
             C152187 * C345 - C152148 * C366 + C153851 * C381) *
                C83605 +
            (C84002 + C84001 + C84000) * C153651 +
            (C83999 + C83998 + C83997) * C153643) *
               C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
            C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
            C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
               C153643 +
           (C83685 + C83686 + C83687) * C153651 + C83699 * C83605) *
              C153810 * C153711 * C153695 * C130 -
          (C83700 * C83605 + (C83690 + C83689 + C83688) * C153651 +
           (C83687 + C83686 + C83685) * C153643) *
              C153810 * C153711 * C153695 * C131 +
          (C83699 * C153643 + (C83693 + C83692 + C83691) * C153651 +
           (C83694 + C83695 + C83696) * C83605) *
              C153810 * C153711 * C153695 * C132 -
          ((C152193 * C371 - C83611 * C348 - C152193 * C372 + C83602 * C384 +
            C152145 * C369 - C152180 * C347 - C152145 * C370 + C153858 * C383 +
            C152148 * C154 - C152187 * C141 - C152148 * C155 + C153851 * C165) *
               C83605 +
           (C83696 + C83695 + C83694) * C153651 + C83700 * C153643) *
              C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C153643 +
            (C83685 + C83686 + C83687) * C153651 + C83699 * C83605) *
               C153810 * C563 -
           ((C84293 + C84294 + C84295) * C83605 +
            (C84296 + C84297 + C84298) * C153651 +
            (C152193 * C1957 - C83611 * C1948 - C152193 * C1958 +
             C83602 * C1963 + C152145 * C1111 - C152180 * C1105 -
             C152145 * C1112 + C153858 * C1123 + C152148 * C586 -
             C152187 * C570 - C152148 * C587 + C153851 * C606) *
                C153643) *
               C153810 * C564 +
           ((C152148 * C588 - C152187 * C571 - C152148 * C589 + C153851 * C607 +
             C152145 * C1526 - C152180 * C1517 - C152145 * C1527 +
             C153858 * C1532 + C152193 * C3511 - C83611 * C3507 -
             C152193 * C3512 + C83602 * C3519) *
                C153643 +
            (C84299 + C84300 + C84301) * C153651 +
            (C84302 + C84303 + C84304) * C83605) *
               C153810 * C565) *
              C153695 * C335 +
          (((C84298 + C84297 + C84296) * C153643 +
            (C84295 + C84294 + C84293) * C153651 +
            (C152148 * C580 - C152187 * C567 - C152148 * C581 + C153851 * C603 +
             C152145 * C1117 - C152180 * C1108 - C152145 * C1118 +
             C153858 * C1126 + C152193 * C1951 - C83611 * C1945 -
             C152193 * C1952 + C83602 * C1960) *
                C83605) *
               C153810 * C564 -
           (C83700 * C83605 + (C83690 + C83689 + C83688) * C153651 +
            (C83687 + C83686 + C83685) * C153643) *
               C153810 * C563 -
           ((C152193 * C3517 - C83611 * C3510 - C152193 * C3518 +
             C83602 * C3522 + C152145 * C1520 - C152180 * C1514 -
             C152145 * C1521 + C153858 * C1529 + C152148 * C594 -
             C152187 * C574 - C152148 * C595 + C153851 * C610) *
                C83605 +
            (C84304 + C84303 + C84302) * C153651 +
            (C84301 + C84300 + C84299) * C153643) *
               C153810 * C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C153643 +
            (C83685 + C83686 + C83687) * C153651 + C83699 * C83605) *
               C153810 * C154022 -
           (C84777 * C83605 + (C84296 + C84297 + C84298) * C153651 +
            (C152193 * C1957 - C83611 * C1948 - C152193 * C1958 +
             C83602 * C1963 + C152145 * C1111 - C152180 * C1105 -
             C152145 * C1112 + C153858 * C1123 + C152148 * C586 -
             C152187 * C570 - C152148 * C587 + C153851 * C606) *
                C153643) *
               C153810 * C153775) *
              C153695 * C154090 +
          (((C84298 + C84297 + C84296) * C153643 +
            (C84295 + C84294 + C84293) * C153651 +
            (C84784 + C84785 + C84786) * C83605) *
               C153810 * C153775 -
           (C83700 * C83605 + (C83690 + C83689 + C83688) * C153651 +
            (C83687 + C83686 + C83685) * C153643) *
               C153810 * C154022) *
              C153695 * C154091 +
          ((C83699 * C153643 + (C83693 + C83692 + C83691) * C153651 +
            (C83694 + C83695 + C83696) * C83605) *
               C153810 * C154022 -
           ((C152193 * C1949 - C83611 * C1944 - C152193 * C1950 +
             C83602 * C1959 + C152145 * C1119 - C152180 * C1109 -
             C152145 * C1120 + C153858 * C1127 + C152148 * C578 -
             C152187 * C566 - C152148 * C579 + C153851 * C602) *
                C83605 +
            (C84786 + C84785 + C84784) * C153651 + C84777 * C153643) *
               C153810 * C153775) *
              C153695 * C796)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
            C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
            C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
               C153643 +
           (C83685 + C83686 + C83687) * C153651 + C83699 * C83605) *
              C153810 * C153711 * C153695 * C130 -
          (C83700 * C83605 + (C83690 + C83689 + C83688) * C153651 +
           (C83687 + C83686 + C83685) * C153643) *
              C153810 * C153711 * C153695 * C131 +
          (C83699 * C153643 + (C83693 + C83692 + C83691) * C153651 +
           (C83694 + C83695 + C83696) * C83605) *
              C153810 * C153711 * C153695 * C132 -
          ((C152193 * C371 - C83611 * C348 - C152193 * C372 + C83602 * C384 +
            C152145 * C369 - C152180 * C347 - C152145 * C370 + C153858 * C383 +
            C152148 * C154 - C152187 * C141 - C152148 * C155 + C153851 * C165) *
               C83605 +
           (C83696 + C83695 + C83694) * C153651 + C83700 * C153643) *
              C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C153643 +
            (C83685 + C83686 + C83687) * C153651 + C83699 * C83605) *
               C153810 * C153711 * C332 -
           ((C83991 + C83992 + C83993) * C83605 +
            (C83994 + C83995 + C83996) * C153651 +
            (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
             C83602 * C1390 + C152145 * C359 - C152180 * C342 - C152145 * C360 +
             C153858 * C378 + C152148 * C357 - C152187 * C341 - C152148 * C358 +
             C153851 * C377) *
                C153643) *
               C153810 * C153711 * C333 +
           ((C152148 * C359 - C152187 * C342 - C152148 * C360 + C153851 * C378 +
             C152145 * C1384 - C152180 * C1375 - C152145 * C1385 +
             C153858 * C1390 + C152193 * C3193 - C83611 * C3189 -
             C152193 * C3194 + C83602 * C3201) *
                C153643 +
            (C83997 + C83998 + C83999) * C153651 +
            (C84000 + C84001 + C84002) * C83605) *
               C153810 * C153711 * C334) *
              C335 +
          (((C83996 + C83995 + C83994) * C153643 +
            (C83993 + C83992 + C83991) * C153651 +
            (C152148 * C351 - C152187 * C338 - C152148 * C352 + C153851 * C374 +
             C152145 * C365 - C152180 * C345 - C152145 * C366 + C153858 * C381 +
             C152193 * C1378 - C83611 * C1372 - C152193 * C1379 +
             C83602 * C1387) *
                C83605) *
               C153810 * C153711 * C333 -
           (C83700 * C83605 + (C83690 + C83689 + C83688) * C153651 +
            (C83687 + C83686 + C83685) * C153643) *
               C153810 * C153711 * C332 -
           ((C152193 * C3199 - C83611 * C3192 - C152193 * C3200 +
             C83602 * C3204 + C152145 * C1378 - C152180 * C1372 -
             C152145 * C1379 + C153858 * C1387 + C152148 * C365 -
             C152187 * C345 - C152148 * C366 + C153851 * C381) *
                C83605 +
            (C84002 + C84001 + C84000) * C153651 +
            (C83999 + C83998 + C83997) * C153643) *
               C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C153643 +
            (C83685 + C83686 + C83687) * C153651 + C83699 * C83605) *
               C153810 * C153711 * C154092 -
           (C84536 * C83605 + (C83994 + C83995 + C83996) * C153651 +
            (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
             C83602 * C1390 + C152145 * C359 - C152180 * C342 - C152145 * C360 +
             C153858 * C378 + C152148 * C357 - C152187 * C341 - C152148 * C358 +
             C153851 * C377) *
                C153643) *
               C153810 * C153711 * C154093 +
           ((C152148 * C359 - C152187 * C342 - C152148 * C360 + C153851 * C378 +
             C152145 * C1384 - C152180 * C1375 - C152145 * C1385 +
             C153858 * C1390 + C152193 * C3193 - C83611 * C3189 -
             C152193 * C3194 + C83602 * C3201) *
                C153643 +
            (C83997 + C83998 + C83999) * C153651 +
            (C84000 + C84001 + C84002) * C83605) *
               C153810 * C153711 * C1657) *
              C154013 +
          (((C83996 + C83995 + C83994) * C153643 +
            (C83993 + C83992 + C83991) * C153651 +
            (C84543 + C84544 + C84545) * C83605) *
               C153810 * C153711 * C154093 -
           (C83700 * C83605 + (C83690 + C83689 + C83688) * C153651 +
            (C83687 + C83686 + C83685) * C153643) *
               C153810 * C153711 * C154092 -
           ((C152193 * C3199 - C83611 * C3192 - C152193 * C3200 +
             C83602 * C3204 + C152145 * C1378 - C152180 * C1372 -
             C152145 * C1379 + C153858 * C1387 + C152148 * C365 -
             C152187 * C345 - C152148 * C366 + C153851 * C381) *
                C83605 +
            (C84002 + C84001 + C84000) * C153651 +
            (C83999 + C83998 + C83997) * C153643) *
               C153810 * C153711 * C1657) *
              C153682)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C153643 +
            (C83685 + C83686 + C83687) * C153651 + C83699 * C83605) *
               C153810 * C154022 -
           (C84777 * C83605 + (C84296 + C84297 + C84298) * C153651 +
            (C152193 * C1957 - C83611 * C1948 - C152193 * C1958 +
             C83602 * C1963 + C152145 * C1111 - C152180 * C1105 -
             C152145 * C1112 + C153858 * C1123 + C152148 * C586 -
             C152187 * C570 - C152148 * C587 + C153851 * C606) *
                C153643) *
               C153810 * C153775) *
              C154092 +
          (((C152148 * C1111 - C152187 * C1105 - C152148 * C1112 +
             C153851 * C1123 + C152145 * C1957 - C152180 * C1948 -
             C152145 * C1958 + C153858 * C1963 + C152193 * C4383 -
             C83611 * C4379 - C152193 * C4384 + C83602 * C4391) *
                C153643 +
            (C85113 + C85114 + C85115) * C153651 +
            (C85116 + C85117 + C85118) * C83605) *
               C153810 * C153775 -
           (C84536 * C83605 + (C83994 + C83995 + C83996) * C153651 +
            (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
             C83602 * C1390 + C152145 * C359 - C152180 * C342 - C152145 * C360 +
             C153858 * C378 + C152148 * C357 - C152187 * C341 - C152148 * C358 +
             C153851 * C377) *
                C153643) *
               C153810 * C154022) *
              C154093 +
          (((C152148 * C359 - C152187 * C342 - C152148 * C360 + C153851 * C378 +
             C152145 * C1384 - C152180 * C1375 - C152145 * C1385 +
             C153858 * C1390 + C152193 * C3193 - C83611 * C3189 -
             C152193 * C3194 + C83602 * C3201) *
                C153643 +
            (C83997 + C83998 + C83999) * C153651 +
            (C84000 + C84001 + C84002) * C83605) *
               C153810 * C154022 -
           ((C152193 * C5772 - C83611 * C5769 - C152193 * C5773 +
             C83602 * C5778 + C152145 * C4387 - C152180 * C4381 -
             C152145 * C4388 + C153858 * C4393 + C152148 * C1953 -
             C152187 * C1946 - C152148 * C1954 + C153851 * C1961) *
                C83605 +
            (C152193 * C5774 - C83611 * C5770 - C152193 * C5775 +
             C83602 * C5779 + C152145 * C4385 - C152180 * C4380 -
             C152145 * C4386 + C153858 * C4392 + C152148 * C1955 -
             C152187 * C1947 - C152148 * C1956 + C153851 * C1962) *
                C153651 +
            (C152193 * C5776 - C83611 * C5771 - C152193 * C5777 +
             C83602 * C5780 + C152145 * C4383 - C152180 * C4379 -
             C152145 * C4384 + C153858 * C4391 + C152148 * C1957 -
             C152187 * C1948 - C152148 * C1958 + C153851 * C1963) *
                C153643) *
               C153810 * C153775) *
              C1657) *
         C153676) /
        (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
            C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
            C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
               C153643 +
           (C83685 + C83686 + C83687) * C153651 + C83699 * C83605) *
              C153810 * C153711 * C1366 -
          (C84536 * C83605 + (C83994 + C83995 + C83996) * C153651 +
           (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
            C83602 * C1390 + C152145 * C359 - C152180 * C342 - C152145 * C360 +
            C153858 * C378 + C152148 * C357 - C152187 * C341 - C152148 * C358 +
            C153851 * C377) *
               C153643) *
              C153810 * C153711 * C1367 +
          ((C152148 * C359 - C152187 * C342 - C152148 * C360 + C153851 * C378 +
            C152145 * C1384 - C152180 * C1375 - C152145 * C1385 +
            C153858 * C1390 + C152193 * C3193 - C83611 * C3189 -
            C152193 * C3194 + C83602 * C3201) *
               C153643 +
           (C83997 + C83998 + C83999) * C153651 +
           (C84000 + C84001 + C84002) * C83605) *
              C153810 * C153711 * C1368 -
          ((C152193 * C4804 - C83611 * C4801 - C152193 * C4805 +
            C83602 * C4810 + C152145 * C3197 - C152180 * C3191 -
            C152145 * C3198 + C153858 * C3203 + C152148 * C1380 -
            C152187 * C1373 - C152148 * C1381 + C153851 * C1388) *
               C83605 +
           (C152193 * C4806 - C83611 * C4802 - C152193 * C4807 +
            C83602 * C4811 + C152145 * C3195 - C152180 * C3190 -
            C152145 * C3196 + C153858 * C3202 + C152148 * C1382 -
            C152187 * C1374 - C152148 * C1383 + C153851 * C1389) *
               C153651 +
           (C152193 * C4808 - C83611 * C4803 - C152193 * C4809 +
            C83602 * C4812 + C152145 * C3193 - C152180 * C3189 -
            C152145 * C3194 + C153858 * C3201 + C152148 * C1384 -
            C152187 * C1375 - C152148 * C1385 + C153851 * C1390) *
               C153643) *
              C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C153643 +
            (C83685 + C83686 + C83687) * C153651 + C83699 * C83605) *
               C153810 * C153711 * C1279 -
           (C84536 * C83605 + (C83994 + C83995 + C83996) * C153651 +
            (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
             C83602 * C1390 + C152145 * C359 - C152180 * C342 - C152145 * C360 +
             C153858 * C378 + C152148 * C357 - C152187 * C341 - C152148 * C358 +
             C153851 * C377) *
                C153643) *
               C153810 * C153711 * C153747) *
              C1281 +
          (((C83996 + C83995 + C83994) * C153643 +
            (C83993 + C83992 + C83991) * C153651 +
            (C84543 + C84544 + C84545) * C83605) *
               C153810 * C153711 * C153747 -
           (C83700 * C83605 + (C83690 + C83689 + C83688) * C153651 +
            (C83687 + C83686 + C83685) * C153643) *
               C153810 * C153711 * C1279) *
              C1282 +
          ((C83699 * C153643 + (C83693 + C83692 + C83691) * C153651 +
            (C83694 + C83695 + C83696) * C83605) *
               C153810 * C153711 * C1279 -
           ((C152193 * C1376 - C83611 * C1371 - C152193 * C1377 +
             C83602 * C1386 + C152145 * C367 - C152180 * C346 - C152145 * C368 +
             C153858 * C382 + C152148 * C349 - C152187 * C337 - C152148 * C350 +
             C153851 * C373) *
                C83605 +
            (C84545 + C84544 + C84543) * C153651 + C84536 * C153643) *
               C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C153643 +
            (C83685 + C83686 + C83687) * C153651 + C83699 * C83605) *
               C153810 * C563 -
           (C84777 * C83605 + (C84296 + C84297 + C84298) * C153651 +
            (C152193 * C1957 - C83611 * C1948 - C152193 * C1958 +
             C83602 * C1963 + C152145 * C1111 - C152180 * C1105 -
             C152145 * C1112 + C153858 * C1123 + C152148 * C586 -
             C152187 * C570 - C152148 * C587 + C153851 * C606) *
                C153643) *
               C153810 * C564 +
           ((C152148 * C588 - C152187 * C571 - C152148 * C589 + C153851 * C607 +
             C152145 * C1526 - C152180 * C1517 - C152145 * C1527 +
             C153858 * C1532 + C152193 * C3511 - C83611 * C3507 -
             C152193 * C3512 + C83602 * C3519) *
                C153643 +
            (C84299 + C84300 + C84301) * C153651 +
            (C84302 + C84303 + C84304) * C83605) *
               C153810 * C565) *
              C1279 +
          (((C152148 * C1111 - C152187 * C1105 - C152148 * C1112 +
             C153851 * C1123 + C152145 * C1957 - C152180 * C1948 -
             C152145 * C1958 + C153858 * C1963 + C152193 * C4383 -
             C83611 * C4379 - C152193 * C4384 + C83602 * C4391) *
                C153643 +
            (C85113 + C85114 + C85115) * C153651 +
            (C85116 + C85117 + C85118) * C83605) *
               C153810 * C564 -
           (C84536 * C83605 + (C83994 + C83995 + C83996) * C153651 +
            (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
             C83602 * C1390 + C152145 * C359 - C152180 * C342 - C152145 * C360 +
             C153858 * C378 + C152148 * C357 - C152187 * C341 - C152148 * C358 +
             C153851 * C377) *
                C153643) *
               C153810 * C563 -
           ((C152193 * C5034 - C83611 * C5031 - C152193 * C5035 +
             C83602 * C5040 + C152145 * C3515 - C152180 * C3509 -
             C152145 * C3516 + C153858 * C3521 + C152148 * C1522 -
             C152187 * C1515 - C152148 * C1523 + C153851 * C1530) *
                C83605 +
            (C152193 * C5036 - C83611 * C5032 - C152193 * C5037 +
             C83602 * C5041 + C152145 * C3513 - C152180 * C3508 -
             C152145 * C3514 + C153858 * C3520 + C152148 * C1524 -
             C152187 * C1516 - C152148 * C1525 + C153851 * C1531) *
                C153651 +
            (C152193 * C5038 - C83611 * C5033 - C152193 * C5039 +
             C83602 * C5042 + C152145 * C3511 - C152180 * C3507 -
             C152145 * C3512 + C153858 * C3519 + C152148 * C1526 -
             C152187 * C1517 - C152148 * C1527 + C153851 * C1532) *
                C153643) *
               C153810 * C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[8] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
                     C153851 * C160 + C152145 * C357 - C152180 * C341 -
                     C152145 * C358 + C153858 * C377 + C152193 * C359 -
                     C83611 * C342 - C152193 * C360 + C83602 * C378) *
                        C153643 +
                    (C83685 + C83686 + C83687) * C153651 + C83699 * C83605) *
                       C153810 * C154022 -
                   (C84777 * C83605 + (C84296 + C84297 + C84298) * C153651 +
                    (C152193 * C1957 - C83611 * C1948 - C152193 * C1958 +
                     C83602 * C1963 + C152145 * C1111 - C152180 * C1105 -
                     C152145 * C1112 + C153858 * C1123 + C152148 * C586 -
                     C152187 * C570 - C152148 * C587 + C153851 * C606) *
                        C153643) *
                       C153810 * C153775) *
                      C1279 +
                  (((C152148 * C1111 - C152187 * C1105 - C152148 * C1112 +
                     C153851 * C1123 + C152145 * C1957 - C152180 * C1948 -
                     C152145 * C1958 + C153858 * C1963 + C152193 * C4383 -
                     C83611 * C4379 - C152193 * C4384 + C83602 * C4391) *
                        C153643 +
                    (C85113 + C85114 + C85115) * C153651 +
                    (C85116 + C85117 + C85118) * C83605) *
                       C153810 * C153775 -
                   (C84536 * C83605 + (C83994 + C83995 + C83996) * C153651 +
                    (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
                     C83602 * C1390 + C152145 * C359 - C152180 * C342 -
                     C152145 * C360 + C153858 * C378 + C152148 * C357 -
                     C152187 * C341 - C152148 * C358 + C153851 * C377) *
                        C153643) *
                       C153810 * C154022) *
                      C153747) *
                     C154013 +
                 ((((C84298 + C84297 + C84296) * C153643 +
                    (C84295 + C84294 + C84293) * C153651 +
                    (C84784 + C84785 + C84786) * C83605) *
                       C153810 * C153775 -
                   (C83700 * C83605 + (C83690 + C83689 + C83688) * C153651 +
                    (C83687 + C83686 + C83685) * C153643) *
                       C153810 * C154022) *
                      C1279 +
                  (((C83996 + C83995 + C83994) * C153643 +
                    (C83993 + C83992 + C83991) * C153651 +
                    (C84543 + C84544 + C84545) * C83605) *
                       C153810 * C154022 -
                   ((C152193 * C4389 - C83611 * C4382 - C152193 * C4390 +
                     C83602 * C4394 + C152145 * C1951 - C152180 * C1945 -
                     C152145 * C1952 + C153858 * C1960 + C152148 * C1117 -
                     C152187 * C1108 - C152148 * C1118 + C153851 * C1126) *
                        C83605 +
                    (C85118 + C85117 + C85116) * C153651 +
                    (C85115 + C85114 + C85113) * C153643) *
                       C153810 * C153775) *
                      C153747) *
                     C153682)) /
               (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C153643 +
            (C83685 + C83686 + C83687) * C153651 + C83699 * C83605) *
               C153810 * C153711 * C1279 -
           (C84536 * C83605 + (C83994 + C83995 + C83996) * C153651 +
            (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
             C83602 * C1390 + C152145 * C359 - C152180 * C342 - C152145 * C360 +
             C153858 * C378 + C152148 * C357 - C152187 * C341 - C152148 * C358 +
             C153851 * C377) *
                C153643) *
               C153810 * C153711 * C153747) *
              C1281 +
          (((C83996 + C83995 + C83994) * C153643 +
            (C83993 + C83992 + C83991) * C153651 +
            (C84543 + C84544 + C84545) * C83605) *
               C153810 * C153711 * C153747 -
           (C83700 * C83605 + (C83690 + C83689 + C83688) * C153651 +
            (C83687 + C83686 + C83685) * C153643) *
               C153810 * C153711 * C1279) *
              C1282 +
          ((C83699 * C153643 + (C83693 + C83692 + C83691) * C153651 +
            (C83694 + C83695 + C83696) * C83605) *
               C153810 * C153711 * C1279 -
           ((C152193 * C1376 - C83611 * C1371 - C152193 * C1377 +
             C83602 * C1386 + C152145 * C367 - C152180 * C346 - C152145 * C368 +
             C153858 * C382 + C152148 * C349 - C152187 * C337 - C152148 * C350 +
             C153851 * C373) *
                C83605 +
            (C84545 + C84544 + C84543) * C153651 + C84536 * C153643) *
               C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
            C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
            C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
               C153643 +
           (C83685 + C83686 + C83687) * C153651 + C83699 * C83605) *
              C153810 * C153711 * C1366 -
          (C84536 * C83605 + (C83994 + C83995 + C83996) * C153651 +
           (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
            C83602 * C1390 + C152145 * C359 - C152180 * C342 - C152145 * C360 +
            C153858 * C378 + C152148 * C357 - C152187 * C341 - C152148 * C358 +
            C153851 * C377) *
               C153643) *
              C153810 * C153711 * C1367 +
          ((C152148 * C359 - C152187 * C342 - C152148 * C360 + C153851 * C378 +
            C152145 * C1384 - C152180 * C1375 - C152145 * C1385 +
            C153858 * C1390 + C152193 * C3193 - C83611 * C3189 -
            C152193 * C3194 + C83602 * C3201) *
               C153643 +
           (C83997 + C83998 + C83999) * C153651 +
           (C84000 + C84001 + C84002) * C83605) *
              C153810 * C153711 * C1368 -
          ((C152193 * C4804 - C83611 * C4801 - C152193 * C4805 +
            C83602 * C4810 + C152145 * C3197 - C152180 * C3191 -
            C152145 * C3198 + C153858 * C3203 + C152148 * C1380 -
            C152187 * C1373 - C152148 * C1381 + C153851 * C1388) *
               C83605 +
           (C152193 * C4806 - C83611 * C4802 - C152193 * C4807 +
            C83602 * C4811 + C152145 * C3195 - C152180 * C3190 -
            C152145 * C3196 + C153858 * C3202 + C152148 * C1382 -
            C152187 * C1374 - C152148 * C1383 + C153851 * C1389) *
               C153651 +
           (C152193 * C4808 - C83611 * C4803 - C152193 * C4809 +
            C83602 * C4812 + C152145 * C3193 - C152180 * C3189 -
            C152145 * C3194 + C153858 * C3201 + C152148 * C1384 -
            C152187 * C1375 - C152148 * C1385 + C153851 * C1390) *
               C153643) *
              C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[10] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
                      C153851 * C160 + C152145 * C357 - C152180 * C341 -
                      C152145 * C358 + C153858 * C377 + C152193 * C359 -
                      C83611 * C342 - C152193 * C360 + C83602 * C378) *
                         C153643 +
                     (C83685 + C83686 + C83687) * C153651 + C83699 * C83605) *
                        C153810 * C2086 -
                    (C84777 * C83605 + (C84296 + C84297 + C84298) * C153651 +
                     (C152193 * C1957 - C83611 * C1948 - C152193 * C1958 +
                      C83602 * C1963 + C152145 * C1111 - C152180 * C1105 -
                      C152145 * C1112 + C153858 * C1123 + C152148 * C586 -
                      C152187 * C570 - C152148 * C587 + C153851 * C606) *
                         C153643) *
                        C153810 * C153775) *
                       C154021 +
                   (((C152148 * C1111 - C152187 * C1105 - C152148 * C1112 +
                      C153851 * C1123 + C152145 * C1957 - C152180 * C1948 -
                      C152145 * C1958 + C153858 * C1963 + C152193 * C4383 -
                      C83611 * C4379 - C152193 * C4384 + C83602 * C4391) *
                         C153643 +
                     (C85113 + C85114 + C85115) * C153651 +
                     (C85116 + C85117 + C85118) * C83605) *
                        C153810 * C153775 -
                    (C84536 * C83605 + (C83994 + C83995 + C83996) * C153651 +
                     (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
                      C83602 * C1390 + C152145 * C359 - C152180 * C342 -
                      C152145 * C360 + C153858 * C378 + C152148 * C357 -
                      C152187 * C341 - C152148 * C358 + C153851 * C377) *
                         C153643) *
                        C153810 * C2086) *
                       C153747) *
                      C154013 +
                  ((((C84298 + C84297 + C84296) * C153643 +
                     (C84295 + C84294 + C84293) * C153651 +
                     (C84784 + C84785 + C84786) * C83605) *
                        C153810 * C153775 -
                    (C83700 * C83605 + (C83690 + C83689 + C83688) * C153651 +
                     (C83687 + C83686 + C83685) * C153643) *
                        C153810 * C2086) *
                       C154021 +
                   (((C83996 + C83995 + C83994) * C153643 +
                     (C83993 + C83992 + C83991) * C153651 +
                     (C84543 + C84544 + C84545) * C83605) *
                        C153810 * C2086 -
                    ((C152193 * C4389 - C83611 * C4382 - C152193 * C4390 +
                      C83602 * C4394 + C152145 * C1951 - C152180 * C1945 -
                      C152145 * C1952 + C153858 * C1960 + C152148 * C1117 -
                      C152187 * C1108 - C152148 * C1118 + C153851 * C1126) *
                         C83605 +
                     (C85118 + C85117 + C85116) * C153651 +
                     (C85115 + C85114 + C85113) * C153643) *
                        C153810 * C153775) *
                       C153747) *
                      C153682)) /
                (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C153643 +
            (C83685 + C83686 + C83687) * C153651 + C83699 * C83605) *
               C153810 * C154094 -
           (C84777 * C83605 + (C84296 + C84297 + C84298) * C153651 +
            (C152193 * C1957 - C83611 * C1948 - C152193 * C1958 +
             C83602 * C1963 + C152145 * C1111 - C152180 * C1105 -
             C152145 * C1112 + C153858 * C1123 + C152148 * C586 -
             C152187 * C570 - C152148 * C587 + C153851 * C606) *
                C153643) *
               C153810 * C154095 +
           ((C152148 * C588 - C152187 * C571 - C152148 * C589 + C153851 * C607 +
             C152145 * C1526 - C152180 * C1517 - C152145 * C1527 +
             C153858 * C1532 + C152193 * C3511 - C83611 * C3507 -
             C152193 * C3512 + C83602 * C3519) *
                C153643 +
            (C84299 + C84300 + C84301) * C153651 +
            (C84302 + C84303 + C84304) * C83605) *
               C153810 * C2602) *
              C154021 +
          (((C152148 * C1111 - C152187 * C1105 - C152148 * C1112 +
             C153851 * C1123 + C152145 * C1957 - C152180 * C1948 -
             C152145 * C1958 + C153858 * C1963 + C152193 * C4383 -
             C83611 * C4379 - C152193 * C4384 + C83602 * C4391) *
                C153643 +
            (C85113 + C85114 + C85115) * C153651 +
            (C85116 + C85117 + C85118) * C83605) *
               C153810 * C154095 -
           (C84536 * C83605 + (C83994 + C83995 + C83996) * C153651 +
            (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
             C83602 * C1390 + C152145 * C359 - C152180 * C342 - C152145 * C360 +
             C153858 * C378 + C152148 * C357 - C152187 * C341 - C152148 * C358 +
             C153851 * C377) *
                C153643) *
               C153810 * C154094 -
           ((C152193 * C5034 - C83611 * C5031 - C152193 * C5035 +
             C83602 * C5040 + C152145 * C3515 - C152180 * C3509 -
             C152145 * C3516 + C153858 * C3521 + C152148 * C1522 -
             C152187 * C1515 - C152148 * C1523 + C153851 * C1530) *
                C83605 +
            (C152193 * C5036 - C83611 * C5032 - C152193 * C5037 +
             C83602 * C5041 + C152145 * C3513 - C152180 * C3508 -
             C152145 * C3514 + C153858 * C3520 + C152148 * C1524 -
             C152187 * C1516 - C152148 * C1525 + C153851 * C1531) *
                C153651 +
            (C152193 * C5038 - C83611 * C5033 - C152193 * C5039 +
             C83602 * C5042 + C152145 * C3511 - C152180 * C3507 -
             C152145 * C3512 + C153858 * C3519 + C152148 * C1526 -
             C152187 * C1517 - C152148 * C1527 + C153851 * C1532) *
                C153643) *
               C153810 * C2602) *
              C153747) *
         C153676) /
        (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C153643 +
            (C83685 + C83686 + C83687) * C153651 + C83699 * C83605) *
               C153810 * C2086 -
           (C84777 * C83605 + (C84296 + C84297 + C84298) * C153651 +
            (C152193 * C1957 - C83611 * C1948 - C152193 * C1958 +
             C83602 * C1963 + C152145 * C1111 - C152180 * C1105 -
             C152145 * C1112 + C153858 * C1123 + C152148 * C586 -
             C152187 * C570 - C152148 * C587 + C153851 * C606) *
                C153643) *
               C153810 * C153775) *
              C332 +
          (((C152148 * C1111 - C152187 * C1105 - C152148 * C1112 +
             C153851 * C1123 + C152145 * C1957 - C152180 * C1948 -
             C152145 * C1958 + C153858 * C1963 + C152193 * C4383 -
             C83611 * C4379 - C152193 * C4384 + C83602 * C4391) *
                C153643 +
            (C85113 + C85114 + C85115) * C153651 +
            (C85116 + C85117 + C85118) * C83605) *
               C153810 * C153775 -
           (C84536 * C83605 + (C83994 + C83995 + C83996) * C153651 +
            (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
             C83602 * C1390 + C152145 * C359 - C152180 * C342 - C152145 * C360 +
             C153858 * C378 + C152148 * C357 - C152187 * C341 - C152148 * C358 +
             C153851 * C377) *
                C153643) *
               C153810 * C2086) *
              C333 +
          (((C152148 * C359 - C152187 * C342 - C152148 * C360 + C153851 * C378 +
             C152145 * C1384 - C152180 * C1375 - C152145 * C1385 +
             C153858 * C1390 + C152193 * C3193 - C83611 * C3189 -
             C152193 * C3194 + C83602 * C3201) *
                C153643 +
            (C83997 + C83998 + C83999) * C153651 +
            (C84000 + C84001 + C84002) * C83605) *
               C153810 * C2086 -
           ((C152193 * C5772 - C83611 * C5769 - C152193 * C5773 +
             C83602 * C5778 + C152145 * C4387 - C152180 * C4381 -
             C152145 * C4388 + C153858 * C4393 + C152148 * C1953 -
             C152187 * C1946 - C152148 * C1954 + C153851 * C1961) *
                C83605 +
            (C152193 * C5774 - C83611 * C5770 - C152193 * C5775 +
             C83602 * C5779 + C152145 * C4385 - C152180 * C4380 -
             C152145 * C4386 + C153858 * C4392 + C152148 * C1955 -
             C152187 * C1947 - C152148 * C1956 + C153851 * C1962) *
                C153651 +
            (C152193 * C5776 - C83611 * C5771 - C152193 * C5777 +
             C83602 * C5780 + C152145 * C4383 - C152180 * C4379 -
             C152145 * C4384 + C153858 * C4391 + C152148 * C1957 -
             C152187 * C1948 - C152148 * C1958 + C153851 * C1963) *
                C153643) *
               C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C153643 +
            (C83685 + C83686 + C83687) * C153651 + C83699 * C83605) *
               C153810 * C2086 -
           (C84777 * C83605 + (C84296 + C84297 + C84298) * C153651 +
            (C152193 * C1957 - C83611 * C1948 - C152193 * C1958 +
             C83602 * C1963 + C152145 * C1111 - C152180 * C1105 -
             C152145 * C1112 + C153858 * C1123 + C152148 * C586 -
             C152187 * C570 - C152148 * C587 + C153851 * C606) *
                C153643) *
               C153810 * C153775) *
              C153695 * C1281 +
          (((C84298 + C84297 + C84296) * C153643 +
            (C84295 + C84294 + C84293) * C153651 +
            (C84784 + C84785 + C84786) * C83605) *
               C153810 * C153775 -
           (C83700 * C83605 + (C83690 + C83689 + C83688) * C153651 +
            (C83687 + C83686 + C83685) * C153643) *
               C153810 * C2086) *
              C153695 * C1282 +
          ((C83699 * C153643 + (C83693 + C83692 + C83691) * C153651 +
            (C83694 + C83695 + C83696) * C83605) *
               C153810 * C2086 -
           ((C152193 * C1949 - C83611 * C1944 - C152193 * C1950 +
             C83602 * C1959 + C152145 * C1119 - C152180 * C1109 -
             C152145 * C1120 + C153858 * C1127 + C152148 * C578 -
             C152187 * C566 - C152148 * C579 + C153851 * C602) *
                C83605 +
            (C84786 + C84785 + C84784) * C153651 + C84777 * C153643) *
               C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
            C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
            C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
               C153643 +
           (C83685 + C83686 + C83687) * C153651 + C83699 * C83605) *
              C153810 * C2292 -
          (C84777 * C83605 + (C84296 + C84297 + C84298) * C153651 +
           (C152193 * C1957 - C83611 * C1948 - C152193 * C1958 +
            C83602 * C1963 + C152145 * C1111 - C152180 * C1105 -
            C152145 * C1112 + C153858 * C1123 + C152148 * C586 -
            C152187 * C570 - C152148 * C587 + C153851 * C606) *
               C153643) *
              C153810 * C2293 +
          ((C152148 * C588 - C152187 * C571 - C152148 * C589 + C153851 * C607 +
            C152145 * C1526 - C152180 * C1517 - C152145 * C1527 +
            C153858 * C1532 + C152193 * C3511 - C83611 * C3507 -
            C152193 * C3512 + C83602 * C3519) *
               C153643 +
           (C84299 + C84300 + C84301) * C153651 +
           (C84302 + C84303 + C84304) * C83605) *
              C153810 * C2294 -
          ((C152193 * C6369 - C83611 * C6363 - C152193 * C6370 +
            C83602 * C6381 + C152145 * C6371 - C152180 * C6364 -
            C152145 * C6372 + C153858 * C6382 + C152148 * C2305 -
            C152187 * C2298 - C152148 * C2306 + C153851 * C2313) *
               C83605 +
           (C152193 * C6373 - C83611 * C6365 - C152193 * C6374 +
            C83602 * C6383 + C152145 * C6375 - C152180 * C6366 -
            C152145 * C6376 + C153858 * C6384 + C152148 * C2307 -
            C152187 * C2299 - C152148 * C2308 + C153851 * C2314) *
               C153651 +
           (C152193 * C6377 - C83611 * C6367 - C152193 * C6378 +
            C83602 * C6385 + C152145 * C6379 - C152180 * C6368 -
            C152145 * C6380 + C153858 * C6386 + C152148 * C2309 -
            C152187 * C2300 - C152148 * C2310 + C153851 * C2315) *
               C153643) *
              C153810 * C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C153643 +
            (C83685 + C83686 + C83687) * C153651 + C83699 * C83605) *
               C153810 * C154094 -
           (C84777 * C83605 + (C84296 + C84297 + C84298) * C153651 +
            (C152193 * C1957 - C83611 * C1948 - C152193 * C1958 +
             C83602 * C1963 + C152145 * C1111 - C152180 * C1105 -
             C152145 * C1112 + C153858 * C1123 + C152148 * C586 -
             C152187 * C570 - C152148 * C587 + C153851 * C606) *
                C153643) *
               C153810 * C154095 +
           ((C152148 * C588 - C152187 * C571 - C152148 * C589 + C153851 * C607 +
             C152145 * C1526 - C152180 * C1517 - C152145 * C1527 +
             C153858 * C1532 + C152193 * C3511 - C83611 * C3507 -
             C152193 * C3512 + C83602 * C3519) *
                C153643 +
            (C84299 + C84300 + C84301) * C153651 +
            (C84302 + C84303 + C84304) * C83605) *
               C153810 * C2602) *
              C153695 * C154013 +
          (((C84298 + C84297 + C84296) * C153643 +
            (C84295 + C84294 + C84293) * C153651 +
            (C84784 + C84785 + C84786) * C83605) *
               C153810 * C154095 -
           (C83700 * C83605 + (C83690 + C83689 + C83688) * C153651 +
            (C83687 + C83686 + C83685) * C153643) *
               C153810 * C154094 -
           ((C152193 * C3517 - C83611 * C3510 - C152193 * C3518 +
             C83602 * C3522 + C152145 * C1520 - C152180 * C1514 -
             C152145 * C1521 + C153858 * C1529 + C152148 * C594 -
             C152187 * C574 - C152148 * C595 + C153851 * C610) *
                C83605 +
            (C84304 + C84303 + C84302) * C153651 +
            (C84301 + C84300 + C84299) * C153643) *
               C153810 * C2602) *
              C153695 * C153682)) /
        (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C153643 +
            (C83685 + C83686 + C83687) * C153651 + C83699 * C83605) *
               C153810 * C2086 -
           (C84777 * C83605 + (C84296 + C84297 + C84298) * C153651 +
            (C152193 * C1957 - C83611 * C1948 - C152193 * C1958 +
             C83602 * C1963 + C152145 * C1111 - C152180 * C1105 -
             C152145 * C1112 + C153858 * C1123 + C152148 * C586 -
             C152187 * C570 - C152148 * C587 + C153851 * C606) *
                C153643) *
               C153810 * C153775) *
              C153695 * C1281 +
          (((C84298 + C84297 + C84296) * C153643 +
            (C84295 + C84294 + C84293) * C153651 +
            (C84784 + C84785 + C84786) * C83605) *
               C153810 * C153775 -
           (C83700 * C83605 + (C83690 + C83689 + C83688) * C153651 +
            (C83687 + C83686 + C83685) * C153643) *
               C153810 * C2086) *
              C153695 * C1282 +
          ((C83699 * C153643 + (C83693 + C83692 + C83691) * C153651 +
            (C83694 + C83695 + C83696) * C83605) *
               C153810 * C2086 -
           ((C152193 * C1949 - C83611 * C1944 - C152193 * C1950 +
             C83602 * C1959 + C152145 * C1119 - C152180 * C1109 -
             C152145 * C1120 + C153858 * C1127 + C152148 * C578 -
             C152187 * C566 - C152148 * C579 + C153851 * C602) *
                C83605 +
            (C84786 + C84785 + C84784) * C153651 + C84777 * C153643) *
               C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C153643 +
            (C83685 + C83686 + C83687) * C153651 + C83699 * C83605) *
               C153810 * C2086 -
           (C84777 * C83605 + (C84296 + C84297 + C84298) * C153651 +
            (C152193 * C1957 - C83611 * C1948 - C152193 * C1958 +
             C83602 * C1963 + C152145 * C1111 - C152180 * C1105 -
             C152145 * C1112 + C153858 * C1123 + C152148 * C586 -
             C152187 * C570 - C152148 * C587 + C153851 * C606) *
                C153643) *
               C153810 * C153775) *
              C332 +
          (((C152148 * C1111 - C152187 * C1105 - C152148 * C1112 +
             C153851 * C1123 + C152145 * C1957 - C152180 * C1948 -
             C152145 * C1958 + C153858 * C1963 + C152193 * C4383 -
             C83611 * C4379 - C152193 * C4384 + C83602 * C4391) *
                C153643 +
            (C85113 + C85114 + C85115) * C153651 +
            (C85116 + C85117 + C85118) * C83605) *
               C153810 * C153775 -
           (C84536 * C83605 + (C83994 + C83995 + C83996) * C153651 +
            (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
             C83602 * C1390 + C152145 * C359 - C152180 * C342 - C152145 * C360 +
             C153858 * C378 + C152148 * C357 - C152187 * C341 - C152148 * C358 +
             C153851 * C377) *
                C153643) *
               C153810 * C2086) *
              C333 +
          (((C152148 * C359 - C152187 * C342 - C152148 * C360 + C153851 * C378 +
             C152145 * C1384 - C152180 * C1375 - C152145 * C1385 +
             C153858 * C1390 + C152193 * C3193 - C83611 * C3189 -
             C152193 * C3194 + C83602 * C3201) *
                C153643 +
            (C83997 + C83998 + C83999) * C153651 +
            (C84000 + C84001 + C84002) * C83605) *
               C153810 * C2086 -
           ((C152193 * C5772 - C83611 * C5769 - C152193 * C5773 +
             C83602 * C5778 + C152145 * C4387 - C152180 * C4381 -
             C152145 * C4388 + C153858 * C4393 + C152148 * C1953 -
             C152187 * C1946 - C152148 * C1954 + C153851 * C1961) *
                C83605 +
            (C152193 * C5774 - C83611 * C5770 - C152193 * C5775 +
             C83602 * C5779 + C152145 * C4385 - C152180 * C4380 -
             C152145 * C4386 + C153858 * C4392 + C152148 * C1955 -
             C152187 * C1947 - C152148 * C1956 + C153851 * C1962) *
                C153651 +
            (C152193 * C5776 - C83611 * C5771 - C152193 * C5777 +
             C83602 * C5780 + C152145 * C4383 - C152180 * C4379 -
             C152145 * C4384 + C153858 * C4391 + C152148 * C1957 -
             C152187 * C1948 - C152148 * C1958 + C153851 * C1963) *
                C153643) *
               C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C153851 * C160 + C152145 * C357 - C152180 * C341 -
              C152145 * C358 + C153858 * C377 + C152193 * C359 - C83611 * C342 -
              C152193 * C360 + C83602 * C378) *
                 C74316 +
             (C83685 + C83686 + C83687) * C153648) *
                C154037 +
            ((C93829 + C93830 + C93831) * C74316 + C93810 * C153648) *
                C153897) *
               C153711 * C154021 -
           (((C85115 + C85114 + C85113) * C153648 +
             (C152193 * C4383 - C83611 * C4379 - C152193 * C4384 +
              C83602 * C4391 + C152145 * C1957 - C152180 * C1948 -
              C152145 * C1958 + C153858 * C1963 + C152148 * C1111 -
              C152187 * C1105 - C152148 * C1112 + C153851 * C1123) *
                 C74316) *
                C153897 +
            ((C83994 + C83995 + C83996) * C153648 +
             (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
              C83602 * C1390 + C152145 * C359 - C152180 * C342 -
              C152145 * C360 + C153858 * C378 + C152148 * C357 -
              C152187 * C341 - C152148 * C358 + C153851 * C377) *
                 C74316) *
                C154037) *
               C153711 * C153747) *
              C154090 +
          ((((C83996 + C83995 + C83994) * C74316 +
             (C83993 + C83992 + C83991) * C153648) *
                C154037 +
            ((C85113 + C85114 + C85115) * C74316 +
             (C85116 + C85117 + C85118) * C153648) *
                C153897) *
               C153711 * C153747 -
           ((C84777 * C153648 + C93815 * C74316) * C153897 +
            ((C83690 + C83689 + C83688) * C153648 +
             (C83687 + C83686 + C83685) * C74316) *
                C154037) *
               C153711 * C154021) *
              C154091 +
          (((C83699 * C74316 + (C83693 + C83692 + C83691) * C153648) * C154037 +
            ((C84295 + C84294 + C84293) * C74316 +
             (C84784 + C84785 + C84786) * C153648) *
                C153897) *
               C153711 * C154021 -
           (((C152193 * C4389 - C83611 * C4382 - C152193 * C4390 +
              C83602 * C4394 + C152145 * C1951 - C152180 * C1945 -
              C152145 * C1952 + C153858 * C1960 + C152148 * C1117 -
              C152187 * C1108 - C152148 * C1118 + C153851 * C1126) *
                 C153648 +
             (C85118 + C85117 + C85116) * C74316) *
                C153897 +
            ((C84545 + C84544 + C84543) * C153648 + C84536 * C74316) *
                C154037) *
               C153711 * C153747) *
              C796)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
                       C153851 * C160 + C152145 * C357 - C152180 * C341 -
                       C152145 * C358 + C153858 * C377 + C152193 * C359 -
                       C83611 * C342 - C152193 * C360 + C83602 * C378) *
                          C74316 +
                      (C83685 + C83686 + C83687) * C153648) *
                         C154037 +
                     ((C93829 + C93830 + C93831) * C74316 + C93810 * C153648) *
                         C153897) *
                        C154022 -
                    ((C93811 * C153648 + (C93832 + C93833 + C93834) * C74316) *
                         C153897 +
                     (C93815 * C153648 + (C93831 + C93830 + C93829) * C74316) *
                         C154037) *
                        C153775) *
                       C154021 +
                   ((((C94846 + C94847 + C94848) * C74316 + C94835 * C153648) *
                         C154037 +
                     ((C152148 * C1526 - C152187 * C1517 - C152148 * C1527 +
                       C153851 * C1532 + C152145 * C3511 - C152180 * C3507 -
                       C152145 * C3512 + C153858 * C3519 + C152193 * C5038 -
                       C83611 * C5033 - C152193 * C5039 + C83602 * C5042) *
                          C74316 +
                      (C94849 + C94850 + C94851) * C153648) *
                         C153897) *
                        C153775 -
                    ((C94839 * C153648 + (C94848 + C94847 + C94846) * C74316) *
                         C153897 +
                     ((C83994 + C83995 + C83996) * C153648 +
                      (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
                       C83602 * C1390 + C152145 * C359 - C152180 * C342 -
                       C152145 * C360 + C153858 * C378 + C152148 * C357 -
                       C152187 * C341 - C152148 * C358 + C153851 * C377) *
                          C74316) *
                         C154037) *
                        C154022) *
                       C153747) *
                      C335 +
                  ((((C93810 * C74316 + C94419 * C153648) * C154037 +
                     (C93816 * C74316 + (C84302 + C84303 + C84304) * C153648) *
                         C153897) *
                        C153775 -
                    ((C84777 * C153648 + C93815 * C74316) * C153897 +
                     ((C83690 + C83689 + C83688) * C153648 +
                      (C83687 + C83686 + C83685) * C74316) *
                         C154037) *
                        C154022) *
                       C154021 +
                   ((((C83996 + C83995 + C83994) * C74316 +
                      (C83993 + C83992 + C83991) * C153648) *
                         C154037 +
                     (C94835 * C74316 + (C85116 + C85117 + C85118) * C153648) *
                         C153897) *
                        C154022 -
                    (((C152193 * C5034 - C83611 * C5031 - C152193 * C5035 +
                       C83602 * C5040 + C152145 * C3515 - C152180 * C3509 -
                       C152145 * C3516 + C153858 * C3521 + C152148 * C1522 -
                       C152187 * C1515 - C152148 * C1523 + C153851 * C1530) *
                          C153648 +
                      (C94851 + C94850 + C94849) * C74316) *
                         C153897 +
                     ((C85118 + C85117 + C85116) * C153648 + C94839 * C74316) *
                         C154037) *
                        C153775) *
                       C153747) *
                      C153682)) /
                (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C153851 * C160 + C152145 * C357 - C152180 * C341 -
              C152145 * C358 + C153858 * C377 + C152193 * C359 - C83611 * C342 -
              C152193 * C360 + C83602 * C378) *
                 C74316 +
             (C83685 + C83686 + C83687) * C153648) *
                C154037 +
            ((C152148 * C586 - C152187 * C570 - C152148 * C587 +
              C153851 * C606 + C152145 * C1111 - C152180 * C1105 -
              C152145 * C1112 + C153858 * C1123 + C152193 * C1957 -
              C83611 * C1948 - C152193 * C1958 + C83602 * C1963) *
                 C74316 +
             (C84298 + C84297 + C84296) * C153648) *
                C153897) *
               C153711 * C332 -
           (((C85115 + C85114 + C85113) * C153648 +
             (C152193 * C4383 - C83611 * C4379 - C152193 * C4384 +
              C83602 * C4391 + C152145 * C1957 - C152180 * C1948 -
              C152145 * C1958 + C153858 * C1963 + C152148 * C1111 -
              C152187 * C1105 - C152148 * C1112 + C153851 * C1123) *
                 C74316) *
                C153897 +
            ((C83994 + C83995 + C83996) * C153648 +
             (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
              C83602 * C1390 + C152145 * C359 - C152180 * C342 -
              C152145 * C360 + C153858 * C378 + C152148 * C357 -
              C152187 * C341 - C152148 * C358 + C153851 * C377) *
                 C74316) *
                C154037) *
               C153711 * C333 +
           (((C152148 * C359 - C152187 * C342 - C152148 * C360 +
              C153851 * C378 + C152145 * C1384 - C152180 * C1375 -
              C152145 * C1385 + C153858 * C1390 + C152193 * C3193 -
              C83611 * C3189 - C152193 * C3194 + C83602 * C3201) *
                 C74316 +
             (C83997 + C83998 + C83999) * C153648) *
                C154037 +
            ((C152148 * C1957 - C152187 * C1948 - C152148 * C1958 +
              C153851 * C1963 + C152145 * C4383 - C152180 * C4379 -
              C152145 * C4384 + C153858 * C4391 + C152193 * C5776 -
              C83611 * C5771 - C152193 * C5777 + C83602 * C5780) *
                 C74316 +
             (C93474 + C93475 + C93476) * C153648) *
                C153897) *
               C153711 * C334) *
              C335 +
          ((((C83996 + C83995 + C83994) * C74316 +
             (C83993 + C83992 + C83991) * C153648) *
                C154037 +
            ((C85113 + C85114 + C85115) * C74316 +
             (C85116 + C85117 + C85118) * C153648) *
                C153897) *
               C153711 * C333 -
           ((C84777 * C153648 + (C84296 + C84297 + C84298) * C74316) * C153897 +
            ((C83690 + C83689 + C83688) * C153648 +
             (C83687 + C83686 + C83685) * C74316) *
                C154037) *
               C153711 * C332 -
           (((C152193 * C5772 - C83611 * C5769 - C152193 * C5773 +
              C83602 * C5778 + C152145 * C4387 - C152180 * C4381 -
              C152145 * C4388 + C153858 * C4393 + C152148 * C1953 -
              C152187 * C1946 - C152148 * C1954 + C153851 * C1961) *
                 C153648 +
             (C93476 + C93475 + C93474) * C74316) *
                C153897 +
            ((C84002 + C84001 + C84000) * C153648 +
             (C83999 + C83998 + C83997) * C74316) *
                C154037) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C74316 +
            (C83685 + C83686 + C83687) * C153648) *
               C154037 +
           ((C152148 * C586 - C152187 * C570 - C152148 * C587 + C153851 * C606 +
             C152145 * C1111 - C152180 * C1105 - C152145 * C1112 +
             C153858 * C1123 + C152193 * C1957 - C83611 * C1948 -
             C152193 * C1958 + C83602 * C1963) *
                C74316 +
            (C84298 + C84297 + C84296) * C153648) *
               C153897) *
              C153711 * C153695 * C130 -
          ((C84777 * C153648 + (C84296 + C84297 + C84298) * C74316) * C153897 +
           ((C83690 + C83689 + C83688) * C153648 +
            (C83687 + C83686 + C83685) * C74316) *
               C154037) *
              C153711 * C153695 * C131 +
          ((C83699 * C74316 + (C83693 + C83692 + C83691) * C153648) * C154037 +
           ((C84295 + C84294 + C84293) * C74316 +
            (C84784 + C84785 + C84786) * C153648) *
               C153897) *
              C153711 * C153695 * C132 -
          (((C152193 * C1949 - C83611 * C1944 - C152193 * C1950 +
             C83602 * C1959 + C152145 * C1119 - C152180 * C1109 -
             C152145 * C1120 + C153858 * C1127 + C152148 * C578 -
             C152187 * C566 - C152148 * C579 + C153851 * C602) *
                C153648 +
            (C84786 + C84785 + C84784) * C74316) *
               C153897 +
           ((C83696 + C83695 + C83694) * C153648 + C83700 * C74316) * C154037) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C153851 * C160 + C152145 * C357 - C152180 * C341 -
              C152145 * C358 + C153858 * C377 + C152193 * C359 - C83611 * C342 -
              C152193 * C360 + C83602 * C378) *
                 C74316 +
             (C83685 + C83686 + C83687) * C153648) *
                C154037 +
            ((C93829 + C93830 + C93831) * C74316 + C93810 * C153648) *
                C153897) *
               C563 -
           ((C93811 * C153648 + (C93832 + C93833 + C93834) * C74316) * C153897 +
            (C93815 * C153648 + (C93831 + C93830 + C93829) * C74316) *
                C154037) *
               C564 +
           (((C93834 + C93833 + C93832) * C74316 + C93816 * C153648) * C154037 +
            ((C152148 * C2309 - C152187 * C2300 - C152148 * C2310 +
              C153851 * C2315 + C152145 * C6379 - C152180 * C6368 -
              C152145 * C6380 + C153858 * C6386 + C152193 * C6377 -
              C83611 * C6367 - C152193 * C6378 + C83602 * C6385) *
                 C74316 +
             (C93835 + C93836 + C93837) * C153648) *
                C153897) *
               C565) *
              C153695 * C335 +
          (((C93810 * C74316 + (C84295 + C84294 + C84293) * C153648) * C154037 +
            (C93816 * C74316 + (C84302 + C84303 + C84304) * C153648) *
                C153897) *
               C564 -
           ((C84777 * C153648 + C93815 * C74316) * C153897 +
            ((C83690 + C83689 + C83688) * C153648 +
             (C83687 + C83686 + C83685) * C74316) *
                C154037) *
               C563 -
           (((C152193 * C6369 - C83611 * C6363 - C152193 * C6370 +
              C83602 * C6381 + C152145 * C6371 - C152180 * C6364 -
              C152145 * C6372 + C153858 * C6382 + C152148 * C2305 -
              C152187 * C2298 - C152148 * C2306 + C153851 * C2313) *
                 C153648 +
             (C93837 + C93836 + C93835) * C74316) *
                C153897 +
            ((C84304 + C84303 + C84302) * C153648 + C93811 * C74316) *
                C154037) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C153851 * C160 + C152145 * C357 - C152180 * C341 -
              C152145 * C358 + C153858 * C377 + C152193 * C359 - C83611 * C342 -
              C152193 * C360 + C83602 * C378) *
                 C74316 +
             (C83685 + C83686 + C83687) * C153648) *
                C154037 +
            ((C93829 + C93830 + C93831) * C74316 + C93810 * C153648) *
                C153897) *
               C154022 -
           ((C93811 * C153648 + (C93832 + C93833 + C93834) * C74316) * C153897 +
            (C93815 * C153648 + (C93831 + C93830 + C93829) * C74316) *
                C154037) *
               C153775) *
              C153695 * C154090 +
          (((C93810 * C74316 + C94419 * C153648) * C154037 +
            (C93816 * C74316 + (C84302 + C84303 + C84304) * C153648) *
                C153897) *
               C153775 -
           ((C84777 * C153648 + C93815 * C74316) * C153897 +
            ((C83690 + C83689 + C83688) * C153648 +
             (C83687 + C83686 + C83685) * C74316) *
                C154037) *
               C154022) *
              C153695 * C154091 +
          (((C83699 * C74316 + (C83693 + C83692 + C83691) * C153648) * C154037 +
            (C94419 * C74316 + (C84784 + C84785 + C84786) * C153648) *
                C153897) *
               C154022 -
           (((C152193 * C3517 - C83611 * C3510 - C152193 * C3518 +
              C83602 * C3522 + C152145 * C1520 - C152180 * C1514 -
              C152145 * C1521 + C153858 * C1529 + C152148 * C594 -
              C152187 * C574 - C152148 * C595 + C153851 * C610) *
                 C153648 +
             (C84304 + C84303 + C84302) * C74316) *
                C153897 +
            ((C84786 + C84785 + C84784) * C153648 + C84777 * C74316) *
                C154037) *
               C153775) *
              C153695 * C796)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C74316 +
            (C83685 + C83686 + C83687) * C153648) *
               C154037 +
           ((C152148 * C586 - C152187 * C570 - C152148 * C587 + C153851 * C606 +
             C152145 * C1111 - C152180 * C1105 - C152145 * C1112 +
             C153858 * C1123 + C152193 * C1957 - C83611 * C1948 -
             C152193 * C1958 + C83602 * C1963) *
                C74316 +
            (C84298 + C84297 + C84296) * C153648) *
               C153897) *
              C153711 * C153695 * C130 -
          ((C84777 * C153648 + (C84296 + C84297 + C84298) * C74316) * C153897 +
           ((C83690 + C83689 + C83688) * C153648 +
            (C83687 + C83686 + C83685) * C74316) *
               C154037) *
              C153711 * C153695 * C131 +
          ((C83699 * C74316 + (C83693 + C83692 + C83691) * C153648) * C154037 +
           ((C84295 + C84294 + C84293) * C74316 +
            (C84784 + C84785 + C84786) * C153648) *
               C153897) *
              C153711 * C153695 * C132 -
          (((C152193 * C1949 - C83611 * C1944 - C152193 * C1950 +
             C83602 * C1959 + C152145 * C1119 - C152180 * C1109 -
             C152145 * C1120 + C153858 * C1127 + C152148 * C578 -
             C152187 * C566 - C152148 * C579 + C153851 * C602) *
                C153648 +
            (C84786 + C84785 + C84784) * C74316) *
               C153897 +
           ((C83696 + C83695 + C83694) * C153648 + C83700 * C74316) * C154037) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C153851 * C160 + C152145 * C357 - C152180 * C341 -
              C152145 * C358 + C153858 * C377 + C152193 * C359 - C83611 * C342 -
              C152193 * C360 + C83602 * C378) *
                 C74316 +
             (C83685 + C83686 + C83687) * C153648) *
                C154037 +
            ((C152148 * C586 - C152187 * C570 - C152148 * C587 +
              C153851 * C606 + C152145 * C1111 - C152180 * C1105 -
              C152145 * C1112 + C153858 * C1123 + C152193 * C1957 -
              C83611 * C1948 - C152193 * C1958 + C83602 * C1963) *
                 C74316 +
             (C84298 + C84297 + C84296) * C153648) *
                C153897) *
               C153711 * C332 -
           (((C85115 + C85114 + C85113) * C153648 +
             (C152193 * C4383 - C83611 * C4379 - C152193 * C4384 +
              C83602 * C4391 + C152145 * C1957 - C152180 * C1948 -
              C152145 * C1958 + C153858 * C1963 + C152148 * C1111 -
              C152187 * C1105 - C152148 * C1112 + C153851 * C1123) *
                 C74316) *
                C153897 +
            ((C83994 + C83995 + C83996) * C153648 +
             (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
              C83602 * C1390 + C152145 * C359 - C152180 * C342 -
              C152145 * C360 + C153858 * C378 + C152148 * C357 -
              C152187 * C341 - C152148 * C358 + C153851 * C377) *
                 C74316) *
                C154037) *
               C153711 * C333 +
           (((C152148 * C359 - C152187 * C342 - C152148 * C360 +
              C153851 * C378 + C152145 * C1384 - C152180 * C1375 -
              C152145 * C1385 + C153858 * C1390 + C152193 * C3193 -
              C83611 * C3189 - C152193 * C3194 + C83602 * C3201) *
                 C74316 +
             (C83997 + C83998 + C83999) * C153648) *
                C154037 +
            ((C152148 * C1957 - C152187 * C1948 - C152148 * C1958 +
              C153851 * C1963 + C152145 * C4383 - C152180 * C4379 -
              C152145 * C4384 + C153858 * C4391 + C152193 * C5776 -
              C83611 * C5771 - C152193 * C5777 + C83602 * C5780) *
                 C74316 +
             (C93474 + C93475 + C93476) * C153648) *
                C153897) *
               C153711 * C334) *
              C335 +
          ((((C83996 + C83995 + C83994) * C74316 +
             (C83993 + C83992 + C83991) * C153648) *
                C154037 +
            ((C85113 + C85114 + C85115) * C74316 +
             (C85116 + C85117 + C85118) * C153648) *
                C153897) *
               C153711 * C333 -
           ((C84777 * C153648 + (C84296 + C84297 + C84298) * C74316) * C153897 +
            ((C83690 + C83689 + C83688) * C153648 +
             (C83687 + C83686 + C83685) * C74316) *
                C154037) *
               C153711 * C332 -
           (((C152193 * C5772 - C83611 * C5769 - C152193 * C5773 +
              C83602 * C5778 + C152145 * C4387 - C152180 * C4381 -
              C152145 * C4388 + C153858 * C4393 + C152148 * C1953 -
              C152187 * C1946 - C152148 * C1954 + C153851 * C1961) *
                 C153648 +
             (C93476 + C93475 + C93474) * C74316) *
                C153897 +
            ((C84002 + C84001 + C84000) * C153648 +
             (C83999 + C83998 + C83997) * C74316) *
                C154037) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C153851 * C160 + C152145 * C357 - C152180 * C341 -
              C152145 * C358 + C153858 * C377 + C152193 * C359 - C83611 * C342 -
              C152193 * C360 + C83602 * C378) *
                 C74316 +
             (C83685 + C83686 + C83687) * C153648) *
                C154037 +
            ((C93829 + C93830 + C93831) * C74316 + C93810 * C153648) *
                C153897) *
               C153711 * C154092 -
           ((C94839 * C153648 + (C94848 + C94847 + C94846) * C74316) * C153897 +
            ((C83994 + C83995 + C83996) * C153648 +
             (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
              C83602 * C1390 + C152145 * C359 - C152180 * C342 -
              C152145 * C360 + C153858 * C378 + C152148 * C357 -
              C152187 * C341 - C152148 * C358 + C153851 * C377) *
                 C74316) *
                C154037) *
               C153711 * C154093 +
           (((C152148 * C359 - C152187 * C342 - C152148 * C360 +
              C153851 * C378 + C152145 * C1384 - C152180 * C1375 -
              C152145 * C1385 + C153858 * C1390 + C152193 * C3193 -
              C83611 * C3189 - C152193 * C3194 + C83602 * C3201) *
                 C74316 +
             (C83997 + C83998 + C83999) * C153648) *
                C154037 +
            ((C152148 * C1957 - C152187 * C1948 - C152148 * C1958 +
              C153851 * C1963 + C152145 * C4383 - C152180 * C4379 -
              C152145 * C4384 + C153858 * C4391 + C152193 * C5776 -
              C83611 * C5771 - C152193 * C5777 + C83602 * C5780) *
                 C74316 +
             (C93474 + C93475 + C93476) * C153648) *
                C153897) *
               C153711 * C1657) *
              C154013 +
          ((((C83996 + C83995 + C83994) * C74316 +
             (C83993 + C83992 + C83991) * C153648) *
                C154037 +
            (C94835 * C74316 + (C85116 + C85117 + C85118) * C153648) *
                C153897) *
               C153711 * C154093 -
           ((C84777 * C153648 + C93815 * C74316) * C153897 +
            ((C83690 + C83689 + C83688) * C153648 +
             (C83687 + C83686 + C83685) * C74316) *
                C154037) *
               C153711 * C154092 -
           (((C152193 * C5772 - C83611 * C5769 - C152193 * C5773 +
              C83602 * C5778 + C152145 * C4387 - C152180 * C4381 -
              C152145 * C4388 + C153858 * C4393 + C152148 * C1953 -
              C152187 * C1946 - C152148 * C1954 + C153851 * C1961) *
                 C153648 +
             (C93476 + C93475 + C93474) * C74316) *
                C153897 +
            ((C84002 + C84001 + C84000) * C153648 +
             (C83999 + C83998 + C83997) * C74316) *
                C154037) *
               C153711 * C1657) *
              C153682)) /
        (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C153851 * C160 + C152145 * C357 - C152180 * C341 -
              C152145 * C358 + C153858 * C377 + C152193 * C359 - C83611 * C342 -
              C152193 * C360 + C83602 * C378) *
                 C74316 +
             (C83685 + C83686 + C83687) * C153648) *
                C154037 +
            ((C93829 + C93830 + C93831) * C74316 + C93810 * C153648) *
                C153897) *
               C154022 -
           ((C93811 * C153648 + (C93832 + C93833 + C93834) * C74316) * C153897 +
            (C93815 * C153648 + (C93831 + C93830 + C93829) * C74316) *
                C154037) *
               C153775) *
              C154092 +
          ((((C94846 + C94847 + C94848) * C74316 + C94835 * C153648) * C154037 +
            ((C95644 + C95645 + C95646) * C74316 +
             (C94849 + C94850 + C94851) * C153648) *
                C153897) *
               C153775 -
           ((C94839 * C153648 + (C94848 + C94847 + C94846) * C74316) * C153897 +
            ((C83994 + C83995 + C83996) * C153648 +
             (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
              C83602 * C1390 + C152145 * C359 - C152180 * C342 -
              C152145 * C360 + C153858 * C378 + C152148 * C357 -
              C152187 * C341 - C152148 * C358 + C153851 * C377) *
                 C74316) *
                C154037) *
               C154022) *
              C154093 +
          ((((C152148 * C359 - C152187 * C342 - C152148 * C360 +
              C153851 * C378 + C152145 * C1384 - C152180 * C1375 -
              C152145 * C1385 + C153858 * C1390 + C152193 * C3193 -
              C83611 * C3189 - C152193 * C3194 + C83602 * C3201) *
                 C74316 +
             (C83997 + C83998 + C83999) * C153648) *
                C154037 +
            ((C96631 + C96632 + C96633) * C74316 +
             (C93474 + C93475 + C93476) * C153648) *
                C153897) *
               C154022 -
           (((C152193 * C28694 - C83611 * C28691 - C152193 * C28695 +
              C83602 * C28697 + C152145 * C5036 - C152180 * C5032 -
              C152145 * C5037 + C153858 * C5041 + C152148 * C3513 -
              C152187 * C3508 - C152148 * C3514 + C153851 * C3520) *
                 C153648 +
             (C152193 * C28692 - C83611 * C28690 - C152193 * C28693 +
              C83602 * C28696 + C152145 * C5038 - C152180 * C5033 -
              C152145 * C5039 + C153858 * C5042 + C152148 * C3511 -
              C152187 * C3507 - C152148 * C3512 + C153851 * C3519) *
                 C74316) *
                C153897 +
            ((C93476 + C93475 + C93474) * C153648 +
             (C96633 + C96632 + C96631) * C74316) *
                C154037) *
               C153775) *
              C1657) *
         C153676) /
        (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C74316 +
            (C83685 + C83686 + C83687) * C153648) *
               C154037 +
           ((C93829 + C93830 + C93831) * C74316 + C93810 * C153648) * C153897) *
              C153711 * C1366 -
          ((C94839 * C153648 + (C94848 + C94847 + C94846) * C74316) * C153897 +
           ((C83994 + C83995 + C83996) * C153648 +
            (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
             C83602 * C1390 + C152145 * C359 - C152180 * C342 - C152145 * C360 +
             C153858 * C378 + C152148 * C357 - C152187 * C341 - C152148 * C358 +
             C153851 * C377) *
                C74316) *
               C154037) *
              C153711 * C1367 +
          (((C152148 * C359 - C152187 * C342 - C152148 * C360 + C153851 * C378 +
             C152145 * C1384 - C152180 * C1375 - C152145 * C1385 +
             C153858 * C1390 + C152193 * C3193 - C83611 * C3189 -
             C152193 * C3194 + C83602 * C3201) *
                C74316 +
            (C83997 + C83998 + C83999) * C153648) *
               C154037 +
           ((C152148 * C1957 - C152187 * C1948 - C152148 * C1958 +
             C153851 * C1963 + C152145 * C4383 - C152180 * C4379 -
             C152145 * C4384 + C153858 * C4391 + C152193 * C5776 -
             C83611 * C5771 - C152193 * C5777 + C83602 * C5780) *
                C74316 +
            (C93474 + C93475 + C93476) * C153648) *
               C153897) *
              C153711 * C1368 -
          (((C152193 * C29108 - C83611 * C29105 - C152193 * C29109 +
             C83602 * C29111 + C152145 * C5774 - C152180 * C5770 -
             C152145 * C5775 + C153858 * C5779 + C152148 * C4385 -
             C152187 * C4380 - C152148 * C4386 + C153851 * C4392) *
                C153648 +
            (C152193 * C29106 - C83611 * C29104 - C152193 * C29107 +
             C83602 * C29110 + C152145 * C5776 - C152180 * C5771 -
             C152145 * C5777 + C153858 * C5780 + C152148 * C4383 -
             C152187 * C4379 - C152148 * C4384 + C153851 * C4391) *
                C74316) *
               C153897 +
           ((C152193 * C4806 - C83611 * C4802 - C152193 * C4807 +
             C83602 * C4811 + C152145 * C3195 - C152180 * C3190 -
             C152145 * C3196 + C153858 * C3202 + C152148 * C1382 -
             C152187 * C1374 - C152148 * C1383 + C153851 * C1389) *
                C153648 +
            (C152193 * C4808 - C83611 * C4803 - C152193 * C4809 +
             C83602 * C4812 + C152145 * C3193 - C152180 * C3189 -
             C152145 * C3194 + C153858 * C3201 + C152148 * C1384 -
             C152187 * C1375 - C152148 * C1385 + C153851 * C1390) *
                C74316) *
               C154037) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C153851 * C160 + C152145 * C357 - C152180 * C341 -
              C152145 * C358 + C153858 * C377 + C152193 * C359 - C83611 * C342 -
              C152193 * C360 + C83602 * C378) *
                 C74316 +
             (C83685 + C83686 + C83687) * C153648) *
                C154037 +
            ((C93829 + C93830 + C93831) * C74316 + C93810 * C153648) *
                C153897) *
               C153711 * C1279 -
           ((C94839 * C153648 + (C94848 + C94847 + C94846) * C74316) * C153897 +
            ((C83994 + C83995 + C83996) * C153648 +
             (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
              C83602 * C1390 + C152145 * C359 - C152180 * C342 -
              C152145 * C360 + C153858 * C378 + C152148 * C357 -
              C152187 * C341 - C152148 * C358 + C153851 * C377) *
                 C74316) *
                C154037) *
               C153711 * C153747) *
              C1281 +
          ((((C83996 + C83995 + C83994) * C74316 +
             (C83993 + C83992 + C83991) * C153648) *
                C154037 +
            (C94835 * C74316 + (C85116 + C85117 + C85118) * C153648) *
                C153897) *
               C153711 * C153747 -
           ((C84777 * C153648 + C93815 * C74316) * C153897 +
            ((C83690 + C83689 + C83688) * C153648 +
             (C83687 + C83686 + C83685) * C74316) *
                C154037) *
               C153711 * C1279) *
              C1282 +
          (((C83699 * C74316 + (C83693 + C83692 + C83691) * C153648) * C154037 +
            (C94419 * C74316 + (C84784 + C84785 + C84786) * C153648) *
                C153897) *
               C153711 * C1279 -
           (((C152193 * C4389 - C83611 * C4382 - C152193 * C4390 +
              C83602 * C4394 + C152145 * C1951 - C152180 * C1945 -
              C152145 * C1952 + C153858 * C1960 + C152148 * C1117 -
              C152187 * C1108 - C152148 * C1118 + C153851 * C1126) *
                 C153648 +
             (C85118 + C85117 + C85116) * C74316) *
                C153897 +
            ((C84545 + C84544 + C84543) * C153648 + C84536 * C74316) *
                C154037) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C153851 * C160 + C152145 * C357 - C152180 * C341 -
              C152145 * C358 + C153858 * C377 + C152193 * C359 - C83611 * C342 -
              C152193 * C360 + C83602 * C378) *
                 C74316 +
             (C83685 + C83686 + C83687) * C153648) *
                C154037 +
            ((C93829 + C93830 + C93831) * C74316 + C93810 * C153648) *
                C153897) *
               C563 -
           ((C93811 * C153648 + (C93832 + C93833 + C93834) * C74316) * C153897 +
            (C93815 * C153648 + (C93831 + C93830 + C93829) * C74316) *
                C154037) *
               C564 +
           (((C93834 + C93833 + C93832) * C74316 + C93816 * C153648) * C154037 +
            ((C152148 * C2309 - C152187 * C2300 - C152148 * C2310 +
              C153851 * C2315 + C152145 * C6379 - C152180 * C6368 -
              C152145 * C6380 + C153858 * C6386 + C152193 * C6377 -
              C83611 * C6367 - C152193 * C6378 + C83602 * C6385) *
                 C74316 +
             (C93835 + C93836 + C93837) * C153648) *
                C153897) *
               C565) *
              C1279 +
          ((((C94846 + C94847 + C94848) * C74316 + C94835 * C153648) * C154037 +
            ((C95644 + C95645 + C95646) * C74316 +
             (C94849 + C94850 + C94851) * C153648) *
                C153897) *
               C564 -
           ((C94839 * C153648 + (C94848 + C94847 + C94846) * C74316) * C153897 +
            ((C83994 + C83995 + C83996) * C153648 +
             (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
              C83602 * C1390 + C152145 * C359 - C152180 * C342 -
              C152145 * C360 + C153858 * C378 + C152148 * C357 -
              C152187 * C341 - C152148 * C358 + C153851 * C377) *
                 C74316) *
                C154037) *
               C563 -
           (((C152193 * C32003 - C83611 * C32002 - C152193 * C32004 +
              C83602 * C32005 + C152145 * C6373 - C152180 * C6365 -
              C152145 * C6374 + C153858 * C6383 + C152148 * C6375 -
              C152187 * C6366 - C152148 * C6376 + C153851 * C6384) *
                 C153648 +
             (C152193 * C30186 - C83611 * C30183 - C152193 * C30187 +
              C83602 * C30189 + C152145 * C6377 - C152180 * C6367 -
              C152145 * C6378 + C153858 * C6385 + C152148 * C6379 -
              C152187 * C6368 - C152148 * C6380 + C153851 * C6386) *
                 C74316) *
                C153897 +
            ((C94851 + C94850 + C94849) * C153648 +
             (C95646 + C95645 + C95644) * C74316) *
                C154037) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[23] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
                       C153851 * C160 + C152145 * C357 - C152180 * C341 -
                       C152145 * C358 + C153858 * C377 + C152193 * C359 -
                       C83611 * C342 - C152193 * C360 + C83602 * C378) *
                          C74316 +
                      (C83685 + C83686 + C83687) * C153648) *
                         C154037 +
                     ((C93829 + C93830 + C93831) * C74316 + C93810 * C153648) *
                         C153897) *
                        C154022 -
                    ((C93811 * C153648 + (C93832 + C93833 + C93834) * C74316) *
                         C153897 +
                     (C93815 * C153648 + (C93831 + C93830 + C93829) * C74316) *
                         C154037) *
                        C153775) *
                       C1279 +
                   ((((C94846 + C94847 + C94848) * C74316 + C94835 * C153648) *
                         C154037 +
                     ((C95644 + C95645 + C95646) * C74316 +
                      (C94849 + C94850 + C94851) * C153648) *
                         C153897) *
                        C153775 -
                    ((C94839 * C153648 + (C94848 + C94847 + C94846) * C74316) *
                         C153897 +
                     ((C83994 + C83995 + C83996) * C153648 +
                      (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
                       C83602 * C1390 + C152145 * C359 - C152180 * C342 -
                       C152145 * C360 + C153858 * C378 + C152148 * C357 -
                       C152187 * C341 - C152148 * C358 + C153851 * C377) *
                          C74316) *
                         C154037) *
                        C154022) *
                       C153747) *
                      C154013 +
                  ((((C93810 * C74316 + C94419 * C153648) * C154037 +
                     (C93816 * C74316 + (C84302 + C84303 + C84304) * C153648) *
                         C153897) *
                        C153775 -
                    ((C84777 * C153648 + C93815 * C74316) * C153897 +
                     ((C83690 + C83689 + C83688) * C153648 +
                      (C83687 + C83686 + C83685) * C74316) *
                         C154037) *
                        C154022) *
                       C1279 +
                   ((((C83996 + C83995 + C83994) * C74316 +
                      (C83993 + C83992 + C83991) * C153648) *
                         C154037 +
                     (C94835 * C74316 + (C85116 + C85117 + C85118) * C153648) *
                         C153897) *
                        C154022 -
                    (((C152193 * C5034 - C83611 * C5031 - C152193 * C5035 +
                       C83602 * C5040 + C152145 * C3515 - C152180 * C3509 -
                       C152145 * C3516 + C153858 * C3521 + C152148 * C1522 -
                       C152187 * C1515 - C152148 * C1523 + C153851 * C1530) *
                          C153648 +
                      (C94851 + C94850 + C94849) * C74316) *
                         C153897 +
                     ((C85118 + C85117 + C85116) * C153648 + C94839 * C74316) *
                         C154037) *
                        C153775) *
                       C153747) *
                      C153682)) /
                (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C153851 * C160 + C152145 * C357 - C152180 * C341 -
              C152145 * C358 + C153858 * C377 + C152193 * C359 - C83611 * C342 -
              C152193 * C360 + C83602 * C378) *
                 C74316 +
             (C83685 + C83686 + C83687) * C153648) *
                C154037 +
            ((C93829 + C93830 + C93831) * C74316 + C93810 * C153648) *
                C153897) *
               C153711 * C1279 -
           ((C94839 * C153648 + (C94848 + C94847 + C94846) * C74316) * C153897 +
            ((C83994 + C83995 + C83996) * C153648 +
             (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
              C83602 * C1390 + C152145 * C359 - C152180 * C342 -
              C152145 * C360 + C153858 * C378 + C152148 * C357 -
              C152187 * C341 - C152148 * C358 + C153851 * C377) *
                 C74316) *
                C154037) *
               C153711 * C153747) *
              C1281 +
          ((((C83996 + C83995 + C83994) * C74316 +
             (C83993 + C83992 + C83991) * C153648) *
                C154037 +
            (C94835 * C74316 + (C85116 + C85117 + C85118) * C153648) *
                C153897) *
               C153711 * C153747 -
           ((C84777 * C153648 + C93815 * C74316) * C153897 +
            ((C83690 + C83689 + C83688) * C153648 +
             (C83687 + C83686 + C83685) * C74316) *
                C154037) *
               C153711 * C1279) *
              C1282 +
          (((C83699 * C74316 + (C83693 + C83692 + C83691) * C153648) * C154037 +
            (C94419 * C74316 + (C84784 + C84785 + C84786) * C153648) *
                C153897) *
               C153711 * C1279 -
           (((C152193 * C4389 - C83611 * C4382 - C152193 * C4390 +
              C83602 * C4394 + C152145 * C1951 - C152180 * C1945 -
              C152145 * C1952 + C153858 * C1960 + C152148 * C1117 -
              C152187 * C1108 - C152148 * C1118 + C153851 * C1126) *
                 C153648 +
             (C85118 + C85117 + C85116) * C74316) *
                C153897 +
            ((C84545 + C84544 + C84543) * C153648 + C84536 * C74316) *
                C154037) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C74316 +
            (C83685 + C83686 + C83687) * C153648) *
               C154037 +
           ((C93829 + C93830 + C93831) * C74316 + C93810 * C153648) * C153897) *
              C153711 * C1366 -
          ((C94839 * C153648 + (C94848 + C94847 + C94846) * C74316) * C153897 +
           ((C83994 + C83995 + C83996) * C153648 +
            (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
             C83602 * C1390 + C152145 * C359 - C152180 * C342 - C152145 * C360 +
             C153858 * C378 + C152148 * C357 - C152187 * C341 - C152148 * C358 +
             C153851 * C377) *
                C74316) *
               C154037) *
              C153711 * C1367 +
          (((C152148 * C359 - C152187 * C342 - C152148 * C360 + C153851 * C378 +
             C152145 * C1384 - C152180 * C1375 - C152145 * C1385 +
             C153858 * C1390 + C152193 * C3193 - C83611 * C3189 -
             C152193 * C3194 + C83602 * C3201) *
                C74316 +
            (C83997 + C83998 + C83999) * C153648) *
               C154037 +
           ((C152148 * C1957 - C152187 * C1948 - C152148 * C1958 +
             C153851 * C1963 + C152145 * C4383 - C152180 * C4379 -
             C152145 * C4384 + C153858 * C4391 + C152193 * C5776 -
             C83611 * C5771 - C152193 * C5777 + C83602 * C5780) *
                C74316 +
            (C93474 + C93475 + C93476) * C153648) *
               C153897) *
              C153711 * C1368 -
          (((C152193 * C29108 - C83611 * C29105 - C152193 * C29109 +
             C83602 * C29111 + C152145 * C5774 - C152180 * C5770 -
             C152145 * C5775 + C153858 * C5779 + C152148 * C4385 -
             C152187 * C4380 - C152148 * C4386 + C153851 * C4392) *
                C153648 +
            (C152193 * C29106 - C83611 * C29104 - C152193 * C29107 +
             C83602 * C29110 + C152145 * C5776 - C152180 * C5771 -
             C152145 * C5777 + C153858 * C5780 + C152148 * C4383 -
             C152187 * C4379 - C152148 * C4384 + C153851 * C4391) *
                C74316) *
               C153897 +
           ((C152193 * C4806 - C83611 * C4802 - C152193 * C4807 +
             C83602 * C4811 + C152145 * C3195 - C152180 * C3190 -
             C152145 * C3196 + C153858 * C3202 + C152148 * C1382 -
             C152187 * C1374 - C152148 * C1383 + C153851 * C1389) *
                C153648 +
            (C152193 * C4808 - C83611 * C4803 - C152193 * C4809 +
             C83602 * C4812 + C152145 * C3193 - C152180 * C3189 -
             C152145 * C3194 + C153858 * C3201 + C152148 * C1384 -
             C152187 * C1375 - C152148 * C1385 + C153851 * C1390) *
                C74316) *
               C154037) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[25] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
                       C153851 * C160 + C152145 * C357 - C152180 * C341 -
                       C152145 * C358 + C153858 * C377 + C152193 * C359 -
                       C83611 * C342 - C152193 * C360 + C83602 * C378) *
                          C74316 +
                      (C83685 + C83686 + C83687) * C153648) *
                         C154037 +
                     ((C93829 + C93830 + C93831) * C74316 + C93810 * C153648) *
                         C153897) *
                        C2086 -
                    ((C93811 * C153648 + (C93832 + C93833 + C93834) * C74316) *
                         C153897 +
                     (C93815 * C153648 + (C93831 + C93830 + C93829) * C74316) *
                         C154037) *
                        C153775) *
                       C154021 +
                   ((((C94846 + C94847 + C94848) * C74316 + C94835 * C153648) *
                         C154037 +
                     ((C95644 + C95645 + C95646) * C74316 +
                      (C94849 + C94850 + C94851) * C153648) *
                         C153897) *
                        C153775 -
                    ((C94839 * C153648 + (C94848 + C94847 + C94846) * C74316) *
                         C153897 +
                     ((C83994 + C83995 + C83996) * C153648 +
                      (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
                       C83602 * C1390 + C152145 * C359 - C152180 * C342 -
                       C152145 * C360 + C153858 * C378 + C152148 * C357 -
                       C152187 * C341 - C152148 * C358 + C153851 * C377) *
                          C74316) *
                         C154037) *
                        C2086) *
                       C153747) *
                      C154013 +
                  ((((C93810 * C74316 + C94419 * C153648) * C154037 +
                     (C93816 * C74316 + (C84302 + C84303 + C84304) * C153648) *
                         C153897) *
                        C153775 -
                    ((C84777 * C153648 + C93815 * C74316) * C153897 +
                     ((C83690 + C83689 + C83688) * C153648 +
                      (C83687 + C83686 + C83685) * C74316) *
                         C154037) *
                        C2086) *
                       C154021 +
                   ((((C83996 + C83995 + C83994) * C74316 +
                      (C83993 + C83992 + C83991) * C153648) *
                         C154037 +
                     (C94835 * C74316 + (C85116 + C85117 + C85118) * C153648) *
                         C153897) *
                        C2086 -
                    (((C152193 * C5034 - C83611 * C5031 - C152193 * C5035 +
                       C83602 * C5040 + C152145 * C3515 - C152180 * C3509 -
                       C152145 * C3516 + C153858 * C3521 + C152148 * C1522 -
                       C152187 * C1515 - C152148 * C1523 + C153851 * C1530) *
                          C153648 +
                      (C94851 + C94850 + C94849) * C74316) *
                         C153897 +
                     ((C85118 + C85117 + C85116) * C153648 + C94839 * C74316) *
                         C154037) *
                        C153775) *
                       C153747) *
                      C153682)) /
                (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C153851 * C160 + C152145 * C357 - C152180 * C341 -
              C152145 * C358 + C153858 * C377 + C152193 * C359 - C83611 * C342 -
              C152193 * C360 + C83602 * C378) *
                 C74316 +
             (C83685 + C83686 + C83687) * C153648) *
                C154037 +
            ((C93829 + C93830 + C93831) * C74316 + C93810 * C153648) *
                C153897) *
               C154094 -
           ((C93811 * C153648 + (C93832 + C93833 + C93834) * C74316) * C153897 +
            (C93815 * C153648 + (C93831 + C93830 + C93829) * C74316) *
                C154037) *
               C154095 +
           (((C93834 + C93833 + C93832) * C74316 + C93816 * C153648) * C154037 +
            ((C97426 + C97427 + C97428) * C74316 +
             (C93835 + C93836 + C93837) * C153648) *
                C153897) *
               C2602) *
              C154021 +
          ((((C94846 + C94847 + C94848) * C74316 + C94835 * C153648) * C154037 +
            ((C95644 + C95645 + C95646) * C74316 +
             (C94849 + C94850 + C94851) * C153648) *
                C153897) *
               C154095 -
           ((C94839 * C153648 + (C94848 + C94847 + C94846) * C74316) * C153897 +
            ((C83994 + C83995 + C83996) * C153648 +
             (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
              C83602 * C1390 + C152145 * C359 - C152180 * C342 -
              C152145 * C360 + C153858 * C378 + C152148 * C357 -
              C152187 * C341 - C152148 * C358 + C153851 * C377) *
                 C74316) *
                C154037) *
               C154094 -
           (((C152193 * C32003 - C83611 * C32002 - C152193 * C32004 +
              C83602 * C32005 + C152145 * C6373 - C152180 * C6365 -
              C152145 * C6374 + C153858 * C6383 + C152148 * C6375 -
              C152187 * C6366 - C152148 * C6376 + C153851 * C6384) *
                 C153648 +
             (C152193 * C30186 - C83611 * C30183 - C152193 * C30187 +
              C83602 * C30189 + C152145 * C6377 - C152180 * C6367 -
              C152145 * C6378 + C153858 * C6385 + C152148 * C6379 -
              C152187 * C6368 - C152148 * C6380 + C153851 * C6386) *
                 C74316) *
                C153897 +
            ((C94851 + C94850 + C94849) * C153648 +
             (C95646 + C95645 + C95644) * C74316) *
                C154037) *
               C2602) *
              C153747) *
         C153676) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C153851 * C160 + C152145 * C357 - C152180 * C341 -
              C152145 * C358 + C153858 * C377 + C152193 * C359 - C83611 * C342 -
              C152193 * C360 + C83602 * C378) *
                 C74316 +
             (C83685 + C83686 + C83687) * C153648) *
                C154037 +
            ((C93829 + C93830 + C93831) * C74316 + C93810 * C153648) *
                C153897) *
               C2086 -
           ((C93811 * C153648 + (C93832 + C93833 + C93834) * C74316) * C153897 +
            (C93815 * C153648 + (C93831 + C93830 + C93829) * C74316) *
                C154037) *
               C153775) *
              C332 +
          ((((C94846 + C94847 + C94848) * C74316 + C94835 * C153648) * C154037 +
            ((C95644 + C95645 + C95646) * C74316 +
             (C94849 + C94850 + C94851) * C153648) *
                C153897) *
               C153775 -
           ((C94839 * C153648 + (C94848 + C94847 + C94846) * C74316) * C153897 +
            ((C83994 + C83995 + C83996) * C153648 +
             (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
              C83602 * C1390 + C152145 * C359 - C152180 * C342 -
              C152145 * C360 + C153858 * C378 + C152148 * C357 -
              C152187 * C341 - C152148 * C358 + C153851 * C377) *
                 C74316) *
                C154037) *
               C2086) *
              C333 +
          ((((C152148 * C359 - C152187 * C342 - C152148 * C360 +
              C153851 * C378 + C152145 * C1384 - C152180 * C1375 -
              C152145 * C1385 + C153858 * C1390 + C152193 * C3193 -
              C83611 * C3189 - C152193 * C3194 + C83602 * C3201) *
                 C74316 +
             (C83997 + C83998 + C83999) * C153648) *
                C154037 +
            ((C96631 + C96632 + C96633) * C74316 +
             (C93474 + C93475 + C93476) * C153648) *
                C153897) *
               C2086 -
           (((C152193 * C28694 - C83611 * C28691 - C152193 * C28695 +
              C83602 * C28697 + C152145 * C5036 - C152180 * C5032 -
              C152145 * C5037 + C153858 * C5041 + C152148 * C3513 -
              C152187 * C3508 - C152148 * C3514 + C153851 * C3520) *
                 C153648 +
             (C152193 * C28692 - C83611 * C28690 - C152193 * C28693 +
              C83602 * C28696 + C152145 * C5038 - C152180 * C5033 -
              C152145 * C5039 + C153858 * C5042 + C152148 * C3511 -
              C152187 * C3507 - C152148 * C3512 + C153851 * C3519) *
                 C74316) *
                C153897 +
            ((C93476 + C93475 + C93474) * C153648 +
             (C96633 + C96632 + C96631) * C74316) *
                C154037) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C153851 * C160 + C152145 * C357 - C152180 * C341 -
              C152145 * C358 + C153858 * C377 + C152193 * C359 - C83611 * C342 -
              C152193 * C360 + C83602 * C378) *
                 C74316 +
             (C83685 + C83686 + C83687) * C153648) *
                C154037 +
            ((C93829 + C93830 + C93831) * C74316 + C93810 * C153648) *
                C153897) *
               C2086 -
           ((C93811 * C153648 + (C93832 + C93833 + C93834) * C74316) * C153897 +
            (C93815 * C153648 + (C93831 + C93830 + C93829) * C74316) *
                C154037) *
               C153775) *
              C153695 * C1281 +
          (((C93810 * C74316 + C94419 * C153648) * C154037 +
            (C93816 * C74316 + (C84302 + C84303 + C84304) * C153648) *
                C153897) *
               C153775 -
           ((C84777 * C153648 + C93815 * C74316) * C153897 +
            ((C83690 + C83689 + C83688) * C153648 +
             (C83687 + C83686 + C83685) * C74316) *
                C154037) *
               C2086) *
              C153695 * C1282 +
          (((C83699 * C74316 + (C83693 + C83692 + C83691) * C153648) * C154037 +
            (C94419 * C74316 + (C84784 + C84785 + C84786) * C153648) *
                C153897) *
               C2086 -
           (((C152193 * C3517 - C83611 * C3510 - C152193 * C3518 +
              C83602 * C3522 + C152145 * C1520 - C152180 * C1514 -
              C152145 * C1521 + C153858 * C1529 + C152148 * C594 -
              C152187 * C574 - C152148 * C595 + C153851 * C610) *
                 C153648 +
             (C84304 + C84303 + C84302) * C74316) *
                C153897 +
            ((C84786 + C84785 + C84784) * C153648 + C84777 * C74316) *
                C154037) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C74316 +
            (C83685 + C83686 + C83687) * C153648) *
               C154037 +
           ((C93829 + C93830 + C93831) * C74316 + C93810 * C153648) * C153897) *
              C2292 -
          ((C93811 * C153648 + (C93832 + C93833 + C93834) * C74316) * C153897 +
           (C93815 * C153648 + (C93831 + C93830 + C93829) * C74316) * C154037) *
              C2293 +
          (((C93834 + C93833 + C93832) * C74316 + C93816 * C153648) * C154037 +
           ((C97426 + C97427 + C97428) * C74316 +
            (C93835 + C93836 + C93837) * C153648) *
               C153897) *
              C2294 -
          (((C152193 * C31182 - C83611 * C31179 - C152193 * C31183 +
             C83602 * C31185 + C152145 * C9204 - C152180 * C9200 -
             C152145 * C9205 + C153858 * C9209 + C152148 * C7746 -
             C152187 * C7741 - C152148 * C7747 + C153851 * C7753) *
                C153648 +
            (C152193 * C31180 - C83611 * C31178 - C152193 * C31181 +
             C83602 * C31184 + C152145 * C9206 - C152180 * C9201 -
             C152145 * C9207 + C153858 * C9210 + C152148 * C7744 -
             C152187 * C7740 - C152148 * C7745 + C153851 * C7752) *
                C74316) *
               C153897 +
           ((C93837 + C93836 + C93835) * C153648 +
            (C97428 + C97427 + C97426) * C74316) *
               C154037) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C153851 * C160 + C152145 * C357 - C152180 * C341 -
              C152145 * C358 + C153858 * C377 + C152193 * C359 - C83611 * C342 -
              C152193 * C360 + C83602 * C378) *
                 C74316 +
             (C83685 + C83686 + C83687) * C153648) *
                C154037 +
            ((C93829 + C93830 + C93831) * C74316 + C93810 * C153648) *
                C153897) *
               C154094 -
           ((C93811 * C153648 + (C93832 + C93833 + C93834) * C74316) * C153897 +
            (C93815 * C153648 + (C93831 + C93830 + C93829) * C74316) *
                C154037) *
               C154095 +
           (((C93834 + C93833 + C93832) * C74316 + C93816 * C153648) * C154037 +
            ((C97426 + C97427 + C97428) * C74316 +
             (C93835 + C93836 + C93837) * C153648) *
                C153897) *
               C2602) *
              C153695 * C154013 +
          (((C93810 * C74316 + C94419 * C153648) * C154037 +
            (C93816 * C74316 + (C84302 + C84303 + C84304) * C153648) *
                C153897) *
               C154095 -
           ((C84777 * C153648 + C93815 * C74316) * C153897 +
            ((C83690 + C83689 + C83688) * C153648 +
             (C83687 + C83686 + C83685) * C74316) *
                C154037) *
               C154094 -
           (((C152193 * C6369 - C83611 * C6363 - C152193 * C6370 +
              C83602 * C6381 + C152145 * C6371 - C152180 * C6364 -
              C152145 * C6372 + C153858 * C6382 + C152148 * C2305 -
              C152187 * C2298 - C152148 * C2306 + C153851 * C2313) *
                 C153648 +
             (C93837 + C93836 + C93835) * C74316) *
                C153897 +
            ((C84304 + C84303 + C84302) * C153648 + C93811 * C74316) *
                C154037) *
               C2602) *
              C153695 * C153682)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C153851 * C160 + C152145 * C357 - C152180 * C341 -
              C152145 * C358 + C153858 * C377 + C152193 * C359 - C83611 * C342 -
              C152193 * C360 + C83602 * C378) *
                 C74316 +
             (C83685 + C83686 + C83687) * C153648) *
                C154037 +
            ((C93829 + C93830 + C93831) * C74316 + C93810 * C153648) *
                C153897) *
               C2086 -
           ((C93811 * C153648 + (C93832 + C93833 + C93834) * C74316) * C153897 +
            (C93815 * C153648 + (C93831 + C93830 + C93829) * C74316) *
                C154037) *
               C153775) *
              C153695 * C1281 +
          (((C93810 * C74316 + C94419 * C153648) * C154037 +
            (C93816 * C74316 + (C84302 + C84303 + C84304) * C153648) *
                C153897) *
               C153775 -
           ((C84777 * C153648 + C93815 * C74316) * C153897 +
            ((C83690 + C83689 + C83688) * C153648 +
             (C83687 + C83686 + C83685) * C74316) *
                C154037) *
               C2086) *
              C153695 * C1282 +
          (((C83699 * C74316 + (C83693 + C83692 + C83691) * C153648) * C154037 +
            (C94419 * C74316 + (C84784 + C84785 + C84786) * C153648) *
                C153897) *
               C2086 -
           (((C152193 * C3517 - C83611 * C3510 - C152193 * C3518 +
              C83602 * C3522 + C152145 * C1520 - C152180 * C1514 -
              C152145 * C1521 + C153858 * C1529 + C152148 * C594 -
              C152187 * C574 - C152148 * C595 + C153851 * C610) *
                 C153648 +
             (C84304 + C84303 + C84302) * C74316) *
                C153897 +
            ((C84786 + C84785 + C84784) * C153648 + C84777 * C74316) *
                C154037) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C153851 * C160 + C152145 * C357 - C152180 * C341 -
              C152145 * C358 + C153858 * C377 + C152193 * C359 - C83611 * C342 -
              C152193 * C360 + C83602 * C378) *
                 C74316 +
             (C83685 + C83686 + C83687) * C153648) *
                C154037 +
            ((C93829 + C93830 + C93831) * C74316 + C93810 * C153648) *
                C153897) *
               C2086 -
           ((C93811 * C153648 + (C93832 + C93833 + C93834) * C74316) * C153897 +
            (C93815 * C153648 + (C93831 + C93830 + C93829) * C74316) *
                C154037) *
               C153775) *
              C332 +
          ((((C94846 + C94847 + C94848) * C74316 + C94835 * C153648) * C154037 +
            ((C95644 + C95645 + C95646) * C74316 +
             (C94849 + C94850 + C94851) * C153648) *
                C153897) *
               C153775 -
           ((C94839 * C153648 + (C94848 + C94847 + C94846) * C74316) * C153897 +
            ((C83994 + C83995 + C83996) * C153648 +
             (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
              C83602 * C1390 + C152145 * C359 - C152180 * C342 -
              C152145 * C360 + C153858 * C378 + C152148 * C357 -
              C152187 * C341 - C152148 * C358 + C153851 * C377) *
                 C74316) *
                C154037) *
               C2086) *
              C333 +
          ((((C152148 * C359 - C152187 * C342 - C152148 * C360 +
              C153851 * C378 + C152145 * C1384 - C152180 * C1375 -
              C152145 * C1385 + C153858 * C1390 + C152193 * C3193 -
              C83611 * C3189 - C152193 * C3194 + C83602 * C3201) *
                 C74316 +
             (C83997 + C83998 + C83999) * C153648) *
                C154037 +
            ((C96631 + C96632 + C96633) * C74316 +
             (C93474 + C93475 + C93476) * C153648) *
                C153897) *
               C2086 -
           (((C152193 * C28694 - C83611 * C28691 - C152193 * C28695 +
              C83602 * C28697 + C152145 * C5036 - C152180 * C5032 -
              C152145 * C5037 + C153858 * C5041 + C152148 * C3513 -
              C152187 * C3508 - C152148 * C3514 + C153851 * C3520) *
                 C153648 +
             (C152193 * C28692 - C83611 * C28690 - C152193 * C28693 +
              C83602 * C28696 + C152145 * C5038 - C152180 * C5033 -
              C152145 * C5039 + C153858 * C5042 + C152148 * C3511 -
              C152187 * C3507 - C152148 * C3512 + C153851 * C3519) *
                 C74316) *
                C153897 +
            ((C93476 + C93475 + C93474) * C153648 +
             (C96633 + C96632 + C96631) * C74316) *
                C154037) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C74316 +
            (C74399 + C74400 + C74401 + C74402) * C153648) *
               C153810 * C153711 * C154021 -
           ((C74653 + C74654 + C74655 + C74656) * C153648 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C74316) *
               C153810 * C153711 * C153747) *
              C154090 +
          (((C74656 + C74655 + C74654 + C74653) * C74316 +
            (C75129 + C75130 + C75131 + C75132) * C153648) *
               C153810 * C153711 * C153747 -
           ((C74403 + C74404 + C74405 + C74406) * C153648 +
            (C74402 + C74401 + C74400 + C74399) * C74316) *
               C153810 * C153711 * C154021) *
              C154091 +
          (((C74406 + C74405 + C74404 + C74403) * C74316 +
            (C74407 + C74408 + C74409 + C74410) * C153648) *
               C153810 * C153711 * C154021 -
           ((C74324 * C3199 - C74325 * C3192 - C74324 * C3200 +
             C154044 * C3204 + C74322 * C1378 - C74323 * C1372 -
             C74322 * C1379 + C154102 * C1387 + C74320 * C365 - C74321 * C345 -
             C74320 * C366 + C154112 * C381 + C74318 * C351 - C74319 * C338 -
             C74318 * C352 + C154116 * C374) *
                C153648 +
            (C75132 + C75131 + C75130 + C75129) * C74316) *
               C153810 * C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154115 +
            (C70565 + C70566) * C154108 + C70575 * C154089 + C70576 * C154036) *
               C153810 * C153711 * C154021 -
           (C71329 * C154036 + C71330 * C154089 + (C70849 + C70850) * C154108 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C154115) *
               C153810 * C153711 * C153747) *
              C154090 +
          (((C70850 + C70849) * C154115 + (C70848 + C70847) * C154108 +
            (C70846 + C70845) * C154089 + (C71343 + C71344) * C154036) *
               C153810 * C153711 * C153747 -
           (C70577 * C154036 + C70578 * C154089 + (C70568 + C70567) * C154108 +
            (C70566 + C70565) * C154115) *
               C153810 * C153711 * C154021) *
              C154091 +
          ((C70575 * C154115 + C70576 * C154108 + (C70572 + C70571) * C154089 +
            (C70573 + C70574) * C154036) *
               C153810 * C153711 * C154021 -
           ((C70502 * C371 - C70503 * C348 - C70502 * C372 + C153855 * C384 +
             C70500 * C369 - C70501 * C347 - C70500 * C370 + C70494 * C383) *
                C154036 +
            (C71344 + C71343) * C154089 + C71329 * C154108 + C71330 * C154115) *
               C153810 * C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C74316 +
             (C70565 + C70566) * C153648) *
                C154110 +
            ((C78866 + C78867) * C74316 + C78793 * C153648) * C154099 +
            C78882 * C154074) *
               C153711 * C154021 -
           (((C78489 + C78490) * C153648 +
             (C70502 * C3511 - C70503 * C3507 - C70502 * C3512 +
              C153855 * C3519 + C70500 * C1526 - C70501 * C1517 -
              C70500 * C1527 + C70494 * C1532) *
                 C74316) *
                C154074 +
            ((C71850 + C71849) * C153648 +
             (C70502 * C1957 - C70503 * C1948 - C70502 * C1958 +
              C153855 * C1963 + C70500 * C1111 - C70501 * C1105 -
              C70500 * C1112 + C70494 * C1123) *
                 C74316) *
                C154099 +
            ((C70849 + C70850) * C153648 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C74316) *
                C154110) *
               C153711 * C153747) *
              C154090 +
          ((((C70850 + C70849) * C74316 + (C70848 + C70847) * C153648) *
                C154110 +
            ((C71849 + C71850) * C74316 + (C71851 + C71852) * C153648) *
                C154099 +
            ((C78490 + C78489) * C74316 + (C79185 + C79186) * C153648) *
                C154074) *
               C153711 * C153747 -
           (C78865 * C154074 + (C71540 * C153648 + C78820 * C74316) * C154099 +
            ((C70568 + C70567) * C153648 + (C70566 + C70565) * C74316) *
                C154110) *
               C153711 * C154021) *
              C154091 +
          (((C70575 * C74316 + C70576 * C153648) * C154110 +
            ((C71126 + C71125) * C74316 + (C71124 + C71123) * C153648) *
                C154099 +
            ((C71131 + C71132) * C74316 + (C71133 + C71134) * C153648) *
                C154074) *
               C153711 * C154021 -
           (((C70502 * C3517 - C70503 * C3510 - C70502 * C3518 +
              C153855 * C3522 + C70500 * C1520 - C70501 * C1514 -
              C70500 * C1521 + C70494 * C1529) *
                 C153648 +
             (C79186 + C79185) * C74316) *
                C154074 +
            ((C71854 + C71853) * C153648 + (C71852 + C71851) * C74316) *
                C154099 +
            (C71329 * C153648 + C71330 * C74316) * C154110) *
               C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
              C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
              C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
              C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
              C154044 * C1390) *
                 C74316 +
             (C74399 + C74400 + C74401 + C74402) * C153648) *
                C153810 * C154022 -
            ((C74903 + C74904 + C74905 + C74906) * C153648 +
             (C74324 * C4383 - C74325 * C4379 - C74324 * C4384 +
              C154044 * C4391 + C74322 * C1957 - C74323 * C1948 -
              C74322 * C1958 + C154102 * C1963 + C74320 * C1111 -
              C74321 * C1105 - C74320 * C1112 + C154112 * C1123 +
              C74318 * C586 - C74319 * C570 - C74318 * C587 + C154116 * C606) *
                 C74316) *
                C153810 * C153775) *
               C154021 +
           (((C74318 * C1111 - C74319 * C1105 - C74318 * C1112 +
              C154116 * C1123 + C74320 * C1957 - C74321 * C1948 -
              C74320 * C1958 + C154112 * C1963 + C74322 * C4383 -
              C74323 * C4379 - C74322 * C4384 + C154102 * C4391 +
              C74324 * C5776 - C74325 * C5771 - C74324 * C5777 +
              C154044 * C5780) *
                 C74316 +
             (C75637 + C75638 + C75639 + C75640) * C153648) *
                C153810 * C153775 -
            ((C74653 + C74654 + C74655 + C74656) * C153648 +
             (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
              C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
              C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
              C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
              C74318 * C358 + C154116 * C377) *
                 C74316) *
                C153810 * C154022) *
               C153747) *
              C335 +
          ((((C74906 + C74905 + C74904 + C74903) * C74316 +
             (C75351 + C75352 + C75353 + C75354) * C153648) *
                C153810 * C153775 -
            ((C74403 + C74404 + C74405 + C74406) * C153648 +
             (C74402 + C74401 + C74400 + C74399) * C74316) *
                C153810 * C154022) *
               C154021 +
           (((C74656 + C74655 + C74654 + C74653) * C74316 +
             (C75129 + C75130 + C75131 + C75132) * C153648) *
                C153810 * C154022 -
            ((C74324 * C5772 - C74325 * C5769 - C74324 * C5773 +
              C154044 * C5778 + C74322 * C4387 - C74323 * C4381 -
              C74322 * C4388 + C154102 * C4393 + C74320 * C1953 -
              C74321 * C1946 - C74320 * C1954 + C154112 * C1961 +
              C74318 * C1115 - C74319 * C1107 - C74318 * C1116 +
              C154116 * C1125) *
                 C153648 +
             (C75640 + C75639 + C75638 + C75637) * C74316) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154115 +
             (C70565 + C70566) * C154108 + C70575 * C154089 +
             C70576 * C154036) *
                C153810 * C154022 -
            (C71539 * C154036 + C71540 * C154089 + (C71127 + C71128) * C154108 +
             (C70502 * C1111 - C70503 * C1105 - C70502 * C1112 +
              C153855 * C1123 + C70500 * C586 - C70501 * C570 - C70500 * C587 +
              C70494 * C606) *
                 C154115) *
                C153810 * C153775) *
               C154021 +
           (((C70500 * C1111 - C70501 * C1105 - C70500 * C1112 +
              C70494 * C1123 + C70502 * C1957 - C70503 * C1948 -
              C70502 * C1958 + C153855 * C1963) *
                 C154115 +
             (C71849 + C71850) * C154108 + (C71851 + C71852) * C154089 +
             (C71853 + C71854) * C154036) *
                C153810 * C153775 -
            (C71329 * C154036 + C71330 * C154089 + (C70849 + C70850) * C154108 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C154115) *
                C153810 * C154022) *
               C153747) *
              C335 +
          ((((C71128 + C71127) * C154115 + (C71126 + C71125) * C154108 +
             (C71124 + C71123) * C154089 + (C71553 + C71554) * C154036) *
                C153810 * C153775 -
            (C70577 * C154036 + C70578 * C154089 + (C70568 + C70567) * C154108 +
             (C70566 + C70565) * C154115) *
                C153810 * C154022) *
               C154021 +
           (((C70850 + C70849) * C154115 + (C70848 + C70847) * C154108 +
             (C70846 + C70845) * C154089 + (C71343 + C71344) * C154036) *
                C153810 * C154022 -
            ((C70502 * C1949 - C70503 * C1944 - C70502 * C1950 +
              C153855 * C1959 + C70500 * C1119 - C70501 * C1109 -
              C70500 * C1120 + C70494 * C1127) *
                 C154036 +
             (C71854 + C71853) * C154089 + (C71852 + C71851) * C154108 +
             (C71850 + C71849) * C154115) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
               C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                  C74316 +
              (C70565 + C70566) * C153648) *
                 C154110 +
             ((C78866 + C78867) * C74316 + C78793 * C153648) * C154099 +
             C78882 * C154074) *
                C154022 -
            ((C78879 * C153648 + (C78872 + C78873) * C74316) * C154074 +
             (C78819 * C153648 + (C78869 + C78868) * C74316) * C154099 +
             (C78820 * C153648 + (C78867 + C78866) * C74316) * C154110) *
                C153775) *
               C154021 +
           ((((C79905 + C79906) * C74316 + C79873 * C153648) * C154110 +
             ((C79907 + C79908) * C74316 + C79882 * C153648) * C154099 +
             ((C70500 * C6379 - C70501 * C6368 - C70500 * C6380 +
               C70494 * C6386 + C70502 * C6377 - C70503 * C6367 -
               C70502 * C6378 + C153855 * C6385) *
                  C74316 +
              (C79909 + C79910) * C153648) *
                 C154074) *
                C153775 -
            ((C79891 * C153648 + (C79908 + C79907) * C74316) * C154074 +
             (C79892 * C153648 + (C79906 + C79905) * C74316) * C154099 +
             ((C70849 + C70850) * C153648 +
              (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
               C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                  C74316) *
                 C154110) *
                C154022) *
               C153747) *
              C335 +
          ((((C78793 * C74316 + C79477 * C153648) * C154110 +
             (C78802 * C74316 + C79478 * C153648) * C154099 +
             (C78880 * C74316 + (C78876 + C78877) * C153648) * C154074) *
                C153775 -
            (C78865 * C154074 + (C71540 * C153648 + C78820 * C74316) * C154099 +
             ((C70568 + C70567) * C153648 + (C70566 + C70565) * C74316) *
                 C154110) *
                C154022) *
               C154021 +
           ((((C70850 + C70849) * C74316 + (C70848 + C70847) * C153648) *
                 C154110 +
             (C79873 * C74316 + (C71851 + C71852) * C153648) * C154099 +
             (C79882 * C74316 + (C79185 + C79186) * C153648) * C154074) *
                C154022 -
            (((C70502 * C6369 - C70503 * C6363 - C70502 * C6370 +
               C153855 * C6381 + C70500 * C6371 - C70501 * C6364 -
               C70500 * C6372 + C70494 * C6382) *
                  C153648 +
              (C79910 + C79909) * C74316) *
                 C154074 +
             ((C79186 + C79185) * C153648 + C79891 * C74316) * C154099 +
             ((C71852 + C71851) * C153648 + C79892 * C74316) * C154110) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
                C70502 * C357 - C70503 * C341 - C70502 * C358 +
                C153855 * C377) *
                   C154115 +
               (C70565 + C70566) * C154108 + C70575 * C154089 +
               C70576 * C154036) *
                  C153810 * C153711 * C153695 * C130 -
              (C70577 * C154036 + C70578 * C154089 +
               (C70568 + C70567) * C154108 + (C70566 + C70565) * C154115) *
                  C153810 * C153711 * C153695 * C131 +
              (C70575 * C154115 + C70576 * C154108 +
               (C70572 + C70571) * C154089 + (C70573 + C70574) * C154036) *
                  C153810 * C153711 * C153695 * C132 -
              ((C70502 * C798 - C70503 * C797 - C70502 * C799 + C153855 * C800 +
                C70500 * C156 - C70501 * C142 - C70500 * C157 + C70494 * C166) *
                   C154036 +
               (C70574 + C70573) * C154089 + C70577 * C154108 +
               C70578 * C154115) *
                  C153810 * C153711 * C153695 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
                 C70502 * C357 - C70503 * C341 - C70502 * C358 +
                 C153855 * C377) *
                    C154115 +
                (C70565 + C70566) * C154108 + C70575 * C154089 +
                C70576 * C154036) *
                   C153810 * C153711 * C332 -
               ((C70845 + C70846) * C154036 + (C70847 + C70848) * C154089 +
                (C70849 + C70850) * C154108 +
                (C70502 * C359 - C70503 * C342 - C70502 * C360 +
                 C153855 * C378 + C70500 * C357 - C70501 * C341 -
                 C70500 * C358 + C70494 * C377) *
                    C154115) *
                   C153810 * C153711 * C333 +
               ((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
                 C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
                 C153855 * C1390) *
                    C154115 +
                (C70851 + C70852) * C154108 + (C70853 + C70854) * C154089 +
                (C70855 + C70856) * C154036) *
                   C153810 * C153711 * C334) *
                  C335 +
              (((C70850 + C70849) * C154115 + (C70848 + C70847) * C154108 +
                (C70846 + C70845) * C154089 +
                (C70500 * C349 - C70501 * C337 - C70500 * C350 + C70494 * C373 +
                 C70502 * C367 - C70503 * C346 - C70502 * C368 +
                 C153855 * C382) *
                    C154036) *
                   C153810 * C153711 * C333 -
               (C70577 * C154036 + C70578 * C154089 +
                (C70568 + C70567) * C154108 + (C70566 + C70565) * C154115) *
                   C153810 * C153711 * C332 -
               ((C70502 * C1376 - C70503 * C1371 - C70502 * C1377 +
                 C153855 * C1386 + C70500 * C367 - C70501 * C346 -
                 C70500 * C368 + C70494 * C382) *
                    C154036 +
                (C70856 + C70855) * C154089 + (C70854 + C70853) * C154108 +
                (C70852 + C70851) * C154115) *
                   C153810 * C153711 * C334) *
                  C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154115 +
            (C70565 + C70566) * C154108 + C70575 * C154089 + C70576 * C154036) *
               C153810 * C563 -
           ((C71123 + C71124) * C154036 + (C71125 + C71126) * C154089 +
            (C71127 + C71128) * C154108 +
            (C70502 * C1111 - C70503 * C1105 - C70502 * C1112 +
             C153855 * C1123 + C70500 * C586 - C70501 * C570 - C70500 * C587 +
             C70494 * C606) *
                C154115) *
               C153810 * C564 +
           ((C70500 * C588 - C70501 * C571 - C70500 * C589 + C70494 * C607 +
             C70502 * C1526 - C70503 * C1517 - C70502 * C1527 +
             C153855 * C1532) *
                C154115 +
            (C71129 + C71130) * C154108 + (C71131 + C71132) * C154089 +
            (C71133 + C71134) * C154036) *
               C153810 * C565) *
              C153695 * C335 +
          (((C71128 + C71127) * C154115 + (C71126 + C71125) * C154108 +
            (C71124 + C71123) * C154089 +
            (C70500 * C578 - C70501 * C566 - C70500 * C579 + C70494 * C602 +
             C70502 * C1119 - C70503 * C1109 - C70502 * C1120 +
             C153855 * C1127) *
                C154036) *
               C153810 * C564 -
           (C70577 * C154036 + C70578 * C154089 + (C70568 + C70567) * C154108 +
            (C70566 + C70565) * C154115) *
               C153810 * C563 -
           ((C70502 * C1518 - C70503 * C1513 - C70502 * C1519 +
             C153855 * C1528 + C70500 * C596 - C70501 * C575 - C70500 * C597 +
             C70494 * C611) *
                C154036 +
            (C71134 + C71133) * C154089 + (C71132 + C71131) * C154108 +
            (C71130 + C71129) * C154115) *
               C153810 * C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
            C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
            C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
            C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
            C154044 * C1390) *
               C74316 +
           (C74399 + C74400 + C74401 + C74402) * C153648) *
              C153810 * C153711 * C153695 * C130 -
          ((C74403 + C74404 + C74405 + C74406) * C153648 +
           (C74402 + C74401 + C74400 + C74399) * C74316) *
              C153810 * C153711 * C153695 * C131 +
          ((C74406 + C74405 + C74404 + C74403) * C74316 +
           (C74407 + C74408 + C74409 + C74410) * C153648) *
              C153810 * C153711 * C153695 * C132 -
          ((C74324 * C1376 - C74325 * C1371 - C74324 * C1377 + C154044 * C1386 +
            C74322 * C367 - C74323 * C346 - C74322 * C368 + C154102 * C382 +
            C74320 * C349 - C74321 * C337 - C74320 * C350 + C154112 * C373 +
            C74318 * C152 - C74319 * C140 - C74318 * C153 + C154116 * C164) *
               C153648 +
           (C74410 + C74409 + C74408 + C74407) * C74316) *
              C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C74316 +
            (C74399 + C74400 + C74401 + C74402) * C153648) *
               C153810 * C153711 * C332 -
           ((C74653 + C74654 + C74655 + C74656) * C153648 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C74316) *
               C153810 * C153711 * C333 +
           ((C74318 * C359 - C74319 * C342 - C74318 * C360 + C154116 * C378 +
             C74320 * C1384 - C74321 * C1375 - C74320 * C1385 +
             C154112 * C1390 + C74322 * C3193 - C74323 * C3189 -
             C74322 * C3194 + C154102 * C3201 + C74324 * C4808 -
             C74325 * C4803 - C74324 * C4809 + C154044 * C4812) *
                C74316 +
            (C74657 + C74658 + C74659 + C74660) * C153648) *
               C153810 * C153711 * C334) *
              C335 +
          (((C74656 + C74655 + C74654 + C74653) * C74316 +
            (C74318 * C353 - C74319 * C339 - C74318 * C354 + C154116 * C375 +
             C74320 * C363 - C74321 * C344 - C74320 * C364 + C154112 * C380 +
             C74322 * C1380 - C74323 * C1373 - C74322 * C1381 +
             C154102 * C1388 + C74324 * C3197 - C74325 * C3191 -
             C74324 * C3198 + C154044 * C3203) *
                C153648) *
               C153810 * C153711 * C333 -
           ((C74403 + C74404 + C74405 + C74406) * C153648 +
            (C74402 + C74401 + C74400 + C74399) * C74316) *
               C153810 * C153711 * C332 -
           ((C74324 * C4804 - C74325 * C4801 - C74324 * C4805 +
             C154044 * C4810 + C74322 * C3197 - C74323 * C3191 -
             C74322 * C3198 + C154102 * C3203 + C74320 * C1380 -
             C74321 * C1373 - C74320 * C1381 + C154112 * C1388 + C74318 * C363 -
             C74319 * C344 - C74318 * C364 + C154116 * C380) *
                C153648 +
            (C74660 + C74659 + C74658 + C74657) * C74316) *
               C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C74316 +
            (C74399 + C74400 + C74401 + C74402) * C153648) *
               C153810 * C563 -
           ((C74903 + C74904 + C74905 + C74906) * C153648 +
            (C74324 * C4383 - C74325 * C4379 - C74324 * C4384 +
             C154044 * C4391 + C74322 * C1957 - C74323 * C1948 -
             C74322 * C1958 + C154102 * C1963 + C74320 * C1111 -
             C74321 * C1105 - C74320 * C1112 + C154112 * C1123 + C74318 * C586 -
             C74319 * C570 - C74318 * C587 + C154116 * C606) *
                C74316) *
               C153810 * C564 +
           ((C74318 * C588 - C74319 * C571 - C74318 * C589 + C154116 * C607 +
             C74320 * C1526 - C74321 * C1517 - C74320 * C1527 +
             C154112 * C1532 + C74322 * C3511 - C74323 * C3507 -
             C74322 * C3512 + C154102 * C3519 + C74324 * C5038 -
             C74325 * C5033 - C74324 * C5039 + C154044 * C5042) *
                C74316 +
            (C74907 + C74908 + C74909 + C74910) * C153648) *
               C153810 * C565) *
              C153695 * C335 +
          (((C74906 + C74905 + C74904 + C74903) * C74316 +
            (C74318 * C582 - C74319 * C568 - C74318 * C583 + C154116 * C604 +
             C74320 * C1115 - C74321 * C1107 - C74320 * C1116 +
             C154112 * C1125 + C74322 * C1953 - C74323 * C1946 -
             C74322 * C1954 + C154102 * C1961 + C74324 * C4387 -
             C74325 * C4381 - C74324 * C4388 + C154044 * C4393) *
                C153648) *
               C153810 * C564 -
           ((C74403 + C74404 + C74405 + C74406) * C153648 +
            (C74402 + C74401 + C74400 + C74399) * C74316) *
               C153810 * C563 -
           ((C74324 * C5034 - C74325 * C5031 - C74324 * C5035 +
             C154044 * C5040 + C74322 * C3515 - C74323 * C3509 -
             C74322 * C3516 + C154102 * C3521 + C74320 * C1522 -
             C74321 * C1515 - C74320 * C1523 + C154112 * C1530 + C74318 * C592 -
             C74319 * C573 - C74318 * C593 + C154116 * C609) *
                C153648 +
            (C74910 + C74909 + C74908 + C74907) * C74316) *
               C153810 * C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C74316 +
            (C70565 + C70566) * C153648) *
               C154110 +
           ((C70500 * C586 - C70501 * C570 - C70500 * C587 + C70494 * C606 +
             C70502 * C1111 - C70503 * C1105 - C70502 * C1112 +
             C153855 * C1123) *
                C74316 +
            (C71128 + C71127) * C153648) *
               C154099 +
           ((C70500 * C588 - C70501 * C571 - C70500 * C589 + C70494 * C607 +
             C70502 * C1526 - C70503 * C1517 - C70502 * C1527 +
             C153855 * C1532) *
                C74316 +
            (C71129 + C71130) * C153648) *
               C154074) *
              C153711 * C153695 * C130 -
          (((C71132 + C71131) * C153648 + (C71130 + C71129) * C74316) *
               C154074 +
           (C71540 * C153648 + (C71127 + C71128) * C74316) * C154099 +
           ((C70568 + C70567) * C153648 + (C70566 + C70565) * C74316) *
               C154110) *
              C153711 * C153695 * C131 +
          ((C70575 * C74316 + C70576 * C153648) * C154110 +
           ((C71126 + C71125) * C74316 + (C71124 + C71123) * C153648) *
               C154099 +
           ((C71131 + C71132) * C74316 + (C71133 + C71134) * C153648) *
               C154074) *
              C153711 * C153695 * C132 -
          (((C70502 * C1518 - C70503 * C1513 - C70502 * C1519 +
             C153855 * C1528 + C70500 * C596 - C70501 * C575 - C70500 * C597 +
             C70494 * C611) *
                C153648 +
            (C71134 + C71133) * C74316) *
               C154074 +
           ((C71554 + C71553) * C153648 + C71539 * C74316) * C154099 +
           (C70577 * C153648 + C70578 * C74316) * C154110) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C74316 +
             (C70565 + C70566) * C153648) *
                C154110 +
            ((C70500 * C586 - C70501 * C570 - C70500 * C587 + C70494 * C606 +
              C70502 * C1111 - C70503 * C1105 - C70502 * C1112 +
              C153855 * C1123) *
                 C74316 +
             (C71128 + C71127) * C153648) *
                C154099 +
            ((C70500 * C588 - C70501 * C571 - C70500 * C589 + C70494 * C607 +
              C70502 * C1526 - C70503 * C1517 - C70502 * C1527 +
              C153855 * C1532) *
                 C74316 +
             (C71129 + C71130) * C153648) *
                C154074) *
               C153711 * C332 -
           (((C78489 + C78490) * C153648 +
             (C70502 * C3511 - C70503 * C3507 - C70502 * C3512 +
              C153855 * C3519 + C70500 * C1526 - C70501 * C1517 -
              C70500 * C1527 + C70494 * C1532) *
                 C74316) *
                C154074 +
            ((C71850 + C71849) * C153648 +
             (C70502 * C1957 - C70503 * C1948 - C70502 * C1958 +
              C153855 * C1963 + C70500 * C1111 - C70501 * C1105 -
              C70500 * C1112 + C70494 * C1123) *
                 C74316) *
                C154099 +
            ((C70849 + C70850) * C153648 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C74316) *
                C154110) *
               C153711 * C333 +
           (((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
              C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
              C153855 * C1390) *
                 C74316 +
             (C70851 + C70852) * C153648) *
                C154110 +
            ((C70500 * C1957 - C70501 * C1948 - C70500 * C1958 +
              C70494 * C1963 + C70502 * C4383 - C70503 * C4379 -
              C70502 * C4384 + C153855 * C4391) *
                 C74316 +
             (C78491 + C78492) * C153648) *
                C154099 +
            ((C70500 * C3511 - C70501 * C3507 - C70500 * C3512 +
              C70494 * C3519 + C70502 * C5038 - C70503 * C5033 -
              C70502 * C5039 + C153855 * C5042) *
                 C74316 +
             (C78493 + C78494) * C153648) *
                C154074) *
               C153711 * C334) *
              C335 +
          ((((C70850 + C70849) * C74316 + (C70848 + C70847) * C153648) *
                C154110 +
            ((C71849 + C71850) * C74316 + (C71851 + C71852) * C153648) *
                C154099 +
            ((C78490 + C78489) * C74316 +
             (C70500 * C1522 - C70501 * C1515 - C70500 * C1523 +
              C70494 * C1530 + C70502 * C3515 - C70503 * C3509 -
              C70502 * C3516 + C153855 * C3521) *
                 C153648) *
                C154074) *
               C153711 * C333 -
           (((C71132 + C71131) * C153648 + (C71130 + C71129) * C74316) *
                C154074 +
            (C71540 * C153648 + (C71127 + C71128) * C74316) * C154099 +
            ((C70568 + C70567) * C153648 + (C70566 + C70565) * C74316) *
                C154110) *
               C153711 * C332 -
           (((C70502 * C5034 - C70503 * C5031 - C70502 * C5035 +
              C153855 * C5040 + C70500 * C3515 - C70501 * C3509 -
              C70500 * C3516 + C70494 * C3521) *
                 C153648 +
             (C78494 + C78493) * C74316) *
                C154074 +
            ((C70502 * C4387 - C70503 * C4381 - C70502 * C4388 +
              C153855 * C4393 + C70500 * C1953 - C70501 * C1946 -
              C70500 * C1954 + C70494 * C1961) *
                 C153648 +
             (C78492 + C78491) * C74316) *
                C154099 +
            ((C70854 + C70853) * C153648 + (C70852 + C70851) * C74316) *
                C154110) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C74316 +
             (C70565 + C70566) * C153648) *
                C154110 +
            ((C78866 + C78867) * C74316 + C78793 * C153648) * C154099 +
            C78882 * C154074) *
               C563 -
           ((C78879 * C153648 + (C78872 + C78873) * C74316) * C154074 +
            (C78819 * C153648 + (C78869 + C78868) * C74316) * C154099 +
            (C78820 * C153648 + (C78867 + C78866) * C74316) * C154110) *
               C564 +
           (C78882 * C154110 +
            ((C78873 + C78872) * C74316 + C78880 * C153648) * C154099 +
            ((C70500 * C7744 - C70501 * C7740 - C70500 * C7745 +
              C70494 * C7752 + C70502 * C9206 - C70503 * C9201 -
              C70502 * C9207 + C153855 * C9210) *
                 C74316 +
             (C78874 + C78875) * C153648) *
                C154074) *
               C565) *
              C153695 * C335 +
          (((C78793 * C74316 + (C71126 + C71125) * C153648) * C154110 +
            (C78802 * C74316 + (C71131 + C71132) * C153648) * C154099 +
            (C78880 * C74316 + (C78876 + C78877) * C153648) * C154074) *
               C564 -
           (C78865 * C154074 + (C71540 * C153648 + C78820 * C74316) * C154099 +
            ((C70568 + C70567) * C153648 + (C70566 + C70565) * C74316) *
                C154110) *
               C563 -
           (((C70502 * C9202 - C70503 * C9199 - C70502 * C9203 +
              C153855 * C9208 + C70500 * C7748 - C70501 * C7742 -
              C70500 * C7749 + C70494 * C7754) *
                 C153648 +
             (C78875 + C78874) * C74316) *
                C154074 +
            ((C78877 + C78876) * C153648 + C78879 * C74316) * C154099 +
            C78865 * C154110) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C74316 +
            (C74399 + C74400 + C74401 + C74402) * C153648) *
               C153810 * C154022 -
           ((C74903 + C74904 + C74905 + C74906) * C153648 +
            (C74324 * C4383 - C74325 * C4379 - C74324 * C4384 +
             C154044 * C4391 + C74322 * C1957 - C74323 * C1948 -
             C74322 * C1958 + C154102 * C1963 + C74320 * C1111 -
             C74321 * C1105 - C74320 * C1112 + C154112 * C1123 + C74318 * C586 -
             C74319 * C570 - C74318 * C587 + C154116 * C606) *
                C74316) *
               C153810 * C153775) *
              C153695 * C154090 +
          (((C74906 + C74905 + C74904 + C74903) * C74316 +
            (C75351 + C75352 + C75353 + C75354) * C153648) *
               C153810 * C153775 -
           ((C74403 + C74404 + C74405 + C74406) * C153648 +
            (C74402 + C74401 + C74400 + C74399) * C74316) *
               C153810 * C154022) *
              C153695 * C154091 +
          (((C74406 + C74405 + C74404 + C74403) * C74316 +
            (C74407 + C74408 + C74409 + C74410) * C153648) *
               C153810 * C154022 -
           ((C74324 * C4389 - C74325 * C4382 - C74324 * C4390 +
             C154044 * C4394 + C74322 * C1951 - C74323 * C1945 -
             C74322 * C1952 + C154102 * C1960 + C74320 * C1117 -
             C74321 * C1108 - C74320 * C1118 + C154112 * C1126 + C74318 * C580 -
             C74319 * C567 - C74318 * C581 + C154116 * C603) *
                C153648 +
            (C75354 + C75353 + C75352 + C75351) * C74316) *
               C153810 * C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154115 +
            (C70565 + C70566) * C154108 + C70575 * C154089 + C70576 * C154036) *
               C153810 * C154022 -
           (C71539 * C154036 + C71540 * C154089 + (C71127 + C71128) * C154108 +
            (C70502 * C1111 - C70503 * C1105 - C70502 * C1112 +
             C153855 * C1123 + C70500 * C586 - C70501 * C570 - C70500 * C587 +
             C70494 * C606) *
                C154115) *
               C153810 * C153775) *
              C153695 * C154090 +
          (((C71128 + C71127) * C154115 + (C71126 + C71125) * C154108 +
            (C71124 + C71123) * C154089 + (C71553 + C71554) * C154036) *
               C153810 * C153775 -
           (C70577 * C154036 + C70578 * C154089 + (C70568 + C70567) * C154108 +
            (C70566 + C70565) * C154115) *
               C153810 * C154022) *
              C153695 * C154091 +
          ((C70575 * C154115 + C70576 * C154108 + (C70572 + C70571) * C154089 +
            (C70573 + C70574) * C154036) *
               C153810 * C154022 -
           ((C70502 * C1121 - C70503 * C1110 - C70502 * C1122 +
             C153855 * C1128 + C70500 * C598 - C70501 * C576 - C70500 * C599 +
             C70494 * C612) *
                C154036 +
            (C71554 + C71553) * C154089 + C71539 * C154108 + C71540 * C154115) *
               C153810 * C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C74316 +
             (C70565 + C70566) * C153648) *
                C154110 +
            ((C78866 + C78867) * C74316 + C78793 * C153648) * C154099 +
            C78882 * C154074) *
               C154022 -
           ((C78879 * C153648 + (C78872 + C78873) * C74316) * C154074 +
            (C78819 * C153648 + (C78869 + C78868) * C74316) * C154099 +
            (C78820 * C153648 + (C78867 + C78866) * C74316) * C154110) *
               C153775) *
              C153695 * C154090 +
          (((C78793 * C74316 + C79477 * C153648) * C154110 +
            (C78802 * C74316 + C79478 * C153648) * C154099 +
            (C78880 * C74316 + (C78876 + C78877) * C153648) * C154074) *
               C153775 -
           (C78865 * C154074 + (C71540 * C153648 + C78820 * C74316) * C154099 +
            ((C70568 + C70567) * C153648 + (C70566 + C70565) * C74316) *
                C154110) *
               C154022) *
              C153695 * C154091 +
          (((C70575 * C74316 + C70576 * C153648) * C154110 +
            (C79477 * C74316 + (C71124 + C71123) * C153648) * C154099 +
            (C79478 * C74316 + (C71133 + C71134) * C153648) * C154074) *
               C154022 -
           (((C70502 * C8574 - C70503 * C8573 - C70502 * C8575 +
              C153855 * C8576 + C70500 * C2303 - C70501 * C2297 -
              C70500 * C2304 + C70494 * C2312) *
                 C153648 +
             (C78877 + C78876) * C74316) *
                C154074 +
            ((C71134 + C71133) * C153648 + C78837 * C74316) * C154099 +
            (C71539 * C153648 + C71540 * C74316) * C154110) *
               C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154115 +
            (C70565 + C70566) * C154108 + C70575 * C154089 + C70576 * C154036) *
               C153810 * C153711 * C332 -
           ((C70845 + C70846) * C154036 + (C70847 + C70848) * C154089 +
            (C70849 + C70850) * C154108 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C154115) *
               C153810 * C153711 * C333 +
           ((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
             C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
             C153855 * C1390) *
                C154115 +
            (C70851 + C70852) * C154108 + (C70853 + C70854) * C154089 +
            (C70855 + C70856) * C154036) *
               C153810 * C153711 * C334) *
              C335 +
          (((C70850 + C70849) * C154115 + (C70848 + C70847) * C154108 +
            (C70846 + C70845) * C154089 +
            (C70500 * C349 - C70501 * C337 - C70500 * C350 + C70494 * C373 +
             C70502 * C367 - C70503 * C346 - C70502 * C368 + C153855 * C382) *
                C154036) *
               C153810 * C153711 * C333 -
           (C70577 * C154036 + C70578 * C154089 + (C70568 + C70567) * C154108 +
            (C70566 + C70565) * C154115) *
               C153810 * C153711 * C332 -
           ((C70502 * C1376 - C70503 * C1371 - C70502 * C1377 +
             C153855 * C1386 + C70500 * C367 - C70501 * C346 - C70500 * C368 +
             C70494 * C382) *
                C154036 +
            (C70856 + C70855) * C154089 + (C70854 + C70853) * C154108 +
            (C70852 + C70851) * C154115) *
               C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
            C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
               C154115 +
           (C70565 + C70566) * C154108 + C70575 * C154089 + C70576 * C154036) *
              C153810 * C153711 * C153695 * C130 -
          (C70577 * C154036 + C70578 * C154089 + (C70568 + C70567) * C154108 +
           (C70566 + C70565) * C154115) *
              C153810 * C153711 * C153695 * C131 +
          (C70575 * C154115 + C70576 * C154108 + (C70572 + C70571) * C154089 +
           (C70573 + C70574) * C154036) *
              C153810 * C153711 * C153695 * C132 -
          ((C70502 * C798 - C70503 * C797 - C70502 * C799 + C153855 * C800 +
            C70500 * C156 - C70501 * C142 - C70500 * C157 + C70494 * C166) *
               C154036 +
           (C70574 + C70573) * C154089 + C70577 * C154108 + C70578 * C154115) *
              C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
            C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
            C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
            C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
            C154044 * C1390) *
               C74316 +
           (C74399 + C74400 + C74401 + C74402) * C153648) *
              C153810 * C153711 * C153695 * C130 -
          ((C74403 + C74404 + C74405 + C74406) * C153648 +
           (C74402 + C74401 + C74400 + C74399) * C74316) *
              C153810 * C153711 * C153695 * C131 +
          ((C74406 + C74405 + C74404 + C74403) * C74316 +
           (C74407 + C74408 + C74409 + C74410) * C153648) *
              C153810 * C153711 * C153695 * C132 -
          ((C74324 * C1376 - C74325 * C1371 - C74324 * C1377 + C154044 * C1386 +
            C74322 * C367 - C74323 * C346 - C74322 * C368 + C154102 * C382 +
            C74320 * C349 - C74321 * C337 - C74320 * C350 + C154112 * C373 +
            C74318 * C152 - C74319 * C140 - C74318 * C153 + C154116 * C164) *
               C153648 +
           (C74410 + C74409 + C74408 + C74407) * C74316) *
              C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C74316 +
            (C74399 + C74400 + C74401 + C74402) * C153648) *
               C153810 * C153711 * C332 -
           ((C74653 + C74654 + C74655 + C74656) * C153648 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C74316) *
               C153810 * C153711 * C333 +
           ((C74318 * C359 - C74319 * C342 - C74318 * C360 + C154116 * C378 +
             C74320 * C1384 - C74321 * C1375 - C74320 * C1385 +
             C154112 * C1390 + C74322 * C3193 - C74323 * C3189 -
             C74322 * C3194 + C154102 * C3201 + C74324 * C4808 -
             C74325 * C4803 - C74324 * C4809 + C154044 * C4812) *
                C74316 +
            (C74657 + C74658 + C74659 + C74660) * C153648) *
               C153810 * C153711 * C334) *
              C335 +
          (((C74656 + C74655 + C74654 + C74653) * C74316 +
            (C74318 * C353 - C74319 * C339 - C74318 * C354 + C154116 * C375 +
             C74320 * C363 - C74321 * C344 - C74320 * C364 + C154112 * C380 +
             C74322 * C1380 - C74323 * C1373 - C74322 * C1381 +
             C154102 * C1388 + C74324 * C3197 - C74325 * C3191 -
             C74324 * C3198 + C154044 * C3203) *
                C153648) *
               C153810 * C153711 * C333 -
           ((C74403 + C74404 + C74405 + C74406) * C153648 +
            (C74402 + C74401 + C74400 + C74399) * C74316) *
               C153810 * C153711 * C332 -
           ((C74324 * C4804 - C74325 * C4801 - C74324 * C4805 +
             C154044 * C4810 + C74322 * C3197 - C74323 * C3191 -
             C74322 * C3198 + C154102 * C3203 + C74320 * C1380 -
             C74321 * C1373 - C74320 * C1381 + C154112 * C1388 + C74318 * C363 -
             C74319 * C344 - C74318 * C364 + C154116 * C380) *
                C153648 +
            (C74660 + C74659 + C74658 + C74657) * C74316) *
               C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C74316 +
            (C70565 + C70566) * C153648) *
               C154110 +
           ((C70500 * C586 - C70501 * C570 - C70500 * C587 + C70494 * C606 +
             C70502 * C1111 - C70503 * C1105 - C70502 * C1112 +
             C153855 * C1123) *
                C74316 +
            (C71128 + C71127) * C153648) *
               C154099 +
           ((C70500 * C588 - C70501 * C571 - C70500 * C589 + C70494 * C607 +
             C70502 * C1526 - C70503 * C1517 - C70502 * C1527 +
             C153855 * C1532) *
                C74316 +
            (C71129 + C71130) * C153648) *
               C154074) *
              C153711 * C153695 * C130 -
          (((C71132 + C71131) * C153648 + (C71130 + C71129) * C74316) *
               C154074 +
           (C71540 * C153648 + (C71127 + C71128) * C74316) * C154099 +
           ((C70568 + C70567) * C153648 + (C70566 + C70565) * C74316) *
               C154110) *
              C153711 * C153695 * C131 +
          ((C70575 * C74316 + C70576 * C153648) * C154110 +
           ((C71126 + C71125) * C74316 + (C71124 + C71123) * C153648) *
               C154099 +
           ((C71131 + C71132) * C74316 + (C71133 + C71134) * C153648) *
               C154074) *
              C153711 * C153695 * C132 -
          (((C70502 * C1518 - C70503 * C1513 - C70502 * C1519 +
             C153855 * C1528 + C70500 * C596 - C70501 * C575 - C70500 * C597 +
             C70494 * C611) *
                C153648 +
            (C71134 + C71133) * C74316) *
               C154074 +
           ((C71554 + C71553) * C153648 + C71539 * C74316) * C154099 +
           (C70577 * C153648 + C70578 * C74316) * C154110) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C74316 +
             (C70565 + C70566) * C153648) *
                C154110 +
            ((C70500 * C586 - C70501 * C570 - C70500 * C587 + C70494 * C606 +
              C70502 * C1111 - C70503 * C1105 - C70502 * C1112 +
              C153855 * C1123) *
                 C74316 +
             (C71128 + C71127) * C153648) *
                C154099 +
            ((C70500 * C588 - C70501 * C571 - C70500 * C589 + C70494 * C607 +
              C70502 * C1526 - C70503 * C1517 - C70502 * C1527 +
              C153855 * C1532) *
                 C74316 +
             (C71129 + C71130) * C153648) *
                C154074) *
               C153711 * C332 -
           (((C78489 + C78490) * C153648 +
             (C70502 * C3511 - C70503 * C3507 - C70502 * C3512 +
              C153855 * C3519 + C70500 * C1526 - C70501 * C1517 -
              C70500 * C1527 + C70494 * C1532) *
                 C74316) *
                C154074 +
            ((C71850 + C71849) * C153648 +
             (C70502 * C1957 - C70503 * C1948 - C70502 * C1958 +
              C153855 * C1963 + C70500 * C1111 - C70501 * C1105 -
              C70500 * C1112 + C70494 * C1123) *
                 C74316) *
                C154099 +
            ((C70849 + C70850) * C153648 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C74316) *
                C154110) *
               C153711 * C333 +
           (((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
              C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
              C153855 * C1390) *
                 C74316 +
             (C70851 + C70852) * C153648) *
                C154110 +
            ((C70500 * C1957 - C70501 * C1948 - C70500 * C1958 +
              C70494 * C1963 + C70502 * C4383 - C70503 * C4379 -
              C70502 * C4384 + C153855 * C4391) *
                 C74316 +
             (C78491 + C78492) * C153648) *
                C154099 +
            ((C70500 * C3511 - C70501 * C3507 - C70500 * C3512 +
              C70494 * C3519 + C70502 * C5038 - C70503 * C5033 -
              C70502 * C5039 + C153855 * C5042) *
                 C74316 +
             (C78493 + C78494) * C153648) *
                C154074) *
               C153711 * C334) *
              C335 +
          ((((C70850 + C70849) * C74316 + (C70848 + C70847) * C153648) *
                C154110 +
            ((C71849 + C71850) * C74316 + (C71851 + C71852) * C153648) *
                C154099 +
            ((C78490 + C78489) * C74316 +
             (C70500 * C1522 - C70501 * C1515 - C70500 * C1523 +
              C70494 * C1530 + C70502 * C3515 - C70503 * C3509 -
              C70502 * C3516 + C153855 * C3521) *
                 C153648) *
                C154074) *
               C153711 * C333 -
           (((C71132 + C71131) * C153648 + (C71130 + C71129) * C74316) *
                C154074 +
            (C71540 * C153648 + (C71127 + C71128) * C74316) * C154099 +
            ((C70568 + C70567) * C153648 + (C70566 + C70565) * C74316) *
                C154110) *
               C153711 * C332 -
           (((C70502 * C5034 - C70503 * C5031 - C70502 * C5035 +
              C153855 * C5040 + C70500 * C3515 - C70501 * C3509 -
              C70500 * C3516 + C70494 * C3521) *
                 C153648 +
             (C78494 + C78493) * C74316) *
                C154074 +
            ((C70502 * C4387 - C70503 * C4381 - C70502 * C4388 +
              C153855 * C4393 + C70500 * C1953 - C70501 * C1946 -
              C70500 * C1954 + C70494 * C1961) *
                 C153648 +
             (C78492 + C78491) * C74316) *
                C154099 +
            ((C70854 + C70853) * C153648 + (C70852 + C70851) * C74316) *
                C154110) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C74316 +
            (C74399 + C74400 + C74401 + C74402) * C153648) *
               C153810 * C153711 * C154092 -
           ((C74653 + C74654 + C74655 + C74656) * C153648 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C74316) *
               C153810 * C153711 * C154093 +
           ((C74318 * C359 - C74319 * C342 - C74318 * C360 + C154116 * C378 +
             C74320 * C1384 - C74321 * C1375 - C74320 * C1385 +
             C154112 * C1390 + C74322 * C3193 - C74323 * C3189 -
             C74322 * C3194 + C154102 * C3201 + C74324 * C4808 -
             C74325 * C4803 - C74324 * C4809 + C154044 * C4812) *
                C74316 +
            (C74657 + C74658 + C74659 + C74660) * C153648) *
               C153810 * C153711 * C1657) *
              C154013 +
          (((C74656 + C74655 + C74654 + C74653) * C74316 +
            (C75129 + C75130 + C75131 + C75132) * C153648) *
               C153810 * C153711 * C154093 -
           ((C74403 + C74404 + C74405 + C74406) * C153648 +
            (C74402 + C74401 + C74400 + C74399) * C74316) *
               C153810 * C153711 * C154092 -
           ((C74324 * C4804 - C74325 * C4801 - C74324 * C4805 +
             C154044 * C4810 + C74322 * C3197 - C74323 * C3191 -
             C74322 * C3198 + C154102 * C3203 + C74320 * C1380 -
             C74321 * C1373 - C74320 * C1381 + C154112 * C1388 + C74318 * C363 -
             C74319 * C344 - C74318 * C364 + C154116 * C380) *
                C153648 +
            (C74660 + C74659 + C74658 + C74657) * C74316) *
               C153810 * C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154115 +
            (C70565 + C70566) * C154108 + C70575 * C154089 + C70576 * C154036) *
               C153810 * C153711 * C154092 -
           (C71329 * C154036 + C71330 * C154089 + (C70849 + C70850) * C154108 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C154115) *
               C153810 * C153711 * C154093 +
           ((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
             C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
             C153855 * C1390) *
                C154115 +
            (C70851 + C70852) * C154108 + (C70853 + C70854) * C154089 +
            (C70855 + C70856) * C154036) *
               C153810 * C153711 * C1657) *
              C154013 +
          (((C70850 + C70849) * C154115 + (C70848 + C70847) * C154108 +
            (C70846 + C70845) * C154089 + (C71343 + C71344) * C154036) *
               C153810 * C153711 * C154093 -
           (C70577 * C154036 + C70578 * C154089 + (C70568 + C70567) * C154108 +
            (C70566 + C70565) * C154115) *
               C153810 * C153711 * C154092 -
           ((C70502 * C1376 - C70503 * C1371 - C70502 * C1377 +
             C153855 * C1386 + C70500 * C367 - C70501 * C346 - C70500 * C368 +
             C70494 * C382) *
                C154036 +
            (C70856 + C70855) * C154089 + (C70854 + C70853) * C154108 +
            (C70852 + C70851) * C154115) *
               C153810 * C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C74316 +
             (C70565 + C70566) * C153648) *
                C154110 +
            ((C78866 + C78867) * C74316 + C78793 * C153648) * C154099 +
            C78882 * C154074) *
               C153711 * C154092 -
           (C80700 * C154074 +
            (C79892 * C153648 + (C79906 + C79905) * C74316) * C154099 +
            ((C70849 + C70850) * C153648 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C74316) *
                C154110) *
               C153711 * C154093 +
           (((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
              C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
              C153855 * C1390) *
                 C74316 +
             (C70851 + C70852) * C153648) *
                C154110 +
            ((C70500 * C1957 - C70501 * C1948 - C70500 * C1958 +
              C70494 * C1963 + C70502 * C4383 - C70503 * C4379 -
              C70502 * C4384 + C153855 * C4391) *
                 C74316 +
             (C78491 + C78492) * C153648) *
                C154099 +
            ((C70500 * C3511 - C70501 * C3507 - C70500 * C3512 +
              C70494 * C3519 + C70502 * C5038 - C70503 * C5033 -
              C70502 * C5039 + C153855 * C5042) *
                 C74316 +
             (C78493 + C78494) * C153648) *
                C154074) *
               C153711 * C1657) *
              C154013 +
          ((((C70850 + C70849) * C74316 + (C70848 + C70847) * C153648) *
                C154110 +
            (C79873 * C74316 + (C71851 + C71852) * C153648) * C154099 +
            (C79882 * C74316 + (C79185 + C79186) * C153648) * C154074) *
               C153711 * C154093 -
           (C78865 * C154074 + (C71540 * C153648 + C78820 * C74316) * C154099 +
            ((C70568 + C70567) * C153648 + (C70566 + C70565) * C74316) *
                C154110) *
               C153711 * C154092 -
           (((C70502 * C5034 - C70503 * C5031 - C70502 * C5035 +
              C153855 * C5040 + C70500 * C3515 - C70501 * C3509 -
              C70500 * C3516 + C70494 * C3521) *
                 C153648 +
             (C78494 + C78493) * C74316) *
                C154074 +
            ((C70502 * C4387 - C70503 * C4381 - C70502 * C4388 +
              C153855 * C4393 + C70500 * C1953 - C70501 * C1946 -
              C70500 * C1954 + C70494 * C1961) *
                 C153648 +
             (C78492 + C78491) * C74316) *
                C154099 +
            ((C70854 + C70853) * C153648 + (C70852 + C70851) * C74316) *
                C154110) *
               C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C74316 +
            (C74399 + C74400 + C74401 + C74402) * C153648) *
               C153810 * C154022 -
           ((C74903 + C74904 + C74905 + C74906) * C153648 +
            (C74324 * C4383 - C74325 * C4379 - C74324 * C4384 +
             C154044 * C4391 + C74322 * C1957 - C74323 * C1948 -
             C74322 * C1958 + C154102 * C1963 + C74320 * C1111 -
             C74321 * C1105 - C74320 * C1112 + C154112 * C1123 + C74318 * C586 -
             C74319 * C570 - C74318 * C587 + C154116 * C606) *
                C74316) *
               C153810 * C153775) *
              C154092 +
          (((C74318 * C1111 - C74319 * C1105 - C74318 * C1112 +
             C154116 * C1123 + C74320 * C1957 - C74321 * C1948 -
             C74320 * C1958 + C154112 * C1963 + C74322 * C4383 -
             C74323 * C4379 - C74322 * C4384 + C154102 * C4391 +
             C74324 * C5776 - C74325 * C5771 - C74324 * C5777 +
             C154044 * C5780) *
                C74316 +
            (C75637 + C75638 + C75639 + C75640) * C153648) *
               C153810 * C153775 -
           ((C74653 + C74654 + C74655 + C74656) * C153648 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C74316) *
               C153810 * C154022) *
              C154093 +
          (((C74318 * C359 - C74319 * C342 - C74318 * C360 + C154116 * C378 +
             C74320 * C1384 - C74321 * C1375 - C74320 * C1385 +
             C154112 * C1390 + C74322 * C3193 - C74323 * C3189 -
             C74322 * C3194 + C154102 * C3201 + C74324 * C4808 -
             C74325 * C4803 - C74324 * C4809 + C154044 * C4812) *
                C74316 +
            (C74657 + C74658 + C74659 + C74660) * C153648) *
               C153810 * C154022 -
           ((C74324 * C29108 - C74325 * C29105 - C74324 * C29109 +
             C154044 * C29111 + C74322 * C5774 - C74323 * C5770 -
             C74322 * C5775 + C154102 * C5779 + C74320 * C4385 -
             C74321 * C4380 - C74320 * C4386 + C154112 * C4392 +
             C74318 * C1955 - C74319 * C1947 - C74318 * C1956 +
             C154116 * C1962) *
                C153648 +
            (C74324 * C29106 - C74325 * C29104 - C74324 * C29107 +
             C154044 * C29110 + C74322 * C5776 - C74323 * C5771 -
             C74322 * C5777 + C154102 * C5780 + C74320 * C4383 -
             C74321 * C4379 - C74320 * C4384 + C154112 * C4391 +
             C74318 * C1957 - C74319 * C1948 - C74318 * C1958 +
             C154116 * C1963) *
                C74316) *
               C153810 * C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154115 +
            (C70565 + C70566) * C154108 + C70575 * C154089 + C70576 * C154036) *
               C153810 * C154022 -
           (C71539 * C154036 + C71540 * C154089 + (C71127 + C71128) * C154108 +
            (C70502 * C1111 - C70503 * C1105 - C70502 * C1112 +
             C153855 * C1123 + C70500 * C586 - C70501 * C570 - C70500 * C587 +
             C70494 * C606) *
                C154115) *
               C153810 * C153775) *
              C154092 +
          (((C70500 * C1111 - C70501 * C1105 - C70500 * C1112 + C70494 * C1123 +
             C70502 * C1957 - C70503 * C1948 - C70502 * C1958 +
             C153855 * C1963) *
                C154115 +
            (C71849 + C71850) * C154108 + (C71851 + C71852) * C154089 +
            (C71853 + C71854) * C154036) *
               C153810 * C153775 -
           (C71329 * C154036 + C71330 * C154089 + (C70849 + C70850) * C154108 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C154115) *
               C153810 * C154022) *
              C154093 +
          (((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
             C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
             C153855 * C1390) *
                C154115 +
            (C70851 + C70852) * C154108 + (C70853 + C70854) * C154089 +
            (C70855 + C70856) * C154036) *
               C153810 * C154022 -
           ((C70502 * C4389 - C70503 * C4382 - C70502 * C4390 +
             C153855 * C4394 + C70500 * C1951 - C70501 * C1945 -
             C70500 * C1952 + C70494 * C1960) *
                C154036 +
            (C70502 * C4387 - C70503 * C4381 - C70502 * C4388 +
             C153855 * C4393 + C70500 * C1953 - C70501 * C1946 -
             C70500 * C1954 + C70494 * C1961) *
                C154089 +
            (C70502 * C4385 - C70503 * C4380 - C70502 * C4386 +
             C153855 * C4392 + C70500 * C1955 - C70501 * C1947 -
             C70500 * C1956 + C70494 * C1962) *
                C154108 +
            (C70502 * C4383 - C70503 * C4379 - C70502 * C4384 +
             C153855 * C4391 + C70500 * C1957 - C70501 * C1948 -
             C70500 * C1958 + C70494 * C1963) *
                C154115) *
               C153810 * C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C74316 +
             (C70565 + C70566) * C153648) *
                C154110 +
            ((C78866 + C78867) * C74316 + C78793 * C153648) * C154099 +
            C78882 * C154074) *
               C154022 -
           ((C78879 * C153648 + (C78872 + C78873) * C74316) * C154074 +
            (C78819 * C153648 + (C78869 + C78868) * C74316) * C154099 +
            (C78820 * C153648 + (C78867 + C78866) * C74316) * C154110) *
               C153775) *
              C154092 +
          ((((C79905 + C79906) * C74316 + C79873 * C153648) * C154110 +
            ((C79907 + C79908) * C74316 + C79882 * C153648) * C154099 +
            ((C80701 + C80702) * C74316 + (C79909 + C79910) * C153648) *
                C154074) *
               C153775 -
           (C80700 * C154074 +
            (C79892 * C153648 + (C79906 + C79905) * C74316) * C154099 +
            ((C70849 + C70850) * C153648 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C74316) *
                C154110) *
               C154022) *
              C154093 +
          ((((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
              C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
              C153855 * C1390) *
                 C74316 +
             (C70851 + C70852) * C153648) *
                C154110 +
            ((C81693 + C81694) * C74316 + (C78491 + C78492) * C153648) *
                C154099 +
            ((C81695 + C81696) * C74316 + (C78493 + C78494) * C153648) *
                C154074) *
               C154022 -
           (((C70502 * C32003 - C70503 * C32002 - C70502 * C32004 +
              C153855 * C32005 + C70500 * C6373 - C70501 * C6365 -
              C70500 * C6374 + C70494 * C6383) *
                 C153648 +
             (C70502 * C30186 - C70503 * C30183 - C70502 * C30187 +
              C153855 * C30189 + C70500 * C6377 - C70501 * C6367 -
              C70500 * C6378 + C70494 * C6385) *
                 C74316) *
                C154074 +
            ((C78494 + C78493) * C153648 + (C81696 + C81695) * C74316) *
                C154099 +
            ((C78492 + C78491) * C153648 + (C81694 + C81693) * C74316) *
                C154110) *
               C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
                 C70502 * C357 - C70503 * C341 - C70502 * C358 +
                 C153855 * C377) *
                    C154115 +
                (C70565 + C70566) * C154108 + C70575 * C154089 +
                C70576 * C154036) *
                   C153810 * C153711 * C1279 -
               (C71329 * C154036 + C71330 * C154089 +
                (C70849 + C70850) * C154108 +
                (C70502 * C359 - C70503 * C342 - C70502 * C360 +
                 C153855 * C378 + C70500 * C357 - C70501 * C341 -
                 C70500 * C358 + C70494 * C377) *
                    C154115) *
                   C153810 * C153711 * C153747) *
                  C1281 +
              (((C70850 + C70849) * C154115 + (C70848 + C70847) * C154108 +
                (C70846 + C70845) * C154089 + (C71343 + C71344) * C154036) *
                   C153810 * C153711 * C153747 -
               (C70577 * C154036 + C70578 * C154089 +
                (C70568 + C70567) * C154108 + (C70566 + C70565) * C154115) *
                   C153810 * C153711 * C1279) *
                  C1282 +
              ((C70575 * C154115 + C70576 * C154108 +
                (C70572 + C70571) * C154089 + (C70573 + C70574) * C154036) *
                   C153810 * C153711 * C1279 -
               ((C70502 * C371 - C70503 * C348 - C70502 * C372 +
                 C153855 * C384 + C70500 * C369 - C70501 * C347 -
                 C70500 * C370 + C70494 * C383) *
                    C154036 +
                (C71344 + C71343) * C154089 + C71329 * C154108 +
                C71330 * C154115) *
                   C153810 * C153711 * C153747) *
                  C1283) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
                C70502 * C357 - C70503 * C341 - C70502 * C358 +
                C153855 * C377) *
                   C154115 +
               (C70565 + C70566) * C154108 + C70575 * C154089 +
               C70576 * C154036) *
                  C153810 * C153711 * C1366 -
              (C71329 * C154036 + C71330 * C154089 +
               (C70849 + C70850) * C154108 +
               (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
                C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                   C154115) *
                  C153810 * C153711 * C1367 +
              ((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
                C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
                C153855 * C1390) *
                   C154115 +
               (C70851 + C70852) * C154108 + (C70853 + C70854) * C154089 +
               (C70855 + C70856) * C154036) *
                  C153810 * C153711 * C1368 -
              ((C70502 * C3199 - C70503 * C3192 - C70502 * C3200 +
                C153855 * C3204 + C70500 * C1378 - C70501 * C1372 -
                C70500 * C1379 + C70494 * C1387) *
                   C154036 +
               (C70502 * C3197 - C70503 * C3191 - C70502 * C3198 +
                C153855 * C3203 + C70500 * C1380 - C70501 * C1373 -
                C70500 * C1381 + C70494 * C1388) *
                   C154089 +
               (C70502 * C3195 - C70503 * C3190 - C70502 * C3196 +
                C153855 * C3202 + C70500 * C1382 - C70501 * C1374 -
                C70500 * C1383 + C70494 * C1389) *
                   C154108 +
               (C70502 * C3193 - C70503 * C3189 - C70502 * C3194 +
                C153855 * C3201 + C70500 * C1384 - C70501 * C1375 -
                C70500 * C1385 + C70494 * C1390) *
                   C154115) *
                  C153810 * C153711 * C1369) *
             C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154115 +
            (C70565 + C70566) * C154108 + C70575 * C154089 + C70576 * C154036) *
               C153810 * C563 -
           (C71539 * C154036 + C71540 * C154089 + (C71127 + C71128) * C154108 +
            (C70502 * C1111 - C70503 * C1105 - C70502 * C1112 +
             C153855 * C1123 + C70500 * C586 - C70501 * C570 - C70500 * C587 +
             C70494 * C606) *
                C154115) *
               C153810 * C564 +
           ((C70500 * C588 - C70501 * C571 - C70500 * C589 + C70494 * C607 +
             C70502 * C1526 - C70503 * C1517 - C70502 * C1527 +
             C153855 * C1532) *
                C154115 +
            (C71129 + C71130) * C154108 + (C71131 + C71132) * C154089 +
            (C71133 + C71134) * C154036) *
               C153810 * C565) *
              C1279 +
          (((C70500 * C1111 - C70501 * C1105 - C70500 * C1112 + C70494 * C1123 +
             C70502 * C1957 - C70503 * C1948 - C70502 * C1958 +
             C153855 * C1963) *
                C154115 +
            (C71849 + C71850) * C154108 + (C71851 + C71852) * C154089 +
            (C71853 + C71854) * C154036) *
               C153810 * C564 -
           (C71329 * C154036 + C71330 * C154089 + (C70849 + C70850) * C154108 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C154115) *
               C153810 * C563 -
           ((C70502 * C3517 - C70503 * C3510 - C70502 * C3518 +
             C153855 * C3522 + C70500 * C1520 - C70501 * C1514 -
             C70500 * C1521 + C70494 * C1529) *
                C154036 +
            (C70502 * C3515 - C70503 * C3509 - C70502 * C3516 +
             C153855 * C3521 + C70500 * C1522 - C70501 * C1515 -
             C70500 * C1523 + C70494 * C1530) *
                C154089 +
            (C70502 * C3513 - C70503 * C3508 - C70502 * C3514 +
             C153855 * C3520 + C70500 * C1524 - C70501 * C1516 -
             C70500 * C1525 + C70494 * C1531) *
                C154108 +
            (C70502 * C3511 - C70503 * C3507 - C70502 * C3512 +
             C153855 * C3519 + C70500 * C1526 - C70501 * C1517 -
             C70500 * C1527 + C70494 * C1532) *
                C154115) *
               C153810 * C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C74316 +
            (C74399 + C74400 + C74401 + C74402) * C153648) *
               C153810 * C153711 * C1279 -
           ((C74653 + C74654 + C74655 + C74656) * C153648 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C74316) *
               C153810 * C153711 * C153747) *
              C1281 +
          (((C74656 + C74655 + C74654 + C74653) * C74316 +
            (C75129 + C75130 + C75131 + C75132) * C153648) *
               C153810 * C153711 * C153747 -
           ((C74403 + C74404 + C74405 + C74406) * C153648 +
            (C74402 + C74401 + C74400 + C74399) * C74316) *
               C153810 * C153711 * C1279) *
              C1282 +
          (((C74406 + C74405 + C74404 + C74403) * C74316 +
            (C74407 + C74408 + C74409 + C74410) * C153648) *
               C153810 * C153711 * C1279 -
           ((C74324 * C3199 - C74325 * C3192 - C74324 * C3200 +
             C154044 * C3204 + C74322 * C1378 - C74323 * C1372 -
             C74322 * C1379 + C154102 * C1387 + C74320 * C365 - C74321 * C345 -
             C74320 * C366 + C154112 * C381 + C74318 * C351 - C74319 * C338 -
             C74318 * C352 + C154116 * C374) *
                C153648 +
            (C75132 + C75131 + C75130 + C75129) * C74316) *
               C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
            C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
            C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
            C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
            C154044 * C1390) *
               C74316 +
           (C74399 + C74400 + C74401 + C74402) * C153648) *
              C153810 * C153711 * C1366 -
          ((C74653 + C74654 + C74655 + C74656) * C153648 +
           (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 + C154044 * C3201 +
            C74322 * C1384 - C74323 * C1375 - C74322 * C1385 + C154102 * C1390 +
            C74320 * C359 - C74321 * C342 - C74320 * C360 + C154112 * C378 +
            C74318 * C357 - C74319 * C341 - C74318 * C358 + C154116 * C377) *
               C74316) *
              C153810 * C153711 * C1367 +
          ((C74318 * C359 - C74319 * C342 - C74318 * C360 + C154116 * C378 +
            C74320 * C1384 - C74321 * C1375 - C74320 * C1385 + C154112 * C1390 +
            C74322 * C3193 - C74323 * C3189 - C74322 * C3194 + C154102 * C3201 +
            C74324 * C4808 - C74325 * C4803 - C74324 * C4809 +
            C154044 * C4812) *
               C74316 +
           (C74657 + C74658 + C74659 + C74660) * C153648) *
              C153810 * C153711 * C1368 -
          ((C74324 * C28564 - C74325 * C28561 - C74324 * C28565 +
            C154044 * C28567 + C74322 * C4806 - C74323 * C4802 -
            C74322 * C4807 + C154102 * C4811 + C74320 * C3195 - C74321 * C3190 -
            C74320 * C3196 + C154112 * C3202 + C74318 * C1382 - C74319 * C1374 -
            C74318 * C1383 + C154116 * C1389) *
               C153648 +
           (C74324 * C28562 - C74325 * C28560 - C74324 * C28563 +
            C154044 * C28566 + C74322 * C4808 - C74323 * C4803 -
            C74322 * C4809 + C154102 * C4812 + C74320 * C3193 - C74321 * C3189 -
            C74320 * C3194 + C154112 * C3201 + C74318 * C1384 - C74319 * C1375 -
            C74318 * C1385 + C154116 * C1390) *
               C74316) *
              C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C74316 +
            (C74399 + C74400 + C74401 + C74402) * C153648) *
               C153810 * C563 -
           ((C74903 + C74904 + C74905 + C74906) * C153648 +
            (C74324 * C4383 - C74325 * C4379 - C74324 * C4384 +
             C154044 * C4391 + C74322 * C1957 - C74323 * C1948 -
             C74322 * C1958 + C154102 * C1963 + C74320 * C1111 -
             C74321 * C1105 - C74320 * C1112 + C154112 * C1123 + C74318 * C586 -
             C74319 * C570 - C74318 * C587 + C154116 * C606) *
                C74316) *
               C153810 * C564 +
           ((C74318 * C588 - C74319 * C571 - C74318 * C589 + C154116 * C607 +
             C74320 * C1526 - C74321 * C1517 - C74320 * C1527 +
             C154112 * C1532 + C74322 * C3511 - C74323 * C3507 -
             C74322 * C3512 + C154102 * C3519 + C74324 * C5038 -
             C74325 * C5033 - C74324 * C5039 + C154044 * C5042) *
                C74316 +
            (C74907 + C74908 + C74909 + C74910) * C153648) *
               C153810 * C565) *
              C1279 +
          (((C74318 * C1111 - C74319 * C1105 - C74318 * C1112 +
             C154116 * C1123 + C74320 * C1957 - C74321 * C1948 -
             C74320 * C1958 + C154112 * C1963 + C74322 * C4383 -
             C74323 * C4379 - C74322 * C4384 + C154102 * C4391 +
             C74324 * C5776 - C74325 * C5771 - C74324 * C5777 +
             C154044 * C5780) *
                C74316 +
            (C75637 + C75638 + C75639 + C75640) * C153648) *
               C153810 * C564 -
           ((C74653 + C74654 + C74655 + C74656) * C153648 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C74316) *
               C153810 * C563 -
           ((C74324 * C28694 - C74325 * C28691 - C74324 * C28695 +
             C154044 * C28697 + C74322 * C5036 - C74323 * C5032 -
             C74322 * C5037 + C154102 * C5041 + C74320 * C3513 -
             C74321 * C3508 - C74320 * C3514 + C154112 * C3520 +
             C74318 * C1524 - C74319 * C1516 - C74318 * C1525 +
             C154116 * C1531) *
                C153648 +
            (C74324 * C28692 - C74325 * C28690 - C74324 * C28693 +
             C154044 * C28696 + C74322 * C5038 - C74323 * C5033 -
             C74322 * C5039 + C154102 * C5042 + C74320 * C3511 -
             C74321 * C3507 - C74320 * C3512 + C154112 * C3519 +
             C74318 * C1526 - C74319 * C1517 - C74318 * C1527 +
             C154116 * C1532) *
                C74316) *
               C153810 * C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C74316 +
             (C70565 + C70566) * C153648) *
                C154110 +
            ((C78866 + C78867) * C74316 + C78793 * C153648) * C154099 +
            C78882 * C154074) *
               C153711 * C1279 -
           ((C79891 * C153648 + (C79908 + C79907) * C74316) * C154074 +
            (C79892 * C153648 + (C79906 + C79905) * C74316) * C154099 +
            ((C70849 + C70850) * C153648 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C74316) *
                C154110) *
               C153711 * C153747) *
              C1281 +
          ((((C70850 + C70849) * C74316 + (C70848 + C70847) * C153648) *
                C154110 +
            (C79873 * C74316 + (C71851 + C71852) * C153648) * C154099 +
            (C79882 * C74316 + (C79185 + C79186) * C153648) * C154074) *
               C153711 * C153747 -
           (C78865 * C154074 + (C71540 * C153648 + C78820 * C74316) * C154099 +
            ((C70568 + C70567) * C153648 + (C70566 + C70565) * C74316) *
                C154110) *
               C153711 * C1279) *
              C1282 +
          (((C70575 * C74316 + C70576 * C153648) * C154110 +
            (C79477 * C74316 + (C71124 + C71123) * C153648) * C154099 +
            (C79478 * C74316 + (C71133 + C71134) * C153648) * C154074) *
               C153711 * C1279 -
           (((C70502 * C3517 - C70503 * C3510 - C70502 * C3518 +
              C153855 * C3522 + C70500 * C1520 - C70501 * C1514 -
              C70500 * C1521 + C70494 * C1529) *
                 C153648 +
             (C79186 + C79185) * C74316) *
                C154074 +
            ((C71854 + C71853) * C153648 + (C71852 + C71851) * C74316) *
                C154099 +
            (C71329 * C153648 + C71330 * C74316) * C154110) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C74316 +
            (C70565 + C70566) * C153648) *
               C154110 +
           ((C78866 + C78867) * C74316 + C78793 * C153648) * C154099 +
           C78882 * C154074) *
              C153711 * C1366 -
          ((C79891 * C153648 + (C79908 + C79907) * C74316) * C154074 +
           (C79892 * C153648 + (C79906 + C79905) * C74316) * C154099 +
           ((C70849 + C70850) * C153648 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C74316) *
               C154110) *
              C153711 * C1367 +
          (((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
             C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
             C153855 * C1390) *
                C74316 +
            (C70851 + C70852) * C153648) *
               C154110 +
           ((C70500 * C1957 - C70501 * C1948 - C70500 * C1958 + C70494 * C1963 +
             C70502 * C4383 - C70503 * C4379 - C70502 * C4384 +
             C153855 * C4391) *
                C74316 +
            (C78491 + C78492) * C153648) *
               C154099 +
           ((C70500 * C3511 - C70501 * C3507 - C70500 * C3512 + C70494 * C3519 +
             C70502 * C5038 - C70503 * C5033 - C70502 * C5039 +
             C153855 * C5042) *
                C74316 +
            (C78493 + C78494) * C153648) *
               C154074) *
              C153711 * C1368 -
          (((C70502 * C28694 - C70503 * C28691 - C70502 * C28695 +
             C153855 * C28697 + C70500 * C5036 - C70501 * C5032 -
             C70500 * C5037 + C70494 * C5041) *
                C153648 +
            (C70502 * C28692 - C70503 * C28690 - C70502 * C28693 +
             C153855 * C28696 + C70500 * C5038 - C70501 * C5033 -
             C70500 * C5039 + C70494 * C5042) *
                C74316) *
               C154074 +
           ((C70502 * C5774 - C70503 * C5770 - C70502 * C5775 +
             C153855 * C5779 + C70500 * C4385 - C70501 * C4380 -
             C70500 * C4386 + C70494 * C4392) *
                C153648 +
            (C70502 * C5776 - C70503 * C5771 - C70502 * C5777 +
             C153855 * C5780 + C70500 * C4383 - C70501 * C4379 -
             C70500 * C4384 + C70494 * C4391) *
                C74316) *
               C154099 +
           ((C70502 * C3195 - C70503 * C3190 - C70502 * C3196 +
             C153855 * C3202 + C70500 * C1382 - C70501 * C1374 -
             C70500 * C1383 + C70494 * C1389) *
                C153648 +
            (C70502 * C3193 - C70503 * C3189 - C70502 * C3194 +
             C153855 * C3201 + C70500 * C1384 - C70501 * C1375 -
             C70500 * C1385 + C70494 * C1390) *
                C74316) *
               C154110) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C74316 +
             (C70565 + C70566) * C153648) *
                C154110 +
            ((C78866 + C78867) * C74316 + C78793 * C153648) * C154099 +
            C78882 * C154074) *
               C563 -
           ((C78879 * C153648 + (C78872 + C78873) * C74316) * C154074 +
            (C78819 * C153648 + (C78869 + C78868) * C74316) * C154099 +
            (C78820 * C153648 + (C78867 + C78866) * C74316) * C154110) *
               C564 +
           (C78882 * C154110 +
            ((C78873 + C78872) * C74316 + C78880 * C153648) * C154099 +
            ((C70500 * C7744 - C70501 * C7740 - C70500 * C7745 +
              C70494 * C7752 + C70502 * C9206 - C70503 * C9201 -
              C70502 * C9207 + C153855 * C9210) *
                 C74316 +
             (C78874 + C78875) * C153648) *
                C154074) *
               C565) *
              C1279 +
          ((((C79905 + C79906) * C74316 + C79873 * C153648) * C154110 +
            ((C79907 + C79908) * C74316 + C79882 * C153648) * C154099 +
            ((C80701 + C80702) * C74316 + (C79909 + C79910) * C153648) *
                C154074) *
               C564 -
           (C80700 * C154074 +
            (C79892 * C153648 + (C79906 + C79905) * C74316) * C154099 +
            ((C70849 + C70850) * C153648 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C74316) *
                C154110) *
               C563 -
           (((C70502 * C31182 - C70503 * C31179 - C70502 * C31183 +
              C153855 * C31185 + C70500 * C9204 - C70501 * C9200 -
              C70500 * C9205 + C70494 * C9209) *
                 C153648 +
             (C70502 * C31180 - C70503 * C31178 - C70502 * C31181 +
              C153855 * C31184 + C70500 * C9206 - C70501 * C9201 -
              C70500 * C9207 + C70494 * C9210) *
                 C74316) *
                C154074 +
            ((C79910 + C79909) * C153648 + (C80702 + C80701) * C74316) *
                C154099 +
            C80700 * C154110) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
              C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
              C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
              C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
              C154044 * C1390) *
                 C74316 +
             (C74399 + C74400 + C74401 + C74402) * C153648) *
                C153810 * C154022 -
            ((C74903 + C74904 + C74905 + C74906) * C153648 +
             (C74324 * C4383 - C74325 * C4379 - C74324 * C4384 +
              C154044 * C4391 + C74322 * C1957 - C74323 * C1948 -
              C74322 * C1958 + C154102 * C1963 + C74320 * C1111 -
              C74321 * C1105 - C74320 * C1112 + C154112 * C1123 +
              C74318 * C586 - C74319 * C570 - C74318 * C587 + C154116 * C606) *
                 C74316) *
                C153810 * C153775) *
               C1279 +
           (((C74318 * C1111 - C74319 * C1105 - C74318 * C1112 +
              C154116 * C1123 + C74320 * C1957 - C74321 * C1948 -
              C74320 * C1958 + C154112 * C1963 + C74322 * C4383 -
              C74323 * C4379 - C74322 * C4384 + C154102 * C4391 +
              C74324 * C5776 - C74325 * C5771 - C74324 * C5777 +
              C154044 * C5780) *
                 C74316 +
             (C75637 + C75638 + C75639 + C75640) * C153648) *
                C153810 * C153775 -
            ((C74653 + C74654 + C74655 + C74656) * C153648 +
             (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
              C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
              C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
              C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
              C74318 * C358 + C154116 * C377) *
                 C74316) *
                C153810 * C154022) *
               C153747) *
              C154013 +
          ((((C74906 + C74905 + C74904 + C74903) * C74316 +
             (C75351 + C75352 + C75353 + C75354) * C153648) *
                C153810 * C153775 -
            ((C74403 + C74404 + C74405 + C74406) * C153648 +
             (C74402 + C74401 + C74400 + C74399) * C74316) *
                C153810 * C154022) *
               C1279 +
           (((C74656 + C74655 + C74654 + C74653) * C74316 +
             (C75129 + C75130 + C75131 + C75132) * C153648) *
                C153810 * C154022 -
            ((C74324 * C5772 - C74325 * C5769 - C74324 * C5773 +
              C154044 * C5778 + C74322 * C4387 - C74323 * C4381 -
              C74322 * C4388 + C154102 * C4393 + C74320 * C1953 -
              C74321 * C1946 - C74320 * C1954 + C154112 * C1961 +
              C74318 * C1115 - C74319 * C1107 - C74318 * C1116 +
              C154116 * C1125) *
                 C153648 +
             (C75640 + C75639 + C75638 + C75637) * C74316) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154115 +
             (C70565 + C70566) * C154108 + C70575 * C154089 +
             C70576 * C154036) *
                C153810 * C154022 -
            (C71539 * C154036 + C71540 * C154089 + (C71127 + C71128) * C154108 +
             (C70502 * C1111 - C70503 * C1105 - C70502 * C1112 +
              C153855 * C1123 + C70500 * C586 - C70501 * C570 - C70500 * C587 +
              C70494 * C606) *
                 C154115) *
                C153810 * C153775) *
               C1279 +
           (((C70500 * C1111 - C70501 * C1105 - C70500 * C1112 +
              C70494 * C1123 + C70502 * C1957 - C70503 * C1948 -
              C70502 * C1958 + C153855 * C1963) *
                 C154115 +
             (C71849 + C71850) * C154108 + (C71851 + C71852) * C154089 +
             (C71853 + C71854) * C154036) *
                C153810 * C153775 -
            (C71329 * C154036 + C71330 * C154089 + (C70849 + C70850) * C154108 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C154115) *
                C153810 * C154022) *
               C153747) *
              C154013 +
          ((((C71128 + C71127) * C154115 + (C71126 + C71125) * C154108 +
             (C71124 + C71123) * C154089 + (C71553 + C71554) * C154036) *
                C153810 * C153775 -
            (C70577 * C154036 + C70578 * C154089 + (C70568 + C70567) * C154108 +
             (C70566 + C70565) * C154115) *
                C153810 * C154022) *
               C1279 +
           (((C70850 + C70849) * C154115 + (C70848 + C70847) * C154108 +
             (C70846 + C70845) * C154089 + (C71343 + C71344) * C154036) *
                C153810 * C154022 -
            ((C70502 * C1949 - C70503 * C1944 - C70502 * C1950 +
              C153855 * C1959 + C70500 * C1119 - C70501 * C1109 -
              C70500 * C1120 + C70494 * C1127) *
                 C154036 +
             (C71854 + C71853) * C154089 + (C71852 + C71851) * C154108 +
             (C71850 + C71849) * C154115) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
               C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                  C74316 +
              (C70565 + C70566) * C153648) *
                 C154110 +
             ((C78866 + C78867) * C74316 + C78793 * C153648) * C154099 +
             C78882 * C154074) *
                C154022 -
            ((C78879 * C153648 + (C78872 + C78873) * C74316) * C154074 +
             (C78819 * C153648 + (C78869 + C78868) * C74316) * C154099 +
             (C78820 * C153648 + (C78867 + C78866) * C74316) * C154110) *
                C153775) *
               C1279 +
           ((((C79905 + C79906) * C74316 + C79873 * C153648) * C154110 +
             ((C79907 + C79908) * C74316 + C79882 * C153648) * C154099 +
             ((C80701 + C80702) * C74316 + (C79909 + C79910) * C153648) *
                 C154074) *
                C153775 -
            (C80700 * C154074 +
             (C79892 * C153648 + (C79906 + C79905) * C74316) * C154099 +
             ((C70849 + C70850) * C153648 +
              (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
               C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                  C74316) *
                 C154110) *
                C154022) *
               C153747) *
              C154013 +
          ((((C78793 * C74316 + C79477 * C153648) * C154110 +
             (C78802 * C74316 + C79478 * C153648) * C154099 +
             (C78880 * C74316 + (C78876 + C78877) * C153648) * C154074) *
                C153775 -
            (C78865 * C154074 + (C71540 * C153648 + C78820 * C74316) * C154099 +
             ((C70568 + C70567) * C153648 + (C70566 + C70565) * C74316) *
                 C154110) *
                C154022) *
               C1279 +
           ((((C70850 + C70849) * C74316 + (C70848 + C70847) * C153648) *
                 C154110 +
             (C79873 * C74316 + (C71851 + C71852) * C153648) * C154099 +
             (C79882 * C74316 + (C79185 + C79186) * C153648) * C154074) *
                C154022 -
            (((C70502 * C6369 - C70503 * C6363 - C70502 * C6370 +
               C153855 * C6381 + C70500 * C6371 - C70501 * C6364 -
               C70500 * C6372 + C70494 * C6382) *
                  C153648 +
              (C79910 + C79909) * C74316) *
                 C154074 +
             ((C79186 + C79185) * C153648 + C79891 * C74316) * C154099 +
             ((C71852 + C71851) * C153648 + C79892 * C74316) * C154110) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
            C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
               C154115 +
           (C70565 + C70566) * C154108 + C70575 * C154089 + C70576 * C154036) *
              C153810 * C153711 * C1366 -
          (C71329 * C154036 + C71330 * C154089 + (C70849 + C70850) * C154108 +
           (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
            C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
               C154115) *
              C153810 * C153711 * C1367 +
          ((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
            C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
            C153855 * C1390) *
               C154115 +
           (C70851 + C70852) * C154108 + (C70853 + C70854) * C154089 +
           (C70855 + C70856) * C154036) *
              C153810 * C153711 * C1368 -
          ((C70502 * C3199 - C70503 * C3192 - C70502 * C3200 + C153855 * C3204 +
            C70500 * C1378 - C70501 * C1372 - C70500 * C1379 + C70494 * C1387) *
               C154036 +
           (C70502 * C3197 - C70503 * C3191 - C70502 * C3198 + C153855 * C3203 +
            C70500 * C1380 - C70501 * C1373 - C70500 * C1381 + C70494 * C1388) *
               C154089 +
           (C70502 * C3195 - C70503 * C3190 - C70502 * C3196 + C153855 * C3202 +
            C70500 * C1382 - C70501 * C1374 - C70500 * C1383 + C70494 * C1389) *
               C154108 +
           (C70502 * C3193 - C70503 * C3189 - C70502 * C3194 + C153855 * C3201 +
            C70500 * C1384 - C70501 * C1375 - C70500 * C1385 + C70494 * C1390) *
               C154115) *
              C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154115 +
            (C70565 + C70566) * C154108 + C70575 * C154089 + C70576 * C154036) *
               C153810 * C153711 * C1279 -
           (C71329 * C154036 + C71330 * C154089 + (C70849 + C70850) * C154108 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C154115) *
               C153810 * C153711 * C153747) *
              C1281 +
          (((C70850 + C70849) * C154115 + (C70848 + C70847) * C154108 +
            (C70846 + C70845) * C154089 + (C71343 + C71344) * C154036) *
               C153810 * C153711 * C153747 -
           (C70577 * C154036 + C70578 * C154089 + (C70568 + C70567) * C154108 +
            (C70566 + C70565) * C154115) *
               C153810 * C153711 * C1279) *
              C1282 +
          ((C70575 * C154115 + C70576 * C154108 + (C70572 + C70571) * C154089 +
            (C70573 + C70574) * C154036) *
               C153810 * C153711 * C1279 -
           ((C70502 * C371 - C70503 * C348 - C70502 * C372 + C153855 * C384 +
             C70500 * C369 - C70501 * C347 - C70500 * C370 + C70494 * C383) *
                C154036 +
            (C71344 + C71343) * C154089 + C71329 * C154108 + C71330 * C154115) *
               C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C74316 +
            (C74399 + C74400 + C74401 + C74402) * C153648) *
               C153810 * C153711 * C1279 -
           ((C74653 + C74654 + C74655 + C74656) * C153648 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C74316) *
               C153810 * C153711 * C153747) *
              C1281 +
          (((C74656 + C74655 + C74654 + C74653) * C74316 +
            (C75129 + C75130 + C75131 + C75132) * C153648) *
               C153810 * C153711 * C153747 -
           ((C74403 + C74404 + C74405 + C74406) * C153648 +
            (C74402 + C74401 + C74400 + C74399) * C74316) *
               C153810 * C153711 * C1279) *
              C1282 +
          (((C74406 + C74405 + C74404 + C74403) * C74316 +
            (C74407 + C74408 + C74409 + C74410) * C153648) *
               C153810 * C153711 * C1279 -
           ((C74324 * C3199 - C74325 * C3192 - C74324 * C3200 +
             C154044 * C3204 + C74322 * C1378 - C74323 * C1372 -
             C74322 * C1379 + C154102 * C1387 + C74320 * C365 - C74321 * C345 -
             C74320 * C366 + C154112 * C381 + C74318 * C351 - C74319 * C338 -
             C74318 * C352 + C154116 * C374) *
                C153648 +
            (C75132 + C75131 + C75130 + C75129) * C74316) *
               C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
            C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
            C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
            C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
            C154044 * C1390) *
               C74316 +
           (C74399 + C74400 + C74401 + C74402) * C153648) *
              C153810 * C153711 * C1366 -
          ((C74653 + C74654 + C74655 + C74656) * C153648 +
           (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 + C154044 * C3201 +
            C74322 * C1384 - C74323 * C1375 - C74322 * C1385 + C154102 * C1390 +
            C74320 * C359 - C74321 * C342 - C74320 * C360 + C154112 * C378 +
            C74318 * C357 - C74319 * C341 - C74318 * C358 + C154116 * C377) *
               C74316) *
              C153810 * C153711 * C1367 +
          ((C74318 * C359 - C74319 * C342 - C74318 * C360 + C154116 * C378 +
            C74320 * C1384 - C74321 * C1375 - C74320 * C1385 + C154112 * C1390 +
            C74322 * C3193 - C74323 * C3189 - C74322 * C3194 + C154102 * C3201 +
            C74324 * C4808 - C74325 * C4803 - C74324 * C4809 +
            C154044 * C4812) *
               C74316 +
           (C74657 + C74658 + C74659 + C74660) * C153648) *
              C153810 * C153711 * C1368 -
          ((C74324 * C28564 - C74325 * C28561 - C74324 * C28565 +
            C154044 * C28567 + C74322 * C4806 - C74323 * C4802 -
            C74322 * C4807 + C154102 * C4811 + C74320 * C3195 - C74321 * C3190 -
            C74320 * C3196 + C154112 * C3202 + C74318 * C1382 - C74319 * C1374 -
            C74318 * C1383 + C154116 * C1389) *
               C153648 +
           (C74324 * C28562 - C74325 * C28560 - C74324 * C28563 +
            C154044 * C28566 + C74322 * C4808 - C74323 * C4803 -
            C74322 * C4809 + C154102 * C4812 + C74320 * C3193 - C74321 * C3189 -
            C74320 * C3194 + C154112 * C3201 + C74318 * C1384 - C74319 * C1375 -
            C74318 * C1385 + C154116 * C1390) *
               C74316) *
              C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C74316 +
             (C70565 + C70566) * C153648) *
                C154110 +
            ((C78866 + C78867) * C74316 + C78793 * C153648) * C154099 +
            C78882 * C154074) *
               C153711 * C1279 -
           ((C79891 * C153648 + (C79908 + C79907) * C74316) * C154074 +
            (C79892 * C153648 + (C79906 + C79905) * C74316) * C154099 +
            ((C70849 + C70850) * C153648 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C74316) *
                C154110) *
               C153711 * C153747) *
              C1281 +
          ((((C70850 + C70849) * C74316 + (C70848 + C70847) * C153648) *
                C154110 +
            (C79873 * C74316 + (C71851 + C71852) * C153648) * C154099 +
            (C79882 * C74316 + (C79185 + C79186) * C153648) * C154074) *
               C153711 * C153747 -
           (C78865 * C154074 + (C71540 * C153648 + C78820 * C74316) * C154099 +
            ((C70568 + C70567) * C153648 + (C70566 + C70565) * C74316) *
                C154110) *
               C153711 * C1279) *
              C1282 +
          (((C70575 * C74316 + C70576 * C153648) * C154110 +
            (C79477 * C74316 + (C71124 + C71123) * C153648) * C154099 +
            (C79478 * C74316 + (C71133 + C71134) * C153648) * C154074) *
               C153711 * C1279 -
           (((C70502 * C3517 - C70503 * C3510 - C70502 * C3518 +
              C153855 * C3522 + C70500 * C1520 - C70501 * C1514 -
              C70500 * C1521 + C70494 * C1529) *
                 C153648 +
             (C79186 + C79185) * C74316) *
                C154074 +
            ((C71854 + C71853) * C153648 + (C71852 + C71851) * C74316) *
                C154099 +
            (C71329 * C153648 + C71330 * C74316) * C154110) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C74316 +
            (C70565 + C70566) * C153648) *
               C154110 +
           ((C78866 + C78867) * C74316 + C78793 * C153648) * C154099 +
           C78882 * C154074) *
              C153711 * C1366 -
          ((C79891 * C153648 + (C79908 + C79907) * C74316) * C154074 +
           (C79892 * C153648 + (C79906 + C79905) * C74316) * C154099 +
           ((C70849 + C70850) * C153648 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C74316) *
               C154110) *
              C153711 * C1367 +
          (((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
             C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
             C153855 * C1390) *
                C74316 +
            (C70851 + C70852) * C153648) *
               C154110 +
           ((C70500 * C1957 - C70501 * C1948 - C70500 * C1958 + C70494 * C1963 +
             C70502 * C4383 - C70503 * C4379 - C70502 * C4384 +
             C153855 * C4391) *
                C74316 +
            (C78491 + C78492) * C153648) *
               C154099 +
           ((C70500 * C3511 - C70501 * C3507 - C70500 * C3512 + C70494 * C3519 +
             C70502 * C5038 - C70503 * C5033 - C70502 * C5039 +
             C153855 * C5042) *
                C74316 +
            (C78493 + C78494) * C153648) *
               C154074) *
              C153711 * C1368 -
          (((C70502 * C28694 - C70503 * C28691 - C70502 * C28695 +
             C153855 * C28697 + C70500 * C5036 - C70501 * C5032 -
             C70500 * C5037 + C70494 * C5041) *
                C153648 +
            (C70502 * C28692 - C70503 * C28690 - C70502 * C28693 +
             C153855 * C28696 + C70500 * C5038 - C70501 * C5033 -
             C70500 * C5039 + C70494 * C5042) *
                C74316) *
               C154074 +
           ((C70502 * C5774 - C70503 * C5770 - C70502 * C5775 +
             C153855 * C5779 + C70500 * C4385 - C70501 * C4380 -
             C70500 * C4386 + C70494 * C4392) *
                C153648 +
            (C70502 * C5776 - C70503 * C5771 - C70502 * C5777 +
             C153855 * C5780 + C70500 * C4383 - C70501 * C4379 -
             C70500 * C4384 + C70494 * C4391) *
                C74316) *
               C154099 +
           ((C70502 * C3195 - C70503 * C3190 - C70502 * C3196 +
             C153855 * C3202 + C70500 * C1382 - C70501 * C1374 -
             C70500 * C1383 + C70494 * C1389) *
                C153648 +
            (C70502 * C3193 - C70503 * C3189 - C70502 * C3194 +
             C153855 * C3201 + C70500 * C1384 - C70501 * C1375 -
             C70500 * C1385 + C70494 * C1390) *
                C74316) *
               C154110) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
              C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
              C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
              C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
              C154044 * C1390) *
                 C74316 +
             (C74399 + C74400 + C74401 + C74402) * C153648) *
                C153810 * C2086 -
            ((C74903 + C74904 + C74905 + C74906) * C153648 +
             (C74324 * C4383 - C74325 * C4379 - C74324 * C4384 +
              C154044 * C4391 + C74322 * C1957 - C74323 * C1948 -
              C74322 * C1958 + C154102 * C1963 + C74320 * C1111 -
              C74321 * C1105 - C74320 * C1112 + C154112 * C1123 +
              C74318 * C586 - C74319 * C570 - C74318 * C587 + C154116 * C606) *
                 C74316) *
                C153810 * C153775) *
               C154021 +
           (((C74318 * C1111 - C74319 * C1105 - C74318 * C1112 +
              C154116 * C1123 + C74320 * C1957 - C74321 * C1948 -
              C74320 * C1958 + C154112 * C1963 + C74322 * C4383 -
              C74323 * C4379 - C74322 * C4384 + C154102 * C4391 +
              C74324 * C5776 - C74325 * C5771 - C74324 * C5777 +
              C154044 * C5780) *
                 C74316 +
             (C75637 + C75638 + C75639 + C75640) * C153648) *
                C153810 * C153775 -
            ((C74653 + C74654 + C74655 + C74656) * C153648 +
             (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
              C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
              C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
              C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
              C74318 * C358 + C154116 * C377) *
                 C74316) *
                C153810 * C2086) *
               C153747) *
              C154013 +
          ((((C74906 + C74905 + C74904 + C74903) * C74316 +
             (C75351 + C75352 + C75353 + C75354) * C153648) *
                C153810 * C153775 -
            ((C74403 + C74404 + C74405 + C74406) * C153648 +
             (C74402 + C74401 + C74400 + C74399) * C74316) *
                C153810 * C2086) *
               C154021 +
           (((C74656 + C74655 + C74654 + C74653) * C74316 +
             (C75129 + C75130 + C75131 + C75132) * C153648) *
                C153810 * C2086 -
            ((C74324 * C5772 - C74325 * C5769 - C74324 * C5773 +
              C154044 * C5778 + C74322 * C4387 - C74323 * C4381 -
              C74322 * C4388 + C154102 * C4393 + C74320 * C1953 -
              C74321 * C1946 - C74320 * C1954 + C154112 * C1961 +
              C74318 * C1115 - C74319 * C1107 - C74318 * C1116 +
              C154116 * C1125) *
                 C153648 +
             (C75640 + C75639 + C75638 + C75637) * C74316) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154115 +
             (C70565 + C70566) * C154108 + C70575 * C154089 +
             C70576 * C154036) *
                C153810 * C2086 -
            (C71539 * C154036 + C71540 * C154089 + (C71127 + C71128) * C154108 +
             (C70502 * C1111 - C70503 * C1105 - C70502 * C1112 +
              C153855 * C1123 + C70500 * C586 - C70501 * C570 - C70500 * C587 +
              C70494 * C606) *
                 C154115) *
                C153810 * C153775) *
               C154021 +
           (((C70500 * C1111 - C70501 * C1105 - C70500 * C1112 +
              C70494 * C1123 + C70502 * C1957 - C70503 * C1948 -
              C70502 * C1958 + C153855 * C1963) *
                 C154115 +
             (C71849 + C71850) * C154108 + (C71851 + C71852) * C154089 +
             (C71853 + C71854) * C154036) *
                C153810 * C153775 -
            (C71329 * C154036 + C71330 * C154089 + (C70849 + C70850) * C154108 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C154115) *
                C153810 * C2086) *
               C153747) *
              C154013 +
          ((((C71128 + C71127) * C154115 + (C71126 + C71125) * C154108 +
             (C71124 + C71123) * C154089 + (C71553 + C71554) * C154036) *
                C153810 * C153775 -
            (C70577 * C154036 + C70578 * C154089 + (C70568 + C70567) * C154108 +
             (C70566 + C70565) * C154115) *
                C153810 * C2086) *
               C154021 +
           (((C70850 + C70849) * C154115 + (C70848 + C70847) * C154108 +
             (C70846 + C70845) * C154089 + (C71343 + C71344) * C154036) *
                C153810 * C2086 -
            ((C70502 * C1949 - C70503 * C1944 - C70502 * C1950 +
              C153855 * C1959 + C70500 * C1119 - C70501 * C1109 -
              C70500 * C1120 + C70494 * C1127) *
                 C154036 +
             (C71854 + C71853) * C154089 + (C71852 + C71851) * C154108 +
             (C71850 + C71849) * C154115) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
               C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                  C74316 +
              (C70565 + C70566) * C153648) *
                 C154110 +
             ((C78866 + C78867) * C74316 + C78793 * C153648) * C154099 +
             C78882 * C154074) *
                C2086 -
            (C82484 * C154074 +
             (C78819 * C153648 + (C78869 + C78868) * C74316) * C154099 +
             (C78820 * C153648 + (C78867 + C78866) * C74316) * C154110) *
                C153775) *
               C154021 +
           ((((C79905 + C79906) * C74316 + C79873 * C153648) * C154110 +
             ((C79907 + C79908) * C74316 + C79882 * C153648) * C154099 +
             ((C80701 + C80702) * C74316 + (C79909 + C79910) * C153648) *
                 C154074) *
                C153775 -
            (C80700 * C154074 +
             (C79892 * C153648 + (C79906 + C79905) * C74316) * C154099 +
             ((C70849 + C70850) * C153648 +
              (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
               C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                  C74316) *
                 C154110) *
                C2086) *
               C153747) *
              C154013 +
          ((((C78793 * C74316 + C79477 * C153648) * C154110 +
             (C78802 * C74316 + C79478 * C153648) * C154099 +
             (C78880 * C74316 + (C78876 + C78877) * C153648) * C154074) *
                C153775 -
            (C78865 * C154074 + (C71540 * C153648 + C78820 * C74316) * C154099 +
             ((C70568 + C70567) * C153648 + (C70566 + C70565) * C74316) *
                 C154110) *
                C2086) *
               C154021 +
           ((((C70850 + C70849) * C74316 + (C70848 + C70847) * C153648) *
                 C154110 +
             (C79873 * C74316 + (C71851 + C71852) * C153648) * C154099 +
             (C79882 * C74316 + (C79185 + C79186) * C153648) * C154074) *
                C2086 -
            (((C70502 * C6369 - C70503 * C6363 - C70502 * C6370 +
               C153855 * C6381 + C70500 * C6371 - C70501 * C6364 -
               C70500 * C6372 + C70494 * C6382) *
                  C153648 +
              (C79910 + C79909) * C74316) *
                 C154074 +
             ((C79186 + C79185) * C153648 + C79891 * C74316) * C154099 +
             ((C71852 + C71851) * C153648 + C79892 * C74316) * C154110) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C74316 +
            (C74399 + C74400 + C74401 + C74402) * C153648) *
               C153810 * C154094 -
           ((C74903 + C74904 + C74905 + C74906) * C153648 +
            (C74324 * C4383 - C74325 * C4379 - C74324 * C4384 +
             C154044 * C4391 + C74322 * C1957 - C74323 * C1948 -
             C74322 * C1958 + C154102 * C1963 + C74320 * C1111 -
             C74321 * C1105 - C74320 * C1112 + C154112 * C1123 + C74318 * C586 -
             C74319 * C570 - C74318 * C587 + C154116 * C606) *
                C74316) *
               C153810 * C154095 +
           ((C74318 * C588 - C74319 * C571 - C74318 * C589 + C154116 * C607 +
             C74320 * C1526 - C74321 * C1517 - C74320 * C1527 +
             C154112 * C1532 + C74322 * C3511 - C74323 * C3507 -
             C74322 * C3512 + C154102 * C3519 + C74324 * C5038 -
             C74325 * C5033 - C74324 * C5039 + C154044 * C5042) *
                C74316 +
            (C74907 + C74908 + C74909 + C74910) * C153648) *
               C153810 * C2602) *
              C154021 +
          (((C74318 * C1111 - C74319 * C1105 - C74318 * C1112 +
             C154116 * C1123 + C74320 * C1957 - C74321 * C1948 -
             C74320 * C1958 + C154112 * C1963 + C74322 * C4383 -
             C74323 * C4379 - C74322 * C4384 + C154102 * C4391 +
             C74324 * C5776 - C74325 * C5771 - C74324 * C5777 +
             C154044 * C5780) *
                C74316 +
            (C75637 + C75638 + C75639 + C75640) * C153648) *
               C153810 * C154095 -
           ((C74653 + C74654 + C74655 + C74656) * C153648 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C74316) *
               C153810 * C154094 -
           ((C74324 * C28694 - C74325 * C28691 - C74324 * C28695 +
             C154044 * C28697 + C74322 * C5036 - C74323 * C5032 -
             C74322 * C5037 + C154102 * C5041 + C74320 * C3513 -
             C74321 * C3508 - C74320 * C3514 + C154112 * C3520 +
             C74318 * C1524 - C74319 * C1516 - C74318 * C1525 +
             C154116 * C1531) *
                C153648 +
            (C74324 * C28692 - C74325 * C28690 - C74324 * C28693 +
             C154044 * C28696 + C74322 * C5038 - C74323 * C5033 -
             C74322 * C5039 + C154102 * C5042 + C74320 * C3511 -
             C74321 * C3507 - C74320 * C3512 + C154112 * C3519 +
             C74318 * C1526 - C74319 * C1517 - C74318 * C1527 +
             C154116 * C1532) *
                C74316) *
               C153810 * C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154115 +
            (C70565 + C70566) * C154108 + C70575 * C154089 + C70576 * C154036) *
               C153810 * C154094 -
           (C71539 * C154036 + C71540 * C154089 + (C71127 + C71128) * C154108 +
            (C70502 * C1111 - C70503 * C1105 - C70502 * C1112 +
             C153855 * C1123 + C70500 * C586 - C70501 * C570 - C70500 * C587 +
             C70494 * C606) *
                C154115) *
               C153810 * C154095 +
           ((C70500 * C588 - C70501 * C571 - C70500 * C589 + C70494 * C607 +
             C70502 * C1526 - C70503 * C1517 - C70502 * C1527 +
             C153855 * C1532) *
                C154115 +
            (C71129 + C71130) * C154108 + (C71131 + C71132) * C154089 +
            (C71133 + C71134) * C154036) *
               C153810 * C2602) *
              C154021 +
          (((C70500 * C1111 - C70501 * C1105 - C70500 * C1112 + C70494 * C1123 +
             C70502 * C1957 - C70503 * C1948 - C70502 * C1958 +
             C153855 * C1963) *
                C154115 +
            (C71849 + C71850) * C154108 + (C71851 + C71852) * C154089 +
            (C71853 + C71854) * C154036) *
               C153810 * C154095 -
           (C71329 * C154036 + C71330 * C154089 + (C70849 + C70850) * C154108 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C154115) *
               C153810 * C154094 -
           ((C70502 * C3517 - C70503 * C3510 - C70502 * C3518 +
             C153855 * C3522 + C70500 * C1520 - C70501 * C1514 -
             C70500 * C1521 + C70494 * C1529) *
                C154036 +
            (C70502 * C3515 - C70503 * C3509 - C70502 * C3516 +
             C153855 * C3521 + C70500 * C1522 - C70501 * C1515 -
             C70500 * C1523 + C70494 * C1530) *
                C154089 +
            (C70502 * C3513 - C70503 * C3508 - C70502 * C3514 +
             C153855 * C3520 + C70500 * C1524 - C70501 * C1516 -
             C70500 * C1525 + C70494 * C1531) *
                C154108 +
            (C70502 * C3511 - C70503 * C3507 - C70502 * C3512 +
             C153855 * C3519 + C70500 * C1526 - C70501 * C1517 -
             C70500 * C1527 + C70494 * C1532) *
                C154115) *
               C153810 * C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C74316 +
             (C70565 + C70566) * C153648) *
                C154110 +
            ((C78866 + C78867) * C74316 + C78793 * C153648) * C154099 +
            C78882 * C154074) *
               C154094 -
           (C82484 * C154074 +
            (C78819 * C153648 + (C78869 + C78868) * C74316) * C154099 +
            (C78820 * C153648 + (C78867 + C78866) * C74316) * C154110) *
               C154095 +
           (C78882 * C154110 +
            ((C78873 + C78872) * C74316 + C78880 * C153648) * C154099 +
            ((C82487 + C82488) * C74316 + (C78874 + C78875) * C153648) *
                C154074) *
               C2602) *
              C154021 +
          ((((C79905 + C79906) * C74316 + C79873 * C153648) * C154110 +
            ((C79907 + C79908) * C74316 + C79882 * C153648) * C154099 +
            ((C80701 + C80702) * C74316 + (C79909 + C79910) * C153648) *
                C154074) *
               C154095 -
           (C80700 * C154074 +
            (C79892 * C153648 + (C79906 + C79905) * C74316) * C154099 +
            ((C70849 + C70850) * C153648 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C74316) *
                C154110) *
               C154094 -
           (((C70502 * C31182 - C70503 * C31179 - C70502 * C31183 +
              C153855 * C31185 + C70500 * C9204 - C70501 * C9200 -
              C70500 * C9205 + C70494 * C9209) *
                 C153648 +
             (C70502 * C31180 - C70503 * C31178 - C70502 * C31181 +
              C153855 * C31184 + C70500 * C9206 - C70501 * C9201 -
              C70500 * C9207 + C70494 * C9210) *
                 C74316) *
                C154074 +
            ((C79910 + C79909) * C153648 + (C80702 + C80701) * C74316) *
                C154099 +
            C80700 * C154110) *
               C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
                 C70502 * C357 - C70503 * C341 - C70502 * C358 +
                 C153855 * C377) *
                    C154115 +
                (C70565 + C70566) * C154108 + C70575 * C154089 +
                C70576 * C154036) *
                   C153810 * C2086 -
               (C71539 * C154036 + C71540 * C154089 +
                (C71127 + C71128) * C154108 +
                (C70502 * C1111 - C70503 * C1105 - C70502 * C1112 +
                 C153855 * C1123 + C70500 * C586 - C70501 * C570 -
                 C70500 * C587 + C70494 * C606) *
                    C154115) *
                   C153810 * C153775) *
                  C153695 * C1281 +
              (((C71128 + C71127) * C154115 + (C71126 + C71125) * C154108 +
                (C71124 + C71123) * C154089 + (C71553 + C71554) * C154036) *
                   C153810 * C153775 -
               (C70577 * C154036 + C70578 * C154089 +
                (C70568 + C70567) * C154108 + (C70566 + C70565) * C154115) *
                   C153810 * C2086) *
                  C153695 * C1282 +
              ((C70575 * C154115 + C70576 * C154108 +
                (C70572 + C70571) * C154089 + (C70573 + C70574) * C154036) *
                   C153810 * C2086 -
               ((C70502 * C1121 - C70503 * C1110 - C70502 * C1122 +
                 C153855 * C1128 + C70500 * C598 - C70501 * C576 -
                 C70500 * C599 + C70494 * C612) *
                    C154036 +
                (C71554 + C71553) * C154089 + C71539 * C154108 +
                C71540 * C154115) *
                   C153810 * C153775) *
                  C153695 * C1283) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
                 C70502 * C357 - C70503 * C341 - C70502 * C358 +
                 C153855 * C377) *
                    C154115 +
                (C70565 + C70566) * C154108 + C70575 * C154089 +
                C70576 * C154036) *
                   C153810 * C2086 -
               (C71539 * C154036 + C71540 * C154089 +
                (C71127 + C71128) * C154108 +
                (C70502 * C1111 - C70503 * C1105 - C70502 * C1112 +
                 C153855 * C1123 + C70500 * C586 - C70501 * C570 -
                 C70500 * C587 + C70494 * C606) *
                    C154115) *
                   C153810 * C153775) *
                  C332 +
              (((C70500 * C1111 - C70501 * C1105 - C70500 * C1112 +
                 C70494 * C1123 + C70502 * C1957 - C70503 * C1948 -
                 C70502 * C1958 + C153855 * C1963) *
                    C154115 +
                (C71849 + C71850) * C154108 + (C71851 + C71852) * C154089 +
                (C71853 + C71854) * C154036) *
                   C153810 * C153775 -
               (C71329 * C154036 + C71330 * C154089 +
                (C70849 + C70850) * C154108 +
                (C70502 * C359 - C70503 * C342 - C70502 * C360 +
                 C153855 * C378 + C70500 * C357 - C70501 * C341 -
                 C70500 * C358 + C70494 * C377) *
                    C154115) *
                   C153810 * C2086) *
                  C333 +
              (((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
                 C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
                 C153855 * C1390) *
                    C154115 +
                (C70851 + C70852) * C154108 + (C70853 + C70854) * C154089 +
                (C70855 + C70856) * C154036) *
                   C153810 * C2086 -
               ((C70502 * C4389 - C70503 * C4382 - C70502 * C4390 +
                 C153855 * C4394 + C70500 * C1951 - C70501 * C1945 -
                 C70500 * C1952 + C70494 * C1960) *
                    C154036 +
                (C70502 * C4387 - C70503 * C4381 - C70502 * C4388 +
                 C153855 * C4393 + C70500 * C1953 - C70501 * C1946 -
                 C70500 * C1954 + C70494 * C1961) *
                    C154089 +
                (C70502 * C4385 - C70503 * C4380 - C70502 * C4386 +
                 C153855 * C4392 + C70500 * C1955 - C70501 * C1947 -
                 C70500 * C1956 + C70494 * C1962) *
                    C154108 +
                (C70502 * C4383 - C70503 * C4379 - C70502 * C4384 +
                 C153855 * C4391 + C70500 * C1957 - C70501 * C1948 -
                 C70500 * C1958 + C70494 * C1963) *
                    C154115) *
                   C153810 * C153775) *
                  C334) *
             C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
            C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
               C154115 +
           (C70565 + C70566) * C154108 + C70575 * C154089 + C70576 * C154036) *
              C153810 * C2292 -
          (C71539 * C154036 + C71540 * C154089 + (C71127 + C71128) * C154108 +
           (C70502 * C1111 - C70503 * C1105 - C70502 * C1112 + C153855 * C1123 +
            C70500 * C586 - C70501 * C570 - C70500 * C587 + C70494 * C606) *
               C154115) *
              C153810 * C2293 +
          ((C70500 * C588 - C70501 * C571 - C70500 * C589 + C70494 * C607 +
            C70502 * C1526 - C70503 * C1517 - C70502 * C1527 +
            C153855 * C1532) *
               C154115 +
           (C71129 + C71130) * C154108 + (C71131 + C71132) * C154089 +
           (C71133 + C71134) * C154036) *
              C153810 * C2294 -
          ((C70502 * C8574 - C70503 * C8573 - C70502 * C8575 + C153855 * C8576 +
            C70500 * C2303 - C70501 * C2297 - C70500 * C2304 + C70494 * C2312) *
               C154036 +
           (C70502 * C6371 - C70503 * C6364 - C70502 * C6372 + C153855 * C6382 +
            C70500 * C2305 - C70501 * C2298 - C70500 * C2306 + C70494 * C2313) *
               C154089 +
           (C70502 * C6375 - C70503 * C6366 - C70502 * C6376 + C153855 * C6384 +
            C70500 * C2307 - C70501 * C2299 - C70500 * C2308 + C70494 * C2314) *
               C154108 +
           (C70502 * C6379 - C70503 * C6368 - C70502 * C6380 + C153855 * C6386 +
            C70500 * C2309 - C70501 * C2300 - C70500 * C2310 + C70494 * C2315) *
               C154115) *
              C153810 * C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C74316 +
            (C74399 + C74400 + C74401 + C74402) * C153648) *
               C153810 * C2086 -
           ((C74903 + C74904 + C74905 + C74906) * C153648 +
            (C74324 * C4383 - C74325 * C4379 - C74324 * C4384 +
             C154044 * C4391 + C74322 * C1957 - C74323 * C1948 -
             C74322 * C1958 + C154102 * C1963 + C74320 * C1111 -
             C74321 * C1105 - C74320 * C1112 + C154112 * C1123 + C74318 * C586 -
             C74319 * C570 - C74318 * C587 + C154116 * C606) *
                C74316) *
               C153810 * C153775) *
              C153695 * C1281 +
          (((C74906 + C74905 + C74904 + C74903) * C74316 +
            (C75351 + C75352 + C75353 + C75354) * C153648) *
               C153810 * C153775 -
           ((C74403 + C74404 + C74405 + C74406) * C153648 +
            (C74402 + C74401 + C74400 + C74399) * C74316) *
               C153810 * C2086) *
              C153695 * C1282 +
          (((C74406 + C74405 + C74404 + C74403) * C74316 +
            (C74407 + C74408 + C74409 + C74410) * C153648) *
               C153810 * C2086 -
           ((C74324 * C4389 - C74325 * C4382 - C74324 * C4390 +
             C154044 * C4394 + C74322 * C1951 - C74323 * C1945 -
             C74322 * C1952 + C154102 * C1960 + C74320 * C1117 -
             C74321 * C1108 - C74320 * C1118 + C154112 * C1126 + C74318 * C580 -
             C74319 * C567 - C74318 * C581 + C154116 * C603) *
                C153648 +
            (C75354 + C75353 + C75352 + C75351) * C74316) *
               C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C74316 +
            (C74399 + C74400 + C74401 + C74402) * C153648) *
               C153810 * C2086 -
           ((C74903 + C74904 + C74905 + C74906) * C153648 +
            (C74324 * C4383 - C74325 * C4379 - C74324 * C4384 +
             C154044 * C4391 + C74322 * C1957 - C74323 * C1948 -
             C74322 * C1958 + C154102 * C1963 + C74320 * C1111 -
             C74321 * C1105 - C74320 * C1112 + C154112 * C1123 + C74318 * C586 -
             C74319 * C570 - C74318 * C587 + C154116 * C606) *
                C74316) *
               C153810 * C153775) *
              C332 +
          (((C74318 * C1111 - C74319 * C1105 - C74318 * C1112 +
             C154116 * C1123 + C74320 * C1957 - C74321 * C1948 -
             C74320 * C1958 + C154112 * C1963 + C74322 * C4383 -
             C74323 * C4379 - C74322 * C4384 + C154102 * C4391 +
             C74324 * C5776 - C74325 * C5771 - C74324 * C5777 +
             C154044 * C5780) *
                C74316 +
            (C75637 + C75638 + C75639 + C75640) * C153648) *
               C153810 * C153775 -
           ((C74653 + C74654 + C74655 + C74656) * C153648 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C74316) *
               C153810 * C2086) *
              C333 +
          (((C74318 * C359 - C74319 * C342 - C74318 * C360 + C154116 * C378 +
             C74320 * C1384 - C74321 * C1375 - C74320 * C1385 +
             C154112 * C1390 + C74322 * C3193 - C74323 * C3189 -
             C74322 * C3194 + C154102 * C3201 + C74324 * C4808 -
             C74325 * C4803 - C74324 * C4809 + C154044 * C4812) *
                C74316 +
            (C74657 + C74658 + C74659 + C74660) * C153648) *
               C153810 * C2086 -
           ((C74324 * C29108 - C74325 * C29105 - C74324 * C29109 +
             C154044 * C29111 + C74322 * C5774 - C74323 * C5770 -
             C74322 * C5775 + C154102 * C5779 + C74320 * C4385 -
             C74321 * C4380 - C74320 * C4386 + C154112 * C4392 +
             C74318 * C1955 - C74319 * C1947 - C74318 * C1956 +
             C154116 * C1962) *
                C153648 +
            (C74324 * C29106 - C74325 * C29104 - C74324 * C29107 +
             C154044 * C29110 + C74322 * C5776 - C74323 * C5771 -
             C74322 * C5777 + C154102 * C5780 + C74320 * C4383 -
             C74321 * C4379 - C74320 * C4384 + C154112 * C4391 +
             C74318 * C1957 - C74319 * C1948 - C74318 * C1958 +
             C154116 * C1963) *
                C74316) *
               C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
            C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
            C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
            C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
            C154044 * C1390) *
               C74316 +
           (C74399 + C74400 + C74401 + C74402) * C153648) *
              C153810 * C2292 -
          ((C74903 + C74904 + C74905 + C74906) * C153648 +
           (C74324 * C4383 - C74325 * C4379 - C74324 * C4384 + C154044 * C4391 +
            C74322 * C1957 - C74323 * C1948 - C74322 * C1958 + C154102 * C1963 +
            C74320 * C1111 - C74321 * C1105 - C74320 * C1112 + C154112 * C1123 +
            C74318 * C586 - C74319 * C570 - C74318 * C587 + C154116 * C606) *
               C74316) *
              C153810 * C2293 +
          ((C74318 * C588 - C74319 * C571 - C74318 * C589 + C154116 * C607 +
            C74320 * C1526 - C74321 * C1517 - C74320 * C1527 + C154112 * C1532 +
            C74322 * C3511 - C74323 * C3507 - C74322 * C3512 + C154102 * C3519 +
            C74324 * C5038 - C74325 * C5033 - C74324 * C5039 +
            C154044 * C5042) *
               C74316 +
           (C74907 + C74908 + C74909 + C74910) * C153648) *
              C153810 * C2294 -
          ((C74324 * C32003 - C74325 * C32002 - C74324 * C32004 +
            C154044 * C32005 + C74322 * C6373 - C74323 * C6365 -
            C74322 * C6374 + C154102 * C6383 + C74320 * C6375 - C74321 * C6366 -
            C74320 * C6376 + C154112 * C6384 + C74318 * C2307 - C74319 * C2299 -
            C74318 * C2308 + C154116 * C2314) *
               C153648 +
           (C74324 * C30186 - C74325 * C30183 - C74324 * C30187 +
            C154044 * C30189 + C74322 * C6377 - C74323 * C6367 -
            C74322 * C6378 + C154102 * C6385 + C74320 * C6379 - C74321 * C6368 -
            C74320 * C6380 + C154112 * C6386 + C74318 * C2309 - C74319 * C2300 -
            C74318 * C2310 + C154116 * C2315) *
               C74316) *
              C153810 * C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C74316 +
             (C70565 + C70566) * C153648) *
                C154110 +
            ((C78866 + C78867) * C74316 + C78793 * C153648) * C154099 +
            C78882 * C154074) *
               C2086 -
           ((C78879 * C153648 + (C78872 + C78873) * C74316) * C154074 +
            (C78819 * C153648 + (C78869 + C78868) * C74316) * C154099 +
            (C78820 * C153648 + (C78867 + C78866) * C74316) * C154110) *
               C153775) *
              C153695 * C1281 +
          (((C78793 * C74316 + C79477 * C153648) * C154110 +
            (C78802 * C74316 + C79478 * C153648) * C154099 +
            (C78880 * C74316 + (C78876 + C78877) * C153648) * C154074) *
               C153775 -
           (C78865 * C154074 + (C71540 * C153648 + C78820 * C74316) * C154099 +
            ((C70568 + C70567) * C153648 + (C70566 + C70565) * C74316) *
                C154110) *
               C2086) *
              C153695 * C1282 +
          (((C70575 * C74316 + C70576 * C153648) * C154110 +
            (C79477 * C74316 + (C71124 + C71123) * C153648) * C154099 +
            (C79478 * C74316 + (C71133 + C71134) * C153648) * C154074) *
               C2086 -
           (((C70502 * C8574 - C70503 * C8573 - C70502 * C8575 +
              C153855 * C8576 + C70500 * C2303 - C70501 * C2297 -
              C70500 * C2304 + C70494 * C2312) *
                 C153648 +
             (C78877 + C78876) * C74316) *
                C154074 +
            ((C71134 + C71133) * C153648 + C78837 * C74316) * C154099 +
            (C71539 * C153648 + C71540 * C74316) * C154110) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C74316 +
             (C70565 + C70566) * C153648) *
                C154110 +
            ((C78866 + C78867) * C74316 + C78793 * C153648) * C154099 +
            C78882 * C154074) *
               C2086 -
           ((C78879 * C153648 + (C78872 + C78873) * C74316) * C154074 +
            (C78819 * C153648 + (C78869 + C78868) * C74316) * C154099 +
            (C78820 * C153648 + (C78867 + C78866) * C74316) * C154110) *
               C153775) *
              C332 +
          ((((C79905 + C79906) * C74316 + C79873 * C153648) * C154110 +
            ((C79907 + C79908) * C74316 + C79882 * C153648) * C154099 +
            ((C80701 + C80702) * C74316 + (C79909 + C79910) * C153648) *
                C154074) *
               C153775 -
           (C80700 * C154074 +
            (C79892 * C153648 + (C79906 + C79905) * C74316) * C154099 +
            ((C70849 + C70850) * C153648 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C74316) *
                C154110) *
               C2086) *
              C333 +
          ((((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
              C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
              C153855 * C1390) *
                 C74316 +
             (C70851 + C70852) * C153648) *
                C154110 +
            ((C81693 + C81694) * C74316 + (C78491 + C78492) * C153648) *
                C154099 +
            ((C81695 + C81696) * C74316 + (C78493 + C78494) * C153648) *
                C154074) *
               C2086 -
           (((C70502 * C32003 - C70503 * C32002 - C70502 * C32004 +
              C153855 * C32005 + C70500 * C6373 - C70501 * C6365 -
              C70500 * C6374 + C70494 * C6383) *
                 C153648 +
             (C70502 * C30186 - C70503 * C30183 - C70502 * C30187 +
              C153855 * C30189 + C70500 * C6377 - C70501 * C6367 -
              C70500 * C6378 + C70494 * C6385) *
                 C74316) *
                C154074 +
            ((C78494 + C78493) * C153648 + (C81696 + C81695) * C74316) *
                C154099 +
            ((C78492 + C78491) * C153648 + (C81694 + C81693) * C74316) *
                C154110) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C74316 +
            (C70565 + C70566) * C153648) *
               C154110 +
           ((C78866 + C78867) * C74316 + C78793 * C153648) * C154099 +
           C78882 * C154074) *
              C2292 -
          (C82484 * C154074 +
           (C78819 * C153648 + (C78869 + C78868) * C74316) * C154099 +
           (C78820 * C153648 + (C78867 + C78866) * C74316) * C154110) *
              C2293 +
          (C78882 * C154110 +
           ((C78873 + C78872) * C74316 + C78880 * C153648) * C154099 +
           ((C82487 + C82488) * C74316 + (C78874 + C78875) * C153648) *
               C154074) *
              C2294 -
          (((C70502 * C56410 - C70503 * C56409 - C70502 * C56411 +
             C153855 * C56412 + C70500 * C10556 - C70501 * C10552 -
             C70500 * C10557 + C70494 * C10561) *
                C153648 +
            (C70502 * C34033 - C70503 * C34030 - C70502 * C34034 +
             C153855 * C34036 + C70500 * C10558 - C70501 * C10553 -
             C70500 * C10559 + C70494 * C10562) *
                C74316) *
               C154074 +
           ((C78875 + C78874) * C153648 + (C82488 + C82487) * C74316) *
               C154099 +
           C82484 * C154110) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C74316 +
            (C74399 + C74400 + C74401 + C74402) * C153648) *
               C153810 * C154094 -
           ((C74903 + C74904 + C74905 + C74906) * C153648 +
            (C74324 * C4383 - C74325 * C4379 - C74324 * C4384 +
             C154044 * C4391 + C74322 * C1957 - C74323 * C1948 -
             C74322 * C1958 + C154102 * C1963 + C74320 * C1111 -
             C74321 * C1105 - C74320 * C1112 + C154112 * C1123 + C74318 * C586 -
             C74319 * C570 - C74318 * C587 + C154116 * C606) *
                C74316) *
               C153810 * C154095 +
           ((C74318 * C588 - C74319 * C571 - C74318 * C589 + C154116 * C607 +
             C74320 * C1526 - C74321 * C1517 - C74320 * C1527 +
             C154112 * C1532 + C74322 * C3511 - C74323 * C3507 -
             C74322 * C3512 + C154102 * C3519 + C74324 * C5038 -
             C74325 * C5033 - C74324 * C5039 + C154044 * C5042) *
                C74316 +
            (C74907 + C74908 + C74909 + C74910) * C153648) *
               C153810 * C2602) *
              C153695 * C154013 +
          (((C74906 + C74905 + C74904 + C74903) * C74316 +
            (C75351 + C75352 + C75353 + C75354) * C153648) *
               C153810 * C154095 -
           ((C74403 + C74404 + C74405 + C74406) * C153648 +
            (C74402 + C74401 + C74400 + C74399) * C74316) *
               C153810 * C154094 -
           ((C74324 * C5034 - C74325 * C5031 - C74324 * C5035 +
             C154044 * C5040 + C74322 * C3515 - C74323 * C3509 -
             C74322 * C3516 + C154102 * C3521 + C74320 * C1522 -
             C74321 * C1515 - C74320 * C1523 + C154112 * C1530 + C74318 * C592 -
             C74319 * C573 - C74318 * C593 + C154116 * C609) *
                C153648 +
            (C74910 + C74909 + C74908 + C74907) * C74316) *
               C153810 * C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154115 +
            (C70565 + C70566) * C154108 + C70575 * C154089 + C70576 * C154036) *
               C153810 * C154094 -
           (C71539 * C154036 + C71540 * C154089 + (C71127 + C71128) * C154108 +
            (C70502 * C1111 - C70503 * C1105 - C70502 * C1112 +
             C153855 * C1123 + C70500 * C586 - C70501 * C570 - C70500 * C587 +
             C70494 * C606) *
                C154115) *
               C153810 * C154095 +
           ((C70500 * C588 - C70501 * C571 - C70500 * C589 + C70494 * C607 +
             C70502 * C1526 - C70503 * C1517 - C70502 * C1527 +
             C153855 * C1532) *
                C154115 +
            (C71129 + C71130) * C154108 + (C71131 + C71132) * C154089 +
            (C71133 + C71134) * C154036) *
               C153810 * C2602) *
              C153695 * C154013 +
          (((C71128 + C71127) * C154115 + (C71126 + C71125) * C154108 +
            (C71124 + C71123) * C154089 + (C71553 + C71554) * C154036) *
               C153810 * C154095 -
           (C70577 * C154036 + C70578 * C154089 + (C70568 + C70567) * C154108 +
            (C70566 + C70565) * C154115) *
               C153810 * C154094 -
           ((C70502 * C1518 - C70503 * C1513 - C70502 * C1519 +
             C153855 * C1528 + C70500 * C596 - C70501 * C575 - C70500 * C597 +
             C70494 * C611) *
                C154036 +
            (C71134 + C71133) * C154089 + (C71132 + C71131) * C154108 +
            (C71130 + C71129) * C154115) *
               C153810 * C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C74316 +
             (C70565 + C70566) * C153648) *
                C154110 +
            ((C78866 + C78867) * C74316 + C78793 * C153648) * C154099 +
            C78882 * C154074) *
               C154094 -
           (C82484 * C154074 +
            (C78819 * C153648 + (C78869 + C78868) * C74316) * C154099 +
            (C78820 * C153648 + (C78867 + C78866) * C74316) * C154110) *
               C154095 +
           (C78882 * C154110 +
            ((C78873 + C78872) * C74316 + C78880 * C153648) * C154099 +
            ((C82487 + C82488) * C74316 + (C78874 + C78875) * C153648) *
                C154074) *
               C2602) *
              C153695 * C154013 +
          (((C78793 * C74316 + C79477 * C153648) * C154110 +
            (C78802 * C74316 + C79478 * C153648) * C154099 +
            (C78880 * C74316 + (C78876 + C78877) * C153648) * C154074) *
               C154095 -
           (C78865 * C154074 + (C71540 * C153648 + C78820 * C74316) * C154099 +
            ((C70568 + C70567) * C153648 + (C70566 + C70565) * C74316) *
                C154110) *
               C154094 -
           (((C70502 * C9202 - C70503 * C9199 - C70502 * C9203 +
              C153855 * C9208 + C70500 * C7748 - C70501 * C7742 -
              C70500 * C7749 + C70494 * C7754) *
                 C153648 +
             (C78875 + C78874) * C74316) *
                C154074 +
            ((C78877 + C78876) * C153648 + C78879 * C74316) * C154099 +
            C78865 * C154110) *
               C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154115 +
            (C70565 + C70566) * C154108 + C70575 * C154089 + C70576 * C154036) *
               C153810 * C2086 -
           (C71539 * C154036 + C71540 * C154089 + (C71127 + C71128) * C154108 +
            (C70502 * C1111 - C70503 * C1105 - C70502 * C1112 +
             C153855 * C1123 + C70500 * C586 - C70501 * C570 - C70500 * C587 +
             C70494 * C606) *
                C154115) *
               C153810 * C153775) *
              C332 +
          (((C70500 * C1111 - C70501 * C1105 - C70500 * C1112 + C70494 * C1123 +
             C70502 * C1957 - C70503 * C1948 - C70502 * C1958 +
             C153855 * C1963) *
                C154115 +
            (C71849 + C71850) * C154108 + (C71851 + C71852) * C154089 +
            (C71853 + C71854) * C154036) *
               C153810 * C153775 -
           (C71329 * C154036 + C71330 * C154089 + (C70849 + C70850) * C154108 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C154115) *
               C153810 * C2086) *
              C333 +
          (((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
             C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
             C153855 * C1390) *
                C154115 +
            (C70851 + C70852) * C154108 + (C70853 + C70854) * C154089 +
            (C70855 + C70856) * C154036) *
               C153810 * C2086 -
           ((C70502 * C4389 - C70503 * C4382 - C70502 * C4390 +
             C153855 * C4394 + C70500 * C1951 - C70501 * C1945 -
             C70500 * C1952 + C70494 * C1960) *
                C154036 +
            (C70502 * C4387 - C70503 * C4381 - C70502 * C4388 +
             C153855 * C4393 + C70500 * C1953 - C70501 * C1946 -
             C70500 * C1954 + C70494 * C1961) *
                C154089 +
            (C70502 * C4385 - C70503 * C4380 - C70502 * C4386 +
             C153855 * C4392 + C70500 * C1955 - C70501 * C1947 -
             C70500 * C1956 + C70494 * C1962) *
                C154108 +
            (C70502 * C4383 - C70503 * C4379 - C70502 * C4384 +
             C153855 * C4391 + C70500 * C1957 - C70501 * C1948 -
             C70500 * C1958 + C70494 * C1963) *
                C154115) *
               C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154115 +
            (C70565 + C70566) * C154108 + C70575 * C154089 + C70576 * C154036) *
               C153810 * C2086 -
           (C71539 * C154036 + C71540 * C154089 + (C71127 + C71128) * C154108 +
            (C70502 * C1111 - C70503 * C1105 - C70502 * C1112 +
             C153855 * C1123 + C70500 * C586 - C70501 * C570 - C70500 * C587 +
             C70494 * C606) *
                C154115) *
               C153810 * C153775) *
              C153695 * C1281 +
          (((C71128 + C71127) * C154115 + (C71126 + C71125) * C154108 +
            (C71124 + C71123) * C154089 + (C71553 + C71554) * C154036) *
               C153810 * C153775 -
           (C70577 * C154036 + C70578 * C154089 + (C70568 + C70567) * C154108 +
            (C70566 + C70565) * C154115) *
               C153810 * C2086) *
              C153695 * C1282 +
          ((C70575 * C154115 + C70576 * C154108 + (C70572 + C70571) * C154089 +
            (C70573 + C70574) * C154036) *
               C153810 * C2086 -
           ((C70502 * C1121 - C70503 * C1110 - C70502 * C1122 +
             C153855 * C1128 + C70500 * C598 - C70501 * C576 - C70500 * C599 +
             C70494 * C612) *
                C154036 +
            (C71554 + C71553) * C154089 + C71539 * C154108 + C71540 * C154115) *
               C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C74316 +
            (C74399 + C74400 + C74401 + C74402) * C153648) *
               C153810 * C2086 -
           ((C74903 + C74904 + C74905 + C74906) * C153648 +
            (C74324 * C4383 - C74325 * C4379 - C74324 * C4384 +
             C154044 * C4391 + C74322 * C1957 - C74323 * C1948 -
             C74322 * C1958 + C154102 * C1963 + C74320 * C1111 -
             C74321 * C1105 - C74320 * C1112 + C154112 * C1123 + C74318 * C586 -
             C74319 * C570 - C74318 * C587 + C154116 * C606) *
                C74316) *
               C153810 * C153775) *
              C153695 * C1281 +
          (((C74906 + C74905 + C74904 + C74903) * C74316 +
            (C75351 + C75352 + C75353 + C75354) * C153648) *
               C153810 * C153775 -
           ((C74403 + C74404 + C74405 + C74406) * C153648 +
            (C74402 + C74401 + C74400 + C74399) * C74316) *
               C153810 * C2086) *
              C153695 * C1282 +
          (((C74406 + C74405 + C74404 + C74403) * C74316 +
            (C74407 + C74408 + C74409 + C74410) * C153648) *
               C153810 * C2086 -
           ((C74324 * C4389 - C74325 * C4382 - C74324 * C4390 +
             C154044 * C4394 + C74322 * C1951 - C74323 * C1945 -
             C74322 * C1952 + C154102 * C1960 + C74320 * C1117 -
             C74321 * C1108 - C74320 * C1118 + C154112 * C1126 + C74318 * C580 -
             C74319 * C567 - C74318 * C581 + C154116 * C603) *
                C153648 +
            (C75354 + C75353 + C75352 + C75351) * C74316) *
               C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C74316 +
            (C74399 + C74400 + C74401 + C74402) * C153648) *
               C153810 * C2086 -
           ((C74903 + C74904 + C74905 + C74906) * C153648 +
            (C74324 * C4383 - C74325 * C4379 - C74324 * C4384 +
             C154044 * C4391 + C74322 * C1957 - C74323 * C1948 -
             C74322 * C1958 + C154102 * C1963 + C74320 * C1111 -
             C74321 * C1105 - C74320 * C1112 + C154112 * C1123 + C74318 * C586 -
             C74319 * C570 - C74318 * C587 + C154116 * C606) *
                C74316) *
               C153810 * C153775) *
              C332 +
          (((C74318 * C1111 - C74319 * C1105 - C74318 * C1112 +
             C154116 * C1123 + C74320 * C1957 - C74321 * C1948 -
             C74320 * C1958 + C154112 * C1963 + C74322 * C4383 -
             C74323 * C4379 - C74322 * C4384 + C154102 * C4391 +
             C74324 * C5776 - C74325 * C5771 - C74324 * C5777 +
             C154044 * C5780) *
                C74316 +
            (C75637 + C75638 + C75639 + C75640) * C153648) *
               C153810 * C153775 -
           ((C74653 + C74654 + C74655 + C74656) * C153648 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C74316) *
               C153810 * C2086) *
              C333 +
          (((C74318 * C359 - C74319 * C342 - C74318 * C360 + C154116 * C378 +
             C74320 * C1384 - C74321 * C1375 - C74320 * C1385 +
             C154112 * C1390 + C74322 * C3193 - C74323 * C3189 -
             C74322 * C3194 + C154102 * C3201 + C74324 * C4808 -
             C74325 * C4803 - C74324 * C4809 + C154044 * C4812) *
                C74316 +
            (C74657 + C74658 + C74659 + C74660) * C153648) *
               C153810 * C2086 -
           ((C74324 * C29108 - C74325 * C29105 - C74324 * C29109 +
             C154044 * C29111 + C74322 * C5774 - C74323 * C5770 -
             C74322 * C5775 + C154102 * C5779 + C74320 * C4385 -
             C74321 * C4380 - C74320 * C4386 + C154112 * C4392 +
             C74318 * C1955 - C74319 * C1947 - C74318 * C1956 +
             C154116 * C1962) *
                C153648 +
            (C74324 * C29106 - C74325 * C29104 - C74324 * C29107 +
             C154044 * C29110 + C74322 * C5776 - C74323 * C5771 -
             C74322 * C5777 + C154102 * C5780 + C74320 * C4383 -
             C74321 * C4379 - C74320 * C4384 + C154112 * C4391 +
             C74318 * C1957 - C74319 * C1948 - C74318 * C1958 +
             C154116 * C1963) *
                C74316) *
               C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C74316 +
             (C70565 + C70566) * C153648) *
                C154110 +
            ((C78866 + C78867) * C74316 + C78793 * C153648) * C154099 +
            C78882 * C154074) *
               C2086 -
           ((C78879 * C153648 + (C78872 + C78873) * C74316) * C154074 +
            (C78819 * C153648 + (C78869 + C78868) * C74316) * C154099 +
            (C78820 * C153648 + (C78867 + C78866) * C74316) * C154110) *
               C153775) *
              C153695 * C1281 +
          (((C78793 * C74316 + C79477 * C153648) * C154110 +
            (C78802 * C74316 + C79478 * C153648) * C154099 +
            (C78880 * C74316 + (C78876 + C78877) * C153648) * C154074) *
               C153775 -
           (C78865 * C154074 + (C71540 * C153648 + C78820 * C74316) * C154099 +
            ((C70568 + C70567) * C153648 + (C70566 + C70565) * C74316) *
                C154110) *
               C2086) *
              C153695 * C1282 +
          (((C70575 * C74316 + C70576 * C153648) * C154110 +
            (C79477 * C74316 + (C71124 + C71123) * C153648) * C154099 +
            (C79478 * C74316 + (C71133 + C71134) * C153648) * C154074) *
               C2086 -
           (((C70502 * C8574 - C70503 * C8573 - C70502 * C8575 +
              C153855 * C8576 + C70500 * C2303 - C70501 * C2297 -
              C70500 * C2304 + C70494 * C2312) *
                 C153648 +
             (C78877 + C78876) * C74316) *
                C154074 +
            ((C71134 + C71133) * C153648 + C78837 * C74316) * C154099 +
            (C71539 * C153648 + C71540 * C74316) * C154110) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C74316 +
             (C70565 + C70566) * C153648) *
                C154110 +
            ((C78866 + C78867) * C74316 + C78793 * C153648) * C154099 +
            C78882 * C154074) *
               C2086 -
           ((C78879 * C153648 + (C78872 + C78873) * C74316) * C154074 +
            (C78819 * C153648 + (C78869 + C78868) * C74316) * C154099 +
            (C78820 * C153648 + (C78867 + C78866) * C74316) * C154110) *
               C153775) *
              C332 +
          ((((C79905 + C79906) * C74316 + C79873 * C153648) * C154110 +
            ((C79907 + C79908) * C74316 + C79882 * C153648) * C154099 +
            ((C80701 + C80702) * C74316 + (C79909 + C79910) * C153648) *
                C154074) *
               C153775 -
           (C80700 * C154074 +
            (C79892 * C153648 + (C79906 + C79905) * C74316) * C154099 +
            ((C70849 + C70850) * C153648 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C74316) *
                C154110) *
               C2086) *
              C333 +
          ((((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
              C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
              C153855 * C1390) *
                 C74316 +
             (C70851 + C70852) * C153648) *
                C154110 +
            ((C81693 + C81694) * C74316 + (C78491 + C78492) * C153648) *
                C154099 +
            ((C81695 + C81696) * C74316 + (C78493 + C78494) * C153648) *
                C154074) *
               C2086 -
           (((C70502 * C32003 - C70503 * C32002 - C70502 * C32004 +
              C153855 * C32005 + C70500 * C6373 - C70501 * C6365 -
              C70500 * C6374 + C70494 * C6383) *
                 C153648 +
             (C70502 * C30186 - C70503 * C30183 - C70502 * C30187 +
              C153855 * C30189 + C70500 * C6377 - C70501 * C6367 -
              C70500 * C6378 + C70494 * C6385) *
                 C74316) *
                C154074 +
            ((C78494 + C78493) * C153648 + (C81696 + C81695) * C74316) *
                C154099 +
            ((C78492 + C78491) * C153648 + (C81694 + C81693) * C74316) *
                C154110) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C153643 +
             (C70565 + C70566) * C153651 + C70575 * C83605) *
                C154037 +
            ((C78866 + C78867) * C153643 + C78793 * C153651 + C79477 * C83605) *
                C153897) *
               C153711 * C154021 -
           ((C88813 * C83605 + C79892 * C153651 + (C79906 + C79905) * C153643) *
                C153897 +
            (C71330 * C83605 + (C70849 + C70850) * C153651 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C153643) *
                C154037) *
               C153711 * C153747) *
              C154090 +
          ((((C70850 + C70849) * C153643 + (C70848 + C70847) * C153651 +
             (C70846 + C70845) * C83605) *
                C154037 +
            (C79873 * C153643 + (C71851 + C71852) * C153651 +
             (C71853 + C71854) * C83605) *
                C153897) *
               C153711 * C153747 -
           ((C71539 * C83605 + C71540 * C153651 + C78820 * C153643) * C153897 +
            (C70578 * C83605 + (C70568 + C70567) * C153651 +
             (C70566 + C70565) * C153643) *
                C154037) *
               C153711 * C154021) *
              C154091 +
          (((C70575 * C153643 + C70576 * C153651 + (C70572 + C70571) * C83605) *
                C154037 +
            (C79477 * C153643 + (C71124 + C71123) * C153651 +
             (C71553 + C71554) * C83605) *
                C153897) *
               C153711 * C154021 -
           (((C70502 * C1949 - C70503 * C1944 - C70502 * C1950 +
              C153855 * C1959 + C70500 * C1119 - C70501 * C1109 -
              C70500 * C1120 + C70494 * C1127) *
                 C83605 +
             (C71854 + C71853) * C153651 + C88813 * C153643) *
                C153897 +
            ((C71344 + C71343) * C83605 + C71329 * C153651 + C71330 * C153643) *
                C154037) *
               C153711 * C153747) *
              C796)) /
        (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
               C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                  C153643 +
              (C70565 + C70566) * C153651 + C70575 * C83605) *
                 C154037 +
             ((C78866 + C78867) * C153643 + C78793 * C153651 +
              C79477 * C83605) *
                 C153897) *
                C154022 -
            ((C78837 * C83605 + C78819 * C153651 +
              (C78869 + C78868) * C153643) *
                 C153897 +
             (C71540 * C83605 + C78820 * C153651 +
              (C78867 + C78866) * C153643) *
                 C154037) *
                C153775) *
               C154021 +
           ((((C79905 + C79906) * C153643 + C79873 * C153651 +
              C89491 * C83605) *
                 C154037 +
             ((C79907 + C79908) * C153643 + C79882 * C153651 +
              (C79185 + C79186) * C83605) *
                 C153897) *
                C153775 -
            ((C88813 * C83605 + C79892 * C153651 +
              (C79906 + C79905) * C153643) *
                 C153897 +
             (C71330 * C83605 + (C70849 + C70850) * C153651 +
              (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
               C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                  C153643) *
                 C154037) *
                C154022) *
               C153747) *
              C335 +
          ((((C78793 * C153643 + C79477 * C153651 + C89104 * C83605) * C154037 +
             (C78802 * C153643 + C79478 * C153651 +
              (C71133 + C71134) * C83605) *
                 C153897) *
                C153775 -
            ((C71539 * C83605 + C71540 * C153651 + C78820 * C153643) * C153897 +
             (C70578 * C83605 + (C70568 + C70567) * C153651 +
              (C70566 + C70565) * C153643) *
                 C154037) *
                C154022) *
               C154021 +
           ((((C70850 + C70849) * C153643 + (C70848 + C70847) * C153651 +
              (C70846 + C70845) * C83605) *
                 C154037 +
             (C79873 * C153643 + C89491 * C153651 +
              (C71853 + C71854) * C83605) *
                 C153897) *
                C154022 -
            (((C70502 * C3517 - C70503 * C3510 - C70502 * C3518 +
               C153855 * C3522 + C70500 * C1520 - C70501 * C1514 -
               C70500 * C1521 + C70494 * C1529) *
                  C83605 +
              (C79186 + C79185) * C153651 + C79891 * C153643) *
                 C153897 +
             ((C71854 + C71853) * C83605 + C88813 * C153651 +
              C79892 * C153643) *
                 C154037) *
                C153775) *
               C153747) *
              C153682)) /
        (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C153643 +
             (C70565 + C70566) * C153651 + C70575 * C83605) *
                C154037 +
            ((C78866 + C78867) * C153643 + C78793 * C153651 + C79477 * C83605) *
                C153897) *
               C153711 * C332 -
           (((C71852 + C71851) * C83605 + C79892 * C153651 +
             (C79906 + C79905) * C153643) *
                C153897 +
            (C71330 * C83605 + (C70849 + C70850) * C153651 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C153643) *
                C154037) *
               C153711 * C333 +
           (((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
              C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
              C153855 * C1390) *
                 C153643 +
             (C70851 + C70852) * C153651 + (C70853 + C70854) * C83605) *
                C154037 +
            ((C81693 + C81694) * C153643 + (C78491 + C78492) * C153651 +
             (C88231 + C88232) * C83605) *
                C153897) *
               C153711 * C334) *
              C335 +
          ((((C70850 + C70849) * C153643 + (C70848 + C70847) * C153651 +
             (C70846 + C70845) * C83605) *
                C154037 +
            (C79873 * C153643 + (C71851 + C71852) * C153651 +
             (C71853 + C71854) * C83605) *
                C153897) *
               C153711 * C333 -
           ((C71539 * C83605 + C71540 * C153651 + C78820 * C153643) * C153897 +
            (C70578 * C83605 + (C70568 + C70567) * C153651 +
             (C70566 + C70565) * C153643) *
                C154037) *
               C153711 * C332 -
           (((C70502 * C4389 - C70503 * C4382 - C70502 * C4390 +
              C153855 * C4394 + C70500 * C1951 - C70501 * C1945 -
              C70500 * C1952 + C70494 * C1960) *
                 C83605 +
             (C88232 + C88231) * C153651 + (C78492 + C78491) * C153643) *
                C153897 +
            ((C70856 + C70855) * C83605 + (C70854 + C70853) * C153651 +
             (C70852 + C70851) * C153643) *
                C154037) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C153643 +
            (C70565 + C70566) * C153651 + C70575 * C83605) *
               C154037 +
           ((C78866 + C78867) * C153643 + C78793 * C153651 + C79477 * C83605) *
               C153897) *
              C153711 * C153695 * C130 -
          ((C71539 * C83605 + C71540 * C153651 + C78820 * C153643) * C153897 +
           (C70578 * C83605 + (C70568 + C70567) * C153651 +
            (C70566 + C70565) * C153643) *
               C154037) *
              C153711 * C153695 * C131 +
          ((C70575 * C153643 + C70576 * C153651 + (C70572 + C70571) * C83605) *
               C154037 +
           (C79477 * C153643 + (C71124 + C71123) * C153651 +
            (C71553 + C71554) * C83605) *
               C153897) *
              C153711 * C153695 * C132 -
          (((C70502 * C1121 - C70503 * C1110 - C70502 * C1122 +
             C153855 * C1128 + C70500 * C598 - C70501 * C576 - C70500 * C599 +
             C70494 * C612) *
                C83605 +
            (C71554 + C71553) * C153651 + C71539 * C153643) *
               C153897 +
           ((C70574 + C70573) * C83605 + C70577 * C153651 + C70578 * C153643) *
               C154037) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C153643 +
             (C70565 + C70566) * C153651 + C70575 * C83605) *
                C154037 +
            ((C78866 + C78867) * C153643 + C78793 * C153651 + C79477 * C83605) *
                C153897) *
               C563 -
           ((C78837 * C83605 + C78819 * C153651 + (C78869 + C78868) * C153643) *
                C153897 +
            (C71540 * C83605 + C78820 * C153651 + (C78867 + C78866) * C153643) *
                C154037) *
               C564 +
           ((C78878 * C153643 + C78802 * C153651 + C79478 * C83605) * C154037 +
            ((C78873 + C78872) * C153643 + C78880 * C153651 +
             (C78876 + C78877) * C83605) *
                C153897) *
               C565) *
              C153695 * C335 +
          (((C78793 * C153643 + C79477 * C153651 + (C71124 + C71123) * C83605) *
                C154037 +
            (C78802 * C153643 + C79478 * C153651 + (C71133 + C71134) * C83605) *
                C153897) *
               C564 -
           ((C71539 * C83605 + C71540 * C153651 + C78820 * C153643) * C153897 +
            (C70578 * C83605 + (C70568 + C70567) * C153651 +
             (C70566 + C70565) * C153643) *
                C154037) *
               C563 -
           (((C70502 * C8574 - C70503 * C8573 - C70502 * C8575 +
              C153855 * C8576 + C70500 * C2303 - C70501 * C2297 -
              C70500 * C2304 + C70494 * C2312) *
                 C83605 +
             (C78877 + C78876) * C153651 + C78879 * C153643) *
                C153897 +
            ((C71134 + C71133) * C83605 + C78837 * C153651 + C78819 * C153643) *
                C154037) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C153643 +
             (C70565 + C70566) * C153651 + C70575 * C83605) *
                C154037 +
            ((C78866 + C78867) * C153643 + C78793 * C153651 + C79477 * C83605) *
                C153897) *
               C154022 -
           ((C78837 * C83605 + C78819 * C153651 + (C78869 + C78868) * C153643) *
                C153897 +
            (C71540 * C83605 + C78820 * C153651 + (C78867 + C78866) * C153643) *
                C154037) *
               C153775) *
              C153695 * C154090 +
          (((C78793 * C153643 + C79477 * C153651 + C89104 * C83605) * C154037 +
            (C78802 * C153643 + C79478 * C153651 + (C71133 + C71134) * C83605) *
                C153897) *
               C153775 -
           ((C71539 * C83605 + C71540 * C153651 + C78820 * C153643) * C153897 +
            (C70578 * C83605 + (C70568 + C70567) * C153651 +
             (C70566 + C70565) * C153643) *
                C154037) *
               C154022) *
              C153695 * C154091 +
          (((C70575 * C153643 + C70576 * C153651 + (C70572 + C70571) * C83605) *
                C154037 +
            (C79477 * C153643 + C89104 * C153651 + (C71553 + C71554) * C83605) *
                C153897) *
               C154022 -
           (((C70502 * C1518 - C70503 * C1513 - C70502 * C1519 +
              C153855 * C1528 + C70500 * C596 - C70501 * C575 - C70500 * C597 +
              C70494 * C611) *
                 C83605 +
             (C71134 + C71133) * C153651 + C78837 * C153643) *
                C153897 +
            ((C71554 + C71553) * C83605 + C71539 * C153651 + C71540 * C153643) *
                C154037) *
               C153775) *
              C153695 * C796)) /
        (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C153643 +
            (C70565 + C70566) * C153651 + C70575 * C83605) *
               C154037 +
           ((C78866 + C78867) * C153643 + C78793 * C153651 + C79477 * C83605) *
               C153897) *
              C153711 * C153695 * C130 -
          ((C71539 * C83605 + C71540 * C153651 + C78820 * C153643) * C153897 +
           (C70578 * C83605 + (C70568 + C70567) * C153651 +
            (C70566 + C70565) * C153643) *
               C154037) *
              C153711 * C153695 * C131 +
          ((C70575 * C153643 + C70576 * C153651 + (C70572 + C70571) * C83605) *
               C154037 +
           (C79477 * C153643 + (C71124 + C71123) * C153651 +
            (C71553 + C71554) * C83605) *
               C153897) *
              C153711 * C153695 * C132 -
          (((C70502 * C1121 - C70503 * C1110 - C70502 * C1122 +
             C153855 * C1128 + C70500 * C598 - C70501 * C576 - C70500 * C599 +
             C70494 * C612) *
                C83605 +
            (C71554 + C71553) * C153651 + C71539 * C153643) *
               C153897 +
           ((C70574 + C70573) * C83605 + C70577 * C153651 + C70578 * C153643) *
               C154037) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C153643 +
             (C70565 + C70566) * C153651 + C70575 * C83605) *
                C154037 +
            ((C78866 + C78867) * C153643 + C78793 * C153651 + C79477 * C83605) *
                C153897) *
               C153711 * C332 -
           (((C71852 + C71851) * C83605 + C79892 * C153651 +
             (C79906 + C79905) * C153643) *
                C153897 +
            (C71330 * C83605 + (C70849 + C70850) * C153651 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C153643) *
                C154037) *
               C153711 * C333 +
           (((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
              C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
              C153855 * C1390) *
                 C153643 +
             (C70851 + C70852) * C153651 + (C70853 + C70854) * C83605) *
                C154037 +
            ((C81693 + C81694) * C153643 + (C78491 + C78492) * C153651 +
             (C88231 + C88232) * C83605) *
                C153897) *
               C153711 * C334) *
              C335 +
          ((((C70850 + C70849) * C153643 + (C70848 + C70847) * C153651 +
             (C70846 + C70845) * C83605) *
                C154037 +
            (C79873 * C153643 + (C71851 + C71852) * C153651 +
             (C71853 + C71854) * C83605) *
                C153897) *
               C153711 * C333 -
           ((C71539 * C83605 + C71540 * C153651 + C78820 * C153643) * C153897 +
            (C70578 * C83605 + (C70568 + C70567) * C153651 +
             (C70566 + C70565) * C153643) *
                C154037) *
               C153711 * C332 -
           (((C70502 * C4389 - C70503 * C4382 - C70502 * C4390 +
              C153855 * C4394 + C70500 * C1951 - C70501 * C1945 -
              C70500 * C1952 + C70494 * C1960) *
                 C83605 +
             (C88232 + C88231) * C153651 + (C78492 + C78491) * C153643) *
                C153897 +
            ((C70856 + C70855) * C83605 + (C70854 + C70853) * C153651 +
             (C70852 + C70851) * C153643) *
                C154037) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C153643 +
             (C70565 + C70566) * C153651 + C70575 * C83605) *
                C154037 +
            ((C78866 + C78867) * C153643 + C78793 * C153651 + C79477 * C83605) *
                C153897) *
               C153711 * C154092 -
           ((C88813 * C83605 + C79892 * C153651 + (C79906 + C79905) * C153643) *
                C153897 +
            (C71330 * C83605 + (C70849 + C70850) * C153651 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C153643) *
                C154037) *
               C153711 * C154093 +
           (((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
              C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
              C153855 * C1390) *
                 C153643 +
             (C70851 + C70852) * C153651 + (C70853 + C70854) * C83605) *
                C154037 +
            ((C81693 + C81694) * C153643 + (C78491 + C78492) * C153651 +
             (C88231 + C88232) * C83605) *
                C153897) *
               C153711 * C1657) *
              C154013 +
          ((((C70850 + C70849) * C153643 + (C70848 + C70847) * C153651 +
             (C70846 + C70845) * C83605) *
                C154037 +
            (C79873 * C153643 + C89491 * C153651 + (C71853 + C71854) * C83605) *
                C153897) *
               C153711 * C154093 -
           ((C71539 * C83605 + C71540 * C153651 + C78820 * C153643) * C153897 +
            (C70578 * C83605 + (C70568 + C70567) * C153651 +
             (C70566 + C70565) * C153643) *
                C154037) *
               C153711 * C154092 -
           (((C70502 * C4389 - C70503 * C4382 - C70502 * C4390 +
              C153855 * C4394 + C70500 * C1951 - C70501 * C1945 -
              C70500 * C1952 + C70494 * C1960) *
                 C83605 +
             (C88232 + C88231) * C153651 + (C78492 + C78491) * C153643) *
                C153897 +
            ((C70856 + C70855) * C83605 + (C70854 + C70853) * C153651 +
             (C70852 + C70851) * C153643) *
                C154037) *
               C153711 * C1657) *
              C153682)) /
        (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C153643 +
             (C70565 + C70566) * C153651 + C70575 * C83605) *
                C154037 +
            ((C78866 + C78867) * C153643 + C78793 * C153651 + C79477 * C83605) *
                C153897) *
               C154022 -
           ((C78837 * C83605 + C78819 * C153651 + (C78869 + C78868) * C153643) *
                C153897 +
            (C71540 * C83605 + C78820 * C153651 + (C78867 + C78866) * C153643) *
                C154037) *
               C153775) *
              C154092 +
          ((((C79905 + C79906) * C153643 + C79873 * C153651 + C89491 * C83605) *
                C154037 +
            ((C79907 + C79908) * C153643 + C79882 * C153651 +
             (C79185 + C79186) * C83605) *
                C153897) *
               C153775 -
           ((C88813 * C83605 + C79892 * C153651 + (C79906 + C79905) * C153643) *
                C153897 +
            (C71330 * C83605 + (C70849 + C70850) * C153651 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C153643) *
                C154037) *
               C154022) *
              C154093 +
          ((((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
              C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
              C153855 * C1390) *
                 C153643 +
             (C70851 + C70852) * C153651 + (C70853 + C70854) * C83605) *
                C154037 +
            ((C81693 + C81694) * C153643 + (C78491 + C78492) * C153651 +
             (C88231 + C88232) * C83605) *
                C153897) *
               C154022 -
           (((C70502 * C5034 - C70503 * C5031 - C70502 * C5035 +
              C153855 * C5040 + C70500 * C3515 - C70501 * C3509 -
              C70500 * C3516 + C70494 * C3521) *
                 C83605 +
             (C78494 + C78493) * C153651 + (C81696 + C81695) * C153643) *
                C153897 +
            ((C88232 + C88231) * C83605 + (C78492 + C78491) * C153651 +
             (C81694 + C81693) * C153643) *
                C154037) *
               C153775) *
              C1657) *
         C153676) /
        (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C153643 +
            (C70565 + C70566) * C153651 + C70575 * C83605) *
               C154037 +
           ((C78866 + C78867) * C153643 + C78793 * C153651 + C79477 * C83605) *
               C153897) *
              C153711 * C1366 -
          ((C88813 * C83605 + C79892 * C153651 + (C79906 + C79905) * C153643) *
               C153897 +
           (C71330 * C83605 + (C70849 + C70850) * C153651 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C153643) *
               C154037) *
              C153711 * C1367 +
          (((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
             C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
             C153855 * C1390) *
                C153643 +
            (C70851 + C70852) * C153651 + (C70853 + C70854) * C83605) *
               C154037 +
           ((C81693 + C81694) * C153643 + (C78491 + C78492) * C153651 +
            (C88231 + C88232) * C83605) *
               C153897) *
              C153711 * C1368 -
          (((C70502 * C5772 - C70503 * C5769 - C70502 * C5773 +
             C153855 * C5778 + C70500 * C4387 - C70501 * C4381 -
             C70500 * C4388 + C70494 * C4393) *
                C83605 +
            (C70502 * C5774 - C70503 * C5770 - C70502 * C5775 +
             C153855 * C5779 + C70500 * C4385 - C70501 * C4380 -
             C70500 * C4386 + C70494 * C4392) *
                C153651 +
            (C70502 * C5776 - C70503 * C5771 - C70502 * C5777 +
             C153855 * C5780 + C70500 * C4383 - C70501 * C4379 -
             C70500 * C4384 + C70494 * C4391) *
                C153643) *
               C153897 +
           ((C70502 * C3197 - C70503 * C3191 - C70502 * C3198 +
             C153855 * C3203 + C70500 * C1380 - C70501 * C1373 -
             C70500 * C1381 + C70494 * C1388) *
                C83605 +
            (C70502 * C3195 - C70503 * C3190 - C70502 * C3196 +
             C153855 * C3202 + C70500 * C1382 - C70501 * C1374 -
             C70500 * C1383 + C70494 * C1389) *
                C153651 +
            (C70502 * C3193 - C70503 * C3189 - C70502 * C3194 +
             C153855 * C3201 + C70500 * C1384 - C70501 * C1375 -
             C70500 * C1385 + C70494 * C1390) *
                C153643) *
               C154037) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C153643 +
             (C70565 + C70566) * C153651 + C70575 * C83605) *
                C154037 +
            ((C78866 + C78867) * C153643 + C78793 * C153651 + C79477 * C83605) *
                C153897) *
               C153711 * C1279 -
           ((C88813 * C83605 + C79892 * C153651 + (C79906 + C79905) * C153643) *
                C153897 +
            (C71330 * C83605 + (C70849 + C70850) * C153651 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C153643) *
                C154037) *
               C153711 * C153747) *
              C1281 +
          ((((C70850 + C70849) * C153643 + (C70848 + C70847) * C153651 +
             (C70846 + C70845) * C83605) *
                C154037 +
            (C79873 * C153643 + C89491 * C153651 + (C71853 + C71854) * C83605) *
                C153897) *
               C153711 * C153747 -
           ((C71539 * C83605 + C71540 * C153651 + C78820 * C153643) * C153897 +
            (C70578 * C83605 + (C70568 + C70567) * C153651 +
             (C70566 + C70565) * C153643) *
                C154037) *
               C153711 * C1279) *
              C1282 +
          (((C70575 * C153643 + C70576 * C153651 + (C70572 + C70571) * C83605) *
                C154037 +
            (C79477 * C153643 + C89104 * C153651 + (C71553 + C71554) * C83605) *
                C153897) *
               C153711 * C1279 -
           (((C70502 * C1949 - C70503 * C1944 - C70502 * C1950 +
              C153855 * C1959 + C70500 * C1119 - C70501 * C1109 -
              C70500 * C1120 + C70494 * C1127) *
                 C83605 +
             (C71854 + C71853) * C153651 + C88813 * C153643) *
                C153897 +
            ((C71344 + C71343) * C83605 + C71329 * C153651 + C71330 * C153643) *
                C154037) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C153643 +
             (C70565 + C70566) * C153651 + C70575 * C83605) *
                C154037 +
            ((C78866 + C78867) * C153643 + C78793 * C153651 + C79477 * C83605) *
                C153897) *
               C563 -
           ((C78837 * C83605 + C78819 * C153651 + (C78869 + C78868) * C153643) *
                C153897 +
            (C71540 * C83605 + C78820 * C153651 + (C78867 + C78866) * C153643) *
                C154037) *
               C564 +
           ((C78878 * C153643 + C78802 * C153651 + C79478 * C83605) * C154037 +
            ((C78873 + C78872) * C153643 + C78880 * C153651 +
             (C78876 + C78877) * C83605) *
                C153897) *
               C565) *
              C1279 +
          ((((C79905 + C79906) * C153643 + C79873 * C153651 + C89491 * C83605) *
                C154037 +
            ((C79907 + C79908) * C153643 + C79882 * C153651 +
             (C79185 + C79186) * C83605) *
                C153897) *
               C564 -
           ((C88813 * C83605 + C79892 * C153651 + (C79906 + C79905) * C153643) *
                C153897 +
            (C71330 * C83605 + (C70849 + C70850) * C153651 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C153643) *
                C154037) *
               C563 -
           (((C70502 * C6369 - C70503 * C6363 - C70502 * C6370 +
              C153855 * C6381 + C70500 * C6371 - C70501 * C6364 -
              C70500 * C6372 + C70494 * C6382) *
                 C83605 +
             (C79910 + C79909) * C153651 + (C80702 + C80701) * C153643) *
                C153897 +
            ((C79186 + C79185) * C83605 + C79891 * C153651 + C80694 * C153643) *
                C154037) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
               C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                  C153643 +
              (C70565 + C70566) * C153651 + C70575 * C83605) *
                 C154037 +
             ((C78866 + C78867) * C153643 + C78793 * C153651 +
              C79477 * C83605) *
                 C153897) *
                C154022 -
            ((C78837 * C83605 + C78819 * C153651 +
              (C78869 + C78868) * C153643) *
                 C153897 +
             (C71540 * C83605 + C78820 * C153651 +
              (C78867 + C78866) * C153643) *
                 C154037) *
                C153775) *
               C1279 +
           ((((C79905 + C79906) * C153643 + C79873 * C153651 +
              C89491 * C83605) *
                 C154037 +
             ((C79907 + C79908) * C153643 + C79882 * C153651 +
              (C79185 + C79186) * C83605) *
                 C153897) *
                C153775 -
            ((C88813 * C83605 + C79892 * C153651 +
              (C79906 + C79905) * C153643) *
                 C153897 +
             (C71330 * C83605 + (C70849 + C70850) * C153651 +
              (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
               C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                  C153643) *
                 C154037) *
                C154022) *
               C153747) *
              C154013 +
          ((((C78793 * C153643 + C79477 * C153651 + C89104 * C83605) * C154037 +
             (C78802 * C153643 + C79478 * C153651 +
              (C71133 + C71134) * C83605) *
                 C153897) *
                C153775 -
            ((C71539 * C83605 + C71540 * C153651 + C78820 * C153643) * C153897 +
             (C70578 * C83605 + (C70568 + C70567) * C153651 +
              (C70566 + C70565) * C153643) *
                 C154037) *
                C154022) *
               C1279 +
           ((((C70850 + C70849) * C153643 + (C70848 + C70847) * C153651 +
              (C70846 + C70845) * C83605) *
                 C154037 +
             (C79873 * C153643 + C89491 * C153651 +
              (C71853 + C71854) * C83605) *
                 C153897) *
                C154022 -
            (((C70502 * C3517 - C70503 * C3510 - C70502 * C3518 +
               C153855 * C3522 + C70500 * C1520 - C70501 * C1514 -
               C70500 * C1521 + C70494 * C1529) *
                  C83605 +
              (C79186 + C79185) * C153651 + C79891 * C153643) *
                 C153897 +
             ((C71854 + C71853) * C83605 + C88813 * C153651 +
              C79892 * C153643) *
                 C154037) *
                C153775) *
               C153747) *
              C153682)) /
        (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C153643 +
             (C70565 + C70566) * C153651 + C70575 * C83605) *
                C154037 +
            ((C78866 + C78867) * C153643 + C78793 * C153651 + C79477 * C83605) *
                C153897) *
               C153711 * C1279 -
           ((C88813 * C83605 + C79892 * C153651 + (C79906 + C79905) * C153643) *
                C153897 +
            (C71330 * C83605 + (C70849 + C70850) * C153651 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C153643) *
                C154037) *
               C153711 * C153747) *
              C1281 +
          ((((C70850 + C70849) * C153643 + (C70848 + C70847) * C153651 +
             (C70846 + C70845) * C83605) *
                C154037 +
            (C79873 * C153643 + C89491 * C153651 + (C71853 + C71854) * C83605) *
                C153897) *
               C153711 * C153747 -
           ((C71539 * C83605 + C71540 * C153651 + C78820 * C153643) * C153897 +
            (C70578 * C83605 + (C70568 + C70567) * C153651 +
             (C70566 + C70565) * C153643) *
                C154037) *
               C153711 * C1279) *
              C1282 +
          (((C70575 * C153643 + C70576 * C153651 + (C70572 + C70571) * C83605) *
                C154037 +
            (C79477 * C153643 + C89104 * C153651 + (C71553 + C71554) * C83605) *
                C153897) *
               C153711 * C1279 -
           (((C70502 * C1949 - C70503 * C1944 - C70502 * C1950 +
              C153855 * C1959 + C70500 * C1119 - C70501 * C1109 -
              C70500 * C1120 + C70494 * C1127) *
                 C83605 +
             (C71854 + C71853) * C153651 + C88813 * C153643) *
                C153897 +
            ((C71344 + C71343) * C83605 + C71329 * C153651 + C71330 * C153643) *
                C154037) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C153643 +
            (C70565 + C70566) * C153651 + C70575 * C83605) *
               C154037 +
           ((C78866 + C78867) * C153643 + C78793 * C153651 + C79477 * C83605) *
               C153897) *
              C153711 * C1366 -
          ((C88813 * C83605 + C79892 * C153651 + (C79906 + C79905) * C153643) *
               C153897 +
           (C71330 * C83605 + (C70849 + C70850) * C153651 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C153643) *
               C154037) *
              C153711 * C1367 +
          (((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
             C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
             C153855 * C1390) *
                C153643 +
            (C70851 + C70852) * C153651 + (C70853 + C70854) * C83605) *
               C154037 +
           ((C81693 + C81694) * C153643 + (C78491 + C78492) * C153651 +
            (C88231 + C88232) * C83605) *
               C153897) *
              C153711 * C1368 -
          (((C70502 * C5772 - C70503 * C5769 - C70502 * C5773 +
             C153855 * C5778 + C70500 * C4387 - C70501 * C4381 -
             C70500 * C4388 + C70494 * C4393) *
                C83605 +
            (C70502 * C5774 - C70503 * C5770 - C70502 * C5775 +
             C153855 * C5779 + C70500 * C4385 - C70501 * C4380 -
             C70500 * C4386 + C70494 * C4392) *
                C153651 +
            (C70502 * C5776 - C70503 * C5771 - C70502 * C5777 +
             C153855 * C5780 + C70500 * C4383 - C70501 * C4379 -
             C70500 * C4384 + C70494 * C4391) *
                C153643) *
               C153897 +
           ((C70502 * C3197 - C70503 * C3191 - C70502 * C3198 +
             C153855 * C3203 + C70500 * C1380 - C70501 * C1373 -
             C70500 * C1381 + C70494 * C1388) *
                C83605 +
            (C70502 * C3195 - C70503 * C3190 - C70502 * C3196 +
             C153855 * C3202 + C70500 * C1382 - C70501 * C1374 -
             C70500 * C1383 + C70494 * C1389) *
                C153651 +
            (C70502 * C3193 - C70503 * C3189 - C70502 * C3194 +
             C153855 * C3201 + C70500 * C1384 - C70501 * C1375 -
             C70500 * C1385 + C70494 * C1390) *
                C153643) *
               C154037) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
               C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                  C153643 +
              (C70565 + C70566) * C153651 + C70575 * C83605) *
                 C154037 +
             ((C78866 + C78867) * C153643 + C78793 * C153651 +
              C79477 * C83605) *
                 C153897) *
                C2086 -
            ((C78837 * C83605 + C78819 * C153651 +
              (C78869 + C78868) * C153643) *
                 C153897 +
             (C71540 * C83605 + C78820 * C153651 +
              (C78867 + C78866) * C153643) *
                 C154037) *
                C153775) *
               C154021 +
           ((((C79905 + C79906) * C153643 + C79873 * C153651 +
              C89491 * C83605) *
                 C154037 +
             ((C79907 + C79908) * C153643 + C79882 * C153651 +
              (C79185 + C79186) * C83605) *
                 C153897) *
                C153775 -
            ((C88813 * C83605 + C79892 * C153651 +
              (C79906 + C79905) * C153643) *
                 C153897 +
             (C71330 * C83605 + (C70849 + C70850) * C153651 +
              (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
               C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                  C153643) *
                 C154037) *
                C2086) *
               C153747) *
              C154013 +
          ((((C78793 * C153643 + C79477 * C153651 + C89104 * C83605) * C154037 +
             (C78802 * C153643 + C79478 * C153651 +
              (C71133 + C71134) * C83605) *
                 C153897) *
                C153775 -
            ((C71539 * C83605 + C71540 * C153651 + C78820 * C153643) * C153897 +
             (C70578 * C83605 + (C70568 + C70567) * C153651 +
              (C70566 + C70565) * C153643) *
                 C154037) *
                C2086) *
               C154021 +
           ((((C70850 + C70849) * C153643 + (C70848 + C70847) * C153651 +
              (C70846 + C70845) * C83605) *
                 C154037 +
             (C79873 * C153643 + C89491 * C153651 +
              (C71853 + C71854) * C83605) *
                 C153897) *
                C2086 -
            (((C70502 * C3517 - C70503 * C3510 - C70502 * C3518 +
               C153855 * C3522 + C70500 * C1520 - C70501 * C1514 -
               C70500 * C1521 + C70494 * C1529) *
                  C83605 +
              (C79186 + C79185) * C153651 + C79891 * C153643) *
                 C153897 +
             ((C71854 + C71853) * C83605 + C88813 * C153651 +
              C79892 * C153643) *
                 C154037) *
                C153775) *
               C153747) *
              C153682)) /
        (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C153643 +
             (C70565 + C70566) * C153651 + C70575 * C83605) *
                C154037 +
            ((C78866 + C78867) * C153643 + C78793 * C153651 + C79477 * C83605) *
                C153897) *
               C154094 -
           ((C78837 * C83605 + C78819 * C153651 + (C78869 + C78868) * C153643) *
                C153897 +
            (C71540 * C83605 + C78820 * C153651 + (C78867 + C78866) * C153643) *
                C154037) *
               C154095 +
           ((C78878 * C153643 + C78802 * C153651 + C79478 * C83605) * C154037 +
            ((C78873 + C78872) * C153643 + C78880 * C153651 +
             (C78876 + C78877) * C83605) *
                C153897) *
               C2602) *
              C154021 +
          ((((C79905 + C79906) * C153643 + C79873 * C153651 + C89491 * C83605) *
                C154037 +
            ((C79907 + C79908) * C153643 + C79882 * C153651 +
             (C79185 + C79186) * C83605) *
                C153897) *
               C154095 -
           ((C88813 * C83605 + C79892 * C153651 + (C79906 + C79905) * C153643) *
                C153897 +
            (C71330 * C83605 + (C70849 + C70850) * C153651 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C153643) *
                C154037) *
               C154094 -
           (((C70502 * C6369 - C70503 * C6363 - C70502 * C6370 +
              C153855 * C6381 + C70500 * C6371 - C70501 * C6364 -
              C70500 * C6372 + C70494 * C6382) *
                 C83605 +
             (C79910 + C79909) * C153651 + (C80702 + C80701) * C153643) *
                C153897 +
            ((C79186 + C79185) * C83605 + C79891 * C153651 + C80694 * C153643) *
                C154037) *
               C2602) *
              C153747) *
         C153676) /
        (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C153643 +
             (C70565 + C70566) * C153651 + C70575 * C83605) *
                C154037 +
            ((C78866 + C78867) * C153643 + C78793 * C153651 + C79477 * C83605) *
                C153897) *
               C2086 -
           ((C78837 * C83605 + C78819 * C153651 + (C78869 + C78868) * C153643) *
                C153897 +
            (C71540 * C83605 + C78820 * C153651 + (C78867 + C78866) * C153643) *
                C154037) *
               C153775) *
              C332 +
          ((((C79905 + C79906) * C153643 + C79873 * C153651 + C89491 * C83605) *
                C154037 +
            ((C79907 + C79908) * C153643 + C79882 * C153651 +
             (C79185 + C79186) * C83605) *
                C153897) *
               C153775 -
           ((C88813 * C83605 + C79892 * C153651 + (C79906 + C79905) * C153643) *
                C153897 +
            (C71330 * C83605 + (C70849 + C70850) * C153651 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C153643) *
                C154037) *
               C2086) *
              C333 +
          ((((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
              C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
              C153855 * C1390) *
                 C153643 +
             (C70851 + C70852) * C153651 + (C70853 + C70854) * C83605) *
                C154037 +
            ((C81693 + C81694) * C153643 + (C78491 + C78492) * C153651 +
             (C88231 + C88232) * C83605) *
                C153897) *
               C2086 -
           (((C70502 * C5034 - C70503 * C5031 - C70502 * C5035 +
              C153855 * C5040 + C70500 * C3515 - C70501 * C3509 -
              C70500 * C3516 + C70494 * C3521) *
                 C83605 +
             (C78494 + C78493) * C153651 + (C81696 + C81695) * C153643) *
                C153897 +
            ((C88232 + C88231) * C83605 + (C78492 + C78491) * C153651 +
             (C81694 + C81693) * C153643) *
                C154037) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C153643 +
             (C70565 + C70566) * C153651 + C70575 * C83605) *
                C154037 +
            ((C78866 + C78867) * C153643 + C78793 * C153651 + C79477 * C83605) *
                C153897) *
               C2086 -
           ((C78837 * C83605 + C78819 * C153651 + (C78869 + C78868) * C153643) *
                C153897 +
            (C71540 * C83605 + C78820 * C153651 + (C78867 + C78866) * C153643) *
                C154037) *
               C153775) *
              C153695 * C1281 +
          (((C78793 * C153643 + C79477 * C153651 + C89104 * C83605) * C154037 +
            (C78802 * C153643 + C79478 * C153651 + (C71133 + C71134) * C83605) *
                C153897) *
               C153775 -
           ((C71539 * C83605 + C71540 * C153651 + C78820 * C153643) * C153897 +
            (C70578 * C83605 + (C70568 + C70567) * C153651 +
             (C70566 + C70565) * C153643) *
                C154037) *
               C2086) *
              C153695 * C1282 +
          (((C70575 * C153643 + C70576 * C153651 + (C70572 + C70571) * C83605) *
                C154037 +
            (C79477 * C153643 + C89104 * C153651 + (C71553 + C71554) * C83605) *
                C153897) *
               C2086 -
           (((C70502 * C1518 - C70503 * C1513 - C70502 * C1519 +
              C153855 * C1528 + C70500 * C596 - C70501 * C575 - C70500 * C597 +
              C70494 * C611) *
                 C83605 +
             (C71134 + C71133) * C153651 + C78837 * C153643) *
                C153897 +
            ((C71554 + C71553) * C83605 + C71539 * C153651 + C71540 * C153643) *
                C154037) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C153643 +
            (C70565 + C70566) * C153651 + C70575 * C83605) *
               C154037 +
           ((C78866 + C78867) * C153643 + C78793 * C153651 + C79477 * C83605) *
               C153897) *
              C2292 -
          ((C78837 * C83605 + C78819 * C153651 + (C78869 + C78868) * C153643) *
               C153897 +
           (C71540 * C83605 + C78820 * C153651 + (C78867 + C78866) * C153643) *
               C154037) *
              C2293 +
          ((C78878 * C153643 + C78802 * C153651 + C79478 * C83605) * C154037 +
           ((C78873 + C78872) * C153643 + C78880 * C153651 +
            (C78876 + C78877) * C83605) *
               C153897) *
              C2294 -
          (((C70502 * C9202 - C70503 * C9199 - C70502 * C9203 +
             C153855 * C9208 + C70500 * C7748 - C70501 * C7742 -
             C70500 * C7749 + C70494 * C7754) *
                C83605 +
            (C78875 + C78874) * C153651 + (C82488 + C82487) * C153643) *
               C153897 +
           ((C78877 + C78876) * C83605 + C78879 * C153651 + C82472 * C153643) *
               C154037) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C153643 +
             (C70565 + C70566) * C153651 + C70575 * C83605) *
                C154037 +
            ((C78866 + C78867) * C153643 + C78793 * C153651 + C79477 * C83605) *
                C153897) *
               C154094 -
           ((C78837 * C83605 + C78819 * C153651 + (C78869 + C78868) * C153643) *
                C153897 +
            (C71540 * C83605 + C78820 * C153651 + (C78867 + C78866) * C153643) *
                C154037) *
               C154095 +
           ((C78878 * C153643 + C78802 * C153651 + C79478 * C83605) * C154037 +
            ((C78873 + C78872) * C153643 + C78880 * C153651 +
             (C78876 + C78877) * C83605) *
                C153897) *
               C2602) *
              C153695 * C154013 +
          (((C78793 * C153643 + C79477 * C153651 + C89104 * C83605) * C154037 +
            (C78802 * C153643 + C79478 * C153651 + (C71133 + C71134) * C83605) *
                C153897) *
               C154095 -
           ((C71539 * C83605 + C71540 * C153651 + C78820 * C153643) * C153897 +
            (C70578 * C83605 + (C70568 + C70567) * C153651 +
             (C70566 + C70565) * C153643) *
                C154037) *
               C154094 -
           (((C70502 * C8574 - C70503 * C8573 - C70502 * C8575 +
              C153855 * C8576 + C70500 * C2303 - C70501 * C2297 -
              C70500 * C2304 + C70494 * C2312) *
                 C83605 +
             (C78877 + C78876) * C153651 + C78879 * C153643) *
                C153897 +
            ((C71134 + C71133) * C83605 + C78837 * C153651 + C78819 * C153643) *
                C154037) *
               C2602) *
              C153695 * C153682)) /
        (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C153643 +
             (C70565 + C70566) * C153651 + C70575 * C83605) *
                C154037 +
            ((C78866 + C78867) * C153643 + C78793 * C153651 + C79477 * C83605) *
                C153897) *
               C2086 -
           ((C78837 * C83605 + C78819 * C153651 + (C78869 + C78868) * C153643) *
                C153897 +
            (C71540 * C83605 + C78820 * C153651 + (C78867 + C78866) * C153643) *
                C154037) *
               C153775) *
              C153695 * C1281 +
          (((C78793 * C153643 + C79477 * C153651 + C89104 * C83605) * C154037 +
            (C78802 * C153643 + C79478 * C153651 + (C71133 + C71134) * C83605) *
                C153897) *
               C153775 -
           ((C71539 * C83605 + C71540 * C153651 + C78820 * C153643) * C153897 +
            (C70578 * C83605 + (C70568 + C70567) * C153651 +
             (C70566 + C70565) * C153643) *
                C154037) *
               C2086) *
              C153695 * C1282 +
          (((C70575 * C153643 + C70576 * C153651 + (C70572 + C70571) * C83605) *
                C154037 +
            (C79477 * C153643 + C89104 * C153651 + (C71553 + C71554) * C83605) *
                C153897) *
               C2086 -
           (((C70502 * C1518 - C70503 * C1513 - C70502 * C1519 +
              C153855 * C1528 + C70500 * C596 - C70501 * C575 - C70500 * C597 +
              C70494 * C611) *
                 C83605 +
             (C71134 + C71133) * C153651 + C78837 * C153643) *
                C153897 +
            ((C71554 + C71553) * C83605 + C71539 * C153651 + C71540 * C153643) *
                C154037) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C153643 +
             (C70565 + C70566) * C153651 + C70575 * C83605) *
                C154037 +
            ((C78866 + C78867) * C153643 + C78793 * C153651 + C79477 * C83605) *
                C153897) *
               C2086 -
           ((C78837 * C83605 + C78819 * C153651 + (C78869 + C78868) * C153643) *
                C153897 +
            (C71540 * C83605 + C78820 * C153651 + (C78867 + C78866) * C153643) *
                C154037) *
               C153775) *
              C332 +
          ((((C79905 + C79906) * C153643 + C79873 * C153651 + C89491 * C83605) *
                C154037 +
            ((C79907 + C79908) * C153643 + C79882 * C153651 +
             (C79185 + C79186) * C83605) *
                C153897) *
               C153775 -
           ((C88813 * C83605 + C79892 * C153651 + (C79906 + C79905) * C153643) *
                C153897 +
            (C71330 * C83605 + (C70849 + C70850) * C153651 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C153643) *
                C154037) *
               C2086) *
              C333 +
          ((((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
              C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
              C153855 * C1390) *
                 C153643 +
             (C70851 + C70852) * C153651 + (C70853 + C70854) * C83605) *
                C154037 +
            ((C81693 + C81694) * C153643 + (C78491 + C78492) * C153651 +
             (C88231 + C88232) * C83605) *
                C153897) *
               C2086 -
           (((C70502 * C5034 - C70503 * C5031 - C70502 * C5035 +
              C153855 * C5040 + C70500 * C3515 - C70501 * C3509 -
              C70500 * C3516 + C70494 * C3521) *
                 C83605 +
             (C78494 + C78493) * C153651 + (C81696 + C81695) * C153643) *
                C153897 +
            ((C88232 + C88231) * C83605 + (C78492 + C78491) * C153651 +
             (C81694 + C81693) * C153643) *
                C154037) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154115 +
            (C70565 + C70566) * C154108 + C70575 * C154089 + C70576 * C154036) *
               C153810 * C153711 * C154021 -
           (C71329 * C154036 + C71330 * C154089 + (C70849 + C70850) * C154108 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C154115) *
               C153810 * C153711 * C153747) *
              C154090 +
          (((C70850 + C70849) * C154115 + (C70848 + C70847) * C154108 +
            (C70846 + C70845) * C154089 + (C71343 + C71344) * C154036) *
               C153810 * C153711 * C153747 -
           (C70577 * C154036 + C70578 * C154089 + (C70568 + C70567) * C154108 +
            (C70566 + C70565) * C154115) *
               C153810 * C153711 * C154021) *
              C154091 +
          ((C70575 * C154115 + C70576 * C154108 + (C70572 + C70571) * C154089 +
            (C70573 + C70574) * C154036) *
               C153810 * C153711 * C154021 -
           ((C70502 * C371 - C70503 * C348 - C70502 * C372 + C153855 * C384 +
             C70500 * C369 - C70501 * C347 - C70500 * C370 + C70494 * C383) *
                C154036 +
            (C71344 + C71343) * C154089 + C71329 * C154108 + C71330 * C154115) *
               C153810 * C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C74316 +
            (C74399 + C74400 + C74401 + C74402) * C153648) *
               C153810 * C153711 * C154021 -
           ((C74653 + C74654 + C74655 + C74656) * C153648 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C74316) *
               C153810 * C153711 * C153747) *
              C154090 +
          (((C74656 + C74655 + C74654 + C74653) * C74316 +
            (C75129 + C75130 + C75131 + C75132) * C153648) *
               C153810 * C153711 * C153747 -
           ((C74403 + C74404 + C74405 + C74406) * C153648 +
            (C74402 + C74401 + C74400 + C74399) * C74316) *
               C153810 * C153711 * C154021) *
              C154091 +
          (((C74406 + C74405 + C74404 + C74403) * C74316 +
            (C74407 + C74408 + C74409 + C74410) * C153648) *
               C153810 * C153711 * C154021 -
           ((C74324 * C3199 - C74325 * C3192 - C74324 * C3200 +
             C154044 * C3204 + C74322 * C1378 - C74323 * C1372 -
             C74322 * C1379 + C154102 * C1387 + C74320 * C365 - C74321 * C345 -
             C74320 * C366 + C154112 * C381 + C74318 * C351 - C74319 * C338 -
             C74318 * C352 + C154116 * C374) *
                C153648 +
            (C75132 + C75131 + C75130 + C75129) * C74316) *
               C153810 * C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154115 +
             (C70565 + C70566) * C154108 + C70575 * C154089 +
             C70576 * C154036) *
                C153810 * C154022 -
            (C71539 * C154036 + C71540 * C154089 + (C71127 + C71128) * C154108 +
             (C70502 * C1111 - C70503 * C1105 - C70502 * C1112 +
              C153855 * C1123 + C70500 * C586 - C70501 * C570 - C70500 * C587 +
              C70494 * C606) *
                 C154115) *
                C153810 * C153775) *
               C154021 +
           (((C70500 * C1111 - C70501 * C1105 - C70500 * C1112 +
              C70494 * C1123 + C70502 * C1957 - C70503 * C1948 -
              C70502 * C1958 + C153855 * C1963) *
                 C154115 +
             (C71849 + C71850) * C154108 + (C71851 + C71852) * C154089 +
             (C71853 + C71854) * C154036) *
                C153810 * C153775 -
            (C71329 * C154036 + C71330 * C154089 + (C70849 + C70850) * C154108 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C154115) *
                C153810 * C154022) *
               C153747) *
              C335 +
          ((((C71128 + C71127) * C154115 + (C71126 + C71125) * C154108 +
             (C71124 + C71123) * C154089 + (C71553 + C71554) * C154036) *
                C153810 * C153775 -
            (C70577 * C154036 + C70578 * C154089 + (C70568 + C70567) * C154108 +
             (C70566 + C70565) * C154115) *
                C153810 * C154022) *
               C154021 +
           (((C70850 + C70849) * C154115 + (C70848 + C70847) * C154108 +
             (C70846 + C70845) * C154089 + (C71343 + C71344) * C154036) *
                C153810 * C154022 -
            ((C70502 * C1949 - C70503 * C1944 - C70502 * C1950 +
              C153855 * C1959 + C70500 * C1119 - C70501 * C1109 -
              C70500 * C1120 + C70494 * C1127) *
                 C154036 +
             (C71854 + C71853) * C154089 + (C71852 + C71851) * C154108 +
             (C71850 + C71849) * C154115) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
              C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
              C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
              C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
              C154044 * C1390) *
                 C74316 +
             (C74399 + C74400 + C74401 + C74402) * C153648) *
                C153810 * C154022 -
            ((C74903 + C74904 + C74905 + C74906) * C153648 +
             (C74324 * C4383 - C74325 * C4379 - C74324 * C4384 +
              C154044 * C4391 + C74322 * C1957 - C74323 * C1948 -
              C74322 * C1958 + C154102 * C1963 + C74320 * C1111 -
              C74321 * C1105 - C74320 * C1112 + C154112 * C1123 +
              C74318 * C586 - C74319 * C570 - C74318 * C587 + C154116 * C606) *
                 C74316) *
                C153810 * C153775) *
               C154021 +
           (((C74318 * C1111 - C74319 * C1105 - C74318 * C1112 +
              C154116 * C1123 + C74320 * C1957 - C74321 * C1948 -
              C74320 * C1958 + C154112 * C1963 + C74322 * C4383 -
              C74323 * C4379 - C74322 * C4384 + C154102 * C4391 +
              C74324 * C5776 - C74325 * C5771 - C74324 * C5777 +
              C154044 * C5780) *
                 C74316 +
             (C75637 + C75638 + C75639 + C75640) * C153648) *
                C153810 * C153775 -
            ((C74653 + C74654 + C74655 + C74656) * C153648 +
             (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
              C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
              C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
              C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
              C74318 * C358 + C154116 * C377) *
                 C74316) *
                C153810 * C154022) *
               C153747) *
              C335 +
          ((((C74906 + C74905 + C74904 + C74903) * C74316 +
             (C75351 + C75352 + C75353 + C75354) * C153648) *
                C153810 * C153775 -
            ((C74403 + C74404 + C74405 + C74406) * C153648 +
             (C74402 + C74401 + C74400 + C74399) * C74316) *
                C153810 * C154022) *
               C154021 +
           (((C74656 + C74655 + C74654 + C74653) * C74316 +
             (C75129 + C75130 + C75131 + C75132) * C153648) *
                C153810 * C154022 -
            ((C74324 * C5772 - C74325 * C5769 - C74324 * C5773 +
              C154044 * C5778 + C74322 * C4387 - C74323 * C4381 -
              C74322 * C4388 + C154102 * C4393 + C74320 * C1953 -
              C74321 * C1946 - C74320 * C1954 + C154112 * C1961 +
              C74318 * C1115 - C74319 * C1107 - C74318 * C1116 +
              C154116 * C1125) *
                 C153648 +
             (C75640 + C75639 + C75638 + C75637) * C74316) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154115 +
            (C70565 + C70566) * C154108 + C70575 * C154089 + C70576 * C154036) *
               C153810 * C153711 * C332 -
           ((C70845 + C70846) * C154036 + (C70847 + C70848) * C154089 +
            (C70849 + C70850) * C154108 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C154115) *
               C153810 * C153711 * C333 +
           ((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
             C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
             C153855 * C1390) *
                C154115 +
            (C70851 + C70852) * C154108 + (C70853 + C70854) * C154089 +
            (C70855 + C70856) * C154036) *
               C153810 * C153711 * C334) *
              C335 +
          (((C70850 + C70849) * C154115 + (C70848 + C70847) * C154108 +
            (C70846 + C70845) * C154089 +
            (C70500 * C349 - C70501 * C337 - C70500 * C350 + C70494 * C373 +
             C70502 * C367 - C70503 * C346 - C70502 * C368 + C153855 * C382) *
                C154036) *
               C153810 * C153711 * C333 -
           (C70577 * C154036 + C70578 * C154089 + (C70568 + C70567) * C154108 +
            (C70566 + C70565) * C154115) *
               C153810 * C153711 * C332 -
           ((C70502 * C1376 - C70503 * C1371 - C70502 * C1377 +
             C153855 * C1386 + C70500 * C367 - C70501 * C346 - C70500 * C368 +
             C70494 * C382) *
                C154036 +
            (C70856 + C70855) * C154089 + (C70854 + C70853) * C154108 +
            (C70852 + C70851) * C154115) *
               C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
            C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
               C154115 +
           (C70565 + C70566) * C154108 + C70575 * C154089 + C70576 * C154036) *
              C153810 * C153711 * C153695 * C130 -
          (C70577 * C154036 + C70578 * C154089 + (C70568 + C70567) * C154108 +
           (C70566 + C70565) * C154115) *
              C153810 * C153711 * C153695 * C131 +
          (C70575 * C154115 + C70576 * C154108 + (C70572 + C70571) * C154089 +
           (C70573 + C70574) * C154036) *
              C153810 * C153711 * C153695 * C132 -
          ((C70502 * C798 - C70503 * C797 - C70502 * C799 + C153855 * C800 +
            C70500 * C156 - C70501 * C142 - C70500 * C157 + C70494 * C166) *
               C154036 +
           (C70574 + C70573) * C154089 + C70577 * C154108 + C70578 * C154115) *
              C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154115 +
            (C70565 + C70566) * C154108 + C70575 * C154089 + C70576 * C154036) *
               C153810 * C563 -
           ((C71123 + C71124) * C154036 + (C71125 + C71126) * C154089 +
            (C71127 + C71128) * C154108 +
            (C70502 * C1111 - C70503 * C1105 - C70502 * C1112 +
             C153855 * C1123 + C70500 * C586 - C70501 * C570 - C70500 * C587 +
             C70494 * C606) *
                C154115) *
               C153810 * C564 +
           ((C70500 * C588 - C70501 * C571 - C70500 * C589 + C70494 * C607 +
             C70502 * C1526 - C70503 * C1517 - C70502 * C1527 +
             C153855 * C1532) *
                C154115 +
            (C71129 + C71130) * C154108 + (C71131 + C71132) * C154089 +
            (C71133 + C71134) * C154036) *
               C153810 * C565) *
              C153695 * C335 +
          (((C71128 + C71127) * C154115 + (C71126 + C71125) * C154108 +
            (C71124 + C71123) * C154089 +
            (C70500 * C578 - C70501 * C566 - C70500 * C579 + C70494 * C602 +
             C70502 * C1119 - C70503 * C1109 - C70502 * C1120 +
             C153855 * C1127) *
                C154036) *
               C153810 * C564 -
           (C70577 * C154036 + C70578 * C154089 + (C70568 + C70567) * C154108 +
            (C70566 + C70565) * C154115) *
               C153810 * C563 -
           ((C70502 * C1518 - C70503 * C1513 - C70502 * C1519 +
             C153855 * C1528 + C70500 * C596 - C70501 * C575 - C70500 * C597 +
             C70494 * C611) *
                C154036 +
            (C71134 + C71133) * C154089 + (C71132 + C71131) * C154108 +
            (C71130 + C71129) * C154115) *
               C153810 * C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
            C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
            C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
            C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
            C154044 * C1390) *
               C74316 +
           (C74399 + C74400 + C74401 + C74402) * C153648) *
              C153810 * C153711 * C153695 * C130 -
          ((C74403 + C74404 + C74405 + C74406) * C153648 +
           (C74402 + C74401 + C74400 + C74399) * C74316) *
              C153810 * C153711 * C153695 * C131 +
          ((C74406 + C74405 + C74404 + C74403) * C74316 +
           (C74407 + C74408 + C74409 + C74410) * C153648) *
              C153810 * C153711 * C153695 * C132 -
          ((C74324 * C1376 - C74325 * C1371 - C74324 * C1377 + C154044 * C1386 +
            C74322 * C367 - C74323 * C346 - C74322 * C368 + C154102 * C382 +
            C74320 * C349 - C74321 * C337 - C74320 * C350 + C154112 * C373 +
            C74318 * C152 - C74319 * C140 - C74318 * C153 + C154116 * C164) *
               C153648 +
           (C74410 + C74409 + C74408 + C74407) * C74316) *
              C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C74316 +
            (C74399 + C74400 + C74401 + C74402) * C153648) *
               C153810 * C153711 * C332 -
           ((C74653 + C74654 + C74655 + C74656) * C153648 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C74316) *
               C153810 * C153711 * C333 +
           ((C74318 * C359 - C74319 * C342 - C74318 * C360 + C154116 * C378 +
             C74320 * C1384 - C74321 * C1375 - C74320 * C1385 +
             C154112 * C1390 + C74322 * C3193 - C74323 * C3189 -
             C74322 * C3194 + C154102 * C3201 + C74324 * C4808 -
             C74325 * C4803 - C74324 * C4809 + C154044 * C4812) *
                C74316 +
            (C74657 + C74658 + C74659 + C74660) * C153648) *
               C153810 * C153711 * C334) *
              C335 +
          (((C74656 + C74655 + C74654 + C74653) * C74316 +
            (C74318 * C353 - C74319 * C339 - C74318 * C354 + C154116 * C375 +
             C74320 * C363 - C74321 * C344 - C74320 * C364 + C154112 * C380 +
             C74322 * C1380 - C74323 * C1373 - C74322 * C1381 +
             C154102 * C1388 + C74324 * C3197 - C74325 * C3191 -
             C74324 * C3198 + C154044 * C3203) *
                C153648) *
               C153810 * C153711 * C333 -
           ((C74403 + C74404 + C74405 + C74406) * C153648 +
            (C74402 + C74401 + C74400 + C74399) * C74316) *
               C153810 * C153711 * C332 -
           ((C74324 * C4804 - C74325 * C4801 - C74324 * C4805 +
             C154044 * C4810 + C74322 * C3197 - C74323 * C3191 -
             C74322 * C3198 + C154102 * C3203 + C74320 * C1380 -
             C74321 * C1373 - C74320 * C1381 + C154112 * C1388 + C74318 * C363 -
             C74319 * C344 - C74318 * C364 + C154116 * C380) *
                C153648 +
            (C74660 + C74659 + C74658 + C74657) * C74316) *
               C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C74316 +
            (C74399 + C74400 + C74401 + C74402) * C153648) *
               C153810 * C563 -
           ((C74903 + C74904 + C74905 + C74906) * C153648 +
            (C74324 * C4383 - C74325 * C4379 - C74324 * C4384 +
             C154044 * C4391 + C74322 * C1957 - C74323 * C1948 -
             C74322 * C1958 + C154102 * C1963 + C74320 * C1111 -
             C74321 * C1105 - C74320 * C1112 + C154112 * C1123 + C74318 * C586 -
             C74319 * C570 - C74318 * C587 + C154116 * C606) *
                C74316) *
               C153810 * C564 +
           ((C74318 * C588 - C74319 * C571 - C74318 * C589 + C154116 * C607 +
             C74320 * C1526 - C74321 * C1517 - C74320 * C1527 +
             C154112 * C1532 + C74322 * C3511 - C74323 * C3507 -
             C74322 * C3512 + C154102 * C3519 + C74324 * C5038 -
             C74325 * C5033 - C74324 * C5039 + C154044 * C5042) *
                C74316 +
            (C74907 + C74908 + C74909 + C74910) * C153648) *
               C153810 * C565) *
              C153695 * C335 +
          (((C74906 + C74905 + C74904 + C74903) * C74316 +
            (C74318 * C582 - C74319 * C568 - C74318 * C583 + C154116 * C604 +
             C74320 * C1115 - C74321 * C1107 - C74320 * C1116 +
             C154112 * C1125 + C74322 * C1953 - C74323 * C1946 -
             C74322 * C1954 + C154102 * C1961 + C74324 * C4387 -
             C74325 * C4381 - C74324 * C4388 + C154044 * C4393) *
                C153648) *
               C153810 * C564 -
           ((C74403 + C74404 + C74405 + C74406) * C153648 +
            (C74402 + C74401 + C74400 + C74399) * C74316) *
               C153810 * C563 -
           ((C74324 * C5034 - C74325 * C5031 - C74324 * C5035 +
             C154044 * C5040 + C74322 * C3515 - C74323 * C3509 -
             C74322 * C3516 + C154102 * C3521 + C74320 * C1522 -
             C74321 * C1515 - C74320 * C1523 + C154112 * C1530 + C74318 * C592 -
             C74319 * C573 - C74318 * C593 + C154116 * C609) *
                C153648 +
            (C74910 + C74909 + C74908 + C74907) * C74316) *
               C153810 * C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154115 +
            (C70565 + C70566) * C154108 + C70575 * C154089 + C70576 * C154036) *
               C153810 * C154022 -
           (C71539 * C154036 + C71540 * C154089 + (C71127 + C71128) * C154108 +
            (C70502 * C1111 - C70503 * C1105 - C70502 * C1112 +
             C153855 * C1123 + C70500 * C586 - C70501 * C570 - C70500 * C587 +
             C70494 * C606) *
                C154115) *
               C153810 * C153775) *
              C153695 * C154090 +
          (((C71128 + C71127) * C154115 + (C71126 + C71125) * C154108 +
            (C71124 + C71123) * C154089 + (C71553 + C71554) * C154036) *
               C153810 * C153775 -
           (C70577 * C154036 + C70578 * C154089 + (C70568 + C70567) * C154108 +
            (C70566 + C70565) * C154115) *
               C153810 * C154022) *
              C153695 * C154091 +
          ((C70575 * C154115 + C70576 * C154108 + (C70572 + C70571) * C154089 +
            (C70573 + C70574) * C154036) *
               C153810 * C154022 -
           ((C70502 * C1121 - C70503 * C1110 - C70502 * C1122 +
             C153855 * C1128 + C70500 * C598 - C70501 * C576 - C70500 * C599 +
             C70494 * C612) *
                C154036 +
            (C71554 + C71553) * C154089 + C71539 * C154108 + C71540 * C154115) *
               C153810 * C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C74316 +
            (C74399 + C74400 + C74401 + C74402) * C153648) *
               C153810 * C154022 -
           ((C74903 + C74904 + C74905 + C74906) * C153648 +
            (C74324 * C4383 - C74325 * C4379 - C74324 * C4384 +
             C154044 * C4391 + C74322 * C1957 - C74323 * C1948 -
             C74322 * C1958 + C154102 * C1963 + C74320 * C1111 -
             C74321 * C1105 - C74320 * C1112 + C154112 * C1123 + C74318 * C586 -
             C74319 * C570 - C74318 * C587 + C154116 * C606) *
                C74316) *
               C153810 * C153775) *
              C153695 * C154090 +
          (((C74906 + C74905 + C74904 + C74903) * C74316 +
            (C75351 + C75352 + C75353 + C75354) * C153648) *
               C153810 * C153775 -
           ((C74403 + C74404 + C74405 + C74406) * C153648 +
            (C74402 + C74401 + C74400 + C74399) * C74316) *
               C153810 * C154022) *
              C153695 * C154091 +
          (((C74406 + C74405 + C74404 + C74403) * C74316 +
            (C74407 + C74408 + C74409 + C74410) * C153648) *
               C153810 * C154022 -
           ((C74324 * C4389 - C74325 * C4382 - C74324 * C4390 +
             C154044 * C4394 + C74322 * C1951 - C74323 * C1945 -
             C74322 * C1952 + C154102 * C1960 + C74320 * C1117 -
             C74321 * C1108 - C74320 * C1118 + C154112 * C1126 + C74318 * C580 -
             C74319 * C567 - C74318 * C581 + C154116 * C603) *
                C153648 +
            (C75354 + C75353 + C75352 + C75351) * C74316) *
               C153810 * C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
            C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
               C154115 +
           (C70565 + C70566) * C154108 + C70575 * C154089 + C70576 * C154036) *
              C153810 * C153711 * C153695 * C130 -
          (C70577 * C154036 + C70578 * C154089 + (C70568 + C70567) * C154108 +
           (C70566 + C70565) * C154115) *
              C153810 * C153711 * C153695 * C131 +
          (C70575 * C154115 + C70576 * C154108 + (C70572 + C70571) * C154089 +
           (C70573 + C70574) * C154036) *
              C153810 * C153711 * C153695 * C132 -
          ((C70502 * C798 - C70503 * C797 - C70502 * C799 + C153855 * C800 +
            C70500 * C156 - C70501 * C142 - C70500 * C157 + C70494 * C166) *
               C154036 +
           (C70574 + C70573) * C154089 + C70577 * C154108 + C70578 * C154115) *
              C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154115 +
            (C70565 + C70566) * C154108 + C70575 * C154089 + C70576 * C154036) *
               C153810 * C153711 * C332 -
           ((C70845 + C70846) * C154036 + (C70847 + C70848) * C154089 +
            (C70849 + C70850) * C154108 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C154115) *
               C153810 * C153711 * C333 +
           ((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
             C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
             C153855 * C1390) *
                C154115 +
            (C70851 + C70852) * C154108 + (C70853 + C70854) * C154089 +
            (C70855 + C70856) * C154036) *
               C153810 * C153711 * C334) *
              C335 +
          (((C70850 + C70849) * C154115 + (C70848 + C70847) * C154108 +
            (C70846 + C70845) * C154089 +
            (C70500 * C349 - C70501 * C337 - C70500 * C350 + C70494 * C373 +
             C70502 * C367 - C70503 * C346 - C70502 * C368 + C153855 * C382) *
                C154036) *
               C153810 * C153711 * C333 -
           (C70577 * C154036 + C70578 * C154089 + (C70568 + C70567) * C154108 +
            (C70566 + C70565) * C154115) *
               C153810 * C153711 * C332 -
           ((C70502 * C1376 - C70503 * C1371 - C70502 * C1377 +
             C153855 * C1386 + C70500 * C367 - C70501 * C346 - C70500 * C368 +
             C70494 * C382) *
                C154036 +
            (C70856 + C70855) * C154089 + (C70854 + C70853) * C154108 +
            (C70852 + C70851) * C154115) *
               C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
            C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
            C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
            C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
            C154044 * C1390) *
               C74316 +
           (C74399 + C74400 + C74401 + C74402) * C153648) *
              C153810 * C153711 * C153695 * C130 -
          ((C74403 + C74404 + C74405 + C74406) * C153648 +
           (C74402 + C74401 + C74400 + C74399) * C74316) *
              C153810 * C153711 * C153695 * C131 +
          ((C74406 + C74405 + C74404 + C74403) * C74316 +
           (C74407 + C74408 + C74409 + C74410) * C153648) *
              C153810 * C153711 * C153695 * C132 -
          ((C74324 * C1376 - C74325 * C1371 - C74324 * C1377 + C154044 * C1386 +
            C74322 * C367 - C74323 * C346 - C74322 * C368 + C154102 * C382 +
            C74320 * C349 - C74321 * C337 - C74320 * C350 + C154112 * C373 +
            C74318 * C152 - C74319 * C140 - C74318 * C153 + C154116 * C164) *
               C153648 +
           (C74410 + C74409 + C74408 + C74407) * C74316) *
              C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C74316 +
            (C74399 + C74400 + C74401 + C74402) * C153648) *
               C153810 * C153711 * C332 -
           ((C74653 + C74654 + C74655 + C74656) * C153648 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C74316) *
               C153810 * C153711 * C333 +
           ((C74318 * C359 - C74319 * C342 - C74318 * C360 + C154116 * C378 +
             C74320 * C1384 - C74321 * C1375 - C74320 * C1385 +
             C154112 * C1390 + C74322 * C3193 - C74323 * C3189 -
             C74322 * C3194 + C154102 * C3201 + C74324 * C4808 -
             C74325 * C4803 - C74324 * C4809 + C154044 * C4812) *
                C74316 +
            (C74657 + C74658 + C74659 + C74660) * C153648) *
               C153810 * C153711 * C334) *
              C335 +
          (((C74656 + C74655 + C74654 + C74653) * C74316 +
            (C74318 * C353 - C74319 * C339 - C74318 * C354 + C154116 * C375 +
             C74320 * C363 - C74321 * C344 - C74320 * C364 + C154112 * C380 +
             C74322 * C1380 - C74323 * C1373 - C74322 * C1381 +
             C154102 * C1388 + C74324 * C3197 - C74325 * C3191 -
             C74324 * C3198 + C154044 * C3203) *
                C153648) *
               C153810 * C153711 * C333 -
           ((C74403 + C74404 + C74405 + C74406) * C153648 +
            (C74402 + C74401 + C74400 + C74399) * C74316) *
               C153810 * C153711 * C332 -
           ((C74324 * C4804 - C74325 * C4801 - C74324 * C4805 +
             C154044 * C4810 + C74322 * C3197 - C74323 * C3191 -
             C74322 * C3198 + C154102 * C3203 + C74320 * C1380 -
             C74321 * C1373 - C74320 * C1381 + C154112 * C1388 + C74318 * C363 -
             C74319 * C344 - C74318 * C364 + C154116 * C380) *
                C153648 +
            (C74660 + C74659 + C74658 + C74657) * C74316) *
               C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154115 +
            (C70565 + C70566) * C154108 + C70575 * C154089 + C70576 * C154036) *
               C153810 * C153711 * C154092 -
           (C71329 * C154036 + C71330 * C154089 + (C70849 + C70850) * C154108 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C154115) *
               C153810 * C153711 * C154093 +
           ((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
             C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
             C153855 * C1390) *
                C154115 +
            (C70851 + C70852) * C154108 + (C70853 + C70854) * C154089 +
            (C70855 + C70856) * C154036) *
               C153810 * C153711 * C1657) *
              C154013 +
          (((C70850 + C70849) * C154115 + (C70848 + C70847) * C154108 +
            (C70846 + C70845) * C154089 + (C71343 + C71344) * C154036) *
               C153810 * C153711 * C154093 -
           (C70577 * C154036 + C70578 * C154089 + (C70568 + C70567) * C154108 +
            (C70566 + C70565) * C154115) *
               C153810 * C153711 * C154092 -
           ((C70502 * C1376 - C70503 * C1371 - C70502 * C1377 +
             C153855 * C1386 + C70500 * C367 - C70501 * C346 - C70500 * C368 +
             C70494 * C382) *
                C154036 +
            (C70856 + C70855) * C154089 + (C70854 + C70853) * C154108 +
            (C70852 + C70851) * C154115) *
               C153810 * C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C74316 +
            (C74399 + C74400 + C74401 + C74402) * C153648) *
               C153810 * C153711 * C154092 -
           ((C74653 + C74654 + C74655 + C74656) * C153648 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C74316) *
               C153810 * C153711 * C154093 +
           ((C74318 * C359 - C74319 * C342 - C74318 * C360 + C154116 * C378 +
             C74320 * C1384 - C74321 * C1375 - C74320 * C1385 +
             C154112 * C1390 + C74322 * C3193 - C74323 * C3189 -
             C74322 * C3194 + C154102 * C3201 + C74324 * C4808 -
             C74325 * C4803 - C74324 * C4809 + C154044 * C4812) *
                C74316 +
            (C74657 + C74658 + C74659 + C74660) * C153648) *
               C153810 * C153711 * C1657) *
              C154013 +
          (((C74656 + C74655 + C74654 + C74653) * C74316 +
            (C75129 + C75130 + C75131 + C75132) * C153648) *
               C153810 * C153711 * C154093 -
           ((C74403 + C74404 + C74405 + C74406) * C153648 +
            (C74402 + C74401 + C74400 + C74399) * C74316) *
               C153810 * C153711 * C154092 -
           ((C74324 * C4804 - C74325 * C4801 - C74324 * C4805 +
             C154044 * C4810 + C74322 * C3197 - C74323 * C3191 -
             C74322 * C3198 + C154102 * C3203 + C74320 * C1380 -
             C74321 * C1373 - C74320 * C1381 + C154112 * C1388 + C74318 * C363 -
             C74319 * C344 - C74318 * C364 + C154116 * C380) *
                C153648 +
            (C74660 + C74659 + C74658 + C74657) * C74316) *
               C153810 * C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154115 +
            (C70565 + C70566) * C154108 + C70575 * C154089 + C70576 * C154036) *
               C153810 * C154022 -
           (C71539 * C154036 + C71540 * C154089 + (C71127 + C71128) * C154108 +
            (C70502 * C1111 - C70503 * C1105 - C70502 * C1112 +
             C153855 * C1123 + C70500 * C586 - C70501 * C570 - C70500 * C587 +
             C70494 * C606) *
                C154115) *
               C153810 * C153775) *
              C154092 +
          (((C70500 * C1111 - C70501 * C1105 - C70500 * C1112 + C70494 * C1123 +
             C70502 * C1957 - C70503 * C1948 - C70502 * C1958 +
             C153855 * C1963) *
                C154115 +
            (C71849 + C71850) * C154108 + (C71851 + C71852) * C154089 +
            (C71853 + C71854) * C154036) *
               C153810 * C153775 -
           (C71329 * C154036 + C71330 * C154089 + (C70849 + C70850) * C154108 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C154115) *
               C153810 * C154022) *
              C154093 +
          (((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
             C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
             C153855 * C1390) *
                C154115 +
            (C70851 + C70852) * C154108 + (C70853 + C70854) * C154089 +
            (C70855 + C70856) * C154036) *
               C153810 * C154022 -
           ((C70502 * C4389 - C70503 * C4382 - C70502 * C4390 +
             C153855 * C4394 + C70500 * C1951 - C70501 * C1945 -
             C70500 * C1952 + C70494 * C1960) *
                C154036 +
            (C70502 * C4387 - C70503 * C4381 - C70502 * C4388 +
             C153855 * C4393 + C70500 * C1953 - C70501 * C1946 -
             C70500 * C1954 + C70494 * C1961) *
                C154089 +
            (C70502 * C4385 - C70503 * C4380 - C70502 * C4386 +
             C153855 * C4392 + C70500 * C1955 - C70501 * C1947 -
             C70500 * C1956 + C70494 * C1962) *
                C154108 +
            (C70502 * C4383 - C70503 * C4379 - C70502 * C4384 +
             C153855 * C4391 + C70500 * C1957 - C70501 * C1948 -
             C70500 * C1958 + C70494 * C1963) *
                C154115) *
               C153810 * C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C74316 +
            (C74399 + C74400 + C74401 + C74402) * C153648) *
               C153810 * C154022 -
           ((C74903 + C74904 + C74905 + C74906) * C153648 +
            (C74324 * C4383 - C74325 * C4379 - C74324 * C4384 +
             C154044 * C4391 + C74322 * C1957 - C74323 * C1948 -
             C74322 * C1958 + C154102 * C1963 + C74320 * C1111 -
             C74321 * C1105 - C74320 * C1112 + C154112 * C1123 + C74318 * C586 -
             C74319 * C570 - C74318 * C587 + C154116 * C606) *
                C74316) *
               C153810 * C153775) *
              C154092 +
          (((C74318 * C1111 - C74319 * C1105 - C74318 * C1112 +
             C154116 * C1123 + C74320 * C1957 - C74321 * C1948 -
             C74320 * C1958 + C154112 * C1963 + C74322 * C4383 -
             C74323 * C4379 - C74322 * C4384 + C154102 * C4391 +
             C74324 * C5776 - C74325 * C5771 - C74324 * C5777 +
             C154044 * C5780) *
                C74316 +
            (C75637 + C75638 + C75639 + C75640) * C153648) *
               C153810 * C153775 -
           ((C74653 + C74654 + C74655 + C74656) * C153648 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C74316) *
               C153810 * C154022) *
              C154093 +
          (((C74318 * C359 - C74319 * C342 - C74318 * C360 + C154116 * C378 +
             C74320 * C1384 - C74321 * C1375 - C74320 * C1385 +
             C154112 * C1390 + C74322 * C3193 - C74323 * C3189 -
             C74322 * C3194 + C154102 * C3201 + C74324 * C4808 -
             C74325 * C4803 - C74324 * C4809 + C154044 * C4812) *
                C74316 +
            (C74657 + C74658 + C74659 + C74660) * C153648) *
               C153810 * C154022 -
           ((C74324 * C29108 - C74325 * C29105 - C74324 * C29109 +
             C154044 * C29111 + C74322 * C5774 - C74323 * C5770 -
             C74322 * C5775 + C154102 * C5779 + C74320 * C4385 -
             C74321 * C4380 - C74320 * C4386 + C154112 * C4392 +
             C74318 * C1955 - C74319 * C1947 - C74318 * C1956 +
             C154116 * C1962) *
                C153648 +
            (C74324 * C29106 - C74325 * C29104 - C74324 * C29107 +
             C154044 * C29110 + C74322 * C5776 - C74323 * C5771 -
             C74322 * C5777 + C154102 * C5780 + C74320 * C4383 -
             C74321 * C4379 - C74320 * C4384 + C154112 * C4391 +
             C74318 * C1957 - C74319 * C1948 - C74318 * C1958 +
             C154116 * C1963) *
                C74316) *
               C153810 * C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
            C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
               C154115 +
           (C70565 + C70566) * C154108 + C70575 * C154089 + C70576 * C154036) *
              C153810 * C153711 * C1366 -
          (C71329 * C154036 + C71330 * C154089 + (C70849 + C70850) * C154108 +
           (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
            C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
               C154115) *
              C153810 * C153711 * C1367 +
          ((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
            C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
            C153855 * C1390) *
               C154115 +
           (C70851 + C70852) * C154108 + (C70853 + C70854) * C154089 +
           (C70855 + C70856) * C154036) *
              C153810 * C153711 * C1368 -
          ((C70502 * C3199 - C70503 * C3192 - C70502 * C3200 + C153855 * C3204 +
            C70500 * C1378 - C70501 * C1372 - C70500 * C1379 + C70494 * C1387) *
               C154036 +
           (C70502 * C3197 - C70503 * C3191 - C70502 * C3198 + C153855 * C3203 +
            C70500 * C1380 - C70501 * C1373 - C70500 * C1381 + C70494 * C1388) *
               C154089 +
           (C70502 * C3195 - C70503 * C3190 - C70502 * C3196 + C153855 * C3202 +
            C70500 * C1382 - C70501 * C1374 - C70500 * C1383 + C70494 * C1389) *
               C154108 +
           (C70502 * C3193 - C70503 * C3189 - C70502 * C3194 + C153855 * C3201 +
            C70500 * C1384 - C70501 * C1375 - C70500 * C1385 + C70494 * C1390) *
               C154115) *
              C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154115 +
            (C70565 + C70566) * C154108 + C70575 * C154089 + C70576 * C154036) *
               C153810 * C153711 * C1279 -
           (C71329 * C154036 + C71330 * C154089 + (C70849 + C70850) * C154108 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C154115) *
               C153810 * C153711 * C153747) *
              C1281 +
          (((C70850 + C70849) * C154115 + (C70848 + C70847) * C154108 +
            (C70846 + C70845) * C154089 + (C71343 + C71344) * C154036) *
               C153810 * C153711 * C153747 -
           (C70577 * C154036 + C70578 * C154089 + (C70568 + C70567) * C154108 +
            (C70566 + C70565) * C154115) *
               C153810 * C153711 * C1279) *
              C1282 +
          ((C70575 * C154115 + C70576 * C154108 + (C70572 + C70571) * C154089 +
            (C70573 + C70574) * C154036) *
               C153810 * C153711 * C1279 -
           ((C70502 * C371 - C70503 * C348 - C70502 * C372 + C153855 * C384 +
             C70500 * C369 - C70501 * C347 - C70500 * C370 + C70494 * C383) *
                C154036 +
            (C71344 + C71343) * C154089 + C71329 * C154108 + C71330 * C154115) *
               C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154115 +
            (C70565 + C70566) * C154108 + C70575 * C154089 + C70576 * C154036) *
               C153810 * C563 -
           (C71539 * C154036 + C71540 * C154089 + (C71127 + C71128) * C154108 +
            (C70502 * C1111 - C70503 * C1105 - C70502 * C1112 +
             C153855 * C1123 + C70500 * C586 - C70501 * C570 - C70500 * C587 +
             C70494 * C606) *
                C154115) *
               C153810 * C564 +
           ((C70500 * C588 - C70501 * C571 - C70500 * C589 + C70494 * C607 +
             C70502 * C1526 - C70503 * C1517 - C70502 * C1527 +
             C153855 * C1532) *
                C154115 +
            (C71129 + C71130) * C154108 + (C71131 + C71132) * C154089 +
            (C71133 + C71134) * C154036) *
               C153810 * C565) *
              C1279 +
          (((C70500 * C1111 - C70501 * C1105 - C70500 * C1112 + C70494 * C1123 +
             C70502 * C1957 - C70503 * C1948 - C70502 * C1958 +
             C153855 * C1963) *
                C154115 +
            (C71849 + C71850) * C154108 + (C71851 + C71852) * C154089 +
            (C71853 + C71854) * C154036) *
               C153810 * C564 -
           (C71329 * C154036 + C71330 * C154089 + (C70849 + C70850) * C154108 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C154115) *
               C153810 * C563 -
           ((C70502 * C3517 - C70503 * C3510 - C70502 * C3518 +
             C153855 * C3522 + C70500 * C1520 - C70501 * C1514 -
             C70500 * C1521 + C70494 * C1529) *
                C154036 +
            (C70502 * C3515 - C70503 * C3509 - C70502 * C3516 +
             C153855 * C3521 + C70500 * C1522 - C70501 * C1515 -
             C70500 * C1523 + C70494 * C1530) *
                C154089 +
            (C70502 * C3513 - C70503 * C3508 - C70502 * C3514 +
             C153855 * C3520 + C70500 * C1524 - C70501 * C1516 -
             C70500 * C1525 + C70494 * C1531) *
                C154108 +
            (C70502 * C3511 - C70503 * C3507 - C70502 * C3512 +
             C153855 * C3519 + C70500 * C1526 - C70501 * C1517 -
             C70500 * C1527 + C70494 * C1532) *
                C154115) *
               C153810 * C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C74316 +
            (C74399 + C74400 + C74401 + C74402) * C153648) *
               C153810 * C153711 * C1279 -
           ((C74653 + C74654 + C74655 + C74656) * C153648 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C74316) *
               C153810 * C153711 * C153747) *
              C1281 +
          (((C74656 + C74655 + C74654 + C74653) * C74316 +
            (C75129 + C75130 + C75131 + C75132) * C153648) *
               C153810 * C153711 * C153747 -
           ((C74403 + C74404 + C74405 + C74406) * C153648 +
            (C74402 + C74401 + C74400 + C74399) * C74316) *
               C153810 * C153711 * C1279) *
              C1282 +
          (((C74406 + C74405 + C74404 + C74403) * C74316 +
            (C74407 + C74408 + C74409 + C74410) * C153648) *
               C153810 * C153711 * C1279 -
           ((C74324 * C3199 - C74325 * C3192 - C74324 * C3200 +
             C154044 * C3204 + C74322 * C1378 - C74323 * C1372 -
             C74322 * C1379 + C154102 * C1387 + C74320 * C365 - C74321 * C345 -
             C74320 * C366 + C154112 * C381 + C74318 * C351 - C74319 * C338 -
             C74318 * C352 + C154116 * C374) *
                C153648 +
            (C75132 + C75131 + C75130 + C75129) * C74316) *
               C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
            C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
            C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
            C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
            C154044 * C1390) *
               C74316 +
           (C74399 + C74400 + C74401 + C74402) * C153648) *
              C153810 * C153711 * C1366 -
          ((C74653 + C74654 + C74655 + C74656) * C153648 +
           (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 + C154044 * C3201 +
            C74322 * C1384 - C74323 * C1375 - C74322 * C1385 + C154102 * C1390 +
            C74320 * C359 - C74321 * C342 - C74320 * C360 + C154112 * C378 +
            C74318 * C357 - C74319 * C341 - C74318 * C358 + C154116 * C377) *
               C74316) *
              C153810 * C153711 * C1367 +
          ((C74318 * C359 - C74319 * C342 - C74318 * C360 + C154116 * C378 +
            C74320 * C1384 - C74321 * C1375 - C74320 * C1385 + C154112 * C1390 +
            C74322 * C3193 - C74323 * C3189 - C74322 * C3194 + C154102 * C3201 +
            C74324 * C4808 - C74325 * C4803 - C74324 * C4809 +
            C154044 * C4812) *
               C74316 +
           (C74657 + C74658 + C74659 + C74660) * C153648) *
              C153810 * C153711 * C1368 -
          ((C74324 * C28564 - C74325 * C28561 - C74324 * C28565 +
            C154044 * C28567 + C74322 * C4806 - C74323 * C4802 -
            C74322 * C4807 + C154102 * C4811 + C74320 * C3195 - C74321 * C3190 -
            C74320 * C3196 + C154112 * C3202 + C74318 * C1382 - C74319 * C1374 -
            C74318 * C1383 + C154116 * C1389) *
               C153648 +
           (C74324 * C28562 - C74325 * C28560 - C74324 * C28563 +
            C154044 * C28566 + C74322 * C4808 - C74323 * C4803 -
            C74322 * C4809 + C154102 * C4812 + C74320 * C3193 - C74321 * C3189 -
            C74320 * C3194 + C154112 * C3201 + C74318 * C1384 - C74319 * C1375 -
            C74318 * C1385 + C154116 * C1390) *
               C74316) *
              C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C74316 +
            (C74399 + C74400 + C74401 + C74402) * C153648) *
               C153810 * C563 -
           ((C74903 + C74904 + C74905 + C74906) * C153648 +
            (C74324 * C4383 - C74325 * C4379 - C74324 * C4384 +
             C154044 * C4391 + C74322 * C1957 - C74323 * C1948 -
             C74322 * C1958 + C154102 * C1963 + C74320 * C1111 -
             C74321 * C1105 - C74320 * C1112 + C154112 * C1123 + C74318 * C586 -
             C74319 * C570 - C74318 * C587 + C154116 * C606) *
                C74316) *
               C153810 * C564 +
           ((C74318 * C588 - C74319 * C571 - C74318 * C589 + C154116 * C607 +
             C74320 * C1526 - C74321 * C1517 - C74320 * C1527 +
             C154112 * C1532 + C74322 * C3511 - C74323 * C3507 -
             C74322 * C3512 + C154102 * C3519 + C74324 * C5038 -
             C74325 * C5033 - C74324 * C5039 + C154044 * C5042) *
                C74316 +
            (C74907 + C74908 + C74909 + C74910) * C153648) *
               C153810 * C565) *
              C1279 +
          (((C74318 * C1111 - C74319 * C1105 - C74318 * C1112 +
             C154116 * C1123 + C74320 * C1957 - C74321 * C1948 -
             C74320 * C1958 + C154112 * C1963 + C74322 * C4383 -
             C74323 * C4379 - C74322 * C4384 + C154102 * C4391 +
             C74324 * C5776 - C74325 * C5771 - C74324 * C5777 +
             C154044 * C5780) *
                C74316 +
            (C75637 + C75638 + C75639 + C75640) * C153648) *
               C153810 * C564 -
           ((C74653 + C74654 + C74655 + C74656) * C153648 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C74316) *
               C153810 * C563 -
           ((C74324 * C28694 - C74325 * C28691 - C74324 * C28695 +
             C154044 * C28697 + C74322 * C5036 - C74323 * C5032 -
             C74322 * C5037 + C154102 * C5041 + C74320 * C3513 -
             C74321 * C3508 - C74320 * C3514 + C154112 * C3520 +
             C74318 * C1524 - C74319 * C1516 - C74318 * C1525 +
             C154116 * C1531) *
                C153648 +
            (C74324 * C28692 - C74325 * C28690 - C74324 * C28693 +
             C154044 * C28696 + C74322 * C5038 - C74323 * C5033 -
             C74322 * C5039 + C154102 * C5042 + C74320 * C3511 -
             C74321 * C3507 - C74320 * C3512 + C154112 * C3519 +
             C74318 * C1526 - C74319 * C1517 - C74318 * C1527 +
             C154116 * C1532) *
                C74316) *
               C153810 * C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154115 +
             (C70565 + C70566) * C154108 + C70575 * C154089 +
             C70576 * C154036) *
                C153810 * C154022 -
            (C71539 * C154036 + C71540 * C154089 + (C71127 + C71128) * C154108 +
             (C70502 * C1111 - C70503 * C1105 - C70502 * C1112 +
              C153855 * C1123 + C70500 * C586 - C70501 * C570 - C70500 * C587 +
              C70494 * C606) *
                 C154115) *
                C153810 * C153775) *
               C1279 +
           (((C70500 * C1111 - C70501 * C1105 - C70500 * C1112 +
              C70494 * C1123 + C70502 * C1957 - C70503 * C1948 -
              C70502 * C1958 + C153855 * C1963) *
                 C154115 +
             (C71849 + C71850) * C154108 + (C71851 + C71852) * C154089 +
             (C71853 + C71854) * C154036) *
                C153810 * C153775 -
            (C71329 * C154036 + C71330 * C154089 + (C70849 + C70850) * C154108 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C154115) *
                C153810 * C154022) *
               C153747) *
              C154013 +
          ((((C71128 + C71127) * C154115 + (C71126 + C71125) * C154108 +
             (C71124 + C71123) * C154089 + (C71553 + C71554) * C154036) *
                C153810 * C153775 -
            (C70577 * C154036 + C70578 * C154089 + (C70568 + C70567) * C154108 +
             (C70566 + C70565) * C154115) *
                C153810 * C154022) *
               C1279 +
           (((C70850 + C70849) * C154115 + (C70848 + C70847) * C154108 +
             (C70846 + C70845) * C154089 + (C71343 + C71344) * C154036) *
                C153810 * C154022 -
            ((C70502 * C1949 - C70503 * C1944 - C70502 * C1950 +
              C153855 * C1959 + C70500 * C1119 - C70501 * C1109 -
              C70500 * C1120 + C70494 * C1127) *
                 C154036 +
             (C71854 + C71853) * C154089 + (C71852 + C71851) * C154108 +
             (C71850 + C71849) * C154115) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
              C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
              C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
              C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
              C154044 * C1390) *
                 C74316 +
             (C74399 + C74400 + C74401 + C74402) * C153648) *
                C153810 * C154022 -
            ((C74903 + C74904 + C74905 + C74906) * C153648 +
             (C74324 * C4383 - C74325 * C4379 - C74324 * C4384 +
              C154044 * C4391 + C74322 * C1957 - C74323 * C1948 -
              C74322 * C1958 + C154102 * C1963 + C74320 * C1111 -
              C74321 * C1105 - C74320 * C1112 + C154112 * C1123 +
              C74318 * C586 - C74319 * C570 - C74318 * C587 + C154116 * C606) *
                 C74316) *
                C153810 * C153775) *
               C1279 +
           (((C74318 * C1111 - C74319 * C1105 - C74318 * C1112 +
              C154116 * C1123 + C74320 * C1957 - C74321 * C1948 -
              C74320 * C1958 + C154112 * C1963 + C74322 * C4383 -
              C74323 * C4379 - C74322 * C4384 + C154102 * C4391 +
              C74324 * C5776 - C74325 * C5771 - C74324 * C5777 +
              C154044 * C5780) *
                 C74316 +
             (C75637 + C75638 + C75639 + C75640) * C153648) *
                C153810 * C153775 -
            ((C74653 + C74654 + C74655 + C74656) * C153648 +
             (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
              C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
              C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
              C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
              C74318 * C358 + C154116 * C377) *
                 C74316) *
                C153810 * C154022) *
               C153747) *
              C154013 +
          ((((C74906 + C74905 + C74904 + C74903) * C74316 +
             (C75351 + C75352 + C75353 + C75354) * C153648) *
                C153810 * C153775 -
            ((C74403 + C74404 + C74405 + C74406) * C153648 +
             (C74402 + C74401 + C74400 + C74399) * C74316) *
                C153810 * C154022) *
               C1279 +
           (((C74656 + C74655 + C74654 + C74653) * C74316 +
             (C75129 + C75130 + C75131 + C75132) * C153648) *
                C153810 * C154022 -
            ((C74324 * C5772 - C74325 * C5769 - C74324 * C5773 +
              C154044 * C5778 + C74322 * C4387 - C74323 * C4381 -
              C74322 * C4388 + C154102 * C4393 + C74320 * C1953 -
              C74321 * C1946 - C74320 * C1954 + C154112 * C1961 +
              C74318 * C1115 - C74319 * C1107 - C74318 * C1116 +
              C154116 * C1125) *
                 C153648 +
             (C75640 + C75639 + C75638 + C75637) * C74316) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154115 +
            (C70565 + C70566) * C154108 + C70575 * C154089 + C70576 * C154036) *
               C153810 * C153711 * C1279 -
           (C71329 * C154036 + C71330 * C154089 + (C70849 + C70850) * C154108 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C154115) *
               C153810 * C153711 * C153747) *
              C1281 +
          (((C70850 + C70849) * C154115 + (C70848 + C70847) * C154108 +
            (C70846 + C70845) * C154089 + (C71343 + C71344) * C154036) *
               C153810 * C153711 * C153747 -
           (C70577 * C154036 + C70578 * C154089 + (C70568 + C70567) * C154108 +
            (C70566 + C70565) * C154115) *
               C153810 * C153711 * C1279) *
              C1282 +
          ((C70575 * C154115 + C70576 * C154108 + (C70572 + C70571) * C154089 +
            (C70573 + C70574) * C154036) *
               C153810 * C153711 * C1279 -
           ((C70502 * C371 - C70503 * C348 - C70502 * C372 + C153855 * C384 +
             C70500 * C369 - C70501 * C347 - C70500 * C370 + C70494 * C383) *
                C154036 +
            (C71344 + C71343) * C154089 + C71329 * C154108 + C71330 * C154115) *
               C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
            C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
               C154115 +
           (C70565 + C70566) * C154108 + C70575 * C154089 + C70576 * C154036) *
              C153810 * C153711 * C1366 -
          (C71329 * C154036 + C71330 * C154089 + (C70849 + C70850) * C154108 +
           (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
            C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
               C154115) *
              C153810 * C153711 * C1367 +
          ((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
            C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
            C153855 * C1390) *
               C154115 +
           (C70851 + C70852) * C154108 + (C70853 + C70854) * C154089 +
           (C70855 + C70856) * C154036) *
              C153810 * C153711 * C1368 -
          ((C70502 * C3199 - C70503 * C3192 - C70502 * C3200 + C153855 * C3204 +
            C70500 * C1378 - C70501 * C1372 - C70500 * C1379 + C70494 * C1387) *
               C154036 +
           (C70502 * C3197 - C70503 * C3191 - C70502 * C3198 + C153855 * C3203 +
            C70500 * C1380 - C70501 * C1373 - C70500 * C1381 + C70494 * C1388) *
               C154089 +
           (C70502 * C3195 - C70503 * C3190 - C70502 * C3196 + C153855 * C3202 +
            C70500 * C1382 - C70501 * C1374 - C70500 * C1383 + C70494 * C1389) *
               C154108 +
           (C70502 * C3193 - C70503 * C3189 - C70502 * C3194 + C153855 * C3201 +
            C70500 * C1384 - C70501 * C1375 - C70500 * C1385 + C70494 * C1390) *
               C154115) *
              C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C74316 +
            (C74399 + C74400 + C74401 + C74402) * C153648) *
               C153810 * C153711 * C1279 -
           ((C74653 + C74654 + C74655 + C74656) * C153648 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C74316) *
               C153810 * C153711 * C153747) *
              C1281 +
          (((C74656 + C74655 + C74654 + C74653) * C74316 +
            (C75129 + C75130 + C75131 + C75132) * C153648) *
               C153810 * C153711 * C153747 -
           ((C74403 + C74404 + C74405 + C74406) * C153648 +
            (C74402 + C74401 + C74400 + C74399) * C74316) *
               C153810 * C153711 * C1279) *
              C1282 +
          (((C74406 + C74405 + C74404 + C74403) * C74316 +
            (C74407 + C74408 + C74409 + C74410) * C153648) *
               C153810 * C153711 * C1279 -
           ((C74324 * C3199 - C74325 * C3192 - C74324 * C3200 +
             C154044 * C3204 + C74322 * C1378 - C74323 * C1372 -
             C74322 * C1379 + C154102 * C1387 + C74320 * C365 - C74321 * C345 -
             C74320 * C366 + C154112 * C381 + C74318 * C351 - C74319 * C338 -
             C74318 * C352 + C154116 * C374) *
                C153648 +
            (C75132 + C75131 + C75130 + C75129) * C74316) *
               C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
            C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
            C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
            C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
            C154044 * C1390) *
               C74316 +
           (C74399 + C74400 + C74401 + C74402) * C153648) *
              C153810 * C153711 * C1366 -
          ((C74653 + C74654 + C74655 + C74656) * C153648 +
           (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 + C154044 * C3201 +
            C74322 * C1384 - C74323 * C1375 - C74322 * C1385 + C154102 * C1390 +
            C74320 * C359 - C74321 * C342 - C74320 * C360 + C154112 * C378 +
            C74318 * C357 - C74319 * C341 - C74318 * C358 + C154116 * C377) *
               C74316) *
              C153810 * C153711 * C1367 +
          ((C74318 * C359 - C74319 * C342 - C74318 * C360 + C154116 * C378 +
            C74320 * C1384 - C74321 * C1375 - C74320 * C1385 + C154112 * C1390 +
            C74322 * C3193 - C74323 * C3189 - C74322 * C3194 + C154102 * C3201 +
            C74324 * C4808 - C74325 * C4803 - C74324 * C4809 +
            C154044 * C4812) *
               C74316 +
           (C74657 + C74658 + C74659 + C74660) * C153648) *
              C153810 * C153711 * C1368 -
          ((C74324 * C28564 - C74325 * C28561 - C74324 * C28565 +
            C154044 * C28567 + C74322 * C4806 - C74323 * C4802 -
            C74322 * C4807 + C154102 * C4811 + C74320 * C3195 - C74321 * C3190 -
            C74320 * C3196 + C154112 * C3202 + C74318 * C1382 - C74319 * C1374 -
            C74318 * C1383 + C154116 * C1389) *
               C153648 +
           (C74324 * C28562 - C74325 * C28560 - C74324 * C28563 +
            C154044 * C28566 + C74322 * C4808 - C74323 * C4803 -
            C74322 * C4809 + C154102 * C4812 + C74320 * C3193 - C74321 * C3189 -
            C74320 * C3194 + C154112 * C3201 + C74318 * C1384 - C74319 * C1375 -
            C74318 * C1385 + C154116 * C1390) *
               C74316) *
              C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154115 +
             (C70565 + C70566) * C154108 + C70575 * C154089 +
             C70576 * C154036) *
                C153810 * C2086 -
            (C71539 * C154036 + C71540 * C154089 + (C71127 + C71128) * C154108 +
             (C70502 * C1111 - C70503 * C1105 - C70502 * C1112 +
              C153855 * C1123 + C70500 * C586 - C70501 * C570 - C70500 * C587 +
              C70494 * C606) *
                 C154115) *
                C153810 * C153775) *
               C154021 +
           (((C70500 * C1111 - C70501 * C1105 - C70500 * C1112 +
              C70494 * C1123 + C70502 * C1957 - C70503 * C1948 -
              C70502 * C1958 + C153855 * C1963) *
                 C154115 +
             (C71849 + C71850) * C154108 + (C71851 + C71852) * C154089 +
             (C71853 + C71854) * C154036) *
                C153810 * C153775 -
            (C71329 * C154036 + C71330 * C154089 + (C70849 + C70850) * C154108 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C154115) *
                C153810 * C2086) *
               C153747) *
              C154013 +
          ((((C71128 + C71127) * C154115 + (C71126 + C71125) * C154108 +
             (C71124 + C71123) * C154089 + (C71553 + C71554) * C154036) *
                C153810 * C153775 -
            (C70577 * C154036 + C70578 * C154089 + (C70568 + C70567) * C154108 +
             (C70566 + C70565) * C154115) *
                C153810 * C2086) *
               C154021 +
           (((C70850 + C70849) * C154115 + (C70848 + C70847) * C154108 +
             (C70846 + C70845) * C154089 + (C71343 + C71344) * C154036) *
                C153810 * C2086 -
            ((C70502 * C1949 - C70503 * C1944 - C70502 * C1950 +
              C153855 * C1959 + C70500 * C1119 - C70501 * C1109 -
              C70500 * C1120 + C70494 * C1127) *
                 C154036 +
             (C71854 + C71853) * C154089 + (C71852 + C71851) * C154108 +
             (C71850 + C71849) * C154115) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
              C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
              C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
              C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
              C154044 * C1390) *
                 C74316 +
             (C74399 + C74400 + C74401 + C74402) * C153648) *
                C153810 * C2086 -
            ((C74903 + C74904 + C74905 + C74906) * C153648 +
             (C74324 * C4383 - C74325 * C4379 - C74324 * C4384 +
              C154044 * C4391 + C74322 * C1957 - C74323 * C1948 -
              C74322 * C1958 + C154102 * C1963 + C74320 * C1111 -
              C74321 * C1105 - C74320 * C1112 + C154112 * C1123 +
              C74318 * C586 - C74319 * C570 - C74318 * C587 + C154116 * C606) *
                 C74316) *
                C153810 * C153775) *
               C154021 +
           (((C74318 * C1111 - C74319 * C1105 - C74318 * C1112 +
              C154116 * C1123 + C74320 * C1957 - C74321 * C1948 -
              C74320 * C1958 + C154112 * C1963 + C74322 * C4383 -
              C74323 * C4379 - C74322 * C4384 + C154102 * C4391 +
              C74324 * C5776 - C74325 * C5771 - C74324 * C5777 +
              C154044 * C5780) *
                 C74316 +
             (C75637 + C75638 + C75639 + C75640) * C153648) *
                C153810 * C153775 -
            ((C74653 + C74654 + C74655 + C74656) * C153648 +
             (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
              C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
              C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
              C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
              C74318 * C358 + C154116 * C377) *
                 C74316) *
                C153810 * C2086) *
               C153747) *
              C154013 +
          ((((C74906 + C74905 + C74904 + C74903) * C74316 +
             (C75351 + C75352 + C75353 + C75354) * C153648) *
                C153810 * C153775 -
            ((C74403 + C74404 + C74405 + C74406) * C153648 +
             (C74402 + C74401 + C74400 + C74399) * C74316) *
                C153810 * C2086) *
               C154021 +
           (((C74656 + C74655 + C74654 + C74653) * C74316 +
             (C75129 + C75130 + C75131 + C75132) * C153648) *
                C153810 * C2086 -
            ((C74324 * C5772 - C74325 * C5769 - C74324 * C5773 +
              C154044 * C5778 + C74322 * C4387 - C74323 * C4381 -
              C74322 * C4388 + C154102 * C4393 + C74320 * C1953 -
              C74321 * C1946 - C74320 * C1954 + C154112 * C1961 +
              C74318 * C1115 - C74319 * C1107 - C74318 * C1116 +
              C154116 * C1125) *
                 C153648 +
             (C75640 + C75639 + C75638 + C75637) * C74316) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154115 +
            (C70565 + C70566) * C154108 + C70575 * C154089 + C70576 * C154036) *
               C153810 * C154094 -
           (C71539 * C154036 + C71540 * C154089 + (C71127 + C71128) * C154108 +
            (C70502 * C1111 - C70503 * C1105 - C70502 * C1112 +
             C153855 * C1123 + C70500 * C586 - C70501 * C570 - C70500 * C587 +
             C70494 * C606) *
                C154115) *
               C153810 * C154095 +
           ((C70500 * C588 - C70501 * C571 - C70500 * C589 + C70494 * C607 +
             C70502 * C1526 - C70503 * C1517 - C70502 * C1527 +
             C153855 * C1532) *
                C154115 +
            (C71129 + C71130) * C154108 + (C71131 + C71132) * C154089 +
            (C71133 + C71134) * C154036) *
               C153810 * C2602) *
              C154021 +
          (((C70500 * C1111 - C70501 * C1105 - C70500 * C1112 + C70494 * C1123 +
             C70502 * C1957 - C70503 * C1948 - C70502 * C1958 +
             C153855 * C1963) *
                C154115 +
            (C71849 + C71850) * C154108 + (C71851 + C71852) * C154089 +
            (C71853 + C71854) * C154036) *
               C153810 * C154095 -
           (C71329 * C154036 + C71330 * C154089 + (C70849 + C70850) * C154108 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C154115) *
               C153810 * C154094 -
           ((C70502 * C3517 - C70503 * C3510 - C70502 * C3518 +
             C153855 * C3522 + C70500 * C1520 - C70501 * C1514 -
             C70500 * C1521 + C70494 * C1529) *
                C154036 +
            (C70502 * C3515 - C70503 * C3509 - C70502 * C3516 +
             C153855 * C3521 + C70500 * C1522 - C70501 * C1515 -
             C70500 * C1523 + C70494 * C1530) *
                C154089 +
            (C70502 * C3513 - C70503 * C3508 - C70502 * C3514 +
             C153855 * C3520 + C70500 * C1524 - C70501 * C1516 -
             C70500 * C1525 + C70494 * C1531) *
                C154108 +
            (C70502 * C3511 - C70503 * C3507 - C70502 * C3512 +
             C153855 * C3519 + C70500 * C1526 - C70501 * C1517 -
             C70500 * C1527 + C70494 * C1532) *
                C154115) *
               C153810 * C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C74316 +
            (C74399 + C74400 + C74401 + C74402) * C153648) *
               C153810 * C154094 -
           ((C74903 + C74904 + C74905 + C74906) * C153648 +
            (C74324 * C4383 - C74325 * C4379 - C74324 * C4384 +
             C154044 * C4391 + C74322 * C1957 - C74323 * C1948 -
             C74322 * C1958 + C154102 * C1963 + C74320 * C1111 -
             C74321 * C1105 - C74320 * C1112 + C154112 * C1123 + C74318 * C586 -
             C74319 * C570 - C74318 * C587 + C154116 * C606) *
                C74316) *
               C153810 * C154095 +
           ((C74318 * C588 - C74319 * C571 - C74318 * C589 + C154116 * C607 +
             C74320 * C1526 - C74321 * C1517 - C74320 * C1527 +
             C154112 * C1532 + C74322 * C3511 - C74323 * C3507 -
             C74322 * C3512 + C154102 * C3519 + C74324 * C5038 -
             C74325 * C5033 - C74324 * C5039 + C154044 * C5042) *
                C74316 +
            (C74907 + C74908 + C74909 + C74910) * C153648) *
               C153810 * C2602) *
              C154021 +
          (((C74318 * C1111 - C74319 * C1105 - C74318 * C1112 +
             C154116 * C1123 + C74320 * C1957 - C74321 * C1948 -
             C74320 * C1958 + C154112 * C1963 + C74322 * C4383 -
             C74323 * C4379 - C74322 * C4384 + C154102 * C4391 +
             C74324 * C5776 - C74325 * C5771 - C74324 * C5777 +
             C154044 * C5780) *
                C74316 +
            (C75637 + C75638 + C75639 + C75640) * C153648) *
               C153810 * C154095 -
           ((C74653 + C74654 + C74655 + C74656) * C153648 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C74316) *
               C153810 * C154094 -
           ((C74324 * C28694 - C74325 * C28691 - C74324 * C28695 +
             C154044 * C28697 + C74322 * C5036 - C74323 * C5032 -
             C74322 * C5037 + C154102 * C5041 + C74320 * C3513 -
             C74321 * C3508 - C74320 * C3514 + C154112 * C3520 +
             C74318 * C1524 - C74319 * C1516 - C74318 * C1525 +
             C154116 * C1531) *
                C153648 +
            (C74324 * C28692 - C74325 * C28690 - C74324 * C28693 +
             C154044 * C28696 + C74322 * C5038 - C74323 * C5033 -
             C74322 * C5039 + C154102 * C5042 + C74320 * C3511 -
             C74321 * C3507 - C74320 * C3512 + C154112 * C3519 +
             C74318 * C1526 - C74319 * C1517 - C74318 * C1527 +
             C154116 * C1532) *
                C74316) *
               C153810 * C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154115 +
            (C70565 + C70566) * C154108 + C70575 * C154089 + C70576 * C154036) *
               C153810 * C2086 -
           (C71539 * C154036 + C71540 * C154089 + (C71127 + C71128) * C154108 +
            (C70502 * C1111 - C70503 * C1105 - C70502 * C1112 +
             C153855 * C1123 + C70500 * C586 - C70501 * C570 - C70500 * C587 +
             C70494 * C606) *
                C154115) *
               C153810 * C153775) *
              C332 +
          (((C70500 * C1111 - C70501 * C1105 - C70500 * C1112 + C70494 * C1123 +
             C70502 * C1957 - C70503 * C1948 - C70502 * C1958 +
             C153855 * C1963) *
                C154115 +
            (C71849 + C71850) * C154108 + (C71851 + C71852) * C154089 +
            (C71853 + C71854) * C154036) *
               C153810 * C153775 -
           (C71329 * C154036 + C71330 * C154089 + (C70849 + C70850) * C154108 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C154115) *
               C153810 * C2086) *
              C333 +
          (((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
             C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
             C153855 * C1390) *
                C154115 +
            (C70851 + C70852) * C154108 + (C70853 + C70854) * C154089 +
            (C70855 + C70856) * C154036) *
               C153810 * C2086 -
           ((C70502 * C4389 - C70503 * C4382 - C70502 * C4390 +
             C153855 * C4394 + C70500 * C1951 - C70501 * C1945 -
             C70500 * C1952 + C70494 * C1960) *
                C154036 +
            (C70502 * C4387 - C70503 * C4381 - C70502 * C4388 +
             C153855 * C4393 + C70500 * C1953 - C70501 * C1946 -
             C70500 * C1954 + C70494 * C1961) *
                C154089 +
            (C70502 * C4385 - C70503 * C4380 - C70502 * C4386 +
             C153855 * C4392 + C70500 * C1955 - C70501 * C1947 -
             C70500 * C1956 + C70494 * C1962) *
                C154108 +
            (C70502 * C4383 - C70503 * C4379 - C70502 * C4384 +
             C153855 * C4391 + C70500 * C1957 - C70501 * C1948 -
             C70500 * C1958 + C70494 * C1963) *
                C154115) *
               C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154115 +
            (C70565 + C70566) * C154108 + C70575 * C154089 + C70576 * C154036) *
               C153810 * C2086 -
           (C71539 * C154036 + C71540 * C154089 + (C71127 + C71128) * C154108 +
            (C70502 * C1111 - C70503 * C1105 - C70502 * C1112 +
             C153855 * C1123 + C70500 * C586 - C70501 * C570 - C70500 * C587 +
             C70494 * C606) *
                C154115) *
               C153810 * C153775) *
              C153695 * C1281 +
          (((C71128 + C71127) * C154115 + (C71126 + C71125) * C154108 +
            (C71124 + C71123) * C154089 + (C71553 + C71554) * C154036) *
               C153810 * C153775 -
           (C70577 * C154036 + C70578 * C154089 + (C70568 + C70567) * C154108 +
            (C70566 + C70565) * C154115) *
               C153810 * C2086) *
              C153695 * C1282 +
          ((C70575 * C154115 + C70576 * C154108 + (C70572 + C70571) * C154089 +
            (C70573 + C70574) * C154036) *
               C153810 * C2086 -
           ((C70502 * C1121 - C70503 * C1110 - C70502 * C1122 +
             C153855 * C1128 + C70500 * C598 - C70501 * C576 - C70500 * C599 +
             C70494 * C612) *
                C154036 +
            (C71554 + C71553) * C154089 + C71539 * C154108 + C71540 * C154115) *
               C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
            C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
               C154115 +
           (C70565 + C70566) * C154108 + C70575 * C154089 + C70576 * C154036) *
              C153810 * C2292 -
          (C71539 * C154036 + C71540 * C154089 + (C71127 + C71128) * C154108 +
           (C70502 * C1111 - C70503 * C1105 - C70502 * C1112 + C153855 * C1123 +
            C70500 * C586 - C70501 * C570 - C70500 * C587 + C70494 * C606) *
               C154115) *
              C153810 * C2293 +
          ((C70500 * C588 - C70501 * C571 - C70500 * C589 + C70494 * C607 +
            C70502 * C1526 - C70503 * C1517 - C70502 * C1527 +
            C153855 * C1532) *
               C154115 +
           (C71129 + C71130) * C154108 + (C71131 + C71132) * C154089 +
           (C71133 + C71134) * C154036) *
              C153810 * C2294 -
          ((C70502 * C8574 - C70503 * C8573 - C70502 * C8575 + C153855 * C8576 +
            C70500 * C2303 - C70501 * C2297 - C70500 * C2304 + C70494 * C2312) *
               C154036 +
           (C70502 * C6371 - C70503 * C6364 - C70502 * C6372 + C153855 * C6382 +
            C70500 * C2305 - C70501 * C2298 - C70500 * C2306 + C70494 * C2313) *
               C154089 +
           (C70502 * C6375 - C70503 * C6366 - C70502 * C6376 + C153855 * C6384 +
            C70500 * C2307 - C70501 * C2299 - C70500 * C2308 + C70494 * C2314) *
               C154108 +
           (C70502 * C6379 - C70503 * C6368 - C70502 * C6380 + C153855 * C6386 +
            C70500 * C2309 - C70501 * C2300 - C70500 * C2310 + C70494 * C2315) *
               C154115) *
              C153810 * C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C74316 +
            (C74399 + C74400 + C74401 + C74402) * C153648) *
               C153810 * C2086 -
           ((C74903 + C74904 + C74905 + C74906) * C153648 +
            (C74324 * C4383 - C74325 * C4379 - C74324 * C4384 +
             C154044 * C4391 + C74322 * C1957 - C74323 * C1948 -
             C74322 * C1958 + C154102 * C1963 + C74320 * C1111 -
             C74321 * C1105 - C74320 * C1112 + C154112 * C1123 + C74318 * C586 -
             C74319 * C570 - C74318 * C587 + C154116 * C606) *
                C74316) *
               C153810 * C153775) *
              C153695 * C1281 +
          (((C74906 + C74905 + C74904 + C74903) * C74316 +
            (C75351 + C75352 + C75353 + C75354) * C153648) *
               C153810 * C153775 -
           ((C74403 + C74404 + C74405 + C74406) * C153648 +
            (C74402 + C74401 + C74400 + C74399) * C74316) *
               C153810 * C2086) *
              C153695 * C1282 +
          (((C74406 + C74405 + C74404 + C74403) * C74316 +
            (C74407 + C74408 + C74409 + C74410) * C153648) *
               C153810 * C2086 -
           ((C74324 * C4389 - C74325 * C4382 - C74324 * C4390 +
             C154044 * C4394 + C74322 * C1951 - C74323 * C1945 -
             C74322 * C1952 + C154102 * C1960 + C74320 * C1117 -
             C74321 * C1108 - C74320 * C1118 + C154112 * C1126 + C74318 * C580 -
             C74319 * C567 - C74318 * C581 + C154116 * C603) *
                C153648 +
            (C75354 + C75353 + C75352 + C75351) * C74316) *
               C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C74316 +
            (C74399 + C74400 + C74401 + C74402) * C153648) *
               C153810 * C2086 -
           ((C74903 + C74904 + C74905 + C74906) * C153648 +
            (C74324 * C4383 - C74325 * C4379 - C74324 * C4384 +
             C154044 * C4391 + C74322 * C1957 - C74323 * C1948 -
             C74322 * C1958 + C154102 * C1963 + C74320 * C1111 -
             C74321 * C1105 - C74320 * C1112 + C154112 * C1123 + C74318 * C586 -
             C74319 * C570 - C74318 * C587 + C154116 * C606) *
                C74316) *
               C153810 * C153775) *
              C332 +
          (((C74318 * C1111 - C74319 * C1105 - C74318 * C1112 +
             C154116 * C1123 + C74320 * C1957 - C74321 * C1948 -
             C74320 * C1958 + C154112 * C1963 + C74322 * C4383 -
             C74323 * C4379 - C74322 * C4384 + C154102 * C4391 +
             C74324 * C5776 - C74325 * C5771 - C74324 * C5777 +
             C154044 * C5780) *
                C74316 +
            (C75637 + C75638 + C75639 + C75640) * C153648) *
               C153810 * C153775 -
           ((C74653 + C74654 + C74655 + C74656) * C153648 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C74316) *
               C153810 * C2086) *
              C333 +
          (((C74318 * C359 - C74319 * C342 - C74318 * C360 + C154116 * C378 +
             C74320 * C1384 - C74321 * C1375 - C74320 * C1385 +
             C154112 * C1390 + C74322 * C3193 - C74323 * C3189 -
             C74322 * C3194 + C154102 * C3201 + C74324 * C4808 -
             C74325 * C4803 - C74324 * C4809 + C154044 * C4812) *
                C74316 +
            (C74657 + C74658 + C74659 + C74660) * C153648) *
               C153810 * C2086 -
           ((C74324 * C29108 - C74325 * C29105 - C74324 * C29109 +
             C154044 * C29111 + C74322 * C5774 - C74323 * C5770 -
             C74322 * C5775 + C154102 * C5779 + C74320 * C4385 -
             C74321 * C4380 - C74320 * C4386 + C154112 * C4392 +
             C74318 * C1955 - C74319 * C1947 - C74318 * C1956 +
             C154116 * C1962) *
                C153648 +
            (C74324 * C29106 - C74325 * C29104 - C74324 * C29107 +
             C154044 * C29110 + C74322 * C5776 - C74323 * C5771 -
             C74322 * C5777 + C154102 * C5780 + C74320 * C4383 -
             C74321 * C4379 - C74320 * C4384 + C154112 * C4391 +
             C74318 * C1957 - C74319 * C1948 - C74318 * C1958 +
             C154116 * C1963) *
                C74316) *
               C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
            C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
            C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
            C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
            C154044 * C1390) *
               C74316 +
           (C74399 + C74400 + C74401 + C74402) * C153648) *
              C153810 * C2292 -
          ((C74903 + C74904 + C74905 + C74906) * C153648 +
           (C74324 * C4383 - C74325 * C4379 - C74324 * C4384 + C154044 * C4391 +
            C74322 * C1957 - C74323 * C1948 - C74322 * C1958 + C154102 * C1963 +
            C74320 * C1111 - C74321 * C1105 - C74320 * C1112 + C154112 * C1123 +
            C74318 * C586 - C74319 * C570 - C74318 * C587 + C154116 * C606) *
               C74316) *
              C153810 * C2293 +
          ((C74318 * C588 - C74319 * C571 - C74318 * C589 + C154116 * C607 +
            C74320 * C1526 - C74321 * C1517 - C74320 * C1527 + C154112 * C1532 +
            C74322 * C3511 - C74323 * C3507 - C74322 * C3512 + C154102 * C3519 +
            C74324 * C5038 - C74325 * C5033 - C74324 * C5039 +
            C154044 * C5042) *
               C74316 +
           (C74907 + C74908 + C74909 + C74910) * C153648) *
              C153810 * C2294 -
          ((C74324 * C32003 - C74325 * C32002 - C74324 * C32004 +
            C154044 * C32005 + C74322 * C6373 - C74323 * C6365 -
            C74322 * C6374 + C154102 * C6383 + C74320 * C6375 - C74321 * C6366 -
            C74320 * C6376 + C154112 * C6384 + C74318 * C2307 - C74319 * C2299 -
            C74318 * C2308 + C154116 * C2314) *
               C153648 +
           (C74324 * C30186 - C74325 * C30183 - C74324 * C30187 +
            C154044 * C30189 + C74322 * C6377 - C74323 * C6367 -
            C74322 * C6378 + C154102 * C6385 + C74320 * C6379 - C74321 * C6368 -
            C74320 * C6380 + C154112 * C6386 + C74318 * C2309 - C74319 * C2300 -
            C74318 * C2310 + C154116 * C2315) *
               C74316) *
              C153810 * C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154115 +
            (C70565 + C70566) * C154108 + C70575 * C154089 + C70576 * C154036) *
               C153810 * C154094 -
           (C71539 * C154036 + C71540 * C154089 + (C71127 + C71128) * C154108 +
            (C70502 * C1111 - C70503 * C1105 - C70502 * C1112 +
             C153855 * C1123 + C70500 * C586 - C70501 * C570 - C70500 * C587 +
             C70494 * C606) *
                C154115) *
               C153810 * C154095 +
           ((C70500 * C588 - C70501 * C571 - C70500 * C589 + C70494 * C607 +
             C70502 * C1526 - C70503 * C1517 - C70502 * C1527 +
             C153855 * C1532) *
                C154115 +
            (C71129 + C71130) * C154108 + (C71131 + C71132) * C154089 +
            (C71133 + C71134) * C154036) *
               C153810 * C2602) *
              C153695 * C154013 +
          (((C71128 + C71127) * C154115 + (C71126 + C71125) * C154108 +
            (C71124 + C71123) * C154089 + (C71553 + C71554) * C154036) *
               C153810 * C154095 -
           (C70577 * C154036 + C70578 * C154089 + (C70568 + C70567) * C154108 +
            (C70566 + C70565) * C154115) *
               C153810 * C154094 -
           ((C70502 * C1518 - C70503 * C1513 - C70502 * C1519 +
             C153855 * C1528 + C70500 * C596 - C70501 * C575 - C70500 * C597 +
             C70494 * C611) *
                C154036 +
            (C71134 + C71133) * C154089 + (C71132 + C71131) * C154108 +
            (C71130 + C71129) * C154115) *
               C153810 * C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C74316 +
            (C74399 + C74400 + C74401 + C74402) * C153648) *
               C153810 * C154094 -
           ((C74903 + C74904 + C74905 + C74906) * C153648 +
            (C74324 * C4383 - C74325 * C4379 - C74324 * C4384 +
             C154044 * C4391 + C74322 * C1957 - C74323 * C1948 -
             C74322 * C1958 + C154102 * C1963 + C74320 * C1111 -
             C74321 * C1105 - C74320 * C1112 + C154112 * C1123 + C74318 * C586 -
             C74319 * C570 - C74318 * C587 + C154116 * C606) *
                C74316) *
               C153810 * C154095 +
           ((C74318 * C588 - C74319 * C571 - C74318 * C589 + C154116 * C607 +
             C74320 * C1526 - C74321 * C1517 - C74320 * C1527 +
             C154112 * C1532 + C74322 * C3511 - C74323 * C3507 -
             C74322 * C3512 + C154102 * C3519 + C74324 * C5038 -
             C74325 * C5033 - C74324 * C5039 + C154044 * C5042) *
                C74316 +
            (C74907 + C74908 + C74909 + C74910) * C153648) *
               C153810 * C2602) *
              C153695 * C154013 +
          (((C74906 + C74905 + C74904 + C74903) * C74316 +
            (C75351 + C75352 + C75353 + C75354) * C153648) *
               C153810 * C154095 -
           ((C74403 + C74404 + C74405 + C74406) * C153648 +
            (C74402 + C74401 + C74400 + C74399) * C74316) *
               C153810 * C154094 -
           ((C74324 * C5034 - C74325 * C5031 - C74324 * C5035 +
             C154044 * C5040 + C74322 * C3515 - C74323 * C3509 -
             C74322 * C3516 + C154102 * C3521 + C74320 * C1522 -
             C74321 * C1515 - C74320 * C1523 + C154112 * C1530 + C74318 * C592 -
             C74319 * C573 - C74318 * C593 + C154116 * C609) *
                C153648 +
            (C74910 + C74909 + C74908 + C74907) * C74316) *
               C153810 * C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154115 +
            (C70565 + C70566) * C154108 + C70575 * C154089 + C70576 * C154036) *
               C153810 * C2086 -
           (C71539 * C154036 + C71540 * C154089 + (C71127 + C71128) * C154108 +
            (C70502 * C1111 - C70503 * C1105 - C70502 * C1112 +
             C153855 * C1123 + C70500 * C586 - C70501 * C570 - C70500 * C587 +
             C70494 * C606) *
                C154115) *
               C153810 * C153775) *
              C153695 * C1281 +
          (((C71128 + C71127) * C154115 + (C71126 + C71125) * C154108 +
            (C71124 + C71123) * C154089 + (C71553 + C71554) * C154036) *
               C153810 * C153775 -
           (C70577 * C154036 + C70578 * C154089 + (C70568 + C70567) * C154108 +
            (C70566 + C70565) * C154115) *
               C153810 * C2086) *
              C153695 * C1282 +
          ((C70575 * C154115 + C70576 * C154108 + (C70572 + C70571) * C154089 +
            (C70573 + C70574) * C154036) *
               C153810 * C2086 -
           ((C70502 * C1121 - C70503 * C1110 - C70502 * C1122 +
             C153855 * C1128 + C70500 * C598 - C70501 * C576 - C70500 * C599 +
             C70494 * C612) *
                C154036 +
            (C71554 + C71553) * C154089 + C71539 * C154108 + C71540 * C154115) *
               C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154115 +
            (C70565 + C70566) * C154108 + C70575 * C154089 + C70576 * C154036) *
               C153810 * C2086 -
           (C71539 * C154036 + C71540 * C154089 + (C71127 + C71128) * C154108 +
            (C70502 * C1111 - C70503 * C1105 - C70502 * C1112 +
             C153855 * C1123 + C70500 * C586 - C70501 * C570 - C70500 * C587 +
             C70494 * C606) *
                C154115) *
               C153810 * C153775) *
              C332 +
          (((C70500 * C1111 - C70501 * C1105 - C70500 * C1112 + C70494 * C1123 +
             C70502 * C1957 - C70503 * C1948 - C70502 * C1958 +
             C153855 * C1963) *
                C154115 +
            (C71849 + C71850) * C154108 + (C71851 + C71852) * C154089 +
            (C71853 + C71854) * C154036) *
               C153810 * C153775 -
           (C71329 * C154036 + C71330 * C154089 + (C70849 + C70850) * C154108 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C154115) *
               C153810 * C2086) *
              C333 +
          (((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
             C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
             C153855 * C1390) *
                C154115 +
            (C70851 + C70852) * C154108 + (C70853 + C70854) * C154089 +
            (C70855 + C70856) * C154036) *
               C153810 * C2086 -
           ((C70502 * C4389 - C70503 * C4382 - C70502 * C4390 +
             C153855 * C4394 + C70500 * C1951 - C70501 * C1945 -
             C70500 * C1952 + C70494 * C1960) *
                C154036 +
            (C70502 * C4387 - C70503 * C4381 - C70502 * C4388 +
             C153855 * C4393 + C70500 * C1953 - C70501 * C1946 -
             C70500 * C1954 + C70494 * C1961) *
                C154089 +
            (C70502 * C4385 - C70503 * C4380 - C70502 * C4386 +
             C153855 * C4392 + C70500 * C1955 - C70501 * C1947 -
             C70500 * C1956 + C70494 * C1962) *
                C154108 +
            (C70502 * C4383 - C70503 * C4379 - C70502 * C4384 +
             C153855 * C4391 + C70500 * C1957 - C70501 * C1948 -
             C70500 * C1958 + C70494 * C1963) *
                C154115) *
               C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C74316 +
            (C74399 + C74400 + C74401 + C74402) * C153648) *
               C153810 * C2086 -
           ((C74903 + C74904 + C74905 + C74906) * C153648 +
            (C74324 * C4383 - C74325 * C4379 - C74324 * C4384 +
             C154044 * C4391 + C74322 * C1957 - C74323 * C1948 -
             C74322 * C1958 + C154102 * C1963 + C74320 * C1111 -
             C74321 * C1105 - C74320 * C1112 + C154112 * C1123 + C74318 * C586 -
             C74319 * C570 - C74318 * C587 + C154116 * C606) *
                C74316) *
               C153810 * C153775) *
              C153695 * C1281 +
          (((C74906 + C74905 + C74904 + C74903) * C74316 +
            (C75351 + C75352 + C75353 + C75354) * C153648) *
               C153810 * C153775 -
           ((C74403 + C74404 + C74405 + C74406) * C153648 +
            (C74402 + C74401 + C74400 + C74399) * C74316) *
               C153810 * C2086) *
              C153695 * C1282 +
          (((C74406 + C74405 + C74404 + C74403) * C74316 +
            (C74407 + C74408 + C74409 + C74410) * C153648) *
               C153810 * C2086 -
           ((C74324 * C4389 - C74325 * C4382 - C74324 * C4390 +
             C154044 * C4394 + C74322 * C1951 - C74323 * C1945 -
             C74322 * C1952 + C154102 * C1960 + C74320 * C1117 -
             C74321 * C1108 - C74320 * C1118 + C154112 * C1126 + C74318 * C580 -
             C74319 * C567 - C74318 * C581 + C154116 * C603) *
                C153648 +
            (C75354 + C75353 + C75352 + C75351) * C74316) *
               C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C74316 +
            (C74399 + C74400 + C74401 + C74402) * C153648) *
               C153810 * C2086 -
           ((C74903 + C74904 + C74905 + C74906) * C153648 +
            (C74324 * C4383 - C74325 * C4379 - C74324 * C4384 +
             C154044 * C4391 + C74322 * C1957 - C74323 * C1948 -
             C74322 * C1958 + C154102 * C1963 + C74320 * C1111 -
             C74321 * C1105 - C74320 * C1112 + C154112 * C1123 + C74318 * C586 -
             C74319 * C570 - C74318 * C587 + C154116 * C606) *
                C74316) *
               C153810 * C153775) *
              C332 +
          (((C74318 * C1111 - C74319 * C1105 - C74318 * C1112 +
             C154116 * C1123 + C74320 * C1957 - C74321 * C1948 -
             C74320 * C1958 + C154112 * C1963 + C74322 * C4383 -
             C74323 * C4379 - C74322 * C4384 + C154102 * C4391 +
             C74324 * C5776 - C74325 * C5771 - C74324 * C5777 +
             C154044 * C5780) *
                C74316 +
            (C75637 + C75638 + C75639 + C75640) * C153648) *
               C153810 * C153775 -
           ((C74653 + C74654 + C74655 + C74656) * C153648 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C74316) *
               C153810 * C2086) *
              C333 +
          (((C74318 * C359 - C74319 * C342 - C74318 * C360 + C154116 * C378 +
             C74320 * C1384 - C74321 * C1375 - C74320 * C1385 +
             C154112 * C1390 + C74322 * C3193 - C74323 * C3189 -
             C74322 * C3194 + C154102 * C3201 + C74324 * C4808 -
             C74325 * C4803 - C74324 * C4809 + C154044 * C4812) *
                C74316 +
            (C74657 + C74658 + C74659 + C74660) * C153648) *
               C153810 * C2086 -
           ((C74324 * C29108 - C74325 * C29105 - C74324 * C29109 +
             C154044 * C29111 + C74322 * C5774 - C74323 * C5770 -
             C74322 * C5775 + C154102 * C5779 + C74320 * C4385 -
             C74321 * C4380 - C74320 * C4386 + C154112 * C4392 +
             C74318 * C1955 - C74319 * C1947 - C74318 * C1956 +
             C154116 * C1962) *
                C153648 +
            (C74324 * C29106 - C74325 * C29104 - C74324 * C29107 +
             C154044 * C29110 + C74322 * C5776 - C74323 * C5771 -
             C74322 * C5777 + C154102 * C5780 + C74320 * C4383 -
             C74321 * C4379 - C74320 * C4384 + C154112 * C4391 +
             C74318 * C1957 - C74319 * C1948 - C74318 * C1958 +
             C154116 * C1963) *
                C74316) *
               C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C153851 * C160 + C152145 * C357 - C152180 * C341 -
              C152145 * C358 + C153858 * C377 + C152193 * C359 - C83611 * C342 -
              C152193 * C360 + C83602 * C378) *
                 C154002 +
             (C83685 + C83686 + C83687) * C153648) *
                C98524 +
            ((C93829 + C93830 + C93831) * C154002 + C93810 * C153648) *
                C153897) *
               C153711 * C154021 -
           ((C94839 * C153648 + (C94848 + C94847 + C94846) * C154002) *
                C153897 +
            ((C83994 + C83995 + C83996) * C153648 +
             (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
              C83602 * C1390 + C152145 * C359 - C152180 * C342 -
              C152145 * C360 + C153858 * C378 + C152148 * C357 -
              C152187 * C341 - C152148 * C358 + C153851 * C377) *
                 C154002) *
                C98524) *
               C153711 * C153747) *
              C154090 +
          ((((C83996 + C83995 + C83994) * C154002 +
             (C83993 + C83992 + C83991) * C153648) *
                C98524 +
            (C94835 * C154002 + (C85116 + C85117 + C85118) * C153648) *
                C153897) *
               C153711 * C153747 -
           ((C84777 * C153648 + C93815 * C154002) * C153897 +
            ((C83690 + C83689 + C83688) * C153648 +
             (C83687 + C83686 + C83685) * C154002) *
                C98524) *
               C153711 * C154021) *
              C154091 +
          (((C83699 * C154002 + (C83693 + C83692 + C83691) * C153648) * C98524 +
            (C94419 * C154002 + (C84784 + C84785 + C84786) * C153648) *
                C153897) *
               C153711 * C154021 -
           (((C152193 * C4389 - C83611 * C4382 - C152193 * C4390 +
              C83602 * C4394 + C152145 * C1951 - C152180 * C1945 -
              C152145 * C1952 + C153858 * C1960 + C152148 * C1117 -
              C152187 * C1108 - C152148 * C1118 + C153851 * C1126) *
                 C153648 +
             (C85118 + C85117 + C85116) * C154002) *
                C153897 +
            ((C84545 + C84544 + C84543) * C153648 + C84536 * C154002) *
                C98524) *
               C153711 * C153747) *
              C796)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
                       C153851 * C160 + C152145 * C357 - C152180 * C341 -
                       C152145 * C358 + C153858 * C377 + C152193 * C359 -
                       C83611 * C342 - C152193 * C360 + C83602 * C378) *
                          C154002 +
                      (C83685 + C83686 + C83687) * C153648) *
                         C98524 +
                     ((C93829 + C93830 + C93831) * C154002 + C93810 * C153648) *
                         C153897) *
                        C154022 -
                    ((C93811 * C153648 + (C93832 + C93833 + C93834) * C154002) *
                         C153897 +
                     (C93815 * C153648 + (C93831 + C93830 + C93829) * C154002) *
                         C98524) *
                        C153775) *
                       C154021 +
                   ((((C94846 + C94847 + C94848) * C154002 + C94835 * C153648) *
                         C98524 +
                     ((C95644 + C95645 + C95646) * C154002 +
                      (C94849 + C94850 + C94851) * C153648) *
                         C153897) *
                        C153775 -
                    ((C94839 * C153648 + (C94848 + C94847 + C94846) * C154002) *
                         C153897 +
                     ((C83994 + C83995 + C83996) * C153648 +
                      (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
                       C83602 * C1390 + C152145 * C359 - C152180 * C342 -
                       C152145 * C360 + C153858 * C378 + C152148 * C357 -
                       C152187 * C341 - C152148 * C358 + C153851 * C377) *
                          C154002) *
                         C98524) *
                        C154022) *
                       C153747) *
                      C335 +
                  ((((C93810 * C154002 + C94419 * C153648) * C98524 +
                     (C93816 * C154002 + (C84302 + C84303 + C84304) * C153648) *
                         C153897) *
                        C153775 -
                    ((C84777 * C153648 + C93815 * C154002) * C153897 +
                     ((C83690 + C83689 + C83688) * C153648 +
                      (C83687 + C83686 + C83685) * C154002) *
                         C98524) *
                        C154022) *
                       C154021 +
                   ((((C83996 + C83995 + C83994) * C154002 +
                      (C83993 + C83992 + C83991) * C153648) *
                         C98524 +
                     (C94835 * C154002 + (C85116 + C85117 + C85118) * C153648) *
                         C153897) *
                        C154022 -
                    (((C152193 * C5034 - C83611 * C5031 - C152193 * C5035 +
                       C83602 * C5040 + C152145 * C3515 - C152180 * C3509 -
                       C152145 * C3516 + C153858 * C3521 + C152148 * C1522 -
                       C152187 * C1515 - C152148 * C1523 + C153851 * C1530) *
                          C153648 +
                      (C94851 + C94850 + C94849) * C154002) *
                         C153897 +
                     ((C85118 + C85117 + C85116) * C153648 + C94839 * C154002) *
                         C98524) *
                        C153775) *
                       C153747) *
                      C153682)) /
                (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C153851 * C160 + C152145 * C357 - C152180 * C341 -
              C152145 * C358 + C153858 * C377 + C152193 * C359 - C83611 * C342 -
              C152193 * C360 + C83602 * C378) *
                 C154002 +
             (C83685 + C83686 + C83687) * C153648) *
                C98524 +
            ((C93829 + C93830 + C93831) * C154002 + C93810 * C153648) *
                C153897) *
               C153711 * C332 -
           ((C94839 * C153648 + (C94848 + C94847 + C94846) * C154002) *
                C153897 +
            ((C83994 + C83995 + C83996) * C153648 +
             (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
              C83602 * C1390 + C152145 * C359 - C152180 * C342 -
              C152145 * C360 + C153858 * C378 + C152148 * C357 -
              C152187 * C341 - C152148 * C358 + C153851 * C377) *
                 C154002) *
                C98524) *
               C153711 * C333 +
           (((C152148 * C359 - C152187 * C342 - C152148 * C360 +
              C153851 * C378 + C152145 * C1384 - C152180 * C1375 -
              C152145 * C1385 + C153858 * C1390 + C152193 * C3193 -
              C83611 * C3189 - C152193 * C3194 + C83602 * C3201) *
                 C154002 +
             (C83997 + C83998 + C83999) * C153648) *
                C98524 +
            ((C96631 + C96632 + C96633) * C154002 +
             (C93474 + C93475 + C93476) * C153648) *
                C153897) *
               C153711 * C334) *
              C335 +
          ((((C83996 + C83995 + C83994) * C154002 +
             (C83993 + C83992 + C83991) * C153648) *
                C98524 +
            (C94835 * C154002 + (C85116 + C85117 + C85118) * C153648) *
                C153897) *
               C153711 * C333 -
           ((C84777 * C153648 + C93815 * C154002) * C153897 +
            ((C83690 + C83689 + C83688) * C153648 +
             (C83687 + C83686 + C83685) * C154002) *
                C98524) *
               C153711 * C332 -
           (((C152193 * C5772 - C83611 * C5769 - C152193 * C5773 +
              C83602 * C5778 + C152145 * C4387 - C152180 * C4381 -
              C152145 * C4388 + C153858 * C4393 + C152148 * C1953 -
              C152187 * C1946 - C152148 * C1954 + C153851 * C1961) *
                 C153648 +
             (C93476 + C93475 + C93474) * C154002) *
                C153897 +
            ((C84002 + C84001 + C84000) * C153648 +
             (C83999 + C83998 + C83997) * C154002) *
                C98524) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C154002 +
            (C83685 + C83686 + C83687) * C153648) *
               C98524 +
           ((C93829 + C93830 + C93831) * C154002 + C93810 * C153648) *
               C153897) *
              C153711 * C153695 * C130 -
          ((C84777 * C153648 + C93815 * C154002) * C153897 +
           ((C83690 + C83689 + C83688) * C153648 +
            (C83687 + C83686 + C83685) * C154002) *
               C98524) *
              C153711 * C153695 * C131 +
          ((C83699 * C154002 + (C83693 + C83692 + C83691) * C153648) * C98524 +
           (C94419 * C154002 + (C84784 + C84785 + C84786) * C153648) *
               C153897) *
              C153711 * C153695 * C132 -
          (((C152193 * C1949 - C83611 * C1944 - C152193 * C1950 +
             C83602 * C1959 + C152145 * C1119 - C152180 * C1109 -
             C152145 * C1120 + C153858 * C1127 + C152148 * C578 -
             C152187 * C566 - C152148 * C579 + C153851 * C602) *
                C153648 +
            (C84786 + C84785 + C84784) * C154002) *
               C153897 +
           ((C83696 + C83695 + C83694) * C153648 + C83700 * C154002) * C98524) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C153851 * C160 + C152145 * C357 - C152180 * C341 -
              C152145 * C358 + C153858 * C377 + C152193 * C359 - C83611 * C342 -
              C152193 * C360 + C83602 * C378) *
                 C154002 +
             (C83685 + C83686 + C83687) * C153648) *
                C98524 +
            ((C93829 + C93830 + C93831) * C154002 + C93810 * C153648) *
                C153897) *
               C563 -
           ((C93811 * C153648 + (C93832 + C93833 + C93834) * C154002) *
                C153897 +
            (C93815 * C153648 + (C93831 + C93830 + C93829) * C154002) *
                C98524) *
               C564 +
           (((C93834 + C93833 + C93832) * C154002 + C93816 * C153648) * C98524 +
            ((C97426 + C97427 + C97428) * C154002 +
             (C93835 + C93836 + C93837) * C153648) *
                C153897) *
               C565) *
              C153695 * C335 +
          (((C93810 * C154002 + C94419 * C153648) * C98524 +
            (C93816 * C154002 + (C84302 + C84303 + C84304) * C153648) *
                C153897) *
               C564 -
           ((C84777 * C153648 + C93815 * C154002) * C153897 +
            ((C83690 + C83689 + C83688) * C153648 +
             (C83687 + C83686 + C83685) * C154002) *
                C98524) *
               C563 -
           (((C152193 * C6369 - C83611 * C6363 - C152193 * C6370 +
              C83602 * C6381 + C152145 * C6371 - C152180 * C6364 -
              C152145 * C6372 + C153858 * C6382 + C152148 * C2305 -
              C152187 * C2298 - C152148 * C2306 + C153851 * C2313) *
                 C153648 +
             (C93837 + C93836 + C93835) * C154002) *
                C153897 +
            ((C84304 + C84303 + C84302) * C153648 + C93811 * C154002) *
                C98524) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C153851 * C160 + C152145 * C357 - C152180 * C341 -
              C152145 * C358 + C153858 * C377 + C152193 * C359 - C83611 * C342 -
              C152193 * C360 + C83602 * C378) *
                 C154002 +
             (C83685 + C83686 + C83687) * C153648) *
                C98524 +
            ((C93829 + C93830 + C93831) * C154002 + C93810 * C153648) *
                C153897) *
               C154022 -
           ((C93811 * C153648 + (C93832 + C93833 + C93834) * C154002) *
                C153897 +
            (C93815 * C153648 + (C93831 + C93830 + C93829) * C154002) *
                C98524) *
               C153775) *
              C153695 * C154090 +
          (((C93810 * C154002 + C94419 * C153648) * C98524 +
            (C93816 * C154002 + (C84302 + C84303 + C84304) * C153648) *
                C153897) *
               C153775 -
           ((C84777 * C153648 + C93815 * C154002) * C153897 +
            ((C83690 + C83689 + C83688) * C153648 +
             (C83687 + C83686 + C83685) * C154002) *
                C98524) *
               C154022) *
              C153695 * C154091 +
          (((C83699 * C154002 + (C83693 + C83692 + C83691) * C153648) * C98524 +
            (C94419 * C154002 + (C84784 + C84785 + C84786) * C153648) *
                C153897) *
               C154022 -
           (((C152193 * C3517 - C83611 * C3510 - C152193 * C3518 +
              C83602 * C3522 + C152145 * C1520 - C152180 * C1514 -
              C152145 * C1521 + C153858 * C1529 + C152148 * C594 -
              C152187 * C574 - C152148 * C595 + C153851 * C610) *
                 C153648 +
             (C84304 + C84303 + C84302) * C154002) *
                C153897 +
            ((C84786 + C84785 + C84784) * C153648 + C84777 * C154002) *
                C98524) *
               C153775) *
              C153695 * C796)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C154002 +
            (C83685 + C83686 + C83687) * C153648) *
               C98524 +
           ((C93829 + C93830 + C93831) * C154002 + C93810 * C153648) *
               C153897) *
              C153711 * C153695 * C130 -
          ((C84777 * C153648 + C93815 * C154002) * C153897 +
           ((C83690 + C83689 + C83688) * C153648 +
            (C83687 + C83686 + C83685) * C154002) *
               C98524) *
              C153711 * C153695 * C131 +
          ((C83699 * C154002 + (C83693 + C83692 + C83691) * C153648) * C98524 +
           (C94419 * C154002 + (C84784 + C84785 + C84786) * C153648) *
               C153897) *
              C153711 * C153695 * C132 -
          (((C152193 * C1949 - C83611 * C1944 - C152193 * C1950 +
             C83602 * C1959 + C152145 * C1119 - C152180 * C1109 -
             C152145 * C1120 + C153858 * C1127 + C152148 * C578 -
             C152187 * C566 - C152148 * C579 + C153851 * C602) *
                C153648 +
            (C84786 + C84785 + C84784) * C154002) *
               C153897 +
           ((C83696 + C83695 + C83694) * C153648 + C83700 * C154002) * C98524) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C153851 * C160 + C152145 * C357 - C152180 * C341 -
              C152145 * C358 + C153858 * C377 + C152193 * C359 - C83611 * C342 -
              C152193 * C360 + C83602 * C378) *
                 C154002 +
             (C83685 + C83686 + C83687) * C153648) *
                C98524 +
            ((C93829 + C93830 + C93831) * C154002 + C93810 * C153648) *
                C153897) *
               C153711 * C332 -
           ((C94839 * C153648 + (C94848 + C94847 + C94846) * C154002) *
                C153897 +
            ((C83994 + C83995 + C83996) * C153648 +
             (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
              C83602 * C1390 + C152145 * C359 - C152180 * C342 -
              C152145 * C360 + C153858 * C378 + C152148 * C357 -
              C152187 * C341 - C152148 * C358 + C153851 * C377) *
                 C154002) *
                C98524) *
               C153711 * C333 +
           (((C152148 * C359 - C152187 * C342 - C152148 * C360 +
              C153851 * C378 + C152145 * C1384 - C152180 * C1375 -
              C152145 * C1385 + C153858 * C1390 + C152193 * C3193 -
              C83611 * C3189 - C152193 * C3194 + C83602 * C3201) *
                 C154002 +
             (C83997 + C83998 + C83999) * C153648) *
                C98524 +
            ((C96631 + C96632 + C96633) * C154002 +
             (C93474 + C93475 + C93476) * C153648) *
                C153897) *
               C153711 * C334) *
              C335 +
          ((((C83996 + C83995 + C83994) * C154002 +
             (C83993 + C83992 + C83991) * C153648) *
                C98524 +
            (C94835 * C154002 + (C85116 + C85117 + C85118) * C153648) *
                C153897) *
               C153711 * C333 -
           ((C84777 * C153648 + C93815 * C154002) * C153897 +
            ((C83690 + C83689 + C83688) * C153648 +
             (C83687 + C83686 + C83685) * C154002) *
                C98524) *
               C153711 * C332 -
           (((C152193 * C5772 - C83611 * C5769 - C152193 * C5773 +
              C83602 * C5778 + C152145 * C4387 - C152180 * C4381 -
              C152145 * C4388 + C153858 * C4393 + C152148 * C1953 -
              C152187 * C1946 - C152148 * C1954 + C153851 * C1961) *
                 C153648 +
             (C93476 + C93475 + C93474) * C154002) *
                C153897 +
            ((C84002 + C84001 + C84000) * C153648 +
             (C83999 + C83998 + C83997) * C154002) *
                C98524) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
                      C153851 * C160 + C152145 * C357 - C152180 * C341 -
                      C152145 * C358 + C153858 * C377 + C152193 * C359 -
                      C83611 * C342 - C152193 * C360 + C83602 * C378) *
                         C154002 +
                     (C83685 + C83686 + C83687) * C153648) *
                        C98524 +
                    ((C93829 + C93830 + C93831) * C154002 + C93810 * C153648) *
                        C153897) *
                       C153711 * C154092 -
                   ((C94839 * C153648 + (C94848 + C94847 + C94846) * C154002) *
                        C153897 +
                    ((C83994 + C83995 + C83996) * C153648 +
                     (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
                      C83602 * C1390 + C152145 * C359 - C152180 * C342 -
                      C152145 * C360 + C153858 * C378 + C152148 * C357 -
                      C152187 * C341 - C152148 * C358 + C153851 * C377) *
                         C154002) *
                        C98524) *
                       C153711 * C154093 +
                   (((C152148 * C359 - C152187 * C342 - C152148 * C360 +
                      C153851 * C378 + C152145 * C1384 - C152180 * C1375 -
                      C152145 * C1385 + C153858 * C1390 + C152193 * C3193 -
                      C83611 * C3189 - C152193 * C3194 + C83602 * C3201) *
                         C154002 +
                     (C83997 + C83998 + C83999) * C153648) *
                        C98524 +
                    ((C96631 + C96632 + C96633) * C154002 +
                     (C93474 + C93475 + C93476) * C153648) *
                        C153897) *
                       C153711 * C1657) *
                      C154013 +
                  ((((C83996 + C83995 + C83994) * C154002 +
                     (C83993 + C83992 + C83991) * C153648) *
                        C98524 +
                    (C94835 * C154002 + (C85116 + C85117 + C85118) * C153648) *
                        C153897) *
                       C153711 * C154093 -
                   ((C84777 * C153648 + C93815 * C154002) * C153897 +
                    ((C83690 + C83689 + C83688) * C153648 +
                     (C83687 + C83686 + C83685) * C154002) *
                        C98524) *
                       C153711 * C154092 -
                   (((C152193 * C5772 - C83611 * C5769 - C152193 * C5773 +
                      C83602 * C5778 + C152145 * C4387 - C152180 * C4381 -
                      C152145 * C4388 + C153858 * C4393 + C152148 * C1953 -
                      C152187 * C1946 - C152148 * C1954 + C153851 * C1961) *
                         C153648 +
                     (C93476 + C93475 + C93474) * C154002) *
                        C153897 +
                    ((C84002 + C84001 + C84000) * C153648 +
                     (C83999 + C83998 + C83997) * C154002) *
                        C98524) *
                       C153711 * C1657) *
                      C153682)) /
                (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C153851 * C160 + C152145 * C357 - C152180 * C341 -
              C152145 * C358 + C153858 * C377 + C152193 * C359 - C83611 * C342 -
              C152193 * C360 + C83602 * C378) *
                 C154002 +
             (C83685 + C83686 + C83687) * C153648) *
                C98524 +
            ((C93829 + C93830 + C93831) * C154002 + C93810 * C153648) *
                C153897) *
               C154022 -
           ((C93811 * C153648 + (C93832 + C93833 + C93834) * C154002) *
                C153897 +
            (C93815 * C153648 + (C93831 + C93830 + C93829) * C154002) *
                C98524) *
               C153775) *
              C154092 +
          ((((C94846 + C94847 + C94848) * C154002 + C94835 * C153648) * C98524 +
            ((C95644 + C95645 + C95646) * C154002 +
             (C94849 + C94850 + C94851) * C153648) *
                C153897) *
               C153775 -
           ((C94839 * C153648 + (C94848 + C94847 + C94846) * C154002) *
                C153897 +
            ((C83994 + C83995 + C83996) * C153648 +
             (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
              C83602 * C1390 + C152145 * C359 - C152180 * C342 -
              C152145 * C360 + C153858 * C378 + C152148 * C357 -
              C152187 * C341 - C152148 * C358 + C153851 * C377) *
                 C154002) *
                C98524) *
               C154022) *
              C154093 +
          ((((C152148 * C359 - C152187 * C342 - C152148 * C360 +
              C153851 * C378 + C152145 * C1384 - C152180 * C1375 -
              C152145 * C1385 + C153858 * C1390 + C152193 * C3193 -
              C83611 * C3189 - C152193 * C3194 + C83602 * C3201) *
                 C154002 +
             (C83997 + C83998 + C83999) * C153648) *
                C98524 +
            ((C96631 + C96632 + C96633) * C154002 +
             (C93474 + C93475 + C93476) * C153648) *
                C153897) *
               C154022 -
           (((C152193 * C28694 - C83611 * C28691 - C152193 * C28695 +
              C83602 * C28697 + C152145 * C5036 - C152180 * C5032 -
              C152145 * C5037 + C153858 * C5041 + C152148 * C3513 -
              C152187 * C3508 - C152148 * C3514 + C153851 * C3520) *
                 C153648 +
             (C152193 * C28692 - C83611 * C28690 - C152193 * C28693 +
              C83602 * C28696 + C152145 * C5038 - C152180 * C5033 -
              C152145 * C5039 + C153858 * C5042 + C152148 * C3511 -
              C152187 * C3507 - C152148 * C3512 + C153851 * C3519) *
                 C154002) *
                C153897 +
            ((C93476 + C93475 + C93474) * C153648 +
             (C96633 + C96632 + C96631) * C154002) *
                C98524) *
               C153775) *
              C1657) *
         C153676) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C154002 +
            (C83685 + C83686 + C83687) * C153648) *
               C98524 +
           ((C93829 + C93830 + C93831) * C154002 + C93810 * C153648) *
               C153897) *
              C153711 * C1366 -
          ((C94839 * C153648 + (C94848 + C94847 + C94846) * C154002) * C153897 +
           ((C83994 + C83995 + C83996) * C153648 +
            (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
             C83602 * C1390 + C152145 * C359 - C152180 * C342 - C152145 * C360 +
             C153858 * C378 + C152148 * C357 - C152187 * C341 - C152148 * C358 +
             C153851 * C377) *
                C154002) *
               C98524) *
              C153711 * C1367 +
          (((C152148 * C359 - C152187 * C342 - C152148 * C360 + C153851 * C378 +
             C152145 * C1384 - C152180 * C1375 - C152145 * C1385 +
             C153858 * C1390 + C152193 * C3193 - C83611 * C3189 -
             C152193 * C3194 + C83602 * C3201) *
                C154002 +
            (C83997 + C83998 + C83999) * C153648) *
               C98524 +
           ((C96631 + C96632 + C96633) * C154002 +
            (C93474 + C93475 + C93476) * C153648) *
               C153897) *
              C153711 * C1368 -
          (((C152193 * C29108 - C83611 * C29105 - C152193 * C29109 +
             C83602 * C29111 + C152145 * C5774 - C152180 * C5770 -
             C152145 * C5775 + C153858 * C5779 + C152148 * C4385 -
             C152187 * C4380 - C152148 * C4386 + C153851 * C4392) *
                C153648 +
            (C152193 * C29106 - C83611 * C29104 - C152193 * C29107 +
             C83602 * C29110 + C152145 * C5776 - C152180 * C5771 -
             C152145 * C5777 + C153858 * C5780 + C152148 * C4383 -
             C152187 * C4379 - C152148 * C4384 + C153851 * C4391) *
                C154002) *
               C153897 +
           ((C152193 * C4806 - C83611 * C4802 - C152193 * C4807 +
             C83602 * C4811 + C152145 * C3195 - C152180 * C3190 -
             C152145 * C3196 + C153858 * C3202 + C152148 * C1382 -
             C152187 * C1374 - C152148 * C1383 + C153851 * C1389) *
                C153648 +
            (C152193 * C4808 - C83611 * C4803 - C152193 * C4809 +
             C83602 * C4812 + C152145 * C3193 - C152180 * C3189 -
             C152145 * C3194 + C153858 * C3201 + C152148 * C1384 -
             C152187 * C1375 - C152148 * C1385 + C153851 * C1390) *
                C154002) *
               C98524) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C153851 * C160 + C152145 * C357 - C152180 * C341 -
              C152145 * C358 + C153858 * C377 + C152193 * C359 - C83611 * C342 -
              C152193 * C360 + C83602 * C378) *
                 C154002 +
             (C83685 + C83686 + C83687) * C153648) *
                C98524 +
            ((C93829 + C93830 + C93831) * C154002 + C93810 * C153648) *
                C153897) *
               C153711 * C1279 -
           ((C94839 * C153648 + (C94848 + C94847 + C94846) * C154002) *
                C153897 +
            ((C83994 + C83995 + C83996) * C153648 +
             (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
              C83602 * C1390 + C152145 * C359 - C152180 * C342 -
              C152145 * C360 + C153858 * C378 + C152148 * C357 -
              C152187 * C341 - C152148 * C358 + C153851 * C377) *
                 C154002) *
                C98524) *
               C153711 * C153747) *
              C1281 +
          ((((C83996 + C83995 + C83994) * C154002 +
             (C83993 + C83992 + C83991) * C153648) *
                C98524 +
            (C94835 * C154002 + (C85116 + C85117 + C85118) * C153648) *
                C153897) *
               C153711 * C153747 -
           ((C84777 * C153648 + C93815 * C154002) * C153897 +
            ((C83690 + C83689 + C83688) * C153648 +
             (C83687 + C83686 + C83685) * C154002) *
                C98524) *
               C153711 * C1279) *
              C1282 +
          (((C83699 * C154002 + (C83693 + C83692 + C83691) * C153648) * C98524 +
            (C94419 * C154002 + (C84784 + C84785 + C84786) * C153648) *
                C153897) *
               C153711 * C1279 -
           (((C152193 * C4389 - C83611 * C4382 - C152193 * C4390 +
              C83602 * C4394 + C152145 * C1951 - C152180 * C1945 -
              C152145 * C1952 + C153858 * C1960 + C152148 * C1117 -
              C152187 * C1108 - C152148 * C1118 + C153851 * C1126) *
                 C153648 +
             (C85118 + C85117 + C85116) * C154002) *
                C153897 +
            ((C84545 + C84544 + C84543) * C153648 + C84536 * C154002) *
                C98524) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C153851 * C160 + C152145 * C357 - C152180 * C341 -
              C152145 * C358 + C153858 * C377 + C152193 * C359 - C83611 * C342 -
              C152193 * C360 + C83602 * C378) *
                 C154002 +
             (C83685 + C83686 + C83687) * C153648) *
                C98524 +
            ((C93829 + C93830 + C93831) * C154002 + C93810 * C153648) *
                C153897) *
               C563 -
           ((C93811 * C153648 + (C93832 + C93833 + C93834) * C154002) *
                C153897 +
            (C93815 * C153648 + (C93831 + C93830 + C93829) * C154002) *
                C98524) *
               C564 +
           (((C93834 + C93833 + C93832) * C154002 + C93816 * C153648) * C98524 +
            ((C97426 + C97427 + C97428) * C154002 +
             (C93835 + C93836 + C93837) * C153648) *
                C153897) *
               C565) *
              C1279 +
          ((((C94846 + C94847 + C94848) * C154002 + C94835 * C153648) * C98524 +
            ((C95644 + C95645 + C95646) * C154002 +
             (C94849 + C94850 + C94851) * C153648) *
                C153897) *
               C564 -
           ((C94839 * C153648 + (C94848 + C94847 + C94846) * C154002) *
                C153897 +
            ((C83994 + C83995 + C83996) * C153648 +
             (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
              C83602 * C1390 + C152145 * C359 - C152180 * C342 -
              C152145 * C360 + C153858 * C378 + C152148 * C357 -
              C152187 * C341 - C152148 * C358 + C153851 * C377) *
                 C154002) *
                C98524) *
               C563 -
           (((C152193 * C32003 - C83611 * C32002 - C152193 * C32004 +
              C83602 * C32005 + C152145 * C6373 - C152180 * C6365 -
              C152145 * C6374 + C153858 * C6383 + C152148 * C6375 -
              C152187 * C6366 - C152148 * C6376 + C153851 * C6384) *
                 C153648 +
             (C152193 * C30186 - C83611 * C30183 - C152193 * C30187 +
              C83602 * C30189 + C152145 * C6377 - C152180 * C6367 -
              C152145 * C6378 + C153858 * C6385 + C152148 * C6379 -
              C152187 * C6368 - C152148 * C6380 + C153851 * C6386) *
                 C154002) *
                C153897 +
            ((C94851 + C94850 + C94849) * C153648 +
             (C95646 + C95645 + C95644) * C154002) *
                C98524) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[83] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
                       C153851 * C160 + C152145 * C357 - C152180 * C341 -
                       C152145 * C358 + C153858 * C377 + C152193 * C359 -
                       C83611 * C342 - C152193 * C360 + C83602 * C378) *
                          C154002 +
                      (C83685 + C83686 + C83687) * C153648) *
                         C98524 +
                     ((C93829 + C93830 + C93831) * C154002 + C93810 * C153648) *
                         C153897) *
                        C154022 -
                    ((C93811 * C153648 + (C93832 + C93833 + C93834) * C154002) *
                         C153897 +
                     (C93815 * C153648 + (C93831 + C93830 + C93829) * C154002) *
                         C98524) *
                        C153775) *
                       C1279 +
                   ((((C94846 + C94847 + C94848) * C154002 + C94835 * C153648) *
                         C98524 +
                     ((C95644 + C95645 + C95646) * C154002 +
                      (C94849 + C94850 + C94851) * C153648) *
                         C153897) *
                        C153775 -
                    ((C94839 * C153648 + (C94848 + C94847 + C94846) * C154002) *
                         C153897 +
                     ((C83994 + C83995 + C83996) * C153648 +
                      (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
                       C83602 * C1390 + C152145 * C359 - C152180 * C342 -
                       C152145 * C360 + C153858 * C378 + C152148 * C357 -
                       C152187 * C341 - C152148 * C358 + C153851 * C377) *
                          C154002) *
                         C98524) *
                        C154022) *
                       C153747) *
                      C154013 +
                  ((((C93810 * C154002 + C94419 * C153648) * C98524 +
                     (C93816 * C154002 + (C84302 + C84303 + C84304) * C153648) *
                         C153897) *
                        C153775 -
                    ((C84777 * C153648 + C93815 * C154002) * C153897 +
                     ((C83690 + C83689 + C83688) * C153648 +
                      (C83687 + C83686 + C83685) * C154002) *
                         C98524) *
                        C154022) *
                       C1279 +
                   ((((C83996 + C83995 + C83994) * C154002 +
                      (C83993 + C83992 + C83991) * C153648) *
                         C98524 +
                     (C94835 * C154002 + (C85116 + C85117 + C85118) * C153648) *
                         C153897) *
                        C154022 -
                    (((C152193 * C5034 - C83611 * C5031 - C152193 * C5035 +
                       C83602 * C5040 + C152145 * C3515 - C152180 * C3509 -
                       C152145 * C3516 + C153858 * C3521 + C152148 * C1522 -
                       C152187 * C1515 - C152148 * C1523 + C153851 * C1530) *
                          C153648 +
                      (C94851 + C94850 + C94849) * C154002) *
                         C153897 +
                     ((C85118 + C85117 + C85116) * C153648 + C94839 * C154002) *
                         C98524) *
                        C153775) *
                       C153747) *
                      C153682)) /
                (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C153851 * C160 + C152145 * C357 - C152180 * C341 -
              C152145 * C358 + C153858 * C377 + C152193 * C359 - C83611 * C342 -
              C152193 * C360 + C83602 * C378) *
                 C154002 +
             (C83685 + C83686 + C83687) * C153648) *
                C98524 +
            ((C93829 + C93830 + C93831) * C154002 + C93810 * C153648) *
                C153897) *
               C153711 * C1279 -
           ((C94839 * C153648 + (C94848 + C94847 + C94846) * C154002) *
                C153897 +
            ((C83994 + C83995 + C83996) * C153648 +
             (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
              C83602 * C1390 + C152145 * C359 - C152180 * C342 -
              C152145 * C360 + C153858 * C378 + C152148 * C357 -
              C152187 * C341 - C152148 * C358 + C153851 * C377) *
                 C154002) *
                C98524) *
               C153711 * C153747) *
              C1281 +
          ((((C83996 + C83995 + C83994) * C154002 +
             (C83993 + C83992 + C83991) * C153648) *
                C98524 +
            (C94835 * C154002 + (C85116 + C85117 + C85118) * C153648) *
                C153897) *
               C153711 * C153747 -
           ((C84777 * C153648 + C93815 * C154002) * C153897 +
            ((C83690 + C83689 + C83688) * C153648 +
             (C83687 + C83686 + C83685) * C154002) *
                C98524) *
               C153711 * C1279) *
              C1282 +
          (((C83699 * C154002 + (C83693 + C83692 + C83691) * C153648) * C98524 +
            (C94419 * C154002 + (C84784 + C84785 + C84786) * C153648) *
                C153897) *
               C153711 * C1279 -
           (((C152193 * C4389 - C83611 * C4382 - C152193 * C4390 +
              C83602 * C4394 + C152145 * C1951 - C152180 * C1945 -
              C152145 * C1952 + C153858 * C1960 + C152148 * C1117 -
              C152187 * C1108 - C152148 * C1118 + C153851 * C1126) *
                 C153648 +
             (C85118 + C85117 + C85116) * C154002) *
                C153897 +
            ((C84545 + C84544 + C84543) * C153648 + C84536 * C154002) *
                C98524) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C154002 +
            (C83685 + C83686 + C83687) * C153648) *
               C98524 +
           ((C93829 + C93830 + C93831) * C154002 + C93810 * C153648) *
               C153897) *
              C153711 * C1366 -
          ((C94839 * C153648 + (C94848 + C94847 + C94846) * C154002) * C153897 +
           ((C83994 + C83995 + C83996) * C153648 +
            (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
             C83602 * C1390 + C152145 * C359 - C152180 * C342 - C152145 * C360 +
             C153858 * C378 + C152148 * C357 - C152187 * C341 - C152148 * C358 +
             C153851 * C377) *
                C154002) *
               C98524) *
              C153711 * C1367 +
          (((C152148 * C359 - C152187 * C342 - C152148 * C360 + C153851 * C378 +
             C152145 * C1384 - C152180 * C1375 - C152145 * C1385 +
             C153858 * C1390 + C152193 * C3193 - C83611 * C3189 -
             C152193 * C3194 + C83602 * C3201) *
                C154002 +
            (C83997 + C83998 + C83999) * C153648) *
               C98524 +
           ((C96631 + C96632 + C96633) * C154002 +
            (C93474 + C93475 + C93476) * C153648) *
               C153897) *
              C153711 * C1368 -
          (((C152193 * C29108 - C83611 * C29105 - C152193 * C29109 +
             C83602 * C29111 + C152145 * C5774 - C152180 * C5770 -
             C152145 * C5775 + C153858 * C5779 + C152148 * C4385 -
             C152187 * C4380 - C152148 * C4386 + C153851 * C4392) *
                C153648 +
            (C152193 * C29106 - C83611 * C29104 - C152193 * C29107 +
             C83602 * C29110 + C152145 * C5776 - C152180 * C5771 -
             C152145 * C5777 + C153858 * C5780 + C152148 * C4383 -
             C152187 * C4379 - C152148 * C4384 + C153851 * C4391) *
                C154002) *
               C153897 +
           ((C152193 * C4806 - C83611 * C4802 - C152193 * C4807 +
             C83602 * C4811 + C152145 * C3195 - C152180 * C3190 -
             C152145 * C3196 + C153858 * C3202 + C152148 * C1382 -
             C152187 * C1374 - C152148 * C1383 + C153851 * C1389) *
                C153648 +
            (C152193 * C4808 - C83611 * C4803 - C152193 * C4809 +
             C83602 * C4812 + C152145 * C3193 - C152180 * C3189 -
             C152145 * C3194 + C153858 * C3201 + C152148 * C1384 -
             C152187 * C1375 - C152148 * C1385 + C153851 * C1390) *
                C154002) *
               C98524) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[85] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
                       C153851 * C160 + C152145 * C357 - C152180 * C341 -
                       C152145 * C358 + C153858 * C377 + C152193 * C359 -
                       C83611 * C342 - C152193 * C360 + C83602 * C378) *
                          C154002 +
                      (C83685 + C83686 + C83687) * C153648) *
                         C98524 +
                     ((C93829 + C93830 + C93831) * C154002 + C93810 * C153648) *
                         C153897) *
                        C2086 -
                    ((C93811 * C153648 + (C93832 + C93833 + C93834) * C154002) *
                         C153897 +
                     (C93815 * C153648 + (C93831 + C93830 + C93829) * C154002) *
                         C98524) *
                        C153775) *
                       C154021 +
                   ((((C94846 + C94847 + C94848) * C154002 + C94835 * C153648) *
                         C98524 +
                     ((C95644 + C95645 + C95646) * C154002 +
                      (C94849 + C94850 + C94851) * C153648) *
                         C153897) *
                        C153775 -
                    ((C94839 * C153648 + (C94848 + C94847 + C94846) * C154002) *
                         C153897 +
                     ((C83994 + C83995 + C83996) * C153648 +
                      (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
                       C83602 * C1390 + C152145 * C359 - C152180 * C342 -
                       C152145 * C360 + C153858 * C378 + C152148 * C357 -
                       C152187 * C341 - C152148 * C358 + C153851 * C377) *
                          C154002) *
                         C98524) *
                        C2086) *
                       C153747) *
                      C154013 +
                  ((((C93810 * C154002 + C94419 * C153648) * C98524 +
                     (C93816 * C154002 + (C84302 + C84303 + C84304) * C153648) *
                         C153897) *
                        C153775 -
                    ((C84777 * C153648 + C93815 * C154002) * C153897 +
                     ((C83690 + C83689 + C83688) * C153648 +
                      (C83687 + C83686 + C83685) * C154002) *
                         C98524) *
                        C2086) *
                       C154021 +
                   ((((C83996 + C83995 + C83994) * C154002 +
                      (C83993 + C83992 + C83991) * C153648) *
                         C98524 +
                     (C94835 * C154002 + (C85116 + C85117 + C85118) * C153648) *
                         C153897) *
                        C2086 -
                    (((C152193 * C5034 - C83611 * C5031 - C152193 * C5035 +
                       C83602 * C5040 + C152145 * C3515 - C152180 * C3509 -
                       C152145 * C3516 + C153858 * C3521 + C152148 * C1522 -
                       C152187 * C1515 - C152148 * C1523 + C153851 * C1530) *
                          C153648 +
                      (C94851 + C94850 + C94849) * C154002) *
                         C153897 +
                     ((C85118 + C85117 + C85116) * C153648 + C94839 * C154002) *
                         C98524) *
                        C153775) *
                       C153747) *
                      C153682)) /
                (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C153851 * C160 + C152145 * C357 - C152180 * C341 -
              C152145 * C358 + C153858 * C377 + C152193 * C359 - C83611 * C342 -
              C152193 * C360 + C83602 * C378) *
                 C154002 +
             (C83685 + C83686 + C83687) * C153648) *
                C98524 +
            ((C93829 + C93830 + C93831) * C154002 + C93810 * C153648) *
                C153897) *
               C154094 -
           ((C93811 * C153648 + (C93832 + C93833 + C93834) * C154002) *
                C153897 +
            (C93815 * C153648 + (C93831 + C93830 + C93829) * C154002) *
                C98524) *
               C154095 +
           (((C93834 + C93833 + C93832) * C154002 + C93816 * C153648) * C98524 +
            ((C97426 + C97427 + C97428) * C154002 +
             (C93835 + C93836 + C93837) * C153648) *
                C153897) *
               C2602) *
              C154021 +
          ((((C94846 + C94847 + C94848) * C154002 + C94835 * C153648) * C98524 +
            ((C95644 + C95645 + C95646) * C154002 +
             (C94849 + C94850 + C94851) * C153648) *
                C153897) *
               C154095 -
           ((C94839 * C153648 + (C94848 + C94847 + C94846) * C154002) *
                C153897 +
            ((C83994 + C83995 + C83996) * C153648 +
             (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
              C83602 * C1390 + C152145 * C359 - C152180 * C342 -
              C152145 * C360 + C153858 * C378 + C152148 * C357 -
              C152187 * C341 - C152148 * C358 + C153851 * C377) *
                 C154002) *
                C98524) *
               C154094 -
           (((C152193 * C32003 - C83611 * C32002 - C152193 * C32004 +
              C83602 * C32005 + C152145 * C6373 - C152180 * C6365 -
              C152145 * C6374 + C153858 * C6383 + C152148 * C6375 -
              C152187 * C6366 - C152148 * C6376 + C153851 * C6384) *
                 C153648 +
             (C152193 * C30186 - C83611 * C30183 - C152193 * C30187 +
              C83602 * C30189 + C152145 * C6377 - C152180 * C6367 -
              C152145 * C6378 + C153858 * C6385 + C152148 * C6379 -
              C152187 * C6368 - C152148 * C6380 + C153851 * C6386) *
                 C154002) *
                C153897 +
            ((C94851 + C94850 + C94849) * C153648 +
             (C95646 + C95645 + C95644) * C154002) *
                C98524) *
               C2602) *
              C153747) *
         C153676) /
        (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C153851 * C160 + C152145 * C357 - C152180 * C341 -
              C152145 * C358 + C153858 * C377 + C152193 * C359 - C83611 * C342 -
              C152193 * C360 + C83602 * C378) *
                 C154002 +
             (C83685 + C83686 + C83687) * C153648) *
                C98524 +
            ((C93829 + C93830 + C93831) * C154002 + C93810 * C153648) *
                C153897) *
               C2086 -
           ((C93811 * C153648 + (C93832 + C93833 + C93834) * C154002) *
                C153897 +
            (C93815 * C153648 + (C93831 + C93830 + C93829) * C154002) *
                C98524) *
               C153775) *
              C332 +
          ((((C94846 + C94847 + C94848) * C154002 + C94835 * C153648) * C98524 +
            ((C95644 + C95645 + C95646) * C154002 +
             (C94849 + C94850 + C94851) * C153648) *
                C153897) *
               C153775 -
           ((C94839 * C153648 + (C94848 + C94847 + C94846) * C154002) *
                C153897 +
            ((C83994 + C83995 + C83996) * C153648 +
             (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
              C83602 * C1390 + C152145 * C359 - C152180 * C342 -
              C152145 * C360 + C153858 * C378 + C152148 * C357 -
              C152187 * C341 - C152148 * C358 + C153851 * C377) *
                 C154002) *
                C98524) *
               C2086) *
              C333 +
          ((((C152148 * C359 - C152187 * C342 - C152148 * C360 +
              C153851 * C378 + C152145 * C1384 - C152180 * C1375 -
              C152145 * C1385 + C153858 * C1390 + C152193 * C3193 -
              C83611 * C3189 - C152193 * C3194 + C83602 * C3201) *
                 C154002 +
             (C83997 + C83998 + C83999) * C153648) *
                C98524 +
            ((C96631 + C96632 + C96633) * C154002 +
             (C93474 + C93475 + C93476) * C153648) *
                C153897) *
               C2086 -
           (((C152193 * C28694 - C83611 * C28691 - C152193 * C28695 +
              C83602 * C28697 + C152145 * C5036 - C152180 * C5032 -
              C152145 * C5037 + C153858 * C5041 + C152148 * C3513 -
              C152187 * C3508 - C152148 * C3514 + C153851 * C3520) *
                 C153648 +
             (C152193 * C28692 - C83611 * C28690 - C152193 * C28693 +
              C83602 * C28696 + C152145 * C5038 - C152180 * C5033 -
              C152145 * C5039 + C153858 * C5042 + C152148 * C3511 -
              C152187 * C3507 - C152148 * C3512 + C153851 * C3519) *
                 C154002) *
                C153897 +
            ((C93476 + C93475 + C93474) * C153648 +
             (C96633 + C96632 + C96631) * C154002) *
                C98524) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C153851 * C160 + C152145 * C357 - C152180 * C341 -
              C152145 * C358 + C153858 * C377 + C152193 * C359 - C83611 * C342 -
              C152193 * C360 + C83602 * C378) *
                 C154002 +
             (C83685 + C83686 + C83687) * C153648) *
                C98524 +
            ((C93829 + C93830 + C93831) * C154002 + C93810 * C153648) *
                C153897) *
               C2086 -
           ((C93811 * C153648 + (C93832 + C93833 + C93834) * C154002) *
                C153897 +
            (C93815 * C153648 + (C93831 + C93830 + C93829) * C154002) *
                C98524) *
               C153775) *
              C153695 * C1281 +
          (((C93810 * C154002 + C94419 * C153648) * C98524 +
            (C93816 * C154002 + (C84302 + C84303 + C84304) * C153648) *
                C153897) *
               C153775 -
           ((C84777 * C153648 + C93815 * C154002) * C153897 +
            ((C83690 + C83689 + C83688) * C153648 +
             (C83687 + C83686 + C83685) * C154002) *
                C98524) *
               C2086) *
              C153695 * C1282 +
          (((C83699 * C154002 + (C83693 + C83692 + C83691) * C153648) * C98524 +
            (C94419 * C154002 + (C84784 + C84785 + C84786) * C153648) *
                C153897) *
               C2086 -
           (((C152193 * C3517 - C83611 * C3510 - C152193 * C3518 +
              C83602 * C3522 + C152145 * C1520 - C152180 * C1514 -
              C152145 * C1521 + C153858 * C1529 + C152148 * C594 -
              C152187 * C574 - C152148 * C595 + C153851 * C610) *
                 C153648 +
             (C84304 + C84303 + C84302) * C154002) *
                C153897 +
            ((C84786 + C84785 + C84784) * C153648 + C84777 * C154002) *
                C98524) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C154002 +
            (C83685 + C83686 + C83687) * C153648) *
               C98524 +
           ((C93829 + C93830 + C93831) * C154002 + C93810 * C153648) *
               C153897) *
              C2292 -
          ((C93811 * C153648 + (C93832 + C93833 + C93834) * C154002) * C153897 +
           (C93815 * C153648 + (C93831 + C93830 + C93829) * C154002) * C98524) *
              C2293 +
          (((C93834 + C93833 + C93832) * C154002 + C93816 * C153648) * C98524 +
           ((C97426 + C97427 + C97428) * C154002 +
            (C93835 + C93836 + C93837) * C153648) *
               C153897) *
              C2294 -
          (((C152193 * C31182 - C83611 * C31179 - C152193 * C31183 +
             C83602 * C31185 + C152145 * C9204 - C152180 * C9200 -
             C152145 * C9205 + C153858 * C9209 + C152148 * C7746 -
             C152187 * C7741 - C152148 * C7747 + C153851 * C7753) *
                C153648 +
            (C152193 * C31180 - C83611 * C31178 - C152193 * C31181 +
             C83602 * C31184 + C152145 * C9206 - C152180 * C9201 -
             C152145 * C9207 + C153858 * C9210 + C152148 * C7744 -
             C152187 * C7740 - C152148 * C7745 + C153851 * C7752) *
                C154002) *
               C153897 +
           ((C93837 + C93836 + C93835) * C153648 +
            (C97428 + C97427 + C97426) * C154002) *
               C98524) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C153851 * C160 + C152145 * C357 - C152180 * C341 -
              C152145 * C358 + C153858 * C377 + C152193 * C359 - C83611 * C342 -
              C152193 * C360 + C83602 * C378) *
                 C154002 +
             (C83685 + C83686 + C83687) * C153648) *
                C98524 +
            ((C93829 + C93830 + C93831) * C154002 + C93810 * C153648) *
                C153897) *
               C154094 -
           ((C93811 * C153648 + (C93832 + C93833 + C93834) * C154002) *
                C153897 +
            (C93815 * C153648 + (C93831 + C93830 + C93829) * C154002) *
                C98524) *
               C154095 +
           (((C93834 + C93833 + C93832) * C154002 + C93816 * C153648) * C98524 +
            ((C97426 + C97427 + C97428) * C154002 +
             (C93835 + C93836 + C93837) * C153648) *
                C153897) *
               C2602) *
              C153695 * C154013 +
          (((C93810 * C154002 + C94419 * C153648) * C98524 +
            (C93816 * C154002 + (C84302 + C84303 + C84304) * C153648) *
                C153897) *
               C154095 -
           ((C84777 * C153648 + C93815 * C154002) * C153897 +
            ((C83690 + C83689 + C83688) * C153648 +
             (C83687 + C83686 + C83685) * C154002) *
                C98524) *
               C154094 -
           (((C152193 * C6369 - C83611 * C6363 - C152193 * C6370 +
              C83602 * C6381 + C152145 * C6371 - C152180 * C6364 -
              C152145 * C6372 + C153858 * C6382 + C152148 * C2305 -
              C152187 * C2298 - C152148 * C2306 + C153851 * C2313) *
                 C153648 +
             (C93837 + C93836 + C93835) * C154002) *
                C153897 +
            ((C84304 + C84303 + C84302) * C153648 + C93811 * C154002) *
                C98524) *
               C2602) *
              C153695 * C153682)) /
        (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C153851 * C160 + C152145 * C357 - C152180 * C341 -
              C152145 * C358 + C153858 * C377 + C152193 * C359 - C83611 * C342 -
              C152193 * C360 + C83602 * C378) *
                 C154002 +
             (C83685 + C83686 + C83687) * C153648) *
                C98524 +
            ((C93829 + C93830 + C93831) * C154002 + C93810 * C153648) *
                C153897) *
               C2086 -
           ((C93811 * C153648 + (C93832 + C93833 + C93834) * C154002) *
                C153897 +
            (C93815 * C153648 + (C93831 + C93830 + C93829) * C154002) *
                C98524) *
               C153775) *
              C153695 * C1281 +
          (((C93810 * C154002 + C94419 * C153648) * C98524 +
            (C93816 * C154002 + (C84302 + C84303 + C84304) * C153648) *
                C153897) *
               C153775 -
           ((C84777 * C153648 + C93815 * C154002) * C153897 +
            ((C83690 + C83689 + C83688) * C153648 +
             (C83687 + C83686 + C83685) * C154002) *
                C98524) *
               C2086) *
              C153695 * C1282 +
          (((C83699 * C154002 + (C83693 + C83692 + C83691) * C153648) * C98524 +
            (C94419 * C154002 + (C84784 + C84785 + C84786) * C153648) *
                C153897) *
               C2086 -
           (((C152193 * C3517 - C83611 * C3510 - C152193 * C3518 +
              C83602 * C3522 + C152145 * C1520 - C152180 * C1514 -
              C152145 * C1521 + C153858 * C1529 + C152148 * C594 -
              C152187 * C574 - C152148 * C595 + C153851 * C610) *
                 C153648 +
             (C84304 + C84303 + C84302) * C154002) *
                C153897 +
            ((C84786 + C84785 + C84784) * C153648 + C84777 * C154002) *
                C98524) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C153851 * C160 + C152145 * C357 - C152180 * C341 -
              C152145 * C358 + C153858 * C377 + C152193 * C359 - C83611 * C342 -
              C152193 * C360 + C83602 * C378) *
                 C154002 +
             (C83685 + C83686 + C83687) * C153648) *
                C98524 +
            ((C93829 + C93830 + C93831) * C154002 + C93810 * C153648) *
                C153897) *
               C2086 -
           ((C93811 * C153648 + (C93832 + C93833 + C93834) * C154002) *
                C153897 +
            (C93815 * C153648 + (C93831 + C93830 + C93829) * C154002) *
                C98524) *
               C153775) *
              C332 +
          ((((C94846 + C94847 + C94848) * C154002 + C94835 * C153648) * C98524 +
            ((C95644 + C95645 + C95646) * C154002 +
             (C94849 + C94850 + C94851) * C153648) *
                C153897) *
               C153775 -
           ((C94839 * C153648 + (C94848 + C94847 + C94846) * C154002) *
                C153897 +
            ((C83994 + C83995 + C83996) * C153648 +
             (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
              C83602 * C1390 + C152145 * C359 - C152180 * C342 -
              C152145 * C360 + C153858 * C378 + C152148 * C357 -
              C152187 * C341 - C152148 * C358 + C153851 * C377) *
                 C154002) *
                C98524) *
               C2086) *
              C333 +
          ((((C152148 * C359 - C152187 * C342 - C152148 * C360 +
              C153851 * C378 + C152145 * C1384 - C152180 * C1375 -
              C152145 * C1385 + C153858 * C1390 + C152193 * C3193 -
              C83611 * C3189 - C152193 * C3194 + C83602 * C3201) *
                 C154002 +
             (C83997 + C83998 + C83999) * C153648) *
                C98524 +
            ((C96631 + C96632 + C96633) * C154002 +
             (C93474 + C93475 + C93476) * C153648) *
                C153897) *
               C2086 -
           (((C152193 * C28694 - C83611 * C28691 - C152193 * C28695 +
              C83602 * C28697 + C152145 * C5036 - C152180 * C5032 -
              C152145 * C5037 + C153858 * C5041 + C152148 * C3513 -
              C152187 * C3508 - C152148 * C3514 + C153851 * C3520) *
                 C153648 +
             (C152193 * C28692 - C83611 * C28690 - C152193 * C28693 +
              C83602 * C28696 + C152145 * C5038 - C152180 * C5033 -
              C152145 * C5039 + C153858 * C5042 + C152148 * C3511 -
              C152187 * C3507 - C152148 * C3512 + C153851 * C3519) *
                 C154002) *
                C153897 +
            ((C93476 + C93475 + C93474) * C153648 +
             (C96633 + C96632 + C96631) * C154002) *
                C98524) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C153638 * C153893 +
            (C93829 + C93830 + C93831) * C153638 * C153900 +
            C148627 * C116097) *
               C153711 * C154021 -
           ((C95646 + C95645 + C95644) * C153638 * C116097 +
            (C94848 + C94847 + C94846) * C153638 * C153900 +
            (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
             C83602 * C1390 + C152145 * C359 - C152180 * C342 - C152145 * C360 +
             C153858 * C378 + C152148 * C357 - C152187 * C341 - C152148 * C358 +
             C153851 * C377) *
                C153638 * C153893) *
               C153711 * C153747) *
              C154090 +
          (((C83996 + C83995 + C83994) * C153638 * C153893 +
            C94835 * C153638 * C153900 +
            (C94849 + C94850 + C94851) * C153638 * C116097) *
               C153711 * C153747 -
           (C148625 * C116097 + C93815 * C153638 * C153900 +
            (C83687 + C83686 + C83685) * C153638 * C153893) *
               C153711 * C154021) *
              C154091 +
          ((C83699 * C153638 * C153893 + C94419 * C153638 * C153900 +
            (C84302 + C84303 + C84304) * C153638 * C116097) *
               C153711 * C154021 -
           ((C152193 * C5034 - C83611 * C5031 - C152193 * C5035 +
             C83602 * C5040 + C152145 * C3515 - C152180 * C3509 -
             C152145 * C3516 + C153858 * C3521 + C152148 * C1522 -
             C152187 * C1515 - C152148 * C1523 + C153851 * C1530) *
                C153638 * C116097 +
            (C85118 + C85117 + C85116) * C153638 * C153900 +
            C84536 * C153638 * C153893) *
               C153711 * C153747) *
              C796)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
                      C153851 * C160 + C152145 * C357 - C152180 * C341 -
                      C152145 * C358 + C153858 * C377 + C152193 * C359 -
                      C83611 * C342 - C152193 * C360 + C83602 * C378) *
                         C153638 * C153893 +
                     (C93829 + C93830 + C93831) * C153638 * C153900 +
                     C148627 * C116097) *
                        C154022 -
                    ((C97428 + C97427 + C97426) * C153638 * C116097 +
                     (C93832 + C93833 + C93834) * C153638 * C153900 +
                     (C93831 + C93830 + C93829) * C153638 * C153893) *
                        C153775) *
                       C154021 +
                   (((C94846 + C94847 + C94848) * C153638 * C153893 +
                     (C95644 + C95645 + C95646) * C153638 * C153900 +
                     (C152148 * C6379 - C152187 * C6368 - C152148 * C6380 +
                      C153851 * C6386 + C152145 * C6377 - C152180 * C6367 -
                      C152145 * C6378 + C153858 * C6385 + C152193 * C30186 -
                      C83611 * C30183 - C152193 * C30187 + C83602 * C30189) *
                         C153638 * C116097) *
                        C153775 -
                    ((C95646 + C95645 + C95644) * C153638 * C116097 +
                     (C94848 + C94847 + C94846) * C153638 * C153900 +
                     (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
                      C83602 * C1390 + C152145 * C359 - C152180 * C342 -
                      C152145 * C360 + C153858 * C378 + C152148 * C357 -
                      C152187 * C341 - C152148 * C358 + C153851 * C377) *
                         C153638 * C153893) *
                        C154022) *
                       C153747) *
                      C335 +
                  (((C93810 * C153638 * C153893 + C93816 * C153638 * C153900 +
                     (C93835 + C93836 + C93837) * C153638 * C116097) *
                        C153775 -
                    (C148625 * C116097 + C93815 * C153638 * C153900 +
                     (C83687 + C83686 + C83685) * C153638 * C153893) *
                        C154022) *
                       C154021 +
                   (((C83996 + C83995 + C83994) * C153638 * C153893 +
                     C94835 * C153638 * C153900 +
                     (C94849 + C94850 + C94851) * C153638 * C116097) *
                        C154022 -
                    ((C152193 * C32003 - C83611 * C32002 - C152193 * C32004 +
                      C83602 * C32005 + C152145 * C6373 - C152180 * C6365 -
                      C152145 * C6374 + C153858 * C6383 + C152148 * C6375 -
                      C152187 * C6366 - C152148 * C6376 + C153851 * C6384) *
                         C153638 * C116097 +
                     (C94851 + C94850 + C94849) * C153638 * C153900 +
                     C94839 * C153638 * C153893) *
                        C153775) *
                       C153747) *
                      C153682)) /
                (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C153638 * C153893 +
            (C93829 + C93830 + C93831) * C153638 * C153900 +
            (C93834 + C93833 + C93832) * C153638 * C116097) *
               C153711 * C332 -
           ((C95646 + C95645 + C95644) * C153638 * C116097 +
            (C94848 + C94847 + C94846) * C153638 * C153900 +
            (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
             C83602 * C1390 + C152145 * C359 - C152180 * C342 - C152145 * C360 +
             C153858 * C378 + C152148 * C357 - C152187 * C341 - C152148 * C358 +
             C153851 * C377) *
                C153638 * C153893) *
               C153711 * C333 +
           ((C152148 * C359 - C152187 * C342 - C152148 * C360 + C153851 * C378 +
             C152145 * C1384 - C152180 * C1375 - C152145 * C1385 +
             C153858 * C1390 + C152193 * C3193 - C83611 * C3189 -
             C152193 * C3194 + C83602 * C3201) *
                C153638 * C153893 +
            (C96631 + C96632 + C96633) * C153638 * C153900 +
            (C152148 * C3511 - C152187 * C3507 - C152148 * C3512 +
             C153851 * C3519 + C152145 * C5038 - C152180 * C5033 -
             C152145 * C5039 + C153858 * C5042 + C152193 * C28692 -
             C83611 * C28690 - C152193 * C28693 + C83602 * C28696) *
                C153638 * C116097) *
               C153711 * C334) *
              C335 +
          (((C83996 + C83995 + C83994) * C153638 * C153893 +
            C94835 * C153638 * C153900 +
            (C94849 + C94850 + C94851) * C153638 * C116097) *
               C153711 * C333 -
           (C93811 * C153638 * C116097 + C93815 * C153638 * C153900 +
            (C83687 + C83686 + C83685) * C153638 * C153893) *
               C153711 * C332 -
           ((C152193 * C28694 - C83611 * C28691 - C152193 * C28695 +
             C83602 * C28697 + C152145 * C5036 - C152180 * C5032 -
             C152145 * C5037 + C153858 * C5041 + C152148 * C3513 -
             C152187 * C3508 - C152148 * C3514 + C153851 * C3520) *
                C153638 * C116097 +
            (C93476 + C93475 + C93474) * C153638 * C153900 +
            (C83999 + C83998 + C83997) * C153638 * C153893) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
            C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
            C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
               C153638 * C153893 +
           (C93829 + C93830 + C93831) * C153638 * C153900 +
           (C93834 + C93833 + C93832) * C153638 * C116097) *
              C153711 * C153695 * C130 -
          (C93811 * C153638 * C116097 + C93815 * C153638 * C153900 +
           (C83687 + C83686 + C83685) * C153638 * C153893) *
              C153711 * C153695 * C131 +
          (C83699 * C153638 * C153893 + C94419 * C153638 * C153900 +
           (C84302 + C84303 + C84304) * C153638 * C116097) *
              C153711 * C153695 * C132 -
          ((C152193 * C3517 - C83611 * C3510 - C152193 * C3518 +
            C83602 * C3522 + C152145 * C1520 - C152180 * C1514 -
            C152145 * C1521 + C153858 * C1529 + C152148 * C594 -
            C152187 * C574 - C152148 * C595 + C153851 * C610) *
               C153638 * C116097 +
           (C84786 + C84785 + C84784) * C153638 * C153900 +
           C83700 * C153638 * C153893) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C153638 * C153893 +
            (C93829 + C93830 + C93831) * C153638 * C153900 +
            C148627 * C116097) *
               C563 -
           ((C97428 + C97427 + C97426) * C153638 * C116097 +
            (C93832 + C93833 + C93834) * C153638 * C153900 +
            (C93831 + C93830 + C93829) * C153638 * C153893) *
               C564 +
           (C148627 * C153893 + (C97426 + C97427 + C97428) * C153638 * C153900 +
            (C152148 * C7744 - C152187 * C7740 - C152148 * C7745 +
             C153851 * C7752 + C152145 * C9206 - C152180 * C9201 -
             C152145 * C9207 + C153858 * C9210 + C152193 * C31180 -
             C83611 * C31178 - C152193 * C31181 + C83602 * C31184) *
                C153638 * C116097) *
               C565) *
              C153695 * C335 +
          ((C93810 * C153638 * C153893 + C93816 * C153638 * C153900 +
            (C93835 + C93836 + C93837) * C153638 * C116097) *
               C564 -
           (C148625 * C116097 + C93815 * C153638 * C153900 +
            (C83687 + C83686 + C83685) * C153638 * C153893) *
               C563 -
           ((C152193 * C31182 - C83611 * C31179 - C152193 * C31183 +
             C83602 * C31185 + C152145 * C9204 - C152180 * C9200 -
             C152145 * C9205 + C153858 * C9209 + C152148 * C7746 -
             C152187 * C7741 - C152148 * C7747 + C153851 * C7753) *
                C153638 * C116097 +
            (C93837 + C93836 + C93835) * C153638 * C153900 +
            C148625 * C153893) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C153638 * C153893 +
            (C93829 + C93830 + C93831) * C153638 * C153900 +
            C148627 * C116097) *
               C154022 -
           ((C97428 + C97427 + C97426) * C153638 * C116097 +
            (C93832 + C93833 + C93834) * C153638 * C153900 +
            (C93831 + C93830 + C93829) * C153638 * C153893) *
               C153775) *
              C153695 * C154090 +
          ((C93810 * C153638 * C153893 + C93816 * C153638 * C153900 +
            (C93835 + C93836 + C93837) * C153638 * C116097) *
               C153775 -
           (C148625 * C116097 + C93815 * C153638 * C153900 +
            (C83687 + C83686 + C83685) * C153638 * C153893) *
               C154022) *
              C153695 * C154091 +
          ((C83699 * C153638 * C153893 + C94419 * C153638 * C153900 +
            (C84302 + C84303 + C84304) * C153638 * C116097) *
               C154022 -
           ((C152193 * C6369 - C83611 * C6363 - C152193 * C6370 +
             C83602 * C6381 + C152145 * C6371 - C152180 * C6364 -
             C152145 * C6372 + C153858 * C6382 + C152148 * C2305 -
             C152187 * C2298 - C152148 * C2306 + C153851 * C2313) *
                C153638 * C116097 +
            (C84304 + C84303 + C84302) * C153638 * C153900 +
            C84777 * C153638 * C153893) *
               C153775) *
              C153695 * C796)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
            C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
            C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
               C153638 * C153893 +
           (C93829 + C93830 + C93831) * C153638 * C153900 +
           (C93834 + C93833 + C93832) * C153638 * C116097) *
              C153711 * C153695 * C130 -
          (C93811 * C153638 * C116097 + C93815 * C153638 * C153900 +
           (C83687 + C83686 + C83685) * C153638 * C153893) *
              C153711 * C153695 * C131 +
          (C83699 * C153638 * C153893 + C94419 * C153638 * C153900 +
           (C84302 + C84303 + C84304) * C153638 * C116097) *
              C153711 * C153695 * C132 -
          ((C152193 * C3517 - C83611 * C3510 - C152193 * C3518 +
            C83602 * C3522 + C152145 * C1520 - C152180 * C1514 -
            C152145 * C1521 + C153858 * C1529 + C152148 * C594 -
            C152187 * C574 - C152148 * C595 + C153851 * C610) *
               C153638 * C116097 +
           (C84786 + C84785 + C84784) * C153638 * C153900 +
           C83700 * C153638 * C153893) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C153638 * C153893 +
            (C93829 + C93830 + C93831) * C153638 * C153900 +
            (C93834 + C93833 + C93832) * C153638 * C116097) *
               C153711 * C332 -
           ((C95646 + C95645 + C95644) * C153638 * C116097 +
            (C94848 + C94847 + C94846) * C153638 * C153900 +
            (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
             C83602 * C1390 + C152145 * C359 - C152180 * C342 - C152145 * C360 +
             C153858 * C378 + C152148 * C357 - C152187 * C341 - C152148 * C358 +
             C153851 * C377) *
                C153638 * C153893) *
               C153711 * C333 +
           ((C152148 * C359 - C152187 * C342 - C152148 * C360 + C153851 * C378 +
             C152145 * C1384 - C152180 * C1375 - C152145 * C1385 +
             C153858 * C1390 + C152193 * C3193 - C83611 * C3189 -
             C152193 * C3194 + C83602 * C3201) *
                C153638 * C153893 +
            (C96631 + C96632 + C96633) * C153638 * C153900 +
            (C152148 * C3511 - C152187 * C3507 - C152148 * C3512 +
             C153851 * C3519 + C152145 * C5038 - C152180 * C5033 -
             C152145 * C5039 + C153858 * C5042 + C152193 * C28692 -
             C83611 * C28690 - C152193 * C28693 + C83602 * C28696) *
                C153638 * C116097) *
               C153711 * C334) *
              C335 +
          (((C83996 + C83995 + C83994) * C153638 * C153893 +
            C94835 * C153638 * C153900 +
            (C94849 + C94850 + C94851) * C153638 * C116097) *
               C153711 * C333 -
           (C93811 * C153638 * C116097 + C93815 * C153638 * C153900 +
            (C83687 + C83686 + C83685) * C153638 * C153893) *
               C153711 * C332 -
           ((C152193 * C28694 - C83611 * C28691 - C152193 * C28695 +
             C83602 * C28697 + C152145 * C5036 - C152180 * C5032 -
             C152145 * C5037 + C153858 * C5041 + C152148 * C3513 -
             C152187 * C3508 - C152148 * C3514 + C153851 * C3520) *
                C153638 * C116097 +
            (C93476 + C93475 + C93474) * C153638 * C153900 +
            (C83999 + C83998 + C83997) * C153638 * C153893) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C153638 * C153893 +
            (C93829 + C93830 + C93831) * C153638 * C153900 +
            C148627 * C116097) *
               C153711 * C154092 -
           (C149956 * C116097 + (C94848 + C94847 + C94846) * C153638 * C153900 +
            (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
             C83602 * C1390 + C152145 * C359 - C152180 * C342 - C152145 * C360 +
             C153858 * C378 + C152148 * C357 - C152187 * C341 - C152148 * C358 +
             C153851 * C377) *
                C153638 * C153893) *
               C153711 * C154093 +
           ((C152148 * C359 - C152187 * C342 - C152148 * C360 + C153851 * C378 +
             C152145 * C1384 - C152180 * C1375 - C152145 * C1385 +
             C153858 * C1390 + C152193 * C3193 - C83611 * C3189 -
             C152193 * C3194 + C83602 * C3201) *
                C153638 * C153893 +
            (C96631 + C96632 + C96633) * C153638 * C153900 +
            (C152148 * C3511 - C152187 * C3507 - C152148 * C3512 +
             C153851 * C3519 + C152145 * C5038 - C152180 * C5033 -
             C152145 * C5039 + C153858 * C5042 + C152193 * C28692 -
             C83611 * C28690 - C152193 * C28693 + C83602 * C28696) *
                C153638 * C116097) *
               C153711 * C1657) *
              C154013 +
          (((C83996 + C83995 + C83994) * C153638 * C153893 +
            C94835 * C153638 * C153900 +
            (C94849 + C94850 + C94851) * C153638 * C116097) *
               C153711 * C154093 -
           (C148625 * C116097 + C93815 * C153638 * C153900 +
            (C83687 + C83686 + C83685) * C153638 * C153893) *
               C153711 * C154092 -
           ((C152193 * C28694 - C83611 * C28691 - C152193 * C28695 +
             C83602 * C28697 + C152145 * C5036 - C152180 * C5032 -
             C152145 * C5037 + C153858 * C5041 + C152148 * C3513 -
             C152187 * C3508 - C152148 * C3514 + C153851 * C3520) *
                C153638 * C116097 +
            (C93476 + C93475 + C93474) * C153638 * C153900 +
            (C83999 + C83998 + C83997) * C153638 * C153893) *
               C153711 * C1657) *
              C153682)) /
        (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C153638 * C153893 +
            (C93829 + C93830 + C93831) * C153638 * C153900 +
            C148627 * C116097) *
               C154022 -
           ((C97428 + C97427 + C97426) * C153638 * C116097 +
            (C93832 + C93833 + C93834) * C153638 * C153900 +
            (C93831 + C93830 + C93829) * C153638 * C153893) *
               C153775) *
              C154092 +
          (((C94846 + C94847 + C94848) * C153638 * C153893 +
            (C95644 + C95645 + C95646) * C153638 * C153900 +
            (C149957 + C149958 + C149959) * C153638 * C116097) *
               C153775 -
           (C149956 * C116097 + (C94848 + C94847 + C94846) * C153638 * C153900 +
            (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
             C83602 * C1390 + C152145 * C359 - C152180 * C342 - C152145 * C360 +
             C153858 * C378 + C152148 * C357 - C152187 * C341 - C152148 * C358 +
             C153851 * C377) *
                C153638 * C153893) *
               C154022) *
              C154093 +
          (((C152148 * C359 - C152187 * C342 - C152148 * C360 + C153851 * C378 +
             C152145 * C1384 - C152180 * C1375 - C152145 * C1385 +
             C153858 * C1390 + C152193 * C3193 - C83611 * C3189 -
             C152193 * C3194 + C83602 * C3201) *
                C153638 * C153893 +
            (C96631 + C96632 + C96633) * C153638 * C153900 +
            (C150704 + C150705 + C150706) * C153638 * C116097) *
               C154022 -
           ((C152193 * C30184 - C83611 * C30182 - C152193 * C30185 +
             C83602 * C30188 + C152145 * C30186 - C152180 * C30183 -
             C152145 * C30187 + C153858 * C30189 + C152148 * C6377 -
             C152187 * C6367 - C152148 * C6378 + C153851 * C6385) *
                C153638 * C116097 +
            (C150706 + C150705 + C150704) * C153638 * C153900 +
            (C96633 + C96632 + C96631) * C153638 * C153893) *
               C153775) *
              C1657) *
         C153676) /
        (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
            C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
            C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
               C153638 * C153893 +
           (C93829 + C93830 + C93831) * C153638 * C153900 + C148627 * C116097) *
              C153711 * C1366 -
          ((C95646 + C95645 + C95644) * C153638 * C116097 +
           (C94848 + C94847 + C94846) * C153638 * C153900 +
           (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
            C83602 * C1390 + C152145 * C359 - C152180 * C342 - C152145 * C360 +
            C153858 * C378 + C152148 * C357 - C152187 * C341 - C152148 * C358 +
            C153851 * C377) *
               C153638 * C153893) *
              C153711 * C1367 +
          ((C152148 * C359 - C152187 * C342 - C152148 * C360 + C153851 * C378 +
            C152145 * C1384 - C152180 * C1375 - C152145 * C1385 +
            C153858 * C1390 + C152193 * C3193 - C83611 * C3189 -
            C152193 * C3194 + C83602 * C3201) *
               C153638 * C153893 +
           (C96631 + C96632 + C96633) * C153638 * C153900 +
           (C152148 * C3511 - C152187 * C3507 - C152148 * C3512 +
            C153851 * C3519 + C152145 * C5038 - C152180 * C5033 -
            C152145 * C5039 + C153858 * C5042 + C152193 * C28692 -
            C83611 * C28690 - C152193 * C28693 + C83602 * C28696) *
               C153638 * C116097) *
              C153711 * C1368 -
          ((C152193 * C29443 - C83611 * C29442 - C152193 * C29444 +
            C83602 * C29445 + C152145 * C28692 - C152180 * C28690 -
            C152145 * C28693 + C153858 * C28696 + C152148 * C5038 -
            C152187 * C5033 - C152148 * C5039 + C153851 * C5042) *
               C153638 * C116097 +
           (C152193 * C29106 - C83611 * C29104 - C152193 * C29107 +
            C83602 * C29110 + C152145 * C5776 - C152180 * C5771 -
            C152145 * C5777 + C153858 * C5780 + C152148 * C4383 -
            C152187 * C4379 - C152148 * C4384 + C153851 * C4391) *
               C153638 * C153900 +
           (C152193 * C4808 - C83611 * C4803 - C152193 * C4809 +
            C83602 * C4812 + C152145 * C3193 - C152180 * C3189 -
            C152145 * C3194 + C153858 * C3201 + C152148 * C1384 -
            C152187 * C1375 - C152148 * C1385 + C153851 * C1390) *
               C153638 * C153893) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C153638 * C153893 +
            (C93829 + C93830 + C93831) * C153638 * C153900 +
            C148627 * C116097) *
               C153711 * C1279 -
           ((C95646 + C95645 + C95644) * C153638 * C116097 +
            (C94848 + C94847 + C94846) * C153638 * C153900 +
            (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
             C83602 * C1390 + C152145 * C359 - C152180 * C342 - C152145 * C360 +
             C153858 * C378 + C152148 * C357 - C152187 * C341 - C152148 * C358 +
             C153851 * C377) *
                C153638 * C153893) *
               C153711 * C153747) *
              C1281 +
          (((C83996 + C83995 + C83994) * C153638 * C153893 +
            C94835 * C153638 * C153900 +
            (C94849 + C94850 + C94851) * C153638 * C116097) *
               C153711 * C153747 -
           (C148625 * C116097 + C93815 * C153638 * C153900 +
            (C83687 + C83686 + C83685) * C153638 * C153893) *
               C153711 * C1279) *
              C1282 +
          ((C83699 * C153638 * C153893 + C94419 * C153638 * C153900 +
            (C84302 + C84303 + C84304) * C153638 * C116097) *
               C153711 * C1279 -
           ((C152193 * C5034 - C83611 * C5031 - C152193 * C5035 +
             C83602 * C5040 + C152145 * C3515 - C152180 * C3509 -
             C152145 * C3516 + C153858 * C3521 + C152148 * C1522 -
             C152187 * C1515 - C152148 * C1523 + C153851 * C1530) *
                C153638 * C116097 +
            (C85118 + C85117 + C85116) * C153638 * C153900 +
            C84536 * C153638 * C153893) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C153638 * C153893 +
            (C93829 + C93830 + C93831) * C153638 * C153900 +
            C148627 * C116097) *
               C563 -
           ((C97428 + C97427 + C97426) * C153638 * C116097 +
            (C93832 + C93833 + C93834) * C153638 * C153900 +
            (C93831 + C93830 + C93829) * C153638 * C153893) *
               C564 +
           (C148627 * C153893 + (C97426 + C97427 + C97428) * C153638 * C153900 +
            (C152148 * C7744 - C152187 * C7740 - C152148 * C7745 +
             C153851 * C7752 + C152145 * C9206 - C152180 * C9201 -
             C152145 * C9207 + C153858 * C9210 + C152193 * C31180 -
             C83611 * C31178 - C152193 * C31181 + C83602 * C31184) *
                C153638 * C116097) *
               C565) *
              C1279 +
          (((C94846 + C94847 + C94848) * C153638 * C153893 +
            (C95644 + C95645 + C95646) * C153638 * C153900 +
            (C149957 + C149958 + C149959) * C153638 * C116097) *
               C564 -
           (C149956 * C116097 + (C94848 + C94847 + C94846) * C153638 * C153900 +
            (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
             C83602 * C1390 + C152145 * C359 - C152180 * C342 - C152145 * C360 +
             C153858 * C378 + C152148 * C357 - C152187 * C341 - C152148 * C358 +
             C153851 * C377) *
                C153638 * C153893) *
               C563 -
           ((C152193 * C32652 - C83611 * C32651 - C152193 * C32653 +
             C83602 * C32654 + C152145 * C31180 - C152180 * C31178 -
             C152145 * C31181 + C153858 * C31184 + C152148 * C9206 -
             C152187 * C9201 - C152148 * C9207 + C153851 * C9210) *
                C153638 * C116097 +
            (C149959 + C149958 + C149957) * C153638 * C153900 +
            C149956 * C153893) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[98] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
                      C153851 * C160 + C152145 * C357 - C152180 * C341 -
                      C152145 * C358 + C153858 * C377 + C152193 * C359 -
                      C83611 * C342 - C152193 * C360 + C83602 * C378) *
                         C153638 * C153893 +
                     (C93829 + C93830 + C93831) * C153638 * C153900 +
                     C148627 * C116097) *
                        C154022 -
                    ((C97428 + C97427 + C97426) * C153638 * C116097 +
                     (C93832 + C93833 + C93834) * C153638 * C153900 +
                     (C93831 + C93830 + C93829) * C153638 * C153893) *
                        C153775) *
                       C1279 +
                   (((C94846 + C94847 + C94848) * C153638 * C153893 +
                     (C95644 + C95645 + C95646) * C153638 * C153900 +
                     (C149957 + C149958 + C149959) * C153638 * C116097) *
                        C153775 -
                    (C149956 * C116097 +
                     (C94848 + C94847 + C94846) * C153638 * C153900 +
                     (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
                      C83602 * C1390 + C152145 * C359 - C152180 * C342 -
                      C152145 * C360 + C153858 * C378 + C152148 * C357 -
                      C152187 * C341 - C152148 * C358 + C153851 * C377) *
                         C153638 * C153893) *
                        C154022) *
                       C153747) *
                      C154013 +
                  (((C93810 * C153638 * C153893 + C93816 * C153638 * C153900 +
                     (C93835 + C93836 + C93837) * C153638 * C116097) *
                        C153775 -
                    (C148625 * C116097 + C93815 * C153638 * C153900 +
                     (C83687 + C83686 + C83685) * C153638 * C153893) *
                        C154022) *
                       C1279 +
                   (((C83996 + C83995 + C83994) * C153638 * C153893 +
                     C94835 * C153638 * C153900 +
                     (C94849 + C94850 + C94851) * C153638 * C116097) *
                        C154022 -
                    ((C152193 * C32003 - C83611 * C32002 - C152193 * C32004 +
                      C83602 * C32005 + C152145 * C6373 - C152180 * C6365 -
                      C152145 * C6374 + C153858 * C6383 + C152148 * C6375 -
                      C152187 * C6366 - C152148 * C6376 + C153851 * C6384) *
                         C153638 * C116097 +
                     (C94851 + C94850 + C94849) * C153638 * C153900 +
                     C94839 * C153638 * C153893) *
                        C153775) *
                       C153747) *
                      C153682)) /
                (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C153638 * C153893 +
            (C93829 + C93830 + C93831) * C153638 * C153900 +
            C148627 * C116097) *
               C153711 * C1279 -
           ((C95646 + C95645 + C95644) * C153638 * C116097 +
            (C94848 + C94847 + C94846) * C153638 * C153900 +
            (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
             C83602 * C1390 + C152145 * C359 - C152180 * C342 - C152145 * C360 +
             C153858 * C378 + C152148 * C357 - C152187 * C341 - C152148 * C358 +
             C153851 * C377) *
                C153638 * C153893) *
               C153711 * C153747) *
              C1281 +
          (((C83996 + C83995 + C83994) * C153638 * C153893 +
            C94835 * C153638 * C153900 +
            (C94849 + C94850 + C94851) * C153638 * C116097) *
               C153711 * C153747 -
           (C148625 * C116097 + C93815 * C153638 * C153900 +
            (C83687 + C83686 + C83685) * C153638 * C153893) *
               C153711 * C1279) *
              C1282 +
          ((C83699 * C153638 * C153893 + C94419 * C153638 * C153900 +
            (C84302 + C84303 + C84304) * C153638 * C116097) *
               C153711 * C1279 -
           ((C152193 * C5034 - C83611 * C5031 - C152193 * C5035 +
             C83602 * C5040 + C152145 * C3515 - C152180 * C3509 -
             C152145 * C3516 + C153858 * C3521 + C152148 * C1522 -
             C152187 * C1515 - C152148 * C1523 + C153851 * C1530) *
                C153638 * C116097 +
            (C85118 + C85117 + C85116) * C153638 * C153900 +
            C84536 * C153638 * C153893) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
            C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
            C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
               C153638 * C153893 +
           (C93829 + C93830 + C93831) * C153638 * C153900 + C148627 * C116097) *
              C153711 * C1366 -
          ((C95646 + C95645 + C95644) * C153638 * C116097 +
           (C94848 + C94847 + C94846) * C153638 * C153900 +
           (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
            C83602 * C1390 + C152145 * C359 - C152180 * C342 - C152145 * C360 +
            C153858 * C378 + C152148 * C357 - C152187 * C341 - C152148 * C358 +
            C153851 * C377) *
               C153638 * C153893) *
              C153711 * C1367 +
          ((C152148 * C359 - C152187 * C342 - C152148 * C360 + C153851 * C378 +
            C152145 * C1384 - C152180 * C1375 - C152145 * C1385 +
            C153858 * C1390 + C152193 * C3193 - C83611 * C3189 -
            C152193 * C3194 + C83602 * C3201) *
               C153638 * C153893 +
           (C96631 + C96632 + C96633) * C153638 * C153900 +
           (C152148 * C3511 - C152187 * C3507 - C152148 * C3512 +
            C153851 * C3519 + C152145 * C5038 - C152180 * C5033 -
            C152145 * C5039 + C153858 * C5042 + C152193 * C28692 -
            C83611 * C28690 - C152193 * C28693 + C83602 * C28696) *
               C153638 * C116097) *
              C153711 * C1368 -
          ((C152193 * C29443 - C83611 * C29442 - C152193 * C29444 +
            C83602 * C29445 + C152145 * C28692 - C152180 * C28690 -
            C152145 * C28693 + C153858 * C28696 + C152148 * C5038 -
            C152187 * C5033 - C152148 * C5039 + C153851 * C5042) *
               C153638 * C116097 +
           (C152193 * C29106 - C83611 * C29104 - C152193 * C29107 +
            C83602 * C29110 + C152145 * C5776 - C152180 * C5771 -
            C152145 * C5777 + C153858 * C5780 + C152148 * C4383 -
            C152187 * C4379 - C152148 * C4384 + C153851 * C4391) *
               C153638 * C153900 +
           (C152193 * C4808 - C83611 * C4803 - C152193 * C4809 +
            C83602 * C4812 + C152145 * C3193 - C152180 * C3189 -
            C152145 * C3194 + C153858 * C3201 + C152148 * C1384 -
            C152187 * C1375 - C152148 * C1385 + C153851 * C1390) *
               C153638 * C153893) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[100] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
                       C153851 * C160 + C152145 * C357 - C152180 * C341 -
                       C152145 * C358 + C153858 * C377 + C152193 * C359 -
                       C83611 * C342 - C152193 * C360 + C83602 * C378) *
                          C153638 * C153893 +
                      (C93829 + C93830 + C93831) * C153638 * C153900 +
                      C148627 * C116097) *
                         C2086 -
                     (C151306 * C116097 +
                      (C93832 + C93833 + C93834) * C153638 * C153900 +
                      (C93831 + C93830 + C93829) * C153638 * C153893) *
                         C153775) *
                        C154021 +
                    (((C94846 + C94847 + C94848) * C153638 * C153893 +
                      (C95644 + C95645 + C95646) * C153638 * C153900 +
                      (C149957 + C149958 + C149959) * C153638 * C116097) *
                         C153775 -
                     (C149956 * C116097 +
                      (C94848 + C94847 + C94846) * C153638 * C153900 +
                      (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
                       C83602 * C1390 + C152145 * C359 - C152180 * C342 -
                       C152145 * C360 + C153858 * C378 + C152148 * C357 -
                       C152187 * C341 - C152148 * C358 + C153851 * C377) *
                          C153638 * C153893) *
                         C2086) *
                        C153747) *
                       C154013 +
                   (((C93810 * C153638 * C153893 + C93816 * C153638 * C153900 +
                      (C93835 + C93836 + C93837) * C153638 * C116097) *
                         C153775 -
                     (C148625 * C116097 + C93815 * C153638 * C153900 +
                      (C83687 + C83686 + C83685) * C153638 * C153893) *
                         C2086) *
                        C154021 +
                    (((C83996 + C83995 + C83994) * C153638 * C153893 +
                      C94835 * C153638 * C153900 +
                      (C94849 + C94850 + C94851) * C153638 * C116097) *
                         C2086 -
                     ((C152193 * C32003 - C83611 * C32002 - C152193 * C32004 +
                       C83602 * C32005 + C152145 * C6373 - C152180 * C6365 -
                       C152145 * C6374 + C153858 * C6383 + C152148 * C6375 -
                       C152187 * C6366 - C152148 * C6376 + C153851 * C6384) *
                          C153638 * C116097 +
                      (C94851 + C94850 + C94849) * C153638 * C153900 +
                      C94839 * C153638 * C153893) *
                         C153775) *
                        C153747) *
                       C153682)) /
                 (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C153638 * C153893 +
            (C93829 + C93830 + C93831) * C153638 * C153900 +
            C148627 * C116097) *
               C154094 -
           (C151306 * C116097 + (C93832 + C93833 + C93834) * C153638 * C153900 +
            (C93831 + C93830 + C93829) * C153638 * C153893) *
               C154095 +
           (C148627 * C153893 + (C97426 + C97427 + C97428) * C153638 * C153900 +
            (C151310 + C151311 + C151312) * C153638 * C116097) *
               C2602) *
              C154021 +
          (((C94846 + C94847 + C94848) * C153638 * C153893 +
            (C95644 + C95645 + C95646) * C153638 * C153900 +
            (C149957 + C149958 + C149959) * C153638 * C116097) *
               C154095 -
           (C149956 * C116097 + (C94848 + C94847 + C94846) * C153638 * C153900 +
            (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
             C83602 * C1390 + C152145 * C359 - C152180 * C342 - C152145 * C360 +
             C153858 * C378 + C152148 * C357 - C152187 * C341 - C152148 * C358 +
             C153851 * C377) *
                C153638 * C153893) *
               C154094 -
           ((C152193 * C32652 - C83611 * C32651 - C152193 * C32653 +
             C83602 * C32654 + C152145 * C31180 - C152180 * C31178 -
             C152145 * C31181 + C153858 * C31184 + C152148 * C9206 -
             C152187 * C9201 - C152148 * C9207 + C153851 * C9210) *
                C153638 * C116097 +
            (C149959 + C149958 + C149957) * C153638 * C153900 +
            C149956 * C153893) *
               C2602) *
              C153747) *
         C153676) /
        (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C153638 * C153893 +
            (C93829 + C93830 + C93831) * C153638 * C153900 +
            C148627 * C116097) *
               C2086 -
           ((C97428 + C97427 + C97426) * C153638 * C116097 +
            (C93832 + C93833 + C93834) * C153638 * C153900 +
            (C93831 + C93830 + C93829) * C153638 * C153893) *
               C153775) *
              C332 +
          (((C94846 + C94847 + C94848) * C153638 * C153893 +
            (C95644 + C95645 + C95646) * C153638 * C153900 +
            (C149957 + C149958 + C149959) * C153638 * C116097) *
               C153775 -
           (C149956 * C116097 + (C94848 + C94847 + C94846) * C153638 * C153900 +
            (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
             C83602 * C1390 + C152145 * C359 - C152180 * C342 - C152145 * C360 +
             C153858 * C378 + C152148 * C357 - C152187 * C341 - C152148 * C358 +
             C153851 * C377) *
                C153638 * C153893) *
               C2086) *
              C333 +
          (((C152148 * C359 - C152187 * C342 - C152148 * C360 + C153851 * C378 +
             C152145 * C1384 - C152180 * C1375 - C152145 * C1385 +
             C153858 * C1390 + C152193 * C3193 - C83611 * C3189 -
             C152193 * C3194 + C83602 * C3201) *
                C153638 * C153893 +
            (C96631 + C96632 + C96633) * C153638 * C153900 +
            (C150704 + C150705 + C150706) * C153638 * C116097) *
               C2086 -
           ((C152193 * C30184 - C83611 * C30182 - C152193 * C30185 +
             C83602 * C30188 + C152145 * C30186 - C152180 * C30183 -
             C152145 * C30187 + C153858 * C30189 + C152148 * C6377 -
             C152187 * C6367 - C152148 * C6378 + C153851 * C6385) *
                C153638 * C116097 +
            (C150706 + C150705 + C150704) * C153638 * C153900 +
            (C96633 + C96632 + C96631) * C153638 * C153893) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C153638 * C153893 +
            (C93829 + C93830 + C93831) * C153638 * C153900 +
            C148627 * C116097) *
               C2086 -
           ((C97428 + C97427 + C97426) * C153638 * C116097 +
            (C93832 + C93833 + C93834) * C153638 * C153900 +
            (C93831 + C93830 + C93829) * C153638 * C153893) *
               C153775) *
              C153695 * C1281 +
          ((C93810 * C153638 * C153893 + C93816 * C153638 * C153900 +
            (C93835 + C93836 + C93837) * C153638 * C116097) *
               C153775 -
           (C148625 * C116097 + C93815 * C153638 * C153900 +
            (C83687 + C83686 + C83685) * C153638 * C153893) *
               C2086) *
              C153695 * C1282 +
          ((C83699 * C153638 * C153893 + C94419 * C153638 * C153900 +
            (C84302 + C84303 + C84304) * C153638 * C116097) *
               C2086 -
           ((C152193 * C6369 - C83611 * C6363 - C152193 * C6370 +
             C83602 * C6381 + C152145 * C6371 - C152180 * C6364 -
             C152145 * C6372 + C153858 * C6382 + C152148 * C2305 -
             C152187 * C2298 - C152148 * C2306 + C153851 * C2313) *
                C153638 * C116097 +
            (C84304 + C84303 + C84302) * C153638 * C153900 +
            C84777 * C153638 * C153893) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
            C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
            C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
               C153638 * C153893 +
           (C93829 + C93830 + C93831) * C153638 * C153900 + C148627 * C116097) *
              C2292 -
          (C151306 * C116097 + (C93832 + C93833 + C93834) * C153638 * C153900 +
           (C93831 + C93830 + C93829) * C153638 * C153893) *
              C2293 +
          (C148627 * C153893 + (C97426 + C97427 + C97428) * C153638 * C153900 +
           (C151310 + C151311 + C151312) * C153638 * C116097) *
              C2294 -
          ((C152193 * C34031 - C83611 * C34029 - C152193 * C34032 +
            C83602 * C34035 + C152145 * C34033 - C152180 * C34030 -
            C152145 * C34034 + C153858 * C34036 + C152148 * C10558 -
            C152187 * C10553 - C152148 * C10559 + C153851 * C10562) *
               C153638 * C116097 +
           (C151312 + C151311 + C151310) * C153638 * C153900 +
           C151306 * C153893) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C153638 * C153893 +
            (C93829 + C93830 + C93831) * C153638 * C153900 +
            C148627 * C116097) *
               C154094 -
           (C151306 * C116097 + (C93832 + C93833 + C93834) * C153638 * C153900 +
            (C93831 + C93830 + C93829) * C153638 * C153893) *
               C154095 +
           (C148627 * C153893 + (C97426 + C97427 + C97428) * C153638 * C153900 +
            (C151310 + C151311 + C151312) * C153638 * C116097) *
               C2602) *
              C153695 * C154013 +
          ((C93810 * C153638 * C153893 + C93816 * C153638 * C153900 +
            (C93835 + C93836 + C93837) * C153638 * C116097) *
               C154095 -
           (C148625 * C116097 + C93815 * C153638 * C153900 +
            (C83687 + C83686 + C83685) * C153638 * C153893) *
               C154094 -
           ((C152193 * C31182 - C83611 * C31179 - C152193 * C31183 +
             C83602 * C31185 + C152145 * C9204 - C152180 * C9200 -
             C152145 * C9205 + C153858 * C9209 + C152148 * C7746 -
             C152187 * C7741 - C152148 * C7747 + C153851 * C7753) *
                C153638 * C116097 +
            (C93837 + C93836 + C93835) * C153638 * C153900 +
            C148625 * C153893) *
               C2602) *
              C153695 * C153682)) /
        (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C153638 * C153893 +
            (C93829 + C93830 + C93831) * C153638 * C153900 +
            C148627 * C116097) *
               C2086 -
           ((C97428 + C97427 + C97426) * C153638 * C116097 +
            (C93832 + C93833 + C93834) * C153638 * C153900 +
            (C93831 + C93830 + C93829) * C153638 * C153893) *
               C153775) *
              C153695 * C1281 +
          ((C93810 * C153638 * C153893 + C93816 * C153638 * C153900 +
            (C93835 + C93836 + C93837) * C153638 * C116097) *
               C153775 -
           (C148625 * C116097 + C93815 * C153638 * C153900 +
            (C83687 + C83686 + C83685) * C153638 * C153893) *
               C2086) *
              C153695 * C1282 +
          ((C83699 * C153638 * C153893 + C94419 * C153638 * C153900 +
            (C84302 + C84303 + C84304) * C153638 * C116097) *
               C2086 -
           ((C152193 * C6369 - C83611 * C6363 - C152193 * C6370 +
             C83602 * C6381 + C152145 * C6371 - C152180 * C6364 -
             C152145 * C6372 + C153858 * C6382 + C152148 * C2305 -
             C152187 * C2298 - C152148 * C2306 + C153851 * C2313) *
                C153638 * C116097 +
            (C84304 + C84303 + C84302) * C153638 * C153900 +
            C84777 * C153638 * C153893) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C153851 * C160 +
             C152145 * C357 - C152180 * C341 - C152145 * C358 + C153858 * C377 +
             C152193 * C359 - C83611 * C342 - C152193 * C360 + C83602 * C378) *
                C153638 * C153893 +
            (C93829 + C93830 + C93831) * C153638 * C153900 +
            C148627 * C116097) *
               C2086 -
           ((C97428 + C97427 + C97426) * C153638 * C116097 +
            (C93832 + C93833 + C93834) * C153638 * C153900 +
            (C93831 + C93830 + C93829) * C153638 * C153893) *
               C153775) *
              C332 +
          (((C94846 + C94847 + C94848) * C153638 * C153893 +
            (C95644 + C95645 + C95646) * C153638 * C153900 +
            (C149957 + C149958 + C149959) * C153638 * C116097) *
               C153775 -
           (C149956 * C116097 + (C94848 + C94847 + C94846) * C153638 * C153900 +
            (C152193 * C1384 - C83611 * C1375 - C152193 * C1385 +
             C83602 * C1390 + C152145 * C359 - C152180 * C342 - C152145 * C360 +
             C153858 * C378 + C152148 * C357 - C152187 * C341 - C152148 * C358 +
             C153851 * C377) *
                C153638 * C153893) *
               C2086) *
              C333 +
          (((C152148 * C359 - C152187 * C342 - C152148 * C360 + C153851 * C378 +
             C152145 * C1384 - C152180 * C1375 - C152145 * C1385 +
             C153858 * C1390 + C152193 * C3193 - C83611 * C3189 -
             C152193 * C3194 + C83602 * C3201) *
                C153638 * C153893 +
            (C96631 + C96632 + C96633) * C153638 * C153900 +
            (C150704 + C150705 + C150706) * C153638 * C116097) *
               C2086 -
           ((C152193 * C30184 - C83611 * C30182 - C152193 * C30185 +
             C83602 * C30188 + C152145 * C30186 - C152180 * C30183 -
             C152145 * C30187 + C153858 * C30189 + C152148 * C6377 -
             C152187 * C6367 - C152148 * C6378 + C153851 * C6385) *
                C153638 * C116097 +
            (C150706 + C150705 + C150704) * C153638 * C153900 +
            (C96633 + C96632 + C96631) * C153638 * C153893) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C153638 * C98524 +
            (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
               C153711 * C154021 -
           ((C74324 * C5776 - C74325 * C5771 - C74324 * C5777 +
             C154044 * C5780 + C74322 * C4383 - C74323 * C4379 -
             C74322 * C4384 + C154102 * C4391 + C74320 * C1957 -
             C74321 * C1948 - C74320 * C1958 + C154112 * C1963 +
             C74318 * C1111 - C74319 * C1105 - C74318 * C1112 +
             C154116 * C1123) *
                C153638 * C153897 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C153638 * C98524) *
               C153711 * C153747) *
              C154090 +
          (((C74656 + C74655 + C74654 + C74653) * C153638 * C98524 +
            (C75637 + C75638 + C75639 + C75640) * C153638 * C153897) *
               C153711 * C153747 -
           ((C74903 + C74904 + C74905 + C74906) * C153638 * C153897 +
            (C74402 + C74401 + C74400 + C74399) * C153638 * C98524) *
               C153711 * C154021) *
              C154091 +
          (((C74406 + C74405 + C74404 + C74403) * C153638 * C98524 +
            (C75351 + C75352 + C75353 + C75354) * C153638 * C153897) *
               C153711 * C154021 -
           ((C74324 * C5772 - C74325 * C5769 - C74324 * C5773 +
             C154044 * C5778 + C74322 * C4387 - C74323 * C4381 -
             C74322 * C4388 + C154102 * C4393 + C74320 * C1953 -
             C74321 * C1946 - C74320 * C1954 + C154112 * C1961 +
             C74318 * C1115 - C74319 * C1107 - C74318 * C1116 +
             C154116 * C1125) *
                C153638 * C153897 +
            (C75132 + C75131 + C75130 + C75129) * C153638 * C98524) *
               C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154106 +
             (C70565 + C70566) * C154087 + C70575 * C154058) *
                C98524 +
            ((C78866 + C78867) * C154106 + C78793 * C154087 +
             C79477 * C154058) *
                C153897) *
               C153711 * C154021 -
           ((C88813 * C154058 + C79892 * C154087 +
             (C79906 + C79905) * C154106) *
                C153897 +
            (C71330 * C154058 + (C70849 + C70850) * C154087 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C154106) *
                C98524) *
               C153711 * C153747) *
              C154090 +
          ((((C70850 + C70849) * C154106 + (C70848 + C70847) * C154087 +
             (C70846 + C70845) * C154058) *
                C98524 +
            (C79873 * C154106 + C89491 * C154087 +
             (C71853 + C71854) * C154058) *
                C153897) *
               C153711 * C153747 -
           ((C71539 * C154058 + C71540 * C154087 + C78820 * C154106) * C153897 +
            (C70578 * C154058 + (C70568 + C70567) * C154087 +
             (C70566 + C70565) * C154106) *
                C98524) *
               C153711 * C154021) *
              C154091 +
          (((C70575 * C154106 + C70576 * C154087 +
             (C70572 + C70571) * C154058) *
                C98524 +
            (C79477 * C154106 + C89104 * C154087 +
             (C71553 + C71554) * C154058) *
                C153897) *
               C153711 * C154021 -
           (((C70502 * C1949 - C70503 * C1944 - C70502 * C1950 +
              C153855 * C1959 + C70500 * C1119 - C70501 * C1109 -
              C70500 * C1120 + C70494 * C1127) *
                 C154058 +
             (C71854 + C71853) * C154087 + C88813 * C154106) *
                C153897 +
            ((C71344 + C71343) * C154058 + C71329 * C154087 +
             C71330 * C154106) *
                C98524) *
               C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C153638 * C154117 +
            (C78866 + C78867) * C153638 * C154114 + C134563 * C154105 +
            C134567 * C154051) *
               C153711 * C154021 -
           ((C80702 + C80701) * C153638 * C154051 + C80694 * C153638 * C154105 +
            (C79906 + C79905) * C153638 * C154114 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C153638 * C154117) *
               C153711 * C153747) *
              C154090 +
          (((C70850 + C70849) * C153638 * C154117 + C79873 * C153638 * C154114 +
            C79882 * C153638 * C154105 +
            (C79909 + C79910) * C153638 * C154051) *
               C153711 * C153747 -
           (C134565 * C154051 + C134566 * C154105 + C78820 * C153638 * C154114 +
            (C70566 + C70565) * C153638 * C154117) *
               C153711 * C154021) *
              C154091 +
          ((C70575 * C153638 * C154117 + C79477 * C153638 * C154114 +
            C79478 * C153638 * C154105 +
            (C78876 + C78877) * C153638 * C154051) *
               C153711 * C154021 -
           ((C70502 * C6369 - C70503 * C6363 - C70502 * C6370 +
             C153855 * C6381 + C70500 * C6371 - C70501 * C6364 -
             C70500 * C6372 + C70494 * C6382) *
                C153638 * C154051 +
            (C79186 + C79185) * C153638 * C154105 + C88813 * C153638 * C154114 +
            C71330 * C153638 * C154117) *
               C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
              C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
              C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
              C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
              C154044 * C1390) *
                 C153638 * C98524 +
             (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
                C154022 -
            ((C130955 + C130956 + C130957 + C130958) * C153638 * C153897 +
             (C130954 + C130953 + C130952 + C130951) * C153638 * C98524) *
                C153775) *
               C154021 +
           (((C131629 + C131630 + C131631 + C131632) * C153638 * C98524 +
             (C74318 * C1526 - C74319 * C1517 - C74318 * C1527 +
              C154116 * C1532 + C74320 * C3511 - C74321 * C3507 -
              C74320 * C3512 + C154112 * C3519 + C74322 * C5038 -
              C74323 * C5033 - C74322 * C5039 + C154102 * C5042 +
              C74324 * C28692 - C74325 * C28690 - C74324 * C28693 +
              C154044 * C28696) *
                 C153638 * C153897) *
                C153775 -
            ((C131632 + C131631 + C131630 + C131629) * C153638 * C153897 +
             (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
              C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
              C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
              C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
              C74318 * C358 + C154116 * C377) *
                 C153638 * C98524) *
                C154022) *
               C153747) *
              C335 +
          ((((C74906 + C74905 + C74904 + C74903) * C153638 * C98524 +
             (C74907 + C74908 + C74909 + C74910) * C153638 * C153897) *
                C153775 -
            ((C74903 + C74904 + C74905 + C74906) * C153638 * C153897 +
             (C74402 + C74401 + C74400 + C74399) * C153638 * C98524) *
                C154022) *
               C154021 +
           (((C74656 + C74655 + C74654 + C74653) * C153638 * C98524 +
             (C75637 + C75638 + C75639 + C75640) * C153638 * C153897) *
                C154022 -
            ((C74324 * C28694 - C74325 * C28691 - C74324 * C28695 +
              C154044 * C28697 + C74322 * C5036 - C74323 * C5032 -
              C74322 * C5037 + C154102 * C5041 + C74320 * C3513 -
              C74321 * C3508 - C74320 * C3514 + C154112 * C3520 +
              C74318 * C1524 - C74319 * C1516 - C74318 * C1525 +
              C154116 * C1531) *
                 C153638 * C153897 +
             (C75640 + C75639 + C75638 + C75637) * C153638 * C98524) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
               C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                  C154106 +
              (C70565 + C70566) * C154087 + C70575 * C154058) *
                 C98524 +
             ((C78866 + C78867) * C154106 + C78793 * C154087 +
              C79477 * C154058) *
                 C153897) *
                C154022 -
            ((C78837 * C154058 + C78819 * C154087 +
              (C78869 + C78868) * C154106) *
                 C153897 +
             (C71540 * C154058 + C78820 * C154087 +
              (C78867 + C78866) * C154106) *
                 C98524) *
                C153775) *
               C154021 +
           ((((C79905 + C79906) * C154106 + C79873 * C154087 +
              C89491 * C154058) *
                 C98524 +
             ((C79907 + C79908) * C154106 + C79882 * C154087 +
              (C79185 + C79186) * C154058) *
                 C153897) *
                C153775 -
            ((C88813 * C154058 + C79892 * C154087 +
              (C79906 + C79905) * C154106) *
                 C153897 +
             (C71330 * C154058 + (C70849 + C70850) * C154087 +
              (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
               C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                  C154106) *
                 C98524) *
                C154022) *
               C153747) *
              C335 +
          ((((C78793 * C154106 + C79477 * C154087 + C89104 * C154058) * C98524 +
             (C78802 * C154106 + C79478 * C154087 +
              (C71133 + C71134) * C154058) *
                 C153897) *
                C153775 -
            ((C71539 * C154058 + C71540 * C154087 + C78820 * C154106) *
                 C153897 +
             (C70578 * C154058 + (C70568 + C70567) * C154087 +
              (C70566 + C70565) * C154106) *
                 C98524) *
                C154022) *
               C154021 +
           ((((C70850 + C70849) * C154106 + (C70848 + C70847) * C154087 +
              (C70846 + C70845) * C154058) *
                 C98524 +
             (C79873 * C154106 + C89491 * C154087 +
              (C71853 + C71854) * C154058) *
                 C153897) *
                C154022 -
            (((C70502 * C3517 - C70503 * C3510 - C70502 * C3518 +
               C153855 * C3522 + C70500 * C1520 - C70501 * C1514 -
               C70500 * C1521 + C70494 * C1529) *
                  C154058 +
              (C79186 + C79185) * C154087 + C79891 * C154106) *
                 C153897 +
             ((C71854 + C71853) * C154058 + C88813 * C154087 +
              C79892 * C154106) *
                 C98524) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C153638 * C154117 +
             (C78866 + C78867) * C153638 * C154114 + C134563 * C154105 +
             C134567 * C154051) *
                C154022 -
            ((C82488 + C82487) * C153638 * C154051 +
             C82472 * C153638 * C154105 +
             (C78869 + C78868) * C153638 * C154114 +
             (C78867 + C78866) * C153638 * C154117) *
                C153775) *
               C154021 +
           (((C79905 + C79906) * C153638 * C154117 +
             (C79907 + C79908) * C153638 * C154114 +
             (C80701 + C80702) * C153638 * C154105 +
             (C70500 * C9206 - C70501 * C9201 - C70500 * C9207 +
              C70494 * C9210 + C70502 * C31180 - C70503 * C31178 -
              C70502 * C31181 + C153855 * C31184) *
                 C153638 * C154051) *
                C153775 -
            ((C80702 + C80701) * C153638 * C154051 +
             C80694 * C153638 * C154105 +
             (C79906 + C79905) * C153638 * C154114 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C153638 * C154117) *
                C154022) *
               C153747) *
              C335 +
          (((C78793 * C153638 * C154117 + C78802 * C153638 * C154114 +
             C78880 * C153638 * C154105 +
             (C78874 + C78875) * C153638 * C154051) *
                C153775 -
            (C134565 * C154051 + C134566 * C154105 +
             C78820 * C153638 * C154114 +
             (C70566 + C70565) * C153638 * C154117) *
                C154022) *
               C154021 +
           (((C70850 + C70849) * C153638 * C154117 +
             C79873 * C153638 * C154114 + C79882 * C153638 * C154105 +
             (C79909 + C79910) * C153638 * C154051) *
                C154022 -
            ((C70502 * C31182 - C70503 * C31179 - C70502 * C31183 +
              C153855 * C31185 + C70500 * C9204 - C70501 * C9200 -
              C70500 * C9205 + C70494 * C9209) *
                 C153638 * C154051 +
             (C79910 + C79909) * C153638 * C154105 +
             C79891 * C153638 * C154114 + C79892 * C153638 * C154117) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
                 C70502 * C357 - C70503 * C341 - C70502 * C358 +
                 C153855 * C377) *
                    C154106 +
                (C70565 + C70566) * C154087 + C70575 * C154058) *
                   C98524 +
               ((C78866 + C78867) * C154106 + C78793 * C154087 +
                C79477 * C154058) *
                   C153897) *
                  C153711 * C153695 * C130 -
              ((C71539 * C154058 + C71540 * C154087 + C78820 * C154106) *
                   C153897 +
               (C70578 * C154058 + (C70568 + C70567) * C154087 +
                (C70566 + C70565) * C154106) *
                   C98524) *
                  C153711 * C153695 * C131 +
              ((C70575 * C154106 + C70576 * C154087 +
                (C70572 + C70571) * C154058) *
                   C98524 +
               (C79477 * C154106 + C89104 * C154087 +
                (C71553 + C71554) * C154058) *
                   C153897) *
                  C153711 * C153695 * C132 -
              (((C70502 * C1121 - C70503 * C1110 - C70502 * C1122 +
                 C153855 * C1128 + C70500 * C598 - C70501 * C576 -
                 C70500 * C599 + C70494 * C612) *
                    C154058 +
                (C71554 + C71553) * C154087 + C71539 * C154106) *
                   C153897 +
               ((C70574 + C70573) * C154058 + C70577 * C154087 +
                C70578 * C154106) *
                   C98524) *
                  C153711 * C153695 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C70500 * C144 - C70501 * C136 - C70500 * C145 +
                  C70494 * C160 + C70502 * C357 - C70503 * C341 -
                  C70502 * C358 + C153855 * C377) *
                     C154106 +
                 (C70565 + C70566) * C154087 + C70575 * C154058) *
                    C98524 +
                ((C78866 + C78867) * C154106 + C78793 * C154087 +
                 C79477 * C154058) *
                    C153897) *
                   C153711 * C332 -
               ((C88813 * C154058 + C79892 * C154087 +
                 (C79906 + C79905) * C154106) *
                    C153897 +
                (C71330 * C154058 + (C70849 + C70850) * C154087 +
                 (C70502 * C359 - C70503 * C342 - C70502 * C360 +
                  C153855 * C378 + C70500 * C357 - C70501 * C341 -
                  C70500 * C358 + C70494 * C377) *
                     C154106) *
                    C98524) *
                   C153711 * C333 +
               (((C70500 * C359 - C70501 * C342 - C70500 * C360 +
                  C70494 * C378 + C70502 * C1384 - C70503 * C1375 -
                  C70502 * C1385 + C153855 * C1390) *
                     C154106 +
                 (C70851 + C70852) * C154087 + (C70853 + C70854) * C154058) *
                    C98524 +
                ((C81693 + C81694) * C154106 + (C78491 + C78492) * C154087 +
                 (C88231 + C88232) * C154058) *
                    C153897) *
                   C153711 * C334) *
                  C335 +
              ((((C70850 + C70849) * C154106 + (C70848 + C70847) * C154087 +
                 (C70846 + C70845) * C154058) *
                    C98524 +
                (C79873 * C154106 + C89491 * C154087 +
                 (C71853 + C71854) * C154058) *
                    C153897) *
                   C153711 * C333 -
               ((C71539 * C154058 + C71540 * C154087 + C78820 * C154106) *
                    C153897 +
                (C70578 * C154058 + (C70568 + C70567) * C154087 +
                 (C70566 + C70565) * C154106) *
                    C98524) *
                   C153711 * C332 -
               (((C70502 * C4389 - C70503 * C4382 - C70502 * C4390 +
                  C153855 * C4394 + C70500 * C1951 - C70501 * C1945 -
                  C70500 * C1952 + C70494 * C1960) *
                     C154058 +
                 (C88232 + C88231) * C154087 + (C78492 + C78491) * C154106) *
                    C153897 +
                ((C70856 + C70855) * C154058 + (C70854 + C70853) * C154087 +
                 (C70852 + C70851) * C154106) *
                    C98524) *
                   C153711 * C334) *
                  C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154106 +
             (C70565 + C70566) * C154087 + C70575 * C154058) *
                C98524 +
            ((C78866 + C78867) * C154106 + C78793 * C154087 +
             C79477 * C154058) *
                C153897) *
               C563 -
           ((C78837 * C154058 + C78819 * C154087 +
             (C78869 + C78868) * C154106) *
                C153897 +
            (C71540 * C154058 + C78820 * C154087 +
             (C78867 + C78866) * C154106) *
                C98524) *
               C564 +
           ((C78878 * C154106 + C78802 * C154087 + C79478 * C154058) * C98524 +
            ((C78873 + C78872) * C154106 + C78880 * C154087 +
             (C78876 + C78877) * C154058) *
                C153897) *
               C565) *
              C153695 * C335 +
          (((C78793 * C154106 + C79477 * C154087 + C89104 * C154058) * C98524 +
            (C78802 * C154106 + C79478 * C154087 +
             (C71133 + C71134) * C154058) *
                C153897) *
               C564 -
           ((C71539 * C154058 + C71540 * C154087 + C78820 * C154106) * C153897 +
            (C70578 * C154058 + (C70568 + C70567) * C154087 +
             (C70566 + C70565) * C154106) *
                C98524) *
               C563 -
           (((C70502 * C8574 - C70503 * C8573 - C70502 * C8575 +
              C153855 * C8576 + C70500 * C2303 - C70501 * C2297 -
              C70500 * C2304 + C70494 * C2312) *
                 C154058 +
             (C78877 + C78876) * C154087 + C78879 * C154106) *
                C153897 +
            ((C71134 + C71133) * C154058 + C78837 * C154087 +
             C78819 * C154106) *
                C98524) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
            C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
            C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
            C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
            C154044 * C1390) *
               C153638 * C98524 +
           (C74318 * C586 - C74319 * C570 - C74318 * C587 + C154116 * C606 +
            C74320 * C1111 - C74321 * C1105 - C74320 * C1112 + C154112 * C1123 +
            C74322 * C1957 - C74323 * C1948 - C74322 * C1958 + C154102 * C1963 +
            C74324 * C4383 - C74325 * C4379 - C74324 * C4384 +
            C154044 * C4391) *
               C153638 * C153897) *
              C153711 * C153695 * C130 -
          ((C74903 + C74904 + C74905 + C74906) * C153638 * C153897 +
           (C74402 + C74401 + C74400 + C74399) * C153638 * C98524) *
              C153711 * C153695 * C131 +
          ((C74406 + C74405 + C74404 + C74403) * C153638 * C98524 +
           (C75351 + C75352 + C75353 + C75354) * C153638 * C153897) *
              C153711 * C153695 * C132 -
          ((C74324 * C4389 - C74325 * C4382 - C74324 * C4390 + C154044 * C4394 +
            C74322 * C1951 - C74323 * C1945 - C74322 * C1952 + C154102 * C1960 +
            C74320 * C1117 - C74321 * C1108 - C74320 * C1118 + C154112 * C1126 +
            C74318 * C580 - C74319 * C567 - C74318 * C581 + C154116 * C603) *
               C153638 * C153897 +
           (C74410 + C74409 + C74408 + C74407) * C153638 * C98524) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C153638 * C98524 +
            (C74318 * C586 - C74319 * C570 - C74318 * C587 + C154116 * C606 +
             C74320 * C1111 - C74321 * C1105 - C74320 * C1112 +
             C154112 * C1123 + C74322 * C1957 - C74323 * C1948 -
             C74322 * C1958 + C154102 * C1963 + C74324 * C4383 -
             C74325 * C4379 - C74324 * C4384 + C154044 * C4391) *
                C153638 * C153897) *
               C153711 * C332 -
           ((C74324 * C5776 - C74325 * C5771 - C74324 * C5777 +
             C154044 * C5780 + C74322 * C4383 - C74323 * C4379 -
             C74322 * C4384 + C154102 * C4391 + C74320 * C1957 -
             C74321 * C1948 - C74320 * C1958 + C154112 * C1963 +
             C74318 * C1111 - C74319 * C1105 - C74318 * C1112 +
             C154116 * C1123) *
                C153638 * C153897 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C153638 * C98524) *
               C153711 * C333 +
           ((C74318 * C359 - C74319 * C342 - C74318 * C360 + C154116 * C378 +
             C74320 * C1384 - C74321 * C1375 - C74320 * C1385 +
             C154112 * C1390 + C74322 * C3193 - C74323 * C3189 -
             C74322 * C3194 + C154102 * C3201 + C74324 * C4808 -
             C74325 * C4803 - C74324 * C4809 + C154044 * C4812) *
                C153638 * C98524 +
            (C74318 * C1957 - C74319 * C1948 - C74318 * C1958 +
             C154116 * C1963 + C74320 * C4383 - C74321 * C4379 -
             C74320 * C4384 + C154112 * C4391 + C74322 * C5776 -
             C74323 * C5771 - C74322 * C5777 + C154102 * C5780 +
             C74324 * C29106 - C74325 * C29104 - C74324 * C29107 +
             C154044 * C29110) *
                C153638 * C153897) *
               C153711 * C334) *
              C335 +
          (((C74656 + C74655 + C74654 + C74653) * C153638 * C98524 +
            (C75637 + C75638 + C75639 + C75640) * C153638 * C153897) *
               C153711 * C333 -
           ((C74903 + C74904 + C74905 + C74906) * C153638 * C153897 +
            (C74402 + C74401 + C74400 + C74399) * C153638 * C98524) *
               C153711 * C332 -
           ((C74324 * C29108 - C74325 * C29105 - C74324 * C29109 +
             C154044 * C29111 + C74322 * C5774 - C74323 * C5770 -
             C74322 * C5775 + C154102 * C5779 + C74320 * C4385 -
             C74321 * C4380 - C74320 * C4386 + C154112 * C4392 +
             C74318 * C1955 - C74319 * C1947 - C74318 * C1956 +
             C154116 * C1962) *
                C153638 * C153897 +
            (C74660 + C74659 + C74658 + C74657) * C153638 * C98524) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C153638 * C98524 +
            (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
               C563 -
           ((C130955 + C130956 + C130957 + C130958) * C153638 * C153897 +
            (C130954 + C130953 + C130952 + C130951) * C153638 * C98524) *
               C564 +
           ((C130958 + C130957 + C130956 + C130955) * C153638 * C98524 +
            (C74318 * C2309 - C74319 * C2300 - C74318 * C2310 +
             C154116 * C2315 + C74320 * C6379 - C74321 * C6368 -
             C74320 * C6380 + C154112 * C6386 + C74322 * C6377 -
             C74323 * C6367 - C74322 * C6378 + C154102 * C6385 +
             C74324 * C30186 - C74325 * C30183 - C74324 * C30187 +
             C154044 * C30189) *
                C153638 * C153897) *
               C565) *
              C153695 * C335 +
          (((C74906 + C74905 + C74904 + C74903) * C153638 * C98524 +
            (C74907 + C74908 + C74909 + C74910) * C153638 * C153897) *
               C564 -
           ((C74903 + C74904 + C74905 + C74906) * C153638 * C153897 +
            (C74402 + C74401 + C74400 + C74399) * C153638 * C98524) *
               C563 -
           ((C74324 * C32003 - C74325 * C32002 - C74324 * C32004 +
             C154044 * C32005 + C74322 * C6373 - C74323 * C6365 -
             C74322 * C6374 + C154102 * C6383 + C74320 * C6375 -
             C74321 * C6366 - C74320 * C6376 + C154112 * C6384 +
             C74318 * C2307 - C74319 * C2299 - C74318 * C2308 +
             C154116 * C2314) *
                C153638 * C153897 +
            (C74910 + C74909 + C74908 + C74907) * C153638 * C98524) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
            C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
               C153638 * C154117 +
           (C78866 + C78867) * C153638 * C154114 + C78878 * C153638 * C154105 +
           (C78873 + C78872) * C153638 * C154051) *
              C153711 * C153695 * C130 -
          (C78879 * C153638 * C154051 + C78819 * C153638 * C154105 +
           C78820 * C153638 * C154114 + (C70566 + C70565) * C153638 * C154117) *
              C153711 * C153695 * C131 +
          (C70575 * C153638 * C154117 + C79477 * C153638 * C154114 +
           C79478 * C153638 * C154105 + (C78876 + C78877) * C153638 * C154051) *
              C153711 * C153695 * C132 -
          ((C70502 * C8574 - C70503 * C8573 - C70502 * C8575 + C153855 * C8576 +
            C70500 * C2303 - C70501 * C2297 - C70500 * C2304 + C70494 * C2312) *
               C153638 * C154051 +
           (C71134 + C71133) * C153638 * C154105 + C71539 * C153638 * C154114 +
           C70578 * C153638 * C154117) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C153638 * C154117 +
            (C78866 + C78867) * C153638 * C154114 + C78878 * C153638 * C154105 +
            (C78873 + C78872) * C153638 * C154051) *
               C153711 * C332 -
           ((C80702 + C80701) * C153638 * C154051 + C80694 * C153638 * C154105 +
            (C79906 + C79905) * C153638 * C154114 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C153638 * C154117) *
               C153711 * C333 +
           ((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
             C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
             C153855 * C1390) *
                C153638 * C154117 +
            (C81693 + C81694) * C153638 * C154114 +
            (C81695 + C81696) * C153638 * C154105 +
            (C70500 * C6377 - C70501 * C6367 - C70500 * C6378 + C70494 * C6385 +
             C70502 * C30186 - C70503 * C30183 - C70502 * C30187 +
             C153855 * C30189) *
                C153638 * C154051) *
               C153711 * C334) *
              C335 +
          (((C70850 + C70849) * C153638 * C154117 + C79873 * C153638 * C154114 +
            C79882 * C153638 * C154105 +
            (C79909 + C79910) * C153638 * C154051) *
               C153711 * C333 -
           (C78879 * C153638 * C154051 + C78819 * C153638 * C154105 +
            C78820 * C153638 * C154114 +
            (C70566 + C70565) * C153638 * C154117) *
               C153711 * C332 -
           ((C70502 * C32003 - C70503 * C32002 - C70502 * C32004 +
             C153855 * C32005 + C70500 * C6373 - C70501 * C6365 -
             C70500 * C6374 + C70494 * C6383) *
                C153638 * C154051 +
            (C78494 + C78493) * C153638 * C154105 +
            (C78492 + C78491) * C153638 * C154114 +
            (C70852 + C70851) * C153638 * C154117) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C153638 * C154117 +
            (C78866 + C78867) * C153638 * C154114 + C134563 * C154105 +
            C134567 * C154051) *
               C563 -
           ((C82488 + C82487) * C153638 * C154051 + C82472 * C153638 * C154105 +
            (C78869 + C78868) * C153638 * C154114 +
            (C78867 + C78866) * C153638 * C154117) *
               C564 +
           (C134563 * C154117 + C134567 * C154114 +
            (C82487 + C82488) * C153638 * C154105 +
            (C70500 * C10558 - C70501 * C10553 - C70500 * C10559 +
             C70494 * C10562 + C70502 * C34033 - C70503 * C34030 -
             C70502 * C34034 + C153855 * C34036) *
                C153638 * C154051) *
               C565) *
              C153695 * C335 +
          ((C78793 * C153638 * C154117 + C78802 * C153638 * C154114 +
            C78880 * C153638 * C154105 +
            (C78874 + C78875) * C153638 * C154051) *
               C564 -
           (C134565 * C154051 + C134566 * C154105 + C78820 * C153638 * C154114 +
            (C70566 + C70565) * C153638 * C154117) *
               C563 -
           ((C70502 * C56410 - C70503 * C56409 - C70502 * C56411 +
             C153855 * C56412 + C70500 * C10556 - C70501 * C10552 -
             C70500 * C10557 + C70494 * C10561) *
                C153638 * C154051 +
            (C78875 + C78874) * C153638 * C154105 + C134565 * C154114 +
            C134566 * C154117) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C153638 * C98524 +
            (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
               C154022 -
           ((C130955 + C130956 + C130957 + C130958) * C153638 * C153897 +
            (C130954 + C130953 + C130952 + C130951) * C153638 * C98524) *
               C153775) *
              C153695 * C154090 +
          (((C74906 + C74905 + C74904 + C74903) * C153638 * C98524 +
            (C74907 + C74908 + C74909 + C74910) * C153638 * C153897) *
               C153775 -
           ((C74903 + C74904 + C74905 + C74906) * C153638 * C153897 +
            (C74402 + C74401 + C74400 + C74399) * C153638 * C98524) *
               C154022) *
              C153695 * C154091 +
          (((C74406 + C74405 + C74404 + C74403) * C153638 * C98524 +
            (C75351 + C75352 + C75353 + C75354) * C153638 * C153897) *
               C154022 -
           ((C74324 * C5034 - C74325 * C5031 - C74324 * C5035 +
             C154044 * C5040 + C74322 * C3515 - C74323 * C3509 -
             C74322 * C3516 + C154102 * C3521 + C74320 * C1522 -
             C74321 * C1515 - C74320 * C1523 + C154112 * C1530 + C74318 * C592 -
             C74319 * C573 - C74318 * C593 + C154116 * C609) *
                C153638 * C153897 +
            (C75354 + C75353 + C75352 + C75351) * C153638 * C98524) *
               C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154106 +
             (C70565 + C70566) * C154087 + C70575 * C154058) *
                C98524 +
            ((C78866 + C78867) * C154106 + C78793 * C154087 +
             C79477 * C154058) *
                C153897) *
               C154022 -
           ((C78837 * C154058 + C78819 * C154087 +
             (C78869 + C78868) * C154106) *
                C153897 +
            (C71540 * C154058 + C78820 * C154087 +
             (C78867 + C78866) * C154106) *
                C98524) *
               C153775) *
              C153695 * C154090 +
          (((C78793 * C154106 + C79477 * C154087 + C89104 * C154058) * C98524 +
            (C78802 * C154106 + C79478 * C154087 +
             (C71133 + C71134) * C154058) *
                C153897) *
               C153775 -
           ((C71539 * C154058 + C71540 * C154087 + C78820 * C154106) * C153897 +
            (C70578 * C154058 + (C70568 + C70567) * C154087 +
             (C70566 + C70565) * C154106) *
                C98524) *
               C154022) *
              C153695 * C154091 +
          (((C70575 * C154106 + C70576 * C154087 +
             (C70572 + C70571) * C154058) *
                C98524 +
            (C79477 * C154106 + C89104 * C154087 +
             (C71553 + C71554) * C154058) *
                C153897) *
               C154022 -
           (((C70502 * C1518 - C70503 * C1513 - C70502 * C1519 +
              C153855 * C1528 + C70500 * C596 - C70501 * C575 - C70500 * C597 +
              C70494 * C611) *
                 C154058 +
             (C71134 + C71133) * C154087 + C78837 * C154106) *
                C153897 +
            ((C71554 + C71553) * C154058 + C71539 * C154087 +
             C71540 * C154106) *
                C98524) *
               C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C153638 * C154117 +
            (C78866 + C78867) * C153638 * C154114 + C134563 * C154105 +
            C134567 * C154051) *
               C154022 -
           ((C82488 + C82487) * C153638 * C154051 + C82472 * C153638 * C154105 +
            (C78869 + C78868) * C153638 * C154114 +
            (C78867 + C78866) * C153638 * C154117) *
               C153775) *
              C153695 * C154090 +
          ((C78793 * C153638 * C154117 + C78802 * C153638 * C154114 +
            C78880 * C153638 * C154105 +
            (C78874 + C78875) * C153638 * C154051) *
               C153775 -
           (C134565 * C154051 + C134566 * C154105 + C78820 * C153638 * C154114 +
            (C70566 + C70565) * C153638 * C154117) *
               C154022) *
              C153695 * C154091 +
          ((C70575 * C153638 * C154117 + C79477 * C153638 * C154114 +
            C79478 * C153638 * C154105 +
            (C78876 + C78877) * C153638 * C154051) *
               C154022 -
           ((C70502 * C9202 - C70503 * C9199 - C70502 * C9203 +
             C153855 * C9208 + C70500 * C7748 - C70501 * C7742 -
             C70500 * C7749 + C70494 * C7754) *
                C153638 * C154051 +
            (C78877 + C78876) * C153638 * C154105 + C78837 * C153638 * C154114 +
            C71540 * C153638 * C154117) *
               C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154106 +
             (C70565 + C70566) * C154087 + C70575 * C154058) *
                C98524 +
            ((C78866 + C78867) * C154106 + C78793 * C154087 +
             C79477 * C154058) *
                C153897) *
               C153711 * C332 -
           ((C88813 * C154058 + C79892 * C154087 +
             (C79906 + C79905) * C154106) *
                C153897 +
            (C71330 * C154058 + (C70849 + C70850) * C154087 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C154106) *
                C98524) *
               C153711 * C333 +
           (((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
              C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
              C153855 * C1390) *
                 C154106 +
             (C70851 + C70852) * C154087 + (C70853 + C70854) * C154058) *
                C98524 +
            ((C81693 + C81694) * C154106 + (C78491 + C78492) * C154087 +
             (C88231 + C88232) * C154058) *
                C153897) *
               C153711 * C334) *
              C335 +
          ((((C70850 + C70849) * C154106 + (C70848 + C70847) * C154087 +
             (C70846 + C70845) * C154058) *
                C98524 +
            (C79873 * C154106 + C89491 * C154087 +
             (C71853 + C71854) * C154058) *
                C153897) *
               C153711 * C333 -
           ((C71539 * C154058 + C71540 * C154087 + C78820 * C154106) * C153897 +
            (C70578 * C154058 + (C70568 + C70567) * C154087 +
             (C70566 + C70565) * C154106) *
                C98524) *
               C153711 * C332 -
           (((C70502 * C4389 - C70503 * C4382 - C70502 * C4390 +
              C153855 * C4394 + C70500 * C1951 - C70501 * C1945 -
              C70500 * C1952 + C70494 * C1960) *
                 C154058 +
             (C88232 + C88231) * C154087 + (C78492 + C78491) * C154106) *
                C153897 +
            ((C70856 + C70855) * C154058 + (C70854 + C70853) * C154087 +
             (C70852 + C70851) * C154106) *
                C98524) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154106 +
            (C70565 + C70566) * C154087 + C70575 * C154058) *
               C98524 +
           ((C78866 + C78867) * C154106 + C78793 * C154087 + C79477 * C154058) *
               C153897) *
              C153711 * C153695 * C130 -
          ((C71539 * C154058 + C71540 * C154087 + C78820 * C154106) * C153897 +
           (C70578 * C154058 + (C70568 + C70567) * C154087 +
            (C70566 + C70565) * C154106) *
               C98524) *
              C153711 * C153695 * C131 +
          ((C70575 * C154106 + C70576 * C154087 + (C70572 + C70571) * C154058) *
               C98524 +
           (C79477 * C154106 + C89104 * C154087 + (C71553 + C71554) * C154058) *
               C153897) *
              C153711 * C153695 * C132 -
          (((C70502 * C1121 - C70503 * C1110 - C70502 * C1122 +
             C153855 * C1128 + C70500 * C598 - C70501 * C576 - C70500 * C599 +
             C70494 * C612) *
                C154058 +
            (C71554 + C71553) * C154087 + C71539 * C154106) *
               C153897 +
           ((C70574 + C70573) * C154058 + C70577 * C154087 + C70578 * C154106) *
               C98524) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
            C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
            C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
            C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
            C154044 * C1390) *
               C153638 * C98524 +
           (C74318 * C586 - C74319 * C570 - C74318 * C587 + C154116 * C606 +
            C74320 * C1111 - C74321 * C1105 - C74320 * C1112 + C154112 * C1123 +
            C74322 * C1957 - C74323 * C1948 - C74322 * C1958 + C154102 * C1963 +
            C74324 * C4383 - C74325 * C4379 - C74324 * C4384 +
            C154044 * C4391) *
               C153638 * C153897) *
              C153711 * C153695 * C130 -
          ((C74903 + C74904 + C74905 + C74906) * C153638 * C153897 +
           (C74402 + C74401 + C74400 + C74399) * C153638 * C98524) *
              C153711 * C153695 * C131 +
          ((C74406 + C74405 + C74404 + C74403) * C153638 * C98524 +
           (C75351 + C75352 + C75353 + C75354) * C153638 * C153897) *
              C153711 * C153695 * C132 -
          ((C74324 * C4389 - C74325 * C4382 - C74324 * C4390 + C154044 * C4394 +
            C74322 * C1951 - C74323 * C1945 - C74322 * C1952 + C154102 * C1960 +
            C74320 * C1117 - C74321 * C1108 - C74320 * C1118 + C154112 * C1126 +
            C74318 * C580 - C74319 * C567 - C74318 * C581 + C154116 * C603) *
               C153638 * C153897 +
           (C74410 + C74409 + C74408 + C74407) * C153638 * C98524) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C153638 * C98524 +
            (C74318 * C586 - C74319 * C570 - C74318 * C587 + C154116 * C606 +
             C74320 * C1111 - C74321 * C1105 - C74320 * C1112 +
             C154112 * C1123 + C74322 * C1957 - C74323 * C1948 -
             C74322 * C1958 + C154102 * C1963 + C74324 * C4383 -
             C74325 * C4379 - C74324 * C4384 + C154044 * C4391) *
                C153638 * C153897) *
               C153711 * C332 -
           ((C74324 * C5776 - C74325 * C5771 - C74324 * C5777 +
             C154044 * C5780 + C74322 * C4383 - C74323 * C4379 -
             C74322 * C4384 + C154102 * C4391 + C74320 * C1957 -
             C74321 * C1948 - C74320 * C1958 + C154112 * C1963 +
             C74318 * C1111 - C74319 * C1105 - C74318 * C1112 +
             C154116 * C1123) *
                C153638 * C153897 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C153638 * C98524) *
               C153711 * C333 +
           ((C74318 * C359 - C74319 * C342 - C74318 * C360 + C154116 * C378 +
             C74320 * C1384 - C74321 * C1375 - C74320 * C1385 +
             C154112 * C1390 + C74322 * C3193 - C74323 * C3189 -
             C74322 * C3194 + C154102 * C3201 + C74324 * C4808 -
             C74325 * C4803 - C74324 * C4809 + C154044 * C4812) *
                C153638 * C98524 +
            (C74318 * C1957 - C74319 * C1948 - C74318 * C1958 +
             C154116 * C1963 + C74320 * C4383 - C74321 * C4379 -
             C74320 * C4384 + C154112 * C4391 + C74322 * C5776 -
             C74323 * C5771 - C74322 * C5777 + C154102 * C5780 +
             C74324 * C29106 - C74325 * C29104 - C74324 * C29107 +
             C154044 * C29110) *
                C153638 * C153897) *
               C153711 * C334) *
              C335 +
          (((C74656 + C74655 + C74654 + C74653) * C153638 * C98524 +
            (C75637 + C75638 + C75639 + C75640) * C153638 * C153897) *
               C153711 * C333 -
           ((C74903 + C74904 + C74905 + C74906) * C153638 * C153897 +
            (C74402 + C74401 + C74400 + C74399) * C153638 * C98524) *
               C153711 * C332 -
           ((C74324 * C29108 - C74325 * C29105 - C74324 * C29109 +
             C154044 * C29111 + C74322 * C5774 - C74323 * C5770 -
             C74322 * C5775 + C154102 * C5779 + C74320 * C4385 -
             C74321 * C4380 - C74320 * C4386 + C154112 * C4392 +
             C74318 * C1955 - C74319 * C1947 - C74318 * C1956 +
             C154116 * C1962) *
                C153638 * C153897 +
            (C74660 + C74659 + C74658 + C74657) * C153638 * C98524) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
            C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
               C153638 * C154117 +
           (C78866 + C78867) * C153638 * C154114 + C78878 * C153638 * C154105 +
           (C78873 + C78872) * C153638 * C154051) *
              C153711 * C153695 * C130 -
          (C78879 * C153638 * C154051 + C78819 * C153638 * C154105 +
           C78820 * C153638 * C154114 + (C70566 + C70565) * C153638 * C154117) *
              C153711 * C153695 * C131 +
          (C70575 * C153638 * C154117 + C79477 * C153638 * C154114 +
           C79478 * C153638 * C154105 + (C78876 + C78877) * C153638 * C154051) *
              C153711 * C153695 * C132 -
          ((C70502 * C8574 - C70503 * C8573 - C70502 * C8575 + C153855 * C8576 +
            C70500 * C2303 - C70501 * C2297 - C70500 * C2304 + C70494 * C2312) *
               C153638 * C154051 +
           (C71134 + C71133) * C153638 * C154105 + C71539 * C153638 * C154114 +
           C70578 * C153638 * C154117) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C153638 * C154117 +
            (C78866 + C78867) * C153638 * C154114 + C78878 * C153638 * C154105 +
            (C78873 + C78872) * C153638 * C154051) *
               C153711 * C332 -
           ((C80702 + C80701) * C153638 * C154051 + C80694 * C153638 * C154105 +
            (C79906 + C79905) * C153638 * C154114 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C153638 * C154117) *
               C153711 * C333 +
           ((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
             C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
             C153855 * C1390) *
                C153638 * C154117 +
            (C81693 + C81694) * C153638 * C154114 +
            (C81695 + C81696) * C153638 * C154105 +
            (C70500 * C6377 - C70501 * C6367 - C70500 * C6378 + C70494 * C6385 +
             C70502 * C30186 - C70503 * C30183 - C70502 * C30187 +
             C153855 * C30189) *
                C153638 * C154051) *
               C153711 * C334) *
              C335 +
          (((C70850 + C70849) * C153638 * C154117 + C79873 * C153638 * C154114 +
            C79882 * C153638 * C154105 +
            (C79909 + C79910) * C153638 * C154051) *
               C153711 * C333 -
           (C78879 * C153638 * C154051 + C78819 * C153638 * C154105 +
            C78820 * C153638 * C154114 +
            (C70566 + C70565) * C153638 * C154117) *
               C153711 * C332 -
           ((C70502 * C32003 - C70503 * C32002 - C70502 * C32004 +
             C153855 * C32005 + C70500 * C6373 - C70501 * C6365 -
             C70500 * C6374 + C70494 * C6383) *
                C153638 * C154051 +
            (C78494 + C78493) * C153638 * C154105 +
            (C78492 + C78491) * C153638 * C154114 +
            (C70852 + C70851) * C153638 * C154117) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C153638 * C98524 +
            (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
               C153711 * C154092 -
           ((C131632 + C131631 + C131630 + C131629) * C153638 * C153897 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C153638 * C98524) *
               C153711 * C154093 +
           ((C74318 * C359 - C74319 * C342 - C74318 * C360 + C154116 * C378 +
             C74320 * C1384 - C74321 * C1375 - C74320 * C1385 +
             C154112 * C1390 + C74322 * C3193 - C74323 * C3189 -
             C74322 * C3194 + C154102 * C3201 + C74324 * C4808 -
             C74325 * C4803 - C74324 * C4809 + C154044 * C4812) *
                C153638 * C98524 +
            (C74318 * C1957 - C74319 * C1948 - C74318 * C1958 +
             C154116 * C1963 + C74320 * C4383 - C74321 * C4379 -
             C74320 * C4384 + C154112 * C4391 + C74322 * C5776 -
             C74323 * C5771 - C74322 * C5777 + C154102 * C5780 +
             C74324 * C29106 - C74325 * C29104 - C74324 * C29107 +
             C154044 * C29110) *
                C153638 * C153897) *
               C153711 * C1657) *
              C154013 +
          (((C74656 + C74655 + C74654 + C74653) * C153638 * C98524 +
            (C75637 + C75638 + C75639 + C75640) * C153638 * C153897) *
               C153711 * C154093 -
           ((C74903 + C74904 + C74905 + C74906) * C153638 * C153897 +
            (C74402 + C74401 + C74400 + C74399) * C153638 * C98524) *
               C153711 * C154092 -
           ((C74324 * C29108 - C74325 * C29105 - C74324 * C29109 +
             C154044 * C29111 + C74322 * C5774 - C74323 * C5770 -
             C74322 * C5775 + C154102 * C5779 + C74320 * C4385 -
             C74321 * C4380 - C74320 * C4386 + C154112 * C4392 +
             C74318 * C1955 - C74319 * C1947 - C74318 * C1956 +
             C154116 * C1962) *
                C153638 * C153897 +
            (C74660 + C74659 + C74658 + C74657) * C153638 * C98524) *
               C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154106 +
             (C70565 + C70566) * C154087 + C70575 * C154058) *
                C98524 +
            ((C78866 + C78867) * C154106 + C78793 * C154087 +
             C79477 * C154058) *
                C153897) *
               C153711 * C154092 -
           ((C88813 * C154058 + C79892 * C154087 +
             (C79906 + C79905) * C154106) *
                C153897 +
            (C71330 * C154058 + (C70849 + C70850) * C154087 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C154106) *
                C98524) *
               C153711 * C154093 +
           (((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
              C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
              C153855 * C1390) *
                 C154106 +
             (C70851 + C70852) * C154087 + (C70853 + C70854) * C154058) *
                C98524 +
            ((C81693 + C81694) * C154106 + (C78491 + C78492) * C154087 +
             (C88231 + C88232) * C154058) *
                C153897) *
               C153711 * C1657) *
              C154013 +
          ((((C70850 + C70849) * C154106 + (C70848 + C70847) * C154087 +
             (C70846 + C70845) * C154058) *
                C98524 +
            (C79873 * C154106 + C89491 * C154087 +
             (C71853 + C71854) * C154058) *
                C153897) *
               C153711 * C154093 -
           ((C71539 * C154058 + C71540 * C154087 + C78820 * C154106) * C153897 +
            (C70578 * C154058 + (C70568 + C70567) * C154087 +
             (C70566 + C70565) * C154106) *
                C98524) *
               C153711 * C154092 -
           (((C70502 * C4389 - C70503 * C4382 - C70502 * C4390 +
              C153855 * C4394 + C70500 * C1951 - C70501 * C1945 -
              C70500 * C1952 + C70494 * C1960) *
                 C154058 +
             (C88232 + C88231) * C154087 + (C78492 + C78491) * C154106) *
                C153897 +
            ((C70856 + C70855) * C154058 + (C70854 + C70853) * C154087 +
             (C70852 + C70851) * C154106) *
                C98524) *
               C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C153638 * C154117 +
            (C78866 + C78867) * C153638 * C154114 + C134563 * C154105 +
            C134567 * C154051) *
               C153711 * C154092 -
           (C135744 * C154051 + C135741 * C154105 +
            (C79906 + C79905) * C153638 * C154114 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C153638 * C154117) *
               C153711 * C154093 +
           ((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
             C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
             C153855 * C1390) *
                C153638 * C154117 +
            (C81693 + C81694) * C153638 * C154114 +
            (C81695 + C81696) * C153638 * C154105 +
            (C70500 * C6377 - C70501 * C6367 - C70500 * C6378 + C70494 * C6385 +
             C70502 * C30186 - C70503 * C30183 - C70502 * C30187 +
             C153855 * C30189) *
                C153638 * C154051) *
               C153711 * C1657) *
              C154013 +
          (((C70850 + C70849) * C153638 * C154117 + C79873 * C153638 * C154114 +
            C79882 * C153638 * C154105 +
            (C79909 + C79910) * C153638 * C154051) *
               C153711 * C154093 -
           (C134565 * C154051 + C134566 * C154105 + C78820 * C153638 * C154114 +
            (C70566 + C70565) * C153638 * C154117) *
               C153711 * C154092 -
           ((C70502 * C32003 - C70503 * C32002 - C70502 * C32004 +
             C153855 * C32005 + C70500 * C6373 - C70501 * C6365 -
             C70500 * C6374 + C70494 * C6383) *
                C153638 * C154051 +
            (C78494 + C78493) * C153638 * C154105 +
            (C78492 + C78491) * C153638 * C154114 +
            (C70852 + C70851) * C153638 * C154117) *
               C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C153638 * C98524 +
            (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
               C154022 -
           ((C130955 + C130956 + C130957 + C130958) * C153638 * C153897 +
            (C130954 + C130953 + C130952 + C130951) * C153638 * C98524) *
               C153775) *
              C154092 +
          (((C131629 + C131630 + C131631 + C131632) * C153638 * C98524 +
            (C132175 + C132176 + C132177 + C132178) * C153638 * C153897) *
               C153775 -
           ((C131632 + C131631 + C131630 + C131629) * C153638 * C153897 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C153638 * C98524) *
               C154022) *
              C154093 +
          (((C74318 * C359 - C74319 * C342 - C74318 * C360 + C154116 * C378 +
             C74320 * C1384 - C74321 * C1375 - C74320 * C1385 +
             C154112 * C1390 + C74322 * C3193 - C74323 * C3189 -
             C74322 * C3194 + C154102 * C3201 + C74324 * C4808 -
             C74325 * C4803 - C74324 * C4809 + C154044 * C4812) *
                C153638 * C98524 +
            (C132849 + C132850 + C132851 + C132852) * C153638 * C153897) *
               C154022 -
           ((C74324 * C29443 - C74325 * C29442 - C74324 * C29444 +
             C154044 * C29445 + C74322 * C28692 - C74323 * C28690 -
             C74322 * C28693 + C154102 * C28696 + C74320 * C5038 -
             C74321 * C5033 - C74320 * C5039 + C154112 * C5042 +
             C74318 * C3511 - C74319 * C3507 - C74318 * C3512 +
             C154116 * C3519) *
                C153638 * C153897 +
            (C132852 + C132851 + C132850 + C132849) * C153638 * C98524) *
               C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154106 +
             (C70565 + C70566) * C154087 + C70575 * C154058) *
                C98524 +
            ((C78866 + C78867) * C154106 + C78793 * C154087 +
             C79477 * C154058) *
                C153897) *
               C154022 -
           ((C78837 * C154058 + C78819 * C154087 +
             (C78869 + C78868) * C154106) *
                C153897 +
            (C71540 * C154058 + C78820 * C154087 +
             (C78867 + C78866) * C154106) *
                C98524) *
               C153775) *
              C154092 +
          ((((C79905 + C79906) * C154106 + C79873 * C154087 +
             C89491 * C154058) *
                C98524 +
            ((C79907 + C79908) * C154106 + C79882 * C154087 +
             (C79185 + C79186) * C154058) *
                C153897) *
               C153775 -
           ((C88813 * C154058 + C79892 * C154087 +
             (C79906 + C79905) * C154106) *
                C153897 +
            (C71330 * C154058 + (C70849 + C70850) * C154087 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C154106) *
                C98524) *
               C154022) *
              C154093 +
          ((((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
              C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
              C153855 * C1390) *
                 C154106 +
             (C70851 + C70852) * C154087 + (C70853 + C70854) * C154058) *
                C98524 +
            ((C81693 + C81694) * C154106 + (C78491 + C78492) * C154087 +
             (C88231 + C88232) * C154058) *
                C153897) *
               C154022 -
           (((C70502 * C5034 - C70503 * C5031 - C70502 * C5035 +
              C153855 * C5040 + C70500 * C3515 - C70501 * C3509 -
              C70500 * C3516 + C70494 * C3521) *
                 C154058 +
             (C78494 + C78493) * C154087 + (C81696 + C81695) * C154106) *
                C153897 +
            ((C88232 + C88231) * C154058 + (C78492 + C78491) * C154087 +
             (C81694 + C81693) * C154106) *
                C98524) *
               C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C153638 * C154117 +
            (C78866 + C78867) * C153638 * C154114 + C134563 * C154105 +
            C134567 * C154051) *
               C154022 -
           ((C82488 + C82487) * C153638 * C154051 + C82472 * C153638 * C154105 +
            (C78869 + C78868) * C153638 * C154114 +
            (C78867 + C78866) * C153638 * C154117) *
               C153775) *
              C154092 +
          (((C79905 + C79906) * C153638 * C154117 +
            (C79907 + C79908) * C153638 * C154114 +
            (C80701 + C80702) * C153638 * C154105 +
            (C135747 + C135748) * C153638 * C154051) *
               C153775 -
           (C135744 * C154051 + C135741 * C154105 +
            (C79906 + C79905) * C153638 * C154114 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C153638 * C154117) *
               C154022) *
              C154093 +
          (((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
             C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
             C153855 * C1390) *
                C153638 * C154117 +
            (C81693 + C81694) * C153638 * C154114 +
            (C81695 + C81696) * C153638 * C154105 +
            (C136407 + C136408) * C153638 * C154051) *
               C154022 -
           ((C70502 * C32652 - C70503 * C32651 - C70502 * C32653 +
             C153855 * C32654 + C70500 * C31180 - C70501 * C31178 -
             C70500 * C31181 + C70494 * C31184) *
                C153638 * C154051 +
            (C136408 + C136407) * C153638 * C154105 +
            (C81696 + C81695) * C153638 * C154114 +
            (C81694 + C81693) * C153638 * C154117) *
               C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C70500 * C144 - C70501 * C136 - C70500 * C145 +
                  C70494 * C160 + C70502 * C357 - C70503 * C341 -
                  C70502 * C358 + C153855 * C377) *
                     C154106 +
                 (C70565 + C70566) * C154087 + C70575 * C154058) *
                    C98524 +
                ((C78866 + C78867) * C154106 + C78793 * C154087 +
                 C79477 * C154058) *
                    C153897) *
                   C153711 * C1279 -
               ((C88813 * C154058 + C79892 * C154087 +
                 (C79906 + C79905) * C154106) *
                    C153897 +
                (C71330 * C154058 + (C70849 + C70850) * C154087 +
                 (C70502 * C359 - C70503 * C342 - C70502 * C360 +
                  C153855 * C378 + C70500 * C357 - C70501 * C341 -
                  C70500 * C358 + C70494 * C377) *
                     C154106) *
                    C98524) *
                   C153711 * C153747) *
                  C1281 +
              ((((C70850 + C70849) * C154106 + (C70848 + C70847) * C154087 +
                 (C70846 + C70845) * C154058) *
                    C98524 +
                (C79873 * C154106 + C89491 * C154087 +
                 (C71853 + C71854) * C154058) *
                    C153897) *
                   C153711 * C153747 -
               ((C71539 * C154058 + C71540 * C154087 + C78820 * C154106) *
                    C153897 +
                (C70578 * C154058 + (C70568 + C70567) * C154087 +
                 (C70566 + C70565) * C154106) *
                    C98524) *
                   C153711 * C1279) *
                  C1282 +
              (((C70575 * C154106 + C70576 * C154087 +
                 (C70572 + C70571) * C154058) *
                    C98524 +
                (C79477 * C154106 + C89104 * C154087 +
                 (C71553 + C71554) * C154058) *
                    C153897) *
                   C153711 * C1279 -
               (((C70502 * C1949 - C70503 * C1944 - C70502 * C1950 +
                  C153855 * C1959 + C70500 * C1119 - C70501 * C1109 -
                  C70500 * C1120 + C70494 * C1127) *
                     C154058 +
                 (C71854 + C71853) * C154087 + C88813 * C154106) *
                    C153897 +
                ((C71344 + C71343) * C154058 + C71329 * C154087 +
                 C71330 * C154106) *
                    C98524) *
                   C153711 * C153747) *
                  C1283) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
                 C70502 * C357 - C70503 * C341 - C70502 * C358 +
                 C153855 * C377) *
                    C154106 +
                (C70565 + C70566) * C154087 + C70575 * C154058) *
                   C98524 +
               ((C78866 + C78867) * C154106 + C78793 * C154087 +
                C79477 * C154058) *
                   C153897) *
                  C153711 * C1366 -
              ((C88813 * C154058 + C79892 * C154087 +
                (C79906 + C79905) * C154106) *
                   C153897 +
               (C71330 * C154058 + (C70849 + C70850) * C154087 +
                (C70502 * C359 - C70503 * C342 - C70502 * C360 +
                 C153855 * C378 + C70500 * C357 - C70501 * C341 -
                 C70500 * C358 + C70494 * C377) *
                    C154106) *
                   C98524) *
                  C153711 * C1367 +
              (((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
                 C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
                 C153855 * C1390) *
                    C154106 +
                (C70851 + C70852) * C154087 + (C70853 + C70854) * C154058) *
                   C98524 +
               ((C81693 + C81694) * C154106 + (C78491 + C78492) * C154087 +
                (C88231 + C88232) * C154058) *
                   C153897) *
                  C153711 * C1368 -
              (((C70502 * C5772 - C70503 * C5769 - C70502 * C5773 +
                 C153855 * C5778 + C70500 * C4387 - C70501 * C4381 -
                 C70500 * C4388 + C70494 * C4393) *
                    C154058 +
                (C70502 * C5774 - C70503 * C5770 - C70502 * C5775 +
                 C153855 * C5779 + C70500 * C4385 - C70501 * C4380 -
                 C70500 * C4386 + C70494 * C4392) *
                    C154087 +
                (C70502 * C5776 - C70503 * C5771 - C70502 * C5777 +
                 C153855 * C5780 + C70500 * C4383 - C70501 * C4379 -
                 C70500 * C4384 + C70494 * C4391) *
                    C154106) *
                   C153897 +
               ((C70502 * C3197 - C70503 * C3191 - C70502 * C3198 +
                 C153855 * C3203 + C70500 * C1380 - C70501 * C1373 -
                 C70500 * C1381 + C70494 * C1388) *
                    C154058 +
                (C70502 * C3195 - C70503 * C3190 - C70502 * C3196 +
                 C153855 * C3202 + C70500 * C1382 - C70501 * C1374 -
                 C70500 * C1383 + C70494 * C1389) *
                    C154087 +
                (C70502 * C3193 - C70503 * C3189 - C70502 * C3194 +
                 C153855 * C3201 + C70500 * C1384 - C70501 * C1375 -
                 C70500 * C1385 + C70494 * C1390) *
                    C154106) *
                   C98524) *
                  C153711 * C1369) *
             C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154106 +
             (C70565 + C70566) * C154087 + C70575 * C154058) *
                C98524 +
            ((C78866 + C78867) * C154106 + C78793 * C154087 +
             C79477 * C154058) *
                C153897) *
               C563 -
           ((C78837 * C154058 + C78819 * C154087 +
             (C78869 + C78868) * C154106) *
                C153897 +
            (C71540 * C154058 + C78820 * C154087 +
             (C78867 + C78866) * C154106) *
                C98524) *
               C564 +
           ((C78878 * C154106 + C78802 * C154087 + C79478 * C154058) * C98524 +
            ((C78873 + C78872) * C154106 + C78880 * C154087 +
             (C78876 + C78877) * C154058) *
                C153897) *
               C565) *
              C1279 +
          ((((C79905 + C79906) * C154106 + C79873 * C154087 +
             C89491 * C154058) *
                C98524 +
            ((C79907 + C79908) * C154106 + C79882 * C154087 +
             (C79185 + C79186) * C154058) *
                C153897) *
               C564 -
           ((C88813 * C154058 + C79892 * C154087 +
             (C79906 + C79905) * C154106) *
                C153897 +
            (C71330 * C154058 + (C70849 + C70850) * C154087 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C154106) *
                C98524) *
               C563 -
           (((C70502 * C6369 - C70503 * C6363 - C70502 * C6370 +
              C153855 * C6381 + C70500 * C6371 - C70501 * C6364 -
              C70500 * C6372 + C70494 * C6382) *
                 C154058 +
             (C79910 + C79909) * C154087 + (C80702 + C80701) * C154106) *
                C153897 +
            ((C79186 + C79185) * C154058 + C79891 * C154087 +
             C80694 * C154106) *
                C98524) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C153638 * C98524 +
            (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
               C153711 * C1279 -
           ((C131632 + C131631 + C131630 + C131629) * C153638 * C153897 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C153638 * C98524) *
               C153711 * C153747) *
              C1281 +
          (((C74656 + C74655 + C74654 + C74653) * C153638 * C98524 +
            (C75637 + C75638 + C75639 + C75640) * C153638 * C153897) *
               C153711 * C153747 -
           ((C74903 + C74904 + C74905 + C74906) * C153638 * C153897 +
            (C74402 + C74401 + C74400 + C74399) * C153638 * C98524) *
               C153711 * C1279) *
              C1282 +
          (((C74406 + C74405 + C74404 + C74403) * C153638 * C98524 +
            (C75351 + C75352 + C75353 + C75354) * C153638 * C153897) *
               C153711 * C1279 -
           ((C74324 * C5772 - C74325 * C5769 - C74324 * C5773 +
             C154044 * C5778 + C74322 * C4387 - C74323 * C4381 -
             C74322 * C4388 + C154102 * C4393 + C74320 * C1953 -
             C74321 * C1946 - C74320 * C1954 + C154112 * C1961 +
             C74318 * C1115 - C74319 * C1107 - C74318 * C1116 +
             C154116 * C1125) *
                C153638 * C153897 +
            (C75132 + C75131 + C75130 + C75129) * C153638 * C98524) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
            C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
            C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
            C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
            C154044 * C1390) *
               C153638 * C98524 +
           (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
              C153711 * C1366 -
          ((C131632 + C131631 + C131630 + C131629) * C153638 * C153897 +
           (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 + C154044 * C3201 +
            C74322 * C1384 - C74323 * C1375 - C74322 * C1385 + C154102 * C1390 +
            C74320 * C359 - C74321 * C342 - C74320 * C360 + C154112 * C378 +
            C74318 * C357 - C74319 * C341 - C74318 * C358 + C154116 * C377) *
               C153638 * C98524) *
              C153711 * C1367 +
          ((C74318 * C359 - C74319 * C342 - C74318 * C360 + C154116 * C378 +
            C74320 * C1384 - C74321 * C1375 - C74320 * C1385 + C154112 * C1390 +
            C74322 * C3193 - C74323 * C3189 - C74322 * C3194 + C154102 * C3201 +
            C74324 * C4808 - C74325 * C4803 - C74324 * C4809 +
            C154044 * C4812) *
               C153638 * C98524 +
           (C74318 * C1957 - C74319 * C1948 - C74318 * C1958 + C154116 * C1963 +
            C74320 * C4383 - C74321 * C4379 - C74320 * C4384 + C154112 * C4391 +
            C74322 * C5776 - C74323 * C5771 - C74322 * C5777 + C154102 * C5780 +
            C74324 * C29106 - C74325 * C29104 - C74324 * C29107 +
            C154044 * C29110) *
               C153638 * C153897) *
              C153711 * C1368 -
          ((C74324 * C29853 - C74325 * C29852 - C74324 * C29854 +
            C154044 * C29855 + C74322 * C29106 - C74323 * C29104 -
            C74322 * C29107 + C154102 * C29110 + C74320 * C5776 -
            C74321 * C5771 - C74320 * C5777 + C154112 * C5780 + C74318 * C4383 -
            C74319 * C4379 - C74318 * C4384 + C154116 * C4391) *
               C153638 * C153897 +
           (C74324 * C28562 - C74325 * C28560 - C74324 * C28563 +
            C154044 * C28566 + C74322 * C4808 - C74323 * C4803 -
            C74322 * C4809 + C154102 * C4812 + C74320 * C3193 - C74321 * C3189 -
            C74320 * C3194 + C154112 * C3201 + C74318 * C1384 - C74319 * C1375 -
            C74318 * C1385 + C154116 * C1390) *
               C153638 * C98524) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C153638 * C98524 +
            (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
               C563 -
           ((C130955 + C130956 + C130957 + C130958) * C153638 * C153897 +
            (C130954 + C130953 + C130952 + C130951) * C153638 * C98524) *
               C564 +
           ((C130958 + C130957 + C130956 + C130955) * C153638 * C98524 +
            (C74318 * C2309 - C74319 * C2300 - C74318 * C2310 +
             C154116 * C2315 + C74320 * C6379 - C74321 * C6368 -
             C74320 * C6380 + C154112 * C6386 + C74322 * C6377 -
             C74323 * C6367 - C74322 * C6378 + C154102 * C6385 +
             C74324 * C30186 - C74325 * C30183 - C74324 * C30187 +
             C154044 * C30189) *
                C153638 * C153897) *
               C565) *
              C1279 +
          (((C131629 + C131630 + C131631 + C131632) * C153638 * C98524 +
            (C132175 + C132176 + C132177 + C132178) * C153638 * C153897) *
               C564 -
           ((C131632 + C131631 + C131630 + C131629) * C153638 * C153897 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C153638 * C98524) *
               C563 -
           ((C74324 * C30184 - C74325 * C30182 - C74324 * C30185 +
             C154044 * C30188 + C74322 * C30186 - C74323 * C30183 -
             C74322 * C30187 + C154102 * C30189 + C74320 * C6377 -
             C74321 * C6367 - C74320 * C6378 + C154112 * C6385 +
             C74318 * C6379 - C74319 * C6368 - C74318 * C6380 +
             C154116 * C6386) *
                C153638 * C153897 +
            (C132178 + C132177 + C132176 + C132175) * C153638 * C98524) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C153638 * C154117 +
            (C78866 + C78867) * C153638 * C154114 + C134563 * C154105 +
            C134567 * C154051) *
               C153711 * C1279 -
           ((C80702 + C80701) * C153638 * C154051 + C80694 * C153638 * C154105 +
            (C79906 + C79905) * C153638 * C154114 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C153638 * C154117) *
               C153711 * C153747) *
              C1281 +
          (((C70850 + C70849) * C153638 * C154117 + C79873 * C153638 * C154114 +
            C79882 * C153638 * C154105 +
            (C79909 + C79910) * C153638 * C154051) *
               C153711 * C153747 -
           (C134565 * C154051 + C134566 * C154105 + C78820 * C153638 * C154114 +
            (C70566 + C70565) * C153638 * C154117) *
               C153711 * C1279) *
              C1282 +
          ((C70575 * C153638 * C154117 + C79477 * C153638 * C154114 +
            C79478 * C153638 * C154105 +
            (C78876 + C78877) * C153638 * C154051) *
               C153711 * C1279 -
           ((C70502 * C6369 - C70503 * C6363 - C70502 * C6370 +
             C153855 * C6381 + C70500 * C6371 - C70501 * C6364 -
             C70500 * C6372 + C70494 * C6382) *
                C153638 * C154051 +
            (C79186 + C79185) * C153638 * C154105 + C88813 * C153638 * C154114 +
            C71330 * C153638 * C154117) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
            C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
               C153638 * C154117 +
           (C78866 + C78867) * C153638 * C154114 + C134563 * C154105 +
           C134567 * C154051) *
              C153711 * C1366 -
          ((C80702 + C80701) * C153638 * C154051 + C80694 * C153638 * C154105 +
           (C79906 + C79905) * C153638 * C154114 +
           (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
            C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
               C153638 * C154117) *
              C153711 * C1367 +
          ((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
            C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
            C153855 * C1390) *
               C153638 * C154117 +
           (C81693 + C81694) * C153638 * C154114 +
           (C81695 + C81696) * C153638 * C154105 +
           (C70500 * C6377 - C70501 * C6367 - C70500 * C6378 + C70494 * C6385 +
            C70502 * C30186 - C70503 * C30183 - C70502 * C30187 +
            C153855 * C30189) *
               C153638 * C154051) *
              C153711 * C1368 -
          ((C70502 * C30184 - C70503 * C30182 - C70502 * C30185 +
            C153855 * C30188 + C70500 * C30186 - C70501 * C30183 -
            C70500 * C30187 + C70494 * C30189) *
               C153638 * C154051 +
           (C70502 * C28692 - C70503 * C28690 - C70502 * C28693 +
            C153855 * C28696 + C70500 * C5038 - C70501 * C5033 -
            C70500 * C5039 + C70494 * C5042) *
               C153638 * C154105 +
           (C70502 * C5776 - C70503 * C5771 - C70502 * C5777 + C153855 * C5780 +
            C70500 * C4383 - C70501 * C4379 - C70500 * C4384 + C70494 * C4391) *
               C153638 * C154114 +
           (C70502 * C3193 - C70503 * C3189 - C70502 * C3194 + C153855 * C3201 +
            C70500 * C1384 - C70501 * C1375 - C70500 * C1385 + C70494 * C1390) *
               C153638 * C154117) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C153638 * C154117 +
            (C78866 + C78867) * C153638 * C154114 + C134563 * C154105 +
            C134567 * C154051) *
               C563 -
           ((C82488 + C82487) * C153638 * C154051 + C82472 * C153638 * C154105 +
            (C78869 + C78868) * C153638 * C154114 +
            (C78867 + C78866) * C153638 * C154117) *
               C564 +
           (C134563 * C154117 + C134567 * C154114 +
            (C82487 + C82488) * C153638 * C154105 +
            (C70500 * C10558 - C70501 * C10553 - C70500 * C10559 +
             C70494 * C10562 + C70502 * C34033 - C70503 * C34030 -
             C70502 * C34034 + C153855 * C34036) *
                C153638 * C154051) *
               C565) *
              C1279 +
          (((C79905 + C79906) * C153638 * C154117 +
            (C79907 + C79908) * C153638 * C154114 +
            (C80701 + C80702) * C153638 * C154105 +
            (C135747 + C135748) * C153638 * C154051) *
               C564 -
           (C135744 * C154051 + C135741 * C154105 +
            (C79906 + C79905) * C153638 * C154114 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C153638 * C154117) *
               C563 -
           ((C70502 * C34031 - C70503 * C34029 - C70502 * C34032 +
             C153855 * C34035 + C70500 * C34033 - C70501 * C34030 -
             C70500 * C34034 + C70494 * C34036) *
                C153638 * C154051 +
            (C135748 + C135747) * C153638 * C154105 + C135744 * C154114 +
            C135741 * C154117) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
              C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
              C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
              C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
              C154044 * C1390) *
                 C153638 * C98524 +
             (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
                C154022 -
            ((C130955 + C130956 + C130957 + C130958) * C153638 * C153897 +
             (C130954 + C130953 + C130952 + C130951) * C153638 * C98524) *
                C153775) *
               C1279 +
           (((C131629 + C131630 + C131631 + C131632) * C153638 * C98524 +
             (C132175 + C132176 + C132177 + C132178) * C153638 * C153897) *
                C153775 -
            ((C131632 + C131631 + C131630 + C131629) * C153638 * C153897 +
             (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
              C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
              C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
              C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
              C74318 * C358 + C154116 * C377) *
                 C153638 * C98524) *
                C154022) *
               C153747) *
              C154013 +
          ((((C74906 + C74905 + C74904 + C74903) * C153638 * C98524 +
             (C74907 + C74908 + C74909 + C74910) * C153638 * C153897) *
                C153775 -
            ((C74903 + C74904 + C74905 + C74906) * C153638 * C153897 +
             (C74402 + C74401 + C74400 + C74399) * C153638 * C98524) *
                C154022) *
               C1279 +
           (((C74656 + C74655 + C74654 + C74653) * C153638 * C98524 +
             (C75637 + C75638 + C75639 + C75640) * C153638 * C153897) *
                C154022 -
            ((C74324 * C28694 - C74325 * C28691 - C74324 * C28695 +
              C154044 * C28697 + C74322 * C5036 - C74323 * C5032 -
              C74322 * C5037 + C154102 * C5041 + C74320 * C3513 -
              C74321 * C3508 - C74320 * C3514 + C154112 * C3520 +
              C74318 * C1524 - C74319 * C1516 - C74318 * C1525 +
              C154116 * C1531) *
                 C153638 * C153897 +
             (C75640 + C75639 + C75638 + C75637) * C153638 * C98524) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
               C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                  C154106 +
              (C70565 + C70566) * C154087 + C70575 * C154058) *
                 C98524 +
             ((C78866 + C78867) * C154106 + C78793 * C154087 +
              C79477 * C154058) *
                 C153897) *
                C154022 -
            ((C78837 * C154058 + C78819 * C154087 +
              (C78869 + C78868) * C154106) *
                 C153897 +
             (C71540 * C154058 + C78820 * C154087 +
              (C78867 + C78866) * C154106) *
                 C98524) *
                C153775) *
               C1279 +
           ((((C79905 + C79906) * C154106 + C79873 * C154087 +
              C89491 * C154058) *
                 C98524 +
             ((C79907 + C79908) * C154106 + C79882 * C154087 +
              (C79185 + C79186) * C154058) *
                 C153897) *
                C153775 -
            ((C88813 * C154058 + C79892 * C154087 +
              (C79906 + C79905) * C154106) *
                 C153897 +
             (C71330 * C154058 + (C70849 + C70850) * C154087 +
              (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
               C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                  C154106) *
                 C98524) *
                C154022) *
               C153747) *
              C154013 +
          ((((C78793 * C154106 + C79477 * C154087 + C89104 * C154058) * C98524 +
             (C78802 * C154106 + C79478 * C154087 +
              (C71133 + C71134) * C154058) *
                 C153897) *
                C153775 -
            ((C71539 * C154058 + C71540 * C154087 + C78820 * C154106) *
                 C153897 +
             (C70578 * C154058 + (C70568 + C70567) * C154087 +
              (C70566 + C70565) * C154106) *
                 C98524) *
                C154022) *
               C1279 +
           ((((C70850 + C70849) * C154106 + (C70848 + C70847) * C154087 +
              (C70846 + C70845) * C154058) *
                 C98524 +
             (C79873 * C154106 + C89491 * C154087 +
              (C71853 + C71854) * C154058) *
                 C153897) *
                C154022 -
            (((C70502 * C3517 - C70503 * C3510 - C70502 * C3518 +
               C153855 * C3522 + C70500 * C1520 - C70501 * C1514 -
               C70500 * C1521 + C70494 * C1529) *
                  C154058 +
              (C79186 + C79185) * C154087 + C79891 * C154106) *
                 C153897 +
             ((C71854 + C71853) * C154058 + C88813 * C154087 +
              C79892 * C154106) *
                 C98524) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C153638 * C154117 +
             (C78866 + C78867) * C153638 * C154114 + C134563 * C154105 +
             C134567 * C154051) *
                C154022 -
            ((C82488 + C82487) * C153638 * C154051 +
             C82472 * C153638 * C154105 +
             (C78869 + C78868) * C153638 * C154114 +
             (C78867 + C78866) * C153638 * C154117) *
                C153775) *
               C1279 +
           (((C79905 + C79906) * C153638 * C154117 +
             (C79907 + C79908) * C153638 * C154114 +
             (C80701 + C80702) * C153638 * C154105 +
             (C135747 + C135748) * C153638 * C154051) *
                C153775 -
            (C135744 * C154051 + C135741 * C154105 +
             (C79906 + C79905) * C153638 * C154114 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C153638 * C154117) *
                C154022) *
               C153747) *
              C154013 +
          (((C78793 * C153638 * C154117 + C78802 * C153638 * C154114 +
             C78880 * C153638 * C154105 +
             (C78874 + C78875) * C153638 * C154051) *
                C153775 -
            (C134565 * C154051 + C134566 * C154105 +
             C78820 * C153638 * C154114 +
             (C70566 + C70565) * C153638 * C154117) *
                C154022) *
               C1279 +
           (((C70850 + C70849) * C153638 * C154117 +
             C79873 * C153638 * C154114 + C79882 * C153638 * C154105 +
             (C79909 + C79910) * C153638 * C154051) *
                C154022 -
            ((C70502 * C31182 - C70503 * C31179 - C70502 * C31183 +
              C153855 * C31185 + C70500 * C9204 - C70501 * C9200 -
              C70500 * C9205 + C70494 * C9209) *
                 C153638 * C154051 +
             (C79910 + C79909) * C153638 * C154105 +
             C79891 * C153638 * C154114 + C79892 * C153638 * C154117) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154106 +
            (C70565 + C70566) * C154087 + C70575 * C154058) *
               C98524 +
           ((C78866 + C78867) * C154106 + C78793 * C154087 + C79477 * C154058) *
               C153897) *
              C153711 * C1366 -
          ((C88813 * C154058 + C79892 * C154087 + (C79906 + C79905) * C154106) *
               C153897 +
           (C71330 * C154058 + (C70849 + C70850) * C154087 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C154106) *
               C98524) *
              C153711 * C1367 +
          (((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
             C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
             C153855 * C1390) *
                C154106 +
            (C70851 + C70852) * C154087 + (C70853 + C70854) * C154058) *
               C98524 +
           ((C81693 + C81694) * C154106 + (C78491 + C78492) * C154087 +
            (C88231 + C88232) * C154058) *
               C153897) *
              C153711 * C1368 -
          (((C70502 * C5772 - C70503 * C5769 - C70502 * C5773 +
             C153855 * C5778 + C70500 * C4387 - C70501 * C4381 -
             C70500 * C4388 + C70494 * C4393) *
                C154058 +
            (C70502 * C5774 - C70503 * C5770 - C70502 * C5775 +
             C153855 * C5779 + C70500 * C4385 - C70501 * C4380 -
             C70500 * C4386 + C70494 * C4392) *
                C154087 +
            (C70502 * C5776 - C70503 * C5771 - C70502 * C5777 +
             C153855 * C5780 + C70500 * C4383 - C70501 * C4379 -
             C70500 * C4384 + C70494 * C4391) *
                C154106) *
               C153897 +
           ((C70502 * C3197 - C70503 * C3191 - C70502 * C3198 +
             C153855 * C3203 + C70500 * C1380 - C70501 * C1373 -
             C70500 * C1381 + C70494 * C1388) *
                C154058 +
            (C70502 * C3195 - C70503 * C3190 - C70502 * C3196 +
             C153855 * C3202 + C70500 * C1382 - C70501 * C1374 -
             C70500 * C1383 + C70494 * C1389) *
                C154087 +
            (C70502 * C3193 - C70503 * C3189 - C70502 * C3194 +
             C153855 * C3201 + C70500 * C1384 - C70501 * C1375 -
             C70500 * C1385 + C70494 * C1390) *
                C154106) *
               C98524) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154106 +
             (C70565 + C70566) * C154087 + C70575 * C154058) *
                C98524 +
            ((C78866 + C78867) * C154106 + C78793 * C154087 +
             C79477 * C154058) *
                C153897) *
               C153711 * C1279 -
           ((C88813 * C154058 + C79892 * C154087 +
             (C79906 + C79905) * C154106) *
                C153897 +
            (C71330 * C154058 + (C70849 + C70850) * C154087 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C154106) *
                C98524) *
               C153711 * C153747) *
              C1281 +
          ((((C70850 + C70849) * C154106 + (C70848 + C70847) * C154087 +
             (C70846 + C70845) * C154058) *
                C98524 +
            (C79873 * C154106 + C89491 * C154087 +
             (C71853 + C71854) * C154058) *
                C153897) *
               C153711 * C153747 -
           ((C71539 * C154058 + C71540 * C154087 + C78820 * C154106) * C153897 +
            (C70578 * C154058 + (C70568 + C70567) * C154087 +
             (C70566 + C70565) * C154106) *
                C98524) *
               C153711 * C1279) *
              C1282 +
          (((C70575 * C154106 + C70576 * C154087 +
             (C70572 + C70571) * C154058) *
                C98524 +
            (C79477 * C154106 + C89104 * C154087 +
             (C71553 + C71554) * C154058) *
                C153897) *
               C153711 * C1279 -
           (((C70502 * C1949 - C70503 * C1944 - C70502 * C1950 +
              C153855 * C1959 + C70500 * C1119 - C70501 * C1109 -
              C70500 * C1120 + C70494 * C1127) *
                 C154058 +
             (C71854 + C71853) * C154087 + C88813 * C154106) *
                C153897 +
            ((C71344 + C71343) * C154058 + C71329 * C154087 +
             C71330 * C154106) *
                C98524) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C153638 * C98524 +
            (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
               C153711 * C1279 -
           ((C131632 + C131631 + C131630 + C131629) * C153638 * C153897 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C153638 * C98524) *
               C153711 * C153747) *
              C1281 +
          (((C74656 + C74655 + C74654 + C74653) * C153638 * C98524 +
            (C75637 + C75638 + C75639 + C75640) * C153638 * C153897) *
               C153711 * C153747 -
           ((C74903 + C74904 + C74905 + C74906) * C153638 * C153897 +
            (C74402 + C74401 + C74400 + C74399) * C153638 * C98524) *
               C153711 * C1279) *
              C1282 +
          (((C74406 + C74405 + C74404 + C74403) * C153638 * C98524 +
            (C75351 + C75352 + C75353 + C75354) * C153638 * C153897) *
               C153711 * C1279 -
           ((C74324 * C5772 - C74325 * C5769 - C74324 * C5773 +
             C154044 * C5778 + C74322 * C4387 - C74323 * C4381 -
             C74322 * C4388 + C154102 * C4393 + C74320 * C1953 -
             C74321 * C1946 - C74320 * C1954 + C154112 * C1961 +
             C74318 * C1115 - C74319 * C1107 - C74318 * C1116 +
             C154116 * C1125) *
                C153638 * C153897 +
            (C75132 + C75131 + C75130 + C75129) * C153638 * C98524) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
            C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
            C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
            C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
            C154044 * C1390) *
               C153638 * C98524 +
           (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
              C153711 * C1366 -
          ((C131632 + C131631 + C131630 + C131629) * C153638 * C153897 +
           (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 + C154044 * C3201 +
            C74322 * C1384 - C74323 * C1375 - C74322 * C1385 + C154102 * C1390 +
            C74320 * C359 - C74321 * C342 - C74320 * C360 + C154112 * C378 +
            C74318 * C357 - C74319 * C341 - C74318 * C358 + C154116 * C377) *
               C153638 * C98524) *
              C153711 * C1367 +
          ((C74318 * C359 - C74319 * C342 - C74318 * C360 + C154116 * C378 +
            C74320 * C1384 - C74321 * C1375 - C74320 * C1385 + C154112 * C1390 +
            C74322 * C3193 - C74323 * C3189 - C74322 * C3194 + C154102 * C3201 +
            C74324 * C4808 - C74325 * C4803 - C74324 * C4809 +
            C154044 * C4812) *
               C153638 * C98524 +
           (C74318 * C1957 - C74319 * C1948 - C74318 * C1958 + C154116 * C1963 +
            C74320 * C4383 - C74321 * C4379 - C74320 * C4384 + C154112 * C4391 +
            C74322 * C5776 - C74323 * C5771 - C74322 * C5777 + C154102 * C5780 +
            C74324 * C29106 - C74325 * C29104 - C74324 * C29107 +
            C154044 * C29110) *
               C153638 * C153897) *
              C153711 * C1368 -
          ((C74324 * C29853 - C74325 * C29852 - C74324 * C29854 +
            C154044 * C29855 + C74322 * C29106 - C74323 * C29104 -
            C74322 * C29107 + C154102 * C29110 + C74320 * C5776 -
            C74321 * C5771 - C74320 * C5777 + C154112 * C5780 + C74318 * C4383 -
            C74319 * C4379 - C74318 * C4384 + C154116 * C4391) *
               C153638 * C153897 +
           (C74324 * C28562 - C74325 * C28560 - C74324 * C28563 +
            C154044 * C28566 + C74322 * C4808 - C74323 * C4803 -
            C74322 * C4809 + C154102 * C4812 + C74320 * C3193 - C74321 * C3189 -
            C74320 * C3194 + C154112 * C3201 + C74318 * C1384 - C74319 * C1375 -
            C74318 * C1385 + C154116 * C1390) *
               C153638 * C98524) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C153638 * C154117 +
            (C78866 + C78867) * C153638 * C154114 + C134563 * C154105 +
            C134567 * C154051) *
               C153711 * C1279 -
           ((C80702 + C80701) * C153638 * C154051 + C80694 * C153638 * C154105 +
            (C79906 + C79905) * C153638 * C154114 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C153638 * C154117) *
               C153711 * C153747) *
              C1281 +
          (((C70850 + C70849) * C153638 * C154117 + C79873 * C153638 * C154114 +
            C79882 * C153638 * C154105 +
            (C79909 + C79910) * C153638 * C154051) *
               C153711 * C153747 -
           (C134565 * C154051 + C134566 * C154105 + C78820 * C153638 * C154114 +
            (C70566 + C70565) * C153638 * C154117) *
               C153711 * C1279) *
              C1282 +
          ((C70575 * C153638 * C154117 + C79477 * C153638 * C154114 +
            C79478 * C153638 * C154105 +
            (C78876 + C78877) * C153638 * C154051) *
               C153711 * C1279 -
           ((C70502 * C6369 - C70503 * C6363 - C70502 * C6370 +
             C153855 * C6381 + C70500 * C6371 - C70501 * C6364 -
             C70500 * C6372 + C70494 * C6382) *
                C153638 * C154051 +
            (C79186 + C79185) * C153638 * C154105 + C88813 * C153638 * C154114 +
            C71330 * C153638 * C154117) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
            C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
               C153638 * C154117 +
           (C78866 + C78867) * C153638 * C154114 + C134563 * C154105 +
           C134567 * C154051) *
              C153711 * C1366 -
          ((C80702 + C80701) * C153638 * C154051 + C80694 * C153638 * C154105 +
           (C79906 + C79905) * C153638 * C154114 +
           (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
            C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
               C153638 * C154117) *
              C153711 * C1367 +
          ((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
            C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
            C153855 * C1390) *
               C153638 * C154117 +
           (C81693 + C81694) * C153638 * C154114 +
           (C81695 + C81696) * C153638 * C154105 +
           (C70500 * C6377 - C70501 * C6367 - C70500 * C6378 + C70494 * C6385 +
            C70502 * C30186 - C70503 * C30183 - C70502 * C30187 +
            C153855 * C30189) *
               C153638 * C154051) *
              C153711 * C1368 -
          ((C70502 * C30184 - C70503 * C30182 - C70502 * C30185 +
            C153855 * C30188 + C70500 * C30186 - C70501 * C30183 -
            C70500 * C30187 + C70494 * C30189) *
               C153638 * C154051 +
           (C70502 * C28692 - C70503 * C28690 - C70502 * C28693 +
            C153855 * C28696 + C70500 * C5038 - C70501 * C5033 -
            C70500 * C5039 + C70494 * C5042) *
               C153638 * C154105 +
           (C70502 * C5776 - C70503 * C5771 - C70502 * C5777 + C153855 * C5780 +
            C70500 * C4383 - C70501 * C4379 - C70500 * C4384 + C70494 * C4391) *
               C153638 * C154114 +
           (C70502 * C3193 - C70503 * C3189 - C70502 * C3194 + C153855 * C3201 +
            C70500 * C1384 - C70501 * C1375 - C70500 * C1385 + C70494 * C1390) *
               C153638 * C154117) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
              C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
              C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
              C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
              C154044 * C1390) *
                 C153638 * C98524 +
             (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
                C2086 -
            ((C130955 + C130956 + C130957 + C130958) * C153638 * C153897 +
             (C130954 + C130953 + C130952 + C130951) * C153638 * C98524) *
                C153775) *
               C154021 +
           (((C131629 + C131630 + C131631 + C131632) * C153638 * C98524 +
             (C132175 + C132176 + C132177 + C132178) * C153638 * C153897) *
                C153775 -
            ((C131632 + C131631 + C131630 + C131629) * C153638 * C153897 +
             (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
              C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
              C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
              C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
              C74318 * C358 + C154116 * C377) *
                 C153638 * C98524) *
                C2086) *
               C153747) *
              C154013 +
          ((((C74906 + C74905 + C74904 + C74903) * C153638 * C98524 +
             (C74907 + C74908 + C74909 + C74910) * C153638 * C153897) *
                C153775 -
            ((C74903 + C74904 + C74905 + C74906) * C153638 * C153897 +
             (C74402 + C74401 + C74400 + C74399) * C153638 * C98524) *
                C2086) *
               C154021 +
           (((C74656 + C74655 + C74654 + C74653) * C153638 * C98524 +
             (C75637 + C75638 + C75639 + C75640) * C153638 * C153897) *
                C2086 -
            ((C74324 * C28694 - C74325 * C28691 - C74324 * C28695 +
              C154044 * C28697 + C74322 * C5036 - C74323 * C5032 -
              C74322 * C5037 + C154102 * C5041 + C74320 * C3513 -
              C74321 * C3508 - C74320 * C3514 + C154112 * C3520 +
              C74318 * C1524 - C74319 * C1516 - C74318 * C1525 +
              C154116 * C1531) *
                 C153638 * C153897 +
             (C75640 + C75639 + C75638 + C75637) * C153638 * C98524) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
               C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                  C154106 +
              (C70565 + C70566) * C154087 + C70575 * C154058) *
                 C98524 +
             ((C78866 + C78867) * C154106 + C78793 * C154087 +
              C79477 * C154058) *
                 C153897) *
                C2086 -
            ((C78837 * C154058 + C78819 * C154087 +
              (C78869 + C78868) * C154106) *
                 C153897 +
             (C71540 * C154058 + C78820 * C154087 +
              (C78867 + C78866) * C154106) *
                 C98524) *
                C153775) *
               C154021 +
           ((((C79905 + C79906) * C154106 + C79873 * C154087 +
              C89491 * C154058) *
                 C98524 +
             ((C79907 + C79908) * C154106 + C79882 * C154087 +
              (C79185 + C79186) * C154058) *
                 C153897) *
                C153775 -
            ((C88813 * C154058 + C79892 * C154087 +
              (C79906 + C79905) * C154106) *
                 C153897 +
             (C71330 * C154058 + (C70849 + C70850) * C154087 +
              (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
               C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                  C154106) *
                 C98524) *
                C2086) *
               C153747) *
              C154013 +
          ((((C78793 * C154106 + C79477 * C154087 + C89104 * C154058) * C98524 +
             (C78802 * C154106 + C79478 * C154087 +
              (C71133 + C71134) * C154058) *
                 C153897) *
                C153775 -
            ((C71539 * C154058 + C71540 * C154087 + C78820 * C154106) *
                 C153897 +
             (C70578 * C154058 + (C70568 + C70567) * C154087 +
              (C70566 + C70565) * C154106) *
                 C98524) *
                C2086) *
               C154021 +
           ((((C70850 + C70849) * C154106 + (C70848 + C70847) * C154087 +
              (C70846 + C70845) * C154058) *
                 C98524 +
             (C79873 * C154106 + C89491 * C154087 +
              (C71853 + C71854) * C154058) *
                 C153897) *
                C2086 -
            (((C70502 * C3517 - C70503 * C3510 - C70502 * C3518 +
               C153855 * C3522 + C70500 * C1520 - C70501 * C1514 -
               C70500 * C1521 + C70494 * C1529) *
                  C154058 +
              (C79186 + C79185) * C154087 + C79891 * C154106) *
                 C153897 +
             ((C71854 + C71853) * C154058 + C88813 * C154087 +
              C79892 * C154106) *
                 C98524) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C153638 * C154117 +
             (C78866 + C78867) * C153638 * C154114 + C134563 * C154105 +
             C134567 * C154051) *
                C2086 -
            (C136937 * C154051 + C136928 * C154105 +
             (C78869 + C78868) * C153638 * C154114 +
             (C78867 + C78866) * C153638 * C154117) *
                C153775) *
               C154021 +
           (((C79905 + C79906) * C153638 * C154117 +
             (C79907 + C79908) * C153638 * C154114 +
             (C80701 + C80702) * C153638 * C154105 +
             (C135747 + C135748) * C153638 * C154051) *
                C153775 -
            (C135744 * C154051 + C135741 * C154105 +
             (C79906 + C79905) * C153638 * C154114 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C153638 * C154117) *
                C2086) *
               C153747) *
              C154013 +
          (((C78793 * C153638 * C154117 + C78802 * C153638 * C154114 +
             C78880 * C153638 * C154105 +
             (C78874 + C78875) * C153638 * C154051) *
                C153775 -
            (C134565 * C154051 + C134566 * C154105 +
             C78820 * C153638 * C154114 +
             (C70566 + C70565) * C153638 * C154117) *
                C2086) *
               C154021 +
           (((C70850 + C70849) * C153638 * C154117 +
             C79873 * C153638 * C154114 + C79882 * C153638 * C154105 +
             (C79909 + C79910) * C153638 * C154051) *
                C2086 -
            ((C70502 * C31182 - C70503 * C31179 - C70502 * C31183 +
              C153855 * C31185 + C70500 * C9204 - C70501 * C9200 -
              C70500 * C9205 + C70494 * C9209) *
                 C153638 * C154051 +
             (C79910 + C79909) * C153638 * C154105 +
             C79891 * C153638 * C154114 + C79892 * C153638 * C154117) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C153638 * C98524 +
            (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
               C154094 -
           ((C130955 + C130956 + C130957 + C130958) * C153638 * C153897 +
            (C130954 + C130953 + C130952 + C130951) * C153638 * C98524) *
               C154095 +
           ((C130958 + C130957 + C130956 + C130955) * C153638 * C98524 +
            (C133395 + C133396 + C133397 + C133398) * C153638 * C153897) *
               C2602) *
              C154021 +
          (((C131629 + C131630 + C131631 + C131632) * C153638 * C98524 +
            (C132175 + C132176 + C132177 + C132178) * C153638 * C153897) *
               C154095 -
           ((C131632 + C131631 + C131630 + C131629) * C153638 * C153897 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C153638 * C98524) *
               C154094 -
           ((C74324 * C30184 - C74325 * C30182 - C74324 * C30185 +
             C154044 * C30188 + C74322 * C30186 - C74323 * C30183 -
             C74322 * C30187 + C154102 * C30189 + C74320 * C6377 -
             C74321 * C6367 - C74320 * C6378 + C154112 * C6385 +
             C74318 * C6379 - C74319 * C6368 - C74318 * C6380 +
             C154116 * C6386) *
                C153638 * C153897 +
            (C132178 + C132177 + C132176 + C132175) * C153638 * C98524) *
               C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154106 +
             (C70565 + C70566) * C154087 + C70575 * C154058) *
                C98524 +
            ((C78866 + C78867) * C154106 + C78793 * C154087 +
             C79477 * C154058) *
                C153897) *
               C154094 -
           ((C78837 * C154058 + C78819 * C154087 +
             (C78869 + C78868) * C154106) *
                C153897 +
            (C71540 * C154058 + C78820 * C154087 +
             (C78867 + C78866) * C154106) *
                C98524) *
               C154095 +
           ((C78878 * C154106 + C78802 * C154087 + C79478 * C154058) * C98524 +
            ((C78873 + C78872) * C154106 + C78880 * C154087 +
             (C78876 + C78877) * C154058) *
                C153897) *
               C2602) *
              C154021 +
          ((((C79905 + C79906) * C154106 + C79873 * C154087 +
             C89491 * C154058) *
                C98524 +
            ((C79907 + C79908) * C154106 + C79882 * C154087 +
             (C79185 + C79186) * C154058) *
                C153897) *
               C154095 -
           ((C88813 * C154058 + C79892 * C154087 +
             (C79906 + C79905) * C154106) *
                C153897 +
            (C71330 * C154058 + (C70849 + C70850) * C154087 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C154106) *
                C98524) *
               C154094 -
           (((C70502 * C6369 - C70503 * C6363 - C70502 * C6370 +
              C153855 * C6381 + C70500 * C6371 - C70501 * C6364 -
              C70500 * C6372 + C70494 * C6382) *
                 C154058 +
             (C79910 + C79909) * C154087 + (C80702 + C80701) * C154106) *
                C153897 +
            ((C79186 + C79185) * C154058 + C79891 * C154087 +
             C80694 * C154106) *
                C98524) *
               C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C153638 * C154117 +
            (C78866 + C78867) * C153638 * C154114 + C134563 * C154105 +
            C134567 * C154051) *
               C154094 -
           (C136937 * C154051 + C136928 * C154105 +
            (C78869 + C78868) * C153638 * C154114 +
            (C78867 + C78866) * C153638 * C154117) *
               C154095 +
           (C134563 * C154117 + C134567 * C154114 +
            (C82487 + C82488) * C153638 * C154105 +
            (C136942 + C136943) * C153638 * C154051) *
               C2602) *
              C154021 +
          (((C79905 + C79906) * C153638 * C154117 +
            (C79907 + C79908) * C153638 * C154114 +
            (C80701 + C80702) * C153638 * C154105 +
            (C135747 + C135748) * C153638 * C154051) *
               C154095 -
           (C135744 * C154051 + C135741 * C154105 +
            (C79906 + C79905) * C153638 * C154114 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C153638 * C154117) *
               C154094 -
           ((C70502 * C34031 - C70503 * C34029 - C70502 * C34032 +
             C153855 * C34035 + C70500 * C34033 - C70501 * C34030 -
             C70500 * C34034 + C70494 * C34036) *
                C153638 * C154051 +
            (C135748 + C135747) * C153638 * C154105 + C135744 * C154114 +
            C135741 * C154117) *
               C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C70500 * C144 - C70501 * C136 - C70500 * C145 +
                  C70494 * C160 + C70502 * C357 - C70503 * C341 -
                  C70502 * C358 + C153855 * C377) *
                     C154106 +
                 (C70565 + C70566) * C154087 + C70575 * C154058) *
                    C98524 +
                ((C78866 + C78867) * C154106 + C78793 * C154087 +
                 C79477 * C154058) *
                    C153897) *
                   C2086 -
               ((C78837 * C154058 + C78819 * C154087 +
                 (C78869 + C78868) * C154106) *
                    C153897 +
                (C71540 * C154058 + C78820 * C154087 +
                 (C78867 + C78866) * C154106) *
                    C98524) *
                   C153775) *
                  C153695 * C1281 +
              (((C78793 * C154106 + C79477 * C154087 + C89104 * C154058) *
                    C98524 +
                (C78802 * C154106 + C79478 * C154087 +
                 (C71133 + C71134) * C154058) *
                    C153897) *
                   C153775 -
               ((C71539 * C154058 + C71540 * C154087 + C78820 * C154106) *
                    C153897 +
                (C70578 * C154058 + (C70568 + C70567) * C154087 +
                 (C70566 + C70565) * C154106) *
                    C98524) *
                   C2086) *
                  C153695 * C1282 +
              (((C70575 * C154106 + C70576 * C154087 +
                 (C70572 + C70571) * C154058) *
                    C98524 +
                (C79477 * C154106 + C89104 * C154087 +
                 (C71553 + C71554) * C154058) *
                    C153897) *
                   C2086 -
               (((C70502 * C1518 - C70503 * C1513 - C70502 * C1519 +
                  C153855 * C1528 + C70500 * C596 - C70501 * C575 -
                  C70500 * C597 + C70494 * C611) *
                     C154058 +
                 (C71134 + C71133) * C154087 + C78837 * C154106) *
                    C153897 +
                ((C71554 + C71553) * C154058 + C71539 * C154087 +
                 C71540 * C154106) *
                    C98524) *
                   C153775) *
                  C153695 * C1283) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C70500 * C144 - C70501 * C136 - C70500 * C145 +
                  C70494 * C160 + C70502 * C357 - C70503 * C341 -
                  C70502 * C358 + C153855 * C377) *
                     C154106 +
                 (C70565 + C70566) * C154087 + C70575 * C154058) *
                    C98524 +
                ((C78866 + C78867) * C154106 + C78793 * C154087 +
                 C79477 * C154058) *
                    C153897) *
                   C2086 -
               ((C78837 * C154058 + C78819 * C154087 +
                 (C78869 + C78868) * C154106) *
                    C153897 +
                (C71540 * C154058 + C78820 * C154087 +
                 (C78867 + C78866) * C154106) *
                    C98524) *
                   C153775) *
                  C332 +
              ((((C79905 + C79906) * C154106 + C79873 * C154087 +
                 C89491 * C154058) *
                    C98524 +
                ((C79907 + C79908) * C154106 + C79882 * C154087 +
                 (C79185 + C79186) * C154058) *
                    C153897) *
                   C153775 -
               ((C88813 * C154058 + C79892 * C154087 +
                 (C79906 + C79905) * C154106) *
                    C153897 +
                (C71330 * C154058 + (C70849 + C70850) * C154087 +
                 (C70502 * C359 - C70503 * C342 - C70502 * C360 +
                  C153855 * C378 + C70500 * C357 - C70501 * C341 -
                  C70500 * C358 + C70494 * C377) *
                     C154106) *
                    C98524) *
                   C2086) *
                  C333 +
              ((((C70500 * C359 - C70501 * C342 - C70500 * C360 +
                  C70494 * C378 + C70502 * C1384 - C70503 * C1375 -
                  C70502 * C1385 + C153855 * C1390) *
                     C154106 +
                 (C70851 + C70852) * C154087 + (C70853 + C70854) * C154058) *
                    C98524 +
                ((C81693 + C81694) * C154106 + (C78491 + C78492) * C154087 +
                 (C88231 + C88232) * C154058) *
                    C153897) *
                   C2086 -
               (((C70502 * C5034 - C70503 * C5031 - C70502 * C5035 +
                  C153855 * C5040 + C70500 * C3515 - C70501 * C3509 -
                  C70500 * C3516 + C70494 * C3521) *
                     C154058 +
                 (C78494 + C78493) * C154087 + (C81696 + C81695) * C154106) *
                    C153897 +
                ((C88232 + C88231) * C154058 + (C78492 + C78491) * C154087 +
                 (C81694 + C81693) * C154106) *
                    C98524) *
                   C153775) *
                  C334) *
             C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154106 +
            (C70565 + C70566) * C154087 + C70575 * C154058) *
               C98524 +
           ((C78866 + C78867) * C154106 + C78793 * C154087 + C79477 * C154058) *
               C153897) *
              C2292 -
          ((C78837 * C154058 + C78819 * C154087 + (C78869 + C78868) * C154106) *
               C153897 +
           (C71540 * C154058 + C78820 * C154087 + (C78867 + C78866) * C154106) *
               C98524) *
              C2293 +
          ((C78878 * C154106 + C78802 * C154087 + C79478 * C154058) * C98524 +
           ((C78873 + C78872) * C154106 + C78880 * C154087 +
            (C78876 + C78877) * C154058) *
               C153897) *
              C2294 -
          (((C70502 * C9202 - C70503 * C9199 - C70502 * C9203 +
             C153855 * C9208 + C70500 * C7748 - C70501 * C7742 -
             C70500 * C7749 + C70494 * C7754) *
                C154058 +
            (C78875 + C78874) * C154087 + (C82488 + C82487) * C154106) *
               C153897 +
           ((C78877 + C78876) * C154058 + C78879 * C154087 + C82472 * C154106) *
               C98524) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C153638 * C98524 +
            (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
               C2086 -
           ((C130955 + C130956 + C130957 + C130958) * C153638 * C153897 +
            (C130954 + C130953 + C130952 + C130951) * C153638 * C98524) *
               C153775) *
              C153695 * C1281 +
          (((C74906 + C74905 + C74904 + C74903) * C153638 * C98524 +
            (C74907 + C74908 + C74909 + C74910) * C153638 * C153897) *
               C153775 -
           ((C74903 + C74904 + C74905 + C74906) * C153638 * C153897 +
            (C74402 + C74401 + C74400 + C74399) * C153638 * C98524) *
               C2086) *
              C153695 * C1282 +
          (((C74406 + C74405 + C74404 + C74403) * C153638 * C98524 +
            (C75351 + C75352 + C75353 + C75354) * C153638 * C153897) *
               C2086 -
           ((C74324 * C5034 - C74325 * C5031 - C74324 * C5035 +
             C154044 * C5040 + C74322 * C3515 - C74323 * C3509 -
             C74322 * C3516 + C154102 * C3521 + C74320 * C1522 -
             C74321 * C1515 - C74320 * C1523 + C154112 * C1530 + C74318 * C592 -
             C74319 * C573 - C74318 * C593 + C154116 * C609) *
                C153638 * C153897 +
            (C75354 + C75353 + C75352 + C75351) * C153638 * C98524) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C153638 * C98524 +
            (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
               C2086 -
           ((C130955 + C130956 + C130957 + C130958) * C153638 * C153897 +
            (C130954 + C130953 + C130952 + C130951) * C153638 * C98524) *
               C153775) *
              C332 +
          (((C131629 + C131630 + C131631 + C131632) * C153638 * C98524 +
            (C132175 + C132176 + C132177 + C132178) * C153638 * C153897) *
               C153775 -
           ((C131632 + C131631 + C131630 + C131629) * C153638 * C153897 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C153638 * C98524) *
               C2086) *
              C333 +
          (((C74318 * C359 - C74319 * C342 - C74318 * C360 + C154116 * C378 +
             C74320 * C1384 - C74321 * C1375 - C74320 * C1385 +
             C154112 * C1390 + C74322 * C3193 - C74323 * C3189 -
             C74322 * C3194 + C154102 * C3201 + C74324 * C4808 -
             C74325 * C4803 - C74324 * C4809 + C154044 * C4812) *
                C153638 * C98524 +
            (C132849 + C132850 + C132851 + C132852) * C153638 * C153897) *
               C2086 -
           ((C74324 * C29443 - C74325 * C29442 - C74324 * C29444 +
             C154044 * C29445 + C74322 * C28692 - C74323 * C28690 -
             C74322 * C28693 + C154102 * C28696 + C74320 * C5038 -
             C74321 * C5033 - C74320 * C5039 + C154112 * C5042 +
             C74318 * C3511 - C74319 * C3507 - C74318 * C3512 +
             C154116 * C3519) *
                C153638 * C153897 +
            (C132852 + C132851 + C132850 + C132849) * C153638 * C98524) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
            C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
            C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
            C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
            C154044 * C1390) *
               C153638 * C98524 +
           (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
              C2292 -
          ((C130955 + C130956 + C130957 + C130958) * C153638 * C153897 +
           (C130954 + C130953 + C130952 + C130951) * C153638 * C98524) *
              C2293 +
          ((C130958 + C130957 + C130956 + C130955) * C153638 * C98524 +
           (C133395 + C133396 + C133397 + C133398) * C153638 * C153897) *
              C2294 -
          ((C74324 * C32652 - C74325 * C32651 - C74324 * C32653 +
            C154044 * C32654 + C74322 * C31180 - C74323 * C31178 -
            C74322 * C31181 + C154102 * C31184 + C74320 * C9206 -
            C74321 * C9201 - C74320 * C9207 + C154112 * C9210 + C74318 * C7744 -
            C74319 * C7740 - C74318 * C7745 + C154116 * C7752) *
               C153638 * C153897 +
           (C133398 + C133397 + C133396 + C133395) * C153638 * C98524) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C153638 * C154117 +
            (C78866 + C78867) * C153638 * C154114 + C134563 * C154105 +
            C134567 * C154051) *
               C2086 -
           ((C82488 + C82487) * C153638 * C154051 + C82472 * C153638 * C154105 +
            (C78869 + C78868) * C153638 * C154114 +
            (C78867 + C78866) * C153638 * C154117) *
               C153775) *
              C153695 * C1281 +
          ((C78793 * C153638 * C154117 + C78802 * C153638 * C154114 +
            C78880 * C153638 * C154105 +
            (C78874 + C78875) * C153638 * C154051) *
               C153775 -
           (C134565 * C154051 + C134566 * C154105 + C78820 * C153638 * C154114 +
            (C70566 + C70565) * C153638 * C154117) *
               C2086) *
              C153695 * C1282 +
          ((C70575 * C153638 * C154117 + C79477 * C153638 * C154114 +
            C79478 * C153638 * C154105 +
            (C78876 + C78877) * C153638 * C154051) *
               C2086 -
           ((C70502 * C9202 - C70503 * C9199 - C70502 * C9203 +
             C153855 * C9208 + C70500 * C7748 - C70501 * C7742 -
             C70500 * C7749 + C70494 * C7754) *
                C153638 * C154051 +
            (C78877 + C78876) * C153638 * C154105 + C78837 * C153638 * C154114 +
            C71540 * C153638 * C154117) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C153638 * C154117 +
            (C78866 + C78867) * C153638 * C154114 + C134563 * C154105 +
            C134567 * C154051) *
               C2086 -
           ((C82488 + C82487) * C153638 * C154051 + C82472 * C153638 * C154105 +
            (C78869 + C78868) * C153638 * C154114 +
            (C78867 + C78866) * C153638 * C154117) *
               C153775) *
              C332 +
          (((C79905 + C79906) * C153638 * C154117 +
            (C79907 + C79908) * C153638 * C154114 +
            (C80701 + C80702) * C153638 * C154105 +
            (C135747 + C135748) * C153638 * C154051) *
               C153775 -
           (C135744 * C154051 + C135741 * C154105 +
            (C79906 + C79905) * C153638 * C154114 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C153638 * C154117) *
               C2086) *
              C333 +
          (((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
             C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
             C153855 * C1390) *
                C153638 * C154117 +
            (C81693 + C81694) * C153638 * C154114 +
            (C81695 + C81696) * C153638 * C154105 +
            (C136407 + C136408) * C153638 * C154051) *
               C2086 -
           ((C70502 * C32652 - C70503 * C32651 - C70502 * C32653 +
             C153855 * C32654 + C70500 * C31180 - C70501 * C31178 -
             C70500 * C31181 + C70494 * C31184) *
                C153638 * C154051 +
            (C136408 + C136407) * C153638 * C154105 +
            (C81696 + C81695) * C153638 * C154114 +
            (C81694 + C81693) * C153638 * C154117) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
            C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
               C153638 * C154117 +
           (C78866 + C78867) * C153638 * C154114 + C134563 * C154105 +
           C134567 * C154051) *
              C2292 -
          (C136937 * C154051 + C136928 * C154105 +
           (C78869 + C78868) * C153638 * C154114 +
           (C78867 + C78866) * C153638 * C154117) *
              C2293 +
          (C134563 * C154117 + C134567 * C154114 +
           (C82487 + C82488) * C153638 * C154105 +
           (C136942 + C136943) * C153638 * C154051) *
              C2294 -
          ((C70502 * C56762 - C70503 * C56761 - C70502 * C56763 +
            C153855 * C56764 + C70500 * C55969 - C70501 * C55967 -
            C70500 * C55970 + C70494 * C55973) *
               C153638 * C154051 +
           (C136943 + C136942) * C153638 * C154105 + C136937 * C154114 +
           C136928 * C154117) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C153638 * C98524 +
            (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
               C154094 -
           ((C130955 + C130956 + C130957 + C130958) * C153638 * C153897 +
            (C130954 + C130953 + C130952 + C130951) * C153638 * C98524) *
               C154095 +
           ((C130958 + C130957 + C130956 + C130955) * C153638 * C98524 +
            (C133395 + C133396 + C133397 + C133398) * C153638 * C153897) *
               C2602) *
              C153695 * C154013 +
          (((C74906 + C74905 + C74904 + C74903) * C153638 * C98524 +
            (C74907 + C74908 + C74909 + C74910) * C153638 * C153897) *
               C154095 -
           ((C74903 + C74904 + C74905 + C74906) * C153638 * C153897 +
            (C74402 + C74401 + C74400 + C74399) * C153638 * C98524) *
               C154094 -
           ((C74324 * C32003 - C74325 * C32002 - C74324 * C32004 +
             C154044 * C32005 + C74322 * C6373 - C74323 * C6365 -
             C74322 * C6374 + C154102 * C6383 + C74320 * C6375 -
             C74321 * C6366 - C74320 * C6376 + C154112 * C6384 +
             C74318 * C2307 - C74319 * C2299 - C74318 * C2308 +
             C154116 * C2314) *
                C153638 * C153897 +
            (C74910 + C74909 + C74908 + C74907) * C153638 * C98524) *
               C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154106 +
             (C70565 + C70566) * C154087 + C70575 * C154058) *
                C98524 +
            ((C78866 + C78867) * C154106 + C78793 * C154087 +
             C79477 * C154058) *
                C153897) *
               C154094 -
           ((C78837 * C154058 + C78819 * C154087 +
             (C78869 + C78868) * C154106) *
                C153897 +
            (C71540 * C154058 + C78820 * C154087 +
             (C78867 + C78866) * C154106) *
                C98524) *
               C154095 +
           ((C78878 * C154106 + C78802 * C154087 + C79478 * C154058) * C98524 +
            ((C78873 + C78872) * C154106 + C78880 * C154087 +
             (C78876 + C78877) * C154058) *
                C153897) *
               C2602) *
              C153695 * C154013 +
          (((C78793 * C154106 + C79477 * C154087 + C89104 * C154058) * C98524 +
            (C78802 * C154106 + C79478 * C154087 +
             (C71133 + C71134) * C154058) *
                C153897) *
               C154095 -
           ((C71539 * C154058 + C71540 * C154087 + C78820 * C154106) * C153897 +
            (C70578 * C154058 + (C70568 + C70567) * C154087 +
             (C70566 + C70565) * C154106) *
                C98524) *
               C154094 -
           (((C70502 * C8574 - C70503 * C8573 - C70502 * C8575 +
              C153855 * C8576 + C70500 * C2303 - C70501 * C2297 -
              C70500 * C2304 + C70494 * C2312) *
                 C154058 +
             (C78877 + C78876) * C154087 + C78879 * C154106) *
                C153897 +
            ((C71134 + C71133) * C154058 + C78837 * C154087 +
             C78819 * C154106) *
                C98524) *
               C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C153638 * C154117 +
            (C78866 + C78867) * C153638 * C154114 + C134563 * C154105 +
            C134567 * C154051) *
               C154094 -
           (C136937 * C154051 + C136928 * C154105 +
            (C78869 + C78868) * C153638 * C154114 +
            (C78867 + C78866) * C153638 * C154117) *
               C154095 +
           (C134563 * C154117 + C134567 * C154114 +
            (C82487 + C82488) * C153638 * C154105 +
            (C136942 + C136943) * C153638 * C154051) *
               C2602) *
              C153695 * C154013 +
          ((C78793 * C153638 * C154117 + C78802 * C153638 * C154114 +
            C78880 * C153638 * C154105 +
            (C78874 + C78875) * C153638 * C154051) *
               C154095 -
           (C134565 * C154051 + C134566 * C154105 + C78820 * C153638 * C154114 +
            (C70566 + C70565) * C153638 * C154117) *
               C154094 -
           ((C70502 * C56410 - C70503 * C56409 - C70502 * C56411 +
             C153855 * C56412 + C70500 * C10556 - C70501 * C10552 -
             C70500 * C10557 + C70494 * C10561) *
                C153638 * C154051 +
            (C78875 + C78874) * C153638 * C154105 + C134565 * C154114 +
            C134566 * C154117) *
               C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154106 +
             (C70565 + C70566) * C154087 + C70575 * C154058) *
                C98524 +
            ((C78866 + C78867) * C154106 + C78793 * C154087 +
             C79477 * C154058) *
                C153897) *
               C2086 -
           ((C78837 * C154058 + C78819 * C154087 +
             (C78869 + C78868) * C154106) *
                C153897 +
            (C71540 * C154058 + C78820 * C154087 +
             (C78867 + C78866) * C154106) *
                C98524) *
               C153775) *
              C332 +
          ((((C79905 + C79906) * C154106 + C79873 * C154087 +
             C89491 * C154058) *
                C98524 +
            ((C79907 + C79908) * C154106 + C79882 * C154087 +
             (C79185 + C79186) * C154058) *
                C153897) *
               C153775 -
           ((C88813 * C154058 + C79892 * C154087 +
             (C79906 + C79905) * C154106) *
                C153897 +
            (C71330 * C154058 + (C70849 + C70850) * C154087 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C154106) *
                C98524) *
               C2086) *
              C333 +
          ((((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
              C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
              C153855 * C1390) *
                 C154106 +
             (C70851 + C70852) * C154087 + (C70853 + C70854) * C154058) *
                C98524 +
            ((C81693 + C81694) * C154106 + (C78491 + C78492) * C154087 +
             (C88231 + C88232) * C154058) *
                C153897) *
               C2086 -
           (((C70502 * C5034 - C70503 * C5031 - C70502 * C5035 +
              C153855 * C5040 + C70500 * C3515 - C70501 * C3509 -
              C70500 * C3516 + C70494 * C3521) *
                 C154058 +
             (C78494 + C78493) * C154087 + (C81696 + C81695) * C154106) *
                C153897 +
            ((C88232 + C88231) * C154058 + (C78492 + C78491) * C154087 +
             (C81694 + C81693) * C154106) *
                C98524) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154106 +
             (C70565 + C70566) * C154087 + C70575 * C154058) *
                C98524 +
            ((C78866 + C78867) * C154106 + C78793 * C154087 +
             C79477 * C154058) *
                C153897) *
               C2086 -
           ((C78837 * C154058 + C78819 * C154087 +
             (C78869 + C78868) * C154106) *
                C153897 +
            (C71540 * C154058 + C78820 * C154087 +
             (C78867 + C78866) * C154106) *
                C98524) *
               C153775) *
              C153695 * C1281 +
          (((C78793 * C154106 + C79477 * C154087 + C89104 * C154058) * C98524 +
            (C78802 * C154106 + C79478 * C154087 +
             (C71133 + C71134) * C154058) *
                C153897) *
               C153775 -
           ((C71539 * C154058 + C71540 * C154087 + C78820 * C154106) * C153897 +
            (C70578 * C154058 + (C70568 + C70567) * C154087 +
             (C70566 + C70565) * C154106) *
                C98524) *
               C2086) *
              C153695 * C1282 +
          (((C70575 * C154106 + C70576 * C154087 +
             (C70572 + C70571) * C154058) *
                C98524 +
            (C79477 * C154106 + C89104 * C154087 +
             (C71553 + C71554) * C154058) *
                C153897) *
               C2086 -
           (((C70502 * C1518 - C70503 * C1513 - C70502 * C1519 +
              C153855 * C1528 + C70500 * C596 - C70501 * C575 - C70500 * C597 +
              C70494 * C611) *
                 C154058 +
             (C71134 + C71133) * C154087 + C78837 * C154106) *
                C153897 +
            ((C71554 + C71553) * C154058 + C71539 * C154087 +
             C71540 * C154106) *
                C98524) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C153638 * C98524 +
            (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
               C2086 -
           ((C130955 + C130956 + C130957 + C130958) * C153638 * C153897 +
            (C130954 + C130953 + C130952 + C130951) * C153638 * C98524) *
               C153775) *
              C153695 * C1281 +
          (((C74906 + C74905 + C74904 + C74903) * C153638 * C98524 +
            (C74907 + C74908 + C74909 + C74910) * C153638 * C153897) *
               C153775 -
           ((C74903 + C74904 + C74905 + C74906) * C153638 * C153897 +
            (C74402 + C74401 + C74400 + C74399) * C153638 * C98524) *
               C2086) *
              C153695 * C1282 +
          (((C74406 + C74405 + C74404 + C74403) * C153638 * C98524 +
            (C75351 + C75352 + C75353 + C75354) * C153638 * C153897) *
               C2086 -
           ((C74324 * C5034 - C74325 * C5031 - C74324 * C5035 +
             C154044 * C5040 + C74322 * C3515 - C74323 * C3509 -
             C74322 * C3516 + C154102 * C3521 + C74320 * C1522 -
             C74321 * C1515 - C74320 * C1523 + C154112 * C1530 + C74318 * C592 -
             C74319 * C573 - C74318 * C593 + C154116 * C609) *
                C153638 * C153897 +
            (C75354 + C75353 + C75352 + C75351) * C153638 * C98524) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C153638 * C98524 +
            (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
               C2086 -
           ((C130955 + C130956 + C130957 + C130958) * C153638 * C153897 +
            (C130954 + C130953 + C130952 + C130951) * C153638 * C98524) *
               C153775) *
              C332 +
          (((C131629 + C131630 + C131631 + C131632) * C153638 * C98524 +
            (C132175 + C132176 + C132177 + C132178) * C153638 * C153897) *
               C153775 -
           ((C131632 + C131631 + C131630 + C131629) * C153638 * C153897 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C153638 * C98524) *
               C2086) *
              C333 +
          (((C74318 * C359 - C74319 * C342 - C74318 * C360 + C154116 * C378 +
             C74320 * C1384 - C74321 * C1375 - C74320 * C1385 +
             C154112 * C1390 + C74322 * C3193 - C74323 * C3189 -
             C74322 * C3194 + C154102 * C3201 + C74324 * C4808 -
             C74325 * C4803 - C74324 * C4809 + C154044 * C4812) *
                C153638 * C98524 +
            (C132849 + C132850 + C132851 + C132852) * C153638 * C153897) *
               C2086 -
           ((C74324 * C29443 - C74325 * C29442 - C74324 * C29444 +
             C154044 * C29445 + C74322 * C28692 - C74323 * C28690 -
             C74322 * C28693 + C154102 * C28696 + C74320 * C5038 -
             C74321 * C5033 - C74320 * C5039 + C154112 * C5042 +
             C74318 * C3511 - C74319 * C3507 - C74318 * C3512 +
             C154116 * C3519) *
                C153638 * C153897 +
            (C132852 + C132851 + C132850 + C132849) * C153638 * C98524) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C153638 * C154117 +
            (C78866 + C78867) * C153638 * C154114 + C134563 * C154105 +
            C134567 * C154051) *
               C2086 -
           ((C82488 + C82487) * C153638 * C154051 + C82472 * C153638 * C154105 +
            (C78869 + C78868) * C153638 * C154114 +
            (C78867 + C78866) * C153638 * C154117) *
               C153775) *
              C153695 * C1281 +
          ((C78793 * C153638 * C154117 + C78802 * C153638 * C154114 +
            C78880 * C153638 * C154105 +
            (C78874 + C78875) * C153638 * C154051) *
               C153775 -
           (C134565 * C154051 + C134566 * C154105 + C78820 * C153638 * C154114 +
            (C70566 + C70565) * C153638 * C154117) *
               C2086) *
              C153695 * C1282 +
          ((C70575 * C153638 * C154117 + C79477 * C153638 * C154114 +
            C79478 * C153638 * C154105 +
            (C78876 + C78877) * C153638 * C154051) *
               C2086 -
           ((C70502 * C9202 - C70503 * C9199 - C70502 * C9203 +
             C153855 * C9208 + C70500 * C7748 - C70501 * C7742 -
             C70500 * C7749 + C70494 * C7754) *
                C153638 * C154051 +
            (C78877 + C78876) * C153638 * C154105 + C78837 * C153638 * C154114 +
            C71540 * C153638 * C154117) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C153638 * C154117 +
            (C78866 + C78867) * C153638 * C154114 + C134563 * C154105 +
            C134567 * C154051) *
               C2086 -
           ((C82488 + C82487) * C153638 * C154051 + C82472 * C153638 * C154105 +
            (C78869 + C78868) * C153638 * C154114 +
            (C78867 + C78866) * C153638 * C154117) *
               C153775) *
              C332 +
          (((C79905 + C79906) * C153638 * C154117 +
            (C79907 + C79908) * C153638 * C154114 +
            (C80701 + C80702) * C153638 * C154105 +
            (C135747 + C135748) * C153638 * C154051) *
               C153775 -
           (C135744 * C154051 + C135741 * C154105 +
            (C79906 + C79905) * C153638 * C154114 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C153638 * C154117) *
               C2086) *
              C333 +
          (((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
             C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
             C153855 * C1390) *
                C153638 * C154117 +
            (C81693 + C81694) * C153638 * C154114 +
            (C81695 + C81696) * C153638 * C154105 +
            (C136407 + C136408) * C153638 * C154051) *
               C2086 -
           ((C70502 * C32652 - C70503 * C32651 - C70502 * C32653 +
             C153855 * C32654 + C70500 * C31180 - C70501 * C31178 -
             C70500 * C31181 + C70494 * C31184) *
                C153638 * C154051 +
            (C136408 + C136407) * C153638 * C154105 +
            (C81696 + C81695) * C153638 * C154114 +
            (C81694 + C81693) * C153638 * C154117) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154002 +
             (C70565 + C70566) * C153648) *
                C153893 +
            ((C78866 + C78867) * C154002 + C78793 * C153648) * C153900 +
            C143588 * C116097) *
               C153711 * C154021 -
           ((C79891 * C153648 + C80694 * C154002) * C116097 +
            (C79892 * C153648 + (C79906 + C79905) * C154002) * C153900 +
            ((C70849 + C70850) * C153648 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C154002) *
                C153893) *
               C153711 * C153747) *
              C154090 +
          ((((C70850 + C70849) * C154002 + (C70848 + C70847) * C153648) *
                C153893 +
            (C79873 * C154002 + C89491 * C153648) * C153900 +
            (C79882 * C154002 + (C79185 + C79186) * C153648) * C116097) *
               C153711 * C153747 -
           (C143589 * C116097 +
            (C71540 * C153648 + C78820 * C154002) * C153900 +
            ((C70568 + C70567) * C153648 + (C70566 + C70565) * C154002) *
                C153893) *
               C153711 * C154021) *
              C154091 +
          (((C70575 * C154002 + C70576 * C153648) * C153893 +
            (C79477 * C154002 + C89104 * C153648) * C153900 +
            (C79478 * C154002 + (C71133 + C71134) * C153648) * C116097) *
               C153711 * C154021 -
           (((C70502 * C3517 - C70503 * C3510 - C70502 * C3518 +
              C153855 * C3522 + C70500 * C1520 - C70501 * C1514 -
              C70500 * C1521 + C70494 * C1529) *
                 C153648 +
             (C79186 + C79185) * C154002) *
                C116097 +
            ((C71854 + C71853) * C153648 + C88813 * C154002) * C153900 +
            (C71329 * C153648 + C71330 * C154002) * C153893) *
               C153711 * C153747) *
              C796)) /
        (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
               C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                  C154002 +
              (C70565 + C70566) * C153648) *
                 C153893 +
             ((C78866 + C78867) * C154002 + C78793 * C153648) * C153900 +
             C143588 * C116097) *
                C154022 -
            ((C78879 * C153648 + C82472 * C154002) * C116097 +
             (C78819 * C153648 + (C78869 + C78868) * C154002) * C153900 +
             (C78820 * C153648 + (C78867 + C78866) * C154002) * C153893) *
                C153775) *
               C154021 +
           ((((C79905 + C79906) * C154002 + C79873 * C153648) * C153893 +
             ((C79907 + C79908) * C154002 + C79882 * C153648) * C153900 +
             ((C80701 + C80702) * C154002 + (C79909 + C79910) * C153648) *
                 C116097) *
                C153775 -
            ((C79891 * C153648 + C80694 * C154002) * C116097 +
             (C79892 * C153648 + (C79906 + C79905) * C154002) * C153900 +
             ((C70849 + C70850) * C153648 +
              (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
               C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                  C154002) *
                 C153893) *
                C154022) *
               C153747) *
              C335 +
          ((((C78793 * C154002 + C79477 * C153648) * C153893 +
             (C78802 * C154002 + C79478 * C153648) * C153900 +
             (C78880 * C154002 + (C78876 + C78877) * C153648) * C116097) *
                C153775 -
            (C143589 * C116097 +
             (C71540 * C153648 + C78820 * C154002) * C153900 +
             ((C70568 + C70567) * C153648 + (C70566 + C70565) * C154002) *
                 C153893) *
                C154022) *
               C154021 +
           ((((C70850 + C70849) * C154002 + (C70848 + C70847) * C153648) *
                 C153893 +
             (C79873 * C154002 + C89491 * C153648) * C153900 +
             (C79882 * C154002 + (C79185 + C79186) * C153648) * C116097) *
                C154022 -
            (((C70502 * C6369 - C70503 * C6363 - C70502 * C6370 +
               C153855 * C6381 + C70500 * C6371 - C70501 * C6364 -
               C70500 * C6372 + C70494 * C6382) *
                  C153648 +
              (C79910 + C79909) * C154002) *
                 C116097 +
             ((C79186 + C79185) * C153648 + C79891 * C154002) * C153900 +
             (C88813 * C153648 + C79892 * C154002) * C153893) *
                C153775) *
               C153747) *
              C153682)) /
        (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154002 +
             (C70565 + C70566) * C153648) *
                C153893 +
            ((C78866 + C78867) * C154002 + C78793 * C153648) * C153900 +
            (C78878 * C154002 + C78802 * C153648) * C116097) *
               C153711 * C332 -
           ((C79891 * C153648 + C80694 * C154002) * C116097 +
            (C79892 * C153648 + (C79906 + C79905) * C154002) * C153900 +
            ((C70849 + C70850) * C153648 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C154002) *
                C153893) *
               C153711 * C333 +
           (((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
              C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
              C153855 * C1390) *
                 C154002 +
             (C70851 + C70852) * C153648) *
                C153893 +
            ((C81693 + C81694) * C154002 + (C78491 + C78492) * C153648) *
                C153900 +
            ((C81695 + C81696) * C154002 + (C78493 + C78494) * C153648) *
                C116097) *
               C153711 * C334) *
              C335 +
          ((((C70850 + C70849) * C154002 + (C70848 + C70847) * C153648) *
                C153893 +
            (C79873 * C154002 + C89491 * C153648) * C153900 +
            (C79882 * C154002 + (C79185 + C79186) * C153648) * C116097) *
               C153711 * C333 -
           ((C78837 * C153648 + C78819 * C154002) * C116097 +
            (C71540 * C153648 + C78820 * C154002) * C153900 +
            ((C70568 + C70567) * C153648 + (C70566 + C70565) * C154002) *
                C153893) *
               C153711 * C332 -
           (((C70502 * C5034 - C70503 * C5031 - C70502 * C5035 +
              C153855 * C5040 + C70500 * C3515 - C70501 * C3509 -
              C70500 * C3516 + C70494 * C3521) *
                 C153648 +
             (C78494 + C78493) * C154002) *
                C116097 +
            ((C88232 + C88231) * C153648 + (C78492 + C78491) * C154002) *
                C153900 +
            ((C70854 + C70853) * C153648 + (C70852 + C70851) * C154002) *
                C153893) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154002 +
            (C70565 + C70566) * C153648) *
               C153893 +
           ((C78866 + C78867) * C154002 + C78793 * C153648) * C153900 +
           (C78878 * C154002 + C78802 * C153648) * C116097) *
              C153711 * C153695 * C130 -
          ((C78837 * C153648 + C78819 * C154002) * C116097 +
           (C71540 * C153648 + C78820 * C154002) * C153900 +
           ((C70568 + C70567) * C153648 + (C70566 + C70565) * C154002) *
               C153893) *
              C153711 * C153695 * C131 +
          ((C70575 * C154002 + C70576 * C153648) * C153893 +
           (C79477 * C154002 + C89104 * C153648) * C153900 +
           (C79478 * C154002 + (C71133 + C71134) * C153648) * C116097) *
              C153711 * C153695 * C132 -
          (((C70502 * C1518 - C70503 * C1513 - C70502 * C1519 +
             C153855 * C1528 + C70500 * C596 - C70501 * C575 - C70500 * C597 +
             C70494 * C611) *
                C153648 +
            (C71134 + C71133) * C154002) *
               C116097 +
           ((C71554 + C71553) * C153648 + C71539 * C154002) * C153900 +
           (C70577 * C153648 + C70578 * C154002) * C153893) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154002 +
             (C70565 + C70566) * C153648) *
                C153893 +
            ((C78866 + C78867) * C154002 + C78793 * C153648) * C153900 +
            C143588 * C116097) *
               C563 -
           ((C78879 * C153648 + C82472 * C154002) * C116097 +
            (C78819 * C153648 + (C78869 + C78868) * C154002) * C153900 +
            (C78820 * C153648 + (C78867 + C78866) * C154002) * C153893) *
               C564 +
           (C143588 * C153893 +
            (C134564 * C154002 + C78880 * C153648) * C153900 +
            ((C82487 + C82488) * C154002 + (C78874 + C78875) * C153648) *
                C116097) *
               C565) *
              C153695 * C335 +
          (((C78793 * C154002 + C79477 * C153648) * C153893 +
            (C78802 * C154002 + C79478 * C153648) * C153900 +
            (C78880 * C154002 + (C78876 + C78877) * C153648) * C116097) *
               C564 -
           (C143589 * C116097 +
            (C71540 * C153648 + C78820 * C154002) * C153900 +
            ((C70568 + C70567) * C153648 + (C70566 + C70565) * C154002) *
                C153893) *
               C563 -
           (((C70502 * C9202 - C70503 * C9199 - C70502 * C9203 +
              C153855 * C9208 + C70500 * C7748 - C70501 * C7742 -
              C70500 * C7749 + C70494 * C7754) *
                 C153648 +
             (C78875 + C78874) * C154002) *
                C116097 +
            ((C78877 + C78876) * C153648 + C78879 * C154002) * C153900 +
            C143589 * C153893) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154002 +
             (C70565 + C70566) * C153648) *
                C153893 +
            ((C78866 + C78867) * C154002 + C78793 * C153648) * C153900 +
            C143588 * C116097) *
               C154022 -
           ((C78879 * C153648 + C82472 * C154002) * C116097 +
            (C78819 * C153648 + (C78869 + C78868) * C154002) * C153900 +
            (C78820 * C153648 + (C78867 + C78866) * C154002) * C153893) *
               C153775) *
              C153695 * C154090 +
          (((C78793 * C154002 + C79477 * C153648) * C153893 +
            (C78802 * C154002 + C79478 * C153648) * C153900 +
            (C78880 * C154002 + (C78876 + C78877) * C153648) * C116097) *
               C153775 -
           (C143589 * C116097 +
            (C71540 * C153648 + C78820 * C154002) * C153900 +
            ((C70568 + C70567) * C153648 + (C70566 + C70565) * C154002) *
                C153893) *
               C154022) *
              C153695 * C154091 +
          (((C70575 * C154002 + C70576 * C153648) * C153893 +
            (C79477 * C154002 + C89104 * C153648) * C153900 +
            (C79478 * C154002 + (C71133 + C71134) * C153648) * C116097) *
               C154022 -
           (((C70502 * C8574 - C70503 * C8573 - C70502 * C8575 +
              C153855 * C8576 + C70500 * C2303 - C70501 * C2297 -
              C70500 * C2304 + C70494 * C2312) *
                 C153648 +
             (C78877 + C78876) * C154002) *
                C116097 +
            ((C71134 + C71133) * C153648 + C78837 * C154002) * C153900 +
            (C71539 * C153648 + C71540 * C154002) * C153893) *
               C153775) *
              C153695 * C796)) /
        (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154002 +
            (C70565 + C70566) * C153648) *
               C153893 +
           ((C78866 + C78867) * C154002 + C78793 * C153648) * C153900 +
           (C78878 * C154002 + C78802 * C153648) * C116097) *
              C153711 * C153695 * C130 -
          ((C78837 * C153648 + C78819 * C154002) * C116097 +
           (C71540 * C153648 + C78820 * C154002) * C153900 +
           ((C70568 + C70567) * C153648 + (C70566 + C70565) * C154002) *
               C153893) *
              C153711 * C153695 * C131 +
          ((C70575 * C154002 + C70576 * C153648) * C153893 +
           (C79477 * C154002 + C89104 * C153648) * C153900 +
           (C79478 * C154002 + (C71133 + C71134) * C153648) * C116097) *
              C153711 * C153695 * C132 -
          (((C70502 * C1518 - C70503 * C1513 - C70502 * C1519 +
             C153855 * C1528 + C70500 * C596 - C70501 * C575 - C70500 * C597 +
             C70494 * C611) *
                C153648 +
            (C71134 + C71133) * C154002) *
               C116097 +
           ((C71554 + C71553) * C153648 + C71539 * C154002) * C153900 +
           (C70577 * C153648 + C70578 * C154002) * C153893) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154002 +
             (C70565 + C70566) * C153648) *
                C153893 +
            ((C78866 + C78867) * C154002 + C78793 * C153648) * C153900 +
            (C78878 * C154002 + C78802 * C153648) * C116097) *
               C153711 * C332 -
           ((C79891 * C153648 + C80694 * C154002) * C116097 +
            (C79892 * C153648 + (C79906 + C79905) * C154002) * C153900 +
            ((C70849 + C70850) * C153648 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C154002) *
                C153893) *
               C153711 * C333 +
           (((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
              C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
              C153855 * C1390) *
                 C154002 +
             (C70851 + C70852) * C153648) *
                C153893 +
            ((C81693 + C81694) * C154002 + (C78491 + C78492) * C153648) *
                C153900 +
            ((C81695 + C81696) * C154002 + (C78493 + C78494) * C153648) *
                C116097) *
               C153711 * C334) *
              C335 +
          ((((C70850 + C70849) * C154002 + (C70848 + C70847) * C153648) *
                C153893 +
            (C79873 * C154002 + C89491 * C153648) * C153900 +
            (C79882 * C154002 + (C79185 + C79186) * C153648) * C116097) *
               C153711 * C333 -
           ((C78837 * C153648 + C78819 * C154002) * C116097 +
            (C71540 * C153648 + C78820 * C154002) * C153900 +
            ((C70568 + C70567) * C153648 + (C70566 + C70565) * C154002) *
                C153893) *
               C153711 * C332 -
           (((C70502 * C5034 - C70503 * C5031 - C70502 * C5035 +
              C153855 * C5040 + C70500 * C3515 - C70501 * C3509 -
              C70500 * C3516 + C70494 * C3521) *
                 C153648 +
             (C78494 + C78493) * C154002) *
                C116097 +
            ((C88232 + C88231) * C153648 + (C78492 + C78491) * C154002) *
                C153900 +
            ((C70854 + C70853) * C153648 + (C70852 + C70851) * C154002) *
                C153893) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154002 +
             (C70565 + C70566) * C153648) *
                C153893 +
            ((C78866 + C78867) * C154002 + C78793 * C153648) * C153900 +
            C143588 * C116097) *
               C153711 * C154092 -
           (C145332 * C116097 +
            (C79892 * C153648 + (C79906 + C79905) * C154002) * C153900 +
            ((C70849 + C70850) * C153648 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C154002) *
                C153893) *
               C153711 * C154093 +
           (((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
              C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
              C153855 * C1390) *
                 C154002 +
             (C70851 + C70852) * C153648) *
                C153893 +
            ((C81693 + C81694) * C154002 + (C78491 + C78492) * C153648) *
                C153900 +
            ((C81695 + C81696) * C154002 + (C78493 + C78494) * C153648) *
                C116097) *
               C153711 * C1657) *
              C154013 +
          ((((C70850 + C70849) * C154002 + (C70848 + C70847) * C153648) *
                C153893 +
            (C79873 * C154002 + C89491 * C153648) * C153900 +
            (C79882 * C154002 + (C79185 + C79186) * C153648) * C116097) *
               C153711 * C154093 -
           (C143589 * C116097 +
            (C71540 * C153648 + C78820 * C154002) * C153900 +
            ((C70568 + C70567) * C153648 + (C70566 + C70565) * C154002) *
                C153893) *
               C153711 * C154092 -
           (((C70502 * C5034 - C70503 * C5031 - C70502 * C5035 +
              C153855 * C5040 + C70500 * C3515 - C70501 * C3509 -
              C70500 * C3516 + C70494 * C3521) *
                 C153648 +
             (C78494 + C78493) * C154002) *
                C116097 +
            ((C88232 + C88231) * C153648 + (C78492 + C78491) * C154002) *
                C153900 +
            ((C70854 + C70853) * C153648 + (C70852 + C70851) * C154002) *
                C153893) *
               C153711 * C1657) *
              C153682)) /
        (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154002 +
             (C70565 + C70566) * C153648) *
                C153893 +
            ((C78866 + C78867) * C154002 + C78793 * C153648) * C153900 +
            C143588 * C116097) *
               C154022 -
           ((C78879 * C153648 + C82472 * C154002) * C116097 +
            (C78819 * C153648 + (C78869 + C78868) * C154002) * C153900 +
            (C78820 * C153648 + (C78867 + C78866) * C154002) * C153893) *
               C153775) *
              C154092 +
          ((((C79905 + C79906) * C154002 + C79873 * C153648) * C153893 +
            ((C79907 + C79908) * C154002 + C79882 * C153648) * C153900 +
            ((C80701 + C80702) * C154002 + (C79909 + C79910) * C153648) *
                C116097) *
               C153775 -
           (C145332 * C116097 +
            (C79892 * C153648 + (C79906 + C79905) * C154002) * C153900 +
            ((C70849 + C70850) * C153648 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C154002) *
                C153893) *
               C154022) *
              C154093 +
          ((((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
              C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
              C153855 * C1390) *
                 C154002 +
             (C70851 + C70852) * C153648) *
                C153893 +
            ((C81693 + C81694) * C154002 + (C78491 + C78492) * C153648) *
                C153900 +
            ((C81695 + C81696) * C154002 + (C78493 + C78494) * C153648) *
                C116097) *
               C154022 -
           (((C70502 * C32003 - C70503 * C32002 - C70502 * C32004 +
              C153855 * C32005 + C70500 * C6373 - C70501 * C6365 -
              C70500 * C6374 + C70494 * C6383) *
                 C153648 +
             (C136408 + C136407) * C154002) *
                C116097 +
            ((C78494 + C78493) * C153648 + (C81696 + C81695) * C154002) *
                C153900 +
            ((C78492 + C78491) * C153648 + (C81694 + C81693) * C154002) *
                C153893) *
               C153775) *
              C1657) *
         C153676) /
        (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154002 +
            (C70565 + C70566) * C153648) *
               C153893 +
           ((C78866 + C78867) * C154002 + C78793 * C153648) * C153900 +
           C143588 * C116097) *
              C153711 * C1366 -
          ((C79891 * C153648 + C80694 * C154002) * C116097 +
           (C79892 * C153648 + (C79906 + C79905) * C154002) * C153900 +
           ((C70849 + C70850) * C153648 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C154002) *
               C153893) *
              C153711 * C1367 +
          (((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
             C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
             C153855 * C1390) *
                C154002 +
            (C70851 + C70852) * C153648) *
               C153893 +
           ((C81693 + C81694) * C154002 + (C78491 + C78492) * C153648) *
               C153900 +
           ((C81695 + C81696) * C154002 + (C78493 + C78494) * C153648) *
               C116097) *
              C153711 * C1368 -
          (((C70502 * C28694 - C70503 * C28691 - C70502 * C28695 +
             C153855 * C28697 + C70500 * C5036 - C70501 * C5032 -
             C70500 * C5037 + C70494 * C5041) *
                C153648 +
            (C70502 * C28692 - C70503 * C28690 - C70502 * C28693 +
             C153855 * C28696 + C70500 * C5038 - C70501 * C5033 -
             C70500 * C5039 + C70494 * C5042) *
                C154002) *
               C116097 +
           ((C70502 * C5774 - C70503 * C5770 - C70502 * C5775 +
             C153855 * C5779 + C70500 * C4385 - C70501 * C4380 -
             C70500 * C4386 + C70494 * C4392) *
                C153648 +
            (C70502 * C5776 - C70503 * C5771 - C70502 * C5777 +
             C153855 * C5780 + C70500 * C4383 - C70501 * C4379 -
             C70500 * C4384 + C70494 * C4391) *
                C154002) *
               C153900 +
           ((C70502 * C3195 - C70503 * C3190 - C70502 * C3196 +
             C153855 * C3202 + C70500 * C1382 - C70501 * C1374 -
             C70500 * C1383 + C70494 * C1389) *
                C153648 +
            (C70502 * C3193 - C70503 * C3189 - C70502 * C3194 +
             C153855 * C3201 + C70500 * C1384 - C70501 * C1375 -
             C70500 * C1385 + C70494 * C1390) *
                C154002) *
               C153893) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154002 +
             (C70565 + C70566) * C153648) *
                C153893 +
            ((C78866 + C78867) * C154002 + C78793 * C153648) * C153900 +
            C143588 * C116097) *
               C153711 * C1279 -
           ((C79891 * C153648 + C80694 * C154002) * C116097 +
            (C79892 * C153648 + (C79906 + C79905) * C154002) * C153900 +
            ((C70849 + C70850) * C153648 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C154002) *
                C153893) *
               C153711 * C153747) *
              C1281 +
          ((((C70850 + C70849) * C154002 + (C70848 + C70847) * C153648) *
                C153893 +
            (C79873 * C154002 + C89491 * C153648) * C153900 +
            (C79882 * C154002 + (C79185 + C79186) * C153648) * C116097) *
               C153711 * C153747 -
           (C143589 * C116097 +
            (C71540 * C153648 + C78820 * C154002) * C153900 +
            ((C70568 + C70567) * C153648 + (C70566 + C70565) * C154002) *
                C153893) *
               C153711 * C1279) *
              C1282 +
          (((C70575 * C154002 + C70576 * C153648) * C153893 +
            (C79477 * C154002 + C89104 * C153648) * C153900 +
            (C79478 * C154002 + (C71133 + C71134) * C153648) * C116097) *
               C153711 * C1279 -
           (((C70502 * C3517 - C70503 * C3510 - C70502 * C3518 +
              C153855 * C3522 + C70500 * C1520 - C70501 * C1514 -
              C70500 * C1521 + C70494 * C1529) *
                 C153648 +
             (C79186 + C79185) * C154002) *
                C116097 +
            ((C71854 + C71853) * C153648 + C88813 * C154002) * C153900 +
            (C71329 * C153648 + C71330 * C154002) * C153893) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154002 +
             (C70565 + C70566) * C153648) *
                C153893 +
            ((C78866 + C78867) * C154002 + C78793 * C153648) * C153900 +
            C143588 * C116097) *
               C563 -
           ((C78879 * C153648 + C82472 * C154002) * C116097 +
            (C78819 * C153648 + (C78869 + C78868) * C154002) * C153900 +
            (C78820 * C153648 + (C78867 + C78866) * C154002) * C153893) *
               C564 +
           (C143588 * C153893 +
            (C134564 * C154002 + C78880 * C153648) * C153900 +
            ((C82487 + C82488) * C154002 + (C78874 + C78875) * C153648) *
                C116097) *
               C565) *
              C1279 +
          ((((C79905 + C79906) * C154002 + C79873 * C153648) * C153893 +
            ((C79907 + C79908) * C154002 + C79882 * C153648) * C153900 +
            ((C80701 + C80702) * C154002 + (C79909 + C79910) * C153648) *
                C116097) *
               C564 -
           (C145332 * C116097 +
            (C79892 * C153648 + (C79906 + C79905) * C154002) * C153900 +
            ((C70849 + C70850) * C153648 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C154002) *
                C153893) *
               C563 -
           (((C70502 * C31182 - C70503 * C31179 - C70502 * C31183 +
              C153855 * C31185 + C70500 * C9204 - C70501 * C9200 -
              C70500 * C9205 + C70494 * C9209) *
                 C153648 +
             (C135748 + C135747) * C154002) *
                C116097 +
            ((C79910 + C79909) * C153648 + C135740 * C154002) * C153900 +
            C145332 * C153893) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
               C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                  C154002 +
              (C70565 + C70566) * C153648) *
                 C153893 +
             ((C78866 + C78867) * C154002 + C78793 * C153648) * C153900 +
             C143588 * C116097) *
                C154022 -
            ((C78879 * C153648 + C82472 * C154002) * C116097 +
             (C78819 * C153648 + (C78869 + C78868) * C154002) * C153900 +
             (C78820 * C153648 + (C78867 + C78866) * C154002) * C153893) *
                C153775) *
               C1279 +
           ((((C79905 + C79906) * C154002 + C79873 * C153648) * C153893 +
             ((C79907 + C79908) * C154002 + C79882 * C153648) * C153900 +
             ((C80701 + C80702) * C154002 + (C79909 + C79910) * C153648) *
                 C116097) *
                C153775 -
            (C145332 * C116097 +
             (C79892 * C153648 + (C79906 + C79905) * C154002) * C153900 +
             ((C70849 + C70850) * C153648 +
              (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
               C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                  C154002) *
                 C153893) *
                C154022) *
               C153747) *
              C154013 +
          ((((C78793 * C154002 + C79477 * C153648) * C153893 +
             (C78802 * C154002 + C79478 * C153648) * C153900 +
             (C78880 * C154002 + (C78876 + C78877) * C153648) * C116097) *
                C153775 -
            (C143589 * C116097 +
             (C71540 * C153648 + C78820 * C154002) * C153900 +
             ((C70568 + C70567) * C153648 + (C70566 + C70565) * C154002) *
                 C153893) *
                C154022) *
               C1279 +
           ((((C70850 + C70849) * C154002 + (C70848 + C70847) * C153648) *
                 C153893 +
             (C79873 * C154002 + C89491 * C153648) * C153900 +
             (C79882 * C154002 + (C79185 + C79186) * C153648) * C116097) *
                C154022 -
            (((C70502 * C6369 - C70503 * C6363 - C70502 * C6370 +
               C153855 * C6381 + C70500 * C6371 - C70501 * C6364 -
               C70500 * C6372 + C70494 * C6382) *
                  C153648 +
              (C79910 + C79909) * C154002) *
                 C116097 +
             ((C79186 + C79185) * C153648 + C79891 * C154002) * C153900 +
             (C88813 * C153648 + C79892 * C154002) * C153893) *
                C153775) *
               C153747) *
              C153682)) /
        (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154002 +
             (C70565 + C70566) * C153648) *
                C153893 +
            ((C78866 + C78867) * C154002 + C78793 * C153648) * C153900 +
            C143588 * C116097) *
               C153711 * C1279 -
           ((C79891 * C153648 + C80694 * C154002) * C116097 +
            (C79892 * C153648 + (C79906 + C79905) * C154002) * C153900 +
            ((C70849 + C70850) * C153648 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C154002) *
                C153893) *
               C153711 * C153747) *
              C1281 +
          ((((C70850 + C70849) * C154002 + (C70848 + C70847) * C153648) *
                C153893 +
            (C79873 * C154002 + C89491 * C153648) * C153900 +
            (C79882 * C154002 + (C79185 + C79186) * C153648) * C116097) *
               C153711 * C153747 -
           (C143589 * C116097 +
            (C71540 * C153648 + C78820 * C154002) * C153900 +
            ((C70568 + C70567) * C153648 + (C70566 + C70565) * C154002) *
                C153893) *
               C153711 * C1279) *
              C1282 +
          (((C70575 * C154002 + C70576 * C153648) * C153893 +
            (C79477 * C154002 + C89104 * C153648) * C153900 +
            (C79478 * C154002 + (C71133 + C71134) * C153648) * C116097) *
               C153711 * C1279 -
           (((C70502 * C3517 - C70503 * C3510 - C70502 * C3518 +
              C153855 * C3522 + C70500 * C1520 - C70501 * C1514 -
              C70500 * C1521 + C70494 * C1529) *
                 C153648 +
             (C79186 + C79185) * C154002) *
                C116097 +
            ((C71854 + C71853) * C153648 + C88813 * C154002) * C153900 +
            (C71329 * C153648 + C71330 * C154002) * C153893) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154002 +
            (C70565 + C70566) * C153648) *
               C153893 +
           ((C78866 + C78867) * C154002 + C78793 * C153648) * C153900 +
           C143588 * C116097) *
              C153711 * C1366 -
          ((C79891 * C153648 + C80694 * C154002) * C116097 +
           (C79892 * C153648 + (C79906 + C79905) * C154002) * C153900 +
           ((C70849 + C70850) * C153648 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C154002) *
               C153893) *
              C153711 * C1367 +
          (((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
             C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
             C153855 * C1390) *
                C154002 +
            (C70851 + C70852) * C153648) *
               C153893 +
           ((C81693 + C81694) * C154002 + (C78491 + C78492) * C153648) *
               C153900 +
           ((C81695 + C81696) * C154002 + (C78493 + C78494) * C153648) *
               C116097) *
              C153711 * C1368 -
          (((C70502 * C28694 - C70503 * C28691 - C70502 * C28695 +
             C153855 * C28697 + C70500 * C5036 - C70501 * C5032 -
             C70500 * C5037 + C70494 * C5041) *
                C153648 +
            (C70502 * C28692 - C70503 * C28690 - C70502 * C28693 +
             C153855 * C28696 + C70500 * C5038 - C70501 * C5033 -
             C70500 * C5039 + C70494 * C5042) *
                C154002) *
               C116097 +
           ((C70502 * C5774 - C70503 * C5770 - C70502 * C5775 +
             C153855 * C5779 + C70500 * C4385 - C70501 * C4380 -
             C70500 * C4386 + C70494 * C4392) *
                C153648 +
            (C70502 * C5776 - C70503 * C5771 - C70502 * C5777 +
             C153855 * C5780 + C70500 * C4383 - C70501 * C4379 -
             C70500 * C4384 + C70494 * C4391) *
                C154002) *
               C153900 +
           ((C70502 * C3195 - C70503 * C3190 - C70502 * C3196 +
             C153855 * C3202 + C70500 * C1382 - C70501 * C1374 -
             C70500 * C1383 + C70494 * C1389) *
                C153648 +
            (C70502 * C3193 - C70503 * C3189 - C70502 * C3194 +
             C153855 * C3201 + C70500 * C1384 - C70501 * C1375 -
             C70500 * C1385 + C70494 * C1390) *
                C154002) *
               C153893) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
               C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                  C154002 +
              (C70565 + C70566) * C153648) *
                 C153893 +
             ((C78866 + C78867) * C154002 + C78793 * C153648) * C153900 +
             C143588 * C116097) *
                C2086 -
            (C147075 * C116097 +
             (C78819 * C153648 + (C78869 + C78868) * C154002) * C153900 +
             (C78820 * C153648 + (C78867 + C78866) * C154002) * C153893) *
                C153775) *
               C154021 +
           ((((C79905 + C79906) * C154002 + C79873 * C153648) * C153893 +
             ((C79907 + C79908) * C154002 + C79882 * C153648) * C153900 +
             ((C80701 + C80702) * C154002 + (C79909 + C79910) * C153648) *
                 C116097) *
                C153775 -
            (C145332 * C116097 +
             (C79892 * C153648 + (C79906 + C79905) * C154002) * C153900 +
             ((C70849 + C70850) * C153648 +
              (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
               C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                  C154002) *
                 C153893) *
                C2086) *
               C153747) *
              C154013 +
          ((((C78793 * C154002 + C79477 * C153648) * C153893 +
             (C78802 * C154002 + C79478 * C153648) * C153900 +
             (C78880 * C154002 + (C78876 + C78877) * C153648) * C116097) *
                C153775 -
            (C143589 * C116097 +
             (C71540 * C153648 + C78820 * C154002) * C153900 +
             ((C70568 + C70567) * C153648 + (C70566 + C70565) * C154002) *
                 C153893) *
                C2086) *
               C154021 +
           ((((C70850 + C70849) * C154002 + (C70848 + C70847) * C153648) *
                 C153893 +
             (C79873 * C154002 + C89491 * C153648) * C153900 +
             (C79882 * C154002 + (C79185 + C79186) * C153648) * C116097) *
                C2086 -
            (((C70502 * C6369 - C70503 * C6363 - C70502 * C6370 +
               C153855 * C6381 + C70500 * C6371 - C70501 * C6364 -
               C70500 * C6372 + C70494 * C6382) *
                  C153648 +
              (C79910 + C79909) * C154002) *
                 C116097 +
             ((C79186 + C79185) * C153648 + C79891 * C154002) * C153900 +
             (C88813 * C153648 + C79892 * C154002) * C153893) *
                C153775) *
               C153747) *
              C153682)) /
        (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154002 +
             (C70565 + C70566) * C153648) *
                C153893 +
            ((C78866 + C78867) * C154002 + C78793 * C153648) * C153900 +
            C143588 * C116097) *
               C154094 -
           (C147075 * C116097 +
            (C78819 * C153648 + (C78869 + C78868) * C154002) * C153900 +
            (C78820 * C153648 + (C78867 + C78866) * C154002) * C153893) *
               C154095 +
           (C143588 * C153893 +
            (C134564 * C154002 + C78880 * C153648) * C153900 +
            ((C82487 + C82488) * C154002 + (C78874 + C78875) * C153648) *
                C116097) *
               C2602) *
              C154021 +
          ((((C79905 + C79906) * C154002 + C79873 * C153648) * C153893 +
            ((C79907 + C79908) * C154002 + C79882 * C153648) * C153900 +
            ((C80701 + C80702) * C154002 + (C79909 + C79910) * C153648) *
                C116097) *
               C154095 -
           (C145332 * C116097 +
            (C79892 * C153648 + (C79906 + C79905) * C154002) * C153900 +
            ((C70849 + C70850) * C153648 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C154002) *
                C153893) *
               C154094 -
           (((C70502 * C31182 - C70503 * C31179 - C70502 * C31183 +
              C153855 * C31185 + C70500 * C9204 - C70501 * C9200 -
              C70500 * C9205 + C70494 * C9209) *
                 C153648 +
             (C135748 + C135747) * C154002) *
                C116097 +
            ((C79910 + C79909) * C153648 + C135740 * C154002) * C153900 +
            C145332 * C153893) *
               C2602) *
              C153747) *
         C153676) /
        (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154002 +
             (C70565 + C70566) * C153648) *
                C153893 +
            ((C78866 + C78867) * C154002 + C78793 * C153648) * C153900 +
            C143588 * C116097) *
               C2086 -
           ((C78879 * C153648 + C82472 * C154002) * C116097 +
            (C78819 * C153648 + (C78869 + C78868) * C154002) * C153900 +
            (C78820 * C153648 + (C78867 + C78866) * C154002) * C153893) *
               C153775) *
              C332 +
          ((((C79905 + C79906) * C154002 + C79873 * C153648) * C153893 +
            ((C79907 + C79908) * C154002 + C79882 * C153648) * C153900 +
            ((C80701 + C80702) * C154002 + (C79909 + C79910) * C153648) *
                C116097) *
               C153775 -
           (C145332 * C116097 +
            (C79892 * C153648 + (C79906 + C79905) * C154002) * C153900 +
            ((C70849 + C70850) * C153648 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C154002) *
                C153893) *
               C2086) *
              C333 +
          ((((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
              C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
              C153855 * C1390) *
                 C154002 +
             (C70851 + C70852) * C153648) *
                C153893 +
            ((C81693 + C81694) * C154002 + (C78491 + C78492) * C153648) *
                C153900 +
            ((C81695 + C81696) * C154002 + (C78493 + C78494) * C153648) *
                C116097) *
               C2086 -
           (((C70502 * C32003 - C70503 * C32002 - C70502 * C32004 +
              C153855 * C32005 + C70500 * C6373 - C70501 * C6365 -
              C70500 * C6374 + C70494 * C6383) *
                 C153648 +
             (C136408 + C136407) * C154002) *
                C116097 +
            ((C78494 + C78493) * C153648 + (C81696 + C81695) * C154002) *
                C153900 +
            ((C78492 + C78491) * C153648 + (C81694 + C81693) * C154002) *
                C153893) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154002 +
             (C70565 + C70566) * C153648) *
                C153893 +
            ((C78866 + C78867) * C154002 + C78793 * C153648) * C153900 +
            C143588 * C116097) *
               C2086 -
           ((C78879 * C153648 + C82472 * C154002) * C116097 +
            (C78819 * C153648 + (C78869 + C78868) * C154002) * C153900 +
            (C78820 * C153648 + (C78867 + C78866) * C154002) * C153893) *
               C153775) *
              C153695 * C1281 +
          (((C78793 * C154002 + C79477 * C153648) * C153893 +
            (C78802 * C154002 + C79478 * C153648) * C153900 +
            (C78880 * C154002 + (C78876 + C78877) * C153648) * C116097) *
               C153775 -
           (C143589 * C116097 +
            (C71540 * C153648 + C78820 * C154002) * C153900 +
            ((C70568 + C70567) * C153648 + (C70566 + C70565) * C154002) *
                C153893) *
               C2086) *
              C153695 * C1282 +
          (((C70575 * C154002 + C70576 * C153648) * C153893 +
            (C79477 * C154002 + C89104 * C153648) * C153900 +
            (C79478 * C154002 + (C71133 + C71134) * C153648) * C116097) *
               C2086 -
           (((C70502 * C8574 - C70503 * C8573 - C70502 * C8575 +
              C153855 * C8576 + C70500 * C2303 - C70501 * C2297 -
              C70500 * C2304 + C70494 * C2312) *
                 C153648 +
             (C78877 + C78876) * C154002) *
                C116097 +
            ((C71134 + C71133) * C153648 + C78837 * C154002) * C153900 +
            (C71539 * C153648 + C71540 * C154002) * C153893) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154002 +
            (C70565 + C70566) * C153648) *
               C153893 +
           ((C78866 + C78867) * C154002 + C78793 * C153648) * C153900 +
           C143588 * C116097) *
              C2292 -
          (C147075 * C116097 +
           (C78819 * C153648 + (C78869 + C78868) * C154002) * C153900 +
           (C78820 * C153648 + (C78867 + C78866) * C154002) * C153893) *
              C2293 +
          (C143588 * C153893 +
           (C134564 * C154002 + C78880 * C153648) * C153900 +
           ((C82487 + C82488) * C154002 + (C78874 + C78875) * C153648) *
               C116097) *
              C2294 -
          (((C70502 * C56410 - C70503 * C56409 - C70502 * C56411 +
             C153855 * C56412 + C70500 * C10556 - C70501 * C10552 -
             C70500 * C10557 + C70494 * C10561) *
                C153648 +
            (C136943 + C136942) * C154002) *
               C116097 +
           ((C78875 + C78874) * C153648 + C136927 * C154002) * C153900 +
           C147075 * C153893) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154002 +
             (C70565 + C70566) * C153648) *
                C153893 +
            ((C78866 + C78867) * C154002 + C78793 * C153648) * C153900 +
            C143588 * C116097) *
               C154094 -
           (C147075 * C116097 +
            (C78819 * C153648 + (C78869 + C78868) * C154002) * C153900 +
            (C78820 * C153648 + (C78867 + C78866) * C154002) * C153893) *
               C154095 +
           (C143588 * C153893 +
            (C134564 * C154002 + C78880 * C153648) * C153900 +
            ((C82487 + C82488) * C154002 + (C78874 + C78875) * C153648) *
                C116097) *
               C2602) *
              C153695 * C154013 +
          (((C78793 * C154002 + C79477 * C153648) * C153893 +
            (C78802 * C154002 + C79478 * C153648) * C153900 +
            (C78880 * C154002 + (C78876 + C78877) * C153648) * C116097) *
               C154095 -
           (C143589 * C116097 +
            (C71540 * C153648 + C78820 * C154002) * C153900 +
            ((C70568 + C70567) * C153648 + (C70566 + C70565) * C154002) *
                C153893) *
               C154094 -
           (((C70502 * C9202 - C70503 * C9199 - C70502 * C9203 +
              C153855 * C9208 + C70500 * C7748 - C70501 * C7742 -
              C70500 * C7749 + C70494 * C7754) *
                 C153648 +
             (C78875 + C78874) * C154002) *
                C116097 +
            ((C78877 + C78876) * C153648 + C78879 * C154002) * C153900 +
            C143589 * C153893) *
               C2602) *
              C153695 * C153682)) /
        (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154002 +
             (C70565 + C70566) * C153648) *
                C153893 +
            ((C78866 + C78867) * C154002 + C78793 * C153648) * C153900 +
            C143588 * C116097) *
               C2086 -
           ((C78879 * C153648 + C82472 * C154002) * C116097 +
            (C78819 * C153648 + (C78869 + C78868) * C154002) * C153900 +
            (C78820 * C153648 + (C78867 + C78866) * C154002) * C153893) *
               C153775) *
              C153695 * C1281 +
          (((C78793 * C154002 + C79477 * C153648) * C153893 +
            (C78802 * C154002 + C79478 * C153648) * C153900 +
            (C78880 * C154002 + (C78876 + C78877) * C153648) * C116097) *
               C153775 -
           (C143589 * C116097 +
            (C71540 * C153648 + C78820 * C154002) * C153900 +
            ((C70568 + C70567) * C153648 + (C70566 + C70565) * C154002) *
                C153893) *
               C2086) *
              C153695 * C1282 +
          (((C70575 * C154002 + C70576 * C153648) * C153893 +
            (C79477 * C154002 + C89104 * C153648) * C153900 +
            (C79478 * C154002 + (C71133 + C71134) * C153648) * C116097) *
               C2086 -
           (((C70502 * C8574 - C70503 * C8573 - C70502 * C8575 +
              C153855 * C8576 + C70500 * C2303 - C70501 * C2297 -
              C70500 * C2304 + C70494 * C2312) *
                 C153648 +
             (C78877 + C78876) * C154002) *
                C116097 +
            ((C71134 + C71133) * C153648 + C78837 * C154002) * C153900 +
            (C71539 * C153648 + C71540 * C154002) * C153893) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154002 +
             (C70565 + C70566) * C153648) *
                C153893 +
            ((C78866 + C78867) * C154002 + C78793 * C153648) * C153900 +
            C143588 * C116097) *
               C2086 -
           ((C78879 * C153648 + C82472 * C154002) * C116097 +
            (C78819 * C153648 + (C78869 + C78868) * C154002) * C153900 +
            (C78820 * C153648 + (C78867 + C78866) * C154002) * C153893) *
               C153775) *
              C332 +
          ((((C79905 + C79906) * C154002 + C79873 * C153648) * C153893 +
            ((C79907 + C79908) * C154002 + C79882 * C153648) * C153900 +
            ((C80701 + C80702) * C154002 + (C79909 + C79910) * C153648) *
                C116097) *
               C153775 -
           (C145332 * C116097 +
            (C79892 * C153648 + (C79906 + C79905) * C154002) * C153900 +
            ((C70849 + C70850) * C153648 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C154002) *
                C153893) *
               C2086) *
              C333 +
          ((((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
              C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
              C153855 * C1390) *
                 C154002 +
             (C70851 + C70852) * C153648) *
                C153893 +
            ((C81693 + C81694) * C154002 + (C78491 + C78492) * C153648) *
                C153900 +
            ((C81695 + C81696) * C154002 + (C78493 + C78494) * C153648) *
                C116097) *
               C2086 -
           (((C70502 * C32003 - C70503 * C32002 - C70502 * C32004 +
              C153855 * C32005 + C70500 * C6373 - C70501 * C6365 -
              C70500 * C6374 + C70494 * C6383) *
                 C153648 +
             (C136408 + C136407) * C154002) *
                C116097 +
            ((C78494 + C78493) * C153648 + (C81696 + C81695) * C154002) *
                C153900 +
            ((C78492 + C78491) * C153648 + (C81694 + C81693) * C154002) *
                C153893) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154106 +
             (C70565 + C70566) * C154087 + C70575 * C154058) *
                C98524 +
            ((C78866 + C78867) * C154106 + C78793 * C154087 +
             C79477 * C154058) *
                C153897) *
               C153711 * C154021 -
           ((C88813 * C154058 + C79892 * C154087 +
             (C79906 + C79905) * C154106) *
                C153897 +
            (C71330 * C154058 + (C70849 + C70850) * C154087 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C154106) *
                C98524) *
               C153711 * C153747) *
              C154090 +
          ((((C70850 + C70849) * C154106 + (C70848 + C70847) * C154087 +
             (C70846 + C70845) * C154058) *
                C98524 +
            (C79873 * C154106 + C89491 * C154087 +
             (C71853 + C71854) * C154058) *
                C153897) *
               C153711 * C153747 -
           ((C71539 * C154058 + C71540 * C154087 + C78820 * C154106) * C153897 +
            (C70578 * C154058 + (C70568 + C70567) * C154087 +
             (C70566 + C70565) * C154106) *
                C98524) *
               C153711 * C154021) *
              C154091 +
          (((C70575 * C154106 + C70576 * C154087 +
             (C70572 + C70571) * C154058) *
                C98524 +
            (C79477 * C154106 + C89104 * C154087 +
             (C71553 + C71554) * C154058) *
                C153897) *
               C153711 * C154021 -
           (((C70502 * C1949 - C70503 * C1944 - C70502 * C1950 +
              C153855 * C1959 + C70500 * C1119 - C70501 * C1109 -
              C70500 * C1120 + C70494 * C1127) *
                 C154058 +
             (C71854 + C71853) * C154087 + C88813 * C154106) *
                C153897 +
            ((C71344 + C71343) * C154058 + C71329 * C154087 +
             C71330 * C154106) *
                C98524) *
               C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C153638 * C98524 +
            (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
               C153711 * C154021 -
           ((C74324 * C5776 - C74325 * C5771 - C74324 * C5777 +
             C154044 * C5780 + C74322 * C4383 - C74323 * C4379 -
             C74322 * C4384 + C154102 * C4391 + C74320 * C1957 -
             C74321 * C1948 - C74320 * C1958 + C154112 * C1963 +
             C74318 * C1111 - C74319 * C1105 - C74318 * C1112 +
             C154116 * C1123) *
                C153638 * C153897 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C153638 * C98524) *
               C153711 * C153747) *
              C154090 +
          (((C74656 + C74655 + C74654 + C74653) * C153638 * C98524 +
            (C75637 + C75638 + C75639 + C75640) * C153638 * C153897) *
               C153711 * C153747 -
           ((C74903 + C74904 + C74905 + C74906) * C153638 * C153897 +
            (C74402 + C74401 + C74400 + C74399) * C153638 * C98524) *
               C153711 * C154021) *
              C154091 +
          (((C74406 + C74405 + C74404 + C74403) * C153638 * C98524 +
            (C75351 + C75352 + C75353 + C75354) * C153638 * C153897) *
               C153711 * C154021 -
           ((C74324 * C5772 - C74325 * C5769 - C74324 * C5773 +
             C154044 * C5778 + C74322 * C4387 - C74323 * C4381 -
             C74322 * C4388 + C154102 * C4393 + C74320 * C1953 -
             C74321 * C1946 - C74320 * C1954 + C154112 * C1961 +
             C74318 * C1115 - C74319 * C1107 - C74318 * C1116 +
             C154116 * C1125) *
                C153638 * C153897 +
            (C75132 + C75131 + C75130 + C75129) * C153638 * C98524) *
               C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
               C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                  C154106 +
              (C70565 + C70566) * C154087 + C70575 * C154058) *
                 C98524 +
             ((C78866 + C78867) * C154106 + C78793 * C154087 +
              C79477 * C154058) *
                 C153897) *
                C154022 -
            ((C78837 * C154058 + C78819 * C154087 +
              (C78869 + C78868) * C154106) *
                 C153897 +
             (C71540 * C154058 + C78820 * C154087 +
              (C78867 + C78866) * C154106) *
                 C98524) *
                C153775) *
               C154021 +
           ((((C79905 + C79906) * C154106 + C79873 * C154087 +
              C89491 * C154058) *
                 C98524 +
             ((C79907 + C79908) * C154106 + C79882 * C154087 +
              (C79185 + C79186) * C154058) *
                 C153897) *
                C153775 -
            ((C88813 * C154058 + C79892 * C154087 +
              (C79906 + C79905) * C154106) *
                 C153897 +
             (C71330 * C154058 + (C70849 + C70850) * C154087 +
              (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
               C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                  C154106) *
                 C98524) *
                C154022) *
               C153747) *
              C335 +
          ((((C78793 * C154106 + C79477 * C154087 + C89104 * C154058) * C98524 +
             (C78802 * C154106 + C79478 * C154087 +
              (C71133 + C71134) * C154058) *
                 C153897) *
                C153775 -
            ((C71539 * C154058 + C71540 * C154087 + C78820 * C154106) *
                 C153897 +
             (C70578 * C154058 + (C70568 + C70567) * C154087 +
              (C70566 + C70565) * C154106) *
                 C98524) *
                C154022) *
               C154021 +
           ((((C70850 + C70849) * C154106 + (C70848 + C70847) * C154087 +
              (C70846 + C70845) * C154058) *
                 C98524 +
             (C79873 * C154106 + C89491 * C154087 +
              (C71853 + C71854) * C154058) *
                 C153897) *
                C154022 -
            (((C70502 * C3517 - C70503 * C3510 - C70502 * C3518 +
               C153855 * C3522 + C70500 * C1520 - C70501 * C1514 -
               C70500 * C1521 + C70494 * C1529) *
                  C154058 +
              (C79186 + C79185) * C154087 + C79891 * C154106) *
                 C153897 +
             ((C71854 + C71853) * C154058 + C88813 * C154087 +
              C79892 * C154106) *
                 C98524) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
              C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
              C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
              C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
              C154044 * C1390) *
                 C153638 * C98524 +
             (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
                C154022 -
            ((C130955 + C130956 + C130957 + C130958) * C153638 * C153897 +
             (C130954 + C130953 + C130952 + C130951) * C153638 * C98524) *
                C153775) *
               C154021 +
           (((C131629 + C131630 + C131631 + C131632) * C153638 * C98524 +
             (C74318 * C1526 - C74319 * C1517 - C74318 * C1527 +
              C154116 * C1532 + C74320 * C3511 - C74321 * C3507 -
              C74320 * C3512 + C154112 * C3519 + C74322 * C5038 -
              C74323 * C5033 - C74322 * C5039 + C154102 * C5042 +
              C74324 * C28692 - C74325 * C28690 - C74324 * C28693 +
              C154044 * C28696) *
                 C153638 * C153897) *
                C153775 -
            ((C131632 + C131631 + C131630 + C131629) * C153638 * C153897 +
             (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
              C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
              C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
              C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
              C74318 * C358 + C154116 * C377) *
                 C153638 * C98524) *
                C154022) *
               C153747) *
              C335 +
          ((((C74906 + C74905 + C74904 + C74903) * C153638 * C98524 +
             (C74907 + C74908 + C74909 + C74910) * C153638 * C153897) *
                C153775 -
            ((C74903 + C74904 + C74905 + C74906) * C153638 * C153897 +
             (C74402 + C74401 + C74400 + C74399) * C153638 * C98524) *
                C154022) *
               C154021 +
           (((C74656 + C74655 + C74654 + C74653) * C153638 * C98524 +
             (C75637 + C75638 + C75639 + C75640) * C153638 * C153897) *
                C154022 -
            ((C74324 * C28694 - C74325 * C28691 - C74324 * C28695 +
              C154044 * C28697 + C74322 * C5036 - C74323 * C5032 -
              C74322 * C5037 + C154102 * C5041 + C74320 * C3513 -
              C74321 * C3508 - C74320 * C3514 + C154112 * C3520 +
              C74318 * C1524 - C74319 * C1516 - C74318 * C1525 +
              C154116 * C1531) *
                 C153638 * C153897 +
             (C75640 + C75639 + C75638 + C75637) * C153638 * C98524) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154106 +
             (C70565 + C70566) * C154087 + C70575 * C154058) *
                C98524 +
            ((C78866 + C78867) * C154106 + C78793 * C154087 +
             C79477 * C154058) *
                C153897) *
               C153711 * C332 -
           ((C88813 * C154058 + C79892 * C154087 +
             (C79906 + C79905) * C154106) *
                C153897 +
            (C71330 * C154058 + (C70849 + C70850) * C154087 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C154106) *
                C98524) *
               C153711 * C333 +
           (((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
              C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
              C153855 * C1390) *
                 C154106 +
             (C70851 + C70852) * C154087 + (C70853 + C70854) * C154058) *
                C98524 +
            ((C81693 + C81694) * C154106 + (C78491 + C78492) * C154087 +
             (C88231 + C88232) * C154058) *
                C153897) *
               C153711 * C334) *
              C335 +
          ((((C70850 + C70849) * C154106 + (C70848 + C70847) * C154087 +
             (C70846 + C70845) * C154058) *
                C98524 +
            (C79873 * C154106 + C89491 * C154087 +
             (C71853 + C71854) * C154058) *
                C153897) *
               C153711 * C333 -
           ((C71539 * C154058 + C71540 * C154087 + C78820 * C154106) * C153897 +
            (C70578 * C154058 + (C70568 + C70567) * C154087 +
             (C70566 + C70565) * C154106) *
                C98524) *
               C153711 * C332 -
           (((C70502 * C4389 - C70503 * C4382 - C70502 * C4390 +
              C153855 * C4394 + C70500 * C1951 - C70501 * C1945 -
              C70500 * C1952 + C70494 * C1960) *
                 C154058 +
             (C88232 + C88231) * C154087 + (C78492 + C78491) * C154106) *
                C153897 +
            ((C70856 + C70855) * C154058 + (C70854 + C70853) * C154087 +
             (C70852 + C70851) * C154106) *
                C98524) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154106 +
            (C70565 + C70566) * C154087 + C70575 * C154058) *
               C98524 +
           ((C78866 + C78867) * C154106 + C78793 * C154087 + C79477 * C154058) *
               C153897) *
              C153711 * C153695 * C130 -
          ((C71539 * C154058 + C71540 * C154087 + C78820 * C154106) * C153897 +
           (C70578 * C154058 + (C70568 + C70567) * C154087 +
            (C70566 + C70565) * C154106) *
               C98524) *
              C153711 * C153695 * C131 +
          ((C70575 * C154106 + C70576 * C154087 + (C70572 + C70571) * C154058) *
               C98524 +
           (C79477 * C154106 + C89104 * C154087 + (C71553 + C71554) * C154058) *
               C153897) *
              C153711 * C153695 * C132 -
          (((C70502 * C1121 - C70503 * C1110 - C70502 * C1122 +
             C153855 * C1128 + C70500 * C598 - C70501 * C576 - C70500 * C599 +
             C70494 * C612) *
                C154058 +
            (C71554 + C71553) * C154087 + C71539 * C154106) *
               C153897 +
           ((C70574 + C70573) * C154058 + C70577 * C154087 + C70578 * C154106) *
               C98524) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154106 +
             (C70565 + C70566) * C154087 + C70575 * C154058) *
                C98524 +
            ((C78866 + C78867) * C154106 + C78793 * C154087 +
             C79477 * C154058) *
                C153897) *
               C563 -
           ((C78837 * C154058 + C78819 * C154087 +
             (C78869 + C78868) * C154106) *
                C153897 +
            (C71540 * C154058 + C78820 * C154087 +
             (C78867 + C78866) * C154106) *
                C98524) *
               C564 +
           ((C78878 * C154106 + C78802 * C154087 + C79478 * C154058) * C98524 +
            ((C78873 + C78872) * C154106 + C78880 * C154087 +
             (C78876 + C78877) * C154058) *
                C153897) *
               C565) *
              C153695 * C335 +
          (((C78793 * C154106 + C79477 * C154087 + C89104 * C154058) * C98524 +
            (C78802 * C154106 + C79478 * C154087 +
             (C71133 + C71134) * C154058) *
                C153897) *
               C564 -
           ((C71539 * C154058 + C71540 * C154087 + C78820 * C154106) * C153897 +
            (C70578 * C154058 + (C70568 + C70567) * C154087 +
             (C70566 + C70565) * C154106) *
                C98524) *
               C563 -
           (((C70502 * C8574 - C70503 * C8573 - C70502 * C8575 +
              C153855 * C8576 + C70500 * C2303 - C70501 * C2297 -
              C70500 * C2304 + C70494 * C2312) *
                 C154058 +
             (C78877 + C78876) * C154087 + C78879 * C154106) *
                C153897 +
            ((C71134 + C71133) * C154058 + C78837 * C154087 +
             C78819 * C154106) *
                C98524) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
            C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
            C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
            C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
            C154044 * C1390) *
               C153638 * C98524 +
           (C74318 * C586 - C74319 * C570 - C74318 * C587 + C154116 * C606 +
            C74320 * C1111 - C74321 * C1105 - C74320 * C1112 + C154112 * C1123 +
            C74322 * C1957 - C74323 * C1948 - C74322 * C1958 + C154102 * C1963 +
            C74324 * C4383 - C74325 * C4379 - C74324 * C4384 +
            C154044 * C4391) *
               C153638 * C153897) *
              C153711 * C153695 * C130 -
          ((C74903 + C74904 + C74905 + C74906) * C153638 * C153897 +
           (C74402 + C74401 + C74400 + C74399) * C153638 * C98524) *
              C153711 * C153695 * C131 +
          ((C74406 + C74405 + C74404 + C74403) * C153638 * C98524 +
           (C75351 + C75352 + C75353 + C75354) * C153638 * C153897) *
              C153711 * C153695 * C132 -
          ((C74324 * C4389 - C74325 * C4382 - C74324 * C4390 + C154044 * C4394 +
            C74322 * C1951 - C74323 * C1945 - C74322 * C1952 + C154102 * C1960 +
            C74320 * C1117 - C74321 * C1108 - C74320 * C1118 + C154112 * C1126 +
            C74318 * C580 - C74319 * C567 - C74318 * C581 + C154116 * C603) *
               C153638 * C153897 +
           (C74410 + C74409 + C74408 + C74407) * C153638 * C98524) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C153638 * C98524 +
            (C74318 * C586 - C74319 * C570 - C74318 * C587 + C154116 * C606 +
             C74320 * C1111 - C74321 * C1105 - C74320 * C1112 +
             C154112 * C1123 + C74322 * C1957 - C74323 * C1948 -
             C74322 * C1958 + C154102 * C1963 + C74324 * C4383 -
             C74325 * C4379 - C74324 * C4384 + C154044 * C4391) *
                C153638 * C153897) *
               C153711 * C332 -
           ((C74324 * C5776 - C74325 * C5771 - C74324 * C5777 +
             C154044 * C5780 + C74322 * C4383 - C74323 * C4379 -
             C74322 * C4384 + C154102 * C4391 + C74320 * C1957 -
             C74321 * C1948 - C74320 * C1958 + C154112 * C1963 +
             C74318 * C1111 - C74319 * C1105 - C74318 * C1112 +
             C154116 * C1123) *
                C153638 * C153897 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C153638 * C98524) *
               C153711 * C333 +
           ((C74318 * C359 - C74319 * C342 - C74318 * C360 + C154116 * C378 +
             C74320 * C1384 - C74321 * C1375 - C74320 * C1385 +
             C154112 * C1390 + C74322 * C3193 - C74323 * C3189 -
             C74322 * C3194 + C154102 * C3201 + C74324 * C4808 -
             C74325 * C4803 - C74324 * C4809 + C154044 * C4812) *
                C153638 * C98524 +
            (C74318 * C1957 - C74319 * C1948 - C74318 * C1958 +
             C154116 * C1963 + C74320 * C4383 - C74321 * C4379 -
             C74320 * C4384 + C154112 * C4391 + C74322 * C5776 -
             C74323 * C5771 - C74322 * C5777 + C154102 * C5780 +
             C74324 * C29106 - C74325 * C29104 - C74324 * C29107 +
             C154044 * C29110) *
                C153638 * C153897) *
               C153711 * C334) *
              C335 +
          (((C74656 + C74655 + C74654 + C74653) * C153638 * C98524 +
            (C75637 + C75638 + C75639 + C75640) * C153638 * C153897) *
               C153711 * C333 -
           ((C74903 + C74904 + C74905 + C74906) * C153638 * C153897 +
            (C74402 + C74401 + C74400 + C74399) * C153638 * C98524) *
               C153711 * C332 -
           ((C74324 * C29108 - C74325 * C29105 - C74324 * C29109 +
             C154044 * C29111 + C74322 * C5774 - C74323 * C5770 -
             C74322 * C5775 + C154102 * C5779 + C74320 * C4385 -
             C74321 * C4380 - C74320 * C4386 + C154112 * C4392 +
             C74318 * C1955 - C74319 * C1947 - C74318 * C1956 +
             C154116 * C1962) *
                C153638 * C153897 +
            (C74660 + C74659 + C74658 + C74657) * C153638 * C98524) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C153638 * C98524 +
            (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
               C563 -
           ((C130955 + C130956 + C130957 + C130958) * C153638 * C153897 +
            (C130954 + C130953 + C130952 + C130951) * C153638 * C98524) *
               C564 +
           ((C130958 + C130957 + C130956 + C130955) * C153638 * C98524 +
            (C74318 * C2309 - C74319 * C2300 - C74318 * C2310 +
             C154116 * C2315 + C74320 * C6379 - C74321 * C6368 -
             C74320 * C6380 + C154112 * C6386 + C74322 * C6377 -
             C74323 * C6367 - C74322 * C6378 + C154102 * C6385 +
             C74324 * C30186 - C74325 * C30183 - C74324 * C30187 +
             C154044 * C30189) *
                C153638 * C153897) *
               C565) *
              C153695 * C335 +
          (((C74906 + C74905 + C74904 + C74903) * C153638 * C98524 +
            (C74907 + C74908 + C74909 + C74910) * C153638 * C153897) *
               C564 -
           ((C74903 + C74904 + C74905 + C74906) * C153638 * C153897 +
            (C74402 + C74401 + C74400 + C74399) * C153638 * C98524) *
               C563 -
           ((C74324 * C32003 - C74325 * C32002 - C74324 * C32004 +
             C154044 * C32005 + C74322 * C6373 - C74323 * C6365 -
             C74322 * C6374 + C154102 * C6383 + C74320 * C6375 -
             C74321 * C6366 - C74320 * C6376 + C154112 * C6384 +
             C74318 * C2307 - C74319 * C2299 - C74318 * C2308 +
             C154116 * C2314) *
                C153638 * C153897 +
            (C74910 + C74909 + C74908 + C74907) * C153638 * C98524) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154106 +
             (C70565 + C70566) * C154087 + C70575 * C154058) *
                C98524 +
            ((C78866 + C78867) * C154106 + C78793 * C154087 +
             C79477 * C154058) *
                C153897) *
               C154022 -
           ((C78837 * C154058 + C78819 * C154087 +
             (C78869 + C78868) * C154106) *
                C153897 +
            (C71540 * C154058 + C78820 * C154087 +
             (C78867 + C78866) * C154106) *
                C98524) *
               C153775) *
              C153695 * C154090 +
          (((C78793 * C154106 + C79477 * C154087 + C89104 * C154058) * C98524 +
            (C78802 * C154106 + C79478 * C154087 +
             (C71133 + C71134) * C154058) *
                C153897) *
               C153775 -
           ((C71539 * C154058 + C71540 * C154087 + C78820 * C154106) * C153897 +
            (C70578 * C154058 + (C70568 + C70567) * C154087 +
             (C70566 + C70565) * C154106) *
                C98524) *
               C154022) *
              C153695 * C154091 +
          (((C70575 * C154106 + C70576 * C154087 +
             (C70572 + C70571) * C154058) *
                C98524 +
            (C79477 * C154106 + C89104 * C154087 +
             (C71553 + C71554) * C154058) *
                C153897) *
               C154022 -
           (((C70502 * C1518 - C70503 * C1513 - C70502 * C1519 +
              C153855 * C1528 + C70500 * C596 - C70501 * C575 - C70500 * C597 +
              C70494 * C611) *
                 C154058 +
             (C71134 + C71133) * C154087 + C78837 * C154106) *
                C153897 +
            ((C71554 + C71553) * C154058 + C71539 * C154087 +
             C71540 * C154106) *
                C98524) *
               C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C153638 * C98524 +
            (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
               C154022 -
           ((C130955 + C130956 + C130957 + C130958) * C153638 * C153897 +
            (C130954 + C130953 + C130952 + C130951) * C153638 * C98524) *
               C153775) *
              C153695 * C154090 +
          (((C74906 + C74905 + C74904 + C74903) * C153638 * C98524 +
            (C74907 + C74908 + C74909 + C74910) * C153638 * C153897) *
               C153775 -
           ((C74903 + C74904 + C74905 + C74906) * C153638 * C153897 +
            (C74402 + C74401 + C74400 + C74399) * C153638 * C98524) *
               C154022) *
              C153695 * C154091 +
          (((C74406 + C74405 + C74404 + C74403) * C153638 * C98524 +
            (C75351 + C75352 + C75353 + C75354) * C153638 * C153897) *
               C154022 -
           ((C74324 * C5034 - C74325 * C5031 - C74324 * C5035 +
             C154044 * C5040 + C74322 * C3515 - C74323 * C3509 -
             C74322 * C3516 + C154102 * C3521 + C74320 * C1522 -
             C74321 * C1515 - C74320 * C1523 + C154112 * C1530 + C74318 * C592 -
             C74319 * C573 - C74318 * C593 + C154116 * C609) *
                C153638 * C153897 +
            (C75354 + C75353 + C75352 + C75351) * C153638 * C98524) *
               C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154106 +
            (C70565 + C70566) * C154087 + C70575 * C154058) *
               C98524 +
           ((C78866 + C78867) * C154106 + C78793 * C154087 + C79477 * C154058) *
               C153897) *
              C153711 * C153695 * C130 -
          ((C71539 * C154058 + C71540 * C154087 + C78820 * C154106) * C153897 +
           (C70578 * C154058 + (C70568 + C70567) * C154087 +
            (C70566 + C70565) * C154106) *
               C98524) *
              C153711 * C153695 * C131 +
          ((C70575 * C154106 + C70576 * C154087 + (C70572 + C70571) * C154058) *
               C98524 +
           (C79477 * C154106 + C89104 * C154087 + (C71553 + C71554) * C154058) *
               C153897) *
              C153711 * C153695 * C132 -
          (((C70502 * C1121 - C70503 * C1110 - C70502 * C1122 +
             C153855 * C1128 + C70500 * C598 - C70501 * C576 - C70500 * C599 +
             C70494 * C612) *
                C154058 +
            (C71554 + C71553) * C154087 + C71539 * C154106) *
               C153897 +
           ((C70574 + C70573) * C154058 + C70577 * C154087 + C70578 * C154106) *
               C98524) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154106 +
             (C70565 + C70566) * C154087 + C70575 * C154058) *
                C98524 +
            ((C78866 + C78867) * C154106 + C78793 * C154087 +
             C79477 * C154058) *
                C153897) *
               C153711 * C332 -
           ((C88813 * C154058 + C79892 * C154087 +
             (C79906 + C79905) * C154106) *
                C153897 +
            (C71330 * C154058 + (C70849 + C70850) * C154087 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C154106) *
                C98524) *
               C153711 * C333 +
           (((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
              C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
              C153855 * C1390) *
                 C154106 +
             (C70851 + C70852) * C154087 + (C70853 + C70854) * C154058) *
                C98524 +
            ((C81693 + C81694) * C154106 + (C78491 + C78492) * C154087 +
             (C88231 + C88232) * C154058) *
                C153897) *
               C153711 * C334) *
              C335 +
          ((((C70850 + C70849) * C154106 + (C70848 + C70847) * C154087 +
             (C70846 + C70845) * C154058) *
                C98524 +
            (C79873 * C154106 + C89491 * C154087 +
             (C71853 + C71854) * C154058) *
                C153897) *
               C153711 * C333 -
           ((C71539 * C154058 + C71540 * C154087 + C78820 * C154106) * C153897 +
            (C70578 * C154058 + (C70568 + C70567) * C154087 +
             (C70566 + C70565) * C154106) *
                C98524) *
               C153711 * C332 -
           (((C70502 * C4389 - C70503 * C4382 - C70502 * C4390 +
              C153855 * C4394 + C70500 * C1951 - C70501 * C1945 -
              C70500 * C1952 + C70494 * C1960) *
                 C154058 +
             (C88232 + C88231) * C154087 + (C78492 + C78491) * C154106) *
                C153897 +
            ((C70856 + C70855) * C154058 + (C70854 + C70853) * C154087 +
             (C70852 + C70851) * C154106) *
                C98524) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
            C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
            C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
            C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
            C154044 * C1390) *
               C153638 * C98524 +
           (C74318 * C586 - C74319 * C570 - C74318 * C587 + C154116 * C606 +
            C74320 * C1111 - C74321 * C1105 - C74320 * C1112 + C154112 * C1123 +
            C74322 * C1957 - C74323 * C1948 - C74322 * C1958 + C154102 * C1963 +
            C74324 * C4383 - C74325 * C4379 - C74324 * C4384 +
            C154044 * C4391) *
               C153638 * C153897) *
              C153711 * C153695 * C130 -
          ((C74903 + C74904 + C74905 + C74906) * C153638 * C153897 +
           (C74402 + C74401 + C74400 + C74399) * C153638 * C98524) *
              C153711 * C153695 * C131 +
          ((C74406 + C74405 + C74404 + C74403) * C153638 * C98524 +
           (C75351 + C75352 + C75353 + C75354) * C153638 * C153897) *
              C153711 * C153695 * C132 -
          ((C74324 * C4389 - C74325 * C4382 - C74324 * C4390 + C154044 * C4394 +
            C74322 * C1951 - C74323 * C1945 - C74322 * C1952 + C154102 * C1960 +
            C74320 * C1117 - C74321 * C1108 - C74320 * C1118 + C154112 * C1126 +
            C74318 * C580 - C74319 * C567 - C74318 * C581 + C154116 * C603) *
               C153638 * C153897 +
           (C74410 + C74409 + C74408 + C74407) * C153638 * C98524) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C153638 * C98524 +
            (C74318 * C586 - C74319 * C570 - C74318 * C587 + C154116 * C606 +
             C74320 * C1111 - C74321 * C1105 - C74320 * C1112 +
             C154112 * C1123 + C74322 * C1957 - C74323 * C1948 -
             C74322 * C1958 + C154102 * C1963 + C74324 * C4383 -
             C74325 * C4379 - C74324 * C4384 + C154044 * C4391) *
                C153638 * C153897) *
               C153711 * C332 -
           ((C74324 * C5776 - C74325 * C5771 - C74324 * C5777 +
             C154044 * C5780 + C74322 * C4383 - C74323 * C4379 -
             C74322 * C4384 + C154102 * C4391 + C74320 * C1957 -
             C74321 * C1948 - C74320 * C1958 + C154112 * C1963 +
             C74318 * C1111 - C74319 * C1105 - C74318 * C1112 +
             C154116 * C1123) *
                C153638 * C153897 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C153638 * C98524) *
               C153711 * C333 +
           ((C74318 * C359 - C74319 * C342 - C74318 * C360 + C154116 * C378 +
             C74320 * C1384 - C74321 * C1375 - C74320 * C1385 +
             C154112 * C1390 + C74322 * C3193 - C74323 * C3189 -
             C74322 * C3194 + C154102 * C3201 + C74324 * C4808 -
             C74325 * C4803 - C74324 * C4809 + C154044 * C4812) *
                C153638 * C98524 +
            (C74318 * C1957 - C74319 * C1948 - C74318 * C1958 +
             C154116 * C1963 + C74320 * C4383 - C74321 * C4379 -
             C74320 * C4384 + C154112 * C4391 + C74322 * C5776 -
             C74323 * C5771 - C74322 * C5777 + C154102 * C5780 +
             C74324 * C29106 - C74325 * C29104 - C74324 * C29107 +
             C154044 * C29110) *
                C153638 * C153897) *
               C153711 * C334) *
              C335 +
          (((C74656 + C74655 + C74654 + C74653) * C153638 * C98524 +
            (C75637 + C75638 + C75639 + C75640) * C153638 * C153897) *
               C153711 * C333 -
           ((C74903 + C74904 + C74905 + C74906) * C153638 * C153897 +
            (C74402 + C74401 + C74400 + C74399) * C153638 * C98524) *
               C153711 * C332 -
           ((C74324 * C29108 - C74325 * C29105 - C74324 * C29109 +
             C154044 * C29111 + C74322 * C5774 - C74323 * C5770 -
             C74322 * C5775 + C154102 * C5779 + C74320 * C4385 -
             C74321 * C4380 - C74320 * C4386 + C154112 * C4392 +
             C74318 * C1955 - C74319 * C1947 - C74318 * C1956 +
             C154116 * C1962) *
                C153638 * C153897 +
            (C74660 + C74659 + C74658 + C74657) * C153638 * C98524) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154106 +
             (C70565 + C70566) * C154087 + C70575 * C154058) *
                C98524 +
            ((C78866 + C78867) * C154106 + C78793 * C154087 +
             C79477 * C154058) *
                C153897) *
               C153711 * C154092 -
           ((C88813 * C154058 + C79892 * C154087 +
             (C79906 + C79905) * C154106) *
                C153897 +
            (C71330 * C154058 + (C70849 + C70850) * C154087 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C154106) *
                C98524) *
               C153711 * C154093 +
           (((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
              C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
              C153855 * C1390) *
                 C154106 +
             (C70851 + C70852) * C154087 + (C70853 + C70854) * C154058) *
                C98524 +
            ((C81693 + C81694) * C154106 + (C78491 + C78492) * C154087 +
             (C88231 + C88232) * C154058) *
                C153897) *
               C153711 * C1657) *
              C154013 +
          ((((C70850 + C70849) * C154106 + (C70848 + C70847) * C154087 +
             (C70846 + C70845) * C154058) *
                C98524 +
            (C79873 * C154106 + C89491 * C154087 +
             (C71853 + C71854) * C154058) *
                C153897) *
               C153711 * C154093 -
           ((C71539 * C154058 + C71540 * C154087 + C78820 * C154106) * C153897 +
            (C70578 * C154058 + (C70568 + C70567) * C154087 +
             (C70566 + C70565) * C154106) *
                C98524) *
               C153711 * C154092 -
           (((C70502 * C4389 - C70503 * C4382 - C70502 * C4390 +
              C153855 * C4394 + C70500 * C1951 - C70501 * C1945 -
              C70500 * C1952 + C70494 * C1960) *
                 C154058 +
             (C88232 + C88231) * C154087 + (C78492 + C78491) * C154106) *
                C153897 +
            ((C70856 + C70855) * C154058 + (C70854 + C70853) * C154087 +
             (C70852 + C70851) * C154106) *
                C98524) *
               C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C153638 * C98524 +
            (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
               C153711 * C154092 -
           ((C131632 + C131631 + C131630 + C131629) * C153638 * C153897 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C153638 * C98524) *
               C153711 * C154093 +
           ((C74318 * C359 - C74319 * C342 - C74318 * C360 + C154116 * C378 +
             C74320 * C1384 - C74321 * C1375 - C74320 * C1385 +
             C154112 * C1390 + C74322 * C3193 - C74323 * C3189 -
             C74322 * C3194 + C154102 * C3201 + C74324 * C4808 -
             C74325 * C4803 - C74324 * C4809 + C154044 * C4812) *
                C153638 * C98524 +
            (C74318 * C1957 - C74319 * C1948 - C74318 * C1958 +
             C154116 * C1963 + C74320 * C4383 - C74321 * C4379 -
             C74320 * C4384 + C154112 * C4391 + C74322 * C5776 -
             C74323 * C5771 - C74322 * C5777 + C154102 * C5780 +
             C74324 * C29106 - C74325 * C29104 - C74324 * C29107 +
             C154044 * C29110) *
                C153638 * C153897) *
               C153711 * C1657) *
              C154013 +
          (((C74656 + C74655 + C74654 + C74653) * C153638 * C98524 +
            (C75637 + C75638 + C75639 + C75640) * C153638 * C153897) *
               C153711 * C154093 -
           ((C74903 + C74904 + C74905 + C74906) * C153638 * C153897 +
            (C74402 + C74401 + C74400 + C74399) * C153638 * C98524) *
               C153711 * C154092 -
           ((C74324 * C29108 - C74325 * C29105 - C74324 * C29109 +
             C154044 * C29111 + C74322 * C5774 - C74323 * C5770 -
             C74322 * C5775 + C154102 * C5779 + C74320 * C4385 -
             C74321 * C4380 - C74320 * C4386 + C154112 * C4392 +
             C74318 * C1955 - C74319 * C1947 - C74318 * C1956 +
             C154116 * C1962) *
                C153638 * C153897 +
            (C74660 + C74659 + C74658 + C74657) * C153638 * C98524) *
               C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154106 +
             (C70565 + C70566) * C154087 + C70575 * C154058) *
                C98524 +
            ((C78866 + C78867) * C154106 + C78793 * C154087 +
             C79477 * C154058) *
                C153897) *
               C154022 -
           ((C78837 * C154058 + C78819 * C154087 +
             (C78869 + C78868) * C154106) *
                C153897 +
            (C71540 * C154058 + C78820 * C154087 +
             (C78867 + C78866) * C154106) *
                C98524) *
               C153775) *
              C154092 +
          ((((C79905 + C79906) * C154106 + C79873 * C154087 +
             C89491 * C154058) *
                C98524 +
            ((C79907 + C79908) * C154106 + C79882 * C154087 +
             (C79185 + C79186) * C154058) *
                C153897) *
               C153775 -
           ((C88813 * C154058 + C79892 * C154087 +
             (C79906 + C79905) * C154106) *
                C153897 +
            (C71330 * C154058 + (C70849 + C70850) * C154087 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C154106) *
                C98524) *
               C154022) *
              C154093 +
          ((((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
              C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
              C153855 * C1390) *
                 C154106 +
             (C70851 + C70852) * C154087 + (C70853 + C70854) * C154058) *
                C98524 +
            ((C81693 + C81694) * C154106 + (C78491 + C78492) * C154087 +
             (C88231 + C88232) * C154058) *
                C153897) *
               C154022 -
           (((C70502 * C5034 - C70503 * C5031 - C70502 * C5035 +
              C153855 * C5040 + C70500 * C3515 - C70501 * C3509 -
              C70500 * C3516 + C70494 * C3521) *
                 C154058 +
             (C78494 + C78493) * C154087 + (C81696 + C81695) * C154106) *
                C153897 +
            ((C88232 + C88231) * C154058 + (C78492 + C78491) * C154087 +
             (C81694 + C81693) * C154106) *
                C98524) *
               C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C153638 * C98524 +
            (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
               C154022 -
           ((C130955 + C130956 + C130957 + C130958) * C153638 * C153897 +
            (C130954 + C130953 + C130952 + C130951) * C153638 * C98524) *
               C153775) *
              C154092 +
          (((C131629 + C131630 + C131631 + C131632) * C153638 * C98524 +
            (C132175 + C132176 + C132177 + C132178) * C153638 * C153897) *
               C153775 -
           ((C131632 + C131631 + C131630 + C131629) * C153638 * C153897 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C153638 * C98524) *
               C154022) *
              C154093 +
          (((C74318 * C359 - C74319 * C342 - C74318 * C360 + C154116 * C378 +
             C74320 * C1384 - C74321 * C1375 - C74320 * C1385 +
             C154112 * C1390 + C74322 * C3193 - C74323 * C3189 -
             C74322 * C3194 + C154102 * C3201 + C74324 * C4808 -
             C74325 * C4803 - C74324 * C4809 + C154044 * C4812) *
                C153638 * C98524 +
            (C132849 + C132850 + C132851 + C132852) * C153638 * C153897) *
               C154022 -
           ((C74324 * C29443 - C74325 * C29442 - C74324 * C29444 +
             C154044 * C29445 + C74322 * C28692 - C74323 * C28690 -
             C74322 * C28693 + C154102 * C28696 + C74320 * C5038 -
             C74321 * C5033 - C74320 * C5039 + C154112 * C5042 +
             C74318 * C3511 - C74319 * C3507 - C74318 * C3512 +
             C154116 * C3519) *
                C153638 * C153897 +
            (C132852 + C132851 + C132850 + C132849) * C153638 * C98524) *
               C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154106 +
            (C70565 + C70566) * C154087 + C70575 * C154058) *
               C98524 +
           ((C78866 + C78867) * C154106 + C78793 * C154087 + C79477 * C154058) *
               C153897) *
              C153711 * C1366 -
          ((C88813 * C154058 + C79892 * C154087 + (C79906 + C79905) * C154106) *
               C153897 +
           (C71330 * C154058 + (C70849 + C70850) * C154087 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C154106) *
               C98524) *
              C153711 * C1367 +
          (((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
             C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
             C153855 * C1390) *
                C154106 +
            (C70851 + C70852) * C154087 + (C70853 + C70854) * C154058) *
               C98524 +
           ((C81693 + C81694) * C154106 + (C78491 + C78492) * C154087 +
            (C88231 + C88232) * C154058) *
               C153897) *
              C153711 * C1368 -
          (((C70502 * C5772 - C70503 * C5769 - C70502 * C5773 +
             C153855 * C5778 + C70500 * C4387 - C70501 * C4381 -
             C70500 * C4388 + C70494 * C4393) *
                C154058 +
            (C70502 * C5774 - C70503 * C5770 - C70502 * C5775 +
             C153855 * C5779 + C70500 * C4385 - C70501 * C4380 -
             C70500 * C4386 + C70494 * C4392) *
                C154087 +
            (C70502 * C5776 - C70503 * C5771 - C70502 * C5777 +
             C153855 * C5780 + C70500 * C4383 - C70501 * C4379 -
             C70500 * C4384 + C70494 * C4391) *
                C154106) *
               C153897 +
           ((C70502 * C3197 - C70503 * C3191 - C70502 * C3198 +
             C153855 * C3203 + C70500 * C1380 - C70501 * C1373 -
             C70500 * C1381 + C70494 * C1388) *
                C154058 +
            (C70502 * C3195 - C70503 * C3190 - C70502 * C3196 +
             C153855 * C3202 + C70500 * C1382 - C70501 * C1374 -
             C70500 * C1383 + C70494 * C1389) *
                C154087 +
            (C70502 * C3193 - C70503 * C3189 - C70502 * C3194 +
             C153855 * C3201 + C70500 * C1384 - C70501 * C1375 -
             C70500 * C1385 + C70494 * C1390) *
                C154106) *
               C98524) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154106 +
             (C70565 + C70566) * C154087 + C70575 * C154058) *
                C98524 +
            ((C78866 + C78867) * C154106 + C78793 * C154087 +
             C79477 * C154058) *
                C153897) *
               C153711 * C1279 -
           ((C88813 * C154058 + C79892 * C154087 +
             (C79906 + C79905) * C154106) *
                C153897 +
            (C71330 * C154058 + (C70849 + C70850) * C154087 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C154106) *
                C98524) *
               C153711 * C153747) *
              C1281 +
          ((((C70850 + C70849) * C154106 + (C70848 + C70847) * C154087 +
             (C70846 + C70845) * C154058) *
                C98524 +
            (C79873 * C154106 + C89491 * C154087 +
             (C71853 + C71854) * C154058) *
                C153897) *
               C153711 * C153747 -
           ((C71539 * C154058 + C71540 * C154087 + C78820 * C154106) * C153897 +
            (C70578 * C154058 + (C70568 + C70567) * C154087 +
             (C70566 + C70565) * C154106) *
                C98524) *
               C153711 * C1279) *
              C1282 +
          (((C70575 * C154106 + C70576 * C154087 +
             (C70572 + C70571) * C154058) *
                C98524 +
            (C79477 * C154106 + C89104 * C154087 +
             (C71553 + C71554) * C154058) *
                C153897) *
               C153711 * C1279 -
           (((C70502 * C1949 - C70503 * C1944 - C70502 * C1950 +
              C153855 * C1959 + C70500 * C1119 - C70501 * C1109 -
              C70500 * C1120 + C70494 * C1127) *
                 C154058 +
             (C71854 + C71853) * C154087 + C88813 * C154106) *
                C153897 +
            ((C71344 + C71343) * C154058 + C71329 * C154087 +
             C71330 * C154106) *
                C98524) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154106 +
             (C70565 + C70566) * C154087 + C70575 * C154058) *
                C98524 +
            ((C78866 + C78867) * C154106 + C78793 * C154087 +
             C79477 * C154058) *
                C153897) *
               C563 -
           ((C78837 * C154058 + C78819 * C154087 +
             (C78869 + C78868) * C154106) *
                C153897 +
            (C71540 * C154058 + C78820 * C154087 +
             (C78867 + C78866) * C154106) *
                C98524) *
               C564 +
           ((C78878 * C154106 + C78802 * C154087 + C79478 * C154058) * C98524 +
            ((C78873 + C78872) * C154106 + C78880 * C154087 +
             (C78876 + C78877) * C154058) *
                C153897) *
               C565) *
              C1279 +
          ((((C79905 + C79906) * C154106 + C79873 * C154087 +
             C89491 * C154058) *
                C98524 +
            ((C79907 + C79908) * C154106 + C79882 * C154087 +
             (C79185 + C79186) * C154058) *
                C153897) *
               C564 -
           ((C88813 * C154058 + C79892 * C154087 +
             (C79906 + C79905) * C154106) *
                C153897 +
            (C71330 * C154058 + (C70849 + C70850) * C154087 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C154106) *
                C98524) *
               C563 -
           (((C70502 * C6369 - C70503 * C6363 - C70502 * C6370 +
              C153855 * C6381 + C70500 * C6371 - C70501 * C6364 -
              C70500 * C6372 + C70494 * C6382) *
                 C154058 +
             (C79910 + C79909) * C154087 + (C80702 + C80701) * C154106) *
                C153897 +
            ((C79186 + C79185) * C154058 + C79891 * C154087 +
             C80694 * C154106) *
                C98524) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C153638 * C98524 +
            (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
               C153711 * C1279 -
           ((C131632 + C131631 + C131630 + C131629) * C153638 * C153897 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C153638 * C98524) *
               C153711 * C153747) *
              C1281 +
          (((C74656 + C74655 + C74654 + C74653) * C153638 * C98524 +
            (C75637 + C75638 + C75639 + C75640) * C153638 * C153897) *
               C153711 * C153747 -
           ((C74903 + C74904 + C74905 + C74906) * C153638 * C153897 +
            (C74402 + C74401 + C74400 + C74399) * C153638 * C98524) *
               C153711 * C1279) *
              C1282 +
          (((C74406 + C74405 + C74404 + C74403) * C153638 * C98524 +
            (C75351 + C75352 + C75353 + C75354) * C153638 * C153897) *
               C153711 * C1279 -
           ((C74324 * C5772 - C74325 * C5769 - C74324 * C5773 +
             C154044 * C5778 + C74322 * C4387 - C74323 * C4381 -
             C74322 * C4388 + C154102 * C4393 + C74320 * C1953 -
             C74321 * C1946 - C74320 * C1954 + C154112 * C1961 +
             C74318 * C1115 - C74319 * C1107 - C74318 * C1116 +
             C154116 * C1125) *
                C153638 * C153897 +
            (C75132 + C75131 + C75130 + C75129) * C153638 * C98524) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
            C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
            C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
            C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
            C154044 * C1390) *
               C153638 * C98524 +
           (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
              C153711 * C1366 -
          ((C131632 + C131631 + C131630 + C131629) * C153638 * C153897 +
           (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 + C154044 * C3201 +
            C74322 * C1384 - C74323 * C1375 - C74322 * C1385 + C154102 * C1390 +
            C74320 * C359 - C74321 * C342 - C74320 * C360 + C154112 * C378 +
            C74318 * C357 - C74319 * C341 - C74318 * C358 + C154116 * C377) *
               C153638 * C98524) *
              C153711 * C1367 +
          ((C74318 * C359 - C74319 * C342 - C74318 * C360 + C154116 * C378 +
            C74320 * C1384 - C74321 * C1375 - C74320 * C1385 + C154112 * C1390 +
            C74322 * C3193 - C74323 * C3189 - C74322 * C3194 + C154102 * C3201 +
            C74324 * C4808 - C74325 * C4803 - C74324 * C4809 +
            C154044 * C4812) *
               C153638 * C98524 +
           (C74318 * C1957 - C74319 * C1948 - C74318 * C1958 + C154116 * C1963 +
            C74320 * C4383 - C74321 * C4379 - C74320 * C4384 + C154112 * C4391 +
            C74322 * C5776 - C74323 * C5771 - C74322 * C5777 + C154102 * C5780 +
            C74324 * C29106 - C74325 * C29104 - C74324 * C29107 +
            C154044 * C29110) *
               C153638 * C153897) *
              C153711 * C1368 -
          ((C74324 * C29853 - C74325 * C29852 - C74324 * C29854 +
            C154044 * C29855 + C74322 * C29106 - C74323 * C29104 -
            C74322 * C29107 + C154102 * C29110 + C74320 * C5776 -
            C74321 * C5771 - C74320 * C5777 + C154112 * C5780 + C74318 * C4383 -
            C74319 * C4379 - C74318 * C4384 + C154116 * C4391) *
               C153638 * C153897 +
           (C74324 * C28562 - C74325 * C28560 - C74324 * C28563 +
            C154044 * C28566 + C74322 * C4808 - C74323 * C4803 -
            C74322 * C4809 + C154102 * C4812 + C74320 * C3193 - C74321 * C3189 -
            C74320 * C3194 + C154112 * C3201 + C74318 * C1384 - C74319 * C1375 -
            C74318 * C1385 + C154116 * C1390) *
               C153638 * C98524) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C153638 * C98524 +
            (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
               C563 -
           ((C130955 + C130956 + C130957 + C130958) * C153638 * C153897 +
            (C130954 + C130953 + C130952 + C130951) * C153638 * C98524) *
               C564 +
           ((C130958 + C130957 + C130956 + C130955) * C153638 * C98524 +
            (C74318 * C2309 - C74319 * C2300 - C74318 * C2310 +
             C154116 * C2315 + C74320 * C6379 - C74321 * C6368 -
             C74320 * C6380 + C154112 * C6386 + C74322 * C6377 -
             C74323 * C6367 - C74322 * C6378 + C154102 * C6385 +
             C74324 * C30186 - C74325 * C30183 - C74324 * C30187 +
             C154044 * C30189) *
                C153638 * C153897) *
               C565) *
              C1279 +
          (((C131629 + C131630 + C131631 + C131632) * C153638 * C98524 +
            (C132175 + C132176 + C132177 + C132178) * C153638 * C153897) *
               C564 -
           ((C131632 + C131631 + C131630 + C131629) * C153638 * C153897 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C153638 * C98524) *
               C563 -
           ((C74324 * C30184 - C74325 * C30182 - C74324 * C30185 +
             C154044 * C30188 + C74322 * C30186 - C74323 * C30183 -
             C74322 * C30187 + C154102 * C30189 + C74320 * C6377 -
             C74321 * C6367 - C74320 * C6378 + C154112 * C6385 +
             C74318 * C6379 - C74319 * C6368 - C74318 * C6380 +
             C154116 * C6386) *
                C153638 * C153897 +
            (C132178 + C132177 + C132176 + C132175) * C153638 * C98524) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
               C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                  C154106 +
              (C70565 + C70566) * C154087 + C70575 * C154058) *
                 C98524 +
             ((C78866 + C78867) * C154106 + C78793 * C154087 +
              C79477 * C154058) *
                 C153897) *
                C154022 -
            ((C78837 * C154058 + C78819 * C154087 +
              (C78869 + C78868) * C154106) *
                 C153897 +
             (C71540 * C154058 + C78820 * C154087 +
              (C78867 + C78866) * C154106) *
                 C98524) *
                C153775) *
               C1279 +
           ((((C79905 + C79906) * C154106 + C79873 * C154087 +
              C89491 * C154058) *
                 C98524 +
             ((C79907 + C79908) * C154106 + C79882 * C154087 +
              (C79185 + C79186) * C154058) *
                 C153897) *
                C153775 -
            ((C88813 * C154058 + C79892 * C154087 +
              (C79906 + C79905) * C154106) *
                 C153897 +
             (C71330 * C154058 + (C70849 + C70850) * C154087 +
              (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
               C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                  C154106) *
                 C98524) *
                C154022) *
               C153747) *
              C154013 +
          ((((C78793 * C154106 + C79477 * C154087 + C89104 * C154058) * C98524 +
             (C78802 * C154106 + C79478 * C154087 +
              (C71133 + C71134) * C154058) *
                 C153897) *
                C153775 -
            ((C71539 * C154058 + C71540 * C154087 + C78820 * C154106) *
                 C153897 +
             (C70578 * C154058 + (C70568 + C70567) * C154087 +
              (C70566 + C70565) * C154106) *
                 C98524) *
                C154022) *
               C1279 +
           ((((C70850 + C70849) * C154106 + (C70848 + C70847) * C154087 +
              (C70846 + C70845) * C154058) *
                 C98524 +
             (C79873 * C154106 + C89491 * C154087 +
              (C71853 + C71854) * C154058) *
                 C153897) *
                C154022 -
            (((C70502 * C3517 - C70503 * C3510 - C70502 * C3518 +
               C153855 * C3522 + C70500 * C1520 - C70501 * C1514 -
               C70500 * C1521 + C70494 * C1529) *
                  C154058 +
              (C79186 + C79185) * C154087 + C79891 * C154106) *
                 C153897 +
             ((C71854 + C71853) * C154058 + C88813 * C154087 +
              C79892 * C154106) *
                 C98524) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
              C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
              C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
              C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
              C154044 * C1390) *
                 C153638 * C98524 +
             (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
                C154022 -
            ((C130955 + C130956 + C130957 + C130958) * C153638 * C153897 +
             (C130954 + C130953 + C130952 + C130951) * C153638 * C98524) *
                C153775) *
               C1279 +
           (((C131629 + C131630 + C131631 + C131632) * C153638 * C98524 +
             (C132175 + C132176 + C132177 + C132178) * C153638 * C153897) *
                C153775 -
            ((C131632 + C131631 + C131630 + C131629) * C153638 * C153897 +
             (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
              C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
              C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
              C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
              C74318 * C358 + C154116 * C377) *
                 C153638 * C98524) *
                C154022) *
               C153747) *
              C154013 +
          ((((C74906 + C74905 + C74904 + C74903) * C153638 * C98524 +
             (C74907 + C74908 + C74909 + C74910) * C153638 * C153897) *
                C153775 -
            ((C74903 + C74904 + C74905 + C74906) * C153638 * C153897 +
             (C74402 + C74401 + C74400 + C74399) * C153638 * C98524) *
                C154022) *
               C1279 +
           (((C74656 + C74655 + C74654 + C74653) * C153638 * C98524 +
             (C75637 + C75638 + C75639 + C75640) * C153638 * C153897) *
                C154022 -
            ((C74324 * C28694 - C74325 * C28691 - C74324 * C28695 +
              C154044 * C28697 + C74322 * C5036 - C74323 * C5032 -
              C74322 * C5037 + C154102 * C5041 + C74320 * C3513 -
              C74321 * C3508 - C74320 * C3514 + C154112 * C3520 +
              C74318 * C1524 - C74319 * C1516 - C74318 * C1525 +
              C154116 * C1531) *
                 C153638 * C153897 +
             (C75640 + C75639 + C75638 + C75637) * C153638 * C98524) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154106 +
             (C70565 + C70566) * C154087 + C70575 * C154058) *
                C98524 +
            ((C78866 + C78867) * C154106 + C78793 * C154087 +
             C79477 * C154058) *
                C153897) *
               C153711 * C1279 -
           ((C88813 * C154058 + C79892 * C154087 +
             (C79906 + C79905) * C154106) *
                C153897 +
            (C71330 * C154058 + (C70849 + C70850) * C154087 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C154106) *
                C98524) *
               C153711 * C153747) *
              C1281 +
          ((((C70850 + C70849) * C154106 + (C70848 + C70847) * C154087 +
             (C70846 + C70845) * C154058) *
                C98524 +
            (C79873 * C154106 + C89491 * C154087 +
             (C71853 + C71854) * C154058) *
                C153897) *
               C153711 * C153747 -
           ((C71539 * C154058 + C71540 * C154087 + C78820 * C154106) * C153897 +
            (C70578 * C154058 + (C70568 + C70567) * C154087 +
             (C70566 + C70565) * C154106) *
                C98524) *
               C153711 * C1279) *
              C1282 +
          (((C70575 * C154106 + C70576 * C154087 +
             (C70572 + C70571) * C154058) *
                C98524 +
            (C79477 * C154106 + C89104 * C154087 +
             (C71553 + C71554) * C154058) *
                C153897) *
               C153711 * C1279 -
           (((C70502 * C1949 - C70503 * C1944 - C70502 * C1950 +
              C153855 * C1959 + C70500 * C1119 - C70501 * C1109 -
              C70500 * C1120 + C70494 * C1127) *
                 C154058 +
             (C71854 + C71853) * C154087 + C88813 * C154106) *
                C153897 +
            ((C71344 + C71343) * C154058 + C71329 * C154087 +
             C71330 * C154106) *
                C98524) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154106 +
            (C70565 + C70566) * C154087 + C70575 * C154058) *
               C98524 +
           ((C78866 + C78867) * C154106 + C78793 * C154087 + C79477 * C154058) *
               C153897) *
              C153711 * C1366 -
          ((C88813 * C154058 + C79892 * C154087 + (C79906 + C79905) * C154106) *
               C153897 +
           (C71330 * C154058 + (C70849 + C70850) * C154087 +
            (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
             C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                C154106) *
               C98524) *
              C153711 * C1367 +
          (((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
             C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
             C153855 * C1390) *
                C154106 +
            (C70851 + C70852) * C154087 + (C70853 + C70854) * C154058) *
               C98524 +
           ((C81693 + C81694) * C154106 + (C78491 + C78492) * C154087 +
            (C88231 + C88232) * C154058) *
               C153897) *
              C153711 * C1368 -
          (((C70502 * C5772 - C70503 * C5769 - C70502 * C5773 +
             C153855 * C5778 + C70500 * C4387 - C70501 * C4381 -
             C70500 * C4388 + C70494 * C4393) *
                C154058 +
            (C70502 * C5774 - C70503 * C5770 - C70502 * C5775 +
             C153855 * C5779 + C70500 * C4385 - C70501 * C4380 -
             C70500 * C4386 + C70494 * C4392) *
                C154087 +
            (C70502 * C5776 - C70503 * C5771 - C70502 * C5777 +
             C153855 * C5780 + C70500 * C4383 - C70501 * C4379 -
             C70500 * C4384 + C70494 * C4391) *
                C154106) *
               C153897 +
           ((C70502 * C3197 - C70503 * C3191 - C70502 * C3198 +
             C153855 * C3203 + C70500 * C1380 - C70501 * C1373 -
             C70500 * C1381 + C70494 * C1388) *
                C154058 +
            (C70502 * C3195 - C70503 * C3190 - C70502 * C3196 +
             C153855 * C3202 + C70500 * C1382 - C70501 * C1374 -
             C70500 * C1383 + C70494 * C1389) *
                C154087 +
            (C70502 * C3193 - C70503 * C3189 - C70502 * C3194 +
             C153855 * C3201 + C70500 * C1384 - C70501 * C1375 -
             C70500 * C1385 + C70494 * C1390) *
                C154106) *
               C98524) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C153638 * C98524 +
            (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
               C153711 * C1279 -
           ((C131632 + C131631 + C131630 + C131629) * C153638 * C153897 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C153638 * C98524) *
               C153711 * C153747) *
              C1281 +
          (((C74656 + C74655 + C74654 + C74653) * C153638 * C98524 +
            (C75637 + C75638 + C75639 + C75640) * C153638 * C153897) *
               C153711 * C153747 -
           ((C74903 + C74904 + C74905 + C74906) * C153638 * C153897 +
            (C74402 + C74401 + C74400 + C74399) * C153638 * C98524) *
               C153711 * C1279) *
              C1282 +
          (((C74406 + C74405 + C74404 + C74403) * C153638 * C98524 +
            (C75351 + C75352 + C75353 + C75354) * C153638 * C153897) *
               C153711 * C1279 -
           ((C74324 * C5772 - C74325 * C5769 - C74324 * C5773 +
             C154044 * C5778 + C74322 * C4387 - C74323 * C4381 -
             C74322 * C4388 + C154102 * C4393 + C74320 * C1953 -
             C74321 * C1946 - C74320 * C1954 + C154112 * C1961 +
             C74318 * C1115 - C74319 * C1107 - C74318 * C1116 +
             C154116 * C1125) *
                C153638 * C153897 +
            (C75132 + C75131 + C75130 + C75129) * C153638 * C98524) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
            C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
            C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
            C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
            C154044 * C1390) *
               C153638 * C98524 +
           (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
              C153711 * C1366 -
          ((C131632 + C131631 + C131630 + C131629) * C153638 * C153897 +
           (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 + C154044 * C3201 +
            C74322 * C1384 - C74323 * C1375 - C74322 * C1385 + C154102 * C1390 +
            C74320 * C359 - C74321 * C342 - C74320 * C360 + C154112 * C378 +
            C74318 * C357 - C74319 * C341 - C74318 * C358 + C154116 * C377) *
               C153638 * C98524) *
              C153711 * C1367 +
          ((C74318 * C359 - C74319 * C342 - C74318 * C360 + C154116 * C378 +
            C74320 * C1384 - C74321 * C1375 - C74320 * C1385 + C154112 * C1390 +
            C74322 * C3193 - C74323 * C3189 - C74322 * C3194 + C154102 * C3201 +
            C74324 * C4808 - C74325 * C4803 - C74324 * C4809 +
            C154044 * C4812) *
               C153638 * C98524 +
           (C74318 * C1957 - C74319 * C1948 - C74318 * C1958 + C154116 * C1963 +
            C74320 * C4383 - C74321 * C4379 - C74320 * C4384 + C154112 * C4391 +
            C74322 * C5776 - C74323 * C5771 - C74322 * C5777 + C154102 * C5780 +
            C74324 * C29106 - C74325 * C29104 - C74324 * C29107 +
            C154044 * C29110) *
               C153638 * C153897) *
              C153711 * C1368 -
          ((C74324 * C29853 - C74325 * C29852 - C74324 * C29854 +
            C154044 * C29855 + C74322 * C29106 - C74323 * C29104 -
            C74322 * C29107 + C154102 * C29110 + C74320 * C5776 -
            C74321 * C5771 - C74320 * C5777 + C154112 * C5780 + C74318 * C4383 -
            C74319 * C4379 - C74318 * C4384 + C154116 * C4391) *
               C153638 * C153897 +
           (C74324 * C28562 - C74325 * C28560 - C74324 * C28563 +
            C154044 * C28566 + C74322 * C4808 - C74323 * C4803 -
            C74322 * C4809 + C154102 * C4812 + C74320 * C3193 - C74321 * C3189 -
            C74320 * C3194 + C154112 * C3201 + C74318 * C1384 - C74319 * C1375 -
            C74318 * C1385 + C154116 * C1390) *
               C153638 * C98524) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[145] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
               C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                  C154106 +
              (C70565 + C70566) * C154087 + C70575 * C154058) *
                 C98524 +
             ((C78866 + C78867) * C154106 + C78793 * C154087 +
              C79477 * C154058) *
                 C153897) *
                C2086 -
            ((C78837 * C154058 + C78819 * C154087 +
              (C78869 + C78868) * C154106) *
                 C153897 +
             (C71540 * C154058 + C78820 * C154087 +
              (C78867 + C78866) * C154106) *
                 C98524) *
                C153775) *
               C154021 +
           ((((C79905 + C79906) * C154106 + C79873 * C154087 +
              C89491 * C154058) *
                 C98524 +
             ((C79907 + C79908) * C154106 + C79882 * C154087 +
              (C79185 + C79186) * C154058) *
                 C153897) *
                C153775 -
            ((C88813 * C154058 + C79892 * C154087 +
              (C79906 + C79905) * C154106) *
                 C153897 +
             (C71330 * C154058 + (C70849 + C70850) * C154087 +
              (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
               C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                  C154106) *
                 C98524) *
                C2086) *
               C153747) *
              C154013 +
          ((((C78793 * C154106 + C79477 * C154087 + C89104 * C154058) * C98524 +
             (C78802 * C154106 + C79478 * C154087 +
              (C71133 + C71134) * C154058) *
                 C153897) *
                C153775 -
            ((C71539 * C154058 + C71540 * C154087 + C78820 * C154106) *
                 C153897 +
             (C70578 * C154058 + (C70568 + C70567) * C154087 +
              (C70566 + C70565) * C154106) *
                 C98524) *
                C2086) *
               C154021 +
           ((((C70850 + C70849) * C154106 + (C70848 + C70847) * C154087 +
              (C70846 + C70845) * C154058) *
                 C98524 +
             (C79873 * C154106 + C89491 * C154087 +
              (C71853 + C71854) * C154058) *
                 C153897) *
                C2086 -
            (((C70502 * C3517 - C70503 * C3510 - C70502 * C3518 +
               C153855 * C3522 + C70500 * C1520 - C70501 * C1514 -
               C70500 * C1521 + C70494 * C1529) *
                  C154058 +
              (C79186 + C79185) * C154087 + C79891 * C154106) *
                 C153897 +
             ((C71854 + C71853) * C154058 + C88813 * C154087 +
              C79892 * C154106) *
                 C98524) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
              C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
              C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
              C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
              C154044 * C1390) *
                 C153638 * C98524 +
             (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
                C2086 -
            ((C130955 + C130956 + C130957 + C130958) * C153638 * C153897 +
             (C130954 + C130953 + C130952 + C130951) * C153638 * C98524) *
                C153775) *
               C154021 +
           (((C131629 + C131630 + C131631 + C131632) * C153638 * C98524 +
             (C132175 + C132176 + C132177 + C132178) * C153638 * C153897) *
                C153775 -
            ((C131632 + C131631 + C131630 + C131629) * C153638 * C153897 +
             (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
              C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
              C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
              C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
              C74318 * C358 + C154116 * C377) *
                 C153638 * C98524) *
                C2086) *
               C153747) *
              C154013 +
          ((((C74906 + C74905 + C74904 + C74903) * C153638 * C98524 +
             (C74907 + C74908 + C74909 + C74910) * C153638 * C153897) *
                C153775 -
            ((C74903 + C74904 + C74905 + C74906) * C153638 * C153897 +
             (C74402 + C74401 + C74400 + C74399) * C153638 * C98524) *
                C2086) *
               C154021 +
           (((C74656 + C74655 + C74654 + C74653) * C153638 * C98524 +
             (C75637 + C75638 + C75639 + C75640) * C153638 * C153897) *
                C2086 -
            ((C74324 * C28694 - C74325 * C28691 - C74324 * C28695 +
              C154044 * C28697 + C74322 * C5036 - C74323 * C5032 -
              C74322 * C5037 + C154102 * C5041 + C74320 * C3513 -
              C74321 * C3508 - C74320 * C3514 + C154112 * C3520 +
              C74318 * C1524 - C74319 * C1516 - C74318 * C1525 +
              C154116 * C1531) *
                 C153638 * C153897 +
             (C75640 + C75639 + C75638 + C75637) * C153638 * C98524) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154106 +
             (C70565 + C70566) * C154087 + C70575 * C154058) *
                C98524 +
            ((C78866 + C78867) * C154106 + C78793 * C154087 +
             C79477 * C154058) *
                C153897) *
               C154094 -
           ((C78837 * C154058 + C78819 * C154087 +
             (C78869 + C78868) * C154106) *
                C153897 +
            (C71540 * C154058 + C78820 * C154087 +
             (C78867 + C78866) * C154106) *
                C98524) *
               C154095 +
           ((C78878 * C154106 + C78802 * C154087 + C79478 * C154058) * C98524 +
            ((C78873 + C78872) * C154106 + C78880 * C154087 +
             (C78876 + C78877) * C154058) *
                C153897) *
               C2602) *
              C154021 +
          ((((C79905 + C79906) * C154106 + C79873 * C154087 +
             C89491 * C154058) *
                C98524 +
            ((C79907 + C79908) * C154106 + C79882 * C154087 +
             (C79185 + C79186) * C154058) *
                C153897) *
               C154095 -
           ((C88813 * C154058 + C79892 * C154087 +
             (C79906 + C79905) * C154106) *
                C153897 +
            (C71330 * C154058 + (C70849 + C70850) * C154087 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C154106) *
                C98524) *
               C154094 -
           (((C70502 * C6369 - C70503 * C6363 - C70502 * C6370 +
              C153855 * C6381 + C70500 * C6371 - C70501 * C6364 -
              C70500 * C6372 + C70494 * C6382) *
                 C154058 +
             (C79910 + C79909) * C154087 + (C80702 + C80701) * C154106) *
                C153897 +
            ((C79186 + C79185) * C154058 + C79891 * C154087 +
             C80694 * C154106) *
                C98524) *
               C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C153638 * C98524 +
            (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
               C154094 -
           ((C130955 + C130956 + C130957 + C130958) * C153638 * C153897 +
            (C130954 + C130953 + C130952 + C130951) * C153638 * C98524) *
               C154095 +
           ((C130958 + C130957 + C130956 + C130955) * C153638 * C98524 +
            (C133395 + C133396 + C133397 + C133398) * C153638 * C153897) *
               C2602) *
              C154021 +
          (((C131629 + C131630 + C131631 + C131632) * C153638 * C98524 +
            (C132175 + C132176 + C132177 + C132178) * C153638 * C153897) *
               C154095 -
           ((C131632 + C131631 + C131630 + C131629) * C153638 * C153897 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C153638 * C98524) *
               C154094 -
           ((C74324 * C30184 - C74325 * C30182 - C74324 * C30185 +
             C154044 * C30188 + C74322 * C30186 - C74323 * C30183 -
             C74322 * C30187 + C154102 * C30189 + C74320 * C6377 -
             C74321 * C6367 - C74320 * C6378 + C154112 * C6385 +
             C74318 * C6379 - C74319 * C6368 - C74318 * C6380 +
             C154116 * C6386) *
                C153638 * C153897 +
            (C132178 + C132177 + C132176 + C132175) * C153638 * C98524) *
               C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154106 +
             (C70565 + C70566) * C154087 + C70575 * C154058) *
                C98524 +
            ((C78866 + C78867) * C154106 + C78793 * C154087 +
             C79477 * C154058) *
                C153897) *
               C2086 -
           ((C78837 * C154058 + C78819 * C154087 +
             (C78869 + C78868) * C154106) *
                C153897 +
            (C71540 * C154058 + C78820 * C154087 +
             (C78867 + C78866) * C154106) *
                C98524) *
               C153775) *
              C332 +
          ((((C79905 + C79906) * C154106 + C79873 * C154087 +
             C89491 * C154058) *
                C98524 +
            ((C79907 + C79908) * C154106 + C79882 * C154087 +
             (C79185 + C79186) * C154058) *
                C153897) *
               C153775 -
           ((C88813 * C154058 + C79892 * C154087 +
             (C79906 + C79905) * C154106) *
                C153897 +
            (C71330 * C154058 + (C70849 + C70850) * C154087 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C154106) *
                C98524) *
               C2086) *
              C333 +
          ((((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
              C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
              C153855 * C1390) *
                 C154106 +
             (C70851 + C70852) * C154087 + (C70853 + C70854) * C154058) *
                C98524 +
            ((C81693 + C81694) * C154106 + (C78491 + C78492) * C154087 +
             (C88231 + C88232) * C154058) *
                C153897) *
               C2086 -
           (((C70502 * C5034 - C70503 * C5031 - C70502 * C5035 +
              C153855 * C5040 + C70500 * C3515 - C70501 * C3509 -
              C70500 * C3516 + C70494 * C3521) *
                 C154058 +
             (C78494 + C78493) * C154087 + (C81696 + C81695) * C154106) *
                C153897 +
            ((C88232 + C88231) * C154058 + (C78492 + C78491) * C154087 +
             (C81694 + C81693) * C154106) *
                C98524) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154106 +
             (C70565 + C70566) * C154087 + C70575 * C154058) *
                C98524 +
            ((C78866 + C78867) * C154106 + C78793 * C154087 +
             C79477 * C154058) *
                C153897) *
               C2086 -
           ((C78837 * C154058 + C78819 * C154087 +
             (C78869 + C78868) * C154106) *
                C153897 +
            (C71540 * C154058 + C78820 * C154087 +
             (C78867 + C78866) * C154106) *
                C98524) *
               C153775) *
              C153695 * C1281 +
          (((C78793 * C154106 + C79477 * C154087 + C89104 * C154058) * C98524 +
            (C78802 * C154106 + C79478 * C154087 +
             (C71133 + C71134) * C154058) *
                C153897) *
               C153775 -
           ((C71539 * C154058 + C71540 * C154087 + C78820 * C154106) * C153897 +
            (C70578 * C154058 + (C70568 + C70567) * C154087 +
             (C70566 + C70565) * C154106) *
                C98524) *
               C2086) *
              C153695 * C1282 +
          (((C70575 * C154106 + C70576 * C154087 +
             (C70572 + C70571) * C154058) *
                C98524 +
            (C79477 * C154106 + C89104 * C154087 +
             (C71553 + C71554) * C154058) *
                C153897) *
               C2086 -
           (((C70502 * C1518 - C70503 * C1513 - C70502 * C1519 +
              C153855 * C1528 + C70500 * C596 - C70501 * C575 - C70500 * C597 +
              C70494 * C611) *
                 C154058 +
             (C71134 + C71133) * C154087 + C78837 * C154106) *
                C153897 +
            ((C71554 + C71553) * C154058 + C71539 * C154087 +
             C71540 * C154106) *
                C98524) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
             C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                C154106 +
            (C70565 + C70566) * C154087 + C70575 * C154058) *
               C98524 +
           ((C78866 + C78867) * C154106 + C78793 * C154087 + C79477 * C154058) *
               C153897) *
              C2292 -
          ((C78837 * C154058 + C78819 * C154087 + (C78869 + C78868) * C154106) *
               C153897 +
           (C71540 * C154058 + C78820 * C154087 + (C78867 + C78866) * C154106) *
               C98524) *
              C2293 +
          ((C78878 * C154106 + C78802 * C154087 + C79478 * C154058) * C98524 +
           ((C78873 + C78872) * C154106 + C78880 * C154087 +
            (C78876 + C78877) * C154058) *
               C153897) *
              C2294 -
          (((C70502 * C9202 - C70503 * C9199 - C70502 * C9203 +
             C153855 * C9208 + C70500 * C7748 - C70501 * C7742 -
             C70500 * C7749 + C70494 * C7754) *
                C154058 +
            (C78875 + C78874) * C154087 + (C82488 + C82487) * C154106) *
               C153897 +
           ((C78877 + C78876) * C154058 + C78879 * C154087 + C82472 * C154106) *
               C98524) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C153638 * C98524 +
            (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
               C2086 -
           ((C130955 + C130956 + C130957 + C130958) * C153638 * C153897 +
            (C130954 + C130953 + C130952 + C130951) * C153638 * C98524) *
               C153775) *
              C153695 * C1281 +
          (((C74906 + C74905 + C74904 + C74903) * C153638 * C98524 +
            (C74907 + C74908 + C74909 + C74910) * C153638 * C153897) *
               C153775 -
           ((C74903 + C74904 + C74905 + C74906) * C153638 * C153897 +
            (C74402 + C74401 + C74400 + C74399) * C153638 * C98524) *
               C2086) *
              C153695 * C1282 +
          (((C74406 + C74405 + C74404 + C74403) * C153638 * C98524 +
            (C75351 + C75352 + C75353 + C75354) * C153638 * C153897) *
               C2086 -
           ((C74324 * C5034 - C74325 * C5031 - C74324 * C5035 +
             C154044 * C5040 + C74322 * C3515 - C74323 * C3509 -
             C74322 * C3516 + C154102 * C3521 + C74320 * C1522 -
             C74321 * C1515 - C74320 * C1523 + C154112 * C1530 + C74318 * C592 -
             C74319 * C573 - C74318 * C593 + C154116 * C609) *
                C153638 * C153897 +
            (C75354 + C75353 + C75352 + C75351) * C153638 * C98524) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C153638 * C98524 +
            (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
               C2086 -
           ((C130955 + C130956 + C130957 + C130958) * C153638 * C153897 +
            (C130954 + C130953 + C130952 + C130951) * C153638 * C98524) *
               C153775) *
              C332 +
          (((C131629 + C131630 + C131631 + C131632) * C153638 * C98524 +
            (C132175 + C132176 + C132177 + C132178) * C153638 * C153897) *
               C153775 -
           ((C131632 + C131631 + C131630 + C131629) * C153638 * C153897 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C153638 * C98524) *
               C2086) *
              C333 +
          (((C74318 * C359 - C74319 * C342 - C74318 * C360 + C154116 * C378 +
             C74320 * C1384 - C74321 * C1375 - C74320 * C1385 +
             C154112 * C1390 + C74322 * C3193 - C74323 * C3189 -
             C74322 * C3194 + C154102 * C3201 + C74324 * C4808 -
             C74325 * C4803 - C74324 * C4809 + C154044 * C4812) *
                C153638 * C98524 +
            (C132849 + C132850 + C132851 + C132852) * C153638 * C153897) *
               C2086 -
           ((C74324 * C29443 - C74325 * C29442 - C74324 * C29444 +
             C154044 * C29445 + C74322 * C28692 - C74323 * C28690 -
             C74322 * C28693 + C154102 * C28696 + C74320 * C5038 -
             C74321 * C5033 - C74320 * C5039 + C154112 * C5042 +
             C74318 * C3511 - C74319 * C3507 - C74318 * C3512 +
             C154116 * C3519) *
                C153638 * C153897 +
            (C132852 + C132851 + C132850 + C132849) * C153638 * C98524) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
            C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
            C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
            C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
            C154044 * C1390) *
               C153638 * C98524 +
           (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
              C2292 -
          ((C130955 + C130956 + C130957 + C130958) * C153638 * C153897 +
           (C130954 + C130953 + C130952 + C130951) * C153638 * C98524) *
              C2293 +
          ((C130958 + C130957 + C130956 + C130955) * C153638 * C98524 +
           (C133395 + C133396 + C133397 + C133398) * C153638 * C153897) *
              C2294 -
          ((C74324 * C32652 - C74325 * C32651 - C74324 * C32653 +
            C154044 * C32654 + C74322 * C31180 - C74323 * C31178 -
            C74322 * C31181 + C154102 * C31184 + C74320 * C9206 -
            C74321 * C9201 - C74320 * C9207 + C154112 * C9210 + C74318 * C7744 -
            C74319 * C7740 - C74318 * C7745 + C154116 * C7752) *
               C153638 * C153897 +
           (C133398 + C133397 + C133396 + C133395) * C153638 * C98524) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154106 +
             (C70565 + C70566) * C154087 + C70575 * C154058) *
                C98524 +
            ((C78866 + C78867) * C154106 + C78793 * C154087 +
             C79477 * C154058) *
                C153897) *
               C154094 -
           ((C78837 * C154058 + C78819 * C154087 +
             (C78869 + C78868) * C154106) *
                C153897 +
            (C71540 * C154058 + C78820 * C154087 +
             (C78867 + C78866) * C154106) *
                C98524) *
               C154095 +
           ((C78878 * C154106 + C78802 * C154087 + C79478 * C154058) * C98524 +
            ((C78873 + C78872) * C154106 + C78880 * C154087 +
             (C78876 + C78877) * C154058) *
                C153897) *
               C2602) *
              C153695 * C154013 +
          (((C78793 * C154106 + C79477 * C154087 + C89104 * C154058) * C98524 +
            (C78802 * C154106 + C79478 * C154087 +
             (C71133 + C71134) * C154058) *
                C153897) *
               C154095 -
           ((C71539 * C154058 + C71540 * C154087 + C78820 * C154106) * C153897 +
            (C70578 * C154058 + (C70568 + C70567) * C154087 +
             (C70566 + C70565) * C154106) *
                C98524) *
               C154094 -
           (((C70502 * C8574 - C70503 * C8573 - C70502 * C8575 +
              C153855 * C8576 + C70500 * C2303 - C70501 * C2297 -
              C70500 * C2304 + C70494 * C2312) *
                 C154058 +
             (C78877 + C78876) * C154087 + C78879 * C154106) *
                C153897 +
            ((C71134 + C71133) * C154058 + C78837 * C154087 +
             C78819 * C154106) *
                C98524) *
               C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C153638 * C98524 +
            (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
               C154094 -
           ((C130955 + C130956 + C130957 + C130958) * C153638 * C153897 +
            (C130954 + C130953 + C130952 + C130951) * C153638 * C98524) *
               C154095 +
           ((C130958 + C130957 + C130956 + C130955) * C153638 * C98524 +
            (C133395 + C133396 + C133397 + C133398) * C153638 * C153897) *
               C2602) *
              C153695 * C154013 +
          (((C74906 + C74905 + C74904 + C74903) * C153638 * C98524 +
            (C74907 + C74908 + C74909 + C74910) * C153638 * C153897) *
               C154095 -
           ((C74903 + C74904 + C74905 + C74906) * C153638 * C153897 +
            (C74402 + C74401 + C74400 + C74399) * C153638 * C98524) *
               C154094 -
           ((C74324 * C32003 - C74325 * C32002 - C74324 * C32004 +
             C154044 * C32005 + C74322 * C6373 - C74323 * C6365 -
             C74322 * C6374 + C154102 * C6383 + C74320 * C6375 -
             C74321 * C6366 - C74320 * C6376 + C154112 * C6384 +
             C74318 * C2307 - C74319 * C2299 - C74318 * C2308 +
             C154116 * C2314) *
                C153638 * C153897 +
            (C74910 + C74909 + C74908 + C74907) * C153638 * C98524) *
               C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154106 +
             (C70565 + C70566) * C154087 + C70575 * C154058) *
                C98524 +
            ((C78866 + C78867) * C154106 + C78793 * C154087 +
             C79477 * C154058) *
                C153897) *
               C2086 -
           ((C78837 * C154058 + C78819 * C154087 +
             (C78869 + C78868) * C154106) *
                C153897 +
            (C71540 * C154058 + C78820 * C154087 +
             (C78867 + C78866) * C154106) *
                C98524) *
               C153775) *
              C153695 * C1281 +
          (((C78793 * C154106 + C79477 * C154087 + C89104 * C154058) * C98524 +
            (C78802 * C154106 + C79478 * C154087 +
             (C71133 + C71134) * C154058) *
                C153897) *
               C153775 -
           ((C71539 * C154058 + C71540 * C154087 + C78820 * C154106) * C153897 +
            (C70578 * C154058 + (C70568 + C70567) * C154087 +
             (C70566 + C70565) * C154106) *
                C98524) *
               C2086) *
              C153695 * C1282 +
          (((C70575 * C154106 + C70576 * C154087 +
             (C70572 + C70571) * C154058) *
                C98524 +
            (C79477 * C154106 + C89104 * C154087 +
             (C71553 + C71554) * C154058) *
                C153897) *
               C2086 -
           (((C70502 * C1518 - C70503 * C1513 - C70502 * C1519 +
              C153855 * C1528 + C70500 * C596 - C70501 * C575 - C70500 * C597 +
              C70494 * C611) *
                 C154058 +
             (C71134 + C71133) * C154087 + C78837 * C154106) *
                C153897 +
            ((C71554 + C71553) * C154058 + C71539 * C154087 +
             C71540 * C154106) *
                C98524) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C70500 * C144 - C70501 * C136 - C70500 * C145 + C70494 * C160 +
              C70502 * C357 - C70503 * C341 - C70502 * C358 + C153855 * C377) *
                 C154106 +
             (C70565 + C70566) * C154087 + C70575 * C154058) *
                C98524 +
            ((C78866 + C78867) * C154106 + C78793 * C154087 +
             C79477 * C154058) *
                C153897) *
               C2086 -
           ((C78837 * C154058 + C78819 * C154087 +
             (C78869 + C78868) * C154106) *
                C153897 +
            (C71540 * C154058 + C78820 * C154087 +
             (C78867 + C78866) * C154106) *
                C98524) *
               C153775) *
              C332 +
          ((((C79905 + C79906) * C154106 + C79873 * C154087 +
             C89491 * C154058) *
                C98524 +
            ((C79907 + C79908) * C154106 + C79882 * C154087 +
             (C79185 + C79186) * C154058) *
                C153897) *
               C153775 -
           ((C88813 * C154058 + C79892 * C154087 +
             (C79906 + C79905) * C154106) *
                C153897 +
            (C71330 * C154058 + (C70849 + C70850) * C154087 +
             (C70502 * C359 - C70503 * C342 - C70502 * C360 + C153855 * C378 +
              C70500 * C357 - C70501 * C341 - C70500 * C358 + C70494 * C377) *
                 C154106) *
                C98524) *
               C2086) *
              C333 +
          ((((C70500 * C359 - C70501 * C342 - C70500 * C360 + C70494 * C378 +
              C70502 * C1384 - C70503 * C1375 - C70502 * C1385 +
              C153855 * C1390) *
                 C154106 +
             (C70851 + C70852) * C154087 + (C70853 + C70854) * C154058) *
                C98524 +
            ((C81693 + C81694) * C154106 + (C78491 + C78492) * C154087 +
             (C88231 + C88232) * C154058) *
                C153897) *
               C2086 -
           (((C70502 * C5034 - C70503 * C5031 - C70502 * C5035 +
              C153855 * C5040 + C70500 * C3515 - C70501 * C3509 -
              C70500 * C3516 + C70494 * C3521) *
                 C154058 +
             (C78494 + C78493) * C154087 + (C81696 + C81695) * C154106) *
                C153897 +
            ((C88232 + C88231) * C154058 + (C78492 + C78491) * C154087 +
             (C81694 + C81693) * C154106) *
                C98524) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C153638 * C98524 +
            (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
               C2086 -
           ((C130955 + C130956 + C130957 + C130958) * C153638 * C153897 +
            (C130954 + C130953 + C130952 + C130951) * C153638 * C98524) *
               C153775) *
              C153695 * C1281 +
          (((C74906 + C74905 + C74904 + C74903) * C153638 * C98524 +
            (C74907 + C74908 + C74909 + C74910) * C153638 * C153897) *
               C153775 -
           ((C74903 + C74904 + C74905 + C74906) * C153638 * C153897 +
            (C74402 + C74401 + C74400 + C74399) * C153638 * C98524) *
               C2086) *
              C153695 * C1282 +
          (((C74406 + C74405 + C74404 + C74403) * C153638 * C98524 +
            (C75351 + C75352 + C75353 + C75354) * C153638 * C153897) *
               C2086 -
           ((C74324 * C5034 - C74325 * C5031 - C74324 * C5035 +
             C154044 * C5040 + C74322 * C3515 - C74323 * C3509 -
             C74322 * C3516 + C154102 * C3521 + C74320 * C1522 -
             C74321 * C1515 - C74320 * C1523 + C154112 * C1530 + C74318 * C592 -
             C74319 * C573 - C74318 * C593 + C154116 * C609) *
                C153638 * C153897 +
            (C75354 + C75353 + C75352 + C75351) * C153638 * C98524) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C74318 * C144 - C74319 * C136 - C74318 * C145 + C154116 * C160 +
             C74320 * C357 - C74321 * C341 - C74320 * C358 + C154112 * C377 +
             C74322 * C359 - C74323 * C342 - C74322 * C360 + C154102 * C378 +
             C74324 * C1384 - C74325 * C1375 - C74324 * C1385 +
             C154044 * C1390) *
                C153638 * C98524 +
            (C130951 + C130952 + C130953 + C130954) * C153638 * C153897) *
               C2086 -
           ((C130955 + C130956 + C130957 + C130958) * C153638 * C153897 +
            (C130954 + C130953 + C130952 + C130951) * C153638 * C98524) *
               C153775) *
              C332 +
          (((C131629 + C131630 + C131631 + C131632) * C153638 * C98524 +
            (C132175 + C132176 + C132177 + C132178) * C153638 * C153897) *
               C153775 -
           ((C131632 + C131631 + C131630 + C131629) * C153638 * C153897 +
            (C74324 * C3193 - C74325 * C3189 - C74324 * C3194 +
             C154044 * C3201 + C74322 * C1384 - C74323 * C1375 -
             C74322 * C1385 + C154102 * C1390 + C74320 * C359 - C74321 * C342 -
             C74320 * C360 + C154112 * C378 + C74318 * C357 - C74319 * C341 -
             C74318 * C358 + C154116 * C377) *
                C153638 * C98524) *
               C2086) *
              C333 +
          (((C74318 * C359 - C74319 * C342 - C74318 * C360 + C154116 * C378 +
             C74320 * C1384 - C74321 * C1375 - C74320 * C1385 +
             C154112 * C1390 + C74322 * C3193 - C74323 * C3189 -
             C74322 * C3194 + C154102 * C3201 + C74324 * C4808 -
             C74325 * C4803 - C74324 * C4809 + C154044 * C4812) *
                C153638 * C98524 +
            (C132849 + C132850 + C132851 + C132852) * C153638 * C153897) *
               C2086 -
           ((C74324 * C29443 - C74325 * C29442 - C74324 * C29444 +
             C154044 * C29445 + C74322 * C28692 - C74323 * C28690 -
             C74322 * C28693 + C154102 * C28696 + C74320 * C5038 -
             C74321 * C5033 - C74320 * C5039 + C154112 * C5042 +
             C74318 * C3511 - C74319 * C3507 - C74318 * C3512 +
             C154116 * C3519) *
                C153638 * C153897 +
            (C132852 + C132851 + C132850 + C132849) * C153638 * C98524) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C154002 +
            (C35004 + C35005 + C35006 + C35007) * C153648) *
               C153810 * C153711 * C154021 -
           ((C35258 + C35259 + C35260 + C35261) * C153648 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C154002) *
               C153810 * C153711 * C153747) *
              C154090 +
          (((C35261 + C35260 + C35259 + C35258) * C154002 +
            (C35734 + C35735 + C35736 + C35737) * C153648) *
               C153810 * C153711 * C153747 -
           ((C35008 + C35009 + C35010 + C35011) * C153648 +
            (C35007 + C35006 + C35005 + C35004) * C154002) *
               C153810 * C153711 * C154021) *
              C154091 +
          (((C35011 + C35010 + C35009 + C35008) * C154002 +
            (C35012 + C35013 + C35014 + C35015) * C153648) *
               C153810 * C153711 * C154021 -
           ((C34929 * C3199 - C34930 * C3192 - C34929 * C3200 +
             C154044 * C3204 + C34927 * C1378 - C34928 * C1372 -
             C34927 * C1379 + C34919 * C1387 + C34925 * C365 - C34926 * C345 -
             C34925 * C366 + C34918 * C381 + C34923 * C351 - C34924 * C338 -
             C34923 * C352 + C34917 * C374) *
                C153648 +
            (C35737 + C35736 + C35735 + C35734) * C154002) *
               C153810 * C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C11433 +
            (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
               C153810 * C153711 * C154021 -
           (C12266 * C154036 + C12267 * C11435 + (C11786 + C11787) * C11434 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C11433) *
               C153810 * C153711 * C153747) *
              C154090 +
          (((C11787 + C11786) * C11433 + (C11785 + C11784) * C11434 +
            (C11783 + C11782) * C11435 + (C12280 + C12281) * C154036) *
               C153810 * C153711 * C153747 -
           (C11514 * C154036 + C11515 * C11435 + (C11505 + C11504) * C11434 +
            (C11503 + C11502) * C11433) *
               C153810 * C153711 * C154021) *
              C154091 +
          ((C11512 * C11433 + C11513 * C11434 + (C11509 + C11508) * C11435 +
            (C11510 + C11511) * C154036) *
               C153810 * C153711 * C154021 -
           ((C11439 * C371 - C11440 * C348 - C11439 * C372 + C153855 * C384 +
             C11437 * C369 - C11438 * C347 - C11437 * C370 + C154035 * C383) *
                C154036 +
            (C12281 + C12280) * C11435 + C12266 * C11434 + C12267 * C11433) *
               C153810 * C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C154002 +
             (C11502 + C11503) * C153648) *
                C47632 +
            ((C19518 + C19519) * C154002 + C19472 * C153648) * C47633 +
            C58748 * C154074) *
               C153711 * C154021 -
           (((C20536 + C20535) * C153648 + (C21326 + C21325) * C154002) *
                C154074 +
            (C20520 * C153648 + (C20534 + C20533) * C154002) * C47633 +
            ((C11786 + C11787) * C153648 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C154002) *
                C47632) *
               C153711 * C153747) *
              C154090 +
          ((((C11787 + C11786) * C154002 + (C11785 + C11784) * C153648) *
                C47632 +
            (C20502 * C154002 + C20503 * C153648) * C47633 +
            ((C20535 + C20536) * C154002 + (C20537 + C20538) * C153648) *
                C154074) *
               C153711 * C153747 -
           (C58747 * C154074 + (C12477 * C153648 + C19483 * C154002) * C47633 +
            ((C11505 + C11504) * C153648 + (C11503 + C11502) * C154002) *
                C47632) *
               C153711 * C154021) *
              C154091 +
          (((C11512 * C154002 + C11513 * C153648) * C47632 +
            (C18855 * C154002 + C20107 * C153648) * C47633 +
            (C19485 * C154002 + (C12070 + C12071) * C153648) * C154074) *
               C153711 * C154021 -
           (((C11439 * C3517 - C11440 * C3510 - C11439 * C3518 +
              C153855 * C3522 + C11437 * C1520 - C11438 * C1514 -
              C11437 * C1521 + C154035 * C1529) *
                 C153648 +
             (C20538 + C20537) * C154002) *
                C154074 +
            ((C12791 + C12790) * C153648 + C19816 * C154002) * C47633 +
            (C12266 * C153648 + C12267 * C154002) * C47632) *
               C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
              C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
              C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
              C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
              C154044 * C1390) *
                 C154002 +
             (C35004 + C35005 + C35006 + C35007) * C153648) *
                C153810 * C154022 -
            ((C35508 + C35509 + C35510 + C35511) * C153648 +
             (C34929 * C4383 - C34930 * C4379 - C34929 * C4384 +
              C154044 * C4391 + C34927 * C1957 - C34928 * C1948 -
              C34927 * C1958 + C34919 * C1963 + C34925 * C1111 -
              C34926 * C1105 - C34925 * C1112 + C34918 * C1123 + C34923 * C586 -
              C34924 * C570 - C34923 * C587 + C34917 * C606) *
                 C154002) *
                C153810 * C153775) *
               C154021 +
           (((C34923 * C1111 - C34924 * C1105 - C34923 * C1112 +
              C34917 * C1123 + C34925 * C1957 - C34926 * C1948 -
              C34925 * C1958 + C34918 * C1963 + C34927 * C4383 -
              C34928 * C4379 - C34927 * C4384 + C34919 * C4391 +
              C34929 * C5776 - C34930 * C5771 - C34929 * C5777 +
              C154044 * C5780) *
                 C154002 +
             (C36242 + C36243 + C36244 + C36245) * C153648) *
                C153810 * C153775 -
            ((C35258 + C35259 + C35260 + C35261) * C153648 +
             (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
              C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
              C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
              C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
              C34923 * C358 + C34917 * C377) *
                 C154002) *
                C153810 * C154022) *
               C153747) *
              C335 +
          ((((C35511 + C35510 + C35509 + C35508) * C154002 +
             (C35956 + C35957 + C35958 + C35959) * C153648) *
                C153810 * C153775 -
            ((C35008 + C35009 + C35010 + C35011) * C153648 +
             (C35007 + C35006 + C35005 + C35004) * C154002) *
                C153810 * C154022) *
               C154021 +
           (((C35261 + C35260 + C35259 + C35258) * C154002 +
             (C35734 + C35735 + C35736 + C35737) * C153648) *
                C153810 * C154022 -
            ((C34929 * C5772 - C34930 * C5769 - C34929 * C5773 +
              C154044 * C5778 + C34927 * C4387 - C34928 * C4381 -
              C34927 * C4388 + C34919 * C4393 + C34925 * C1953 -
              C34926 * C1946 - C34925 * C1954 + C34918 * C1961 +
              C34923 * C1115 - C34924 * C1107 - C34923 * C1116 +
              C34917 * C1125) *
                 C153648 +
             (C36245 + C36244 + C36243 + C36242) * C154002) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C11433 +
             (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
                C153810 * C154022 -
            (C12476 * C154036 + C12477 * C11435 + (C12064 + C12065) * C11434 +
             (C11439 * C1111 - C11440 * C1105 - C11439 * C1112 +
              C153855 * C1123 + C11437 * C586 - C11438 * C570 - C11437 * C587 +
              C154035 * C606) *
                 C11433) *
                C153810 * C153775) *
               C154021 +
           (((C11437 * C1111 - C11438 * C1105 - C11437 * C1112 +
              C154035 * C1123 + C11439 * C1957 - C11440 * C1948 -
              C11439 * C1958 + C153855 * C1963) *
                 C11433 +
             (C12786 + C12787) * C11434 + (C12788 + C12789) * C11435 +
             (C12790 + C12791) * C154036) *
                C153810 * C153775 -
            (C12266 * C154036 + C12267 * C11435 + (C11786 + C11787) * C11434 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C11433) *
                C153810 * C154022) *
               C153747) *
              C335 +
          ((((C12065 + C12064) * C11433 + (C12063 + C12062) * C11434 +
             (C12061 + C12060) * C11435 + (C12490 + C12491) * C154036) *
                C153810 * C153775 -
            (C11514 * C154036 + C11515 * C11435 + (C11505 + C11504) * C11434 +
             (C11503 + C11502) * C11433) *
                C153810 * C154022) *
               C154021 +
           (((C11787 + C11786) * C11433 + (C11785 + C11784) * C11434 +
             (C11783 + C11782) * C11435 + (C12280 + C12281) * C154036) *
                C153810 * C154022 -
            ((C11439 * C1949 - C11440 * C1944 - C11439 * C1950 +
              C153855 * C1959 + C11437 * C1119 - C11438 * C1109 -
              C11437 * C1120 + C154035 * C1127) *
                 C154036 +
             (C12791 + C12790) * C11435 + (C12789 + C12788) * C11434 +
             (C12787 + C12786) * C11433) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
               C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                  C154002 +
              (C11502 + C11503) * C153648) *
                 C47632 +
             ((C19518 + C19519) * C154002 + C19472 * C153648) * C47633 +
             C58748 * C154074) *
                C154022 -
            ((C58732 * C153648 + (C23094 + C23093) * C154002) * C154074 +
             (C19474 * C153648 + (C19520 + C19521) * C154002) * C47633 +
             (C19483 * C153648 + (C19519 + C19518) * C154002) * C47632) *
                C153775) *
               C154021 +
           ((((C20533 + C20534) * C154002 + C20502 * C153648) * C47632 +
             ((C21325 + C21326) * C154002 + C59719 * C153648) * C47633 +
             ((C11437 * C6379 - C11438 * C6368 - C11437 * C6380 +
               C154035 * C6386 + C11439 * C6377 - C11440 * C6367 -
               C11439 * C6378 + C153855 * C6385) *
                  C154002 +
              (C59733 + C59734) * C153648) *
                 C154074) *
                C153775 -
            ((C59728 * C153648 + (C21326 + C21325) * C154002) * C154074 +
             (C20520 * C153648 + (C20534 + C20533) * C154002) * C47633 +
             ((C11786 + C11787) * C153648 +
              (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
               C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                  C154002) *
                 C47632) *
                C154022) *
               C153747) *
              C335 +
          ((((C19472 * C154002 + C18855 * C153648) * C47632 +
             (C19484 * C154002 + C19485 * C153648) * C47633 +
             (C58733 * C154002 + (C19524 + C19525) * C153648) * C154074) *
                C153775 -
            (C58747 * C154074 + (C12477 * C153648 + C19483 * C154002) * C47633 +
             ((C11505 + C11504) * C153648 + (C11503 + C11502) * C154002) *
                 C47632) *
                C154022) *
               C154021 +
           ((((C11787 + C11786) * C154002 + (C11785 + C11784) * C153648) *
                 C47632 +
             (C20502 * C154002 + C20503 * C153648) * C47633 +
             (C59719 * C154002 + (C20537 + C20538) * C153648) * C154074) *
                C154022 -
            (((C11439 * C6369 - C11440 * C6363 - C11439 * C6370 +
               C153855 * C6381 + C11437 * C6371 - C11438 * C6364 -
               C11437 * C6372 + C154035 * C6382) *
                  C153648 +
              (C59734 + C59733) * C154002) *
                 C154074 +
             ((C20538 + C20537) * C153648 + C59728 * C154002) * C47633 +
             (C19816 * C153648 + C20520 * C154002) * C47632) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
                C11439 * C357 - C11440 * C341 - C11439 * C358 +
                C153855 * C377) *
                   C11433 +
               (C11502 + C11503) * C11434 + C11512 * C11435 +
               C11513 * C154036) *
                  C153810 * C153711 * C153695 * C130 -
              (C11514 * C154036 + C11515 * C11435 + (C11505 + C11504) * C11434 +
               (C11503 + C11502) * C11433) *
                  C153810 * C153711 * C153695 * C131 +
              (C11512 * C11433 + C11513 * C11434 + (C11509 + C11508) * C11435 +
               (C11510 + C11511) * C154036) *
                  C153810 * C153711 * C153695 * C132 -
              ((C11439 * C798 - C11440 * C797 - C11439 * C799 + C153855 * C800 +
                C11437 * C156 - C11438 * C142 - C11437 * C157 +
                C154035 * C166) *
                   C154036 +
               (C11511 + C11510) * C11435 + C11514 * C11434 + C11515 * C11433) *
                  C153810 * C153711 * C153695 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C11437 * C144 - C11438 * C136 - C11437 * C145 +
                 C154035 * C160 + C11439 * C357 - C11440 * C341 -
                 C11439 * C358 + C153855 * C377) *
                    C11433 +
                (C11502 + C11503) * C11434 + C11512 * C11435 +
                C11513 * C154036) *
                   C153810 * C153711 * C332 -
               ((C11782 + C11783) * C154036 + (C11784 + C11785) * C11435 +
                (C11786 + C11787) * C11434 +
                (C11439 * C359 - C11440 * C342 - C11439 * C360 +
                 C153855 * C378 + C11437 * C357 - C11438 * C341 -
                 C11437 * C358 + C154035 * C377) *
                    C11433) *
                   C153810 * C153711 * C333 +
               ((C11437 * C359 - C11438 * C342 - C11437 * C360 +
                 C154035 * C378 + C11439 * C1384 - C11440 * C1375 -
                 C11439 * C1385 + C153855 * C1390) *
                    C11433 +
                (C11788 + C11789) * C11434 + (C11790 + C11791) * C11435 +
                (C11792 + C11793) * C154036) *
                   C153810 * C153711 * C334) *
                  C335 +
              (((C11787 + C11786) * C11433 + (C11785 + C11784) * C11434 +
                (C11783 + C11782) * C11435 +
                (C11437 * C349 - C11438 * C337 - C11437 * C350 +
                 C154035 * C373 + C11439 * C367 - C11440 * C346 -
                 C11439 * C368 + C153855 * C382) *
                    C154036) *
                   C153810 * C153711 * C333 -
               (C11514 * C154036 + C11515 * C11435 +
                (C11505 + C11504) * C11434 + (C11503 + C11502) * C11433) *
                   C153810 * C153711 * C332 -
               ((C11439 * C1376 - C11440 * C1371 - C11439 * C1377 +
                 C153855 * C1386 + C11437 * C367 - C11438 * C346 -
                 C11437 * C368 + C154035 * C382) *
                    C154036 +
                (C11793 + C11792) * C11435 + (C11791 + C11790) * C11434 +
                (C11789 + C11788) * C11433) *
                   C153810 * C153711 * C334) *
                  C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C11433 +
            (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
               C153810 * C563 -
           ((C12060 + C12061) * C154036 + (C12062 + C12063) * C11435 +
            (C12064 + C12065) * C11434 +
            (C11439 * C1111 - C11440 * C1105 - C11439 * C1112 +
             C153855 * C1123 + C11437 * C586 - C11438 * C570 - C11437 * C587 +
             C154035 * C606) *
                C11433) *
               C153810 * C564 +
           ((C11437 * C588 - C11438 * C571 - C11437 * C589 + C154035 * C607 +
             C11439 * C1526 - C11440 * C1517 - C11439 * C1527 +
             C153855 * C1532) *
                C11433 +
            (C12066 + C12067) * C11434 + (C12068 + C12069) * C11435 +
            (C12070 + C12071) * C154036) *
               C153810 * C565) *
              C153695 * C335 +
          (((C12065 + C12064) * C11433 + (C12063 + C12062) * C11434 +
            (C12061 + C12060) * C11435 +
            (C11437 * C578 - C11438 * C566 - C11437 * C579 + C154035 * C602 +
             C11439 * C1119 - C11440 * C1109 - C11439 * C1120 +
             C153855 * C1127) *
                C154036) *
               C153810 * C564 -
           (C11514 * C154036 + C11515 * C11435 + (C11505 + C11504) * C11434 +
            (C11503 + C11502) * C11433) *
               C153810 * C563 -
           ((C11439 * C1518 - C11440 * C1513 - C11439 * C1519 +
             C153855 * C1528 + C11437 * C596 - C11438 * C575 - C11437 * C597 +
             C154035 * C611) *
                C154036 +
            (C12071 + C12070) * C11435 + (C12069 + C12068) * C11434 +
            (C12067 + C12066) * C11433) *
               C153810 * C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
            C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
            C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
            C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
            C154044 * C1390) *
               C154002 +
           (C35004 + C35005 + C35006 + C35007) * C153648) *
              C153810 * C153711 * C153695 * C130 -
          ((C35008 + C35009 + C35010 + C35011) * C153648 +
           (C35007 + C35006 + C35005 + C35004) * C154002) *
              C153810 * C153711 * C153695 * C131 +
          ((C35011 + C35010 + C35009 + C35008) * C154002 +
           (C35012 + C35013 + C35014 + C35015) * C153648) *
              C153810 * C153711 * C153695 * C132 -
          ((C34929 * C1376 - C34930 * C1371 - C34929 * C1377 + C154044 * C1386 +
            C34927 * C367 - C34928 * C346 - C34927 * C368 + C34919 * C382 +
            C34925 * C349 - C34926 * C337 - C34925 * C350 + C34918 * C373 +
            C34923 * C152 - C34924 * C140 - C34923 * C153 + C34917 * C164) *
               C153648 +
           (C35015 + C35014 + C35013 + C35012) * C154002) *
              C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C154002 +
            (C35004 + C35005 + C35006 + C35007) * C153648) *
               C153810 * C153711 * C332 -
           ((C35258 + C35259 + C35260 + C35261) * C153648 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C154002) *
               C153810 * C153711 * C333 +
           ((C34923 * C359 - C34924 * C342 - C34923 * C360 + C34917 * C378 +
             C34925 * C1384 - C34926 * C1375 - C34925 * C1385 + C34918 * C1390 +
             C34927 * C3193 - C34928 * C3189 - C34927 * C3194 + C34919 * C3201 +
             C34929 * C4808 - C34930 * C4803 - C34929 * C4809 +
             C154044 * C4812) *
                C154002 +
            (C35262 + C35263 + C35264 + C35265) * C153648) *
               C153810 * C153711 * C334) *
              C335 +
          (((C35261 + C35260 + C35259 + C35258) * C154002 +
            (C34923 * C353 - C34924 * C339 - C34923 * C354 + C34917 * C375 +
             C34925 * C363 - C34926 * C344 - C34925 * C364 + C34918 * C380 +
             C34927 * C1380 - C34928 * C1373 - C34927 * C1381 + C34919 * C1388 +
             C34929 * C3197 - C34930 * C3191 - C34929 * C3198 +
             C154044 * C3203) *
                C153648) *
               C153810 * C153711 * C333 -
           ((C35008 + C35009 + C35010 + C35011) * C153648 +
            (C35007 + C35006 + C35005 + C35004) * C154002) *
               C153810 * C153711 * C332 -
           ((C34929 * C4804 - C34930 * C4801 - C34929 * C4805 +
             C154044 * C4810 + C34927 * C3197 - C34928 * C3191 -
             C34927 * C3198 + C34919 * C3203 + C34925 * C1380 - C34926 * C1373 -
             C34925 * C1381 + C34918 * C1388 + C34923 * C363 - C34924 * C344 -
             C34923 * C364 + C34917 * C380) *
                C153648 +
            (C35265 + C35264 + C35263 + C35262) * C154002) *
               C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C154002 +
            (C35004 + C35005 + C35006 + C35007) * C153648) *
               C153810 * C563 -
           ((C35508 + C35509 + C35510 + C35511) * C153648 +
            (C34929 * C4383 - C34930 * C4379 - C34929 * C4384 +
             C154044 * C4391 + C34927 * C1957 - C34928 * C1948 -
             C34927 * C1958 + C34919 * C1963 + C34925 * C1111 - C34926 * C1105 -
             C34925 * C1112 + C34918 * C1123 + C34923 * C586 - C34924 * C570 -
             C34923 * C587 + C34917 * C606) *
                C154002) *
               C153810 * C564 +
           ((C34923 * C588 - C34924 * C571 - C34923 * C589 + C34917 * C607 +
             C34925 * C1526 - C34926 * C1517 - C34925 * C1527 + C34918 * C1532 +
             C34927 * C3511 - C34928 * C3507 - C34927 * C3512 + C34919 * C3519 +
             C34929 * C5038 - C34930 * C5033 - C34929 * C5039 +
             C154044 * C5042) *
                C154002 +
            (C35512 + C35513 + C35514 + C35515) * C153648) *
               C153810 * C565) *
              C153695 * C335 +
          (((C35511 + C35510 + C35509 + C35508) * C154002 +
            (C34923 * C582 - C34924 * C568 - C34923 * C583 + C34917 * C604 +
             C34925 * C1115 - C34926 * C1107 - C34925 * C1116 + C34918 * C1125 +
             C34927 * C1953 - C34928 * C1946 - C34927 * C1954 + C34919 * C1961 +
             C34929 * C4387 - C34930 * C4381 - C34929 * C4388 +
             C154044 * C4393) *
                C153648) *
               C153810 * C564 -
           ((C35008 + C35009 + C35010 + C35011) * C153648 +
            (C35007 + C35006 + C35005 + C35004) * C154002) *
               C153810 * C563 -
           ((C34929 * C5034 - C34930 * C5031 - C34929 * C5035 +
             C154044 * C5040 + C34927 * C3515 - C34928 * C3509 -
             C34927 * C3516 + C34919 * C3521 + C34925 * C1522 - C34926 * C1515 -
             C34925 * C1523 + C34918 * C1530 + C34923 * C592 - C34924 * C573 -
             C34923 * C593 + C34917 * C609) *
                C153648 +
            (C35515 + C35514 + C35513 + C35512) * C154002) *
               C153810 * C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C154002 +
            (C11502 + C11503) * C153648) *
               C47632 +
           ((C19518 + C19519) * C154002 + C19472 * C153648) * C47633 +
           ((C19521 + C19520) * C154002 + C19484 * C153648) * C154074) *
              C153711 * C153695 * C130 -
          ((C19473 * C153648 + C19474 * C154002) * C154074 +
           (C12477 * C153648 + C19483 * C154002) * C47633 +
           ((C11505 + C11504) * C153648 + (C11503 + C11502) * C154002) *
               C47632) *
              C153711 * C153695 * C131 +
          ((C11512 * C154002 + C11513 * C153648) * C47632 +
           (C18855 * C154002 + C20107 * C153648) * C47633 +
           (C19485 * C154002 + (C12070 + C12071) * C153648) * C154074) *
              C153711 * C153695 * C132 -
          (((C11439 * C1518 - C11440 * C1513 - C11439 * C1519 +
             C153855 * C1528 + C11437 * C596 - C11438 * C575 - C11437 * C597 +
             C154035 * C611) *
                C153648 +
            (C12071 + C12070) * C154002) *
               C154074 +
           ((C12491 + C12490) * C153648 + C12476 * C154002) * C47633 +
           (C11514 * C153648 + C11515 * C154002) * C47632) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C154002 +
             (C11502 + C11503) * C153648) *
                C47632 +
            ((C19518 + C19519) * C154002 + C19472 * C153648) * C47633 +
            ((C19521 + C19520) * C154002 + C19484 * C153648) * C154074) *
               C153711 * C332 -
           (((C20536 + C20535) * C153648 + (C21326 + C21325) * C154002) *
                C154074 +
            (C20520 * C153648 + (C20534 + C20533) * C154002) * C47633 +
            ((C11786 + C11787) * C153648 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C154002) *
                C47632) *
               C153711 * C333 +
           (((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
              C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
              C153855 * C1390) *
                 C154002 +
             (C11788 + C11789) * C153648) *
                C47632 +
            ((C22305 + C22306) * C154002 + (C19170 + C19171) * C153648) *
                C47633 +
            ((C11437 * C3511 - C11438 * C3507 - C11437 * C3512 +
              C154035 * C3519 + C11439 * C5038 - C11440 * C5033 -
              C11439 * C5039 + C153855 * C5042) *
                 C154002 +
             (C58438 + C58439) * C153648) *
                C154074) *
               C153711 * C334) *
              C335 +
          ((((C11787 + C11786) * C154002 + (C11785 + C11784) * C153648) *
                C47632 +
            (C20502 * C154002 + C20503 * C153648) * C47633 +
            ((C20535 + C20536) * C154002 + (C20537 + C20538) * C153648) *
                C154074) *
               C153711 * C333 -
           ((C19473 * C153648 + C19474 * C154002) * C154074 +
            (C12477 * C153648 + C19483 * C154002) * C47633 +
            ((C11505 + C11504) * C153648 + (C11503 + C11502) * C154002) *
                C47632) *
               C153711 * C332 -
           (((C11439 * C5034 - C11440 * C5031 - C11439 * C5035 +
              C153855 * C5040 + C11437 * C3515 - C11438 * C3509 -
              C11437 * C3516 + C154035 * C3521) *
                 C153648 +
             (C58439 + C58438) * C154002) *
                C154074 +
            ((C19173 + C19172) * C153648 + (C19171 + C19170) * C154002) *
                C47633 +
            ((C11791 + C11790) * C153648 + (C11789 + C11788) * C154002) *
                C47632) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C154002 +
             (C11502 + C11503) * C153648) *
                C47632 +
            ((C19518 + C19519) * C154002 + C19472 * C153648) * C47633 +
            C58748 * C154074) *
               C563 -
           ((C58732 * C153648 + (C23094 + C23093) * C154002) * C154074 +
            (C19474 * C153648 + (C19520 + C19521) * C154002) * C47633 +
            (C19483 * C153648 + (C19519 + C19518) * C154002) * C47632) *
               C564 +
           (C58748 * C47632 +
            ((C23093 + C23094) * C154002 + C58733 * C153648) * C47633 +
            ((C11437 * C7744 - C11438 * C7740 - C11437 * C7745 +
              C154035 * C7752 + C11439 * C9206 - C11440 * C9201 -
              C11439 * C9207 + C153855 * C9210) *
                 C154002 +
             (C58751 + C58752) * C153648) *
                C154074) *
               C565) *
              C153695 * C335 +
          (((C19472 * C154002 + C18855 * C153648) * C47632 +
            (C19484 * C154002 + C19485 * C153648) * C47633 +
            (C58733 * C154002 + (C19524 + C19525) * C153648) * C154074) *
               C564 -
           (C58747 * C154074 + (C12477 * C153648 + C19483 * C154002) * C47633 +
            ((C11505 + C11504) * C153648 + (C11503 + C11502) * C154002) *
                C47632) *
               C563 -
           (((C11439 * C9202 - C11440 * C9199 - C11439 * C9203 +
              C153855 * C9208 + C11437 * C7748 - C11438 * C7742 -
              C11437 * C7749 + C154035 * C7754) *
                 C153648 +
             (C58752 + C58751) * C154002) *
                C154074 +
            ((C19525 + C19524) * C153648 + C58732 * C154002) * C47633 +
            C58747 * C47632) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C154002 +
            (C35004 + C35005 + C35006 + C35007) * C153648) *
               C153810 * C154022 -
           ((C35508 + C35509 + C35510 + C35511) * C153648 +
            (C34929 * C4383 - C34930 * C4379 - C34929 * C4384 +
             C154044 * C4391 + C34927 * C1957 - C34928 * C1948 -
             C34927 * C1958 + C34919 * C1963 + C34925 * C1111 - C34926 * C1105 -
             C34925 * C1112 + C34918 * C1123 + C34923 * C586 - C34924 * C570 -
             C34923 * C587 + C34917 * C606) *
                C154002) *
               C153810 * C153775) *
              C153695 * C154090 +
          (((C35511 + C35510 + C35509 + C35508) * C154002 +
            (C35956 + C35957 + C35958 + C35959) * C153648) *
               C153810 * C153775 -
           ((C35008 + C35009 + C35010 + C35011) * C153648 +
            (C35007 + C35006 + C35005 + C35004) * C154002) *
               C153810 * C154022) *
              C153695 * C154091 +
          (((C35011 + C35010 + C35009 + C35008) * C154002 +
            (C35012 + C35013 + C35014 + C35015) * C153648) *
               C153810 * C154022 -
           ((C34929 * C4389 - C34930 * C4382 - C34929 * C4390 +
             C154044 * C4394 + C34927 * C1951 - C34928 * C1945 -
             C34927 * C1952 + C34919 * C1960 + C34925 * C1117 - C34926 * C1108 -
             C34925 * C1118 + C34918 * C1126 + C34923 * C580 - C34924 * C567 -
             C34923 * C581 + C34917 * C603) *
                C153648 +
            (C35959 + C35958 + C35957 + C35956) * C154002) *
               C153810 * C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C11433 +
            (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
               C153810 * C154022 -
           (C12476 * C154036 + C12477 * C11435 + (C12064 + C12065) * C11434 +
            (C11439 * C1111 - C11440 * C1105 - C11439 * C1112 +
             C153855 * C1123 + C11437 * C586 - C11438 * C570 - C11437 * C587 +
             C154035 * C606) *
                C11433) *
               C153810 * C153775) *
              C153695 * C154090 +
          (((C12065 + C12064) * C11433 + (C12063 + C12062) * C11434 +
            (C12061 + C12060) * C11435 + (C12490 + C12491) * C154036) *
               C153810 * C153775 -
           (C11514 * C154036 + C11515 * C11435 + (C11505 + C11504) * C11434 +
            (C11503 + C11502) * C11433) *
               C153810 * C154022) *
              C153695 * C154091 +
          ((C11512 * C11433 + C11513 * C11434 + (C11509 + C11508) * C11435 +
            (C11510 + C11511) * C154036) *
               C153810 * C154022 -
           ((C11439 * C1121 - C11440 * C1110 - C11439 * C1122 +
             C153855 * C1128 + C11437 * C598 - C11438 * C576 - C11437 * C599 +
             C154035 * C612) *
                C154036 +
            (C12491 + C12490) * C11435 + C12476 * C11434 + C12477 * C11433) *
               C153810 * C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C154002 +
             (C11502 + C11503) * C153648) *
                C47632 +
            ((C19518 + C19519) * C154002 + C19472 * C153648) * C47633 +
            C58748 * C154074) *
               C154022 -
           ((C58732 * C153648 + (C23094 + C23093) * C154002) * C154074 +
            (C19474 * C153648 + (C19520 + C19521) * C154002) * C47633 +
            (C19483 * C153648 + (C19519 + C19518) * C154002) * C47632) *
               C153775) *
              C153695 * C154090 +
          (((C19472 * C154002 + C18855 * C153648) * C47632 +
            (C19484 * C154002 + C19485 * C153648) * C47633 +
            (C58733 * C154002 + (C19524 + C19525) * C153648) * C154074) *
               C153775 -
           (C58747 * C154074 + (C12477 * C153648 + C19483 * C154002) * C47633 +
            ((C11505 + C11504) * C153648 + (C11503 + C11502) * C154002) *
                C47632) *
               C154022) *
              C153695 * C154091 +
          (((C11512 * C154002 + C11513 * C153648) * C47632 +
            (C18855 * C154002 + C20107 * C153648) * C47633 +
            (C19485 * C154002 + (C12070 + C12071) * C153648) * C154074) *
               C154022 -
           (((C11439 * C8574 - C11440 * C8573 - C11439 * C8575 +
              C153855 * C8576 + C11437 * C2303 - C11438 * C2297 -
              C11437 * C2304 + C154035 * C2312) *
                 C153648 +
             (C19525 + C19524) * C154002) *
                C154074 +
            ((C12071 + C12070) * C153648 + C19473 * C154002) * C47633 +
            (C12476 * C153648 + C12477 * C154002) * C47632) *
               C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C11433 +
            (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
               C153810 * C153711 * C332 -
           ((C11782 + C11783) * C154036 + (C11784 + C11785) * C11435 +
            (C11786 + C11787) * C11434 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C11433) *
               C153810 * C153711 * C333 +
           ((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
             C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
             C153855 * C1390) *
                C11433 +
            (C11788 + C11789) * C11434 + (C11790 + C11791) * C11435 +
            (C11792 + C11793) * C154036) *
               C153810 * C153711 * C334) *
              C335 +
          (((C11787 + C11786) * C11433 + (C11785 + C11784) * C11434 +
            (C11783 + C11782) * C11435 +
            (C11437 * C349 - C11438 * C337 - C11437 * C350 + C154035 * C373 +
             C11439 * C367 - C11440 * C346 - C11439 * C368 + C153855 * C382) *
                C154036) *
               C153810 * C153711 * C333 -
           (C11514 * C154036 + C11515 * C11435 + (C11505 + C11504) * C11434 +
            (C11503 + C11502) * C11433) *
               C153810 * C153711 * C332 -
           ((C11439 * C1376 - C11440 * C1371 - C11439 * C1377 +
             C153855 * C1386 + C11437 * C367 - C11438 * C346 - C11437 * C368 +
             C154035 * C382) *
                C154036 +
            (C11793 + C11792) * C11435 + (C11791 + C11790) * C11434 +
            (C11789 + C11788) * C11433) *
               C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
            C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
               C11433 +
           (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
              C153810 * C153711 * C153695 * C130 -
          (C11514 * C154036 + C11515 * C11435 + (C11505 + C11504) * C11434 +
           (C11503 + C11502) * C11433) *
              C153810 * C153711 * C153695 * C131 +
          (C11512 * C11433 + C11513 * C11434 + (C11509 + C11508) * C11435 +
           (C11510 + C11511) * C154036) *
              C153810 * C153711 * C153695 * C132 -
          ((C11439 * C798 - C11440 * C797 - C11439 * C799 + C153855 * C800 +
            C11437 * C156 - C11438 * C142 - C11437 * C157 + C154035 * C166) *
               C154036 +
           (C11511 + C11510) * C11435 + C11514 * C11434 + C11515 * C11433) *
              C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
            C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
            C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
            C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
            C154044 * C1390) *
               C154002 +
           (C35004 + C35005 + C35006 + C35007) * C153648) *
              C153810 * C153711 * C153695 * C130 -
          ((C35008 + C35009 + C35010 + C35011) * C153648 +
           (C35007 + C35006 + C35005 + C35004) * C154002) *
              C153810 * C153711 * C153695 * C131 +
          ((C35011 + C35010 + C35009 + C35008) * C154002 +
           (C35012 + C35013 + C35014 + C35015) * C153648) *
              C153810 * C153711 * C153695 * C132 -
          ((C34929 * C1376 - C34930 * C1371 - C34929 * C1377 + C154044 * C1386 +
            C34927 * C367 - C34928 * C346 - C34927 * C368 + C34919 * C382 +
            C34925 * C349 - C34926 * C337 - C34925 * C350 + C34918 * C373 +
            C34923 * C152 - C34924 * C140 - C34923 * C153 + C34917 * C164) *
               C153648 +
           (C35015 + C35014 + C35013 + C35012) * C154002) *
              C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C154002 +
            (C35004 + C35005 + C35006 + C35007) * C153648) *
               C153810 * C153711 * C332 -
           ((C35258 + C35259 + C35260 + C35261) * C153648 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C154002) *
               C153810 * C153711 * C333 +
           ((C34923 * C359 - C34924 * C342 - C34923 * C360 + C34917 * C378 +
             C34925 * C1384 - C34926 * C1375 - C34925 * C1385 + C34918 * C1390 +
             C34927 * C3193 - C34928 * C3189 - C34927 * C3194 + C34919 * C3201 +
             C34929 * C4808 - C34930 * C4803 - C34929 * C4809 +
             C154044 * C4812) *
                C154002 +
            (C35262 + C35263 + C35264 + C35265) * C153648) *
               C153810 * C153711 * C334) *
              C335 +
          (((C35261 + C35260 + C35259 + C35258) * C154002 +
            (C34923 * C353 - C34924 * C339 - C34923 * C354 + C34917 * C375 +
             C34925 * C363 - C34926 * C344 - C34925 * C364 + C34918 * C380 +
             C34927 * C1380 - C34928 * C1373 - C34927 * C1381 + C34919 * C1388 +
             C34929 * C3197 - C34930 * C3191 - C34929 * C3198 +
             C154044 * C3203) *
                C153648) *
               C153810 * C153711 * C333 -
           ((C35008 + C35009 + C35010 + C35011) * C153648 +
            (C35007 + C35006 + C35005 + C35004) * C154002) *
               C153810 * C153711 * C332 -
           ((C34929 * C4804 - C34930 * C4801 - C34929 * C4805 +
             C154044 * C4810 + C34927 * C3197 - C34928 * C3191 -
             C34927 * C3198 + C34919 * C3203 + C34925 * C1380 - C34926 * C1373 -
             C34925 * C1381 + C34918 * C1388 + C34923 * C363 - C34924 * C344 -
             C34923 * C364 + C34917 * C380) *
                C153648 +
            (C35265 + C35264 + C35263 + C35262) * C154002) *
               C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C154002 +
            (C11502 + C11503) * C153648) *
               C47632 +
           ((C19518 + C19519) * C154002 + C19472 * C153648) * C47633 +
           ((C19521 + C19520) * C154002 + C19484 * C153648) * C154074) *
              C153711 * C153695 * C130 -
          ((C19473 * C153648 + C19474 * C154002) * C154074 +
           (C12477 * C153648 + C19483 * C154002) * C47633 +
           ((C11505 + C11504) * C153648 + (C11503 + C11502) * C154002) *
               C47632) *
              C153711 * C153695 * C131 +
          ((C11512 * C154002 + C11513 * C153648) * C47632 +
           (C18855 * C154002 + C20107 * C153648) * C47633 +
           (C19485 * C154002 + (C12070 + C12071) * C153648) * C154074) *
              C153711 * C153695 * C132 -
          (((C11439 * C1518 - C11440 * C1513 - C11439 * C1519 +
             C153855 * C1528 + C11437 * C596 - C11438 * C575 - C11437 * C597 +
             C154035 * C611) *
                C153648 +
            (C12071 + C12070) * C154002) *
               C154074 +
           ((C12491 + C12490) * C153648 + C12476 * C154002) * C47633 +
           (C11514 * C153648 + C11515 * C154002) * C47632) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C154002 +
             (C11502 + C11503) * C153648) *
                C47632 +
            ((C19518 + C19519) * C154002 + C19472 * C153648) * C47633 +
            ((C19521 + C19520) * C154002 + C19484 * C153648) * C154074) *
               C153711 * C332 -
           (((C20536 + C20535) * C153648 + (C21326 + C21325) * C154002) *
                C154074 +
            (C20520 * C153648 + (C20534 + C20533) * C154002) * C47633 +
            ((C11786 + C11787) * C153648 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C154002) *
                C47632) *
               C153711 * C333 +
           (((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
              C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
              C153855 * C1390) *
                 C154002 +
             (C11788 + C11789) * C153648) *
                C47632 +
            ((C22305 + C22306) * C154002 + (C19170 + C19171) * C153648) *
                C47633 +
            ((C11437 * C3511 - C11438 * C3507 - C11437 * C3512 +
              C154035 * C3519 + C11439 * C5038 - C11440 * C5033 -
              C11439 * C5039 + C153855 * C5042) *
                 C154002 +
             (C58438 + C58439) * C153648) *
                C154074) *
               C153711 * C334) *
              C335 +
          ((((C11787 + C11786) * C154002 + (C11785 + C11784) * C153648) *
                C47632 +
            (C20502 * C154002 + C20503 * C153648) * C47633 +
            ((C20535 + C20536) * C154002 + (C20537 + C20538) * C153648) *
                C154074) *
               C153711 * C333 -
           ((C19473 * C153648 + C19474 * C154002) * C154074 +
            (C12477 * C153648 + C19483 * C154002) * C47633 +
            ((C11505 + C11504) * C153648 + (C11503 + C11502) * C154002) *
                C47632) *
               C153711 * C332 -
           (((C11439 * C5034 - C11440 * C5031 - C11439 * C5035 +
              C153855 * C5040 + C11437 * C3515 - C11438 * C3509 -
              C11437 * C3516 + C154035 * C3521) *
                 C153648 +
             (C58439 + C58438) * C154002) *
                C154074 +
            ((C19173 + C19172) * C153648 + (C19171 + C19170) * C154002) *
                C47633 +
            ((C11791 + C11790) * C153648 + (C11789 + C11788) * C154002) *
                C47632) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C154002 +
            (C35004 + C35005 + C35006 + C35007) * C153648) *
               C153810 * C153711 * C154092 -
           ((C35258 + C35259 + C35260 + C35261) * C153648 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C154002) *
               C153810 * C153711 * C154093 +
           ((C34923 * C359 - C34924 * C342 - C34923 * C360 + C34917 * C378 +
             C34925 * C1384 - C34926 * C1375 - C34925 * C1385 + C34918 * C1390 +
             C34927 * C3193 - C34928 * C3189 - C34927 * C3194 + C34919 * C3201 +
             C34929 * C4808 - C34930 * C4803 - C34929 * C4809 +
             C154044 * C4812) *
                C154002 +
            (C35262 + C35263 + C35264 + C35265) * C153648) *
               C153810 * C153711 * C1657) *
              C154013 +
          (((C35261 + C35260 + C35259 + C35258) * C154002 +
            (C35734 + C35735 + C35736 + C35737) * C153648) *
               C153810 * C153711 * C154093 -
           ((C35008 + C35009 + C35010 + C35011) * C153648 +
            (C35007 + C35006 + C35005 + C35004) * C154002) *
               C153810 * C153711 * C154092 -
           ((C34929 * C4804 - C34930 * C4801 - C34929 * C4805 +
             C154044 * C4810 + C34927 * C3197 - C34928 * C3191 -
             C34927 * C3198 + C34919 * C3203 + C34925 * C1380 - C34926 * C1373 -
             C34925 * C1381 + C34918 * C1388 + C34923 * C363 - C34924 * C344 -
             C34923 * C364 + C34917 * C380) *
                C153648 +
            (C35265 + C35264 + C35263 + C35262) * C154002) *
               C153810 * C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C11433 +
            (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
               C153810 * C153711 * C154092 -
           (C12266 * C154036 + C12267 * C11435 + (C11786 + C11787) * C11434 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C11433) *
               C153810 * C153711 * C154093 +
           ((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
             C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
             C153855 * C1390) *
                C11433 +
            (C11788 + C11789) * C11434 + (C11790 + C11791) * C11435 +
            (C11792 + C11793) * C154036) *
               C153810 * C153711 * C1657) *
              C154013 +
          (((C11787 + C11786) * C11433 + (C11785 + C11784) * C11434 +
            (C11783 + C11782) * C11435 + (C12280 + C12281) * C154036) *
               C153810 * C153711 * C154093 -
           (C11514 * C154036 + C11515 * C11435 + (C11505 + C11504) * C11434 +
            (C11503 + C11502) * C11433) *
               C153810 * C153711 * C154092 -
           ((C11439 * C1376 - C11440 * C1371 - C11439 * C1377 +
             C153855 * C1386 + C11437 * C367 - C11438 * C346 - C11437 * C368 +
             C154035 * C382) *
                C154036 +
            (C11793 + C11792) * C11435 + (C11791 + C11790) * C11434 +
            (C11789 + C11788) * C11433) *
               C153810 * C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C154002 +
             (C11502 + C11503) * C153648) *
                C47632 +
            ((C19518 + C19519) * C154002 + C19472 * C153648) * C47633 +
            C58748 * C154074) *
               C153711 * C154092 -
           (C60524 * C154074 +
            (C20520 * C153648 + (C20534 + C20533) * C154002) * C47633 +
            ((C11786 + C11787) * C153648 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C154002) *
                C47632) *
               C153711 * C154093 +
           (((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
              C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
              C153855 * C1390) *
                 C154002 +
             (C11788 + C11789) * C153648) *
                C47632 +
            ((C22305 + C22306) * C154002 + (C19170 + C19171) * C153648) *
                C47633 +
            ((C11437 * C3511 - C11438 * C3507 - C11437 * C3512 +
              C154035 * C3519 + C11439 * C5038 - C11440 * C5033 -
              C11439 * C5039 + C153855 * C5042) *
                 C154002 +
             (C58438 + C58439) * C153648) *
                C154074) *
               C153711 * C1657) *
              C154013 +
          ((((C11787 + C11786) * C154002 + (C11785 + C11784) * C153648) *
                C47632 +
            (C20502 * C154002 + C20503 * C153648) * C47633 +
            (C59719 * C154002 + (C20537 + C20538) * C153648) * C154074) *
               C153711 * C154093 -
           (C58747 * C154074 + (C12477 * C153648 + C19483 * C154002) * C47633 +
            ((C11505 + C11504) * C153648 + (C11503 + C11502) * C154002) *
                C47632) *
               C153711 * C154092 -
           (((C11439 * C5034 - C11440 * C5031 - C11439 * C5035 +
              C153855 * C5040 + C11437 * C3515 - C11438 * C3509 -
              C11437 * C3516 + C154035 * C3521) *
                 C153648 +
             (C58439 + C58438) * C154002) *
                C154074 +
            ((C19173 + C19172) * C153648 + (C19171 + C19170) * C154002) *
                C47633 +
            ((C11791 + C11790) * C153648 + (C11789 + C11788) * C154002) *
                C47632) *
               C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C154002 +
            (C35004 + C35005 + C35006 + C35007) * C153648) *
               C153810 * C154022 -
           ((C35508 + C35509 + C35510 + C35511) * C153648 +
            (C34929 * C4383 - C34930 * C4379 - C34929 * C4384 +
             C154044 * C4391 + C34927 * C1957 - C34928 * C1948 -
             C34927 * C1958 + C34919 * C1963 + C34925 * C1111 - C34926 * C1105 -
             C34925 * C1112 + C34918 * C1123 + C34923 * C586 - C34924 * C570 -
             C34923 * C587 + C34917 * C606) *
                C154002) *
               C153810 * C153775) *
              C154092 +
          (((C34923 * C1111 - C34924 * C1105 - C34923 * C1112 + C34917 * C1123 +
             C34925 * C1957 - C34926 * C1948 - C34925 * C1958 + C34918 * C1963 +
             C34927 * C4383 - C34928 * C4379 - C34927 * C4384 + C34919 * C4391 +
             C34929 * C5776 - C34930 * C5771 - C34929 * C5777 +
             C154044 * C5780) *
                C154002 +
            (C36242 + C36243 + C36244 + C36245) * C153648) *
               C153810 * C153775 -
           ((C35258 + C35259 + C35260 + C35261) * C153648 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C154002) *
               C153810 * C154022) *
              C154093 +
          (((C34923 * C359 - C34924 * C342 - C34923 * C360 + C34917 * C378 +
             C34925 * C1384 - C34926 * C1375 - C34925 * C1385 + C34918 * C1390 +
             C34927 * C3193 - C34928 * C3189 - C34927 * C3194 + C34919 * C3201 +
             C34929 * C4808 - C34930 * C4803 - C34929 * C4809 +
             C154044 * C4812) *
                C154002 +
            (C35262 + C35263 + C35264 + C35265) * C153648) *
               C153810 * C154022 -
           ((C34929 * C29108 - C34930 * C29105 - C34929 * C29109 +
             C154044 * C29111 + C34927 * C5774 - C34928 * C5770 -
             C34927 * C5775 + C34919 * C5779 + C34925 * C4385 - C34926 * C4380 -
             C34925 * C4386 + C34918 * C4392 + C34923 * C1955 - C34924 * C1947 -
             C34923 * C1956 + C34917 * C1962) *
                C153648 +
            (C34929 * C29106 - C34930 * C29104 - C34929 * C29107 +
             C154044 * C29110 + C34927 * C5776 - C34928 * C5771 -
             C34927 * C5777 + C34919 * C5780 + C34925 * C4383 - C34926 * C4379 -
             C34925 * C4384 + C34918 * C4391 + C34923 * C1957 - C34924 * C1948 -
             C34923 * C1958 + C34917 * C1963) *
                C154002) *
               C153810 * C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C11433 +
            (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
               C153810 * C154022 -
           (C12476 * C154036 + C12477 * C11435 + (C12064 + C12065) * C11434 +
            (C11439 * C1111 - C11440 * C1105 - C11439 * C1112 +
             C153855 * C1123 + C11437 * C586 - C11438 * C570 - C11437 * C587 +
             C154035 * C606) *
                C11433) *
               C153810 * C153775) *
              C154092 +
          (((C11437 * C1111 - C11438 * C1105 - C11437 * C1112 +
             C154035 * C1123 + C11439 * C1957 - C11440 * C1948 -
             C11439 * C1958 + C153855 * C1963) *
                C11433 +
            (C12786 + C12787) * C11434 + (C12788 + C12789) * C11435 +
            (C12790 + C12791) * C154036) *
               C153810 * C153775 -
           (C12266 * C154036 + C12267 * C11435 + (C11786 + C11787) * C11434 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C11433) *
               C153810 * C154022) *
              C154093 +
          (((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
             C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
             C153855 * C1390) *
                C11433 +
            (C11788 + C11789) * C11434 + (C11790 + C11791) * C11435 +
            (C11792 + C11793) * C154036) *
               C153810 * C154022 -
           ((C11439 * C4389 - C11440 * C4382 - C11439 * C4390 +
             C153855 * C4394 + C11437 * C1951 - C11438 * C1945 -
             C11437 * C1952 + C154035 * C1960) *
                C154036 +
            (C11439 * C4387 - C11440 * C4381 - C11439 * C4388 +
             C153855 * C4393 + C11437 * C1953 - C11438 * C1946 -
             C11437 * C1954 + C154035 * C1961) *
                C11435 +
            (C11439 * C4385 - C11440 * C4380 - C11439 * C4386 +
             C153855 * C4392 + C11437 * C1955 - C11438 * C1947 -
             C11437 * C1956 + C154035 * C1962) *
                C11434 +
            (C11439 * C4383 - C11440 * C4379 - C11439 * C4384 +
             C153855 * C4391 + C11437 * C1957 - C11438 * C1948 -
             C11437 * C1958 + C154035 * C1963) *
                C11433) *
               C153810 * C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C154002 +
             (C11502 + C11503) * C153648) *
                C47632 +
            ((C19518 + C19519) * C154002 + C19472 * C153648) * C47633 +
            C58748 * C154074) *
               C154022 -
           ((C58732 * C153648 + (C23094 + C23093) * C154002) * C154074 +
            (C19474 * C153648 + (C19520 + C19521) * C154002) * C47633 +
            (C19483 * C153648 + (C19519 + C19518) * C154002) * C47632) *
               C153775) *
              C154092 +
          ((((C20533 + C20534) * C154002 + C20502 * C153648) * C47632 +
            ((C21325 + C21326) * C154002 + C59719 * C153648) * C47633 +
            ((C60525 + C60526) * C154002 + (C59733 + C59734) * C153648) *
                C154074) *
               C153775 -
           (C60524 * C154074 +
            (C20520 * C153648 + (C20534 + C20533) * C154002) * C47633 +
            ((C11786 + C11787) * C153648 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C154002) *
                C47632) *
               C154022) *
              C154093 +
          ((((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
              C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
              C153855 * C1390) *
                 C154002 +
             (C11788 + C11789) * C153648) *
                C47632 +
            ((C22305 + C22306) * C154002 + (C19170 + C19171) * C153648) *
                C47633 +
            ((C61505 + C61506) * C154002 + (C58438 + C58439) * C153648) *
                C154074) *
               C154022 -
           (((C11439 * C32003 - C11440 * C32002 - C11439 * C32004 +
              C153855 * C32005 + C11437 * C6373 - C11438 * C6365 -
              C11437 * C6374 + C154035 * C6383) *
                 C153648 +
             (C11439 * C30186 - C11440 * C30183 - C11439 * C30187 +
              C153855 * C30189 + C11437 * C6377 - C11438 * C6367 -
              C11437 * C6378 + C154035 * C6385) *
                 C154002) *
                C154074 +
            ((C58439 + C58438) * C153648 + (C61506 + C61505) * C154002) *
                C47633 +
            ((C19171 + C19170) * C153648 + (C22306 + C22305) * C154002) *
                C47632) *
               C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C11437 * C144 - C11438 * C136 - C11437 * C145 +
                 C154035 * C160 + C11439 * C357 - C11440 * C341 -
                 C11439 * C358 + C153855 * C377) *
                    C11433 +
                (C11502 + C11503) * C11434 + C11512 * C11435 +
                C11513 * C154036) *
                   C153810 * C153711 * C1279 -
               (C12266 * C154036 + C12267 * C11435 +
                (C11786 + C11787) * C11434 +
                (C11439 * C359 - C11440 * C342 - C11439 * C360 +
                 C153855 * C378 + C11437 * C357 - C11438 * C341 -
                 C11437 * C358 + C154035 * C377) *
                    C11433) *
                   C153810 * C153711 * C153747) *
                  C1281 +
              (((C11787 + C11786) * C11433 + (C11785 + C11784) * C11434 +
                (C11783 + C11782) * C11435 + (C12280 + C12281) * C154036) *
                   C153810 * C153711 * C153747 -
               (C11514 * C154036 + C11515 * C11435 +
                (C11505 + C11504) * C11434 + (C11503 + C11502) * C11433) *
                   C153810 * C153711 * C1279) *
                  C1282 +
              ((C11512 * C11433 + C11513 * C11434 + (C11509 + C11508) * C11435 +
                (C11510 + C11511) * C154036) *
                   C153810 * C153711 * C1279 -
               ((C11439 * C371 - C11440 * C348 - C11439 * C372 +
                 C153855 * C384 + C11437 * C369 - C11438 * C347 -
                 C11437 * C370 + C154035 * C383) *
                    C154036 +
                (C12281 + C12280) * C11435 + C12266 * C11434 +
                C12267 * C11433) *
                   C153810 * C153711 * C153747) *
                  C1283) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
                C11439 * C357 - C11440 * C341 - C11439 * C358 +
                C153855 * C377) *
                   C11433 +
               (C11502 + C11503) * C11434 + C11512 * C11435 +
               C11513 * C154036) *
                  C153810 * C153711 * C1366 -
              (C12266 * C154036 + C12267 * C11435 + (C11786 + C11787) * C11434 +
               (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
                C11437 * C357 - C11438 * C341 - C11437 * C358 +
                C154035 * C377) *
                   C11433) *
                  C153810 * C153711 * C1367 +
              ((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
                C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
                C153855 * C1390) *
                   C11433 +
               (C11788 + C11789) * C11434 + (C11790 + C11791) * C11435 +
               (C11792 + C11793) * C154036) *
                  C153810 * C153711 * C1368 -
              ((C11439 * C3199 - C11440 * C3192 - C11439 * C3200 +
                C153855 * C3204 + C11437 * C1378 - C11438 * C1372 -
                C11437 * C1379 + C154035 * C1387) *
                   C154036 +
               (C11439 * C3197 - C11440 * C3191 - C11439 * C3198 +
                C153855 * C3203 + C11437 * C1380 - C11438 * C1373 -
                C11437 * C1381 + C154035 * C1388) *
                   C11435 +
               (C11439 * C3195 - C11440 * C3190 - C11439 * C3196 +
                C153855 * C3202 + C11437 * C1382 - C11438 * C1374 -
                C11437 * C1383 + C154035 * C1389) *
                   C11434 +
               (C11439 * C3193 - C11440 * C3189 - C11439 * C3194 +
                C153855 * C3201 + C11437 * C1384 - C11438 * C1375 -
                C11437 * C1385 + C154035 * C1390) *
                   C11433) *
                  C153810 * C153711 * C1369) *
             C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C11433 +
            (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
               C153810 * C563 -
           (C12476 * C154036 + C12477 * C11435 + (C12064 + C12065) * C11434 +
            (C11439 * C1111 - C11440 * C1105 - C11439 * C1112 +
             C153855 * C1123 + C11437 * C586 - C11438 * C570 - C11437 * C587 +
             C154035 * C606) *
                C11433) *
               C153810 * C564 +
           ((C11437 * C588 - C11438 * C571 - C11437 * C589 + C154035 * C607 +
             C11439 * C1526 - C11440 * C1517 - C11439 * C1527 +
             C153855 * C1532) *
                C11433 +
            (C12066 + C12067) * C11434 + (C12068 + C12069) * C11435 +
            (C12070 + C12071) * C154036) *
               C153810 * C565) *
              C1279 +
          (((C11437 * C1111 - C11438 * C1105 - C11437 * C1112 +
             C154035 * C1123 + C11439 * C1957 - C11440 * C1948 -
             C11439 * C1958 + C153855 * C1963) *
                C11433 +
            (C12786 + C12787) * C11434 + (C12788 + C12789) * C11435 +
            (C12790 + C12791) * C154036) *
               C153810 * C564 -
           (C12266 * C154036 + C12267 * C11435 + (C11786 + C11787) * C11434 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C11433) *
               C153810 * C563 -
           ((C11439 * C3517 - C11440 * C3510 - C11439 * C3518 +
             C153855 * C3522 + C11437 * C1520 - C11438 * C1514 -
             C11437 * C1521 + C154035 * C1529) *
                C154036 +
            (C11439 * C3515 - C11440 * C3509 - C11439 * C3516 +
             C153855 * C3521 + C11437 * C1522 - C11438 * C1515 -
             C11437 * C1523 + C154035 * C1530) *
                C11435 +
            (C11439 * C3513 - C11440 * C3508 - C11439 * C3514 +
             C153855 * C3520 + C11437 * C1524 - C11438 * C1516 -
             C11437 * C1525 + C154035 * C1531) *
                C11434 +
            (C11439 * C3511 - C11440 * C3507 - C11439 * C3512 +
             C153855 * C3519 + C11437 * C1526 - C11438 * C1517 -
             C11437 * C1527 + C154035 * C1532) *
                C11433) *
               C153810 * C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C154002 +
            (C35004 + C35005 + C35006 + C35007) * C153648) *
               C153810 * C153711 * C1279 -
           ((C35258 + C35259 + C35260 + C35261) * C153648 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C154002) *
               C153810 * C153711 * C153747) *
              C1281 +
          (((C35261 + C35260 + C35259 + C35258) * C154002 +
            (C35734 + C35735 + C35736 + C35737) * C153648) *
               C153810 * C153711 * C153747 -
           ((C35008 + C35009 + C35010 + C35011) * C153648 +
            (C35007 + C35006 + C35005 + C35004) * C154002) *
               C153810 * C153711 * C1279) *
              C1282 +
          (((C35011 + C35010 + C35009 + C35008) * C154002 +
            (C35012 + C35013 + C35014 + C35015) * C153648) *
               C153810 * C153711 * C1279 -
           ((C34929 * C3199 - C34930 * C3192 - C34929 * C3200 +
             C154044 * C3204 + C34927 * C1378 - C34928 * C1372 -
             C34927 * C1379 + C34919 * C1387 + C34925 * C365 - C34926 * C345 -
             C34925 * C366 + C34918 * C381 + C34923 * C351 - C34924 * C338 -
             C34923 * C352 + C34917 * C374) *
                C153648 +
            (C35737 + C35736 + C35735 + C35734) * C154002) *
               C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
            C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
            C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
            C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
            C154044 * C1390) *
               C154002 +
           (C35004 + C35005 + C35006 + C35007) * C153648) *
              C153810 * C153711 * C1366 -
          ((C35258 + C35259 + C35260 + C35261) * C153648 +
           (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 + C154044 * C3201 +
            C34927 * C1384 - C34928 * C1375 - C34927 * C1385 + C34919 * C1390 +
            C34925 * C359 - C34926 * C342 - C34925 * C360 + C34918 * C378 +
            C34923 * C357 - C34924 * C341 - C34923 * C358 + C34917 * C377) *
               C154002) *
              C153810 * C153711 * C1367 +
          ((C34923 * C359 - C34924 * C342 - C34923 * C360 + C34917 * C378 +
            C34925 * C1384 - C34926 * C1375 - C34925 * C1385 + C34918 * C1390 +
            C34927 * C3193 - C34928 * C3189 - C34927 * C3194 + C34919 * C3201 +
            C34929 * C4808 - C34930 * C4803 - C34929 * C4809 +
            C154044 * C4812) *
               C154002 +
           (C35262 + C35263 + C35264 + C35265) * C153648) *
              C153810 * C153711 * C1368 -
          ((C34929 * C28564 - C34930 * C28561 - C34929 * C28565 +
            C154044 * C28567 + C34927 * C4806 - C34928 * C4802 -
            C34927 * C4807 + C34919 * C4811 + C34925 * C3195 - C34926 * C3190 -
            C34925 * C3196 + C34918 * C3202 + C34923 * C1382 - C34924 * C1374 -
            C34923 * C1383 + C34917 * C1389) *
               C153648 +
           (C34929 * C28562 - C34930 * C28560 - C34929 * C28563 +
            C154044 * C28566 + C34927 * C4808 - C34928 * C4803 -
            C34927 * C4809 + C34919 * C4812 + C34925 * C3193 - C34926 * C3189 -
            C34925 * C3194 + C34918 * C3201 + C34923 * C1384 - C34924 * C1375 -
            C34923 * C1385 + C34917 * C1390) *
               C154002) *
              C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C154002 +
            (C35004 + C35005 + C35006 + C35007) * C153648) *
               C153810 * C563 -
           ((C35508 + C35509 + C35510 + C35511) * C153648 +
            (C34929 * C4383 - C34930 * C4379 - C34929 * C4384 +
             C154044 * C4391 + C34927 * C1957 - C34928 * C1948 -
             C34927 * C1958 + C34919 * C1963 + C34925 * C1111 - C34926 * C1105 -
             C34925 * C1112 + C34918 * C1123 + C34923 * C586 - C34924 * C570 -
             C34923 * C587 + C34917 * C606) *
                C154002) *
               C153810 * C564 +
           ((C34923 * C588 - C34924 * C571 - C34923 * C589 + C34917 * C607 +
             C34925 * C1526 - C34926 * C1517 - C34925 * C1527 + C34918 * C1532 +
             C34927 * C3511 - C34928 * C3507 - C34927 * C3512 + C34919 * C3519 +
             C34929 * C5038 - C34930 * C5033 - C34929 * C5039 +
             C154044 * C5042) *
                C154002 +
            (C35512 + C35513 + C35514 + C35515) * C153648) *
               C153810 * C565) *
              C1279 +
          (((C34923 * C1111 - C34924 * C1105 - C34923 * C1112 + C34917 * C1123 +
             C34925 * C1957 - C34926 * C1948 - C34925 * C1958 + C34918 * C1963 +
             C34927 * C4383 - C34928 * C4379 - C34927 * C4384 + C34919 * C4391 +
             C34929 * C5776 - C34930 * C5771 - C34929 * C5777 +
             C154044 * C5780) *
                C154002 +
            (C36242 + C36243 + C36244 + C36245) * C153648) *
               C153810 * C564 -
           ((C35258 + C35259 + C35260 + C35261) * C153648 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C154002) *
               C153810 * C563 -
           ((C34929 * C28694 - C34930 * C28691 - C34929 * C28695 +
             C154044 * C28697 + C34927 * C5036 - C34928 * C5032 -
             C34927 * C5037 + C34919 * C5041 + C34925 * C3513 - C34926 * C3508 -
             C34925 * C3514 + C34918 * C3520 + C34923 * C1524 - C34924 * C1516 -
             C34923 * C1525 + C34917 * C1531) *
                C153648 +
            (C34929 * C28692 - C34930 * C28690 - C34929 * C28693 +
             C154044 * C28696 + C34927 * C5038 - C34928 * C5033 -
             C34927 * C5039 + C34919 * C5042 + C34925 * C3511 - C34926 * C3507 -
             C34925 * C3512 + C34918 * C3519 + C34923 * C1526 - C34924 * C1517 -
             C34923 * C1527 + C34917 * C1532) *
                C154002) *
               C153810 * C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C154002 +
             (C11502 + C11503) * C153648) *
                C47632 +
            ((C19518 + C19519) * C154002 + C19472 * C153648) * C47633 +
            C58748 * C154074) *
               C153711 * C1279 -
           ((C59728 * C153648 + (C21326 + C21325) * C154002) * C154074 +
            (C20520 * C153648 + (C20534 + C20533) * C154002) * C47633 +
            ((C11786 + C11787) * C153648 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C154002) *
                C47632) *
               C153711 * C153747) *
              C1281 +
          ((((C11787 + C11786) * C154002 + (C11785 + C11784) * C153648) *
                C47632 +
            (C20502 * C154002 + C20503 * C153648) * C47633 +
            (C59719 * C154002 + (C20537 + C20538) * C153648) * C154074) *
               C153711 * C153747 -
           (C58747 * C154074 + (C12477 * C153648 + C19483 * C154002) * C47633 +
            ((C11505 + C11504) * C153648 + (C11503 + C11502) * C154002) *
                C47632) *
               C153711 * C1279) *
              C1282 +
          (((C11512 * C154002 + C11513 * C153648) * C47632 +
            (C18855 * C154002 + C20107 * C153648) * C47633 +
            (C19485 * C154002 + (C12070 + C12071) * C153648) * C154074) *
               C153711 * C1279 -
           (((C11439 * C3517 - C11440 * C3510 - C11439 * C3518 +
              C153855 * C3522 + C11437 * C1520 - C11438 * C1514 -
              C11437 * C1521 + C154035 * C1529) *
                 C153648 +
             (C20538 + C20537) * C154002) *
                C154074 +
            ((C12791 + C12790) * C153648 + C19816 * C154002) * C47633 +
            (C12266 * C153648 + C12267 * C154002) * C47632) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C154002 +
            (C11502 + C11503) * C153648) *
               C47632 +
           ((C19518 + C19519) * C154002 + C19472 * C153648) * C47633 +
           C58748 * C154074) *
              C153711 * C1366 -
          ((C59728 * C153648 + (C21326 + C21325) * C154002) * C154074 +
           (C20520 * C153648 + (C20534 + C20533) * C154002) * C47633 +
           ((C11786 + C11787) * C153648 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C154002) *
               C47632) *
              C153711 * C1367 +
          (((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
             C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
             C153855 * C1390) *
                C154002 +
            (C11788 + C11789) * C153648) *
               C47632 +
           ((C22305 + C22306) * C154002 + (C19170 + C19171) * C153648) *
               C47633 +
           ((C11437 * C3511 - C11438 * C3507 - C11437 * C3512 +
             C154035 * C3519 + C11439 * C5038 - C11440 * C5033 -
             C11439 * C5039 + C153855 * C5042) *
                C154002 +
            (C58438 + C58439) * C153648) *
               C154074) *
              C153711 * C1368 -
          (((C11439 * C28694 - C11440 * C28691 - C11439 * C28695 +
             C153855 * C28697 + C11437 * C5036 - C11438 * C5032 -
             C11437 * C5037 + C154035 * C5041) *
                C153648 +
            (C11439 * C28692 - C11440 * C28690 - C11439 * C28693 +
             C153855 * C28696 + C11437 * C5038 - C11438 * C5033 -
             C11437 * C5039 + C154035 * C5042) *
                C154002) *
               C154074 +
           ((C11439 * C5774 - C11440 * C5770 - C11439 * C5775 +
             C153855 * C5779 + C11437 * C4385 - C11438 * C4380 -
             C11437 * C4386 + C154035 * C4392) *
                C153648 +
            (C11439 * C5776 - C11440 * C5771 - C11439 * C5777 +
             C153855 * C5780 + C11437 * C4383 - C11438 * C4379 -
             C11437 * C4384 + C154035 * C4391) *
                C154002) *
               C47633 +
           ((C11439 * C3195 - C11440 * C3190 - C11439 * C3196 +
             C153855 * C3202 + C11437 * C1382 - C11438 * C1374 -
             C11437 * C1383 + C154035 * C1389) *
                C153648 +
            (C11439 * C3193 - C11440 * C3189 - C11439 * C3194 +
             C153855 * C3201 + C11437 * C1384 - C11438 * C1375 -
             C11437 * C1385 + C154035 * C1390) *
                C154002) *
               C47632) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C154002 +
             (C11502 + C11503) * C153648) *
                C47632 +
            ((C19518 + C19519) * C154002 + C19472 * C153648) * C47633 +
            C58748 * C154074) *
               C563 -
           ((C58732 * C153648 + (C23094 + C23093) * C154002) * C154074 +
            (C19474 * C153648 + (C19520 + C19521) * C154002) * C47633 +
            (C19483 * C153648 + (C19519 + C19518) * C154002) * C47632) *
               C564 +
           (C58748 * C47632 +
            ((C23093 + C23094) * C154002 + C58733 * C153648) * C47633 +
            ((C11437 * C7744 - C11438 * C7740 - C11437 * C7745 +
              C154035 * C7752 + C11439 * C9206 - C11440 * C9201 -
              C11439 * C9207 + C153855 * C9210) *
                 C154002 +
             (C58751 + C58752) * C153648) *
                C154074) *
               C565) *
              C1279 +
          ((((C20533 + C20534) * C154002 + C20502 * C153648) * C47632 +
            ((C21325 + C21326) * C154002 + C59719 * C153648) * C47633 +
            ((C60525 + C60526) * C154002 + (C59733 + C59734) * C153648) *
                C154074) *
               C564 -
           (C60524 * C154074 +
            (C20520 * C153648 + (C20534 + C20533) * C154002) * C47633 +
            ((C11786 + C11787) * C153648 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C154002) *
                C47632) *
               C563 -
           (((C11439 * C31182 - C11440 * C31179 - C11439 * C31183 +
              C153855 * C31185 + C11437 * C9204 - C11438 * C9200 -
              C11437 * C9205 + C154035 * C9209) *
                 C153648 +
             (C11439 * C31180 - C11440 * C31178 - C11439 * C31181 +
              C153855 * C31184 + C11437 * C9206 - C11438 * C9201 -
              C11437 * C9207 + C154035 * C9210) *
                 C154002) *
                C154074 +
            ((C59734 + C59733) * C153648 + (C60526 + C60525) * C154002) *
                C47633 +
            C60524 * C47632) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
              C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
              C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
              C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
              C154044 * C1390) *
                 C154002 +
             (C35004 + C35005 + C35006 + C35007) * C153648) *
                C153810 * C154022 -
            ((C35508 + C35509 + C35510 + C35511) * C153648 +
             (C34929 * C4383 - C34930 * C4379 - C34929 * C4384 +
              C154044 * C4391 + C34927 * C1957 - C34928 * C1948 -
              C34927 * C1958 + C34919 * C1963 + C34925 * C1111 -
              C34926 * C1105 - C34925 * C1112 + C34918 * C1123 + C34923 * C586 -
              C34924 * C570 - C34923 * C587 + C34917 * C606) *
                 C154002) *
                C153810 * C153775) *
               C1279 +
           (((C34923 * C1111 - C34924 * C1105 - C34923 * C1112 +
              C34917 * C1123 + C34925 * C1957 - C34926 * C1948 -
              C34925 * C1958 + C34918 * C1963 + C34927 * C4383 -
              C34928 * C4379 - C34927 * C4384 + C34919 * C4391 +
              C34929 * C5776 - C34930 * C5771 - C34929 * C5777 +
              C154044 * C5780) *
                 C154002 +
             (C36242 + C36243 + C36244 + C36245) * C153648) *
                C153810 * C153775 -
            ((C35258 + C35259 + C35260 + C35261) * C153648 +
             (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
              C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
              C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
              C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
              C34923 * C358 + C34917 * C377) *
                 C154002) *
                C153810 * C154022) *
               C153747) *
              C154013 +
          ((((C35511 + C35510 + C35509 + C35508) * C154002 +
             (C35956 + C35957 + C35958 + C35959) * C153648) *
                C153810 * C153775 -
            ((C35008 + C35009 + C35010 + C35011) * C153648 +
             (C35007 + C35006 + C35005 + C35004) * C154002) *
                C153810 * C154022) *
               C1279 +
           (((C35261 + C35260 + C35259 + C35258) * C154002 +
             (C35734 + C35735 + C35736 + C35737) * C153648) *
                C153810 * C154022 -
            ((C34929 * C5772 - C34930 * C5769 - C34929 * C5773 +
              C154044 * C5778 + C34927 * C4387 - C34928 * C4381 -
              C34927 * C4388 + C34919 * C4393 + C34925 * C1953 -
              C34926 * C1946 - C34925 * C1954 + C34918 * C1961 +
              C34923 * C1115 - C34924 * C1107 - C34923 * C1116 +
              C34917 * C1125) *
                 C153648 +
             (C36245 + C36244 + C36243 + C36242) * C154002) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C11433 +
             (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
                C153810 * C154022 -
            (C12476 * C154036 + C12477 * C11435 + (C12064 + C12065) * C11434 +
             (C11439 * C1111 - C11440 * C1105 - C11439 * C1112 +
              C153855 * C1123 + C11437 * C586 - C11438 * C570 - C11437 * C587 +
              C154035 * C606) *
                 C11433) *
                C153810 * C153775) *
               C1279 +
           (((C11437 * C1111 - C11438 * C1105 - C11437 * C1112 +
              C154035 * C1123 + C11439 * C1957 - C11440 * C1948 -
              C11439 * C1958 + C153855 * C1963) *
                 C11433 +
             (C12786 + C12787) * C11434 + (C12788 + C12789) * C11435 +
             (C12790 + C12791) * C154036) *
                C153810 * C153775 -
            (C12266 * C154036 + C12267 * C11435 + (C11786 + C11787) * C11434 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C11433) *
                C153810 * C154022) *
               C153747) *
              C154013 +
          ((((C12065 + C12064) * C11433 + (C12063 + C12062) * C11434 +
             (C12061 + C12060) * C11435 + (C12490 + C12491) * C154036) *
                C153810 * C153775 -
            (C11514 * C154036 + C11515 * C11435 + (C11505 + C11504) * C11434 +
             (C11503 + C11502) * C11433) *
                C153810 * C154022) *
               C1279 +
           (((C11787 + C11786) * C11433 + (C11785 + C11784) * C11434 +
             (C11783 + C11782) * C11435 + (C12280 + C12281) * C154036) *
                C153810 * C154022 -
            ((C11439 * C1949 - C11440 * C1944 - C11439 * C1950 +
              C153855 * C1959 + C11437 * C1119 - C11438 * C1109 -
              C11437 * C1120 + C154035 * C1127) *
                 C154036 +
             (C12791 + C12790) * C11435 + (C12789 + C12788) * C11434 +
             (C12787 + C12786) * C11433) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
               C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                  C154002 +
              (C11502 + C11503) * C153648) *
                 C47632 +
             ((C19518 + C19519) * C154002 + C19472 * C153648) * C47633 +
             C58748 * C154074) *
                C154022 -
            ((C58732 * C153648 + (C23094 + C23093) * C154002) * C154074 +
             (C19474 * C153648 + (C19520 + C19521) * C154002) * C47633 +
             (C19483 * C153648 + (C19519 + C19518) * C154002) * C47632) *
                C153775) *
               C1279 +
           ((((C20533 + C20534) * C154002 + C20502 * C153648) * C47632 +
             ((C21325 + C21326) * C154002 + C59719 * C153648) * C47633 +
             ((C60525 + C60526) * C154002 + (C59733 + C59734) * C153648) *
                 C154074) *
                C153775 -
            (C60524 * C154074 +
             (C20520 * C153648 + (C20534 + C20533) * C154002) * C47633 +
             ((C11786 + C11787) * C153648 +
              (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
               C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                  C154002) *
                 C47632) *
                C154022) *
               C153747) *
              C154013 +
          ((((C19472 * C154002 + C18855 * C153648) * C47632 +
             (C19484 * C154002 + C19485 * C153648) * C47633 +
             (C58733 * C154002 + (C19524 + C19525) * C153648) * C154074) *
                C153775 -
            (C58747 * C154074 + (C12477 * C153648 + C19483 * C154002) * C47633 +
             ((C11505 + C11504) * C153648 + (C11503 + C11502) * C154002) *
                 C47632) *
                C154022) *
               C1279 +
           ((((C11787 + C11786) * C154002 + (C11785 + C11784) * C153648) *
                 C47632 +
             (C20502 * C154002 + C20503 * C153648) * C47633 +
             (C59719 * C154002 + (C20537 + C20538) * C153648) * C154074) *
                C154022 -
            (((C11439 * C6369 - C11440 * C6363 - C11439 * C6370 +
               C153855 * C6381 + C11437 * C6371 - C11438 * C6364 -
               C11437 * C6372 + C154035 * C6382) *
                  C153648 +
              (C59734 + C59733) * C154002) *
                 C154074 +
             ((C20538 + C20537) * C153648 + C59728 * C154002) * C47633 +
             (C19816 * C153648 + C20520 * C154002) * C47632) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
            C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
               C11433 +
           (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
              C153810 * C153711 * C1366 -
          (C12266 * C154036 + C12267 * C11435 + (C11786 + C11787) * C11434 +
           (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
            C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
               C11433) *
              C153810 * C153711 * C1367 +
          ((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
            C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
            C153855 * C1390) *
               C11433 +
           (C11788 + C11789) * C11434 + (C11790 + C11791) * C11435 +
           (C11792 + C11793) * C154036) *
              C153810 * C153711 * C1368 -
          ((C11439 * C3199 - C11440 * C3192 - C11439 * C3200 + C153855 * C3204 +
            C11437 * C1378 - C11438 * C1372 - C11437 * C1379 +
            C154035 * C1387) *
               C154036 +
           (C11439 * C3197 - C11440 * C3191 - C11439 * C3198 + C153855 * C3203 +
            C11437 * C1380 - C11438 * C1373 - C11437 * C1381 +
            C154035 * C1388) *
               C11435 +
           (C11439 * C3195 - C11440 * C3190 - C11439 * C3196 + C153855 * C3202 +
            C11437 * C1382 - C11438 * C1374 - C11437 * C1383 +
            C154035 * C1389) *
               C11434 +
           (C11439 * C3193 - C11440 * C3189 - C11439 * C3194 + C153855 * C3201 +
            C11437 * C1384 - C11438 * C1375 - C11437 * C1385 +
            C154035 * C1390) *
               C11433) *
              C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C11433 +
            (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
               C153810 * C153711 * C1279 -
           (C12266 * C154036 + C12267 * C11435 + (C11786 + C11787) * C11434 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C11433) *
               C153810 * C153711 * C153747) *
              C1281 +
          (((C11787 + C11786) * C11433 + (C11785 + C11784) * C11434 +
            (C11783 + C11782) * C11435 + (C12280 + C12281) * C154036) *
               C153810 * C153711 * C153747 -
           (C11514 * C154036 + C11515 * C11435 + (C11505 + C11504) * C11434 +
            (C11503 + C11502) * C11433) *
               C153810 * C153711 * C1279) *
              C1282 +
          ((C11512 * C11433 + C11513 * C11434 + (C11509 + C11508) * C11435 +
            (C11510 + C11511) * C154036) *
               C153810 * C153711 * C1279 -
           ((C11439 * C371 - C11440 * C348 - C11439 * C372 + C153855 * C384 +
             C11437 * C369 - C11438 * C347 - C11437 * C370 + C154035 * C383) *
                C154036 +
            (C12281 + C12280) * C11435 + C12266 * C11434 + C12267 * C11433) *
               C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C154002 +
            (C35004 + C35005 + C35006 + C35007) * C153648) *
               C153810 * C153711 * C1279 -
           ((C35258 + C35259 + C35260 + C35261) * C153648 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C154002) *
               C153810 * C153711 * C153747) *
              C1281 +
          (((C35261 + C35260 + C35259 + C35258) * C154002 +
            (C35734 + C35735 + C35736 + C35737) * C153648) *
               C153810 * C153711 * C153747 -
           ((C35008 + C35009 + C35010 + C35011) * C153648 +
            (C35007 + C35006 + C35005 + C35004) * C154002) *
               C153810 * C153711 * C1279) *
              C1282 +
          (((C35011 + C35010 + C35009 + C35008) * C154002 +
            (C35012 + C35013 + C35014 + C35015) * C153648) *
               C153810 * C153711 * C1279 -
           ((C34929 * C3199 - C34930 * C3192 - C34929 * C3200 +
             C154044 * C3204 + C34927 * C1378 - C34928 * C1372 -
             C34927 * C1379 + C34919 * C1387 + C34925 * C365 - C34926 * C345 -
             C34925 * C366 + C34918 * C381 + C34923 * C351 - C34924 * C338 -
             C34923 * C352 + C34917 * C374) *
                C153648 +
            (C35737 + C35736 + C35735 + C35734) * C154002) *
               C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
            C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
            C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
            C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
            C154044 * C1390) *
               C154002 +
           (C35004 + C35005 + C35006 + C35007) * C153648) *
              C153810 * C153711 * C1366 -
          ((C35258 + C35259 + C35260 + C35261) * C153648 +
           (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 + C154044 * C3201 +
            C34927 * C1384 - C34928 * C1375 - C34927 * C1385 + C34919 * C1390 +
            C34925 * C359 - C34926 * C342 - C34925 * C360 + C34918 * C378 +
            C34923 * C357 - C34924 * C341 - C34923 * C358 + C34917 * C377) *
               C154002) *
              C153810 * C153711 * C1367 +
          ((C34923 * C359 - C34924 * C342 - C34923 * C360 + C34917 * C378 +
            C34925 * C1384 - C34926 * C1375 - C34925 * C1385 + C34918 * C1390 +
            C34927 * C3193 - C34928 * C3189 - C34927 * C3194 + C34919 * C3201 +
            C34929 * C4808 - C34930 * C4803 - C34929 * C4809 +
            C154044 * C4812) *
               C154002 +
           (C35262 + C35263 + C35264 + C35265) * C153648) *
              C153810 * C153711 * C1368 -
          ((C34929 * C28564 - C34930 * C28561 - C34929 * C28565 +
            C154044 * C28567 + C34927 * C4806 - C34928 * C4802 -
            C34927 * C4807 + C34919 * C4811 + C34925 * C3195 - C34926 * C3190 -
            C34925 * C3196 + C34918 * C3202 + C34923 * C1382 - C34924 * C1374 -
            C34923 * C1383 + C34917 * C1389) *
               C153648 +
           (C34929 * C28562 - C34930 * C28560 - C34929 * C28563 +
            C154044 * C28566 + C34927 * C4808 - C34928 * C4803 -
            C34927 * C4809 + C34919 * C4812 + C34925 * C3193 - C34926 * C3189 -
            C34925 * C3194 + C34918 * C3201 + C34923 * C1384 - C34924 * C1375 -
            C34923 * C1385 + C34917 * C1390) *
               C154002) *
              C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C154002 +
             (C11502 + C11503) * C153648) *
                C47632 +
            ((C19518 + C19519) * C154002 + C19472 * C153648) * C47633 +
            C58748 * C154074) *
               C153711 * C1279 -
           ((C59728 * C153648 + (C21326 + C21325) * C154002) * C154074 +
            (C20520 * C153648 + (C20534 + C20533) * C154002) * C47633 +
            ((C11786 + C11787) * C153648 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C154002) *
                C47632) *
               C153711 * C153747) *
              C1281 +
          ((((C11787 + C11786) * C154002 + (C11785 + C11784) * C153648) *
                C47632 +
            (C20502 * C154002 + C20503 * C153648) * C47633 +
            (C59719 * C154002 + (C20537 + C20538) * C153648) * C154074) *
               C153711 * C153747 -
           (C58747 * C154074 + (C12477 * C153648 + C19483 * C154002) * C47633 +
            ((C11505 + C11504) * C153648 + (C11503 + C11502) * C154002) *
                C47632) *
               C153711 * C1279) *
              C1282 +
          (((C11512 * C154002 + C11513 * C153648) * C47632 +
            (C18855 * C154002 + C20107 * C153648) * C47633 +
            (C19485 * C154002 + (C12070 + C12071) * C153648) * C154074) *
               C153711 * C1279 -
           (((C11439 * C3517 - C11440 * C3510 - C11439 * C3518 +
              C153855 * C3522 + C11437 * C1520 - C11438 * C1514 -
              C11437 * C1521 + C154035 * C1529) *
                 C153648 +
             (C20538 + C20537) * C154002) *
                C154074 +
            ((C12791 + C12790) * C153648 + C19816 * C154002) * C47633 +
            (C12266 * C153648 + C12267 * C154002) * C47632) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C154002 +
            (C11502 + C11503) * C153648) *
               C47632 +
           ((C19518 + C19519) * C154002 + C19472 * C153648) * C47633 +
           C58748 * C154074) *
              C153711 * C1366 -
          ((C59728 * C153648 + (C21326 + C21325) * C154002) * C154074 +
           (C20520 * C153648 + (C20534 + C20533) * C154002) * C47633 +
           ((C11786 + C11787) * C153648 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C154002) *
               C47632) *
              C153711 * C1367 +
          (((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
             C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
             C153855 * C1390) *
                C154002 +
            (C11788 + C11789) * C153648) *
               C47632 +
           ((C22305 + C22306) * C154002 + (C19170 + C19171) * C153648) *
               C47633 +
           ((C11437 * C3511 - C11438 * C3507 - C11437 * C3512 +
             C154035 * C3519 + C11439 * C5038 - C11440 * C5033 -
             C11439 * C5039 + C153855 * C5042) *
                C154002 +
            (C58438 + C58439) * C153648) *
               C154074) *
              C153711 * C1368 -
          (((C11439 * C28694 - C11440 * C28691 - C11439 * C28695 +
             C153855 * C28697 + C11437 * C5036 - C11438 * C5032 -
             C11437 * C5037 + C154035 * C5041) *
                C153648 +
            (C11439 * C28692 - C11440 * C28690 - C11439 * C28693 +
             C153855 * C28696 + C11437 * C5038 - C11438 * C5033 -
             C11437 * C5039 + C154035 * C5042) *
                C154002) *
               C154074 +
           ((C11439 * C5774 - C11440 * C5770 - C11439 * C5775 +
             C153855 * C5779 + C11437 * C4385 - C11438 * C4380 -
             C11437 * C4386 + C154035 * C4392) *
                C153648 +
            (C11439 * C5776 - C11440 * C5771 - C11439 * C5777 +
             C153855 * C5780 + C11437 * C4383 - C11438 * C4379 -
             C11437 * C4384 + C154035 * C4391) *
                C154002) *
               C47633 +
           ((C11439 * C3195 - C11440 * C3190 - C11439 * C3196 +
             C153855 * C3202 + C11437 * C1382 - C11438 * C1374 -
             C11437 * C1383 + C154035 * C1389) *
                C153648 +
            (C11439 * C3193 - C11440 * C3189 - C11439 * C3194 +
             C153855 * C3201 + C11437 * C1384 - C11438 * C1375 -
             C11437 * C1385 + C154035 * C1390) *
                C154002) *
               C47632) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
              C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
              C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
              C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
              C154044 * C1390) *
                 C154002 +
             (C35004 + C35005 + C35006 + C35007) * C153648) *
                C153810 * C2086 -
            ((C35508 + C35509 + C35510 + C35511) * C153648 +
             (C34929 * C4383 - C34930 * C4379 - C34929 * C4384 +
              C154044 * C4391 + C34927 * C1957 - C34928 * C1948 -
              C34927 * C1958 + C34919 * C1963 + C34925 * C1111 -
              C34926 * C1105 - C34925 * C1112 + C34918 * C1123 + C34923 * C586 -
              C34924 * C570 - C34923 * C587 + C34917 * C606) *
                 C154002) *
                C153810 * C153775) *
               C154021 +
           (((C34923 * C1111 - C34924 * C1105 - C34923 * C1112 +
              C34917 * C1123 + C34925 * C1957 - C34926 * C1948 -
              C34925 * C1958 + C34918 * C1963 + C34927 * C4383 -
              C34928 * C4379 - C34927 * C4384 + C34919 * C4391 +
              C34929 * C5776 - C34930 * C5771 - C34929 * C5777 +
              C154044 * C5780) *
                 C154002 +
             (C36242 + C36243 + C36244 + C36245) * C153648) *
                C153810 * C153775 -
            ((C35258 + C35259 + C35260 + C35261) * C153648 +
             (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
              C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
              C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
              C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
              C34923 * C358 + C34917 * C377) *
                 C154002) *
                C153810 * C2086) *
               C153747) *
              C154013 +
          ((((C35511 + C35510 + C35509 + C35508) * C154002 +
             (C35956 + C35957 + C35958 + C35959) * C153648) *
                C153810 * C153775 -
            ((C35008 + C35009 + C35010 + C35011) * C153648 +
             (C35007 + C35006 + C35005 + C35004) * C154002) *
                C153810 * C2086) *
               C154021 +
           (((C35261 + C35260 + C35259 + C35258) * C154002 +
             (C35734 + C35735 + C35736 + C35737) * C153648) *
                C153810 * C2086 -
            ((C34929 * C5772 - C34930 * C5769 - C34929 * C5773 +
              C154044 * C5778 + C34927 * C4387 - C34928 * C4381 -
              C34927 * C4388 + C34919 * C4393 + C34925 * C1953 -
              C34926 * C1946 - C34925 * C1954 + C34918 * C1961 +
              C34923 * C1115 - C34924 * C1107 - C34923 * C1116 +
              C34917 * C1125) *
                 C153648 +
             (C36245 + C36244 + C36243 + C36242) * C154002) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C11433 +
             (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
                C153810 * C2086 -
            (C12476 * C154036 + C12477 * C11435 + (C12064 + C12065) * C11434 +
             (C11439 * C1111 - C11440 * C1105 - C11439 * C1112 +
              C153855 * C1123 + C11437 * C586 - C11438 * C570 - C11437 * C587 +
              C154035 * C606) *
                 C11433) *
                C153810 * C153775) *
               C154021 +
           (((C11437 * C1111 - C11438 * C1105 - C11437 * C1112 +
              C154035 * C1123 + C11439 * C1957 - C11440 * C1948 -
              C11439 * C1958 + C153855 * C1963) *
                 C11433 +
             (C12786 + C12787) * C11434 + (C12788 + C12789) * C11435 +
             (C12790 + C12791) * C154036) *
                C153810 * C153775 -
            (C12266 * C154036 + C12267 * C11435 + (C11786 + C11787) * C11434 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C11433) *
                C153810 * C2086) *
               C153747) *
              C154013 +
          ((((C12065 + C12064) * C11433 + (C12063 + C12062) * C11434 +
             (C12061 + C12060) * C11435 + (C12490 + C12491) * C154036) *
                C153810 * C153775 -
            (C11514 * C154036 + C11515 * C11435 + (C11505 + C11504) * C11434 +
             (C11503 + C11502) * C11433) *
                C153810 * C2086) *
               C154021 +
           (((C11787 + C11786) * C11433 + (C11785 + C11784) * C11434 +
             (C11783 + C11782) * C11435 + (C12280 + C12281) * C154036) *
                C153810 * C2086 -
            ((C11439 * C1949 - C11440 * C1944 - C11439 * C1950 +
              C153855 * C1959 + C11437 * C1119 - C11438 * C1109 -
              C11437 * C1120 + C154035 * C1127) *
                 C154036 +
             (C12791 + C12790) * C11435 + (C12789 + C12788) * C11434 +
             (C12787 + C12786) * C11433) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
               C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                  C154002 +
              (C11502 + C11503) * C153648) *
                 C47632 +
             ((C19518 + C19519) * C154002 + C19472 * C153648) * C47633 +
             C58748 * C154074) *
                C2086 -
            (C62294 * C154074 +
             (C19474 * C153648 + (C19520 + C19521) * C154002) * C47633 +
             (C19483 * C153648 + (C19519 + C19518) * C154002) * C47632) *
                C153775) *
               C154021 +
           ((((C20533 + C20534) * C154002 + C20502 * C153648) * C47632 +
             ((C21325 + C21326) * C154002 + C59719 * C153648) * C47633 +
             ((C60525 + C60526) * C154002 + (C59733 + C59734) * C153648) *
                 C154074) *
                C153775 -
            (C60524 * C154074 +
             (C20520 * C153648 + (C20534 + C20533) * C154002) * C47633 +
             ((C11786 + C11787) * C153648 +
              (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
               C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                  C154002) *
                 C47632) *
                C2086) *
               C153747) *
              C154013 +
          ((((C19472 * C154002 + C18855 * C153648) * C47632 +
             (C19484 * C154002 + C19485 * C153648) * C47633 +
             (C58733 * C154002 + (C19524 + C19525) * C153648) * C154074) *
                C153775 -
            (C58747 * C154074 + (C12477 * C153648 + C19483 * C154002) * C47633 +
             ((C11505 + C11504) * C153648 + (C11503 + C11502) * C154002) *
                 C47632) *
                C2086) *
               C154021 +
           ((((C11787 + C11786) * C154002 + (C11785 + C11784) * C153648) *
                 C47632 +
             (C20502 * C154002 + C20503 * C153648) * C47633 +
             (C59719 * C154002 + (C20537 + C20538) * C153648) * C154074) *
                C2086 -
            (((C11439 * C6369 - C11440 * C6363 - C11439 * C6370 +
               C153855 * C6381 + C11437 * C6371 - C11438 * C6364 -
               C11437 * C6372 + C154035 * C6382) *
                  C153648 +
              (C59734 + C59733) * C154002) *
                 C154074 +
             ((C20538 + C20537) * C153648 + C59728 * C154002) * C47633 +
             (C19816 * C153648 + C20520 * C154002) * C47632) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C154002 +
            (C35004 + C35005 + C35006 + C35007) * C153648) *
               C153810 * C154094 -
           ((C35508 + C35509 + C35510 + C35511) * C153648 +
            (C34929 * C4383 - C34930 * C4379 - C34929 * C4384 +
             C154044 * C4391 + C34927 * C1957 - C34928 * C1948 -
             C34927 * C1958 + C34919 * C1963 + C34925 * C1111 - C34926 * C1105 -
             C34925 * C1112 + C34918 * C1123 + C34923 * C586 - C34924 * C570 -
             C34923 * C587 + C34917 * C606) *
                C154002) *
               C153810 * C154095 +
           ((C34923 * C588 - C34924 * C571 - C34923 * C589 + C34917 * C607 +
             C34925 * C1526 - C34926 * C1517 - C34925 * C1527 + C34918 * C1532 +
             C34927 * C3511 - C34928 * C3507 - C34927 * C3512 + C34919 * C3519 +
             C34929 * C5038 - C34930 * C5033 - C34929 * C5039 +
             C154044 * C5042) *
                C154002 +
            (C35512 + C35513 + C35514 + C35515) * C153648) *
               C153810 * C2602) *
              C154021 +
          (((C34923 * C1111 - C34924 * C1105 - C34923 * C1112 + C34917 * C1123 +
             C34925 * C1957 - C34926 * C1948 - C34925 * C1958 + C34918 * C1963 +
             C34927 * C4383 - C34928 * C4379 - C34927 * C4384 + C34919 * C4391 +
             C34929 * C5776 - C34930 * C5771 - C34929 * C5777 +
             C154044 * C5780) *
                C154002 +
            (C36242 + C36243 + C36244 + C36245) * C153648) *
               C153810 * C154095 -
           ((C35258 + C35259 + C35260 + C35261) * C153648 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C154002) *
               C153810 * C154094 -
           ((C34929 * C28694 - C34930 * C28691 - C34929 * C28695 +
             C154044 * C28697 + C34927 * C5036 - C34928 * C5032 -
             C34927 * C5037 + C34919 * C5041 + C34925 * C3513 - C34926 * C3508 -
             C34925 * C3514 + C34918 * C3520 + C34923 * C1524 - C34924 * C1516 -
             C34923 * C1525 + C34917 * C1531) *
                C153648 +
            (C34929 * C28692 - C34930 * C28690 - C34929 * C28693 +
             C154044 * C28696 + C34927 * C5038 - C34928 * C5033 -
             C34927 * C5039 + C34919 * C5042 + C34925 * C3511 - C34926 * C3507 -
             C34925 * C3512 + C34918 * C3519 + C34923 * C1526 - C34924 * C1517 -
             C34923 * C1527 + C34917 * C1532) *
                C154002) *
               C153810 * C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C11433 +
            (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
               C153810 * C154094 -
           (C12476 * C154036 + C12477 * C11435 + (C12064 + C12065) * C11434 +
            (C11439 * C1111 - C11440 * C1105 - C11439 * C1112 +
             C153855 * C1123 + C11437 * C586 - C11438 * C570 - C11437 * C587 +
             C154035 * C606) *
                C11433) *
               C153810 * C154095 +
           ((C11437 * C588 - C11438 * C571 - C11437 * C589 + C154035 * C607 +
             C11439 * C1526 - C11440 * C1517 - C11439 * C1527 +
             C153855 * C1532) *
                C11433 +
            (C12066 + C12067) * C11434 + (C12068 + C12069) * C11435 +
            (C12070 + C12071) * C154036) *
               C153810 * C2602) *
              C154021 +
          (((C11437 * C1111 - C11438 * C1105 - C11437 * C1112 +
             C154035 * C1123 + C11439 * C1957 - C11440 * C1948 -
             C11439 * C1958 + C153855 * C1963) *
                C11433 +
            (C12786 + C12787) * C11434 + (C12788 + C12789) * C11435 +
            (C12790 + C12791) * C154036) *
               C153810 * C154095 -
           (C12266 * C154036 + C12267 * C11435 + (C11786 + C11787) * C11434 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C11433) *
               C153810 * C154094 -
           ((C11439 * C3517 - C11440 * C3510 - C11439 * C3518 +
             C153855 * C3522 + C11437 * C1520 - C11438 * C1514 -
             C11437 * C1521 + C154035 * C1529) *
                C154036 +
            (C11439 * C3515 - C11440 * C3509 - C11439 * C3516 +
             C153855 * C3521 + C11437 * C1522 - C11438 * C1515 -
             C11437 * C1523 + C154035 * C1530) *
                C11435 +
            (C11439 * C3513 - C11440 * C3508 - C11439 * C3514 +
             C153855 * C3520 + C11437 * C1524 - C11438 * C1516 -
             C11437 * C1525 + C154035 * C1531) *
                C11434 +
            (C11439 * C3511 - C11440 * C3507 - C11439 * C3512 +
             C153855 * C3519 + C11437 * C1526 - C11438 * C1517 -
             C11437 * C1527 + C154035 * C1532) *
                C11433) *
               C153810 * C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C154002 +
             (C11502 + C11503) * C153648) *
                C47632 +
            ((C19518 + C19519) * C154002 + C19472 * C153648) * C47633 +
            C58748 * C154074) *
               C154094 -
           (C62294 * C154074 +
            (C19474 * C153648 + (C19520 + C19521) * C154002) * C47633 +
            (C19483 * C153648 + (C19519 + C19518) * C154002) * C47632) *
               C154095 +
           (C58748 * C47632 +
            ((C23093 + C23094) * C154002 + C58733 * C153648) * C47633 +
            ((C62297 + C62298) * C154002 + (C58751 + C58752) * C153648) *
                C154074) *
               C2602) *
              C154021 +
          ((((C20533 + C20534) * C154002 + C20502 * C153648) * C47632 +
            ((C21325 + C21326) * C154002 + C59719 * C153648) * C47633 +
            ((C60525 + C60526) * C154002 + (C59733 + C59734) * C153648) *
                C154074) *
               C154095 -
           (C60524 * C154074 +
            (C20520 * C153648 + (C20534 + C20533) * C154002) * C47633 +
            ((C11786 + C11787) * C153648 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C154002) *
                C47632) *
               C154094 -
           (((C11439 * C31182 - C11440 * C31179 - C11439 * C31183 +
              C153855 * C31185 + C11437 * C9204 - C11438 * C9200 -
              C11437 * C9205 + C154035 * C9209) *
                 C153648 +
             (C11439 * C31180 - C11440 * C31178 - C11439 * C31181 +
              C153855 * C31184 + C11437 * C9206 - C11438 * C9201 -
              C11437 * C9207 + C154035 * C9210) *
                 C154002) *
                C154074 +
            ((C59734 + C59733) * C153648 + (C60526 + C60525) * C154002) *
                C47633 +
            C60524 * C47632) *
               C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C11437 * C144 - C11438 * C136 - C11437 * C145 +
                 C154035 * C160 + C11439 * C357 - C11440 * C341 -
                 C11439 * C358 + C153855 * C377) *
                    C11433 +
                (C11502 + C11503) * C11434 + C11512 * C11435 +
                C11513 * C154036) *
                   C153810 * C2086 -
               (C12476 * C154036 + C12477 * C11435 +
                (C12064 + C12065) * C11434 +
                (C11439 * C1111 - C11440 * C1105 - C11439 * C1112 +
                 C153855 * C1123 + C11437 * C586 - C11438 * C570 -
                 C11437 * C587 + C154035 * C606) *
                    C11433) *
                   C153810 * C153775) *
                  C153695 * C1281 +
              (((C12065 + C12064) * C11433 + (C12063 + C12062) * C11434 +
                (C12061 + C12060) * C11435 + (C12490 + C12491) * C154036) *
                   C153810 * C153775 -
               (C11514 * C154036 + C11515 * C11435 +
                (C11505 + C11504) * C11434 + (C11503 + C11502) * C11433) *
                   C153810 * C2086) *
                  C153695 * C1282 +
              ((C11512 * C11433 + C11513 * C11434 + (C11509 + C11508) * C11435 +
                (C11510 + C11511) * C154036) *
                   C153810 * C2086 -
               ((C11439 * C1121 - C11440 * C1110 - C11439 * C1122 +
                 C153855 * C1128 + C11437 * C598 - C11438 * C576 -
                 C11437 * C599 + C154035 * C612) *
                    C154036 +
                (C12491 + C12490) * C11435 + C12476 * C11434 +
                C12477 * C11433) *
                   C153810 * C153775) *
                  C153695 * C1283) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C11437 * C144 - C11438 * C136 - C11437 * C145 +
                 C154035 * C160 + C11439 * C357 - C11440 * C341 -
                 C11439 * C358 + C153855 * C377) *
                    C11433 +
                (C11502 + C11503) * C11434 + C11512 * C11435 +
                C11513 * C154036) *
                   C153810 * C2086 -
               (C12476 * C154036 + C12477 * C11435 +
                (C12064 + C12065) * C11434 +
                (C11439 * C1111 - C11440 * C1105 - C11439 * C1112 +
                 C153855 * C1123 + C11437 * C586 - C11438 * C570 -
                 C11437 * C587 + C154035 * C606) *
                    C11433) *
                   C153810 * C153775) *
                  C332 +
              (((C11437 * C1111 - C11438 * C1105 - C11437 * C1112 +
                 C154035 * C1123 + C11439 * C1957 - C11440 * C1948 -
                 C11439 * C1958 + C153855 * C1963) *
                    C11433 +
                (C12786 + C12787) * C11434 + (C12788 + C12789) * C11435 +
                (C12790 + C12791) * C154036) *
                   C153810 * C153775 -
               (C12266 * C154036 + C12267 * C11435 +
                (C11786 + C11787) * C11434 +
                (C11439 * C359 - C11440 * C342 - C11439 * C360 +
                 C153855 * C378 + C11437 * C357 - C11438 * C341 -
                 C11437 * C358 + C154035 * C377) *
                    C11433) *
                   C153810 * C2086) *
                  C333 +
              (((C11437 * C359 - C11438 * C342 - C11437 * C360 +
                 C154035 * C378 + C11439 * C1384 - C11440 * C1375 -
                 C11439 * C1385 + C153855 * C1390) *
                    C11433 +
                (C11788 + C11789) * C11434 + (C11790 + C11791) * C11435 +
                (C11792 + C11793) * C154036) *
                   C153810 * C2086 -
               ((C11439 * C4389 - C11440 * C4382 - C11439 * C4390 +
                 C153855 * C4394 + C11437 * C1951 - C11438 * C1945 -
                 C11437 * C1952 + C154035 * C1960) *
                    C154036 +
                (C11439 * C4387 - C11440 * C4381 - C11439 * C4388 +
                 C153855 * C4393 + C11437 * C1953 - C11438 * C1946 -
                 C11437 * C1954 + C154035 * C1961) *
                    C11435 +
                (C11439 * C4385 - C11440 * C4380 - C11439 * C4386 +
                 C153855 * C4392 + C11437 * C1955 - C11438 * C1947 -
                 C11437 * C1956 + C154035 * C1962) *
                    C11434 +
                (C11439 * C4383 - C11440 * C4379 - C11439 * C4384 +
                 C153855 * C4391 + C11437 * C1957 - C11438 * C1948 -
                 C11437 * C1958 + C154035 * C1963) *
                    C11433) *
                   C153810 * C153775) *
                  C334) *
             C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
            C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
               C11433 +
           (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
              C153810 * C2292 -
          (C12476 * C154036 + C12477 * C11435 + (C12064 + C12065) * C11434 +
           (C11439 * C1111 - C11440 * C1105 - C11439 * C1112 + C153855 * C1123 +
            C11437 * C586 - C11438 * C570 - C11437 * C587 + C154035 * C606) *
               C11433) *
              C153810 * C2293 +
          ((C11437 * C588 - C11438 * C571 - C11437 * C589 + C154035 * C607 +
            C11439 * C1526 - C11440 * C1517 - C11439 * C1527 +
            C153855 * C1532) *
               C11433 +
           (C12066 + C12067) * C11434 + (C12068 + C12069) * C11435 +
           (C12070 + C12071) * C154036) *
              C153810 * C2294 -
          ((C11439 * C8574 - C11440 * C8573 - C11439 * C8575 + C153855 * C8576 +
            C11437 * C2303 - C11438 * C2297 - C11437 * C2304 +
            C154035 * C2312) *
               C154036 +
           (C11439 * C6371 - C11440 * C6364 - C11439 * C6372 + C153855 * C6382 +
            C11437 * C2305 - C11438 * C2298 - C11437 * C2306 +
            C154035 * C2313) *
               C11435 +
           (C11439 * C6375 - C11440 * C6366 - C11439 * C6376 + C153855 * C6384 +
            C11437 * C2307 - C11438 * C2299 - C11437 * C2308 +
            C154035 * C2314) *
               C11434 +
           (C11439 * C6379 - C11440 * C6368 - C11439 * C6380 + C153855 * C6386 +
            C11437 * C2309 - C11438 * C2300 - C11437 * C2310 +
            C154035 * C2315) *
               C11433) *
              C153810 * C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C154002 +
            (C35004 + C35005 + C35006 + C35007) * C153648) *
               C153810 * C2086 -
           ((C35508 + C35509 + C35510 + C35511) * C153648 +
            (C34929 * C4383 - C34930 * C4379 - C34929 * C4384 +
             C154044 * C4391 + C34927 * C1957 - C34928 * C1948 -
             C34927 * C1958 + C34919 * C1963 + C34925 * C1111 - C34926 * C1105 -
             C34925 * C1112 + C34918 * C1123 + C34923 * C586 - C34924 * C570 -
             C34923 * C587 + C34917 * C606) *
                C154002) *
               C153810 * C153775) *
              C153695 * C1281 +
          (((C35511 + C35510 + C35509 + C35508) * C154002 +
            (C35956 + C35957 + C35958 + C35959) * C153648) *
               C153810 * C153775 -
           ((C35008 + C35009 + C35010 + C35011) * C153648 +
            (C35007 + C35006 + C35005 + C35004) * C154002) *
               C153810 * C2086) *
              C153695 * C1282 +
          (((C35011 + C35010 + C35009 + C35008) * C154002 +
            (C35012 + C35013 + C35014 + C35015) * C153648) *
               C153810 * C2086 -
           ((C34929 * C4389 - C34930 * C4382 - C34929 * C4390 +
             C154044 * C4394 + C34927 * C1951 - C34928 * C1945 -
             C34927 * C1952 + C34919 * C1960 + C34925 * C1117 - C34926 * C1108 -
             C34925 * C1118 + C34918 * C1126 + C34923 * C580 - C34924 * C567 -
             C34923 * C581 + C34917 * C603) *
                C153648 +
            (C35959 + C35958 + C35957 + C35956) * C154002) *
               C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C154002 +
            (C35004 + C35005 + C35006 + C35007) * C153648) *
               C153810 * C2086 -
           ((C35508 + C35509 + C35510 + C35511) * C153648 +
            (C34929 * C4383 - C34930 * C4379 - C34929 * C4384 +
             C154044 * C4391 + C34927 * C1957 - C34928 * C1948 -
             C34927 * C1958 + C34919 * C1963 + C34925 * C1111 - C34926 * C1105 -
             C34925 * C1112 + C34918 * C1123 + C34923 * C586 - C34924 * C570 -
             C34923 * C587 + C34917 * C606) *
                C154002) *
               C153810 * C153775) *
              C332 +
          (((C34923 * C1111 - C34924 * C1105 - C34923 * C1112 + C34917 * C1123 +
             C34925 * C1957 - C34926 * C1948 - C34925 * C1958 + C34918 * C1963 +
             C34927 * C4383 - C34928 * C4379 - C34927 * C4384 + C34919 * C4391 +
             C34929 * C5776 - C34930 * C5771 - C34929 * C5777 +
             C154044 * C5780) *
                C154002 +
            (C36242 + C36243 + C36244 + C36245) * C153648) *
               C153810 * C153775 -
           ((C35258 + C35259 + C35260 + C35261) * C153648 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C154002) *
               C153810 * C2086) *
              C333 +
          (((C34923 * C359 - C34924 * C342 - C34923 * C360 + C34917 * C378 +
             C34925 * C1384 - C34926 * C1375 - C34925 * C1385 + C34918 * C1390 +
             C34927 * C3193 - C34928 * C3189 - C34927 * C3194 + C34919 * C3201 +
             C34929 * C4808 - C34930 * C4803 - C34929 * C4809 +
             C154044 * C4812) *
                C154002 +
            (C35262 + C35263 + C35264 + C35265) * C153648) *
               C153810 * C2086 -
           ((C34929 * C29108 - C34930 * C29105 - C34929 * C29109 +
             C154044 * C29111 + C34927 * C5774 - C34928 * C5770 -
             C34927 * C5775 + C34919 * C5779 + C34925 * C4385 - C34926 * C4380 -
             C34925 * C4386 + C34918 * C4392 + C34923 * C1955 - C34924 * C1947 -
             C34923 * C1956 + C34917 * C1962) *
                C153648 +
            (C34929 * C29106 - C34930 * C29104 - C34929 * C29107 +
             C154044 * C29110 + C34927 * C5776 - C34928 * C5771 -
             C34927 * C5777 + C34919 * C5780 + C34925 * C4383 - C34926 * C4379 -
             C34925 * C4384 + C34918 * C4391 + C34923 * C1957 - C34924 * C1948 -
             C34923 * C1958 + C34917 * C1963) *
                C154002) *
               C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
            C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
            C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
            C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
            C154044 * C1390) *
               C154002 +
           (C35004 + C35005 + C35006 + C35007) * C153648) *
              C153810 * C2292 -
          ((C35508 + C35509 + C35510 + C35511) * C153648 +
           (C34929 * C4383 - C34930 * C4379 - C34929 * C4384 + C154044 * C4391 +
            C34927 * C1957 - C34928 * C1948 - C34927 * C1958 + C34919 * C1963 +
            C34925 * C1111 - C34926 * C1105 - C34925 * C1112 + C34918 * C1123 +
            C34923 * C586 - C34924 * C570 - C34923 * C587 + C34917 * C606) *
               C154002) *
              C153810 * C2293 +
          ((C34923 * C588 - C34924 * C571 - C34923 * C589 + C34917 * C607 +
            C34925 * C1526 - C34926 * C1517 - C34925 * C1527 + C34918 * C1532 +
            C34927 * C3511 - C34928 * C3507 - C34927 * C3512 + C34919 * C3519 +
            C34929 * C5038 - C34930 * C5033 - C34929 * C5039 +
            C154044 * C5042) *
               C154002 +
           (C35512 + C35513 + C35514 + C35515) * C153648) *
              C153810 * C2294 -
          ((C34929 * C32003 - C34930 * C32002 - C34929 * C32004 +
            C154044 * C32005 + C34927 * C6373 - C34928 * C6365 -
            C34927 * C6374 + C34919 * C6383 + C34925 * C6375 - C34926 * C6366 -
            C34925 * C6376 + C34918 * C6384 + C34923 * C2307 - C34924 * C2299 -
            C34923 * C2308 + C34917 * C2314) *
               C153648 +
           (C34929 * C30186 - C34930 * C30183 - C34929 * C30187 +
            C154044 * C30189 + C34927 * C6377 - C34928 * C6367 -
            C34927 * C6378 + C34919 * C6385 + C34925 * C6379 - C34926 * C6368 -
            C34925 * C6380 + C34918 * C6386 + C34923 * C2309 - C34924 * C2300 -
            C34923 * C2310 + C34917 * C2315) *
               C154002) *
              C153810 * C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C154002 +
             (C11502 + C11503) * C153648) *
                C47632 +
            ((C19518 + C19519) * C154002 + C19472 * C153648) * C47633 +
            C58748 * C154074) *
               C2086 -
           ((C58732 * C153648 + (C23094 + C23093) * C154002) * C154074 +
            (C19474 * C153648 + (C19520 + C19521) * C154002) * C47633 +
            (C19483 * C153648 + (C19519 + C19518) * C154002) * C47632) *
               C153775) *
              C153695 * C1281 +
          (((C19472 * C154002 + C18855 * C153648) * C47632 +
            (C19484 * C154002 + C19485 * C153648) * C47633 +
            (C58733 * C154002 + (C19524 + C19525) * C153648) * C154074) *
               C153775 -
           (C58747 * C154074 + (C12477 * C153648 + C19483 * C154002) * C47633 +
            ((C11505 + C11504) * C153648 + (C11503 + C11502) * C154002) *
                C47632) *
               C2086) *
              C153695 * C1282 +
          (((C11512 * C154002 + C11513 * C153648) * C47632 +
            (C18855 * C154002 + C20107 * C153648) * C47633 +
            (C19485 * C154002 + (C12070 + C12071) * C153648) * C154074) *
               C2086 -
           (((C11439 * C8574 - C11440 * C8573 - C11439 * C8575 +
              C153855 * C8576 + C11437 * C2303 - C11438 * C2297 -
              C11437 * C2304 + C154035 * C2312) *
                 C153648 +
             (C19525 + C19524) * C154002) *
                C154074 +
            ((C12071 + C12070) * C153648 + C19473 * C154002) * C47633 +
            (C12476 * C153648 + C12477 * C154002) * C47632) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C154002 +
             (C11502 + C11503) * C153648) *
                C47632 +
            ((C19518 + C19519) * C154002 + C19472 * C153648) * C47633 +
            C58748 * C154074) *
               C2086 -
           ((C58732 * C153648 + (C23094 + C23093) * C154002) * C154074 +
            (C19474 * C153648 + (C19520 + C19521) * C154002) * C47633 +
            (C19483 * C153648 + (C19519 + C19518) * C154002) * C47632) *
               C153775) *
              C332 +
          ((((C20533 + C20534) * C154002 + C20502 * C153648) * C47632 +
            ((C21325 + C21326) * C154002 + C59719 * C153648) * C47633 +
            ((C60525 + C60526) * C154002 + (C59733 + C59734) * C153648) *
                C154074) *
               C153775 -
           (C60524 * C154074 +
            (C20520 * C153648 + (C20534 + C20533) * C154002) * C47633 +
            ((C11786 + C11787) * C153648 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C154002) *
                C47632) *
               C2086) *
              C333 +
          ((((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
              C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
              C153855 * C1390) *
                 C154002 +
             (C11788 + C11789) * C153648) *
                C47632 +
            ((C22305 + C22306) * C154002 + (C19170 + C19171) * C153648) *
                C47633 +
            ((C61505 + C61506) * C154002 + (C58438 + C58439) * C153648) *
                C154074) *
               C2086 -
           (((C11439 * C32003 - C11440 * C32002 - C11439 * C32004 +
              C153855 * C32005 + C11437 * C6373 - C11438 * C6365 -
              C11437 * C6374 + C154035 * C6383) *
                 C153648 +
             (C11439 * C30186 - C11440 * C30183 - C11439 * C30187 +
              C153855 * C30189 + C11437 * C6377 - C11438 * C6367 -
              C11437 * C6378 + C154035 * C6385) *
                 C154002) *
                C154074 +
            ((C58439 + C58438) * C153648 + (C61506 + C61505) * C154002) *
                C47633 +
            ((C19171 + C19170) * C153648 + (C22306 + C22305) * C154002) *
                C47632) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C154002 +
            (C11502 + C11503) * C153648) *
               C47632 +
           ((C19518 + C19519) * C154002 + C19472 * C153648) * C47633 +
           C58748 * C154074) *
              C2292 -
          (C62294 * C154074 +
           (C19474 * C153648 + (C19520 + C19521) * C154002) * C47633 +
           (C19483 * C153648 + (C19519 + C19518) * C154002) * C47632) *
              C2293 +
          (C58748 * C47632 +
           ((C23093 + C23094) * C154002 + C58733 * C153648) * C47633 +
           ((C62297 + C62298) * C154002 + (C58751 + C58752) * C153648) *
               C154074) *
              C2294 -
          (((C11439 * C56410 - C11440 * C56409 - C11439 * C56411 +
             C153855 * C56412 + C11437 * C10556 - C11438 * C10552 -
             C11437 * C10557 + C154035 * C10561) *
                C153648 +
            (C11439 * C34033 - C11440 * C34030 - C11439 * C34034 +
             C153855 * C34036 + C11437 * C10558 - C11438 * C10553 -
             C11437 * C10559 + C154035 * C10562) *
                C154002) *
               C154074 +
           ((C58752 + C58751) * C153648 + (C62298 + C62297) * C154002) *
               C47633 +
           C62294 * C47632) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C154002 +
            (C35004 + C35005 + C35006 + C35007) * C153648) *
               C153810 * C154094 -
           ((C35508 + C35509 + C35510 + C35511) * C153648 +
            (C34929 * C4383 - C34930 * C4379 - C34929 * C4384 +
             C154044 * C4391 + C34927 * C1957 - C34928 * C1948 -
             C34927 * C1958 + C34919 * C1963 + C34925 * C1111 - C34926 * C1105 -
             C34925 * C1112 + C34918 * C1123 + C34923 * C586 - C34924 * C570 -
             C34923 * C587 + C34917 * C606) *
                C154002) *
               C153810 * C154095 +
           ((C34923 * C588 - C34924 * C571 - C34923 * C589 + C34917 * C607 +
             C34925 * C1526 - C34926 * C1517 - C34925 * C1527 + C34918 * C1532 +
             C34927 * C3511 - C34928 * C3507 - C34927 * C3512 + C34919 * C3519 +
             C34929 * C5038 - C34930 * C5033 - C34929 * C5039 +
             C154044 * C5042) *
                C154002 +
            (C35512 + C35513 + C35514 + C35515) * C153648) *
               C153810 * C2602) *
              C153695 * C154013 +
          (((C35511 + C35510 + C35509 + C35508) * C154002 +
            (C35956 + C35957 + C35958 + C35959) * C153648) *
               C153810 * C154095 -
           ((C35008 + C35009 + C35010 + C35011) * C153648 +
            (C35007 + C35006 + C35005 + C35004) * C154002) *
               C153810 * C154094 -
           ((C34929 * C5034 - C34930 * C5031 - C34929 * C5035 +
             C154044 * C5040 + C34927 * C3515 - C34928 * C3509 -
             C34927 * C3516 + C34919 * C3521 + C34925 * C1522 - C34926 * C1515 -
             C34925 * C1523 + C34918 * C1530 + C34923 * C592 - C34924 * C573 -
             C34923 * C593 + C34917 * C609) *
                C153648 +
            (C35515 + C35514 + C35513 + C35512) * C154002) *
               C153810 * C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C11433 +
            (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
               C153810 * C154094 -
           (C12476 * C154036 + C12477 * C11435 + (C12064 + C12065) * C11434 +
            (C11439 * C1111 - C11440 * C1105 - C11439 * C1112 +
             C153855 * C1123 + C11437 * C586 - C11438 * C570 - C11437 * C587 +
             C154035 * C606) *
                C11433) *
               C153810 * C154095 +
           ((C11437 * C588 - C11438 * C571 - C11437 * C589 + C154035 * C607 +
             C11439 * C1526 - C11440 * C1517 - C11439 * C1527 +
             C153855 * C1532) *
                C11433 +
            (C12066 + C12067) * C11434 + (C12068 + C12069) * C11435 +
            (C12070 + C12071) * C154036) *
               C153810 * C2602) *
              C153695 * C154013 +
          (((C12065 + C12064) * C11433 + (C12063 + C12062) * C11434 +
            (C12061 + C12060) * C11435 + (C12490 + C12491) * C154036) *
               C153810 * C154095 -
           (C11514 * C154036 + C11515 * C11435 + (C11505 + C11504) * C11434 +
            (C11503 + C11502) * C11433) *
               C153810 * C154094 -
           ((C11439 * C1518 - C11440 * C1513 - C11439 * C1519 +
             C153855 * C1528 + C11437 * C596 - C11438 * C575 - C11437 * C597 +
             C154035 * C611) *
                C154036 +
            (C12071 + C12070) * C11435 + (C12069 + C12068) * C11434 +
            (C12067 + C12066) * C11433) *
               C153810 * C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C154002 +
             (C11502 + C11503) * C153648) *
                C47632 +
            ((C19518 + C19519) * C154002 + C19472 * C153648) * C47633 +
            C58748 * C154074) *
               C154094 -
           (C62294 * C154074 +
            (C19474 * C153648 + (C19520 + C19521) * C154002) * C47633 +
            (C19483 * C153648 + (C19519 + C19518) * C154002) * C47632) *
               C154095 +
           (C58748 * C47632 +
            ((C23093 + C23094) * C154002 + C58733 * C153648) * C47633 +
            ((C62297 + C62298) * C154002 + (C58751 + C58752) * C153648) *
                C154074) *
               C2602) *
              C153695 * C154013 +
          (((C19472 * C154002 + C18855 * C153648) * C47632 +
            (C19484 * C154002 + C19485 * C153648) * C47633 +
            (C58733 * C154002 + (C19524 + C19525) * C153648) * C154074) *
               C154095 -
           (C58747 * C154074 + (C12477 * C153648 + C19483 * C154002) * C47633 +
            ((C11505 + C11504) * C153648 + (C11503 + C11502) * C154002) *
                C47632) *
               C154094 -
           (((C11439 * C9202 - C11440 * C9199 - C11439 * C9203 +
              C153855 * C9208 + C11437 * C7748 - C11438 * C7742 -
              C11437 * C7749 + C154035 * C7754) *
                 C153648 +
             (C58752 + C58751) * C154002) *
                C154074 +
            ((C19525 + C19524) * C153648 + C58732 * C154002) * C47633 +
            C58747 * C47632) *
               C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C11433 +
            (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
               C153810 * C2086 -
           (C12476 * C154036 + C12477 * C11435 + (C12064 + C12065) * C11434 +
            (C11439 * C1111 - C11440 * C1105 - C11439 * C1112 +
             C153855 * C1123 + C11437 * C586 - C11438 * C570 - C11437 * C587 +
             C154035 * C606) *
                C11433) *
               C153810 * C153775) *
              C332 +
          (((C11437 * C1111 - C11438 * C1105 - C11437 * C1112 +
             C154035 * C1123 + C11439 * C1957 - C11440 * C1948 -
             C11439 * C1958 + C153855 * C1963) *
                C11433 +
            (C12786 + C12787) * C11434 + (C12788 + C12789) * C11435 +
            (C12790 + C12791) * C154036) *
               C153810 * C153775 -
           (C12266 * C154036 + C12267 * C11435 + (C11786 + C11787) * C11434 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C11433) *
               C153810 * C2086) *
              C333 +
          (((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
             C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
             C153855 * C1390) *
                C11433 +
            (C11788 + C11789) * C11434 + (C11790 + C11791) * C11435 +
            (C11792 + C11793) * C154036) *
               C153810 * C2086 -
           ((C11439 * C4389 - C11440 * C4382 - C11439 * C4390 +
             C153855 * C4394 + C11437 * C1951 - C11438 * C1945 -
             C11437 * C1952 + C154035 * C1960) *
                C154036 +
            (C11439 * C4387 - C11440 * C4381 - C11439 * C4388 +
             C153855 * C4393 + C11437 * C1953 - C11438 * C1946 -
             C11437 * C1954 + C154035 * C1961) *
                C11435 +
            (C11439 * C4385 - C11440 * C4380 - C11439 * C4386 +
             C153855 * C4392 + C11437 * C1955 - C11438 * C1947 -
             C11437 * C1956 + C154035 * C1962) *
                C11434 +
            (C11439 * C4383 - C11440 * C4379 - C11439 * C4384 +
             C153855 * C4391 + C11437 * C1957 - C11438 * C1948 -
             C11437 * C1958 + C154035 * C1963) *
                C11433) *
               C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C11433 +
            (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
               C153810 * C2086 -
           (C12476 * C154036 + C12477 * C11435 + (C12064 + C12065) * C11434 +
            (C11439 * C1111 - C11440 * C1105 - C11439 * C1112 +
             C153855 * C1123 + C11437 * C586 - C11438 * C570 - C11437 * C587 +
             C154035 * C606) *
                C11433) *
               C153810 * C153775) *
              C153695 * C1281 +
          (((C12065 + C12064) * C11433 + (C12063 + C12062) * C11434 +
            (C12061 + C12060) * C11435 + (C12490 + C12491) * C154036) *
               C153810 * C153775 -
           (C11514 * C154036 + C11515 * C11435 + (C11505 + C11504) * C11434 +
            (C11503 + C11502) * C11433) *
               C153810 * C2086) *
              C153695 * C1282 +
          ((C11512 * C11433 + C11513 * C11434 + (C11509 + C11508) * C11435 +
            (C11510 + C11511) * C154036) *
               C153810 * C2086 -
           ((C11439 * C1121 - C11440 * C1110 - C11439 * C1122 +
             C153855 * C1128 + C11437 * C598 - C11438 * C576 - C11437 * C599 +
             C154035 * C612) *
                C154036 +
            (C12491 + C12490) * C11435 + C12476 * C11434 + C12477 * C11433) *
               C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C154002 +
            (C35004 + C35005 + C35006 + C35007) * C153648) *
               C153810 * C2086 -
           ((C35508 + C35509 + C35510 + C35511) * C153648 +
            (C34929 * C4383 - C34930 * C4379 - C34929 * C4384 +
             C154044 * C4391 + C34927 * C1957 - C34928 * C1948 -
             C34927 * C1958 + C34919 * C1963 + C34925 * C1111 - C34926 * C1105 -
             C34925 * C1112 + C34918 * C1123 + C34923 * C586 - C34924 * C570 -
             C34923 * C587 + C34917 * C606) *
                C154002) *
               C153810 * C153775) *
              C153695 * C1281 +
          (((C35511 + C35510 + C35509 + C35508) * C154002 +
            (C35956 + C35957 + C35958 + C35959) * C153648) *
               C153810 * C153775 -
           ((C35008 + C35009 + C35010 + C35011) * C153648 +
            (C35007 + C35006 + C35005 + C35004) * C154002) *
               C153810 * C2086) *
              C153695 * C1282 +
          (((C35011 + C35010 + C35009 + C35008) * C154002 +
            (C35012 + C35013 + C35014 + C35015) * C153648) *
               C153810 * C2086 -
           ((C34929 * C4389 - C34930 * C4382 - C34929 * C4390 +
             C154044 * C4394 + C34927 * C1951 - C34928 * C1945 -
             C34927 * C1952 + C34919 * C1960 + C34925 * C1117 - C34926 * C1108 -
             C34925 * C1118 + C34918 * C1126 + C34923 * C580 - C34924 * C567 -
             C34923 * C581 + C34917 * C603) *
                C153648 +
            (C35959 + C35958 + C35957 + C35956) * C154002) *
               C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C154002 +
            (C35004 + C35005 + C35006 + C35007) * C153648) *
               C153810 * C2086 -
           ((C35508 + C35509 + C35510 + C35511) * C153648 +
            (C34929 * C4383 - C34930 * C4379 - C34929 * C4384 +
             C154044 * C4391 + C34927 * C1957 - C34928 * C1948 -
             C34927 * C1958 + C34919 * C1963 + C34925 * C1111 - C34926 * C1105 -
             C34925 * C1112 + C34918 * C1123 + C34923 * C586 - C34924 * C570 -
             C34923 * C587 + C34917 * C606) *
                C154002) *
               C153810 * C153775) *
              C332 +
          (((C34923 * C1111 - C34924 * C1105 - C34923 * C1112 + C34917 * C1123 +
             C34925 * C1957 - C34926 * C1948 - C34925 * C1958 + C34918 * C1963 +
             C34927 * C4383 - C34928 * C4379 - C34927 * C4384 + C34919 * C4391 +
             C34929 * C5776 - C34930 * C5771 - C34929 * C5777 +
             C154044 * C5780) *
                C154002 +
            (C36242 + C36243 + C36244 + C36245) * C153648) *
               C153810 * C153775 -
           ((C35258 + C35259 + C35260 + C35261) * C153648 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C154002) *
               C153810 * C2086) *
              C333 +
          (((C34923 * C359 - C34924 * C342 - C34923 * C360 + C34917 * C378 +
             C34925 * C1384 - C34926 * C1375 - C34925 * C1385 + C34918 * C1390 +
             C34927 * C3193 - C34928 * C3189 - C34927 * C3194 + C34919 * C3201 +
             C34929 * C4808 - C34930 * C4803 - C34929 * C4809 +
             C154044 * C4812) *
                C154002 +
            (C35262 + C35263 + C35264 + C35265) * C153648) *
               C153810 * C2086 -
           ((C34929 * C29108 - C34930 * C29105 - C34929 * C29109 +
             C154044 * C29111 + C34927 * C5774 - C34928 * C5770 -
             C34927 * C5775 + C34919 * C5779 + C34925 * C4385 - C34926 * C4380 -
             C34925 * C4386 + C34918 * C4392 + C34923 * C1955 - C34924 * C1947 -
             C34923 * C1956 + C34917 * C1962) *
                C153648 +
            (C34929 * C29106 - C34930 * C29104 - C34929 * C29107 +
             C154044 * C29110 + C34927 * C5776 - C34928 * C5771 -
             C34927 * C5777 + C34919 * C5780 + C34925 * C4383 - C34926 * C4379 -
             C34925 * C4384 + C34918 * C4391 + C34923 * C1957 - C34924 * C1948 -
             C34923 * C1958 + C34917 * C1963) *
                C154002) *
               C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C154002 +
             (C11502 + C11503) * C153648) *
                C47632 +
            ((C19518 + C19519) * C154002 + C19472 * C153648) * C47633 +
            C58748 * C154074) *
               C2086 -
           ((C58732 * C153648 + (C23094 + C23093) * C154002) * C154074 +
            (C19474 * C153648 + (C19520 + C19521) * C154002) * C47633 +
            (C19483 * C153648 + (C19519 + C19518) * C154002) * C47632) *
               C153775) *
              C153695 * C1281 +
          (((C19472 * C154002 + C18855 * C153648) * C47632 +
            (C19484 * C154002 + C19485 * C153648) * C47633 +
            (C58733 * C154002 + (C19524 + C19525) * C153648) * C154074) *
               C153775 -
           (C58747 * C154074 + (C12477 * C153648 + C19483 * C154002) * C47633 +
            ((C11505 + C11504) * C153648 + (C11503 + C11502) * C154002) *
                C47632) *
               C2086) *
              C153695 * C1282 +
          (((C11512 * C154002 + C11513 * C153648) * C47632 +
            (C18855 * C154002 + C20107 * C153648) * C47633 +
            (C19485 * C154002 + (C12070 + C12071) * C153648) * C154074) *
               C2086 -
           (((C11439 * C8574 - C11440 * C8573 - C11439 * C8575 +
              C153855 * C8576 + C11437 * C2303 - C11438 * C2297 -
              C11437 * C2304 + C154035 * C2312) *
                 C153648 +
             (C19525 + C19524) * C154002) *
                C154074 +
            ((C12071 + C12070) * C153648 + C19473 * C154002) * C47633 +
            (C12476 * C153648 + C12477 * C154002) * C47632) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C154002 +
             (C11502 + C11503) * C153648) *
                C47632 +
            ((C19518 + C19519) * C154002 + C19472 * C153648) * C47633 +
            C58748 * C154074) *
               C2086 -
           ((C58732 * C153648 + (C23094 + C23093) * C154002) * C154074 +
            (C19474 * C153648 + (C19520 + C19521) * C154002) * C47633 +
            (C19483 * C153648 + (C19519 + C19518) * C154002) * C47632) *
               C153775) *
              C332 +
          ((((C20533 + C20534) * C154002 + C20502 * C153648) * C47632 +
            ((C21325 + C21326) * C154002 + C59719 * C153648) * C47633 +
            ((C60525 + C60526) * C154002 + (C59733 + C59734) * C153648) *
                C154074) *
               C153775 -
           (C60524 * C154074 +
            (C20520 * C153648 + (C20534 + C20533) * C154002) * C47633 +
            ((C11786 + C11787) * C153648 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C154002) *
                C47632) *
               C2086) *
              C333 +
          ((((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
              C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
              C153855 * C1390) *
                 C154002 +
             (C11788 + C11789) * C153648) *
                C47632 +
            ((C22305 + C22306) * C154002 + (C19170 + C19171) * C153648) *
                C47633 +
            ((C61505 + C61506) * C154002 + (C58438 + C58439) * C153648) *
                C154074) *
               C2086 -
           (((C11439 * C32003 - C11440 * C32002 - C11439 * C32004 +
              C153855 * C32005 + C11437 * C6373 - C11438 * C6365 -
              C11437 * C6374 + C154035 * C6383) *
                 C153648 +
             (C11439 * C30186 - C11440 * C30183 - C11439 * C30187 +
              C153855 * C30189 + C11437 * C6377 - C11438 * C6367 -
              C11437 * C6378 + C154035 * C6385) *
                 C154002) *
                C154074 +
            ((C58439 + C58438) * C153648 + (C61506 + C61505) * C154002) *
                C47633 +
            ((C19171 + C19170) * C153648 + (C22306 + C22305) * C154002) *
                C47632) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[165] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C153638 * C154037 +
            (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
               C153711 * C154021 -
           ((C34929 * C5776 - C34930 * C5771 - C34929 * C5777 +
             C154044 * C5780 + C34927 * C4383 - C34928 * C4379 -
             C34927 * C4384 + C34919 * C4391 + C34925 * C1957 - C34926 * C1948 -
             C34925 * C1958 + C34918 * C1963 + C34923 * C1111 - C34924 * C1105 -
             C34923 * C1112 + C34917 * C1123) *
                C153638 * C153897 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C153638 * C154037) *
               C153711 * C153747) *
              C154090 +
          (((C35261 + C35260 + C35259 + C35258) * C153638 * C154037 +
            (C36242 + C36243 + C36244 + C36245) * C153638 * C153897) *
               C153711 * C153747 -
           ((C35508 + C35509 + C35510 + C35511) * C153638 * C153897 +
            (C35007 + C35006 + C35005 + C35004) * C153638 * C154037) *
               C153711 * C154021) *
              C154091 +
          (((C35011 + C35010 + C35009 + C35008) * C153638 * C154037 +
            (C35956 + C35957 + C35958 + C35959) * C153638 * C153897) *
               C153711 * C154021 -
           ((C34929 * C5772 - C34930 * C5769 - C34929 * C5773 +
             C154044 * C5778 + C34927 * C4387 - C34928 * C4381 -
             C34927 * C4388 + C34919 * C4393 + C34925 * C1953 - C34926 * C1946 -
             C34925 * C1954 + C34918 * C1961 + C34923 * C1115 - C34924 * C1107 -
             C34923 * C1116 + C34917 * C1125) *
                C153638 * C153897 +
            (C35737 + C35736 + C35735 + C35734) * C153638 * C154037) *
               C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C2874 +
             (C11502 + C11503) * C2875 + C11512 * C154058) *
                C154037 +
            ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
                C153897) *
               C153711 * C154021 -
           ((C19816 * C154058 + (C12787 + C12786) * C2875 +
             (C11439 * C1957 - C11440 * C1948 - C11439 * C1958 +
              C153855 * C1963 + C11437 * C1111 - C11438 * C1105 -
              C11437 * C1112 + C154035 * C1123) *
                 C2874) *
                C153897 +
            (C12267 * C154058 + (C11786 + C11787) * C2875 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C2874) *
                C154037) *
               C153711 * C153747) *
              C154090 +
          ((((C11787 + C11786) * C2874 + (C11785 + C11784) * C2875 +
             (C11783 + C11782) * C154058) *
                C154037 +
            ((C12786 + C12787) * C2874 + (C12788 + C12789) * C2875 +
             (C12790 + C12791) * C154058) *
                C153897) *
               C153711 * C153747 -
           ((C12476 * C154058 + C12477 * C2875 + C19483 * C2874) * C153897 +
            (C11515 * C154058 + (C11505 + C11504) * C2875 +
             (C11503 + C11502) * C2874) *
                C154037) *
               C153711 * C154021) *
              C154091 +
          (((C11512 * C2874 + C11513 * C2875 + (C11509 + C11508) * C154058) *
                C154037 +
            (C18855 * C2874 + (C12061 + C12060) * C2875 +
             (C12490 + C12491) * C154058) *
                C153897) *
               C153711 * C154021 -
           (((C11439 * C1949 - C11440 * C1944 - C11439 * C1950 +
              C153855 * C1959 + C11437 * C1119 - C11438 * C1109 -
              C11437 * C1120 + C154035 * C1127) *
                 C154058 +
             (C12791 + C12790) * C2875 + C19816 * C2874) *
                C153897 +
            ((C12281 + C12280) * C154058 + C12266 * C2875 + C12267 * C2874) *
                C154037) *
               C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C153638 * C63394 +
            (C19518 + C19519) * C153638 * C63395 + C67338 * C63396 +
            C67342 * C154051) *
               C153711 * C154021 -
           ((C60526 + C60525) * C153638 * C154051 + C60518 * C153638 * C63396 +
            (C20534 + C20533) * C153638 * C63395 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C153638 * C63394) *
               C153711 * C153747) *
              C154090 +
          (((C11787 + C11786) * C153638 * C63394 + C20502 * C153638 * C63395 +
            C59719 * C153638 * C63396 + (C59733 + C59734) * C153638 * C154051) *
               C153711 * C153747 -
           (C67340 * C154051 + C67341 * C63396 + C19483 * C153638 * C63395 +
            (C11503 + C11502) * C153638 * C63394) *
               C153711 * C154021) *
              C154091 +
          ((C11512 * C153638 * C63394 + C18855 * C153638 * C63395 +
            C19485 * C153638 * C63396 + (C19524 + C19525) * C153638 * C154051) *
               C153711 * C154021 -
           ((C11439 * C6369 - C11440 * C6363 - C11439 * C6370 +
             C153855 * C6381 + C11437 * C6371 - C11438 * C6364 -
             C11437 * C6372 + C154035 * C6382) *
                C153638 * C154051 +
            (C20538 + C20537) * C153638 * C63396 + C19816 * C153638 * C63395 +
            C12267 * C153638 * C63394) *
               C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q));
    d2ee[166] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
              C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
              C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
              C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
              C154044 * C1390) *
                 C153638 * C154037 +
             (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
                C154022 -
            ((C44397 + C44398 + C44399 + C44400) * C153638 * C153897 +
             (C44396 + C44395 + C44394 + C44393) * C153638 * C154037) *
                C153775) *
               C154021 +
           (((C45071 + C45072 + C45073 + C45074) * C153638 * C154037 +
             (C34923 * C1526 - C34924 * C1517 - C34923 * C1527 +
              C34917 * C1532 + C34925 * C3511 - C34926 * C3507 -
              C34925 * C3512 + C34918 * C3519 + C34927 * C5038 -
              C34928 * C5033 - C34927 * C5039 + C34919 * C5042 +
              C34929 * C28692 - C34930 * C28690 - C34929 * C28693 +
              C154044 * C28696) *
                 C153638 * C153897) *
                C153775 -
            ((C45074 + C45073 + C45072 + C45071) * C153638 * C153897 +
             (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
              C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
              C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
              C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
              C34923 * C358 + C34917 * C377) *
                 C153638 * C154037) *
                C154022) *
               C153747) *
              C335 +
          ((((C35511 + C35510 + C35509 + C35508) * C153638 * C154037 +
             (C35512 + C35513 + C35514 + C35515) * C153638 * C153897) *
                C153775 -
            ((C35508 + C35509 + C35510 + C35511) * C153638 * C153897 +
             (C35007 + C35006 + C35005 + C35004) * C153638 * C154037) *
                C154022) *
               C154021 +
           (((C35261 + C35260 + C35259 + C35258) * C153638 * C154037 +
             (C36242 + C36243 + C36244 + C36245) * C153638 * C153897) *
                C154022 -
            ((C34929 * C28694 - C34930 * C28691 - C34929 * C28695 +
              C154044 * C28697 + C34927 * C5036 - C34928 * C5032 -
              C34927 * C5037 + C34919 * C5041 + C34925 * C3513 -
              C34926 * C3508 - C34925 * C3514 + C34918 * C3520 +
              C34923 * C1524 - C34924 * C1516 - C34923 * C1525 +
              C34917 * C1531) *
                 C153638 * C153897 +
             (C36245 + C36244 + C36243 + C36242) * C153638 * C154037) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
               C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                  C2874 +
              (C11502 + C11503) * C2875 + C11512 * C154058) *
                 C154037 +
             ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
                 C153897) *
                C154022 -
            ((C19473 * C154058 + C19474 * C2875 + (C19520 + C19521) * C2874) *
                 C153897 +
             (C12477 * C154058 + C19483 * C2875 + (C19519 + C19518) * C2874) *
                 C154037) *
                C153775) *
               C154021 +
           ((((C20533 + C20534) * C2874 + C20502 * C2875 + C20503 * C154058) *
                 C154037 +
             ((C11437 * C1526 - C11438 * C1517 - C11437 * C1527 +
               C154035 * C1532 + C11439 * C3511 - C11440 * C3507 -
               C11439 * C3512 + C153855 * C3519) *
                  C2874 +
              (C20535 + C20536) * C2875 + (C20537 + C20538) * C154058) *
                 C153897) *
                C153775 -
            ((C19816 * C154058 + C20520 * C2875 + (C20534 + C20533) * C2874) *
                 C153897 +
             (C12267 * C154058 + (C11786 + C11787) * C2875 +
              (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
               C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                  C2874) *
                 C154037) *
                C154022) *
               C153747) *
              C335 +
          ((((C19472 * C2874 + C18855 * C2875 + C20107 * C154058) * C154037 +
             (C19484 * C2874 + C19485 * C2875 + (C12070 + C12071) * C154058) *
                 C153897) *
                C153775 -
            ((C12476 * C154058 + C12477 * C2875 + C19483 * C2874) * C153897 +
             (C11515 * C154058 + (C11505 + C11504) * C2875 +
              (C11503 + C11502) * C2874) *
                 C154037) *
                C154022) *
               C154021 +
           ((((C11787 + C11786) * C2874 + (C11785 + C11784) * C2875 +
              (C11783 + C11782) * C154058) *
                 C154037 +
             (C20502 * C2874 + C20503 * C2875 + (C12790 + C12791) * C154058) *
                 C153897) *
                C154022 -
            (((C11439 * C3517 - C11440 * C3510 - C11439 * C3518 +
               C153855 * C3522 + C11437 * C1520 - C11438 * C1514 -
               C11437 * C1521 + C154035 * C1529) *
                  C154058 +
              (C20538 + C20537) * C2875 + (C20536 + C20535) * C2874) *
                 C153897 +
             ((C12791 + C12790) * C154058 + C19816 * C2875 + C20520 * C2874) *
                 C154037) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C153638 * C63394 +
             (C19518 + C19519) * C153638 * C63395 + C67338 * C63396 +
             C67342 * C154051) *
                C154022 -
            ((C62298 + C62297) * C153638 * C154051 + C62282 * C153638 * C63396 +
             (C19520 + C19521) * C153638 * C63395 +
             (C19519 + C19518) * C153638 * C63394) *
                C153775) *
               C154021 +
           (((C20533 + C20534) * C153638 * C63394 +
             (C21325 + C21326) * C153638 * C63395 +
             (C60525 + C60526) * C153638 * C63396 +
             (C11437 * C9206 - C11438 * C9201 - C11437 * C9207 +
              C154035 * C9210 + C11439 * C31180 - C11440 * C31178 -
              C11439 * C31181 + C153855 * C31184) *
                 C153638 * C154051) *
                C153775 -
            ((C60526 + C60525) * C153638 * C154051 + C60518 * C153638 * C63396 +
             (C20534 + C20533) * C153638 * C63395 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C153638 * C63394) *
                C154022) *
               C153747) *
              C335 +
          (((C19472 * C153638 * C63394 + C19484 * C153638 * C63395 +
             C58733 * C153638 * C63396 +
             (C58751 + C58752) * C153638 * C154051) *
                C153775 -
            (C67340 * C154051 + C67341 * C63396 + C19483 * C153638 * C63395 +
             (C11503 + C11502) * C153638 * C63394) *
                C154022) *
               C154021 +
           (((C11787 + C11786) * C153638 * C63394 + C20502 * C153638 * C63395 +
             C59719 * C153638 * C63396 +
             (C59733 + C59734) * C153638 * C154051) *
                C154022 -
            ((C11439 * C31182 - C11440 * C31179 - C11439 * C31183 +
              C153855 * C31185 + C11437 * C9204 - C11438 * C9200 -
              C11437 * C9205 + C154035 * C9209) *
                 C153638 * C154051 +
             (C59734 + C59733) * C153638 * C63396 + C59728 * C153638 * C63395 +
             C20520 * C153638 * C63394) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[167] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C11437 * C144 - C11438 * C136 - C11437 * C145 +
                 C154035 * C160 + C11439 * C357 - C11440 * C341 -
                 C11439 * C358 + C153855 * C377) *
                    C2874 +
                (C11502 + C11503) * C2875 + C11512 * C154058) *
                   C154037 +
               ((C11437 * C586 - C11438 * C570 - C11437 * C587 +
                 C154035 * C606 + C11439 * C1111 - C11440 * C1105 -
                 C11439 * C1112 + C153855 * C1123) *
                    C2874 +
                (C12065 + C12064) * C2875 + C18855 * C154058) *
                   C153897) *
                  C153711 * C153695 * C130 -
              ((C12476 * C154058 + C12477 * C2875 + (C12064 + C12065) * C2874) *
                   C153897 +
               (C11515 * C154058 + (C11505 + C11504) * C2875 +
                (C11503 + C11502) * C2874) *
                   C154037) *
                  C153711 * C153695 * C131 +
              ((C11512 * C2874 + C11513 * C2875 + (C11509 + C11508) * C154058) *
                   C154037 +
               (C18855 * C2874 + (C12061 + C12060) * C2875 +
                (C12490 + C12491) * C154058) *
                   C153897) *
                  C153711 * C153695 * C132 -
              (((C11439 * C1121 - C11440 * C1110 - C11439 * C1122 +
                 C153855 * C1128 + C11437 * C598 - C11438 * C576 -
                 C11437 * C599 + C154035 * C612) *
                    C154058 +
                (C12491 + C12490) * C2875 + C12476 * C2874) *
                   C153897 +
               ((C11511 + C11510) * C154058 + C11514 * C2875 + C11515 * C2874) *
                   C154037) *
                  C153711 * C153695 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C11437 * C144 - C11438 * C136 - C11437 * C145 +
                  C154035 * C160 + C11439 * C357 - C11440 * C341 -
                  C11439 * C358 + C153855 * C377) *
                     C2874 +
                 (C11502 + C11503) * C2875 + C11512 * C154058) *
                    C154037 +
                ((C11437 * C586 - C11438 * C570 - C11437 * C587 +
                  C154035 * C606 + C11439 * C1111 - C11440 * C1105 -
                  C11439 * C1112 + C153855 * C1123) *
                     C2874 +
                 (C12065 + C12064) * C2875 + C18855 * C154058) *
                    C153897) *
                   C153711 * C332 -
               (((C12789 + C12788) * C154058 + (C12787 + C12786) * C2875 +
                 (C11439 * C1957 - C11440 * C1948 - C11439 * C1958 +
                  C153855 * C1963 + C11437 * C1111 - C11438 * C1105 -
                  C11437 * C1112 + C154035 * C1123) *
                     C2874) *
                    C153897 +
                (C12267 * C154058 + (C11786 + C11787) * C2875 +
                 (C11439 * C359 - C11440 * C342 - C11439 * C360 +
                  C153855 * C378 + C11437 * C357 - C11438 * C341 -
                  C11437 * C358 + C154035 * C377) *
                     C2874) *
                    C154037) *
                   C153711 * C333 +
               (((C11437 * C359 - C11438 * C342 - C11437 * C360 +
                  C154035 * C378 + C11439 * C1384 - C11440 * C1375 -
                  C11439 * C1385 + C153855 * C1390) *
                     C2874 +
                 (C11788 + C11789) * C2875 + (C11790 + C11791) * C154058) *
                    C154037 +
                ((C11437 * C1957 - C11438 * C1948 - C11437 * C1958 +
                  C154035 * C1963 + C11439 * C4383 - C11440 * C4379 -
                  C11439 * C4384 + C153855 * C4391) *
                     C2874 +
                 (C19170 + C19171) * C2875 + (C19172 + C19173) * C154058) *
                    C153897) *
                   C153711 * C334) *
                  C335 +
              ((((C11787 + C11786) * C2874 + (C11785 + C11784) * C2875 +
                 (C11783 + C11782) * C154058) *
                    C154037 +
                ((C12786 + C12787) * C2874 + (C12788 + C12789) * C2875 +
                 (C12790 + C12791) * C154058) *
                    C153897) *
                   C153711 * C333 -
               ((C12476 * C154058 + C12477 * C2875 +
                 (C12064 + C12065) * C2874) *
                    C153897 +
                (C11515 * C154058 + (C11505 + C11504) * C2875 +
                 (C11503 + C11502) * C2874) *
                    C154037) *
                   C153711 * C332 -
               (((C11439 * C4389 - C11440 * C4382 - C11439 * C4390 +
                  C153855 * C4394 + C11437 * C1951 - C11438 * C1945 -
                  C11437 * C1952 + C154035 * C1960) *
                     C154058 +
                 (C19173 + C19172) * C2875 + (C19171 + C19170) * C2874) *
                    C153897 +
                ((C11793 + C11792) * C154058 + (C11791 + C11790) * C2875 +
                 (C11789 + C11788) * C2874) *
                    C154037) *
                   C153711 * C334) *
                  C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C2874 +
             (C11502 + C11503) * C2875 + C11512 * C154058) *
                C154037 +
            ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
                C153897) *
               C563 -
           ((C19473 * C154058 + C19474 * C2875 + (C19520 + C19521) * C2874) *
                C153897 +
            (C12477 * C154058 + C19483 * C2875 + (C19519 + C19518) * C2874) *
                C154037) *
               C564 +
           (((C19521 + C19520) * C2874 + C19484 * C2875 + C19485 * C154058) *
                C154037 +
            ((C11437 * C2309 - C11438 * C2300 - C11437 * C2310 +
              C154035 * C2315 + C11439 * C6379 - C11440 * C6368 -
              C11439 * C6380 + C153855 * C6386) *
                 C2874 +
             (C19522 + C19523) * C2875 + (C19524 + C19525) * C154058) *
                C153897) *
               C565) *
              C153695 * C335 +
          (((C19472 * C2874 + C18855 * C2875 + (C12061 + C12060) * C154058) *
                C154037 +
            (C19484 * C2874 + C19485 * C2875 + (C12070 + C12071) * C154058) *
                C153897) *
               C564 -
           ((C12476 * C154058 + C12477 * C2875 + C19483 * C2874) * C153897 +
            (C11515 * C154058 + (C11505 + C11504) * C2875 +
             (C11503 + C11502) * C2874) *
                C154037) *
               C563 -
           (((C11439 * C8574 - C11440 * C8573 - C11439 * C8575 +
              C153855 * C8576 + C11437 * C2303 - C11438 * C2297 -
              C11437 * C2304 + C154035 * C2312) *
                 C154058 +
             (C19525 + C19524) * C2875 + (C19523 + C19522) * C2874) *
                C153897 +
            ((C12071 + C12070) * C154058 + C19473 * C2875 + C19474 * C2874) *
                C154037) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
            C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
            C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
            C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
            C154044 * C1390) *
               C153638 * C154037 +
           (C34923 * C586 - C34924 * C570 - C34923 * C587 + C34917 * C606 +
            C34925 * C1111 - C34926 * C1105 - C34925 * C1112 + C34918 * C1123 +
            C34927 * C1957 - C34928 * C1948 - C34927 * C1958 + C34919 * C1963 +
            C34929 * C4383 - C34930 * C4379 - C34929 * C4384 +
            C154044 * C4391) *
               C153638 * C153897) *
              C153711 * C153695 * C130 -
          ((C35508 + C35509 + C35510 + C35511) * C153638 * C153897 +
           (C35007 + C35006 + C35005 + C35004) * C153638 * C154037) *
              C153711 * C153695 * C131 +
          ((C35011 + C35010 + C35009 + C35008) * C153638 * C154037 +
           (C35956 + C35957 + C35958 + C35959) * C153638 * C153897) *
              C153711 * C153695 * C132 -
          ((C34929 * C4389 - C34930 * C4382 - C34929 * C4390 + C154044 * C4394 +
            C34927 * C1951 - C34928 * C1945 - C34927 * C1952 + C34919 * C1960 +
            C34925 * C1117 - C34926 * C1108 - C34925 * C1118 + C34918 * C1126 +
            C34923 * C580 - C34924 * C567 - C34923 * C581 + C34917 * C603) *
               C153638 * C153897 +
           (C35015 + C35014 + C35013 + C35012) * C153638 * C154037) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C153638 * C154037 +
            (C34923 * C586 - C34924 * C570 - C34923 * C587 + C34917 * C606 +
             C34925 * C1111 - C34926 * C1105 - C34925 * C1112 + C34918 * C1123 +
             C34927 * C1957 - C34928 * C1948 - C34927 * C1958 + C34919 * C1963 +
             C34929 * C4383 - C34930 * C4379 - C34929 * C4384 +
             C154044 * C4391) *
                C153638 * C153897) *
               C153711 * C332 -
           ((C34929 * C5776 - C34930 * C5771 - C34929 * C5777 +
             C154044 * C5780 + C34927 * C4383 - C34928 * C4379 -
             C34927 * C4384 + C34919 * C4391 + C34925 * C1957 - C34926 * C1948 -
             C34925 * C1958 + C34918 * C1963 + C34923 * C1111 - C34924 * C1105 -
             C34923 * C1112 + C34917 * C1123) *
                C153638 * C153897 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C153638 * C154037) *
               C153711 * C333 +
           ((C34923 * C359 - C34924 * C342 - C34923 * C360 + C34917 * C378 +
             C34925 * C1384 - C34926 * C1375 - C34925 * C1385 + C34918 * C1390 +
             C34927 * C3193 - C34928 * C3189 - C34927 * C3194 + C34919 * C3201 +
             C34929 * C4808 - C34930 * C4803 - C34929 * C4809 +
             C154044 * C4812) *
                C153638 * C154037 +
            (C34923 * C1957 - C34924 * C1948 - C34923 * C1958 + C34917 * C1963 +
             C34925 * C4383 - C34926 * C4379 - C34925 * C4384 + C34918 * C4391 +
             C34927 * C5776 - C34928 * C5771 - C34927 * C5777 + C34919 * C5780 +
             C34929 * C29106 - C34930 * C29104 - C34929 * C29107 +
             C154044 * C29110) *
                C153638 * C153897) *
               C153711 * C334) *
              C335 +
          (((C35261 + C35260 + C35259 + C35258) * C153638 * C154037 +
            (C36242 + C36243 + C36244 + C36245) * C153638 * C153897) *
               C153711 * C333 -
           ((C35508 + C35509 + C35510 + C35511) * C153638 * C153897 +
            (C35007 + C35006 + C35005 + C35004) * C153638 * C154037) *
               C153711 * C332 -
           ((C34929 * C29108 - C34930 * C29105 - C34929 * C29109 +
             C154044 * C29111 + C34927 * C5774 - C34928 * C5770 -
             C34927 * C5775 + C34919 * C5779 + C34925 * C4385 - C34926 * C4380 -
             C34925 * C4386 + C34918 * C4392 + C34923 * C1955 - C34924 * C1947 -
             C34923 * C1956 + C34917 * C1962) *
                C153638 * C153897 +
            (C35265 + C35264 + C35263 + C35262) * C153638 * C154037) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C153638 * C154037 +
            (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
               C563 -
           ((C44397 + C44398 + C44399 + C44400) * C153638 * C153897 +
            (C44396 + C44395 + C44394 + C44393) * C153638 * C154037) *
               C564 +
           ((C44400 + C44399 + C44398 + C44397) * C153638 * C154037 +
            (C34923 * C2309 - C34924 * C2300 - C34923 * C2310 + C34917 * C2315 +
             C34925 * C6379 - C34926 * C6368 - C34925 * C6380 + C34918 * C6386 +
             C34927 * C6377 - C34928 * C6367 - C34927 * C6378 + C34919 * C6385 +
             C34929 * C30186 - C34930 * C30183 - C34929 * C30187 +
             C154044 * C30189) *
                C153638 * C153897) *
               C565) *
              C153695 * C335 +
          (((C35511 + C35510 + C35509 + C35508) * C153638 * C154037 +
            (C35512 + C35513 + C35514 + C35515) * C153638 * C153897) *
               C564 -
           ((C35508 + C35509 + C35510 + C35511) * C153638 * C153897 +
            (C35007 + C35006 + C35005 + C35004) * C153638 * C154037) *
               C563 -
           ((C34929 * C32003 - C34930 * C32002 - C34929 * C32004 +
             C154044 * C32005 + C34927 * C6373 - C34928 * C6365 -
             C34927 * C6374 + C34919 * C6383 + C34925 * C6375 - C34926 * C6366 -
             C34925 * C6376 + C34918 * C6384 + C34923 * C2307 - C34924 * C2299 -
             C34923 * C2308 + C34917 * C2314) *
                C153638 * C153897 +
            (C35515 + C35514 + C35513 + C35512) * C153638 * C154037) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
            C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
               C153638 * C63394 +
           (C19518 + C19519) * C153638 * C63395 + C58730 * C153638 * C63396 +
           (C23093 + C23094) * C153638 * C154051) *
              C153711 * C153695 * C130 -
          (C58732 * C153638 * C154051 + C19474 * C153638 * C63396 +
           C19483 * C153638 * C63395 + (C11503 + C11502) * C153638 * C63394) *
              C153711 * C153695 * C131 +
          (C11512 * C153638 * C63394 + C18855 * C153638 * C63395 +
           C19485 * C153638 * C63396 + (C19524 + C19525) * C153638 * C154051) *
              C153711 * C153695 * C132 -
          ((C11439 * C8574 - C11440 * C8573 - C11439 * C8575 + C153855 * C8576 +
            C11437 * C2303 - C11438 * C2297 - C11437 * C2304 +
            C154035 * C2312) *
               C153638 * C154051 +
           (C12071 + C12070) * C153638 * C63396 + C12476 * C153638 * C63395 +
           C11515 * C153638 * C63394) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C153638 * C63394 +
            (C19518 + C19519) * C153638 * C63395 + C58730 * C153638 * C63396 +
            (C23093 + C23094) * C153638 * C154051) *
               C153711 * C332 -
           ((C60526 + C60525) * C153638 * C154051 + C60518 * C153638 * C63396 +
            (C20534 + C20533) * C153638 * C63395 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C153638 * C63394) *
               C153711 * C333 +
           ((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
             C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
             C153855 * C1390) *
                C153638 * C63394 +
            (C22305 + C22306) * C153638 * C63395 +
            (C61505 + C61506) * C153638 * C63396 +
            (C11437 * C6377 - C11438 * C6367 - C11437 * C6378 +
             C154035 * C6385 + C11439 * C30186 - C11440 * C30183 -
             C11439 * C30187 + C153855 * C30189) *
                C153638 * C154051) *
               C153711 * C334) *
              C335 +
          (((C11787 + C11786) * C153638 * C63394 + C20502 * C153638 * C63395 +
            C59719 * C153638 * C63396 + (C59733 + C59734) * C153638 * C154051) *
               C153711 * C333 -
           (C58732 * C153638 * C154051 + C19474 * C153638 * C63396 +
            C19483 * C153638 * C63395 + (C11503 + C11502) * C153638 * C63394) *
               C153711 * C332 -
           ((C11439 * C32003 - C11440 * C32002 - C11439 * C32004 +
             C153855 * C32005 + C11437 * C6373 - C11438 * C6365 -
             C11437 * C6374 + C154035 * C6383) *
                C153638 * C154051 +
            (C58439 + C58438) * C153638 * C63396 +
            (C19171 + C19170) * C153638 * C63395 +
            (C11789 + C11788) * C153638 * C63394) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C153638 * C63394 +
            (C19518 + C19519) * C153638 * C63395 + C67338 * C63396 +
            C67342 * C154051) *
               C563 -
           ((C62298 + C62297) * C153638 * C154051 + C62282 * C153638 * C63396 +
            (C19520 + C19521) * C153638 * C63395 +
            (C19519 + C19518) * C153638 * C63394) *
               C564 +
           (C67338 * C63394 + C67342 * C63395 +
            (C62297 + C62298) * C153638 * C63396 +
            (C11437 * C10558 - C11438 * C10553 - C11437 * C10559 +
             C154035 * C10562 + C11439 * C34033 - C11440 * C34030 -
             C11439 * C34034 + C153855 * C34036) *
                C153638 * C154051) *
               C565) *
              C153695 * C335 +
          ((C19472 * C153638 * C63394 + C19484 * C153638 * C63395 +
            C58733 * C153638 * C63396 + (C58751 + C58752) * C153638 * C154051) *
               C564 -
           (C67340 * C154051 + C67341 * C63396 + C19483 * C153638 * C63395 +
            (C11503 + C11502) * C153638 * C63394) *
               C563 -
           ((C11439 * C56410 - C11440 * C56409 - C11439 * C56411 +
             C153855 * C56412 + C11437 * C10556 - C11438 * C10552 -
             C11437 * C10557 + C154035 * C10561) *
                C153638 * C154051 +
            (C58752 + C58751) * C153638 * C63396 + C67340 * C63395 +
            C67341 * C63394) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[168] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C153638 * C154037 +
            (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
               C154022 -
           ((C44397 + C44398 + C44399 + C44400) * C153638 * C153897 +
            (C44396 + C44395 + C44394 + C44393) * C153638 * C154037) *
               C153775) *
              C153695 * C154090 +
          (((C35511 + C35510 + C35509 + C35508) * C153638 * C154037 +
            (C35512 + C35513 + C35514 + C35515) * C153638 * C153897) *
               C153775 -
           ((C35508 + C35509 + C35510 + C35511) * C153638 * C153897 +
            (C35007 + C35006 + C35005 + C35004) * C153638 * C154037) *
               C154022) *
              C153695 * C154091 +
          (((C35011 + C35010 + C35009 + C35008) * C153638 * C154037 +
            (C35956 + C35957 + C35958 + C35959) * C153638 * C153897) *
               C154022 -
           ((C34929 * C5034 - C34930 * C5031 - C34929 * C5035 +
             C154044 * C5040 + C34927 * C3515 - C34928 * C3509 -
             C34927 * C3516 + C34919 * C3521 + C34925 * C1522 - C34926 * C1515 -
             C34925 * C1523 + C34918 * C1530 + C34923 * C592 - C34924 * C573 -
             C34923 * C593 + C34917 * C609) *
                C153638 * C153897 +
            (C35959 + C35958 + C35957 + C35956) * C153638 * C154037) *
               C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C2874 +
             (C11502 + C11503) * C2875 + C11512 * C154058) *
                C154037 +
            ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
                C153897) *
               C154022 -
           ((C19473 * C154058 + C19474 * C2875 + (C19520 + C19521) * C2874) *
                C153897 +
            (C12477 * C154058 + C19483 * C2875 + (C19519 + C19518) * C2874) *
                C154037) *
               C153775) *
              C153695 * C154090 +
          (((C19472 * C2874 + C18855 * C2875 + C20107 * C154058) * C154037 +
            (C19484 * C2874 + C19485 * C2875 + (C12070 + C12071) * C154058) *
                C153897) *
               C153775 -
           ((C12476 * C154058 + C12477 * C2875 + C19483 * C2874) * C153897 +
            (C11515 * C154058 + (C11505 + C11504) * C2875 +
             (C11503 + C11502) * C2874) *
                C154037) *
               C154022) *
              C153695 * C154091 +
          (((C11512 * C2874 + C11513 * C2875 + (C11509 + C11508) * C154058) *
                C154037 +
            (C18855 * C2874 + C20107 * C2875 + (C12490 + C12491) * C154058) *
                C153897) *
               C154022 -
           (((C11439 * C1518 - C11440 * C1513 - C11439 * C1519 +
              C153855 * C1528 + C11437 * C596 - C11438 * C575 - C11437 * C597 +
              C154035 * C611) *
                 C154058 +
             (C12071 + C12070) * C2875 + C19473 * C2874) *
                C153897 +
            ((C12491 + C12490) * C154058 + C12476 * C2875 + C12477 * C2874) *
                C154037) *
               C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C153638 * C63394 +
            (C19518 + C19519) * C153638 * C63395 + C67338 * C63396 +
            C67342 * C154051) *
               C154022 -
           ((C62298 + C62297) * C153638 * C154051 + C62282 * C153638 * C63396 +
            (C19520 + C19521) * C153638 * C63395 +
            (C19519 + C19518) * C153638 * C63394) *
               C153775) *
              C153695 * C154090 +
          ((C19472 * C153638 * C63394 + C19484 * C153638 * C63395 +
            C58733 * C153638 * C63396 + (C58751 + C58752) * C153638 * C154051) *
               C153775 -
           (C67340 * C154051 + C67341 * C63396 + C19483 * C153638 * C63395 +
            (C11503 + C11502) * C153638 * C63394) *
               C154022) *
              C153695 * C154091 +
          ((C11512 * C153638 * C63394 + C18855 * C153638 * C63395 +
            C19485 * C153638 * C63396 + (C19524 + C19525) * C153638 * C154051) *
               C154022 -
           ((C11439 * C9202 - C11440 * C9199 - C11439 * C9203 +
             C153855 * C9208 + C11437 * C7748 - C11438 * C7742 -
             C11437 * C7749 + C154035 * C7754) *
                C153638 * C154051 +
            (C19525 + C19524) * C153638 * C63396 + C19473 * C153638 * C63395 +
            C12477 * C153638 * C63394) *
               C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q));
    d2ee[169] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C2874 +
             (C11502 + C11503) * C2875 + C11512 * C154058) *
                C154037 +
            ((C11437 * C586 - C11438 * C570 - C11437 * C587 + C154035 * C606 +
              C11439 * C1111 - C11440 * C1105 - C11439 * C1112 +
              C153855 * C1123) *
                 C2874 +
             (C12065 + C12064) * C2875 + C18855 * C154058) *
                C153897) *
               C153711 * C332 -
           (((C12789 + C12788) * C154058 + (C12787 + C12786) * C2875 +
             (C11439 * C1957 - C11440 * C1948 - C11439 * C1958 +
              C153855 * C1963 + C11437 * C1111 - C11438 * C1105 -
              C11437 * C1112 + C154035 * C1123) *
                 C2874) *
                C153897 +
            (C12267 * C154058 + (C11786 + C11787) * C2875 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C2874) *
                C154037) *
               C153711 * C333 +
           (((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
              C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
              C153855 * C1390) *
                 C2874 +
             (C11788 + C11789) * C2875 + (C11790 + C11791) * C154058) *
                C154037 +
            ((C11437 * C1957 - C11438 * C1948 - C11437 * C1958 +
              C154035 * C1963 + C11439 * C4383 - C11440 * C4379 -
              C11439 * C4384 + C153855 * C4391) *
                 C2874 +
             (C19170 + C19171) * C2875 + (C19172 + C19173) * C154058) *
                C153897) *
               C153711 * C334) *
              C335 +
          ((((C11787 + C11786) * C2874 + (C11785 + C11784) * C2875 +
             (C11783 + C11782) * C154058) *
                C154037 +
            ((C12786 + C12787) * C2874 + (C12788 + C12789) * C2875 +
             (C12790 + C12791) * C154058) *
                C153897) *
               C153711 * C333 -
           ((C12476 * C154058 + C12477 * C2875 + (C12064 + C12065) * C2874) *
                C153897 +
            (C11515 * C154058 + (C11505 + C11504) * C2875 +
             (C11503 + C11502) * C2874) *
                C154037) *
               C153711 * C332 -
           (((C11439 * C4389 - C11440 * C4382 - C11439 * C4390 +
              C153855 * C4394 + C11437 * C1951 - C11438 * C1945 -
              C11437 * C1952 + C154035 * C1960) *
                 C154058 +
             (C19173 + C19172) * C2875 + (C19171 + C19170) * C2874) *
                C153897 +
            ((C11793 + C11792) * C154058 + (C11791 + C11790) * C2875 +
             (C11789 + C11788) * C2874) *
                C154037) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C2874 +
            (C11502 + C11503) * C2875 + C11512 * C154058) *
               C154037 +
           ((C11437 * C586 - C11438 * C570 - C11437 * C587 + C154035 * C606 +
             C11439 * C1111 - C11440 * C1105 - C11439 * C1112 +
             C153855 * C1123) *
                C2874 +
            (C12065 + C12064) * C2875 + C18855 * C154058) *
               C153897) *
              C153711 * C153695 * C130 -
          ((C12476 * C154058 + C12477 * C2875 + (C12064 + C12065) * C2874) *
               C153897 +
           (C11515 * C154058 + (C11505 + C11504) * C2875 +
            (C11503 + C11502) * C2874) *
               C154037) *
              C153711 * C153695 * C131 +
          ((C11512 * C2874 + C11513 * C2875 + (C11509 + C11508) * C154058) *
               C154037 +
           (C18855 * C2874 + (C12061 + C12060) * C2875 +
            (C12490 + C12491) * C154058) *
               C153897) *
              C153711 * C153695 * C132 -
          (((C11439 * C1121 - C11440 * C1110 - C11439 * C1122 +
             C153855 * C1128 + C11437 * C598 - C11438 * C576 - C11437 * C599 +
             C154035 * C612) *
                C154058 +
            (C12491 + C12490) * C2875 + C12476 * C2874) *
               C153897 +
           ((C11511 + C11510) * C154058 + C11514 * C2875 + C11515 * C2874) *
               C154037) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
            C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
            C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
            C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
            C154044 * C1390) *
               C153638 * C154037 +
           (C34923 * C586 - C34924 * C570 - C34923 * C587 + C34917 * C606 +
            C34925 * C1111 - C34926 * C1105 - C34925 * C1112 + C34918 * C1123 +
            C34927 * C1957 - C34928 * C1948 - C34927 * C1958 + C34919 * C1963 +
            C34929 * C4383 - C34930 * C4379 - C34929 * C4384 +
            C154044 * C4391) *
               C153638 * C153897) *
              C153711 * C153695 * C130 -
          ((C35508 + C35509 + C35510 + C35511) * C153638 * C153897 +
           (C35007 + C35006 + C35005 + C35004) * C153638 * C154037) *
              C153711 * C153695 * C131 +
          ((C35011 + C35010 + C35009 + C35008) * C153638 * C154037 +
           (C35956 + C35957 + C35958 + C35959) * C153638 * C153897) *
              C153711 * C153695 * C132 -
          ((C34929 * C4389 - C34930 * C4382 - C34929 * C4390 + C154044 * C4394 +
            C34927 * C1951 - C34928 * C1945 - C34927 * C1952 + C34919 * C1960 +
            C34925 * C1117 - C34926 * C1108 - C34925 * C1118 + C34918 * C1126 +
            C34923 * C580 - C34924 * C567 - C34923 * C581 + C34917 * C603) *
               C153638 * C153897 +
           (C35015 + C35014 + C35013 + C35012) * C153638 * C154037) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C153638 * C154037 +
            (C34923 * C586 - C34924 * C570 - C34923 * C587 + C34917 * C606 +
             C34925 * C1111 - C34926 * C1105 - C34925 * C1112 + C34918 * C1123 +
             C34927 * C1957 - C34928 * C1948 - C34927 * C1958 + C34919 * C1963 +
             C34929 * C4383 - C34930 * C4379 - C34929 * C4384 +
             C154044 * C4391) *
                C153638 * C153897) *
               C153711 * C332 -
           ((C34929 * C5776 - C34930 * C5771 - C34929 * C5777 +
             C154044 * C5780 + C34927 * C4383 - C34928 * C4379 -
             C34927 * C4384 + C34919 * C4391 + C34925 * C1957 - C34926 * C1948 -
             C34925 * C1958 + C34918 * C1963 + C34923 * C1111 - C34924 * C1105 -
             C34923 * C1112 + C34917 * C1123) *
                C153638 * C153897 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C153638 * C154037) *
               C153711 * C333 +
           ((C34923 * C359 - C34924 * C342 - C34923 * C360 + C34917 * C378 +
             C34925 * C1384 - C34926 * C1375 - C34925 * C1385 + C34918 * C1390 +
             C34927 * C3193 - C34928 * C3189 - C34927 * C3194 + C34919 * C3201 +
             C34929 * C4808 - C34930 * C4803 - C34929 * C4809 +
             C154044 * C4812) *
                C153638 * C154037 +
            (C34923 * C1957 - C34924 * C1948 - C34923 * C1958 + C34917 * C1963 +
             C34925 * C4383 - C34926 * C4379 - C34925 * C4384 + C34918 * C4391 +
             C34927 * C5776 - C34928 * C5771 - C34927 * C5777 + C34919 * C5780 +
             C34929 * C29106 - C34930 * C29104 - C34929 * C29107 +
             C154044 * C29110) *
                C153638 * C153897) *
               C153711 * C334) *
              C335 +
          (((C35261 + C35260 + C35259 + C35258) * C153638 * C154037 +
            (C36242 + C36243 + C36244 + C36245) * C153638 * C153897) *
               C153711 * C333 -
           ((C35508 + C35509 + C35510 + C35511) * C153638 * C153897 +
            (C35007 + C35006 + C35005 + C35004) * C153638 * C154037) *
               C153711 * C332 -
           ((C34929 * C29108 - C34930 * C29105 - C34929 * C29109 +
             C154044 * C29111 + C34927 * C5774 - C34928 * C5770 -
             C34927 * C5775 + C34919 * C5779 + C34925 * C4385 - C34926 * C4380 -
             C34925 * C4386 + C34918 * C4392 + C34923 * C1955 - C34924 * C1947 -
             C34923 * C1956 + C34917 * C1962) *
                C153638 * C153897 +
            (C35265 + C35264 + C35263 + C35262) * C153638 * C154037) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
            C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
               C153638 * C63394 +
           (C19518 + C19519) * C153638 * C63395 + C58730 * C153638 * C63396 +
           (C23093 + C23094) * C153638 * C154051) *
              C153711 * C153695 * C130 -
          (C58732 * C153638 * C154051 + C19474 * C153638 * C63396 +
           C19483 * C153638 * C63395 + (C11503 + C11502) * C153638 * C63394) *
              C153711 * C153695 * C131 +
          (C11512 * C153638 * C63394 + C18855 * C153638 * C63395 +
           C19485 * C153638 * C63396 + (C19524 + C19525) * C153638 * C154051) *
              C153711 * C153695 * C132 -
          ((C11439 * C8574 - C11440 * C8573 - C11439 * C8575 + C153855 * C8576 +
            C11437 * C2303 - C11438 * C2297 - C11437 * C2304 +
            C154035 * C2312) *
               C153638 * C154051 +
           (C12071 + C12070) * C153638 * C63396 + C12476 * C153638 * C63395 +
           C11515 * C153638 * C63394) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C153638 * C63394 +
            (C19518 + C19519) * C153638 * C63395 + C58730 * C153638 * C63396 +
            (C23093 + C23094) * C153638 * C154051) *
               C153711 * C332 -
           ((C60526 + C60525) * C153638 * C154051 + C60518 * C153638 * C63396 +
            (C20534 + C20533) * C153638 * C63395 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C153638 * C63394) *
               C153711 * C333 +
           ((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
             C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
             C153855 * C1390) *
                C153638 * C63394 +
            (C22305 + C22306) * C153638 * C63395 +
            (C61505 + C61506) * C153638 * C63396 +
            (C11437 * C6377 - C11438 * C6367 - C11437 * C6378 +
             C154035 * C6385 + C11439 * C30186 - C11440 * C30183 -
             C11439 * C30187 + C153855 * C30189) *
                C153638 * C154051) *
               C153711 * C334) *
              C335 +
          (((C11787 + C11786) * C153638 * C63394 + C20502 * C153638 * C63395 +
            C59719 * C153638 * C63396 + (C59733 + C59734) * C153638 * C154051) *
               C153711 * C333 -
           (C58732 * C153638 * C154051 + C19474 * C153638 * C63396 +
            C19483 * C153638 * C63395 + (C11503 + C11502) * C153638 * C63394) *
               C153711 * C332 -
           ((C11439 * C32003 - C11440 * C32002 - C11439 * C32004 +
             C153855 * C32005 + C11437 * C6373 - C11438 * C6365 -
             C11437 * C6374 + C154035 * C6383) *
                C153638 * C154051 +
            (C58439 + C58438) * C153638 * C63396 +
            (C19171 + C19170) * C153638 * C63395 +
            (C11789 + C11788) * C153638 * C63394) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[170] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C153638 * C154037 +
            (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
               C153711 * C154092 -
           ((C45074 + C45073 + C45072 + C45071) * C153638 * C153897 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C153638 * C154037) *
               C153711 * C154093 +
           ((C34923 * C359 - C34924 * C342 - C34923 * C360 + C34917 * C378 +
             C34925 * C1384 - C34926 * C1375 - C34925 * C1385 + C34918 * C1390 +
             C34927 * C3193 - C34928 * C3189 - C34927 * C3194 + C34919 * C3201 +
             C34929 * C4808 - C34930 * C4803 - C34929 * C4809 +
             C154044 * C4812) *
                C153638 * C154037 +
            (C34923 * C1957 - C34924 * C1948 - C34923 * C1958 + C34917 * C1963 +
             C34925 * C4383 - C34926 * C4379 - C34925 * C4384 + C34918 * C4391 +
             C34927 * C5776 - C34928 * C5771 - C34927 * C5777 + C34919 * C5780 +
             C34929 * C29106 - C34930 * C29104 - C34929 * C29107 +
             C154044 * C29110) *
                C153638 * C153897) *
               C153711 * C1657) *
              C154013 +
          (((C35261 + C35260 + C35259 + C35258) * C153638 * C154037 +
            (C36242 + C36243 + C36244 + C36245) * C153638 * C153897) *
               C153711 * C154093 -
           ((C35508 + C35509 + C35510 + C35511) * C153638 * C153897 +
            (C35007 + C35006 + C35005 + C35004) * C153638 * C154037) *
               C153711 * C154092 -
           ((C34929 * C29108 - C34930 * C29105 - C34929 * C29109 +
             C154044 * C29111 + C34927 * C5774 - C34928 * C5770 -
             C34927 * C5775 + C34919 * C5779 + C34925 * C4385 - C34926 * C4380 -
             C34925 * C4386 + C34918 * C4392 + C34923 * C1955 - C34924 * C1947 -
             C34923 * C1956 + C34917 * C1962) *
                C153638 * C153897 +
            (C35265 + C35264 + C35263 + C35262) * C153638 * C154037) *
               C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C2874 +
             (C11502 + C11503) * C2875 + C11512 * C154058) *
                C154037 +
            ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
                C153897) *
               C153711 * C154092 -
           ((C19816 * C154058 + C20520 * C2875 + (C20534 + C20533) * C2874) *
                C153897 +
            (C12267 * C154058 + (C11786 + C11787) * C2875 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C2874) *
                C154037) *
               C153711 * C154093 +
           (((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
              C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
              C153855 * C1390) *
                 C2874 +
             (C11788 + C11789) * C2875 + (C11790 + C11791) * C154058) *
                C154037 +
            ((C11437 * C1957 - C11438 * C1948 - C11437 * C1958 +
              C154035 * C1963 + C11439 * C4383 - C11440 * C4379 -
              C11439 * C4384 + C153855 * C4391) *
                 C2874 +
             (C19170 + C19171) * C2875 + (C19172 + C19173) * C154058) *
                C153897) *
               C153711 * C1657) *
              C154013 +
          ((((C11787 + C11786) * C2874 + (C11785 + C11784) * C2875 +
             (C11783 + C11782) * C154058) *
                C154037 +
            (C20502 * C2874 + C20503 * C2875 + (C12790 + C12791) * C154058) *
                C153897) *
               C153711 * C154093 -
           ((C12476 * C154058 + C12477 * C2875 + C19483 * C2874) * C153897 +
            (C11515 * C154058 + (C11505 + C11504) * C2875 +
             (C11503 + C11502) * C2874) *
                C154037) *
               C153711 * C154092 -
           (((C11439 * C4389 - C11440 * C4382 - C11439 * C4390 +
              C153855 * C4394 + C11437 * C1951 - C11438 * C1945 -
              C11437 * C1952 + C154035 * C1960) *
                 C154058 +
             (C19173 + C19172) * C2875 + (C19171 + C19170) * C2874) *
                C153897 +
            ((C11793 + C11792) * C154058 + (C11791 + C11790) * C2875 +
             (C11789 + C11788) * C2874) *
                C154037) *
               C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C153638 * C63394 +
            (C19518 + C19519) * C153638 * C63395 + C67338 * C63396 +
            C67342 * C154051) *
               C153711 * C154092 -
           (C68519 * C154051 + C68516 * C63396 +
            (C20534 + C20533) * C153638 * C63395 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C153638 * C63394) *
               C153711 * C154093 +
           ((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
             C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
             C153855 * C1390) *
                C153638 * C63394 +
            (C22305 + C22306) * C153638 * C63395 +
            (C61505 + C61506) * C153638 * C63396 +
            (C11437 * C6377 - C11438 * C6367 - C11437 * C6378 +
             C154035 * C6385 + C11439 * C30186 - C11440 * C30183 -
             C11439 * C30187 + C153855 * C30189) *
                C153638 * C154051) *
               C153711 * C1657) *
              C154013 +
          (((C11787 + C11786) * C153638 * C63394 + C20502 * C153638 * C63395 +
            C59719 * C153638 * C63396 + (C59733 + C59734) * C153638 * C154051) *
               C153711 * C154093 -
           (C67340 * C154051 + C67341 * C63396 + C19483 * C153638 * C63395 +
            (C11503 + C11502) * C153638 * C63394) *
               C153711 * C154092 -
           ((C11439 * C32003 - C11440 * C32002 - C11439 * C32004 +
             C153855 * C32005 + C11437 * C6373 - C11438 * C6365 -
             C11437 * C6374 + C154035 * C6383) *
                C153638 * C154051 +
            (C58439 + C58438) * C153638 * C63396 +
            (C19171 + C19170) * C153638 * C63395 +
            (C11789 + C11788) * C153638 * C63394) *
               C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[171] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C153638 * C154037 +
            (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
               C154022 -
           ((C44397 + C44398 + C44399 + C44400) * C153638 * C153897 +
            (C44396 + C44395 + C44394 + C44393) * C153638 * C154037) *
               C153775) *
              C154092 +
          (((C45071 + C45072 + C45073 + C45074) * C153638 * C154037 +
            (C45617 + C45618 + C45619 + C45620) * C153638 * C153897) *
               C153775 -
           ((C45074 + C45073 + C45072 + C45071) * C153638 * C153897 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C153638 * C154037) *
               C154022) *
              C154093 +
          (((C34923 * C359 - C34924 * C342 - C34923 * C360 + C34917 * C378 +
             C34925 * C1384 - C34926 * C1375 - C34925 * C1385 + C34918 * C1390 +
             C34927 * C3193 - C34928 * C3189 - C34927 * C3194 + C34919 * C3201 +
             C34929 * C4808 - C34930 * C4803 - C34929 * C4809 +
             C154044 * C4812) *
                C153638 * C154037 +
            (C46291 + C46292 + C46293 + C46294) * C153638 * C153897) *
               C154022 -
           ((C34929 * C29443 - C34930 * C29442 - C34929 * C29444 +
             C154044 * C29445 + C34927 * C28692 - C34928 * C28690 -
             C34927 * C28693 + C34919 * C28696 + C34925 * C5038 -
             C34926 * C5033 - C34925 * C5039 + C34918 * C5042 + C34923 * C3511 -
             C34924 * C3507 - C34923 * C3512 + C34917 * C3519) *
                C153638 * C153897 +
            (C46294 + C46293 + C46292 + C46291) * C153638 * C154037) *
               C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C2874 +
             (C11502 + C11503) * C2875 + C11512 * C154058) *
                C154037 +
            ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
                C153897) *
               C154022 -
           ((C19473 * C154058 + C19474 * C2875 + (C19520 + C19521) * C2874) *
                C153897 +
            (C12477 * C154058 + C19483 * C2875 + (C19519 + C19518) * C2874) *
                C154037) *
               C153775) *
              C154092 +
          ((((C20533 + C20534) * C2874 + C20502 * C2875 + C20503 * C154058) *
                C154037 +
            ((C21325 + C21326) * C2874 + (C20535 + C20536) * C2875 +
             (C20537 + C20538) * C154058) *
                C153897) *
               C153775 -
           ((C19816 * C154058 + C20520 * C2875 + (C20534 + C20533) * C2874) *
                C153897 +
            (C12267 * C154058 + (C11786 + C11787) * C2875 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C2874) *
                C154037) *
               C154022) *
              C154093 +
          ((((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
              C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
              C153855 * C1390) *
                 C2874 +
             (C11788 + C11789) * C2875 + (C11790 + C11791) * C154058) *
                C154037 +
            ((C22305 + C22306) * C2874 + (C19170 + C19171) * C2875 +
             (C19172 + C19173) * C154058) *
                C153897) *
               C154022 -
           (((C11439 * C5034 - C11440 * C5031 - C11439 * C5035 +
              C153855 * C5040 + C11437 * C3515 - C11438 * C3509 -
              C11437 * C3516 + C154035 * C3521) *
                 C154058 +
             (C11439 * C5036 - C11440 * C5032 - C11439 * C5037 +
              C153855 * C5041 + C11437 * C3513 - C11438 * C3508 -
              C11437 * C3514 + C154035 * C3520) *
                 C2875 +
             (C11439 * C5038 - C11440 * C5033 - C11439 * C5039 +
              C153855 * C5042 + C11437 * C3511 - C11438 * C3507 -
              C11437 * C3512 + C154035 * C3519) *
                 C2874) *
                C153897 +
            ((C19173 + C19172) * C154058 + (C19171 + C19170) * C2875 +
             (C22306 + C22305) * C2874) *
                C154037) *
               C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C153638 * C63394 +
            (C19518 + C19519) * C153638 * C63395 + C67338 * C63396 +
            C67342 * C154051) *
               C154022 -
           ((C62298 + C62297) * C153638 * C154051 + C62282 * C153638 * C63396 +
            (C19520 + C19521) * C153638 * C63395 +
            (C19519 + C19518) * C153638 * C63394) *
               C153775) *
              C154092 +
          (((C20533 + C20534) * C153638 * C63394 +
            (C21325 + C21326) * C153638 * C63395 +
            (C60525 + C60526) * C153638 * C63396 +
            (C68522 + C68523) * C153638 * C154051) *
               C153775 -
           (C68519 * C154051 + C68516 * C63396 +
            (C20534 + C20533) * C153638 * C63395 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C153638 * C63394) *
               C154022) *
              C154093 +
          (((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
             C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
             C153855 * C1390) *
                C153638 * C63394 +
            (C22305 + C22306) * C153638 * C63395 +
            (C61505 + C61506) * C153638 * C63396 +
            (C69182 + C69183) * C153638 * C154051) *
               C154022 -
           ((C11439 * C32652 - C11440 * C32651 - C11439 * C32653 +
             C153855 * C32654 + C11437 * C31180 - C11438 * C31178 -
             C11437 * C31181 + C154035 * C31184) *
                C153638 * C154051 +
            (C69183 + C69182) * C153638 * C63396 +
            (C61506 + C61505) * C153638 * C63395 +
            (C22306 + C22305) * C153638 * C63394) *
               C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[172] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C11437 * C144 - C11438 * C136 - C11437 * C145 +
                  C154035 * C160 + C11439 * C357 - C11440 * C341 -
                  C11439 * C358 + C153855 * C377) *
                     C2874 +
                 (C11502 + C11503) * C2875 + C11512 * C154058) *
                    C154037 +
                ((C19518 + C19519) * C2874 + C19472 * C2875 +
                 C18855 * C154058) *
                    C153897) *
                   C153711 * C1279 -
               ((C19816 * C154058 + C20520 * C2875 +
                 (C20534 + C20533) * C2874) *
                    C153897 +
                (C12267 * C154058 + (C11786 + C11787) * C2875 +
                 (C11439 * C359 - C11440 * C342 - C11439 * C360 +
                  C153855 * C378 + C11437 * C357 - C11438 * C341 -
                  C11437 * C358 + C154035 * C377) *
                     C2874) *
                    C154037) *
                   C153711 * C153747) *
                  C1281 +
              ((((C11787 + C11786) * C2874 + (C11785 + C11784) * C2875 +
                 (C11783 + C11782) * C154058) *
                    C154037 +
                (C20502 * C2874 + C20503 * C2875 +
                 (C12790 + C12791) * C154058) *
                    C153897) *
                   C153711 * C153747 -
               ((C12476 * C154058 + C12477 * C2875 + C19483 * C2874) * C153897 +
                (C11515 * C154058 + (C11505 + C11504) * C2875 +
                 (C11503 + C11502) * C2874) *
                    C154037) *
                   C153711 * C1279) *
                  C1282 +
              (((C11512 * C2874 + C11513 * C2875 +
                 (C11509 + C11508) * C154058) *
                    C154037 +
                (C18855 * C2874 + C20107 * C2875 +
                 (C12490 + C12491) * C154058) *
                    C153897) *
                   C153711 * C1279 -
               (((C11439 * C1949 - C11440 * C1944 - C11439 * C1950 +
                  C153855 * C1959 + C11437 * C1119 - C11438 * C1109 -
                  C11437 * C1120 + C154035 * C1127) *
                     C154058 +
                 (C12791 + C12790) * C2875 + C19816 * C2874) *
                    C153897 +
                ((C12281 + C12280) * C154058 + C12266 * C2875 +
                 C12267 * C2874) *
                    C154037) *
                   C153711 * C153747) *
                  C1283) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C11437 * C144 - C11438 * C136 - C11437 * C145 +
                 C154035 * C160 + C11439 * C357 - C11440 * C341 -
                 C11439 * C358 + C153855 * C377) *
                    C2874 +
                (C11502 + C11503) * C2875 + C11512 * C154058) *
                   C154037 +
               ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
                   C153897) *
                  C153711 * C1366 -
              ((C19816 * C154058 + C20520 * C2875 + (C20534 + C20533) * C2874) *
                   C153897 +
               (C12267 * C154058 + (C11786 + C11787) * C2875 +
                (C11439 * C359 - C11440 * C342 - C11439 * C360 +
                 C153855 * C378 + C11437 * C357 - C11438 * C341 -
                 C11437 * C358 + C154035 * C377) *
                    C2874) *
                   C154037) *
                  C153711 * C1367 +
              (((C11437 * C359 - C11438 * C342 - C11437 * C360 +
                 C154035 * C378 + C11439 * C1384 - C11440 * C1375 -
                 C11439 * C1385 + C153855 * C1390) *
                    C2874 +
                (C11788 + C11789) * C2875 + (C11790 + C11791) * C154058) *
                   C154037 +
               ((C11437 * C1957 - C11438 * C1948 - C11437 * C1958 +
                 C154035 * C1963 + C11439 * C4383 - C11440 * C4379 -
                 C11439 * C4384 + C153855 * C4391) *
                    C2874 +
                (C19170 + C19171) * C2875 + (C19172 + C19173) * C154058) *
                   C153897) *
                  C153711 * C1368 -
              (((C11439 * C5772 - C11440 * C5769 - C11439 * C5773 +
                 C153855 * C5778 + C11437 * C4387 - C11438 * C4381 -
                 C11437 * C4388 + C154035 * C4393) *
                    C154058 +
                (C11439 * C5774 - C11440 * C5770 - C11439 * C5775 +
                 C153855 * C5779 + C11437 * C4385 - C11438 * C4380 -
                 C11437 * C4386 + C154035 * C4392) *
                    C2875 +
                (C11439 * C5776 - C11440 * C5771 - C11439 * C5777 +
                 C153855 * C5780 + C11437 * C4383 - C11438 * C4379 -
                 C11437 * C4384 + C154035 * C4391) *
                    C2874) *
                   C153897 +
               ((C11439 * C3197 - C11440 * C3191 - C11439 * C3198 +
                 C153855 * C3203 + C11437 * C1380 - C11438 * C1373 -
                 C11437 * C1381 + C154035 * C1388) *
                    C154058 +
                (C11439 * C3195 - C11440 * C3190 - C11439 * C3196 +
                 C153855 * C3202 + C11437 * C1382 - C11438 * C1374 -
                 C11437 * C1383 + C154035 * C1389) *
                    C2875 +
                (C11439 * C3193 - C11440 * C3189 - C11439 * C3194 +
                 C153855 * C3201 + C11437 * C1384 - C11438 * C1375 -
                 C11437 * C1385 + C154035 * C1390) *
                    C2874) *
                   C154037) *
                  C153711 * C1369) *
             C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C2874 +
             (C11502 + C11503) * C2875 + C11512 * C154058) *
                C154037 +
            ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
                C153897) *
               C563 -
           ((C19473 * C154058 + C19474 * C2875 + (C19520 + C19521) * C2874) *
                C153897 +
            (C12477 * C154058 + C19483 * C2875 + (C19519 + C19518) * C2874) *
                C154037) *
               C564 +
           (((C19521 + C19520) * C2874 + C19484 * C2875 + C19485 * C154058) *
                C154037 +
            ((C11437 * C2309 - C11438 * C2300 - C11437 * C2310 +
              C154035 * C2315 + C11439 * C6379 - C11440 * C6368 -
              C11439 * C6380 + C153855 * C6386) *
                 C2874 +
             (C19522 + C19523) * C2875 + (C19524 + C19525) * C154058) *
                C153897) *
               C565) *
              C1279 +
          ((((C20533 + C20534) * C2874 + C20502 * C2875 + C20503 * C154058) *
                C154037 +
            ((C21325 + C21326) * C2874 + (C20535 + C20536) * C2875 +
             (C20537 + C20538) * C154058) *
                C153897) *
               C564 -
           ((C19816 * C154058 + C20520 * C2875 + (C20534 + C20533) * C2874) *
                C153897 +
            (C12267 * C154058 + (C11786 + C11787) * C2875 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C2874) *
                C154037) *
               C563 -
           (((C11439 * C6369 - C11440 * C6363 - C11439 * C6370 +
              C153855 * C6381 + C11437 * C6371 - C11438 * C6364 -
              C11437 * C6372 + C154035 * C6382) *
                 C154058 +
             (C11439 * C6373 - C11440 * C6365 - C11439 * C6374 +
              C153855 * C6383 + C11437 * C6375 - C11438 * C6366 -
              C11437 * C6376 + C154035 * C6384) *
                 C2875 +
             (C11439 * C6377 - C11440 * C6367 - C11439 * C6378 +
              C153855 * C6385 + C11437 * C6379 - C11438 * C6368 -
              C11437 * C6380 + C154035 * C6386) *
                 C2874) *
                C153897 +
            ((C20538 + C20537) * C154058 + (C20536 + C20535) * C2875 +
             (C21326 + C21325) * C2874) *
                C154037) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C153638 * C154037 +
            (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
               C153711 * C1279 -
           ((C45074 + C45073 + C45072 + C45071) * C153638 * C153897 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C153638 * C154037) *
               C153711 * C153747) *
              C1281 +
          (((C35261 + C35260 + C35259 + C35258) * C153638 * C154037 +
            (C36242 + C36243 + C36244 + C36245) * C153638 * C153897) *
               C153711 * C153747 -
           ((C35508 + C35509 + C35510 + C35511) * C153638 * C153897 +
            (C35007 + C35006 + C35005 + C35004) * C153638 * C154037) *
               C153711 * C1279) *
              C1282 +
          (((C35011 + C35010 + C35009 + C35008) * C153638 * C154037 +
            (C35956 + C35957 + C35958 + C35959) * C153638 * C153897) *
               C153711 * C1279 -
           ((C34929 * C5772 - C34930 * C5769 - C34929 * C5773 +
             C154044 * C5778 + C34927 * C4387 - C34928 * C4381 -
             C34927 * C4388 + C34919 * C4393 + C34925 * C1953 - C34926 * C1946 -
             C34925 * C1954 + C34918 * C1961 + C34923 * C1115 - C34924 * C1107 -
             C34923 * C1116 + C34917 * C1125) *
                C153638 * C153897 +
            (C35737 + C35736 + C35735 + C35734) * C153638 * C154037) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
            C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
            C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
            C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
            C154044 * C1390) *
               C153638 * C154037 +
           (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
              C153711 * C1366 -
          ((C45074 + C45073 + C45072 + C45071) * C153638 * C153897 +
           (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 + C154044 * C3201 +
            C34927 * C1384 - C34928 * C1375 - C34927 * C1385 + C34919 * C1390 +
            C34925 * C359 - C34926 * C342 - C34925 * C360 + C34918 * C378 +
            C34923 * C357 - C34924 * C341 - C34923 * C358 + C34917 * C377) *
               C153638 * C154037) *
              C153711 * C1367 +
          ((C34923 * C359 - C34924 * C342 - C34923 * C360 + C34917 * C378 +
            C34925 * C1384 - C34926 * C1375 - C34925 * C1385 + C34918 * C1390 +
            C34927 * C3193 - C34928 * C3189 - C34927 * C3194 + C34919 * C3201 +
            C34929 * C4808 - C34930 * C4803 - C34929 * C4809 +
            C154044 * C4812) *
               C153638 * C154037 +
           (C34923 * C1957 - C34924 * C1948 - C34923 * C1958 + C34917 * C1963 +
            C34925 * C4383 - C34926 * C4379 - C34925 * C4384 + C34918 * C4391 +
            C34927 * C5776 - C34928 * C5771 - C34927 * C5777 + C34919 * C5780 +
            C34929 * C29106 - C34930 * C29104 - C34929 * C29107 +
            C154044 * C29110) *
               C153638 * C153897) *
              C153711 * C1368 -
          ((C34929 * C29853 - C34930 * C29852 - C34929 * C29854 +
            C154044 * C29855 + C34927 * C29106 - C34928 * C29104 -
            C34927 * C29107 + C34919 * C29110 + C34925 * C5776 -
            C34926 * C5771 - C34925 * C5777 + C34918 * C5780 + C34923 * C4383 -
            C34924 * C4379 - C34923 * C4384 + C34917 * C4391) *
               C153638 * C153897 +
           (C34929 * C28562 - C34930 * C28560 - C34929 * C28563 +
            C154044 * C28566 + C34927 * C4808 - C34928 * C4803 -
            C34927 * C4809 + C34919 * C4812 + C34925 * C3193 - C34926 * C3189 -
            C34925 * C3194 + C34918 * C3201 + C34923 * C1384 - C34924 * C1375 -
            C34923 * C1385 + C34917 * C1390) *
               C153638 * C154037) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C153638 * C154037 +
            (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
               C563 -
           ((C44397 + C44398 + C44399 + C44400) * C153638 * C153897 +
            (C44396 + C44395 + C44394 + C44393) * C153638 * C154037) *
               C564 +
           ((C44400 + C44399 + C44398 + C44397) * C153638 * C154037 +
            (C34923 * C2309 - C34924 * C2300 - C34923 * C2310 + C34917 * C2315 +
             C34925 * C6379 - C34926 * C6368 - C34925 * C6380 + C34918 * C6386 +
             C34927 * C6377 - C34928 * C6367 - C34927 * C6378 + C34919 * C6385 +
             C34929 * C30186 - C34930 * C30183 - C34929 * C30187 +
             C154044 * C30189) *
                C153638 * C153897) *
               C565) *
              C1279 +
          (((C45071 + C45072 + C45073 + C45074) * C153638 * C154037 +
            (C45617 + C45618 + C45619 + C45620) * C153638 * C153897) *
               C564 -
           ((C45074 + C45073 + C45072 + C45071) * C153638 * C153897 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C153638 * C154037) *
               C563 -
           ((C34929 * C30184 - C34930 * C30182 - C34929 * C30185 +
             C154044 * C30188 + C34927 * C30186 - C34928 * C30183 -
             C34927 * C30187 + C34919 * C30189 + C34925 * C6377 -
             C34926 * C6367 - C34925 * C6378 + C34918 * C6385 + C34923 * C6379 -
             C34924 * C6368 - C34923 * C6380 + C34917 * C6386) *
                C153638 * C153897 +
            (C45620 + C45619 + C45618 + C45617) * C153638 * C154037) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C153638 * C63394 +
            (C19518 + C19519) * C153638 * C63395 + C67338 * C63396 +
            C67342 * C154051) *
               C153711 * C1279 -
           ((C60526 + C60525) * C153638 * C154051 + C60518 * C153638 * C63396 +
            (C20534 + C20533) * C153638 * C63395 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C153638 * C63394) *
               C153711 * C153747) *
              C1281 +
          (((C11787 + C11786) * C153638 * C63394 + C20502 * C153638 * C63395 +
            C59719 * C153638 * C63396 + (C59733 + C59734) * C153638 * C154051) *
               C153711 * C153747 -
           (C67340 * C154051 + C67341 * C63396 + C19483 * C153638 * C63395 +
            (C11503 + C11502) * C153638 * C63394) *
               C153711 * C1279) *
              C1282 +
          ((C11512 * C153638 * C63394 + C18855 * C153638 * C63395 +
            C19485 * C153638 * C63396 + (C19524 + C19525) * C153638 * C154051) *
               C153711 * C1279 -
           ((C11439 * C6369 - C11440 * C6363 - C11439 * C6370 +
             C153855 * C6381 + C11437 * C6371 - C11438 * C6364 -
             C11437 * C6372 + C154035 * C6382) *
                C153638 * C154051 +
            (C20538 + C20537) * C153638 * C63396 + C19816 * C153638 * C63395 +
            C12267 * C153638 * C63394) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
            C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
               C153638 * C63394 +
           (C19518 + C19519) * C153638 * C63395 + C67338 * C63396 +
           C67342 * C154051) *
              C153711 * C1366 -
          ((C60526 + C60525) * C153638 * C154051 + C60518 * C153638 * C63396 +
           (C20534 + C20533) * C153638 * C63395 +
           (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
            C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
               C153638 * C63394) *
              C153711 * C1367 +
          ((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
            C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
            C153855 * C1390) *
               C153638 * C63394 +
           (C22305 + C22306) * C153638 * C63395 +
           (C61505 + C61506) * C153638 * C63396 +
           (C11437 * C6377 - C11438 * C6367 - C11437 * C6378 + C154035 * C6385 +
            C11439 * C30186 - C11440 * C30183 - C11439 * C30187 +
            C153855 * C30189) *
               C153638 * C154051) *
              C153711 * C1368 -
          ((C11439 * C30184 - C11440 * C30182 - C11439 * C30185 +
            C153855 * C30188 + C11437 * C30186 - C11438 * C30183 -
            C11437 * C30187 + C154035 * C30189) *
               C153638 * C154051 +
           (C11439 * C28692 - C11440 * C28690 - C11439 * C28693 +
            C153855 * C28696 + C11437 * C5038 - C11438 * C5033 -
            C11437 * C5039 + C154035 * C5042) *
               C153638 * C63396 +
           (C11439 * C5776 - C11440 * C5771 - C11439 * C5777 + C153855 * C5780 +
            C11437 * C4383 - C11438 * C4379 - C11437 * C4384 +
            C154035 * C4391) *
               C153638 * C63395 +
           (C11439 * C3193 - C11440 * C3189 - C11439 * C3194 + C153855 * C3201 +
            C11437 * C1384 - C11438 * C1375 - C11437 * C1385 +
            C154035 * C1390) *
               C153638 * C63394) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C153638 * C63394 +
            (C19518 + C19519) * C153638 * C63395 + C67338 * C63396 +
            C67342 * C154051) *
               C563 -
           ((C62298 + C62297) * C153638 * C154051 + C62282 * C153638 * C63396 +
            (C19520 + C19521) * C153638 * C63395 +
            (C19519 + C19518) * C153638 * C63394) *
               C564 +
           (C67338 * C63394 + C67342 * C63395 +
            (C62297 + C62298) * C153638 * C63396 +
            (C11437 * C10558 - C11438 * C10553 - C11437 * C10559 +
             C154035 * C10562 + C11439 * C34033 - C11440 * C34030 -
             C11439 * C34034 + C153855 * C34036) *
                C153638 * C154051) *
               C565) *
              C1279 +
          (((C20533 + C20534) * C153638 * C63394 +
            (C21325 + C21326) * C153638 * C63395 +
            (C60525 + C60526) * C153638 * C63396 +
            (C68522 + C68523) * C153638 * C154051) *
               C564 -
           (C68519 * C154051 + C68516 * C63396 +
            (C20534 + C20533) * C153638 * C63395 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C153638 * C63394) *
               C563 -
           ((C11439 * C34031 - C11440 * C34029 - C11439 * C34032 +
             C153855 * C34035 + C11437 * C34033 - C11438 * C34030 -
             C11437 * C34034 + C154035 * C34036) *
                C153638 * C154051 +
            (C68523 + C68522) * C153638 * C63396 + C68519 * C63395 +
            C68516 * C63394) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[173] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
              C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
              C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
              C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
              C154044 * C1390) *
                 C153638 * C154037 +
             (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
                C154022 -
            ((C44397 + C44398 + C44399 + C44400) * C153638 * C153897 +
             (C44396 + C44395 + C44394 + C44393) * C153638 * C154037) *
                C153775) *
               C1279 +
           (((C45071 + C45072 + C45073 + C45074) * C153638 * C154037 +
             (C45617 + C45618 + C45619 + C45620) * C153638 * C153897) *
                C153775 -
            ((C45074 + C45073 + C45072 + C45071) * C153638 * C153897 +
             (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
              C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
              C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
              C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
              C34923 * C358 + C34917 * C377) *
                 C153638 * C154037) *
                C154022) *
               C153747) *
              C154013 +
          ((((C35511 + C35510 + C35509 + C35508) * C153638 * C154037 +
             (C35512 + C35513 + C35514 + C35515) * C153638 * C153897) *
                C153775 -
            ((C35508 + C35509 + C35510 + C35511) * C153638 * C153897 +
             (C35007 + C35006 + C35005 + C35004) * C153638 * C154037) *
                C154022) *
               C1279 +
           (((C35261 + C35260 + C35259 + C35258) * C153638 * C154037 +
             (C36242 + C36243 + C36244 + C36245) * C153638 * C153897) *
                C154022 -
            ((C34929 * C28694 - C34930 * C28691 - C34929 * C28695 +
              C154044 * C28697 + C34927 * C5036 - C34928 * C5032 -
              C34927 * C5037 + C34919 * C5041 + C34925 * C3513 -
              C34926 * C3508 - C34925 * C3514 + C34918 * C3520 +
              C34923 * C1524 - C34924 * C1516 - C34923 * C1525 +
              C34917 * C1531) *
                 C153638 * C153897 +
             (C36245 + C36244 + C36243 + C36242) * C153638 * C154037) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
               C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                  C2874 +
              (C11502 + C11503) * C2875 + C11512 * C154058) *
                 C154037 +
             ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
                 C153897) *
                C154022 -
            ((C19473 * C154058 + C19474 * C2875 + (C19520 + C19521) * C2874) *
                 C153897 +
             (C12477 * C154058 + C19483 * C2875 + (C19519 + C19518) * C2874) *
                 C154037) *
                C153775) *
               C1279 +
           ((((C20533 + C20534) * C2874 + C20502 * C2875 + C20503 * C154058) *
                 C154037 +
             ((C21325 + C21326) * C2874 + (C20535 + C20536) * C2875 +
              (C20537 + C20538) * C154058) *
                 C153897) *
                C153775 -
            ((C19816 * C154058 + C20520 * C2875 + (C20534 + C20533) * C2874) *
                 C153897 +
             (C12267 * C154058 + (C11786 + C11787) * C2875 +
              (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
               C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                  C2874) *
                 C154037) *
                C154022) *
               C153747) *
              C154013 +
          ((((C19472 * C2874 + C18855 * C2875 + C20107 * C154058) * C154037 +
             (C19484 * C2874 + C19485 * C2875 + (C12070 + C12071) * C154058) *
                 C153897) *
                C153775 -
            ((C12476 * C154058 + C12477 * C2875 + C19483 * C2874) * C153897 +
             (C11515 * C154058 + (C11505 + C11504) * C2875 +
              (C11503 + C11502) * C2874) *
                 C154037) *
                C154022) *
               C1279 +
           ((((C11787 + C11786) * C2874 + (C11785 + C11784) * C2875 +
              (C11783 + C11782) * C154058) *
                 C154037 +
             (C20502 * C2874 + C20503 * C2875 + (C12790 + C12791) * C154058) *
                 C153897) *
                C154022 -
            (((C11439 * C3517 - C11440 * C3510 - C11439 * C3518 +
               C153855 * C3522 + C11437 * C1520 - C11438 * C1514 -
               C11437 * C1521 + C154035 * C1529) *
                  C154058 +
              (C20538 + C20537) * C2875 + (C20536 + C20535) * C2874) *
                 C153897 +
             ((C12791 + C12790) * C154058 + C19816 * C2875 + C20520 * C2874) *
                 C154037) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C153638 * C63394 +
             (C19518 + C19519) * C153638 * C63395 + C67338 * C63396 +
             C67342 * C154051) *
                C154022 -
            ((C62298 + C62297) * C153638 * C154051 + C62282 * C153638 * C63396 +
             (C19520 + C19521) * C153638 * C63395 +
             (C19519 + C19518) * C153638 * C63394) *
                C153775) *
               C1279 +
           (((C20533 + C20534) * C153638 * C63394 +
             (C21325 + C21326) * C153638 * C63395 +
             (C60525 + C60526) * C153638 * C63396 +
             (C68522 + C68523) * C153638 * C154051) *
                C153775 -
            (C68519 * C154051 + C68516 * C63396 +
             (C20534 + C20533) * C153638 * C63395 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C153638 * C63394) *
                C154022) *
               C153747) *
              C154013 +
          (((C19472 * C153638 * C63394 + C19484 * C153638 * C63395 +
             C58733 * C153638 * C63396 +
             (C58751 + C58752) * C153638 * C154051) *
                C153775 -
            (C67340 * C154051 + C67341 * C63396 + C19483 * C153638 * C63395 +
             (C11503 + C11502) * C153638 * C63394) *
                C154022) *
               C1279 +
           (((C11787 + C11786) * C153638 * C63394 + C20502 * C153638 * C63395 +
             C59719 * C153638 * C63396 +
             (C59733 + C59734) * C153638 * C154051) *
                C154022 -
            ((C11439 * C31182 - C11440 * C31179 - C11439 * C31183 +
              C153855 * C31185 + C11437 * C9204 - C11438 * C9200 -
              C11437 * C9205 + C154035 * C9209) *
                 C153638 * C154051 +
             (C59734 + C59733) * C153638 * C63396 + C59728 * C153638 * C63395 +
             C20520 * C153638 * C63394) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[174] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C2874 +
            (C11502 + C11503) * C2875 + C11512 * C154058) *
               C154037 +
           ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
               C153897) *
              C153711 * C1366 -
          ((C19816 * C154058 + C20520 * C2875 + (C20534 + C20533) * C2874) *
               C153897 +
           (C12267 * C154058 + (C11786 + C11787) * C2875 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C2874) *
               C154037) *
              C153711 * C1367 +
          (((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
             C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
             C153855 * C1390) *
                C2874 +
            (C11788 + C11789) * C2875 + (C11790 + C11791) * C154058) *
               C154037 +
           ((C11437 * C1957 - C11438 * C1948 - C11437 * C1958 +
             C154035 * C1963 + C11439 * C4383 - C11440 * C4379 -
             C11439 * C4384 + C153855 * C4391) *
                C2874 +
            (C19170 + C19171) * C2875 + (C19172 + C19173) * C154058) *
               C153897) *
              C153711 * C1368 -
          (((C11439 * C5772 - C11440 * C5769 - C11439 * C5773 +
             C153855 * C5778 + C11437 * C4387 - C11438 * C4381 -
             C11437 * C4388 + C154035 * C4393) *
                C154058 +
            (C11439 * C5774 - C11440 * C5770 - C11439 * C5775 +
             C153855 * C5779 + C11437 * C4385 - C11438 * C4380 -
             C11437 * C4386 + C154035 * C4392) *
                C2875 +
            (C11439 * C5776 - C11440 * C5771 - C11439 * C5777 +
             C153855 * C5780 + C11437 * C4383 - C11438 * C4379 -
             C11437 * C4384 + C154035 * C4391) *
                C2874) *
               C153897 +
           ((C11439 * C3197 - C11440 * C3191 - C11439 * C3198 +
             C153855 * C3203 + C11437 * C1380 - C11438 * C1373 -
             C11437 * C1381 + C154035 * C1388) *
                C154058 +
            (C11439 * C3195 - C11440 * C3190 - C11439 * C3196 +
             C153855 * C3202 + C11437 * C1382 - C11438 * C1374 -
             C11437 * C1383 + C154035 * C1389) *
                C2875 +
            (C11439 * C3193 - C11440 * C3189 - C11439 * C3194 +
             C153855 * C3201 + C11437 * C1384 - C11438 * C1375 -
             C11437 * C1385 + C154035 * C1390) *
                C2874) *
               C154037) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C2874 +
             (C11502 + C11503) * C2875 + C11512 * C154058) *
                C154037 +
            ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
                C153897) *
               C153711 * C1279 -
           ((C19816 * C154058 + C20520 * C2875 + (C20534 + C20533) * C2874) *
                C153897 +
            (C12267 * C154058 + (C11786 + C11787) * C2875 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C2874) *
                C154037) *
               C153711 * C153747) *
              C1281 +
          ((((C11787 + C11786) * C2874 + (C11785 + C11784) * C2875 +
             (C11783 + C11782) * C154058) *
                C154037 +
            (C20502 * C2874 + C20503 * C2875 + (C12790 + C12791) * C154058) *
                C153897) *
               C153711 * C153747 -
           ((C12476 * C154058 + C12477 * C2875 + C19483 * C2874) * C153897 +
            (C11515 * C154058 + (C11505 + C11504) * C2875 +
             (C11503 + C11502) * C2874) *
                C154037) *
               C153711 * C1279) *
              C1282 +
          (((C11512 * C2874 + C11513 * C2875 + (C11509 + C11508) * C154058) *
                C154037 +
            (C18855 * C2874 + C20107 * C2875 + (C12490 + C12491) * C154058) *
                C153897) *
               C153711 * C1279 -
           (((C11439 * C1949 - C11440 * C1944 - C11439 * C1950 +
              C153855 * C1959 + C11437 * C1119 - C11438 * C1109 -
              C11437 * C1120 + C154035 * C1127) *
                 C154058 +
             (C12791 + C12790) * C2875 + C19816 * C2874) *
                C153897 +
            ((C12281 + C12280) * C154058 + C12266 * C2875 + C12267 * C2874) *
                C154037) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C153638 * C154037 +
            (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
               C153711 * C1279 -
           ((C45074 + C45073 + C45072 + C45071) * C153638 * C153897 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C153638 * C154037) *
               C153711 * C153747) *
              C1281 +
          (((C35261 + C35260 + C35259 + C35258) * C153638 * C154037 +
            (C36242 + C36243 + C36244 + C36245) * C153638 * C153897) *
               C153711 * C153747 -
           ((C35508 + C35509 + C35510 + C35511) * C153638 * C153897 +
            (C35007 + C35006 + C35005 + C35004) * C153638 * C154037) *
               C153711 * C1279) *
              C1282 +
          (((C35011 + C35010 + C35009 + C35008) * C153638 * C154037 +
            (C35956 + C35957 + C35958 + C35959) * C153638 * C153897) *
               C153711 * C1279 -
           ((C34929 * C5772 - C34930 * C5769 - C34929 * C5773 +
             C154044 * C5778 + C34927 * C4387 - C34928 * C4381 -
             C34927 * C4388 + C34919 * C4393 + C34925 * C1953 - C34926 * C1946 -
             C34925 * C1954 + C34918 * C1961 + C34923 * C1115 - C34924 * C1107 -
             C34923 * C1116 + C34917 * C1125) *
                C153638 * C153897 +
            (C35737 + C35736 + C35735 + C35734) * C153638 * C154037) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
            C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
            C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
            C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
            C154044 * C1390) *
               C153638 * C154037 +
           (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
              C153711 * C1366 -
          ((C45074 + C45073 + C45072 + C45071) * C153638 * C153897 +
           (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 + C154044 * C3201 +
            C34927 * C1384 - C34928 * C1375 - C34927 * C1385 + C34919 * C1390 +
            C34925 * C359 - C34926 * C342 - C34925 * C360 + C34918 * C378 +
            C34923 * C357 - C34924 * C341 - C34923 * C358 + C34917 * C377) *
               C153638 * C154037) *
              C153711 * C1367 +
          ((C34923 * C359 - C34924 * C342 - C34923 * C360 + C34917 * C378 +
            C34925 * C1384 - C34926 * C1375 - C34925 * C1385 + C34918 * C1390 +
            C34927 * C3193 - C34928 * C3189 - C34927 * C3194 + C34919 * C3201 +
            C34929 * C4808 - C34930 * C4803 - C34929 * C4809 +
            C154044 * C4812) *
               C153638 * C154037 +
           (C34923 * C1957 - C34924 * C1948 - C34923 * C1958 + C34917 * C1963 +
            C34925 * C4383 - C34926 * C4379 - C34925 * C4384 + C34918 * C4391 +
            C34927 * C5776 - C34928 * C5771 - C34927 * C5777 + C34919 * C5780 +
            C34929 * C29106 - C34930 * C29104 - C34929 * C29107 +
            C154044 * C29110) *
               C153638 * C153897) *
              C153711 * C1368 -
          ((C34929 * C29853 - C34930 * C29852 - C34929 * C29854 +
            C154044 * C29855 + C34927 * C29106 - C34928 * C29104 -
            C34927 * C29107 + C34919 * C29110 + C34925 * C5776 -
            C34926 * C5771 - C34925 * C5777 + C34918 * C5780 + C34923 * C4383 -
            C34924 * C4379 - C34923 * C4384 + C34917 * C4391) *
               C153638 * C153897 +
           (C34929 * C28562 - C34930 * C28560 - C34929 * C28563 +
            C154044 * C28566 + C34927 * C4808 - C34928 * C4803 -
            C34927 * C4809 + C34919 * C4812 + C34925 * C3193 - C34926 * C3189 -
            C34925 * C3194 + C34918 * C3201 + C34923 * C1384 - C34924 * C1375 -
            C34923 * C1385 + C34917 * C1390) *
               C153638 * C154037) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C153638 * C63394 +
            (C19518 + C19519) * C153638 * C63395 + C67338 * C63396 +
            C67342 * C154051) *
               C153711 * C1279 -
           ((C60526 + C60525) * C153638 * C154051 + C60518 * C153638 * C63396 +
            (C20534 + C20533) * C153638 * C63395 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C153638 * C63394) *
               C153711 * C153747) *
              C1281 +
          (((C11787 + C11786) * C153638 * C63394 + C20502 * C153638 * C63395 +
            C59719 * C153638 * C63396 + (C59733 + C59734) * C153638 * C154051) *
               C153711 * C153747 -
           (C67340 * C154051 + C67341 * C63396 + C19483 * C153638 * C63395 +
            (C11503 + C11502) * C153638 * C63394) *
               C153711 * C1279) *
              C1282 +
          ((C11512 * C153638 * C63394 + C18855 * C153638 * C63395 +
            C19485 * C153638 * C63396 + (C19524 + C19525) * C153638 * C154051) *
               C153711 * C1279 -
           ((C11439 * C6369 - C11440 * C6363 - C11439 * C6370 +
             C153855 * C6381 + C11437 * C6371 - C11438 * C6364 -
             C11437 * C6372 + C154035 * C6382) *
                C153638 * C154051 +
            (C20538 + C20537) * C153638 * C63396 + C19816 * C153638 * C63395 +
            C12267 * C153638 * C63394) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
            C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
               C153638 * C63394 +
           (C19518 + C19519) * C153638 * C63395 + C67338 * C63396 +
           C67342 * C154051) *
              C153711 * C1366 -
          ((C60526 + C60525) * C153638 * C154051 + C60518 * C153638 * C63396 +
           (C20534 + C20533) * C153638 * C63395 +
           (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
            C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
               C153638 * C63394) *
              C153711 * C1367 +
          ((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
            C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
            C153855 * C1390) *
               C153638 * C63394 +
           (C22305 + C22306) * C153638 * C63395 +
           (C61505 + C61506) * C153638 * C63396 +
           (C11437 * C6377 - C11438 * C6367 - C11437 * C6378 + C154035 * C6385 +
            C11439 * C30186 - C11440 * C30183 - C11439 * C30187 +
            C153855 * C30189) *
               C153638 * C154051) *
              C153711 * C1368 -
          ((C11439 * C30184 - C11440 * C30182 - C11439 * C30185 +
            C153855 * C30188 + C11437 * C30186 - C11438 * C30183 -
            C11437 * C30187 + C154035 * C30189) *
               C153638 * C154051 +
           (C11439 * C28692 - C11440 * C28690 - C11439 * C28693 +
            C153855 * C28696 + C11437 * C5038 - C11438 * C5033 -
            C11437 * C5039 + C154035 * C5042) *
               C153638 * C63396 +
           (C11439 * C5776 - C11440 * C5771 - C11439 * C5777 + C153855 * C5780 +
            C11437 * C4383 - C11438 * C4379 - C11437 * C4384 +
            C154035 * C4391) *
               C153638 * C63395 +
           (C11439 * C3193 - C11440 * C3189 - C11439 * C3194 + C153855 * C3201 +
            C11437 * C1384 - C11438 * C1375 - C11437 * C1385 +
            C154035 * C1390) *
               C153638 * C63394) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[175] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
              C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
              C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
              C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
              C154044 * C1390) *
                 C153638 * C154037 +
             (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
                C2086 -
            ((C44397 + C44398 + C44399 + C44400) * C153638 * C153897 +
             (C44396 + C44395 + C44394 + C44393) * C153638 * C154037) *
                C153775) *
               C154021 +
           (((C45071 + C45072 + C45073 + C45074) * C153638 * C154037 +
             (C45617 + C45618 + C45619 + C45620) * C153638 * C153897) *
                C153775 -
            ((C45074 + C45073 + C45072 + C45071) * C153638 * C153897 +
             (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
              C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
              C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
              C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
              C34923 * C358 + C34917 * C377) *
                 C153638 * C154037) *
                C2086) *
               C153747) *
              C154013 +
          ((((C35511 + C35510 + C35509 + C35508) * C153638 * C154037 +
             (C35512 + C35513 + C35514 + C35515) * C153638 * C153897) *
                C153775 -
            ((C35508 + C35509 + C35510 + C35511) * C153638 * C153897 +
             (C35007 + C35006 + C35005 + C35004) * C153638 * C154037) *
                C2086) *
               C154021 +
           (((C35261 + C35260 + C35259 + C35258) * C153638 * C154037 +
             (C36242 + C36243 + C36244 + C36245) * C153638 * C153897) *
                C2086 -
            ((C34929 * C28694 - C34930 * C28691 - C34929 * C28695 +
              C154044 * C28697 + C34927 * C5036 - C34928 * C5032 -
              C34927 * C5037 + C34919 * C5041 + C34925 * C3513 -
              C34926 * C3508 - C34925 * C3514 + C34918 * C3520 +
              C34923 * C1524 - C34924 * C1516 - C34923 * C1525 +
              C34917 * C1531) *
                 C153638 * C153897 +
             (C36245 + C36244 + C36243 + C36242) * C153638 * C154037) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
               C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                  C2874 +
              (C11502 + C11503) * C2875 + C11512 * C154058) *
                 C154037 +
             ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
                 C153897) *
                C2086 -
            ((C19473 * C154058 + C19474 * C2875 + (C19520 + C19521) * C2874) *
                 C153897 +
             (C12477 * C154058 + C19483 * C2875 + (C19519 + C19518) * C2874) *
                 C154037) *
                C153775) *
               C154021 +
           ((((C20533 + C20534) * C2874 + C20502 * C2875 + C20503 * C154058) *
                 C154037 +
             ((C21325 + C21326) * C2874 + (C20535 + C20536) * C2875 +
              (C20537 + C20538) * C154058) *
                 C153897) *
                C153775 -
            ((C19816 * C154058 + C20520 * C2875 + (C20534 + C20533) * C2874) *
                 C153897 +
             (C12267 * C154058 + (C11786 + C11787) * C2875 +
              (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
               C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                  C2874) *
                 C154037) *
                C2086) *
               C153747) *
              C154013 +
          ((((C19472 * C2874 + C18855 * C2875 + C20107 * C154058) * C154037 +
             (C19484 * C2874 + C19485 * C2875 + (C12070 + C12071) * C154058) *
                 C153897) *
                C153775 -
            ((C12476 * C154058 + C12477 * C2875 + C19483 * C2874) * C153897 +
             (C11515 * C154058 + (C11505 + C11504) * C2875 +
              (C11503 + C11502) * C2874) *
                 C154037) *
                C2086) *
               C154021 +
           ((((C11787 + C11786) * C2874 + (C11785 + C11784) * C2875 +
              (C11783 + C11782) * C154058) *
                 C154037 +
             (C20502 * C2874 + C20503 * C2875 + (C12790 + C12791) * C154058) *
                 C153897) *
                C2086 -
            (((C11439 * C3517 - C11440 * C3510 - C11439 * C3518 +
               C153855 * C3522 + C11437 * C1520 - C11438 * C1514 -
               C11437 * C1521 + C154035 * C1529) *
                  C154058 +
              (C20538 + C20537) * C2875 + (C20536 + C20535) * C2874) *
                 C153897 +
             ((C12791 + C12790) * C154058 + C19816 * C2875 + C20520 * C2874) *
                 C154037) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C153638 * C63394 +
             (C19518 + C19519) * C153638 * C63395 + C67338 * C63396 +
             C67342 * C154051) *
                C2086 -
            (C69712 * C154051 + C69703 * C63396 +
             (C19520 + C19521) * C153638 * C63395 +
             (C19519 + C19518) * C153638 * C63394) *
                C153775) *
               C154021 +
           (((C20533 + C20534) * C153638 * C63394 +
             (C21325 + C21326) * C153638 * C63395 +
             (C60525 + C60526) * C153638 * C63396 +
             (C68522 + C68523) * C153638 * C154051) *
                C153775 -
            (C68519 * C154051 + C68516 * C63396 +
             (C20534 + C20533) * C153638 * C63395 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C153638 * C63394) *
                C2086) *
               C153747) *
              C154013 +
          (((C19472 * C153638 * C63394 + C19484 * C153638 * C63395 +
             C58733 * C153638 * C63396 +
             (C58751 + C58752) * C153638 * C154051) *
                C153775 -
            (C67340 * C154051 + C67341 * C63396 + C19483 * C153638 * C63395 +
             (C11503 + C11502) * C153638 * C63394) *
                C2086) *
               C154021 +
           (((C11787 + C11786) * C153638 * C63394 + C20502 * C153638 * C63395 +
             C59719 * C153638 * C63396 +
             (C59733 + C59734) * C153638 * C154051) *
                C2086 -
            ((C11439 * C31182 - C11440 * C31179 - C11439 * C31183 +
              C153855 * C31185 + C11437 * C9204 - C11438 * C9200 -
              C11437 * C9205 + C154035 * C9209) *
                 C153638 * C154051 +
             (C59734 + C59733) * C153638 * C63396 + C59728 * C153638 * C63395 +
             C20520 * C153638 * C63394) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C153638 * C154037 +
            (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
               C154094 -
           ((C44397 + C44398 + C44399 + C44400) * C153638 * C153897 +
            (C44396 + C44395 + C44394 + C44393) * C153638 * C154037) *
               C154095 +
           ((C44400 + C44399 + C44398 + C44397) * C153638 * C154037 +
            (C46837 + C46838 + C46839 + C46840) * C153638 * C153897) *
               C2602) *
              C154021 +
          (((C45071 + C45072 + C45073 + C45074) * C153638 * C154037 +
            (C45617 + C45618 + C45619 + C45620) * C153638 * C153897) *
               C154095 -
           ((C45074 + C45073 + C45072 + C45071) * C153638 * C153897 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C153638 * C154037) *
               C154094 -
           ((C34929 * C30184 - C34930 * C30182 - C34929 * C30185 +
             C154044 * C30188 + C34927 * C30186 - C34928 * C30183 -
             C34927 * C30187 + C34919 * C30189 + C34925 * C6377 -
             C34926 * C6367 - C34925 * C6378 + C34918 * C6385 + C34923 * C6379 -
             C34924 * C6368 - C34923 * C6380 + C34917 * C6386) *
                C153638 * C153897 +
            (C45620 + C45619 + C45618 + C45617) * C153638 * C154037) *
               C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C2874 +
             (C11502 + C11503) * C2875 + C11512 * C154058) *
                C154037 +
            ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
                C153897) *
               C154094 -
           ((C19473 * C154058 + C19474 * C2875 + (C19520 + C19521) * C2874) *
                C153897 +
            (C12477 * C154058 + C19483 * C2875 + (C19519 + C19518) * C2874) *
                C154037) *
               C154095 +
           (((C19521 + C19520) * C2874 + C19484 * C2875 + C19485 * C154058) *
                C154037 +
            ((C23093 + C23094) * C2874 + (C19522 + C19523) * C2875 +
             (C19524 + C19525) * C154058) *
                C153897) *
               C2602) *
              C154021 +
          ((((C20533 + C20534) * C2874 + C20502 * C2875 + C20503 * C154058) *
                C154037 +
            ((C21325 + C21326) * C2874 + (C20535 + C20536) * C2875 +
             (C20537 + C20538) * C154058) *
                C153897) *
               C154095 -
           ((C19816 * C154058 + C20520 * C2875 + (C20534 + C20533) * C2874) *
                C153897 +
            (C12267 * C154058 + (C11786 + C11787) * C2875 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C2874) *
                C154037) *
               C154094 -
           (((C11439 * C6369 - C11440 * C6363 - C11439 * C6370 +
              C153855 * C6381 + C11437 * C6371 - C11438 * C6364 -
              C11437 * C6372 + C154035 * C6382) *
                 C154058 +
             (C11439 * C6373 - C11440 * C6365 - C11439 * C6374 +
              C153855 * C6383 + C11437 * C6375 - C11438 * C6366 -
              C11437 * C6376 + C154035 * C6384) *
                 C2875 +
             (C11439 * C6377 - C11440 * C6367 - C11439 * C6378 +
              C153855 * C6385 + C11437 * C6379 - C11438 * C6368 -
              C11437 * C6380 + C154035 * C6386) *
                 C2874) *
                C153897 +
            ((C20538 + C20537) * C154058 + (C20536 + C20535) * C2875 +
             (C21326 + C21325) * C2874) *
                C154037) *
               C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C153638 * C63394 +
            (C19518 + C19519) * C153638 * C63395 + C67338 * C63396 +
            C67342 * C154051) *
               C154094 -
           (C69712 * C154051 + C69703 * C63396 +
            (C19520 + C19521) * C153638 * C63395 +
            (C19519 + C19518) * C153638 * C63394) *
               C154095 +
           (C67338 * C63394 + C67342 * C63395 +
            (C62297 + C62298) * C153638 * C63396 +
            (C69717 + C69718) * C153638 * C154051) *
               C2602) *
              C154021 +
          (((C20533 + C20534) * C153638 * C63394 +
            (C21325 + C21326) * C153638 * C63395 +
            (C60525 + C60526) * C153638 * C63396 +
            (C68522 + C68523) * C153638 * C154051) *
               C154095 -
           (C68519 * C154051 + C68516 * C63396 +
            (C20534 + C20533) * C153638 * C63395 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C153638 * C63394) *
               C154094 -
           ((C11439 * C34031 - C11440 * C34029 - C11439 * C34032 +
             C153855 * C34035 + C11437 * C34033 - C11438 * C34030 -
             C11437 * C34034 + C154035 * C34036) *
                C153638 * C154051 +
            (C68523 + C68522) * C153638 * C63396 + C68519 * C63395 +
            C68516 * C63394) *
               C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C11437 * C144 - C11438 * C136 - C11437 * C145 +
                  C154035 * C160 + C11439 * C357 - C11440 * C341 -
                  C11439 * C358 + C153855 * C377) *
                     C2874 +
                 (C11502 + C11503) * C2875 + C11512 * C154058) *
                    C154037 +
                ((C19518 + C19519) * C2874 + C19472 * C2875 +
                 C18855 * C154058) *
                    C153897) *
                   C2086 -
               ((C19473 * C154058 + C19474 * C2875 +
                 (C19520 + C19521) * C2874) *
                    C153897 +
                (C12477 * C154058 + C19483 * C2875 +
                 (C19519 + C19518) * C2874) *
                    C154037) *
                   C153775) *
                  C153695 * C1281 +
              (((C19472 * C2874 + C18855 * C2875 + C20107 * C154058) * C154037 +
                (C19484 * C2874 + C19485 * C2875 +
                 (C12070 + C12071) * C154058) *
                    C153897) *
                   C153775 -
               ((C12476 * C154058 + C12477 * C2875 + C19483 * C2874) * C153897 +
                (C11515 * C154058 + (C11505 + C11504) * C2875 +
                 (C11503 + C11502) * C2874) *
                    C154037) *
                   C2086) *
                  C153695 * C1282 +
              (((C11512 * C2874 + C11513 * C2875 +
                 (C11509 + C11508) * C154058) *
                    C154037 +
                (C18855 * C2874 + C20107 * C2875 +
                 (C12490 + C12491) * C154058) *
                    C153897) *
                   C2086 -
               (((C11439 * C1518 - C11440 * C1513 - C11439 * C1519 +
                  C153855 * C1528 + C11437 * C596 - C11438 * C575 -
                  C11437 * C597 + C154035 * C611) *
                     C154058 +
                 (C12071 + C12070) * C2875 + C19473 * C2874) *
                    C153897 +
                ((C12491 + C12490) * C154058 + C12476 * C2875 +
                 C12477 * C2874) *
                    C154037) *
                   C153775) *
                  C153695 * C1283) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C11437 * C144 - C11438 * C136 - C11437 * C145 +
                  C154035 * C160 + C11439 * C357 - C11440 * C341 -
                  C11439 * C358 + C153855 * C377) *
                     C2874 +
                 (C11502 + C11503) * C2875 + C11512 * C154058) *
                    C154037 +
                ((C19518 + C19519) * C2874 + C19472 * C2875 +
                 C18855 * C154058) *
                    C153897) *
                   C2086 -
               ((C19473 * C154058 + C19474 * C2875 +
                 (C19520 + C19521) * C2874) *
                    C153897 +
                (C12477 * C154058 + C19483 * C2875 +
                 (C19519 + C19518) * C2874) *
                    C154037) *
                   C153775) *
                  C332 +
              ((((C20533 + C20534) * C2874 + C20502 * C2875 +
                 C20503 * C154058) *
                    C154037 +
                ((C21325 + C21326) * C2874 + (C20535 + C20536) * C2875 +
                 (C20537 + C20538) * C154058) *
                    C153897) *
                   C153775 -
               ((C19816 * C154058 + C20520 * C2875 +
                 (C20534 + C20533) * C2874) *
                    C153897 +
                (C12267 * C154058 + (C11786 + C11787) * C2875 +
                 (C11439 * C359 - C11440 * C342 - C11439 * C360 +
                  C153855 * C378 + C11437 * C357 - C11438 * C341 -
                  C11437 * C358 + C154035 * C377) *
                     C2874) *
                    C154037) *
                   C2086) *
                  C333 +
              ((((C11437 * C359 - C11438 * C342 - C11437 * C360 +
                  C154035 * C378 + C11439 * C1384 - C11440 * C1375 -
                  C11439 * C1385 + C153855 * C1390) *
                     C2874 +
                 (C11788 + C11789) * C2875 + (C11790 + C11791) * C154058) *
                    C154037 +
                ((C22305 + C22306) * C2874 + (C19170 + C19171) * C2875 +
                 (C19172 + C19173) * C154058) *
                    C153897) *
                   C2086 -
               (((C11439 * C5034 - C11440 * C5031 - C11439 * C5035 +
                  C153855 * C5040 + C11437 * C3515 - C11438 * C3509 -
                  C11437 * C3516 + C154035 * C3521) *
                     C154058 +
                 (C11439 * C5036 - C11440 * C5032 - C11439 * C5037 +
                  C153855 * C5041 + C11437 * C3513 - C11438 * C3508 -
                  C11437 * C3514 + C154035 * C3520) *
                     C2875 +
                 (C11439 * C5038 - C11440 * C5033 - C11439 * C5039 +
                  C153855 * C5042 + C11437 * C3511 - C11438 * C3507 -
                  C11437 * C3512 + C154035 * C3519) *
                     C2874) *
                    C153897 +
                ((C19173 + C19172) * C154058 + (C19171 + C19170) * C2875 +
                 (C22306 + C22305) * C2874) *
                    C154037) *
                   C153775) *
                  C334) *
             C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C2874 +
            (C11502 + C11503) * C2875 + C11512 * C154058) *
               C154037 +
           ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
               C153897) *
              C2292 -
          ((C19473 * C154058 + C19474 * C2875 + (C19520 + C19521) * C2874) *
               C153897 +
           (C12477 * C154058 + C19483 * C2875 + (C19519 + C19518) * C2874) *
               C154037) *
              C2293 +
          (((C19521 + C19520) * C2874 + C19484 * C2875 + C19485 * C154058) *
               C154037 +
           ((C23093 + C23094) * C2874 + (C19522 + C19523) * C2875 +
            (C19524 + C19525) * C154058) *
               C153897) *
              C2294 -
          (((C11439 * C9202 - C11440 * C9199 - C11439 * C9203 +
             C153855 * C9208 + C11437 * C7748 - C11438 * C7742 -
             C11437 * C7749 + C154035 * C7754) *
                C154058 +
            (C11439 * C9204 - C11440 * C9200 - C11439 * C9205 +
             C153855 * C9209 + C11437 * C7746 - C11438 * C7741 -
             C11437 * C7747 + C154035 * C7753) *
                C2875 +
            (C11439 * C9206 - C11440 * C9201 - C11439 * C9207 +
             C153855 * C9210 + C11437 * C7744 - C11438 * C7740 -
             C11437 * C7745 + C154035 * C7752) *
                C2874) *
               C153897 +
           ((C19525 + C19524) * C154058 + (C19523 + C19522) * C2875 +
            (C23094 + C23093) * C2874) *
               C154037) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C153638 * C154037 +
            (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
               C2086 -
           ((C44397 + C44398 + C44399 + C44400) * C153638 * C153897 +
            (C44396 + C44395 + C44394 + C44393) * C153638 * C154037) *
               C153775) *
              C153695 * C1281 +
          (((C35511 + C35510 + C35509 + C35508) * C153638 * C154037 +
            (C35512 + C35513 + C35514 + C35515) * C153638 * C153897) *
               C153775 -
           ((C35508 + C35509 + C35510 + C35511) * C153638 * C153897 +
            (C35007 + C35006 + C35005 + C35004) * C153638 * C154037) *
               C2086) *
              C153695 * C1282 +
          (((C35011 + C35010 + C35009 + C35008) * C153638 * C154037 +
            (C35956 + C35957 + C35958 + C35959) * C153638 * C153897) *
               C2086 -
           ((C34929 * C5034 - C34930 * C5031 - C34929 * C5035 +
             C154044 * C5040 + C34927 * C3515 - C34928 * C3509 -
             C34927 * C3516 + C34919 * C3521 + C34925 * C1522 - C34926 * C1515 -
             C34925 * C1523 + C34918 * C1530 + C34923 * C592 - C34924 * C573 -
             C34923 * C593 + C34917 * C609) *
                C153638 * C153897 +
            (C35959 + C35958 + C35957 + C35956) * C153638 * C154037) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C153638 * C154037 +
            (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
               C2086 -
           ((C44397 + C44398 + C44399 + C44400) * C153638 * C153897 +
            (C44396 + C44395 + C44394 + C44393) * C153638 * C154037) *
               C153775) *
              C332 +
          (((C45071 + C45072 + C45073 + C45074) * C153638 * C154037 +
            (C45617 + C45618 + C45619 + C45620) * C153638 * C153897) *
               C153775 -
           ((C45074 + C45073 + C45072 + C45071) * C153638 * C153897 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C153638 * C154037) *
               C2086) *
              C333 +
          (((C34923 * C359 - C34924 * C342 - C34923 * C360 + C34917 * C378 +
             C34925 * C1384 - C34926 * C1375 - C34925 * C1385 + C34918 * C1390 +
             C34927 * C3193 - C34928 * C3189 - C34927 * C3194 + C34919 * C3201 +
             C34929 * C4808 - C34930 * C4803 - C34929 * C4809 +
             C154044 * C4812) *
                C153638 * C154037 +
            (C46291 + C46292 + C46293 + C46294) * C153638 * C153897) *
               C2086 -
           ((C34929 * C29443 - C34930 * C29442 - C34929 * C29444 +
             C154044 * C29445 + C34927 * C28692 - C34928 * C28690 -
             C34927 * C28693 + C34919 * C28696 + C34925 * C5038 -
             C34926 * C5033 - C34925 * C5039 + C34918 * C5042 + C34923 * C3511 -
             C34924 * C3507 - C34923 * C3512 + C34917 * C3519) *
                C153638 * C153897 +
            (C46294 + C46293 + C46292 + C46291) * C153638 * C154037) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
            C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
            C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
            C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
            C154044 * C1390) *
               C153638 * C154037 +
           (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
              C2292 -
          ((C44397 + C44398 + C44399 + C44400) * C153638 * C153897 +
           (C44396 + C44395 + C44394 + C44393) * C153638 * C154037) *
              C2293 +
          ((C44400 + C44399 + C44398 + C44397) * C153638 * C154037 +
           (C46837 + C46838 + C46839 + C46840) * C153638 * C153897) *
              C2294 -
          ((C34929 * C32652 - C34930 * C32651 - C34929 * C32653 +
            C154044 * C32654 + C34927 * C31180 - C34928 * C31178 -
            C34927 * C31181 + C34919 * C31184 + C34925 * C9206 -
            C34926 * C9201 - C34925 * C9207 + C34918 * C9210 + C34923 * C7744 -
            C34924 * C7740 - C34923 * C7745 + C34917 * C7752) *
               C153638 * C153897 +
           (C46840 + C46839 + C46838 + C46837) * C153638 * C154037) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C153638 * C63394 +
            (C19518 + C19519) * C153638 * C63395 + C67338 * C63396 +
            C67342 * C154051) *
               C2086 -
           ((C62298 + C62297) * C153638 * C154051 + C62282 * C153638 * C63396 +
            (C19520 + C19521) * C153638 * C63395 +
            (C19519 + C19518) * C153638 * C63394) *
               C153775) *
              C153695 * C1281 +
          ((C19472 * C153638 * C63394 + C19484 * C153638 * C63395 +
            C58733 * C153638 * C63396 + (C58751 + C58752) * C153638 * C154051) *
               C153775 -
           (C67340 * C154051 + C67341 * C63396 + C19483 * C153638 * C63395 +
            (C11503 + C11502) * C153638 * C63394) *
               C2086) *
              C153695 * C1282 +
          ((C11512 * C153638 * C63394 + C18855 * C153638 * C63395 +
            C19485 * C153638 * C63396 + (C19524 + C19525) * C153638 * C154051) *
               C2086 -
           ((C11439 * C9202 - C11440 * C9199 - C11439 * C9203 +
             C153855 * C9208 + C11437 * C7748 - C11438 * C7742 -
             C11437 * C7749 + C154035 * C7754) *
                C153638 * C154051 +
            (C19525 + C19524) * C153638 * C63396 + C19473 * C153638 * C63395 +
            C12477 * C153638 * C63394) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C153638 * C63394 +
            (C19518 + C19519) * C153638 * C63395 + C67338 * C63396 +
            C67342 * C154051) *
               C2086 -
           ((C62298 + C62297) * C153638 * C154051 + C62282 * C153638 * C63396 +
            (C19520 + C19521) * C153638 * C63395 +
            (C19519 + C19518) * C153638 * C63394) *
               C153775) *
              C332 +
          (((C20533 + C20534) * C153638 * C63394 +
            (C21325 + C21326) * C153638 * C63395 +
            (C60525 + C60526) * C153638 * C63396 +
            (C68522 + C68523) * C153638 * C154051) *
               C153775 -
           (C68519 * C154051 + C68516 * C63396 +
            (C20534 + C20533) * C153638 * C63395 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C153638 * C63394) *
               C2086) *
              C333 +
          (((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
             C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
             C153855 * C1390) *
                C153638 * C63394 +
            (C22305 + C22306) * C153638 * C63395 +
            (C61505 + C61506) * C153638 * C63396 +
            (C69182 + C69183) * C153638 * C154051) *
               C2086 -
           ((C11439 * C32652 - C11440 * C32651 - C11439 * C32653 +
             C153855 * C32654 + C11437 * C31180 - C11438 * C31178 -
             C11437 * C31181 + C154035 * C31184) *
                C153638 * C154051 +
            (C69183 + C69182) * C153638 * C63396 +
            (C61506 + C61505) * C153638 * C63395 +
            (C22306 + C22305) * C153638 * C63394) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
            C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
               C153638 * C63394 +
           (C19518 + C19519) * C153638 * C63395 + C67338 * C63396 +
           C67342 * C154051) *
              C2292 -
          (C69712 * C154051 + C69703 * C63396 +
           (C19520 + C19521) * C153638 * C63395 +
           (C19519 + C19518) * C153638 * C63394) *
              C2293 +
          (C67338 * C63394 + C67342 * C63395 +
           (C62297 + C62298) * C153638 * C63396 +
           (C69717 + C69718) * C153638 * C154051) *
              C2294 -
          ((C11439 * C56762 - C11440 * C56761 - C11439 * C56763 +
            C153855 * C56764 + C11437 * C55969 - C11438 * C55967 -
            C11437 * C55970 + C154035 * C55973) *
               C153638 * C154051 +
           (C69718 + C69717) * C153638 * C63396 + C69712 * C63395 +
           C69703 * C63394) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[178] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C153638 * C154037 +
            (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
               C154094 -
           ((C44397 + C44398 + C44399 + C44400) * C153638 * C153897 +
            (C44396 + C44395 + C44394 + C44393) * C153638 * C154037) *
               C154095 +
           ((C44400 + C44399 + C44398 + C44397) * C153638 * C154037 +
            (C46837 + C46838 + C46839 + C46840) * C153638 * C153897) *
               C2602) *
              C153695 * C154013 +
          (((C35511 + C35510 + C35509 + C35508) * C153638 * C154037 +
            (C35512 + C35513 + C35514 + C35515) * C153638 * C153897) *
               C154095 -
           ((C35508 + C35509 + C35510 + C35511) * C153638 * C153897 +
            (C35007 + C35006 + C35005 + C35004) * C153638 * C154037) *
               C154094 -
           ((C34929 * C32003 - C34930 * C32002 - C34929 * C32004 +
             C154044 * C32005 + C34927 * C6373 - C34928 * C6365 -
             C34927 * C6374 + C34919 * C6383 + C34925 * C6375 - C34926 * C6366 -
             C34925 * C6376 + C34918 * C6384 + C34923 * C2307 - C34924 * C2299 -
             C34923 * C2308 + C34917 * C2314) *
                C153638 * C153897 +
            (C35515 + C35514 + C35513 + C35512) * C153638 * C154037) *
               C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C2874 +
             (C11502 + C11503) * C2875 + C11512 * C154058) *
                C154037 +
            ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
                C153897) *
               C154094 -
           ((C19473 * C154058 + C19474 * C2875 + (C19520 + C19521) * C2874) *
                C153897 +
            (C12477 * C154058 + C19483 * C2875 + (C19519 + C19518) * C2874) *
                C154037) *
               C154095 +
           (((C19521 + C19520) * C2874 + C19484 * C2875 + C19485 * C154058) *
                C154037 +
            ((C23093 + C23094) * C2874 + (C19522 + C19523) * C2875 +
             (C19524 + C19525) * C154058) *
                C153897) *
               C2602) *
              C153695 * C154013 +
          (((C19472 * C2874 + C18855 * C2875 + C20107 * C154058) * C154037 +
            (C19484 * C2874 + C19485 * C2875 + (C12070 + C12071) * C154058) *
                C153897) *
               C154095 -
           ((C12476 * C154058 + C12477 * C2875 + C19483 * C2874) * C153897 +
            (C11515 * C154058 + (C11505 + C11504) * C2875 +
             (C11503 + C11502) * C2874) *
                C154037) *
               C154094 -
           (((C11439 * C8574 - C11440 * C8573 - C11439 * C8575 +
              C153855 * C8576 + C11437 * C2303 - C11438 * C2297 -
              C11437 * C2304 + C154035 * C2312) *
                 C154058 +
             (C19525 + C19524) * C2875 + (C19523 + C19522) * C2874) *
                C153897 +
            ((C12071 + C12070) * C154058 + C19473 * C2875 + C19474 * C2874) *
                C154037) *
               C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C153638 * C63394 +
            (C19518 + C19519) * C153638 * C63395 + C67338 * C63396 +
            C67342 * C154051) *
               C154094 -
           (C69712 * C154051 + C69703 * C63396 +
            (C19520 + C19521) * C153638 * C63395 +
            (C19519 + C19518) * C153638 * C63394) *
               C154095 +
           (C67338 * C63394 + C67342 * C63395 +
            (C62297 + C62298) * C153638 * C63396 +
            (C69717 + C69718) * C153638 * C154051) *
               C2602) *
              C153695 * C154013 +
          ((C19472 * C153638 * C63394 + C19484 * C153638 * C63395 +
            C58733 * C153638 * C63396 + (C58751 + C58752) * C153638 * C154051) *
               C154095 -
           (C67340 * C154051 + C67341 * C63396 + C19483 * C153638 * C63395 +
            (C11503 + C11502) * C153638 * C63394) *
               C154094 -
           ((C11439 * C56410 - C11440 * C56409 - C11439 * C56411 +
             C153855 * C56412 + C11437 * C10556 - C11438 * C10552 -
             C11437 * C10557 + C154035 * C10561) *
                C153638 * C154051 +
            (C58752 + C58751) * C153638 * C63396 + C67340 * C63395 +
            C67341 * C63394) *
               C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C2874 +
             (C11502 + C11503) * C2875 + C11512 * C154058) *
                C154037 +
            ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
                C153897) *
               C2086 -
           ((C19473 * C154058 + C19474 * C2875 + (C19520 + C19521) * C2874) *
                C153897 +
            (C12477 * C154058 + C19483 * C2875 + (C19519 + C19518) * C2874) *
                C154037) *
               C153775) *
              C332 +
          ((((C20533 + C20534) * C2874 + C20502 * C2875 + C20503 * C154058) *
                C154037 +
            ((C21325 + C21326) * C2874 + (C20535 + C20536) * C2875 +
             (C20537 + C20538) * C154058) *
                C153897) *
               C153775 -
           ((C19816 * C154058 + C20520 * C2875 + (C20534 + C20533) * C2874) *
                C153897 +
            (C12267 * C154058 + (C11786 + C11787) * C2875 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C2874) *
                C154037) *
               C2086) *
              C333 +
          ((((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
              C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
              C153855 * C1390) *
                 C2874 +
             (C11788 + C11789) * C2875 + (C11790 + C11791) * C154058) *
                C154037 +
            ((C22305 + C22306) * C2874 + (C19170 + C19171) * C2875 +
             (C19172 + C19173) * C154058) *
                C153897) *
               C2086 -
           (((C11439 * C5034 - C11440 * C5031 - C11439 * C5035 +
              C153855 * C5040 + C11437 * C3515 - C11438 * C3509 -
              C11437 * C3516 + C154035 * C3521) *
                 C154058 +
             (C11439 * C5036 - C11440 * C5032 - C11439 * C5037 +
              C153855 * C5041 + C11437 * C3513 - C11438 * C3508 -
              C11437 * C3514 + C154035 * C3520) *
                 C2875 +
             (C11439 * C5038 - C11440 * C5033 - C11439 * C5039 +
              C153855 * C5042 + C11437 * C3511 - C11438 * C3507 -
              C11437 * C3512 + C154035 * C3519) *
                 C2874) *
                C153897 +
            ((C19173 + C19172) * C154058 + (C19171 + C19170) * C2875 +
             (C22306 + C22305) * C2874) *
                C154037) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C2874 +
             (C11502 + C11503) * C2875 + C11512 * C154058) *
                C154037 +
            ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
                C153897) *
               C2086 -
           ((C19473 * C154058 + C19474 * C2875 + (C19520 + C19521) * C2874) *
                C153897 +
            (C12477 * C154058 + C19483 * C2875 + (C19519 + C19518) * C2874) *
                C154037) *
               C153775) *
              C153695 * C1281 +
          (((C19472 * C2874 + C18855 * C2875 + C20107 * C154058) * C154037 +
            (C19484 * C2874 + C19485 * C2875 + (C12070 + C12071) * C154058) *
                C153897) *
               C153775 -
           ((C12476 * C154058 + C12477 * C2875 + C19483 * C2874) * C153897 +
            (C11515 * C154058 + (C11505 + C11504) * C2875 +
             (C11503 + C11502) * C2874) *
                C154037) *
               C2086) *
              C153695 * C1282 +
          (((C11512 * C2874 + C11513 * C2875 + (C11509 + C11508) * C154058) *
                C154037 +
            (C18855 * C2874 + C20107 * C2875 + (C12490 + C12491) * C154058) *
                C153897) *
               C2086 -
           (((C11439 * C1518 - C11440 * C1513 - C11439 * C1519 +
              C153855 * C1528 + C11437 * C596 - C11438 * C575 - C11437 * C597 +
              C154035 * C611) *
                 C154058 +
             (C12071 + C12070) * C2875 + C19473 * C2874) *
                C153897 +
            ((C12491 + C12490) * C154058 + C12476 * C2875 + C12477 * C2874) *
                C154037) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C153638 * C154037 +
            (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
               C2086 -
           ((C44397 + C44398 + C44399 + C44400) * C153638 * C153897 +
            (C44396 + C44395 + C44394 + C44393) * C153638 * C154037) *
               C153775) *
              C153695 * C1281 +
          (((C35511 + C35510 + C35509 + C35508) * C153638 * C154037 +
            (C35512 + C35513 + C35514 + C35515) * C153638 * C153897) *
               C153775 -
           ((C35508 + C35509 + C35510 + C35511) * C153638 * C153897 +
            (C35007 + C35006 + C35005 + C35004) * C153638 * C154037) *
               C2086) *
              C153695 * C1282 +
          (((C35011 + C35010 + C35009 + C35008) * C153638 * C154037 +
            (C35956 + C35957 + C35958 + C35959) * C153638 * C153897) *
               C2086 -
           ((C34929 * C5034 - C34930 * C5031 - C34929 * C5035 +
             C154044 * C5040 + C34927 * C3515 - C34928 * C3509 -
             C34927 * C3516 + C34919 * C3521 + C34925 * C1522 - C34926 * C1515 -
             C34925 * C1523 + C34918 * C1530 + C34923 * C592 - C34924 * C573 -
             C34923 * C593 + C34917 * C609) *
                C153638 * C153897 +
            (C35959 + C35958 + C35957 + C35956) * C153638 * C154037) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C153638 * C154037 +
            (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
               C2086 -
           ((C44397 + C44398 + C44399 + C44400) * C153638 * C153897 +
            (C44396 + C44395 + C44394 + C44393) * C153638 * C154037) *
               C153775) *
              C332 +
          (((C45071 + C45072 + C45073 + C45074) * C153638 * C154037 +
            (C45617 + C45618 + C45619 + C45620) * C153638 * C153897) *
               C153775 -
           ((C45074 + C45073 + C45072 + C45071) * C153638 * C153897 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C153638 * C154037) *
               C2086) *
              C333 +
          (((C34923 * C359 - C34924 * C342 - C34923 * C360 + C34917 * C378 +
             C34925 * C1384 - C34926 * C1375 - C34925 * C1385 + C34918 * C1390 +
             C34927 * C3193 - C34928 * C3189 - C34927 * C3194 + C34919 * C3201 +
             C34929 * C4808 - C34930 * C4803 - C34929 * C4809 +
             C154044 * C4812) *
                C153638 * C154037 +
            (C46291 + C46292 + C46293 + C46294) * C153638 * C153897) *
               C2086 -
           ((C34929 * C29443 - C34930 * C29442 - C34929 * C29444 +
             C154044 * C29445 + C34927 * C28692 - C34928 * C28690 -
             C34927 * C28693 + C34919 * C28696 + C34925 * C5038 -
             C34926 * C5033 - C34925 * C5039 + C34918 * C5042 + C34923 * C3511 -
             C34924 * C3507 - C34923 * C3512 + C34917 * C3519) *
                C153638 * C153897 +
            (C46294 + C46293 + C46292 + C46291) * C153638 * C154037) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C153638 * C63394 +
            (C19518 + C19519) * C153638 * C63395 + C67338 * C63396 +
            C67342 * C154051) *
               C2086 -
           ((C62298 + C62297) * C153638 * C154051 + C62282 * C153638 * C63396 +
            (C19520 + C19521) * C153638 * C63395 +
            (C19519 + C19518) * C153638 * C63394) *
               C153775) *
              C153695 * C1281 +
          ((C19472 * C153638 * C63394 + C19484 * C153638 * C63395 +
            C58733 * C153638 * C63396 + (C58751 + C58752) * C153638 * C154051) *
               C153775 -
           (C67340 * C154051 + C67341 * C63396 + C19483 * C153638 * C63395 +
            (C11503 + C11502) * C153638 * C63394) *
               C2086) *
              C153695 * C1282 +
          ((C11512 * C153638 * C63394 + C18855 * C153638 * C63395 +
            C19485 * C153638 * C63396 + (C19524 + C19525) * C153638 * C154051) *
               C2086 -
           ((C11439 * C9202 - C11440 * C9199 - C11439 * C9203 +
             C153855 * C9208 + C11437 * C7748 - C11438 * C7742 -
             C11437 * C7749 + C154035 * C7754) *
                C153638 * C154051 +
            (C19525 + C19524) * C153638 * C63396 + C19473 * C153638 * C63395 +
            C12477 * C153638 * C63394) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C153638 * C63394 +
            (C19518 + C19519) * C153638 * C63395 + C67338 * C63396 +
            C67342 * C154051) *
               C2086 -
           ((C62298 + C62297) * C153638 * C154051 + C62282 * C153638 * C63396 +
            (C19520 + C19521) * C153638 * C63395 +
            (C19519 + C19518) * C153638 * C63394) *
               C153775) *
              C332 +
          (((C20533 + C20534) * C153638 * C63394 +
            (C21325 + C21326) * C153638 * C63395 +
            (C60525 + C60526) * C153638 * C63396 +
            (C68522 + C68523) * C153638 * C154051) *
               C153775 -
           (C68519 * C154051 + C68516 * C63396 +
            (C20534 + C20533) * C153638 * C63395 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C153638 * C63394) *
               C2086) *
              C333 +
          (((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
             C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
             C153855 * C1390) *
                C153638 * C63394 +
            (C22305 + C22306) * C153638 * C63395 +
            (C61505 + C61506) * C153638 * C63396 +
            (C69182 + C69183) * C153638 * C154051) *
               C2086 -
           ((C11439 * C32652 - C11440 * C32651 - C11439 * C32653 +
             C153855 * C32654 + C11437 * C31180 - C11438 * C31178 -
             C11437 * C31181 + C154035 * C31184) *
                C153638 * C154051 +
            (C69183 + C69182) * C153638 * C63396 +
            (C61506 + C61505) * C153638 * C63395 +
            (C22306 + C22305) * C153638 * C63394) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                    C122 +
                C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                   C153810 * C153711 * C154021 -
               (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
                (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                    C122) *
                   C153810 * C153711 * C153747) *
                  C154090 +
              ((C437 * C122 + C436 * C123 + C435 * C124 + C434 * C125 +
                C808 * C126) *
                   C153810 * C153711 * C153747 -
               (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
                C205 * C122) *
                   C153810 * C153711 * C154021) *
                  C154091 +
              ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125 +
                C210 * C126) *
                   C153810 * C153711 * C154021 -
               ((C134 * C798 - C135 * C797 - C134 * C799 + C153792 * C800) *
                    C126 +
                C808 * C125 + C434 * C124 + C435 * C123 + C436 * C122) *
                   C153810 * C153711 * C153747) *
                  C796) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
                 C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
                 C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                    C2874 +
                (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
                   C153810 * C153711 * C154021 -
               (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
                (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 +
                 C154071 * C1390 + C2879 * C359 - C2880 * C342 - C2879 * C360 +
                 C154097 * C378 + C2877 * C357 - C2878 * C341 - C2877 * C358 +
                 C154109 * C377) *
                    C2874) *
                   C153810 * C153711 * C153747) *
                  C154090 +
              (((C3283 + C3282 + C3281) * C2874 +
                (C3280 + C3279 + C3278) * C2875 +
                (C3846 + C3847 + C3848) * C154058) *
                   C153810 * C153711 * C153747 -
               (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
                (C2958 + C2957 + C2956) * C2874) *
                   C153810 * C153711 * C154021) *
                  C154091 +
              ((C2970 * C2874 + (C2964 + C2963 + C2962) * C2875 +
                (C2965 + C2966 + C2967) * C154058) *
                   C153810 * C153711 * C154021 -
               ((C2881 * C1376 - C2882 * C1371 - C2881 * C1377 +
                 C154071 * C1386 + C2879 * C367 - C2880 * C346 - C2879 * C368 +
                 C154097 * C382 + C2877 * C349 - C2878 * C337 - C2877 * C350 +
                 C154109 * C373) *
                    C154058 +
                (C3848 + C3847 + C3846) * C2875 + C3839 * C2874) *
                   C153810 * C153711 * C153747) *
                  C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C2874 +
             C205 * C2875 + C206 * C154058) *
                C154110 +
            (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
               C153711 * C154021 -
           ((C7517 * C154058 + C7518 * C2875 +
             (C134 * C1526 - C135 * C1517 - C134 * C1527 + C153792 * C1532) *
                 C2874) *
                C154074 +
            (C1155 * C154058 + C1154 * C2875 +
             (C134 * C1111 - C135 * C1105 - C134 * C1112 + C153792 * C1123) *
                 C2874) *
                C154099 +
            (C436 * C154058 + C437 * C2875 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C2874) *
                C154110) *
               C153711 * C153747) *
              C154090 +
          (((C437 * C2874 + C436 * C2875 + C435 * C154058) * C154110 +
            (C1154 * C2874 + C1155 * C2875 + C1156 * C154058) * C154099 +
            (C7518 * C2874 + C7517 * C2875 + C8059 * C154058) * C154074) *
               C153711 * C153747 -
           (C7816 * C154074 + (C7791 + C7790 + C7789) * C154099 +
            (C207 * C154058 + C206 * C2875 + C205 * C2874) * C154110) *
               C153711 * C154021) *
              C154091 +
          (((C206 * C2874 + C207 * C2875 + C208 * C154058) * C154110 +
            (C665 * C2874 + C664 * C2875 + C663 * C154058) * C154099 +
            (C668 * C2874 + C669 * C2875 + C670 * C154058) * C154074) *
               C153711 * C154021 -
           (((C134 * C1518 - C135 * C1513 - C134 * C1519 + C153792 * C1528) *
                 C154058 +
             C8059 * C2875 + C7517 * C2874) *
                C154074 +
            (C1157 * C154058 + C1156 * C2875 + C1155 * C2874) * C154099 +
            (C434 * C154058 + C435 * C2875 + C436 * C2874) * C154110) *
               C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C153711 * C154021 -
           (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C153711 * C153747) *
              C154090 +
          (((C24602 + C24601 + C24600) * C154106 +
            (C24599 + C24598 + C24597) * C154087 +
            (C25149 + C25150 + C25151) * C154058) *
               C153810 * C153711 * C153747 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C153711 * C154021) *
              C154091 +
          ((C24305 * C154106 + (C24299 + C24298 + C24297) * C154087 +
            (C24300 + C24301 + C24302) * C154058) *
               C153810 * C153711 * C154021 -
           ((C24216 * C1376 - C24217 * C1371 - C24216 * C1377 +
             C154071 * C1386 + C24214 * C367 - C24215 * C346 - C24214 * C368 +
             C24207 * C382 + C24212 * C349 - C24213 * C337 - C24212 * C350 +
             C24206 * C373) *
                C154058 +
            (C25151 + C25150 + C25149) * C154087 + C25142 * C154106) *
               C153810 * C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C153711 * C154021 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C153711 * C153747) *
              C154090 +
          ((C28428 * C355 - C28429 * C340 - C28428 * C356 + C28422 * C376 +
            C28430 * C361 - C28431 * C343 - C28430 * C362 + C28423 * C379 +
            C28432 * C1382 - C28433 * C1374 - C28432 * C1383 + C28424 * C1389 +
            C28434 * C3195 - C28435 * C3190 - C28434 * C3196 + C28425 * C3202 +
            C28436 * C4806 - C28437 * C4802 - C28436 * C4807 + C28426 * C4811) *
               C153638 * C153810 * C153711 * C153747 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C153711 * C154021) *
              C154091 +
          ((C28428 * C148 - C28429 * C138 - C28428 * C149 + C28422 * C162 +
            C28430 * C353 - C28431 * C339 - C28430 * C354 + C28423 * C375 +
            C28432 * C363 - C28433 * C344 - C28432 * C364 + C28424 * C380 +
            C28434 * C1380 - C28435 * C1373 - C28434 * C1381 + C28425 * C1388 +
            C28436 * C3197 - C28437 * C3191 - C28436 * C3198 + C28426 * C3203) *
               C153638 * C153810 * C153711 * C154021 -
           (C28436 * C4804 - C28437 * C4801 - C28436 * C4805 + C28426 * C4810 +
            C28434 * C3197 - C28435 * C3191 - C28434 * C3198 + C28425 * C3203 +
            C28432 * C1380 - C28433 * C1373 - C28432 * C1381 + C28424 * C1388 +
            C28430 * C363 - C28431 * C344 - C28430 * C364 + C28423 * C380 +
            C28428 * C353 - C28429 * C339 - C28428 * C354 + C28422 * C375) *
               C153638 * C153810 * C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C153638 * C154110 +
            (C31262 + C31263 + C31264) * C153638 * C154099 + C31276 * C154074) *
               C153711 * C154021 -
           ((C24216 * C5038 - C24217 * C5033 - C24216 * C5039 +
             C154071 * C5042 + C24214 * C3511 - C24215 * C3507 -
             C24214 * C3512 + C24207 * C3519 + C24212 * C1526 - C24213 * C1517 -
             C24212 * C1527 + C24206 * C1532) *
                C153638 * C154074 +
            (C24216 * C4383 - C24217 * C4379 - C24216 * C4384 +
             C154071 * C4391 + C24214 * C1957 - C24215 * C1948 -
             C24214 * C1958 + C24207 * C1963 + C24212 * C1111 - C24213 * C1105 -
             C24212 * C1112 + C24206 * C1123) *
                C153638 * C154099 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C153638 * C154110) *
               C153711 * C153747) *
              C154090 +
          (((C24602 + C24601 + C24600) * C153638 * C154110 +
            (C25719 + C25720 + C25721) * C153638 * C154099 +
            (C24212 * C1524 - C24213 * C1516 - C24212 * C1525 + C24206 * C1531 +
             C24214 * C3513 - C24215 * C3508 - C24214 * C3514 + C24207 * C3520 +
             C24216 * C5036 - C24217 * C5032 - C24216 * C5037 +
             C154071 * C5041) *
                C153638 * C154074) *
               C153711 * C153747 -
           (C31261 * C154074 + (C24902 + C24903 + C24904) * C153638 * C154099 +
            (C24293 + C24292 + C24291) * C153638 * C154110) *
               C153711 * C154021) *
              C154091 +
          ((C24305 * C153638 * C154110 +
            (C24901 + C24900 + C24899) * C153638 * C154099 +
            (C24908 + C24909 + C24910) * C153638 * C154074) *
               C153711 * C154021 -
           ((C24216 * C5034 - C24217 * C5031 - C24216 * C5035 +
             C154071 * C5040 + C24214 * C3515 - C24215 * C3509 -
             C24214 * C3516 + C24207 * C3521 + C24212 * C1522 - C24213 * C1515 -
             C24212 * C1523 + C24206 * C1530) *
                C153638 * C154074 +
            (C25724 + C25723 + C25722) * C153638 * C154099 +
            C25142 * C153638 * C154110) *
               C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154106 +
             C205 * C154087 + C206 * C154058) *
                C47632 +
            (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
               C153711 * C154021 -
           ((C7517 * C154058 + C7518 * C154087 + C8613 * C154106) * C154074 +
            (C1155 * C154058 + C1154 * C154087 + C8612 * C154106) * C47633 +
            (C436 * C154058 + C437 * C154087 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154106) *
                C47632) *
               C153711 * C153747) *
              C154090 +
          (((C437 * C154106 + C436 * C154087 + C435 * C154058) * C47632 +
            (C1154 * C154106 + C1155 * C154087 + C1156 * C154058) * C47633 +
            (C7518 * C154106 + C7517 * C154087 + C8059 * C154058) * C154074) *
               C153711 * C153747 -
           (C48093 * C154074 + (C48083 + C48082 + C48081) * C47633 +
            (C207 * C154058 + C206 * C154087 + C205 * C154106) * C47632) *
               C153711 * C154021) *
              C154091 +
          (((C206 * C154106 + C207 * C154087 + C208 * C154058) * C47632 +
            (C665 * C154106 + C664 * C154087 + C663 * C154058) * C47633 +
            (C668 * C154106 + C669 * C154087 + C670 * C154058) * C154074) *
               C153711 * C154021 -
           (((C134 * C1518 - C135 * C1513 - C134 * C1519 + C153792 * C1528) *
                 C154058 +
             C8059 * C154087 + C7517 * C154106) *
                C154074 +
            (C1157 * C154058 + C1156 * C154087 + C1155 * C154106) * C47633 +
            (C434 * C154058 + C435 * C154087 + C436 * C154106) * C47632) *
               C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C153638 * C47632 +
            (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
               C153711 * C154021 -
           ((C2881 * C5038 - C2882 * C5033 - C2881 * C5039 + C154071 * C5042 +
             C2879 * C3511 - C2880 * C3507 - C2879 * C3512 + C154097 * C3519 +
             C2877 * C1526 - C2878 * C1517 - C2877 * C1527 + C154109 * C1532) *
                C153638 * C154074 +
            (C2881 * C4383 - C2882 * C4379 - C2881 * C4384 + C154071 * C4391 +
             C2879 * C1957 - C2880 * C1948 - C2879 * C1958 + C154097 * C1963 +
             C2877 * C1111 - C2878 * C1105 - C2877 * C1112 + C154109 * C1123) *
                C153638 * C47633 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C153638 * C47632) *
               C153711 * C153747) *
              C154090 +
          (((C3283 + C3282 + C3281) * C153638 * C47632 +
            (C4432 + C4433 + C4434) * C153638 * C47633 +
            (C2877 * C1524 - C2878 * C1516 - C2877 * C1525 + C154109 * C1531 +
             C2879 * C3513 - C2880 * C3508 - C2879 * C3514 + C154097 * C3520 +
             C2881 * C5036 - C2882 * C5032 - C2881 * C5037 + C154071 * C5041) *
                C153638 * C154074) *
               C153711 * C153747 -
           (C52126 * C154074 + (C3599 + C3600 + C3601) * C153638 * C47633 +
            (C2958 + C2957 + C2956) * C153638 * C47632) *
               C153711 * C154021) *
              C154091 +
          ((C2970 * C153638 * C47632 +
            (C3598 + C3597 + C3596) * C153638 * C47633 +
            (C3605 + C3606 + C3607) * C153638 * C154074) *
               C153711 * C154021 -
           ((C2881 * C5034 - C2882 * C5031 - C2881 * C5035 + C154071 * C5040 +
             C2879 * C3515 - C2880 * C3509 - C2879 * C3516 + C154097 * C3521 +
             C2877 * C1522 - C2878 * C1515 - C2877 * C1523 + C154109 * C1530) *
                C153638 * C154074 +
            (C4437 + C4436 + C4435) * C153638 * C47633 +
            C3839 * C153638 * C47632) *
               C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C153638 * C55718 +
            C55976 * C55719 + C55977 * C55720 + C55978 * C55721 +
            C55979 * C55722) *
               C153711 * C154021 -
           ((C134 * C9206 - C135 * C9201 - C134 * C9207 + C153792 * C9210) *
                C153638 * C55722 +
            C9222 * C153638 * C55721 + C8613 * C153638 * C55720 +
            C8612 * C153638 * C55719 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                C153638 * C55718) *
               C153711 * C153747) *
              C154090 +
          ((C437 * C153638 * C55718 + C1154 * C153638 * C55719 +
            C7518 * C153638 * C55720 + C8614 * C153638 * C55721 +
            (C134 * C9204 - C135 * C9200 - C134 * C9205 + C153792 * C9209) *
                C153638 * C55722) *
               C153711 * C153747 -
           (C55987 * C55722 + C55986 * C55721 + C55985 * C55720 +
            C55984 * C55719 + C205 * C153638 * C55718) *
               C153711 * C154021) *
              C154091 +
          ((C206 * C153638 * C55718 + C665 * C153638 * C55719 +
            C668 * C153638 * C55720 + C7819 * C153638 * C55721 +
            C7823 * C153638 * C55722) *
               C153711 * C154021 -
           ((C134 * C9202 - C135 * C9199 - C134 * C9203 + C153792 * C9208) *
                C153638 * C55722 +
            C8615 * C153638 * C55721 + C7517 * C153638 * C55720 +
            C1155 * C153638 * C55719 + C436 * C153638 * C55718) *
               C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                     C122 +
                 C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                    C153810 * C154022 -
                (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
                 (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) *
                     C122) *
                    C153810 * C153775) *
                   C154021 +
               (((C134 * C1111 - C135 * C1105 - C134 * C1112 +
                  C153792 * C1123) *
                     C122 +
                 C1154 * C123 + C1155 * C124 + C1156 * C125 + C1157 * C126) *
                    C153810 * C153775 -
                (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
                 (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                     C122) *
                    C153810 * C154022) *
                   C153747) *
                  C335 +
              (((C666 * C122 + C665 * C123 + C664 * C124 + C663 * C125 +
                 C943 * C126) *
                    C153810 * C153775 -
                (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
                 C205 * C122) *
                    C153810 * C154022) *
                   C154021 +
               ((C437 * C122 + C436 * C123 + C435 * C124 + C434 * C125 +
                 C808 * C126) *
                    C153810 * C154022 -
                ((C134 * C1121 - C135 * C1110 - C134 * C1122 +
                  C153792 * C1128) *
                     C126 +
                 C1157 * C125 + C1156 * C124 + C1155 * C123 + C1154 * C122) *
                    C153810 * C153775) *
                   C153747) *
                  C153682) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
                  C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
                  C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                     C2874 +
                 (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
                    C153810 * C154022 -
                (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
                 (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 +
                  C154071 * C1963 + C2879 * C1111 - C2880 * C1105 -
                  C2879 * C1112 + C154097 * C1123 + C2877 * C586 -
                  C2878 * C570 - C2877 * C587 + C154109 * C606) *
                     C2874) *
                    C153810 * C153775) *
                   C154021 +
               (((C2877 * C1111 - C2878 * C1105 - C2877 * C1112 +
                  C154109 * C1123 + C2879 * C1957 - C2880 * C1948 -
                  C2879 * C1958 + C154097 * C1963 + C2881 * C4383 -
                  C2882 * C4379 - C2881 * C4384 + C154071 * C4391) *
                     C2874 +
                 (C4432 + C4433 + C4434) * C2875 +
                 (C4435 + C4436 + C4437) * C154058) *
                    C153810 * C153775 -
                (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
                 (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 +
                  C154071 * C1390 + C2879 * C359 - C2880 * C342 - C2879 * C360 +
                  C154097 * C378 + C2877 * C357 - C2878 * C341 - C2877 * C358 +
                  C154109 * C377) *
                     C2874) *
                    C153810 * C154022) *
                   C153747) *
                  C335 +
              ((((C3601 + C3600 + C3599) * C2874 +
                 (C3598 + C3597 + C3596) * C2875 +
                 (C4087 + C4088 + C4089) * C154058) *
                    C153810 * C153775 -
                (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
                 (C2958 + C2957 + C2956) * C2874) *
                    C153810 * C154022) *
                   C154021 +
               (((C3283 + C3282 + C3281) * C2874 +
                 (C3280 + C3279 + C3278) * C2875 +
                 (C3846 + C3847 + C3848) * C154058) *
                    C153810 * C154022 -
                ((C2881 * C4389 - C2882 * C4382 - C2881 * C4390 +
                  C154071 * C4394 + C2879 * C1951 - C2880 * C1945 -
                  C2879 * C1952 + C154097 * C1960 + C2877 * C1117 -
                  C2878 * C1108 - C2877 * C1118 + C154109 * C1126) *
                     C154058 +
                 (C4437 + C4436 + C4435) * C2875 +
                 (C4434 + C4433 + C4432) * C2874) *
                    C153810 * C153775) *
                   C153747) *
                  C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                  C2874 +
              C205 * C2875 + C206 * C154058) *
                 C154110 +
             (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
                C154022 -
            ((C7827 + C7828 + C7829) * C154074 +
             (C7768 + C7767 + C7826) * C154099 +
             (C7762 + C7761 + C7825) * C154110) *
                C153775) *
               C154021 +
           (((C8616 + C8582 + C8583) * C154110 +
             (C8617 + C8588 + C8589) * C154099 +
             ((C134 * C6379 - C135 * C6368 - C134 * C6380 + C153792 * C6386) *
                  C2874 +
              C8614 * C2875 + C8615 * C154058) *
                 C154074) *
                C153775 -
            ((C8589 + C8588 + C8617) * C154074 +
             (C8583 + C8582 + C8616) * C154099 +
             (C436 * C154058 + C437 * C2875 +
              (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                  C2874) *
                 C154110) *
                C154022) *
               C153747) *
              C335 +
          ((((C7789 + C7790 + C7791) * C154110 +
             (C7792 + C7793 + C7794) * C154099 +
             (C7830 + C7831 + C7832) * C154074) *
                C153775 -
            (C7816 * C154074 + (C7791 + C7790 + C7789) * C154099 +
             (C207 * C154058 + C206 * C2875 + C205 * C2874) * C154110) *
                C154022) *
               C154021 +
           (((C437 * C2874 + C436 * C2875 + C435 * C154058) * C154110 +
             (C8598 + C8599 + C8600) * C154099 +
             (C8601 + C8602 + C8603) * C154074) *
                C154022 -
            (((C134 * C8574 - C135 * C8573 - C134 * C8575 + C153792 * C8576) *
                  C154058 +
              C8615 * C2875 + C8614 * C2874) *
                 C154074 +
             (C8603 + C8602 + C8601) * C154099 +
             (C8600 + C8599 + C8598) * C154110) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154106 +
             (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
                C153810 * C154022 -
            (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
             (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
              C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
              C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
              C24212 * C587 + C24206 * C606) *
                 C154106) *
                C153810 * C153775) *
               C154021 +
           (((C24212 * C1111 - C24213 * C1105 - C24212 * C1112 +
              C24206 * C1123 + C24214 * C1957 - C24215 * C1948 -
              C24214 * C1958 + C24207 * C1963 + C24216 * C4383 -
              C24217 * C4379 - C24216 * C4384 + C154071 * C4391) *
                 C154106 +
             (C25719 + C25720 + C25721) * C154087 +
             (C25722 + C25723 + C25724) * C154058) *
                C153810 * C153775 -
            (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C154106) *
                C153810 * C154022) *
               C153747) *
              C335 +
          ((((C24904 + C24903 + C24902) * C154106 +
             (C24901 + C24900 + C24899) * C154087 +
             (C25390 + C25391 + C25392) * C154058) *
                C153810 * C153775 -
            (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
             (C24293 + C24292 + C24291) * C154106) *
                C153810 * C154022) *
               C154021 +
           (((C24602 + C24601 + C24600) * C154106 +
             (C24599 + C24598 + C24597) * C154087 +
             (C25149 + C25150 + C25151) * C154058) *
                C153810 * C154022 -
            ((C24216 * C4389 - C24217 * C4382 - C24216 * C4390 +
              C154071 * C4394 + C24214 * C1951 - C24215 * C1945 -
              C24214 * C1952 + C24207 * C1960 + C24212 * C1117 -
              C24213 * C1108 - C24212 * C1118 + C24206 * C1126) *
                 C154058 +
             (C25724 + C25723 + C25722) * C154087 +
             (C25721 + C25720 + C25719) * C154106) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
             C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
             C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
             C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
             C28436 * C3193 - C28437 * C3189 - C28436 * C3194 +
             C28426 * C3201) *
                C153638 * C153810 * C154022 -
            (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
             C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
             C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
             C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
             C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
                C153638 * C153810 * C153775) *
               C154021 +
           ((C28428 * C1111 - C28429 * C1105 - C28428 * C1112 + C28422 * C1123 +
             C28430 * C1957 - C28431 * C1948 - C28430 * C1958 + C28423 * C1963 +
             C28432 * C4383 - C28433 * C4379 - C28432 * C4384 + C28424 * C4391 +
             C28434 * C5776 - C28435 * C5771 - C28434 * C5777 + C28425 * C5780 +
             C28436 * C29106 - C28437 * C29104 - C28436 * C29107 +
             C28426 * C29110) *
                C153638 * C153810 * C153775 -
            (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
             C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
             C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
             C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
             C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
                C153638 * C153810 * C154022) *
               C153747) *
              C335 +
          (((C28428 * C584 - C28429 * C569 - C28428 * C585 + C28422 * C605 +
             C28430 * C1113 - C28431 * C1106 - C28430 * C1114 + C28423 * C1124 +
             C28432 * C1955 - C28433 * C1947 - C28432 * C1956 + C28424 * C1962 +
             C28434 * C4385 - C28435 * C4380 - C28434 * C4386 + C28425 * C4392 +
             C28436 * C5774 - C28437 * C5770 - C28436 * C5775 +
             C28426 * C5779) *
                C153638 * C153810 * C153775 -
            (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
             C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
             C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
             C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
             C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
                C153638 * C153810 * C154022) *
               C154021 +
           ((C28428 * C355 - C28429 * C340 - C28428 * C356 + C28422 * C376 +
             C28430 * C361 - C28431 * C343 - C28430 * C362 + C28423 * C379 +
             C28432 * C1382 - C28433 * C1374 - C28432 * C1383 + C28424 * C1389 +
             C28434 * C3195 - C28435 * C3190 - C28434 * C3196 + C28425 * C3202 +
             C28436 * C4806 - C28437 * C4802 - C28436 * C4807 +
             C28426 * C4811) *
                C153638 * C153810 * C154022 -
            (C28436 * C29108 - C28437 * C29105 - C28436 * C29109 +
             C28426 * C29111 + C28434 * C5774 - C28435 * C5770 -
             C28434 * C5775 + C28425 * C5779 + C28432 * C4385 - C28433 * C4380 -
             C28432 * C4386 + C28424 * C4392 + C28430 * C1955 - C28431 * C1947 -
             C28430 * C1956 + C28423 * C1962 + C28428 * C1113 - C28429 * C1106 -
             C28428 * C1114 + C28422 * C1124) *
                C153638 * C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C153638 * C154110 +
             (C31262 + C31263 + C31264) * C153638 * C154099 +
             C31276 * C154074) *
                C154022 -
            ((C31268 + C31269 + C31270) * C153638 * C154074 +
             (C31267 + C31266 + C31265) * C153638 * C154099 +
             (C31264 + C31263 + C31262) * C153638 * C154110) *
                C153775) *
               C154021 +
           (((C32061 + C32062 + C32063) * C153638 * C154110 +
             (C32064 + C32065 + C32066) * C153638 * C154099 +
             (C24212 * C6379 - C24213 * C6368 - C24212 * C6380 +
              C24206 * C6386 + C24214 * C6377 - C24215 * C6367 -
              C24214 * C6378 + C24207 * C6385 + C24216 * C30186 -
              C24217 * C30183 - C24216 * C30187 + C154071 * C30189) *
                 C153638 * C154074) *
                C153775 -
            ((C32066 + C32065 + C32064) * C153638 * C154074 +
             (C32063 + C32062 + C32061) * C153638 * C154099 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C153638 * C154110) *
                C154022) *
               C153747) *
              C335 +
          ((((C24904 + C24903 + C24902) * C153638 * C154110 +
             (C24905 + C24906 + C24907) * C153638 * C154099 +
             (C31271 + C31272 + C31273) * C153638 * C154074) *
                C153775 -
            (C31261 * C154074 + (C24902 + C24903 + C24904) * C153638 * C154099 +
             (C24293 + C24292 + C24291) * C153638 * C154110) *
                C154022) *
               C154021 +
           (((C24602 + C24601 + C24600) * C153638 * C154110 +
             (C25719 + C25720 + C25721) * C153638 * C154099 +
             (C32067 + C32068 + C32069) * C153638 * C154074) *
                C154022 -
            ((C24216 * C32003 - C24217 * C32002 - C24216 * C32004 +
              C154071 * C32005 + C24214 * C6373 - C24215 * C6365 -
              C24214 * C6374 + C24207 * C6383 + C24212 * C6375 -
              C24213 * C6366 - C24212 * C6376 + C24206 * C6384) *
                 C153638 * C154074 +
             (C32069 + C32068 + C32067) * C153638 * C154099 +
             (C25721 + C25720 + C25719) * C153638 * C154110) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                  C154106 +
              C205 * C154087 + C206 * C154058) *
                 C47632 +
             (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
                C154022 -
            ((C48078 + C48079 + C48080) * C154074 +
             (C48077 + C48076 + C48075) * C47633 +
             (C48074 + C48073 + C48072) * C47632) *
                C153775) *
               C154021 +
           (((C48826 + C48827 + C48828) * C47632 +
             (C48829 + C48830 + C48831) * C47633 +
             (C9222 * C154106 + C8614 * C154087 + C8615 * C154058) * C154074) *
                C153775 -
            ((C48831 + C48830 + C48829) * C154074 +
             (C48828 + C48827 + C48826) * C47633 +
             (C436 * C154058 + C437 * C154087 +
              (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                  C154106) *
                 C47632) *
                C154022) *
               C153747) *
              C335 +
          ((((C48081 + C48082 + C48083) * C47632 +
             (C48084 + C48085 + C48086) * C47633 +
             (C48087 + C48088 + C48089) * C154074) *
                C153775 -
            (C48093 * C154074 + (C48083 + C48082 + C48081) * C47633 +
             (C207 * C154058 + C206 * C154087 + C205 * C154106) * C47632) *
                C154022) *
               C154021 +
           (((C437 * C154106 + C436 * C154087 + C435 * C154058) * C47632 +
             (C48832 + C48833 + C48834) * C47633 +
             (C48835 + C48836 + C48837) * C154074) *
                C154022 -
            (((C134 * C8574 - C135 * C8573 - C134 * C8575 + C153792 * C8576) *
                  C154058 +
              C8615 * C154087 + C8614 * C154106) *
                 C154074 +
             (C48837 + C48836 + C48835) * C47633 +
             (C48834 + C48833 + C48832) * C47632) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C153638 * C47632 +
             (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
                C154022 -
            ((C52133 + C52134 + C52135) * C153638 * C154074 +
             (C52132 + C52131 + C52130) * C153638 * C47633 +
             (C52129 + C52128 + C52127) * C153638 * C47632) *
                C153775) *
               C154021 +
           (((C52922 + C52923 + C52924) * C153638 * C47632 +
             (C52925 + C52926 + C52927) * C153638 * C47633 +
             (C2877 * C6379 - C2878 * C6368 - C2877 * C6380 + C154109 * C6386 +
              C2879 * C6377 - C2880 * C6367 - C2879 * C6378 + C154097 * C6385 +
              C2881 * C30186 - C2882 * C30183 - C2881 * C30187 +
              C154071 * C30189) *
                 C153638 * C154074) *
                C153775 -
            ((C52927 + C52926 + C52925) * C153638 * C154074 +
             (C52924 + C52923 + C52922) * C153638 * C47633 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C153638 * C47632) *
                C154022) *
               C153747) *
              C335 +
          ((((C3601 + C3600 + C3599) * C153638 * C47632 +
             (C3602 + C3603 + C3604) * C153638 * C47633 +
             (C52136 + C52137 + C52138) * C153638 * C154074) *
                C153775 -
            (C52126 * C154074 + (C3599 + C3600 + C3601) * C153638 * C47633 +
             (C2958 + C2957 + C2956) * C153638 * C47632) *
                C154022) *
               C154021 +
           (((C3283 + C3282 + C3281) * C153638 * C47632 +
             (C4432 + C4433 + C4434) * C153638 * C47633 +
             (C52928 + C52929 + C52930) * C153638 * C154074) *
                C154022 -
            ((C2881 * C32003 - C2882 * C32002 - C2881 * C32004 +
              C154071 * C32005 + C2879 * C6373 - C2880 * C6365 - C2879 * C6374 +
              C154097 * C6383 + C2877 * C6375 - C2878 * C6366 - C2877 * C6376 +
              C154109 * C6384) *
                 C153638 * C154074 +
             (C52930 + C52929 + C52928) * C153638 * C47633 +
             (C4434 + C4433 + C4432) * C153638 * C47632) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C153638 * C55718 +
             C55976 * C55719 + C55977 * C55720 + C55978 * C55721 +
             C55979 * C55722) *
                C154022 -
            (C55998 * C55722 + C55979 * C55721 + C55978 * C55720 +
             C55977 * C55719 + C55976 * C55718) *
                C153775) *
               C154021 +
           ((C56414 * C55718 + C56415 * C55719 + C56416 * C55720 +
             C56434 * C55721 +
             (C134 * C34033 - C135 * C34030 - C134 * C34034 +
              C153792 * C34036) *
                 C153638 * C55722) *
                C153775 -
            (C56434 * C55722 + C56416 * C55721 + C56415 * C55720 +
             C56414 * C55719 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C153638 * C55718) *
                C154022) *
               C153747) *
              C335 +
          (((C55984 * C55718 + C55985 * C55719 + C55986 * C55720 +
             C55987 * C55721 + C55999 * C55722) *
                C153775 -
            (C55987 * C55722 + C55986 * C55721 + C55985 * C55720 +
             C55984 * C55719 + C205 * C153638 * C55718) *
                C154022) *
               C154021 +
           ((C437 * C153638 * C55718 + C56421 * C55719 + C56422 * C55720 +
             C56423 * C55721 + C56435 * C55722) *
                C154022 -
            ((C134 * C56410 - C135 * C56409 - C134 * C56411 +
              C153792 * C56412) *
                 C153638 * C55722 +
             C56435 * C55721 + C56423 * C55720 + C56422 * C55719 +
             C56421 * C55718) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                   C122 +
               C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                  C153810 * C153711 * C153695 * C130 -
              (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
               C205 * C122) *
                  C153810 * C153711 * C153695 * C131 +
              (C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125 +
               C210 * C126) *
                  C153810 * C153711 * C153695 * C132 -
              ((C134 * C158 - C135 * C143 - C134 * C159 + C153792 * C167) *
                   C126 +
               C210 * C125 + C209 * C124 + C208 * C123 + C207 * C122) *
                  C153810 * C153711 * C153695 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                    C122 +
                C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                   C153810 * C153711 * C332 -
               (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
                (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                    C122) *
                   C153810 * C153711 * C333 +
               ((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                    C122 +
                C438 * C123 + C439 * C124 + C440 * C125 + C441 * C126) *
                   C153810 * C153711 * C334) *
                  C335 +
              ((C437 * C122 + C436 * C123 + C435 * C124 + C434 * C125 +
                (C134 * C369 - C135 * C347 - C134 * C370 + C153792 * C383) *
                    C126) *
                   C153810 * C153711 * C333 -
               (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
                C205 * C122) *
                   C153810 * C153711 * C332 -
               ((C134 * C371 - C135 * C348 - C134 * C372 + C153792 * C384) *
                    C126 +
                C441 * C125 + C440 * C124 + C439 * C123 + C438 * C122) *
                   C153810 * C153711 * C334) *
                  C153682) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                    C122 +
                C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                   C153810 * C563 -
               (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
                (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) *
                    C122) *
                   C153810 * C564 +
               ((C134 * C588 - C135 * C571 - C134 * C589 + C153792 * C607) *
                    C122 +
                C667 * C123 + C668 * C124 + C669 * C125 + C670 * C126) *
                   C153810 * C565) *
                  C153695 * C335 +
              ((C666 * C122 + C665 * C123 + C664 * C124 + C663 * C125 +
                (C134 * C598 - C135 * C576 - C134 * C599 + C153792 * C612) *
                    C126) *
                   C153810 * C564 -
               (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
                C205 * C122) *
                   C153810 * C563 -
               ((C134 * C600 - C135 * C577 - C134 * C601 + C153792 * C613) *
                    C126 +
                C670 * C125 + C669 * C124 + C668 * C123 + C667 * C122) *
                   C153810 * C565) *
                  C153695 * C153682) -
         0.25 * std::pow(Pi, 2.5) *
             (((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
                C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
                C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                   C2874 +
               (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
                  C153810 * C153711 * C153695 * C130 -
              (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
               (C2958 + C2957 + C2956) * C2874) *
                  C153810 * C153711 * C153695 * C131 +
              (C2970 * C2874 + (C2964 + C2963 + C2962) * C2875 +
               (C2965 + C2966 + C2967) * C154058) *
                  C153810 * C153711 * C153695 * C132 -
              ((C2881 * C371 - C2882 * C348 - C2881 * C372 + C154071 * C384 +
                C2879 * C369 - C2880 * C347 - C2879 * C370 + C154097 * C383 +
                C2877 * C154 - C2878 * C141 - C2877 * C155 + C154109 * C165) *
                   C154058 +
               (C2967 + C2966 + C2965) * C2875 + C2971 * C2874) *
                  C153810 * C153711 * C153695 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
                 C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
                 C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                    C2874 +
                (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
                   C153810 * C153711 * C332 -
               ((C3278 + C3279 + C3280) * C154058 +
                (C3281 + C3282 + C3283) * C2875 +
                (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 +
                 C154071 * C1390 + C2879 * C359 - C2880 * C342 - C2879 * C360 +
                 C154097 * C378 + C2877 * C357 - C2878 * C341 - C2877 * C358 +
                 C154109 * C377) *
                    C2874) *
                   C153810 * C153711 * C333 +
               ((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
                 C2879 * C1384 - C2880 * C1375 - C2879 * C1385 +
                 C154097 * C1390 + C2881 * C3193 - C2882 * C3189 -
                 C2881 * C3194 + C154071 * C3201) *
                    C2874 +
                (C3284 + C3285 + C3286) * C2875 +
                (C3287 + C3288 + C3289) * C154058) *
                   C153810 * C153711 * C334) *
                  C335 +
              (((C3283 + C3282 + C3281) * C2874 +
                (C3280 + C3279 + C3278) * C2875 +
                (C2877 * C351 - C2878 * C338 - C2877 * C352 + C154109 * C374 +
                 C2879 * C365 - C2880 * C345 - C2879 * C366 + C154097 * C381 +
                 C2881 * C1378 - C2882 * C1372 - C2881 * C1379 +
                 C154071 * C1387) *
                    C154058) *
                   C153810 * C153711 * C333 -
               (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
                (C2958 + C2957 + C2956) * C2874) *
                   C153810 * C153711 * C332 -
               ((C2881 * C3199 - C2882 * C3192 - C2881 * C3200 +
                 C154071 * C3204 + C2879 * C1378 - C2880 * C1372 -
                 C2879 * C1379 + C154097 * C1387 + C2877 * C365 - C2878 * C345 -
                 C2877 * C366 + C154109 * C381) *
                    C154058 +
                (C3289 + C3288 + C3287) * C2875 +
                (C3286 + C3285 + C3284) * C2874) *
                   C153810 * C153711 * C334) *
                  C153682) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
                 C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
                 C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                    C2874 +
                (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
                   C153810 * C563 -
               ((C3596 + C3597 + C3598) * C154058 +
                (C3599 + C3600 + C3601) * C2875 +
                (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 +
                 C154071 * C1963 + C2879 * C1111 - C2880 * C1105 -
                 C2879 * C1112 + C154097 * C1123 + C2877 * C586 - C2878 * C570 -
                 C2877 * C587 + C154109 * C606) *
                    C2874) *
                   C153810 * C564 +
               ((C2877 * C588 - C2878 * C571 - C2877 * C589 + C154109 * C607 +
                 C2879 * C1526 - C2880 * C1517 - C2879 * C1527 +
                 C154097 * C1532 + C2881 * C3511 - C2882 * C3507 -
                 C2881 * C3512 + C154071 * C3519) *
                    C2874 +
                (C3602 + C3603 + C3604) * C2875 +
                (C3605 + C3606 + C3607) * C154058) *
                   C153810 * C565) *
                  C153695 * C335 +
              (((C3601 + C3600 + C3599) * C2874 +
                (C3598 + C3597 + C3596) * C2875 +
                (C2877 * C580 - C2878 * C567 - C2877 * C581 + C154109 * C603 +
                 C2879 * C1117 - C2880 * C1108 - C2879 * C1118 +
                 C154097 * C1126 + C2881 * C1951 - C2882 * C1945 -
                 C2881 * C1952 + C154071 * C1960) *
                    C154058) *
                   C153810 * C564 -
               (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
                (C2958 + C2957 + C2956) * C2874) *
                   C153810 * C563 -
               ((C2881 * C3517 - C2882 * C3510 - C2881 * C3518 +
                 C154071 * C3522 + C2879 * C1520 - C2880 * C1514 -
                 C2879 * C1521 + C154097 * C1529 + C2877 * C594 - C2878 * C574 -
                 C2877 * C595 + C154109 * C610) *
                    C154058 +
                (C3607 + C3606 + C3605) * C2875 +
                (C3604 + C3603 + C3602) * C2874) *
                   C153810 * C565) *
                  C153695 * C153682) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                    C2874 +
                C205 * C2875 + C206 * C154058) *
                   C154110 +
               ((C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) *
                    C2874 +
                C666 * C2875 + C665 * C154058) *
                   C154099 +
               ((C134 * C588 - C135 * C571 - C134 * C589 + C153792 * C607) *
                    C2874 +
                C667 * C2875 + C668 * C154058) *
                   C154074) *
                  C153711 * C153695 * C130 -
              ((C669 * C154058 + C668 * C2875 + C667 * C2874) * C154074 +
               (C664 * C154058 + C665 * C2875 + C666 * C2874) * C154099 +
               (C207 * C154058 + C206 * C2875 + C205 * C2874) * C154110) *
                  C153711 * C153695 * C131 +
              ((C206 * C2874 + C207 * C2875 + C208 * C154058) * C154110 +
               (C665 * C2874 + C664 * C2875 + C663 * C154058) * C154099 +
               (C668 * C2874 + C669 * C2875 + C670 * C154058) * C154074) *
                  C153711 * C153695 * C132 -
              (((C134 * C600 - C135 * C577 - C134 * C601 + C153792 * C613) *
                    C154058 +
                C670 * C2875 + C669 * C2874) *
                   C154074 +
               (C943 * C154058 + C663 * C2875 + C664 * C2874) * C154099 +
               (C209 * C154058 + C208 * C2875 + C207 * C2874) * C154110) *
                  C153711 * C153695 * C133) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                     C2874 +
                 C205 * C2875 + C206 * C154058) *
                    C154110 +
                ((C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) *
                     C2874 +
                 C666 * C2875 + C665 * C154058) *
                    C154099 +
                ((C134 * C588 - C135 * C571 - C134 * C589 + C153792 * C607) *
                     C2874 +
                 C667 * C2875 + C668 * C154058) *
                    C154074) *
                   C153711 * C332 -
               ((C7517 * C154058 + C7518 * C2875 +
                 (C134 * C1526 - C135 * C1517 - C134 * C1527 +
                  C153792 * C1532) *
                     C2874) *
                    C154074 +
                (C1155 * C154058 + C1154 * C2875 +
                 (C134 * C1111 - C135 * C1105 - C134 * C1112 +
                  C153792 * C1123) *
                     C2874) *
                    C154099 +
                (C436 * C154058 + C437 * C2875 +
                 (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                     C2874) *
                    C154110) *
                   C153711 * C333 +
               (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                     C2874 +
                 C438 * C2875 + C439 * C154058) *
                    C154110 +
                ((C134 * C1957 - C135 * C1948 - C134 * C1958 +
                  C153792 * C1963) *
                     C2874 +
                 C7519 * C2875 + C7520 * C154058) *
                    C154099 +
                ((C134 * C3511 - C135 * C3507 - C134 * C3512 +
                  C153792 * C3519) *
                     C2874 +
                 C7521 * C2875 + C7522 * C154058) *
                    C154074) *
                   C153711 * C334) *
                  C335 +
              (((C437 * C2874 + C436 * C2875 + C435 * C154058) * C154110 +
                (C1154 * C2874 + C1155 * C2875 + C1156 * C154058) * C154099 +
                (C7518 * C2874 + C7517 * C2875 +
                 (C134 * C1520 - C135 * C1514 - C134 * C1521 +
                  C153792 * C1529) *
                     C154058) *
                    C154074) *
                   C153711 * C333 -
               ((C669 * C154058 + C668 * C2875 + C667 * C2874) * C154074 +
                (C664 * C154058 + C665 * C2875 + C666 * C2874) * C154099 +
                (C207 * C154058 + C206 * C2875 + C205 * C2874) * C154110) *
                   C153711 * C332 -
               (((C134 * C3517 - C135 * C3510 - C134 * C3518 +
                  C153792 * C3522) *
                     C154058 +
                 C7522 * C2875 + C7521 * C2874) *
                    C154074 +
                ((C134 * C1951 - C135 * C1945 - C134 * C1952 +
                  C153792 * C1960) *
                     C154058 +
                 C7520 * C2875 + C7519 * C2874) *
                    C154099 +
                (C440 * C154058 + C439 * C2875 + C438 * C2874) * C154110) *
                   C153711 * C334) *
                  C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C2874 +
             C205 * C2875 + C206 * C154058) *
                C154110 +
            (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
               C563 -
           ((C7827 + C7828 + C7829) * C154074 +
            (C7768 + C7767 + C7826) * C154099 +
            (C7762 + C7761 + C7825) * C154110) *
               C564 +
           (C7834 * C154110 + (C7829 + C7828 + C7827) * C154099 +
            ((C134 * C7744 - C135 * C7740 - C134 * C7745 + C153792 * C7752) *
                 C2874 +
             C7822 * C2875 + C7823 * C154058) *
                C154074) *
               C565) *
              C153695 * C335 +
          (((C7789 + C7790 + C7791) * C154110 +
            (C7792 + C7793 + C7794) * C154099 +
            (C7830 + C7831 + C7832) * C154074) *
               C564 -
           (C7816 * C154074 + (C7791 + C7790 + C7789) * C154099 +
            (C207 * C154058 + C206 * C2875 + C205 * C2874) * C154110) *
               C563 -
           (((C134 * C7750 - C135 * C7743 - C134 * C7751 + C153792 * C7755) *
                 C154058 +
             C7823 * C2875 + C7822 * C2874) *
                C154074 +
            (C7832 + C7831 + C7830) * C154099 + C7816 * C154110) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
            C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
            C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
               C154106 +
           (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
              C153810 * C153711 * C153695 * C130 -
          (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
           (C24293 + C24292 + C24291) * C154106) *
              C153810 * C153711 * C153695 * C131 +
          (C24305 * C154106 + (C24299 + C24298 + C24297) * C154087 +
           (C24300 + C24301 + C24302) * C154058) *
              C153810 * C153711 * C153695 * C132 -
          ((C24216 * C371 - C24217 * C348 - C24216 * C372 + C154071 * C384 +
            C24214 * C369 - C24215 * C347 - C24214 * C370 + C24207 * C383 +
            C24212 * C154 - C24213 * C141 - C24212 * C155 + C24206 * C165) *
               C154058 +
           (C24302 + C24301 + C24300) * C154087 + C24306 * C154106) *
              C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C153711 * C332 -
           ((C24597 + C24598 + C24599) * C154058 +
            (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C153711 * C333 +
           ((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C154106 +
            (C24603 + C24604 + C24605) * C154087 +
            (C24606 + C24607 + C24608) * C154058) *
               C153810 * C153711 * C334) *
              C335 +
          (((C24602 + C24601 + C24600) * C154106 +
            (C24599 + C24598 + C24597) * C154087 +
            (C24212 * C351 - C24213 * C338 - C24212 * C352 + C24206 * C374 +
             C24214 * C365 - C24215 * C345 - C24214 * C366 + C24207 * C381 +
             C24216 * C1378 - C24217 * C1372 - C24216 * C1379 +
             C154071 * C1387) *
                C154058) *
               C153810 * C153711 * C333 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C153711 * C332 -
           ((C24216 * C3199 - C24217 * C3192 - C24216 * C3200 +
             C154071 * C3204 + C24214 * C1378 - C24215 * C1372 -
             C24214 * C1379 + C24207 * C1387 + C24212 * C365 - C24213 * C345 -
             C24212 * C366 + C24206 * C381) *
                C154058 +
            (C24608 + C24607 + C24606) * C154087 +
            (C24605 + C24604 + C24603) * C154106) *
               C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C563 -
           ((C24899 + C24900 + C24901) * C154058 +
            (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C564 +
           ((C24212 * C588 - C24213 * C571 - C24212 * C589 + C24206 * C607 +
             C24214 * C1526 - C24215 * C1517 - C24214 * C1527 + C24207 * C1532 +
             C24216 * C3511 - C24217 * C3507 - C24216 * C3512 +
             C154071 * C3519) *
                C154106 +
            (C24905 + C24906 + C24907) * C154087 +
            (C24908 + C24909 + C24910) * C154058) *
               C153810 * C565) *
              C153695 * C335 +
          (((C24904 + C24903 + C24902) * C154106 +
            (C24901 + C24900 + C24899) * C154087 +
            (C24212 * C580 - C24213 * C567 - C24212 * C581 + C24206 * C603 +
             C24214 * C1117 - C24215 * C1108 - C24214 * C1118 + C24207 * C1126 +
             C24216 * C1951 - C24217 * C1945 - C24216 * C1952 +
             C154071 * C1960) *
                C154058) *
               C153810 * C564 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C563 -
           ((C24216 * C3517 - C24217 * C3510 - C24216 * C3518 +
             C154071 * C3522 + C24214 * C1520 - C24215 * C1514 -
             C24214 * C1521 + C24207 * C1529 + C24212 * C594 - C24213 * C574 -
             C24212 * C595 + C24206 * C610) *
                C154058 +
            (C24910 + C24909 + C24908) * C154087 +
            (C24907 + C24906 + C24905) * C154106) *
               C153810 * C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
           C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
           C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
           C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
           C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
              C153638 * C153810 * C153711 * C153695 * C130 -
          (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
           C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
           C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
           C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
           C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
              C153638 * C153810 * C153711 * C153695 * C131 +
          (C28428 * C148 - C28429 * C138 - C28428 * C149 + C28422 * C162 +
           C28430 * C353 - C28431 * C339 - C28430 * C354 + C28423 * C375 +
           C28432 * C363 - C28433 * C344 - C28432 * C364 + C28424 * C380 +
           C28434 * C1380 - C28435 * C1373 - C28434 * C1381 + C28425 * C1388 +
           C28436 * C3197 - C28437 * C3191 - C28436 * C3198 + C28426 * C3203) *
              C153638 * C153810 * C153711 * C153695 * C132 -
          (C28436 * C3199 - C28437 * C3192 - C28436 * C3200 + C28426 * C3204 +
           C28434 * C1378 - C28435 * C1372 - C28434 * C1379 + C28425 * C1387 +
           C28432 * C365 - C28433 * C345 - C28432 * C366 + C28424 * C381 +
           C28430 * C351 - C28431 * C338 - C28430 * C352 + C28423 * C374 +
           C28428 * C150 - C28429 * C139 - C28428 * C151 + C28422 * C163) *
              C153638 * C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C153711 * C332 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C153711 * C333 +
           (C28428 * C359 - C28429 * C342 - C28428 * C360 + C28422 * C378 +
            C28430 * C1384 - C28431 * C1375 - C28430 * C1385 + C28423 * C1390 +
            C28432 * C3193 - C28433 * C3189 - C28432 * C3194 + C28424 * C3201 +
            C28434 * C4808 - C28435 * C4803 - C28434 * C4809 + C28425 * C4812 +
            C28436 * C28562 - C28437 * C28560 - C28436 * C28563 +
            C28426 * C28566) *
               C153638 * C153810 * C153711 * C334) *
              C335 +
          ((C28428 * C355 - C28429 * C340 - C28428 * C356 + C28422 * C376 +
            C28430 * C361 - C28431 * C343 - C28430 * C362 + C28423 * C379 +
            C28432 * C1382 - C28433 * C1374 - C28432 * C1383 + C28424 * C1389 +
            C28434 * C3195 - C28435 * C3190 - C28434 * C3196 + C28425 * C3202 +
            C28436 * C4806 - C28437 * C4802 - C28436 * C4807 + C28426 * C4811) *
               C153638 * C153810 * C153711 * C333 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C153711 * C332 -
           (C28436 * C28564 - C28437 * C28561 - C28436 * C28565 +
            C28426 * C28567 + C28434 * C4806 - C28435 * C4802 - C28434 * C4807 +
            C28425 * C4811 + C28432 * C3195 - C28433 * C3190 - C28432 * C3196 +
            C28424 * C3202 + C28430 * C1382 - C28431 * C1374 - C28430 * C1383 +
            C28423 * C1389 + C28428 * C361 - C28429 * C343 - C28428 * C362 +
            C28422 * C379) *
               C153638 * C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C563 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C564 +
           (C28428 * C588 - C28429 * C571 - C28428 * C589 + C28422 * C607 +
            C28430 * C1526 - C28431 * C1517 - C28430 * C1527 + C28423 * C1532 +
            C28432 * C3511 - C28433 * C3507 - C28432 * C3512 + C28424 * C3519 +
            C28434 * C5038 - C28435 * C5033 - C28434 * C5039 + C28425 * C5042 +
            C28436 * C28692 - C28437 * C28690 - C28436 * C28693 +
            C28426 * C28696) *
               C153638 * C153810 * C565) *
              C153695 * C335 +
          ((C28428 * C584 - C28429 * C569 - C28428 * C585 + C28422 * C605 +
            C28430 * C1113 - C28431 * C1106 - C28430 * C1114 + C28423 * C1124 +
            C28432 * C1955 - C28433 * C1947 - C28432 * C1956 + C28424 * C1962 +
            C28434 * C4385 - C28435 * C4380 - C28434 * C4386 + C28425 * C4392 +
            C28436 * C5774 - C28437 * C5770 - C28436 * C5775 + C28426 * C5779) *
               C153638 * C153810 * C564 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C563 -
           (C28436 * C28694 - C28437 * C28691 - C28436 * C28695 +
            C28426 * C28697 + C28434 * C5036 - C28435 * C5032 - C28434 * C5037 +
            C28425 * C5041 + C28432 * C3513 - C28433 * C3508 - C28432 * C3514 +
            C28424 * C3520 + C28430 * C1524 - C28431 * C1516 - C28430 * C1525 +
            C28423 * C1531 + C28428 * C590 - C28429 * C572 - C28428 * C591 +
            C28422 * C608) *
               C153638 * C153810 * C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
            C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
            C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
               C153638 * C154110 +
           (C24212 * C586 - C24213 * C570 - C24212 * C587 + C24206 * C606 +
            C24214 * C1111 - C24215 * C1105 - C24214 * C1112 + C24207 * C1123 +
            C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
            C154071 * C1963) *
               C153638 * C154099 +
           (C24212 * C588 - C24213 * C571 - C24212 * C589 + C24206 * C607 +
            C24214 * C1526 - C24215 * C1517 - C24214 * C1527 + C24207 * C1532 +
            C24216 * C3511 - C24217 * C3507 - C24216 * C3512 +
            C154071 * C3519) *
               C153638 * C154074) *
              C153711 * C153695 * C130 -
          ((C24907 + C24906 + C24905) * C153638 * C154074 +
           (C24902 + C24903 + C24904) * C153638 * C154099 +
           (C24293 + C24292 + C24291) * C153638 * C154110) *
              C153711 * C153695 * C131 +
          (C24305 * C153638 * C154110 +
           (C24901 + C24900 + C24899) * C153638 * C154099 +
           (C24908 + C24909 + C24910) * C153638 * C154074) *
              C153711 * C153695 * C132 -
          ((C24216 * C3517 - C24217 * C3510 - C24216 * C3518 + C154071 * C3522 +
            C24214 * C1520 - C24215 * C1514 - C24214 * C1521 + C24207 * C1529 +
            C24212 * C594 - C24213 * C574 - C24212 * C595 + C24206 * C610) *
               C153638 * C154074 +
           (C25392 + C25391 + C25390) * C153638 * C154099 +
           C24306 * C153638 * C154110) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C153638 * C154110 +
            (C24212 * C586 - C24213 * C570 - C24212 * C587 + C24206 * C606 +
             C24214 * C1111 - C24215 * C1105 - C24214 * C1112 + C24207 * C1123 +
             C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963) *
                C153638 * C154099 +
            (C24212 * C588 - C24213 * C571 - C24212 * C589 + C24206 * C607 +
             C24214 * C1526 - C24215 * C1517 - C24214 * C1527 + C24207 * C1532 +
             C24216 * C3511 - C24217 * C3507 - C24216 * C3512 +
             C154071 * C3519) *
                C153638 * C154074) *
               C153711 * C332 -
           ((C24216 * C5038 - C24217 * C5033 - C24216 * C5039 +
             C154071 * C5042 + C24214 * C3511 - C24215 * C3507 -
             C24214 * C3512 + C24207 * C3519 + C24212 * C1526 - C24213 * C1517 -
             C24212 * C1527 + C24206 * C1532) *
                C153638 * C154074 +
            (C24216 * C4383 - C24217 * C4379 - C24216 * C4384 +
             C154071 * C4391 + C24214 * C1957 - C24215 * C1948 -
             C24214 * C1958 + C24207 * C1963 + C24212 * C1111 - C24213 * C1105 -
             C24212 * C1112 + C24206 * C1123) *
                C153638 * C154099 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C153638 * C154110) *
               C153711 * C333 +
           ((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C153638 * C154110 +
            (C24212 * C1957 - C24213 * C1948 - C24212 * C1958 + C24206 * C1963 +
             C24214 * C4383 - C24215 * C4379 - C24214 * C4384 + C24207 * C4391 +
             C24216 * C5776 - C24217 * C5771 - C24216 * C5777 +
             C154071 * C5780) *
                C153638 * C154099 +
            (C24212 * C3511 - C24213 * C3507 - C24212 * C3512 + C24206 * C3519 +
             C24214 * C5038 - C24215 * C5033 - C24214 * C5039 + C24207 * C5042 +
             C24216 * C28692 - C24217 * C28690 - C24216 * C28693 +
             C154071 * C28696) *
                C153638 * C154074) *
               C153711 * C334) *
              C335 +
          (((C24602 + C24601 + C24600) * C153638 * C154110 +
            (C25719 + C25720 + C25721) * C153638 * C154099 +
            (C24212 * C1524 - C24213 * C1516 - C24212 * C1525 + C24206 * C1531 +
             C24214 * C3513 - C24215 * C3508 - C24214 * C3514 + C24207 * C3520 +
             C24216 * C5036 - C24217 * C5032 - C24216 * C5037 +
             C154071 * C5041) *
                C153638 * C154074) *
               C153711 * C333 -
           ((C24907 + C24906 + C24905) * C153638 * C154074 +
            (C24902 + C24903 + C24904) * C153638 * C154099 +
            (C24293 + C24292 + C24291) * C153638 * C154110) *
               C153711 * C332 -
           ((C24216 * C28694 - C24217 * C28691 - C24216 * C28695 +
             C154071 * C28697 + C24214 * C5036 - C24215 * C5032 -
             C24214 * C5037 + C24207 * C5041 + C24212 * C3513 - C24213 * C3508 -
             C24212 * C3514 + C24206 * C3520) *
                C153638 * C154074 +
            (C24216 * C5774 - C24217 * C5770 - C24216 * C5775 +
             C154071 * C5779 + C24214 * C4385 - C24215 * C4380 -
             C24214 * C4386 + C24207 * C4392 + C24212 * C1955 - C24213 * C1947 -
             C24212 * C1956 + C24206 * C1962) *
                C153638 * C154099 +
            (C24605 + C24604 + C24603) * C153638 * C154110) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C153638 * C154110 +
            (C31262 + C31263 + C31264) * C153638 * C154099 + C31276 * C154074) *
               C563 -
           ((C31268 + C31269 + C31270) * C153638 * C154074 +
            (C31267 + C31266 + C31265) * C153638 * C154099 +
            (C31264 + C31263 + C31262) * C153638 * C154110) *
               C564 +
           (C31276 * C154110 + (C31270 + C31269 + C31268) * C153638 * C154099 +
            (C24212 * C7744 - C24213 * C7740 - C24212 * C7745 + C24206 * C7752 +
             C24214 * C9206 - C24215 * C9201 - C24214 * C9207 + C24207 * C9210 +
             C24216 * C31180 - C24217 * C31178 - C24216 * C31181 +
             C154071 * C31184) *
                C153638 * C154074) *
               C565) *
              C153695 * C335 +
          (((C24904 + C24903 + C24902) * C153638 * C154110 +
            (C24905 + C24906 + C24907) * C153638 * C154099 +
            (C31271 + C31272 + C31273) * C153638 * C154074) *
               C564 -
           (C31261 * C154074 + (C24902 + C24903 + C24904) * C153638 * C154099 +
            (C24293 + C24292 + C24291) * C153638 * C154110) *
               C563 -
           ((C24216 * C31182 - C24217 * C31179 - C24216 * C31183 +
             C154071 * C31185 + C24214 * C9204 - C24215 * C9200 -
             C24214 * C9205 + C24207 * C9209 + C24212 * C7746 - C24213 * C7741 -
             C24212 * C7747 + C24206 * C7753) *
                C153638 * C154074 +
            (C31273 + C31272 + C31271) * C153638 * C154099 + C31261 * C154110) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C154106 +
            C205 * C154087 + C206 * C154058) *
               C47632 +
           (C7817 * C154106 + C666 * C154087 + C665 * C154058) * C47633 +
           (C7818 * C154106 + C667 * C154087 + C668 * C154058) * C154074) *
              C153711 * C153695 * C130 -
          ((C669 * C154058 + C668 * C154087 + C667 * C154106) * C154074 +
           (C664 * C154058 + C665 * C154087 + C666 * C154106) * C47633 +
           (C207 * C154058 + C206 * C154087 + C205 * C154106) * C47632) *
              C153711 * C153695 * C131 +
          ((C206 * C154106 + C207 * C154087 + C208 * C154058) * C47632 +
           (C665 * C154106 + C664 * C154087 + C663 * C154058) * C47633 +
           (C668 * C154106 + C669 * C154087 + C670 * C154058) * C154074) *
              C153711 * C153695 * C132 -
          (((C134 * C600 - C135 * C577 - C134 * C601 + C153792 * C613) *
                C154058 +
            C670 * C154087 + C669 * C154106) *
               C154074 +
           (C943 * C154058 + C663 * C154087 + C664 * C154106) * C47633 +
           (C209 * C154058 + C208 * C154087 + C207 * C154106) * C47632) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154106 +
             C205 * C154087 + C206 * C154058) *
                C47632 +
            (C7817 * C154106 + C666 * C154087 + C665 * C154058) * C47633 +
            (C7818 * C154106 + C667 * C154087 + C668 * C154058) * C154074) *
               C153711 * C332 -
           ((C7517 * C154058 + C7518 * C154087 + C8613 * C154106) * C154074 +
            (C1155 * C154058 + C1154 * C154087 + C8612 * C154106) * C47633 +
            (C436 * C154058 + C437 * C154087 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154106) *
                C47632) *
               C153711 * C333 +
           (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C154106 +
             C438 * C154087 + C439 * C154058) *
                C47632 +
            (C9966 * C154106 + C7519 * C154087 + C7520 * C154058) * C47633 +
            (C9967 * C154106 + C7521 * C154087 + C7522 * C154058) * C154074) *
               C153711 * C334) *
              C335 +
          (((C437 * C154106 + C436 * C154087 + C435 * C154058) * C47632 +
            (C1154 * C154106 + C1155 * C154087 + C1156 * C154058) * C47633 +
            (C7518 * C154106 + C7517 * C154087 + C8059 * C154058) * C154074) *
               C153711 * C333 -
           ((C669 * C154058 + C668 * C154087 + C667 * C154106) * C154074 +
            (C664 * C154058 + C665 * C154087 + C666 * C154106) * C47633 +
            (C207 * C154058 + C206 * C154087 + C205 * C154106) * C47632) *
               C153711 * C332 -
           (((C134 * C3517 - C135 * C3510 - C134 * C3518 + C153792 * C3522) *
                 C154058 +
             C7522 * C154087 + C7521 * C154106) *
                C154074 +
            (C15452 * C154058 + C7520 * C154087 + C7519 * C154106) * C47633 +
            (C440 * C154058 + C439 * C154087 + C438 * C154106) * C47632) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154106 +
             C205 * C154087 + C206 * C154058) *
                C47632 +
            (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
               C563 -
           ((C48078 + C48079 + C48080) * C154074 +
            (C48077 + C48076 + C48075) * C47633 +
            (C48074 + C48073 + C48072) * C47632) *
               C564 +
           (C48092 * C47632 + (C48080 + C48079 + C48078) * C47633 +
            (C10574 * C154106 + C7822 * C154087 + C7823 * C154058) * C154074) *
               C565) *
              C153695 * C335 +
          (((C48081 + C48082 + C48083) * C47632 +
            (C48084 + C48085 + C48086) * C47633 +
            (C48087 + C48088 + C48089) * C154074) *
               C564 -
           (C48093 * C154074 + (C48083 + C48082 + C48081) * C47633 +
            (C207 * C154058 + C206 * C154087 + C205 * C154106) * C47632) *
               C563 -
           (((C134 * C7750 - C135 * C7743 - C134 * C7751 + C153792 * C7755) *
                 C154058 +
             C7823 * C154087 + C7822 * C154106) *
                C154074 +
            (C48089 + C48088 + C48087) * C47633 + C48093 * C47632) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
            C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
            C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
               C153638 * C47632 +
           (C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606 +
            C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
            C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963) *
               C153638 * C47633 +
           (C2877 * C588 - C2878 * C571 - C2877 * C589 + C154109 * C607 +
            C2879 * C1526 - C2880 * C1517 - C2879 * C1527 + C154097 * C1532 +
            C2881 * C3511 - C2882 * C3507 - C2881 * C3512 + C154071 * C3519) *
               C153638 * C154074) *
              C153711 * C153695 * C130 -
          ((C3604 + C3603 + C3602) * C153638 * C154074 +
           (C3599 + C3600 + C3601) * C153638 * C47633 +
           (C2958 + C2957 + C2956) * C153638 * C47632) *
              C153711 * C153695 * C131 +
          (C2970 * C153638 * C47632 +
           (C3598 + C3597 + C3596) * C153638 * C47633 +
           (C3605 + C3606 + C3607) * C153638 * C154074) *
              C153711 * C153695 * C132 -
          ((C2881 * C3517 - C2882 * C3510 - C2881 * C3518 + C154071 * C3522 +
            C2879 * C1520 - C2880 * C1514 - C2879 * C1521 + C154097 * C1529 +
            C2877 * C594 - C2878 * C574 - C2877 * C595 + C154109 * C610) *
               C153638 * C154074 +
           (C4089 + C4088 + C4087) * C153638 * C47633 +
           C2971 * C153638 * C47632) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C153638 * C47632 +
            (C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606 +
             C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
             C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963) *
                C153638 * C47633 +
            (C2877 * C588 - C2878 * C571 - C2877 * C589 + C154109 * C607 +
             C2879 * C1526 - C2880 * C1517 - C2879 * C1527 + C154097 * C1532 +
             C2881 * C3511 - C2882 * C3507 - C2881 * C3512 + C154071 * C3519) *
                C153638 * C154074) *
               C153711 * C332 -
           ((C2881 * C5038 - C2882 * C5033 - C2881 * C5039 + C154071 * C5042 +
             C2879 * C3511 - C2880 * C3507 - C2879 * C3512 + C154097 * C3519 +
             C2877 * C1526 - C2878 * C1517 - C2877 * C1527 + C154109 * C1532) *
                C153638 * C154074 +
            (C2881 * C4383 - C2882 * C4379 - C2881 * C4384 + C154071 * C4391 +
             C2879 * C1957 - C2880 * C1948 - C2879 * C1958 + C154097 * C1963 +
             C2877 * C1111 - C2878 * C1105 - C2877 * C1112 + C154109 * C1123) *
                C153638 * C47633 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C153638 * C47632) *
               C153711 * C333 +
           ((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
             C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
             C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                C153638 * C47632 +
            (C2877 * C1957 - C2878 * C1948 - C2877 * C1958 + C154109 * C1963 +
             C2879 * C4383 - C2880 * C4379 - C2879 * C4384 + C154097 * C4391 +
             C2881 * C5776 - C2882 * C5771 - C2881 * C5777 + C154071 * C5780) *
                C153638 * C47633 +
            (C2877 * C3511 - C2878 * C3507 - C2877 * C3512 + C154109 * C3519 +
             C2879 * C5038 - C2880 * C5033 - C2879 * C5039 + C154097 * C5042 +
             C2881 * C28692 - C2882 * C28690 - C2881 * C28693 +
             C154071 * C28696) *
                C153638 * C154074) *
               C153711 * C334) *
              C335 +
          (((C3283 + C3282 + C3281) * C153638 * C47632 +
            (C4432 + C4433 + C4434) * C153638 * C47633 +
            (C2877 * C1524 - C2878 * C1516 - C2877 * C1525 + C154109 * C1531 +
             C2879 * C3513 - C2880 * C3508 - C2879 * C3514 + C154097 * C3520 +
             C2881 * C5036 - C2882 * C5032 - C2881 * C5037 + C154071 * C5041) *
                C153638 * C154074) *
               C153711 * C333 -
           ((C3604 + C3603 + C3602) * C153638 * C154074 +
            (C3599 + C3600 + C3601) * C153638 * C47633 +
            (C2958 + C2957 + C2956) * C153638 * C47632) *
               C153711 * C332 -
           ((C2881 * C28694 - C2882 * C28691 - C2881 * C28695 +
             C154071 * C28697 + C2879 * C5036 - C2880 * C5032 - C2879 * C5037 +
             C154097 * C5041 + C2877 * C3513 - C2878 * C3508 - C2877 * C3514 +
             C154109 * C3520) *
                C153638 * C154074 +
            (C2881 * C5774 - C2882 * C5770 - C2881 * C5775 + C154071 * C5779 +
             C2879 * C4385 - C2880 * C4380 - C2879 * C4386 + C154097 * C4392 +
             C2877 * C1955 - C2878 * C1947 - C2877 * C1956 + C154109 * C1962) *
                C153638 * C47633 +
            (C3286 + C3285 + C3284) * C153638 * C47632) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C153638 * C47632 +
            (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
               C563 -
           ((C52133 + C52134 + C52135) * C153638 * C154074 +
            (C52132 + C52131 + C52130) * C153638 * C47633 +
            (C52129 + C52128 + C52127) * C153638 * C47632) *
               C564 +
           (C52141 * C47632 + (C52135 + C52134 + C52133) * C153638 * C47633 +
            (C2877 * C7744 - C2878 * C7740 - C2877 * C7745 + C154109 * C7752 +
             C2879 * C9206 - C2880 * C9201 - C2879 * C9207 + C154097 * C9210 +
             C2881 * C31180 - C2882 * C31178 - C2881 * C31181 +
             C154071 * C31184) *
                C153638 * C154074) *
               C565) *
              C153695 * C335 +
          (((C3601 + C3600 + C3599) * C153638 * C47632 +
            (C3602 + C3603 + C3604) * C153638 * C47633 +
            (C52136 + C52137 + C52138) * C153638 * C154074) *
               C564 -
           (C52126 * C154074 + (C3599 + C3600 + C3601) * C153638 * C47633 +
            (C2958 + C2957 + C2956) * C153638 * C47632) *
               C563 -
           ((C2881 * C31182 - C2882 * C31179 - C2881 * C31183 +
             C154071 * C31185 + C2879 * C9204 - C2880 * C9200 - C2879 * C9205 +
             C154097 * C9209 + C2877 * C7746 - C2878 * C7741 - C2877 * C7747 +
             C154109 * C7753) *
                C153638 * C154074 +
            (C52138 + C52137 + C52136) * C153638 * C47633 + C52126 * C47632) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
               C153638 * C55718 +
           C7817 * C153638 * C55719 + C7818 * C153638 * C55720 +
           C7821 * C153638 * C55721 + C10574 * C153638 * C55722) *
              C153711 * C153695 * C130 -
          (C7822 * C153638 * C55722 + C7820 * C153638 * C55721 +
           C667 * C153638 * C55720 + C666 * C153638 * C55719 +
           C205 * C153638 * C55718) *
              C153711 * C153695 * C131 +
          (C206 * C153638 * C55718 + C665 * C153638 * C55719 +
           C668 * C153638 * C55720 + C7819 * C153638 * C55721 +
           C7823 * C153638 * C55722) *
              C153711 * C153695 * C132 -
          ((C134 * C7750 - C135 * C7743 - C134 * C7751 + C153792 * C7755) *
               C153638 * C55722 +
           C7824 * C153638 * C55721 + C669 * C153638 * C55720 +
           C664 * C153638 * C55719 + C207 * C153638 * C55718) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C153638 * C55718 +
            C7817 * C153638 * C55719 + C7818 * C153638 * C55720 +
            C7821 * C153638 * C55721 + C10574 * C153638 * C55722) *
               C153711 * C332 -
           ((C134 * C9206 - C135 * C9201 - C134 * C9207 + C153792 * C9210) *
                C153638 * C55722 +
            C9222 * C153638 * C55721 + C8613 * C153638 * C55720 +
            C8612 * C153638 * C55719 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                C153638 * C55718) *
               C153711 * C333 +
           ((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                C153638 * C55718 +
            C9966 * C153638 * C55719 + C9967 * C153638 * C55720 +
            (C134 * C6377 - C135 * C6367 - C134 * C6378 + C153792 * C6385) *
                C153638 * C55721 +
            (C134 * C31180 - C135 * C31178 - C134 * C31181 + C153792 * C31184) *
                C153638 * C55722) *
               C153711 * C334) *
              C335 +
          ((C437 * C153638 * C55718 + C1154 * C153638 * C55719 +
            C7518 * C153638 * C55720 + C8614 * C153638 * C55721 +
            (C134 * C9204 - C135 * C9200 - C134 * C9205 + C153792 * C9209) *
                C153638 * C55722) *
               C153711 * C333 -
           (C7822 * C153638 * C55722 + C7820 * C153638 * C55721 +
            C667 * C153638 * C55720 + C666 * C153638 * C55719 +
            C205 * C153638 * C55718) *
               C153711 * C332 -
           ((C134 * C31182 - C135 * C31179 - C134 * C31183 + C153792 * C31185) *
                C153638 * C55722 +
            (C134 * C6373 - C135 * C6365 - C134 * C6374 + C153792 * C6383) *
                C153638 * C55721 +
            C7521 * C153638 * C55720 + C7519 * C153638 * C55719 +
            C438 * C153638 * C55718) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C153638 * C55718 +
            C55976 * C55719 + C55977 * C55720 + C55978 * C55721 +
            C55979 * C55722) *
               C563 -
           (C55998 * C55722 + C55979 * C55721 + C55978 * C55720 +
            C55977 * C55719 + C55976 * C55718) *
               C564 +
           (C55977 * C55718 + C55978 * C55719 + C55979 * C55720 +
            C55998 * C55721 +
            (C134 * C55969 - C135 * C55967 - C134 * C55970 + C153792 * C55973) *
                C153638 * C55722) *
               C565) *
              C153695 * C335 +
          ((C55984 * C55718 + C55985 * C55719 + C55986 * C55720 +
            C55987 * C55721 + C55999 * C55722) *
               C564 -
           (C55987 * C55722 + C55986 * C55721 + C55985 * C55720 +
            C55984 * C55719 + C205 * C153638 * C55718) *
               C563 -
           ((C134 * C55971 - C135 * C55968 - C134 * C55972 + C153792 * C55974) *
                C153638 * C55722 +
            C55999 * C55721 + C55987 * C55720 + C55986 * C55719 +
            C55985 * C55718) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                    C122 +
                C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                   C153810 * C154022 -
               (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
                (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) *
                    C122) *
                   C153810 * C153775) *
                  C153695 * C154090 +
              ((C666 * C122 + C665 * C123 + C664 * C124 + C663 * C125 +
                C943 * C126) *
                   C153810 * C153775 -
               (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
                C205 * C122) *
                   C153810 * C154022) *
                  C153695 * C154091 +
              ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125 +
                C210 * C126) *
                   C153810 * C154022 -
               ((C134 * C933 - C135 * C932 - C134 * C934 + C153792 * C935) *
                    C126 +
                C943 * C125 + C663 * C124 + C664 * C123 + C665 * C122) *
                   C153810 * C153775) *
                  C153695 * C796) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
                 C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
                 C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                    C2874 +
                (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
                   C153810 * C154022 -
               (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
                (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 +
                 C154071 * C1963 + C2879 * C1111 - C2880 * C1105 -
                 C2879 * C1112 + C154097 * C1123 + C2877 * C586 - C2878 * C570 -
                 C2877 * C587 + C154109 * C606) *
                    C2874) *
                   C153810 * C153775) *
                  C153695 * C154090 +
              (((C3601 + C3600 + C3599) * C2874 +
                (C3598 + C3597 + C3596) * C2875 +
                (C4087 + C4088 + C4089) * C154058) *
                   C153810 * C153775 -
               (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
                (C2958 + C2957 + C2956) * C2874) *
                   C153810 * C154022) *
                  C153695 * C154091 +
              ((C2970 * C2874 + (C2964 + C2963 + C2962) * C2875 +
                (C2965 + C2966 + C2967) * C154058) *
                   C153810 * C154022 -
               ((C2881 * C1949 - C2882 * C1944 - C2881 * C1950 +
                 C154071 * C1959 + C2879 * C1119 - C2880 * C1109 -
                 C2879 * C1120 + C154097 * C1127 + C2877 * C578 - C2878 * C566 -
                 C2877 * C579 + C154109 * C602) *
                    C154058 +
                (C4089 + C4088 + C4087) * C2875 + C4080 * C2874) *
                   C153810 * C153775) *
                  C153695 * C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C2874 +
             C205 * C2875 + C206 * C154058) *
                C154110 +
            (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
               C154022 -
           ((C7827 + C7828 + C7829) * C154074 +
            (C7768 + C7767 + C7826) * C154099 +
            (C7762 + C7761 + C7825) * C154110) *
               C153775) *
              C153695 * C154090 +
          (((C7789 + C7790 + C7791) * C154110 +
            (C7792 + C7793 + C7794) * C154099 +
            (C7830 + C7831 + C7832) * C154074) *
               C153775 -
           (C7816 * C154074 + (C7791 + C7790 + C7789) * C154099 +
            (C207 * C154058 + C206 * C2875 + C205 * C2874) * C154110) *
               C154022) *
              C153695 * C154091 +
          (((C206 * C2874 + C207 * C2875 + C208 * C154058) * C154110 +
            (C8278 + C8279 + C8280) * C154099 +
            (C8281 + C8282 + C8283) * C154074) *
               C154022 -
           (((C134 * C2301 - C135 * C2296 - C134 * C2302 + C153792 * C2311) *
                 C154058 +
             C7824 * C2875 + C7819 * C2874) *
                C154074 +
            (C8283 + C8282 + C8281) * C154099 +
            (C8280 + C8279 + C8278) * C154110) *
               C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C154022 -
           (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C153775) *
              C153695 * C154090 +
          (((C24904 + C24903 + C24902) * C154106 +
            (C24901 + C24900 + C24899) * C154087 +
            (C25390 + C25391 + C25392) * C154058) *
               C153810 * C153775 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C154022) *
              C153695 * C154091 +
          ((C24305 * C154106 + (C24299 + C24298 + C24297) * C154087 +
            (C24300 + C24301 + C24302) * C154058) *
               C153810 * C154022 -
           ((C24216 * C1949 - C24217 * C1944 - C24216 * C1950 +
             C154071 * C1959 + C24214 * C1119 - C24215 * C1109 -
             C24214 * C1120 + C24207 * C1127 + C24212 * C578 - C24213 * C566 -
             C24212 * C579 + C24206 * C602) *
                C154058 +
            (C25392 + C25391 + C25390) * C154087 + C25383 * C154106) *
               C153810 * C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C154022 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C153775) *
              C153695 * C154090 +
          ((C28428 * C584 - C28429 * C569 - C28428 * C585 + C28422 * C605 +
            C28430 * C1113 - C28431 * C1106 - C28430 * C1114 + C28423 * C1124 +
            C28432 * C1955 - C28433 * C1947 - C28432 * C1956 + C28424 * C1962 +
            C28434 * C4385 - C28435 * C4380 - C28434 * C4386 + C28425 * C4392 +
            C28436 * C5774 - C28437 * C5770 - C28436 * C5775 + C28426 * C5779) *
               C153638 * C153810 * C153775 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C154022) *
              C153695 * C154091 +
          ((C28428 * C148 - C28429 * C138 - C28428 * C149 + C28422 * C162 +
            C28430 * C353 - C28431 * C339 - C28430 * C354 + C28423 * C375 +
            C28432 * C363 - C28433 * C344 - C28432 * C364 + C28424 * C380 +
            C28434 * C1380 - C28435 * C1373 - C28434 * C1381 + C28425 * C1388 +
            C28436 * C3197 - C28437 * C3191 - C28436 * C3198 + C28426 * C3203) *
               C153638 * C153810 * C154022 -
           (C28436 * C5772 - C28437 * C5769 - C28436 * C5773 + C28426 * C5778 +
            C28434 * C4387 - C28435 * C4381 - C28434 * C4388 + C28425 * C4393 +
            C28432 * C1953 - C28433 * C1946 - C28432 * C1954 + C28424 * C1961 +
            C28430 * C1115 - C28431 * C1107 - C28430 * C1116 + C28423 * C1125 +
            C28428 * C582 - C28429 * C568 - C28428 * C583 + C28422 * C604) *
               C153638 * C153810 * C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C153638 * C154110 +
            (C31262 + C31263 + C31264) * C153638 * C154099 + C31276 * C154074) *
               C154022 -
           ((C31268 + C31269 + C31270) * C153638 * C154074 +
            (C31267 + C31266 + C31265) * C153638 * C154099 +
            (C31264 + C31263 + C31262) * C153638 * C154110) *
               C153775) *
              C153695 * C154090 +
          (((C24904 + C24903 + C24902) * C153638 * C154110 +
            (C24905 + C24906 + C24907) * C153638 * C154099 +
            (C31271 + C31272 + C31273) * C153638 * C154074) *
               C153775 -
           (C31261 * C154074 + (C24902 + C24903 + C24904) * C153638 * C154099 +
            (C24293 + C24292 + C24291) * C153638 * C154110) *
               C154022) *
              C153695 * C154091 +
          ((C24305 * C153638 * C154110 +
            (C24901 + C24900 + C24899) * C153638 * C154099 +
            (C24908 + C24909 + C24910) * C153638 * C154074) *
               C154022 -
           ((C24216 * C6369 - C24217 * C6363 - C24216 * C6370 +
             C154071 * C6381 + C24214 * C6371 - C24215 * C6364 -
             C24214 * C6372 + C24207 * C6382 + C24212 * C2305 - C24213 * C2298 -
             C24212 * C2306 + C24206 * C2313) *
                C153638 * C154074 +
            (C24910 + C24909 + C24908) * C153638 * C154099 +
            C25383 * C153638 * C154110) *
               C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154106 +
             C205 * C154087 + C206 * C154058) *
                C47632 +
            (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
               C154022 -
           ((C48078 + C48079 + C48080) * C154074 +
            (C48077 + C48076 + C48075) * C47633 +
            (C48074 + C48073 + C48072) * C47632) *
               C153775) *
              C153695 * C154090 +
          (((C48081 + C48082 + C48083) * C47632 +
            (C48084 + C48085 + C48086) * C47633 +
            (C48087 + C48088 + C48089) * C154074) *
               C153775 -
           (C48093 * C154074 + (C48083 + C48082 + C48081) * C47633 +
            (C207 * C154058 + C206 * C154087 + C205 * C154106) * C47632) *
               C154022) *
              C153695 * C154091 +
          (((C206 * C154106 + C207 * C154087 + C208 * C154058) * C47632 +
            (C48530 + C48531 + C48532) * C47633 +
            (C48533 + C48534 + C48535) * C154074) *
               C154022 -
           (((C134 * C2301 - C135 * C2296 - C134 * C2302 + C153792 * C2311) *
                 C154058 +
             C7824 * C154087 + C7819 * C154106) *
                C154074 +
            (C48535 + C48534 + C48533) * C47633 +
            (C48532 + C48531 + C48530) * C47632) *
               C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C153638 * C47632 +
            (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
               C154022 -
           ((C52133 + C52134 + C52135) * C153638 * C154074 +
            (C52132 + C52131 + C52130) * C153638 * C47633 +
            (C52129 + C52128 + C52127) * C153638 * C47632) *
               C153775) *
              C153695 * C154090 +
          (((C3601 + C3600 + C3599) * C153638 * C47632 +
            (C3602 + C3603 + C3604) * C153638 * C47633 +
            (C52136 + C52137 + C52138) * C153638 * C154074) *
               C153775 -
           (C52126 * C154074 + (C3599 + C3600 + C3601) * C153638 * C47633 +
            (C2958 + C2957 + C2956) * C153638 * C47632) *
               C154022) *
              C153695 * C154091 +
          ((C2970 * C153638 * C47632 +
            (C3598 + C3597 + C3596) * C153638 * C47633 +
            (C3605 + C3606 + C3607) * C153638 * C154074) *
               C154022 -
           ((C2881 * C6369 - C2882 * C6363 - C2881 * C6370 + C154071 * C6381 +
             C2879 * C6371 - C2880 * C6364 - C2879 * C6372 + C154097 * C6382 +
             C2877 * C2305 - C2878 * C2298 - C2877 * C2306 + C154109 * C2313) *
                C153638 * C154074 +
            (C3607 + C3606 + C3605) * C153638 * C47633 +
            C4080 * C153638 * C47632) *
               C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C153638 * C55718 +
            C55976 * C55719 + C55977 * C55720 + C55978 * C55721 +
            C55979 * C55722) *
               C154022 -
           (C55998 * C55722 + C55979 * C55721 + C55978 * C55720 +
            C55977 * C55719 + C55976 * C55718) *
               C153775) *
              C153695 * C154090 +
          ((C55984 * C55718 + C55985 * C55719 + C55986 * C55720 +
            C55987 * C55721 + C55999 * C55722) *
               C153775 -
           (C55987 * C55722 + C55986 * C55721 + C55985 * C55720 +
            C55984 * C55719 + C205 * C153638 * C55718) *
               C154022) *
              C153695 * C154091 +
          ((C206 * C153638 * C55718 + C56244 * C55719 + C56245 * C55720 +
            C56246 * C55721 + C56247 * C55722) *
               C154022 -
           ((C134 * C10554 - C135 * C10551 - C134 * C10555 + C153792 * C10560) *
                C153638 * C55722 +
            C56247 * C55721 + C56246 * C55720 + C56245 * C55719 +
            C56244 * C55718) *
               C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
           C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
              C153810 * C153711 * C153695 * C130 -
          (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
           C205 * C122) *
              C153810 * C153711 * C153695 * C131 +
          (C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125 +
           C210 * C126) *
              C153810 * C153711 * C153695 * C132 -
          ((C134 * C158 - C135 * C143 - C134 * C159 + C153792 * C167) * C126 +
           C210 * C125 + C209 * C124 + C208 * C123 + C207 * C122) *
              C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C153711 * C332 -
           (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) * C122) *
               C153810 * C153711 * C333 +
           ((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) * C122 +
            C438 * C123 + C439 * C124 + C440 * C125 + C441 * C126) *
               C153810 * C153711 * C334) *
              C335 +
          ((C437 * C122 + C436 * C123 + C435 * C124 + C434 * C125 +
            (C134 * C369 - C135 * C347 - C134 * C370 + C153792 * C383) * C126) *
               C153810 * C153711 * C333 -
           (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
            C205 * C122) *
               C153810 * C153711 * C332 -
           ((C134 * C371 - C135 * C348 - C134 * C372 + C153792 * C384) * C126 +
            C441 * C125 + C440 * C124 + C439 * C123 + C438 * C122) *
               C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
            C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
            C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
               C2874 +
           (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
              C153810 * C153711 * C153695 * C130 -
          (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
           (C2958 + C2957 + C2956) * C2874) *
              C153810 * C153711 * C153695 * C131 +
          (C2970 * C2874 + (C2964 + C2963 + C2962) * C2875 +
           (C2965 + C2966 + C2967) * C154058) *
              C153810 * C153711 * C153695 * C132 -
          ((C2881 * C371 - C2882 * C348 - C2881 * C372 + C154071 * C384 +
            C2879 * C369 - C2880 * C347 - C2879 * C370 + C154097 * C383 +
            C2877 * C154 - C2878 * C141 - C2877 * C155 + C154109 * C165) *
               C154058 +
           (C2967 + C2966 + C2965) * C2875 + C2971 * C2874) *
              C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C153711 * C332 -
           ((C3278 + C3279 + C3280) * C154058 +
            (C3281 + C3282 + C3283) * C2875 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C2874) *
               C153810 * C153711 * C333 +
           ((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
             C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
             C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                C2874 +
            (C3284 + C3285 + C3286) * C2875 +
            (C3287 + C3288 + C3289) * C154058) *
               C153810 * C153711 * C334) *
              C335 +
          (((C3283 + C3282 + C3281) * C2874 + (C3280 + C3279 + C3278) * C2875 +
            (C2877 * C351 - C2878 * C338 - C2877 * C352 + C154109 * C374 +
             C2879 * C365 - C2880 * C345 - C2879 * C366 + C154097 * C381 +
             C2881 * C1378 - C2882 * C1372 - C2881 * C1379 + C154071 * C1387) *
                C154058) *
               C153810 * C153711 * C333 -
           (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
            (C2958 + C2957 + C2956) * C2874) *
               C153810 * C153711 * C332 -
           ((C2881 * C3199 - C2882 * C3192 - C2881 * C3200 + C154071 * C3204 +
             C2879 * C1378 - C2880 * C1372 - C2879 * C1379 + C154097 * C1387 +
             C2877 * C365 - C2878 * C345 - C2877 * C366 + C154109 * C381) *
                C154058 +
            (C3289 + C3288 + C3287) * C2875 + (C3286 + C3285 + C3284) * C2874) *
               C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C2874 +
            C205 * C2875 + C206 * C154058) *
               C154110 +
           ((C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) * C2874 +
            C666 * C2875 + C665 * C154058) *
               C154099 +
           ((C134 * C588 - C135 * C571 - C134 * C589 + C153792 * C607) * C2874 +
            C667 * C2875 + C668 * C154058) *
               C154074) *
              C153711 * C153695 * C130 -
          ((C669 * C154058 + C668 * C2875 + C667 * C2874) * C154074 +
           (C664 * C154058 + C665 * C2875 + C666 * C2874) * C154099 +
           (C207 * C154058 + C206 * C2875 + C205 * C2874) * C154110) *
              C153711 * C153695 * C131 +
          ((C206 * C2874 + C207 * C2875 + C208 * C154058) * C154110 +
           (C665 * C2874 + C664 * C2875 + C663 * C154058) * C154099 +
           (C668 * C2874 + C669 * C2875 + C670 * C154058) * C154074) *
              C153711 * C153695 * C132 -
          (((C134 * C600 - C135 * C577 - C134 * C601 + C153792 * C613) *
                C154058 +
            C670 * C2875 + C669 * C2874) *
               C154074 +
           (C943 * C154058 + C663 * C2875 + C664 * C2874) * C154099 +
           (C209 * C154058 + C208 * C2875 + C207 * C2874) * C154110) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C2874 +
             C205 * C2875 + C206 * C154058) *
                C154110 +
            ((C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) *
                 C2874 +
             C666 * C2875 + C665 * C154058) *
                C154099 +
            ((C134 * C588 - C135 * C571 - C134 * C589 + C153792 * C607) *
                 C2874 +
             C667 * C2875 + C668 * C154058) *
                C154074) *
               C153711 * C332 -
           ((C7517 * C154058 + C7518 * C2875 +
             (C134 * C1526 - C135 * C1517 - C134 * C1527 + C153792 * C1532) *
                 C2874) *
                C154074 +
            (C1155 * C154058 + C1154 * C2875 +
             (C134 * C1111 - C135 * C1105 - C134 * C1112 + C153792 * C1123) *
                 C2874) *
                C154099 +
            (C436 * C154058 + C437 * C2875 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C2874) *
                C154110) *
               C153711 * C333 +
           (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C2874 +
             C438 * C2875 + C439 * C154058) *
                C154110 +
            ((C134 * C1957 - C135 * C1948 - C134 * C1958 + C153792 * C1963) *
                 C2874 +
             C7519 * C2875 + C7520 * C154058) *
                C154099 +
            ((C134 * C3511 - C135 * C3507 - C134 * C3512 + C153792 * C3519) *
                 C2874 +
             C7521 * C2875 + C7522 * C154058) *
                C154074) *
               C153711 * C334) *
              C335 +
          (((C437 * C2874 + C436 * C2875 + C435 * C154058) * C154110 +
            (C1154 * C2874 + C1155 * C2875 + C1156 * C154058) * C154099 +
            (C7518 * C2874 + C7517 * C2875 +
             (C134 * C1520 - C135 * C1514 - C134 * C1521 + C153792 * C1529) *
                 C154058) *
                C154074) *
               C153711 * C333 -
           ((C669 * C154058 + C668 * C2875 + C667 * C2874) * C154074 +
            (C664 * C154058 + C665 * C2875 + C666 * C2874) * C154099 +
            (C207 * C154058 + C206 * C2875 + C205 * C2874) * C154110) *
               C153711 * C332 -
           (((C134 * C3517 - C135 * C3510 - C134 * C3518 + C153792 * C3522) *
                 C154058 +
             C7522 * C2875 + C7521 * C2874) *
                C154074 +
            ((C134 * C1951 - C135 * C1945 - C134 * C1952 + C153792 * C1960) *
                 C154058 +
             C7520 * C2875 + C7519 * C2874) *
                C154099 +
            (C440 * C154058 + C439 * C2875 + C438 * C2874) * C154110) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
            C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
            C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
               C154106 +
           (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
              C153810 * C153711 * C153695 * C130 -
          (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
           (C24293 + C24292 + C24291) * C154106) *
              C153810 * C153711 * C153695 * C131 +
          (C24305 * C154106 + (C24299 + C24298 + C24297) * C154087 +
           (C24300 + C24301 + C24302) * C154058) *
              C153810 * C153711 * C153695 * C132 -
          ((C24216 * C371 - C24217 * C348 - C24216 * C372 + C154071 * C384 +
            C24214 * C369 - C24215 * C347 - C24214 * C370 + C24207 * C383 +
            C24212 * C154 - C24213 * C141 - C24212 * C155 + C24206 * C165) *
               C154058 +
           (C24302 + C24301 + C24300) * C154087 + C24306 * C154106) *
              C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C153711 * C332 -
           ((C24597 + C24598 + C24599) * C154058 +
            (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C153711 * C333 +
           ((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C154106 +
            (C24603 + C24604 + C24605) * C154087 +
            (C24606 + C24607 + C24608) * C154058) *
               C153810 * C153711 * C334) *
              C335 +
          (((C24602 + C24601 + C24600) * C154106 +
            (C24599 + C24598 + C24597) * C154087 +
            (C24212 * C351 - C24213 * C338 - C24212 * C352 + C24206 * C374 +
             C24214 * C365 - C24215 * C345 - C24214 * C366 + C24207 * C381 +
             C24216 * C1378 - C24217 * C1372 - C24216 * C1379 +
             C154071 * C1387) *
                C154058) *
               C153810 * C153711 * C333 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C153711 * C332 -
           ((C24216 * C3199 - C24217 * C3192 - C24216 * C3200 +
             C154071 * C3204 + C24214 * C1378 - C24215 * C1372 -
             C24214 * C1379 + C24207 * C1387 + C24212 * C365 - C24213 * C345 -
             C24212 * C366 + C24206 * C381) *
                C154058 +
            (C24608 + C24607 + C24606) * C154087 +
            (C24605 + C24604 + C24603) * C154106) *
               C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
           C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
           C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
           C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
           C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
              C153638 * C153810 * C153711 * C153695 * C130 -
          (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
           C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
           C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
           C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
           C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
              C153638 * C153810 * C153711 * C153695 * C131 +
          (C28428 * C148 - C28429 * C138 - C28428 * C149 + C28422 * C162 +
           C28430 * C353 - C28431 * C339 - C28430 * C354 + C28423 * C375 +
           C28432 * C363 - C28433 * C344 - C28432 * C364 + C28424 * C380 +
           C28434 * C1380 - C28435 * C1373 - C28434 * C1381 + C28425 * C1388 +
           C28436 * C3197 - C28437 * C3191 - C28436 * C3198 + C28426 * C3203) *
              C153638 * C153810 * C153711 * C153695 * C132 -
          (C28436 * C3199 - C28437 * C3192 - C28436 * C3200 + C28426 * C3204 +
           C28434 * C1378 - C28435 * C1372 - C28434 * C1379 + C28425 * C1387 +
           C28432 * C365 - C28433 * C345 - C28432 * C366 + C28424 * C381 +
           C28430 * C351 - C28431 * C338 - C28430 * C352 + C28423 * C374 +
           C28428 * C150 - C28429 * C139 - C28428 * C151 + C28422 * C163) *
              C153638 * C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C153711 * C332 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C153711 * C333 +
           (C28428 * C359 - C28429 * C342 - C28428 * C360 + C28422 * C378 +
            C28430 * C1384 - C28431 * C1375 - C28430 * C1385 + C28423 * C1390 +
            C28432 * C3193 - C28433 * C3189 - C28432 * C3194 + C28424 * C3201 +
            C28434 * C4808 - C28435 * C4803 - C28434 * C4809 + C28425 * C4812 +
            C28436 * C28562 - C28437 * C28560 - C28436 * C28563 +
            C28426 * C28566) *
               C153638 * C153810 * C153711 * C334) *
              C335 +
          ((C28428 * C355 - C28429 * C340 - C28428 * C356 + C28422 * C376 +
            C28430 * C361 - C28431 * C343 - C28430 * C362 + C28423 * C379 +
            C28432 * C1382 - C28433 * C1374 - C28432 * C1383 + C28424 * C1389 +
            C28434 * C3195 - C28435 * C3190 - C28434 * C3196 + C28425 * C3202 +
            C28436 * C4806 - C28437 * C4802 - C28436 * C4807 + C28426 * C4811) *
               C153638 * C153810 * C153711 * C333 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C153711 * C332 -
           (C28436 * C28564 - C28437 * C28561 - C28436 * C28565 +
            C28426 * C28567 + C28434 * C4806 - C28435 * C4802 - C28434 * C4807 +
            C28425 * C4811 + C28432 * C3195 - C28433 * C3190 - C28432 * C3196 +
            C28424 * C3202 + C28430 * C1382 - C28431 * C1374 - C28430 * C1383 +
            C28423 * C1389 + C28428 * C361 - C28429 * C343 - C28428 * C362 +
            C28422 * C379) *
               C153638 * C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
            C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
            C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
               C153638 * C154110 +
           (C24212 * C586 - C24213 * C570 - C24212 * C587 + C24206 * C606 +
            C24214 * C1111 - C24215 * C1105 - C24214 * C1112 + C24207 * C1123 +
            C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
            C154071 * C1963) *
               C153638 * C154099 +
           (C24212 * C588 - C24213 * C571 - C24212 * C589 + C24206 * C607 +
            C24214 * C1526 - C24215 * C1517 - C24214 * C1527 + C24207 * C1532 +
            C24216 * C3511 - C24217 * C3507 - C24216 * C3512 +
            C154071 * C3519) *
               C153638 * C154074) *
              C153711 * C153695 * C130 -
          ((C24907 + C24906 + C24905) * C153638 * C154074 +
           (C24902 + C24903 + C24904) * C153638 * C154099 +
           (C24293 + C24292 + C24291) * C153638 * C154110) *
              C153711 * C153695 * C131 +
          (C24305 * C153638 * C154110 +
           (C24901 + C24900 + C24899) * C153638 * C154099 +
           (C24908 + C24909 + C24910) * C153638 * C154074) *
              C153711 * C153695 * C132 -
          ((C24216 * C3517 - C24217 * C3510 - C24216 * C3518 + C154071 * C3522 +
            C24214 * C1520 - C24215 * C1514 - C24214 * C1521 + C24207 * C1529 +
            C24212 * C594 - C24213 * C574 - C24212 * C595 + C24206 * C610) *
               C153638 * C154074 +
           (C25392 + C25391 + C25390) * C153638 * C154099 +
           C24306 * C153638 * C154110) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C153638 * C154110 +
            (C24212 * C586 - C24213 * C570 - C24212 * C587 + C24206 * C606 +
             C24214 * C1111 - C24215 * C1105 - C24214 * C1112 + C24207 * C1123 +
             C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963) *
                C153638 * C154099 +
            (C24212 * C588 - C24213 * C571 - C24212 * C589 + C24206 * C607 +
             C24214 * C1526 - C24215 * C1517 - C24214 * C1527 + C24207 * C1532 +
             C24216 * C3511 - C24217 * C3507 - C24216 * C3512 +
             C154071 * C3519) *
                C153638 * C154074) *
               C153711 * C332 -
           ((C24216 * C5038 - C24217 * C5033 - C24216 * C5039 +
             C154071 * C5042 + C24214 * C3511 - C24215 * C3507 -
             C24214 * C3512 + C24207 * C3519 + C24212 * C1526 - C24213 * C1517 -
             C24212 * C1527 + C24206 * C1532) *
                C153638 * C154074 +
            (C24216 * C4383 - C24217 * C4379 - C24216 * C4384 +
             C154071 * C4391 + C24214 * C1957 - C24215 * C1948 -
             C24214 * C1958 + C24207 * C1963 + C24212 * C1111 - C24213 * C1105 -
             C24212 * C1112 + C24206 * C1123) *
                C153638 * C154099 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C153638 * C154110) *
               C153711 * C333 +
           ((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C153638 * C154110 +
            (C24212 * C1957 - C24213 * C1948 - C24212 * C1958 + C24206 * C1963 +
             C24214 * C4383 - C24215 * C4379 - C24214 * C4384 + C24207 * C4391 +
             C24216 * C5776 - C24217 * C5771 - C24216 * C5777 +
             C154071 * C5780) *
                C153638 * C154099 +
            (C24212 * C3511 - C24213 * C3507 - C24212 * C3512 + C24206 * C3519 +
             C24214 * C5038 - C24215 * C5033 - C24214 * C5039 + C24207 * C5042 +
             C24216 * C28692 - C24217 * C28690 - C24216 * C28693 +
             C154071 * C28696) *
                C153638 * C154074) *
               C153711 * C334) *
              C335 +
          (((C24602 + C24601 + C24600) * C153638 * C154110 +
            (C25719 + C25720 + C25721) * C153638 * C154099 +
            (C24212 * C1524 - C24213 * C1516 - C24212 * C1525 + C24206 * C1531 +
             C24214 * C3513 - C24215 * C3508 - C24214 * C3514 + C24207 * C3520 +
             C24216 * C5036 - C24217 * C5032 - C24216 * C5037 +
             C154071 * C5041) *
                C153638 * C154074) *
               C153711 * C333 -
           ((C24907 + C24906 + C24905) * C153638 * C154074 +
            (C24902 + C24903 + C24904) * C153638 * C154099 +
            (C24293 + C24292 + C24291) * C153638 * C154110) *
               C153711 * C332 -
           ((C24216 * C28694 - C24217 * C28691 - C24216 * C28695 +
             C154071 * C28697 + C24214 * C5036 - C24215 * C5032 -
             C24214 * C5037 + C24207 * C5041 + C24212 * C3513 - C24213 * C3508 -
             C24212 * C3514 + C24206 * C3520) *
                C153638 * C154074 +
            (C24216 * C5774 - C24217 * C5770 - C24216 * C5775 +
             C154071 * C5779 + C24214 * C4385 - C24215 * C4380 -
             C24214 * C4386 + C24207 * C4392 + C24212 * C1955 - C24213 * C1947 -
             C24212 * C1956 + C24206 * C1962) *
                C153638 * C154099 +
            (C24605 + C24604 + C24603) * C153638 * C154110) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C154106 +
            C205 * C154087 + C206 * C154058) *
               C47632 +
           (C7817 * C154106 + C666 * C154087 + C665 * C154058) * C47633 +
           (C7818 * C154106 + C667 * C154087 + C668 * C154058) * C154074) *
              C153711 * C153695 * C130 -
          ((C669 * C154058 + C668 * C154087 + C667 * C154106) * C154074 +
           (C664 * C154058 + C665 * C154087 + C666 * C154106) * C47633 +
           (C207 * C154058 + C206 * C154087 + C205 * C154106) * C47632) *
              C153711 * C153695 * C131 +
          ((C206 * C154106 + C207 * C154087 + C208 * C154058) * C47632 +
           (C665 * C154106 + C664 * C154087 + C663 * C154058) * C47633 +
           (C668 * C154106 + C669 * C154087 + C670 * C154058) * C154074) *
              C153711 * C153695 * C132 -
          (((C134 * C600 - C135 * C577 - C134 * C601 + C153792 * C613) *
                C154058 +
            C670 * C154087 + C669 * C154106) *
               C154074 +
           (C943 * C154058 + C663 * C154087 + C664 * C154106) * C47633 +
           (C209 * C154058 + C208 * C154087 + C207 * C154106) * C47632) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154106 +
             C205 * C154087 + C206 * C154058) *
                C47632 +
            (C7817 * C154106 + C666 * C154087 + C665 * C154058) * C47633 +
            (C7818 * C154106 + C667 * C154087 + C668 * C154058) * C154074) *
               C153711 * C332 -
           ((C7517 * C154058 + C7518 * C154087 + C8613 * C154106) * C154074 +
            (C1155 * C154058 + C1154 * C154087 + C8612 * C154106) * C47633 +
            (C436 * C154058 + C437 * C154087 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154106) *
                C47632) *
               C153711 * C333 +
           (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C154106 +
             C438 * C154087 + C439 * C154058) *
                C47632 +
            (C9966 * C154106 + C7519 * C154087 + C7520 * C154058) * C47633 +
            (C9967 * C154106 + C7521 * C154087 + C7522 * C154058) * C154074) *
               C153711 * C334) *
              C335 +
          (((C437 * C154106 + C436 * C154087 + C435 * C154058) * C47632 +
            (C1154 * C154106 + C1155 * C154087 + C1156 * C154058) * C47633 +
            (C7518 * C154106 + C7517 * C154087 + C8059 * C154058) * C154074) *
               C153711 * C333 -
           ((C669 * C154058 + C668 * C154087 + C667 * C154106) * C154074 +
            (C664 * C154058 + C665 * C154087 + C666 * C154106) * C47633 +
            (C207 * C154058 + C206 * C154087 + C205 * C154106) * C47632) *
               C153711 * C332 -
           (((C134 * C3517 - C135 * C3510 - C134 * C3518 + C153792 * C3522) *
                 C154058 +
             C7522 * C154087 + C7521 * C154106) *
                C154074 +
            (C15452 * C154058 + C7520 * C154087 + C7519 * C154106) * C47633 +
            (C440 * C154058 + C439 * C154087 + C438 * C154106) * C47632) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
            C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
            C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
               C153638 * C47632 +
           (C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606 +
            C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
            C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963) *
               C153638 * C47633 +
           (C2877 * C588 - C2878 * C571 - C2877 * C589 + C154109 * C607 +
            C2879 * C1526 - C2880 * C1517 - C2879 * C1527 + C154097 * C1532 +
            C2881 * C3511 - C2882 * C3507 - C2881 * C3512 + C154071 * C3519) *
               C153638 * C154074) *
              C153711 * C153695 * C130 -
          ((C3604 + C3603 + C3602) * C153638 * C154074 +
           (C3599 + C3600 + C3601) * C153638 * C47633 +
           (C2958 + C2957 + C2956) * C153638 * C47632) *
              C153711 * C153695 * C131 +
          (C2970 * C153638 * C47632 +
           (C3598 + C3597 + C3596) * C153638 * C47633 +
           (C3605 + C3606 + C3607) * C153638 * C154074) *
              C153711 * C153695 * C132 -
          ((C2881 * C3517 - C2882 * C3510 - C2881 * C3518 + C154071 * C3522 +
            C2879 * C1520 - C2880 * C1514 - C2879 * C1521 + C154097 * C1529 +
            C2877 * C594 - C2878 * C574 - C2877 * C595 + C154109 * C610) *
               C153638 * C154074 +
           (C4089 + C4088 + C4087) * C153638 * C47633 +
           C2971 * C153638 * C47632) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C153638 * C47632 +
            (C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606 +
             C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
             C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963) *
                C153638 * C47633 +
            (C2877 * C588 - C2878 * C571 - C2877 * C589 + C154109 * C607 +
             C2879 * C1526 - C2880 * C1517 - C2879 * C1527 + C154097 * C1532 +
             C2881 * C3511 - C2882 * C3507 - C2881 * C3512 + C154071 * C3519) *
                C153638 * C154074) *
               C153711 * C332 -
           ((C2881 * C5038 - C2882 * C5033 - C2881 * C5039 + C154071 * C5042 +
             C2879 * C3511 - C2880 * C3507 - C2879 * C3512 + C154097 * C3519 +
             C2877 * C1526 - C2878 * C1517 - C2877 * C1527 + C154109 * C1532) *
                C153638 * C154074 +
            (C2881 * C4383 - C2882 * C4379 - C2881 * C4384 + C154071 * C4391 +
             C2879 * C1957 - C2880 * C1948 - C2879 * C1958 + C154097 * C1963 +
             C2877 * C1111 - C2878 * C1105 - C2877 * C1112 + C154109 * C1123) *
                C153638 * C47633 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C153638 * C47632) *
               C153711 * C333 +
           ((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
             C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
             C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                C153638 * C47632 +
            (C2877 * C1957 - C2878 * C1948 - C2877 * C1958 + C154109 * C1963 +
             C2879 * C4383 - C2880 * C4379 - C2879 * C4384 + C154097 * C4391 +
             C2881 * C5776 - C2882 * C5771 - C2881 * C5777 + C154071 * C5780) *
                C153638 * C47633 +
            (C2877 * C3511 - C2878 * C3507 - C2877 * C3512 + C154109 * C3519 +
             C2879 * C5038 - C2880 * C5033 - C2879 * C5039 + C154097 * C5042 +
             C2881 * C28692 - C2882 * C28690 - C2881 * C28693 +
             C154071 * C28696) *
                C153638 * C154074) *
               C153711 * C334) *
              C335 +
          (((C3283 + C3282 + C3281) * C153638 * C47632 +
            (C4432 + C4433 + C4434) * C153638 * C47633 +
            (C2877 * C1524 - C2878 * C1516 - C2877 * C1525 + C154109 * C1531 +
             C2879 * C3513 - C2880 * C3508 - C2879 * C3514 + C154097 * C3520 +
             C2881 * C5036 - C2882 * C5032 - C2881 * C5037 + C154071 * C5041) *
                C153638 * C154074) *
               C153711 * C333 -
           ((C3604 + C3603 + C3602) * C153638 * C154074 +
            (C3599 + C3600 + C3601) * C153638 * C47633 +
            (C2958 + C2957 + C2956) * C153638 * C47632) *
               C153711 * C332 -
           ((C2881 * C28694 - C2882 * C28691 - C2881 * C28695 +
             C154071 * C28697 + C2879 * C5036 - C2880 * C5032 - C2879 * C5037 +
             C154097 * C5041 + C2877 * C3513 - C2878 * C3508 - C2877 * C3514 +
             C154109 * C3520) *
                C153638 * C154074 +
            (C2881 * C5774 - C2882 * C5770 - C2881 * C5775 + C154071 * C5779 +
             C2879 * C4385 - C2880 * C4380 - C2879 * C4386 + C154097 * C4392 +
             C2877 * C1955 - C2878 * C1947 - C2877 * C1956 + C154109 * C1962) *
                C153638 * C47633 +
            (C3286 + C3285 + C3284) * C153638 * C47632) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
               C153638 * C55718 +
           C7817 * C153638 * C55719 + C7818 * C153638 * C55720 +
           C7821 * C153638 * C55721 + C10574 * C153638 * C55722) *
              C153711 * C153695 * C130 -
          (C7822 * C153638 * C55722 + C7820 * C153638 * C55721 +
           C667 * C153638 * C55720 + C666 * C153638 * C55719 +
           C205 * C153638 * C55718) *
              C153711 * C153695 * C131 +
          (C206 * C153638 * C55718 + C665 * C153638 * C55719 +
           C668 * C153638 * C55720 + C7819 * C153638 * C55721 +
           C7823 * C153638 * C55722) *
              C153711 * C153695 * C132 -
          ((C134 * C7750 - C135 * C7743 - C134 * C7751 + C153792 * C7755) *
               C153638 * C55722 +
           C7824 * C153638 * C55721 + C669 * C153638 * C55720 +
           C664 * C153638 * C55719 + C207 * C153638 * C55718) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C153638 * C55718 +
            C7817 * C153638 * C55719 + C7818 * C153638 * C55720 +
            C7821 * C153638 * C55721 + C10574 * C153638 * C55722) *
               C153711 * C332 -
           ((C134 * C9206 - C135 * C9201 - C134 * C9207 + C153792 * C9210) *
                C153638 * C55722 +
            C9222 * C153638 * C55721 + C8613 * C153638 * C55720 +
            C8612 * C153638 * C55719 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                C153638 * C55718) *
               C153711 * C333 +
           ((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                C153638 * C55718 +
            C9966 * C153638 * C55719 + C9967 * C153638 * C55720 +
            (C134 * C6377 - C135 * C6367 - C134 * C6378 + C153792 * C6385) *
                C153638 * C55721 +
            (C134 * C31180 - C135 * C31178 - C134 * C31181 + C153792 * C31184) *
                C153638 * C55722) *
               C153711 * C334) *
              C335 +
          ((C437 * C153638 * C55718 + C1154 * C153638 * C55719 +
            C7518 * C153638 * C55720 + C8614 * C153638 * C55721 +
            (C134 * C9204 - C135 * C9200 - C134 * C9205 + C153792 * C9209) *
                C153638 * C55722) *
               C153711 * C333 -
           (C7822 * C153638 * C55722 + C7820 * C153638 * C55721 +
            C667 * C153638 * C55720 + C666 * C153638 * C55719 +
            C205 * C153638 * C55718) *
               C153711 * C332 -
           ((C134 * C31182 - C135 * C31179 - C134 * C31183 + C153792 * C31185) *
                C153638 * C55722 +
            (C134 * C6373 - C135 * C6365 - C134 * C6374 + C153792 * C6383) *
                C153638 * C55721 +
            C7521 * C153638 * C55720 + C7519 * C153638 * C55719 +
            C438 * C153638 * C55718) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                    C122 +
                C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                   C153810 * C153711 * C154092 -
               (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
                (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                    C122) *
                   C153810 * C153711 * C154093 +
               ((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                    C122 +
                C438 * C123 + C439 * C124 + C440 * C125 + C441 * C126) *
                   C153810 * C153711 * C1657) *
                  C154013 +
              ((C437 * C122 + C436 * C123 + C435 * C124 + C434 * C125 +
                C808 * C126) *
                   C153810 * C153711 * C154093 -
               (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
                C205 * C122) *
                   C153810 * C153711 * C154092 -
               ((C134 * C371 - C135 * C348 - C134 * C372 + C153792 * C384) *
                    C126 +
                C441 * C125 + C440 * C124 + C439 * C123 + C438 * C122) *
                   C153810 * C153711 * C1657) *
                  C153682) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
                 C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
                 C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                    C2874 +
                (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
                   C153810 * C153711 * C154092 -
               (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
                (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 +
                 C154071 * C1390 + C2879 * C359 - C2880 * C342 - C2879 * C360 +
                 C154097 * C378 + C2877 * C357 - C2878 * C341 - C2877 * C358 +
                 C154109 * C377) *
                    C2874) *
                   C153810 * C153711 * C154093 +
               ((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
                 C2879 * C1384 - C2880 * C1375 - C2879 * C1385 +
                 C154097 * C1390 + C2881 * C3193 - C2882 * C3189 -
                 C2881 * C3194 + C154071 * C3201) *
                    C2874 +
                (C3284 + C3285 + C3286) * C2875 +
                (C3287 + C3288 + C3289) * C154058) *
                   C153810 * C153711 * C1657) *
                  C154013 +
              (((C3283 + C3282 + C3281) * C2874 +
                (C3280 + C3279 + C3278) * C2875 +
                (C3846 + C3847 + C3848) * C154058) *
                   C153810 * C153711 * C154093 -
               (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
                (C2958 + C2957 + C2956) * C2874) *
                   C153810 * C153711 * C154092 -
               ((C2881 * C3199 - C2882 * C3192 - C2881 * C3200 +
                 C154071 * C3204 + C2879 * C1378 - C2880 * C1372 -
                 C2879 * C1379 + C154097 * C1387 + C2877 * C365 - C2878 * C345 -
                 C2877 * C366 + C154109 * C381) *
                    C154058 +
                (C3289 + C3288 + C3287) * C2875 +
                (C3286 + C3285 + C3284) * C2874) *
                   C153810 * C153711 * C1657) *
                  C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C2874 +
             C205 * C2875 + C206 * C154058) *
                C154110 +
            (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
               C153711 * C154092 -
           (C9220 * C154074 + (C8583 + C8582 + C8616) * C154099 +
            (C436 * C154058 + C437 * C2875 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C2874) *
                C154110) *
               C153711 * C154093 +
           (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C2874 +
             C438 * C2875 + C439 * C154058) *
                C154110 +
            ((C134 * C1957 - C135 * C1948 - C134 * C1958 + C153792 * C1963) *
                 C2874 +
             C7519 * C2875 + C7520 * C154058) *
                C154099 +
            ((C134 * C3511 - C135 * C3507 - C134 * C3512 + C153792 * C3519) *
                 C2874 +
             C7521 * C2875 + C7522 * C154058) *
                C154074) *
               C153711 * C1657) *
              C154013 +
          (((C437 * C2874 + C436 * C2875 + C435 * C154058) * C154110 +
            (C8598 + C8599 + C8600) * C154099 +
            (C8601 + C8602 + C8603) * C154074) *
               C153711 * C154093 -
           (C7816 * C154074 + (C7791 + C7790 + C7789) * C154099 +
            (C207 * C154058 + C206 * C2875 + C205 * C2874) * C154110) *
               C153711 * C154092 -
           (((C134 * C3517 - C135 * C3510 - C134 * C3518 + C153792 * C3522) *
                 C154058 +
             C7522 * C2875 + C7521 * C2874) *
                C154074 +
            ((C134 * C1951 - C135 * C1945 - C134 * C1952 + C153792 * C1960) *
                 C154058 +
             C7520 * C2875 + C7519 * C2874) *
                C154099 +
            (C440 * C154058 + C439 * C2875 + C438 * C2874) * C154110) *
               C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C153711 * C154092 -
           (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C153711 * C154093 +
           ((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C154106 +
            (C24603 + C24604 + C24605) * C154087 +
            (C24606 + C24607 + C24608) * C154058) *
               C153810 * C153711 * C1657) *
              C154013 +
          (((C24602 + C24601 + C24600) * C154106 +
            (C24599 + C24598 + C24597) * C154087 +
            (C25149 + C25150 + C25151) * C154058) *
               C153810 * C153711 * C154093 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C153711 * C154092 -
           ((C24216 * C3199 - C24217 * C3192 - C24216 * C3200 +
             C154071 * C3204 + C24214 * C1378 - C24215 * C1372 -
             C24214 * C1379 + C24207 * C1387 + C24212 * C365 - C24213 * C345 -
             C24212 * C366 + C24206 * C381) *
                C154058 +
            (C24608 + C24607 + C24606) * C154087 +
            (C24605 + C24604 + C24603) * C154106) *
               C153810 * C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C153711 * C154092 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C153711 * C154093 +
           (C28428 * C359 - C28429 * C342 - C28428 * C360 + C28422 * C378 +
            C28430 * C1384 - C28431 * C1375 - C28430 * C1385 + C28423 * C1390 +
            C28432 * C3193 - C28433 * C3189 - C28432 * C3194 + C28424 * C3201 +
            C28434 * C4808 - C28435 * C4803 - C28434 * C4809 + C28425 * C4812 +
            C28436 * C28562 - C28437 * C28560 - C28436 * C28563 +
            C28426 * C28566) *
               C153638 * C153810 * C153711 * C1657) *
              C154013 +
          ((C28428 * C355 - C28429 * C340 - C28428 * C356 + C28422 * C376 +
            C28430 * C361 - C28431 * C343 - C28430 * C362 + C28423 * C379 +
            C28432 * C1382 - C28433 * C1374 - C28432 * C1383 + C28424 * C1389 +
            C28434 * C3195 - C28435 * C3190 - C28434 * C3196 + C28425 * C3202 +
            C28436 * C4806 - C28437 * C4802 - C28436 * C4807 + C28426 * C4811) *
               C153638 * C153810 * C153711 * C154093 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C153711 * C154092 -
           (C28436 * C28564 - C28437 * C28561 - C28436 * C28565 +
            C28426 * C28567 + C28434 * C4806 - C28435 * C4802 - C28434 * C4807 +
            C28425 * C4811 + C28432 * C3195 - C28433 * C3190 - C28432 * C3196 +
            C28424 * C3202 + C28430 * C1382 - C28431 * C1374 - C28430 * C1383 +
            C28423 * C1389 + C28428 * C361 - C28429 * C343 - C28428 * C362 +
            C28422 * C379) *
               C153638 * C153810 * C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C153638 * C154110 +
            (C31262 + C31263 + C31264) * C153638 * C154099 + C31276 * C154074) *
               C153711 * C154092 -
           (C32676 * C154074 + (C32063 + C32062 + C32061) * C153638 * C154099 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C153638 * C154110) *
               C153711 * C154093 +
           ((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C153638 * C154110 +
            (C24212 * C1957 - C24213 * C1948 - C24212 * C1958 + C24206 * C1963 +
             C24214 * C4383 - C24215 * C4379 - C24214 * C4384 + C24207 * C4391 +
             C24216 * C5776 - C24217 * C5771 - C24216 * C5777 +
             C154071 * C5780) *
                C153638 * C154099 +
            (C24212 * C3511 - C24213 * C3507 - C24212 * C3512 + C24206 * C3519 +
             C24214 * C5038 - C24215 * C5033 - C24214 * C5039 + C24207 * C5042 +
             C24216 * C28692 - C24217 * C28690 - C24216 * C28693 +
             C154071 * C28696) *
                C153638 * C154074) *
               C153711 * C1657) *
              C154013 +
          (((C24602 + C24601 + C24600) * C153638 * C154110 +
            (C25719 + C25720 + C25721) * C153638 * C154099 +
            (C32067 + C32068 + C32069) * C153638 * C154074) *
               C153711 * C154093 -
           (C31261 * C154074 + (C24902 + C24903 + C24904) * C153638 * C154099 +
            (C24293 + C24292 + C24291) * C153638 * C154110) *
               C153711 * C154092 -
           ((C24216 * C28694 - C24217 * C28691 - C24216 * C28695 +
             C154071 * C28697 + C24214 * C5036 - C24215 * C5032 -
             C24214 * C5037 + C24207 * C5041 + C24212 * C3513 - C24213 * C3508 -
             C24212 * C3514 + C24206 * C3520) *
                C153638 * C154074 +
            (C24216 * C5774 - C24217 * C5770 - C24216 * C5775 +
             C154071 * C5779 + C24214 * C4385 - C24215 * C4380 -
             C24214 * C4386 + C24207 * C4392 + C24212 * C1955 - C24213 * C1947 -
             C24212 * C1956 + C24206 * C1962) *
                C153638 * C154099 +
            (C24605 + C24604 + C24603) * C153638 * C154110) *
               C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154106 +
             C205 * C154087 + C206 * C154058) *
                C47632 +
            (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
               C153711 * C154092 -
           (C49424 * C154074 + (C48828 + C48827 + C48826) * C47633 +
            (C436 * C154058 + C437 * C154087 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154106) *
                C47632) *
               C153711 * C154093 +
           (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C154106 +
             C438 * C154087 + C439 * C154058) *
                C47632 +
            (C9966 * C154106 + C7519 * C154087 + C7520 * C154058) * C47633 +
            (C9967 * C154106 + C7521 * C154087 + C7522 * C154058) * C154074) *
               C153711 * C1657) *
              C154013 +
          (((C437 * C154106 + C436 * C154087 + C435 * C154058) * C47632 +
            (C48832 + C48833 + C48834) * C47633 +
            (C48835 + C48836 + C48837) * C154074) *
               C153711 * C154093 -
           (C48093 * C154074 + (C48083 + C48082 + C48081) * C47633 +
            (C207 * C154058 + C206 * C154087 + C205 * C154106) * C47632) *
               C153711 * C154092 -
           (((C134 * C3517 - C135 * C3510 - C134 * C3518 + C153792 * C3522) *
                 C154058 +
             C7522 * C154087 + C7521 * C154106) *
                C154074 +
            (C15452 * C154058 + C7520 * C154087 + C7519 * C154106) * C47633 +
            (C440 * C154058 + C439 * C154087 + C438 * C154106) * C47632) *
               C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C153638 * C47632 +
            (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
               C153711 * C154092 -
           (C53533 * C154074 + (C52924 + C52923 + C52922) * C153638 * C47633 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C153638 * C47632) *
               C153711 * C154093 +
           ((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
             C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
             C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                C153638 * C47632 +
            (C2877 * C1957 - C2878 * C1948 - C2877 * C1958 + C154109 * C1963 +
             C2879 * C4383 - C2880 * C4379 - C2879 * C4384 + C154097 * C4391 +
             C2881 * C5776 - C2882 * C5771 - C2881 * C5777 + C154071 * C5780) *
                C153638 * C47633 +
            (C2877 * C3511 - C2878 * C3507 - C2877 * C3512 + C154109 * C3519 +
             C2879 * C5038 - C2880 * C5033 - C2879 * C5039 + C154097 * C5042 +
             C2881 * C28692 - C2882 * C28690 - C2881 * C28693 +
             C154071 * C28696) *
                C153638 * C154074) *
               C153711 * C1657) *
              C154013 +
          (((C3283 + C3282 + C3281) * C153638 * C47632 +
            (C4432 + C4433 + C4434) * C153638 * C47633 +
            (C52928 + C52929 + C52930) * C153638 * C154074) *
               C153711 * C154093 -
           (C52126 * C154074 + (C3599 + C3600 + C3601) * C153638 * C47633 +
            (C2958 + C2957 + C2956) * C153638 * C47632) *
               C153711 * C154092 -
           ((C2881 * C28694 - C2882 * C28691 - C2881 * C28695 +
             C154071 * C28697 + C2879 * C5036 - C2880 * C5032 - C2879 * C5037 +
             C154097 * C5041 + C2877 * C3513 - C2878 * C3508 - C2877 * C3514 +
             C154109 * C3520) *
                C153638 * C154074 +
            (C2881 * C5774 - C2882 * C5770 - C2881 * C5775 + C154071 * C5779 +
             C2879 * C4385 - C2880 * C4380 - C2879 * C4386 + C154097 * C4392 +
             C2877 * C1955 - C2878 * C1947 - C2877 * C1956 + C154109 * C1962) *
                C153638 * C47633 +
            (C3286 + C3285 + C3284) * C153638 * C47632) *
               C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C153638 * C55718 +
            C55976 * C55719 + C55977 * C55720 + C55978 * C55721 +
            C55979 * C55722) *
               C153711 * C154092 -
           (C56434 * C55722 + C56416 * C55721 + C56415 * C55720 +
            C56414 * C55719 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                C153638 * C55718) *
               C153711 * C154093 +
           ((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                C153638 * C55718 +
            C9966 * C153638 * C55719 + C9967 * C153638 * C55720 +
            (C134 * C6377 - C135 * C6367 - C134 * C6378 + C153792 * C6385) *
                C153638 * C55721 +
            (C134 * C31180 - C135 * C31178 - C134 * C31181 + C153792 * C31184) *
                C153638 * C55722) *
               C153711 * C1657) *
              C154013 +
          ((C437 * C153638 * C55718 + C56421 * C55719 + C56422 * C55720 +
            C56423 * C55721 + C56435 * C55722) *
               C153711 * C154093 -
           (C55987 * C55722 + C55986 * C55721 + C55985 * C55720 +
            C55984 * C55719 + C205 * C153638 * C55718) *
               C153711 * C154092 -
           ((C134 * C31182 - C135 * C31179 - C134 * C31183 + C153792 * C31185) *
                C153638 * C55722 +
            (C134 * C6373 - C135 * C6365 - C134 * C6374 + C153792 * C6383) *
                C153638 * C55721 +
            C7521 * C153638 * C55720 + C7519 * C153638 * C55719 +
            C438 * C153638 * C55718) *
               C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                    C122 +
                C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                   C153810 * C154022 -
               (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
                (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) *
                    C122) *
                   C153810 * C153775) *
                  C154092 +
              (((C134 * C1111 - C135 * C1105 - C134 * C1112 + C153792 * C1123) *
                    C122 +
                C1154 * C123 + C1155 * C124 + C1156 * C125 + C1157 * C126) *
                   C153810 * C153775 -
               (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
                (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                    C122) *
                   C153810 * C154022) *
                  C154093 +
              (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                    C122 +
                C438 * C123 + C439 * C124 + C440 * C125 + C441 * C126) *
                   C153810 * C154022 -
               ((C134 * C1949 - C135 * C1944 - C134 * C1950 + C153792 * C1959) *
                    C126 +
                (C134 * C1951 - C135 * C1945 - C134 * C1952 + C153792 * C1960) *
                    C125 +
                (C134 * C1953 - C135 * C1946 - C134 * C1954 + C153792 * C1961) *
                    C124 +
                (C134 * C1955 - C135 * C1947 - C134 * C1956 + C153792 * C1962) *
                    C123 +
                (C134 * C1957 - C135 * C1948 - C134 * C1958 + C153792 * C1963) *
                    C122) *
                   C153810 * C153775) *
                  C1657) *
             C153676 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
                 C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
                 C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                    C2874 +
                (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
                   C153810 * C154022 -
               (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
                (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 +
                 C154071 * C1963 + C2879 * C1111 - C2880 * C1105 -
                 C2879 * C1112 + C154097 * C1123 + C2877 * C586 - C2878 * C570 -
                 C2877 * C587 + C154109 * C606) *
                    C2874) *
                   C153810 * C153775) *
                  C154092 +
              (((C2877 * C1111 - C2878 * C1105 - C2877 * C1112 +
                 C154109 * C1123 + C2879 * C1957 - C2880 * C1948 -
                 C2879 * C1958 + C154097 * C1963 + C2881 * C4383 -
                 C2882 * C4379 - C2881 * C4384 + C154071 * C4391) *
                    C2874 +
                (C4432 + C4433 + C4434) * C2875 +
                (C4435 + C4436 + C4437) * C154058) *
                   C153810 * C153775 -
               (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
                (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 +
                 C154071 * C1390 + C2879 * C359 - C2880 * C342 - C2879 * C360 +
                 C154097 * C378 + C2877 * C357 - C2878 * C341 - C2877 * C358 +
                 C154109 * C377) *
                    C2874) *
                   C153810 * C154022) *
                  C154093 +
              (((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
                 C2879 * C1384 - C2880 * C1375 - C2879 * C1385 +
                 C154097 * C1390 + C2881 * C3193 - C2882 * C3189 -
                 C2881 * C3194 + C154071 * C3201) *
                    C2874 +
                (C3284 + C3285 + C3286) * C2875 +
                (C3287 + C3288 + C3289) * C154058) *
                   C153810 * C154022 -
               ((C2881 * C5772 - C2882 * C5769 - C2881 * C5773 +
                 C154071 * C5778 + C2879 * C4387 - C2880 * C4381 -
                 C2879 * C4388 + C154097 * C4393 + C2877 * C1953 -
                 C2878 * C1946 - C2877 * C1954 + C154109 * C1961) *
                    C154058 +
                (C2881 * C5774 - C2882 * C5770 - C2881 * C5775 +
                 C154071 * C5779 + C2879 * C4385 - C2880 * C4380 -
                 C2879 * C4386 + C154097 * C4392 + C2877 * C1955 -
                 C2878 * C1947 - C2877 * C1956 + C154109 * C1962) *
                    C2875 +
                (C2881 * C5776 - C2882 * C5771 - C2881 * C5777 +
                 C154071 * C5780 + C2879 * C4383 - C2880 * C4379 -
                 C2879 * C4384 + C154097 * C4391 + C2877 * C1957 -
                 C2878 * C1948 - C2877 * C1958 + C154109 * C1963) *
                    C2874) *
                   C153810 * C153775) *
                  C1657) *
             C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C2874 +
             C205 * C2875 + C206 * C154058) *
                C154110 +
            (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
               C154022 -
           ((C7827 + C7828 + C7829) * C154074 +
            (C7768 + C7767 + C7826) * C154099 +
            (C7762 + C7761 + C7825) * C154110) *
               C153775) *
              C154092 +
          (((C8616 + C8582 + C8583) * C154110 +
            (C8617 + C8588 + C8589) * C154099 +
            (C9223 + C9216 + C9217) * C154074) *
               C153775 -
           (C9220 * C154074 + (C8583 + C8582 + C8616) * C154099 +
            (C436 * C154058 + C437 * C2875 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C2874) *
                C154110) *
               C154022) *
              C154093 +
          ((((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C2874 +
             C438 * C2875 + C439 * C154058) *
                C154110 +
            (C9968 + C9954 + C9955) * C154099 +
            (C9969 + C9960 + C9961) * C154074) *
               C154022 -
           (((C134 * C6369 - C135 * C6363 - C134 * C6370 + C153792 * C6381) *
                 C154058 +
             (C134 * C6373 - C135 * C6365 - C134 * C6374 + C153792 * C6383) *
                 C2875 +
             (C134 * C6377 - C135 * C6367 - C134 * C6378 + C153792 * C6385) *
                 C2874) *
                C154074 +
            (C9961 + C9960 + C9969) * C154099 +
            (C9955 + C9954 + C9968) * C154110) *
               C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C154022 -
           (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C153775) *
              C154092 +
          (((C24212 * C1111 - C24213 * C1105 - C24212 * C1112 + C24206 * C1123 +
             C24214 * C1957 - C24215 * C1948 - C24214 * C1958 + C24207 * C1963 +
             C24216 * C4383 - C24217 * C4379 - C24216 * C4384 +
             C154071 * C4391) *
                C154106 +
            (C25719 + C25720 + C25721) * C154087 +
            (C25722 + C25723 + C25724) * C154058) *
               C153810 * C153775 -
           (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C154022) *
              C154093 +
          (((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C154106 +
            (C24603 + C24604 + C24605) * C154087 +
            (C24606 + C24607 + C24608) * C154058) *
               C153810 * C154022 -
           ((C24216 * C5772 - C24217 * C5769 - C24216 * C5773 +
             C154071 * C5778 + C24214 * C4387 - C24215 * C4381 -
             C24214 * C4388 + C24207 * C4393 + C24212 * C1953 - C24213 * C1946 -
             C24212 * C1954 + C24206 * C1961) *
                C154058 +
            (C24216 * C5774 - C24217 * C5770 - C24216 * C5775 +
             C154071 * C5779 + C24214 * C4385 - C24215 * C4380 -
             C24214 * C4386 + C24207 * C4392 + C24212 * C1955 - C24213 * C1947 -
             C24212 * C1956 + C24206 * C1962) *
                C154087 +
            (C24216 * C5776 - C24217 * C5771 - C24216 * C5777 +
             C154071 * C5780 + C24214 * C4383 - C24215 * C4379 -
             C24214 * C4384 + C24207 * C4391 + C24212 * C1957 - C24213 * C1948 -
             C24212 * C1958 + C24206 * C1963) *
                C154106) *
               C153810 * C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C154022 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C153775) *
              C154092 +
          ((C28428 * C1111 - C28429 * C1105 - C28428 * C1112 + C28422 * C1123 +
            C28430 * C1957 - C28431 * C1948 - C28430 * C1958 + C28423 * C1963 +
            C28432 * C4383 - C28433 * C4379 - C28432 * C4384 + C28424 * C4391 +
            C28434 * C5776 - C28435 * C5771 - C28434 * C5777 + C28425 * C5780 +
            C28436 * C29106 - C28437 * C29104 - C28436 * C29107 +
            C28426 * C29110) *
               C153638 * C153810 * C153775 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C154022) *
              C154093 +
          ((C28428 * C359 - C28429 * C342 - C28428 * C360 + C28422 * C378 +
            C28430 * C1384 - C28431 * C1375 - C28430 * C1385 + C28423 * C1390 +
            C28432 * C3193 - C28433 * C3189 - C28432 * C3194 + C28424 * C3201 +
            C28434 * C4808 - C28435 * C4803 - C28434 * C4809 + C28425 * C4812 +
            C28436 * C28562 - C28437 * C28560 - C28436 * C28563 +
            C28426 * C28566) *
               C153638 * C153810 * C154022 -
           (C28436 * C29853 - C28437 * C29852 - C28436 * C29854 +
            C28426 * C29855 + C28434 * C29106 - C28435 * C29104 -
            C28434 * C29107 + C28425 * C29110 + C28432 * C5776 -
            C28433 * C5771 - C28432 * C5777 + C28424 * C5780 + C28430 * C4383 -
            C28431 * C4379 - C28430 * C4384 + C28423 * C4391 + C28428 * C1957 -
            C28429 * C1948 - C28428 * C1958 + C28422 * C1963) *
               C153638 * C153810 * C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C153638 * C154110 +
            (C31262 + C31263 + C31264) * C153638 * C154099 + C31276 * C154074) *
               C154022 -
           ((C31268 + C31269 + C31270) * C153638 * C154074 +
            (C31267 + C31266 + C31265) * C153638 * C154099 +
            (C31264 + C31263 + C31262) * C153638 * C154110) *
               C153775) *
              C154092 +
          (((C32061 + C32062 + C32063) * C153638 * C154110 +
            (C32064 + C32065 + C32066) * C153638 * C154099 +
            (C32677 + C32678 + C32679) * C153638 * C154074) *
               C153775 -
           (C32676 * C154074 + (C32063 + C32062 + C32061) * C153638 * C154099 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C153638 * C154110) *
               C154022) *
              C154093 +
          (((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C153638 * C154110 +
            (C33442 + C33443 + C33444) * C153638 * C154099 +
            (C33445 + C33446 + C33447) * C153638 * C154074) *
               C154022 -
           ((C24216 * C30184 - C24217 * C30182 - C24216 * C30185 +
             C154071 * C30188 + C24214 * C30186 - C24215 * C30183 -
             C24214 * C30187 + C24207 * C30189 + C24212 * C6377 -
             C24213 * C6367 - C24212 * C6378 + C24206 * C6385) *
                C153638 * C154074 +
            (C33447 + C33446 + C33445) * C153638 * C154099 +
            (C33444 + C33443 + C33442) * C153638 * C154110) *
               C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154106 +
             C205 * C154087 + C206 * C154058) *
                C47632 +
            (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
               C154022 -
           ((C48078 + C48079 + C48080) * C154074 +
            (C48077 + C48076 + C48075) * C47633 +
            (C48074 + C48073 + C48072) * C47632) *
               C153775) *
              C154092 +
          (((C48826 + C48827 + C48828) * C47632 +
            (C48829 + C48830 + C48831) * C47633 +
            (C49420 + C49421 + C49422) * C154074) *
               C153775 -
           (C49424 * C154074 + (C48828 + C48827 + C48826) * C47633 +
            (C436 * C154058 + C437 * C154087 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154106) *
                C47632) *
               C154022) *
              C154093 +
          ((((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C154106 +
             C438 * C154087 + C439 * C154058) *
                C47632 +
            (C50151 + C50152 + C50153) * C47633 +
            (C50154 + C50155 + C50156) * C154074) *
               C154022 -
           (((C134 * C6369 - C135 * C6363 - C134 * C6370 + C153792 * C6381) *
                 C154058 +
             (C134 * C6373 - C135 * C6365 - C134 * C6374 + C153792 * C6383) *
                 C154087 +
             (C134 * C6377 - C135 * C6367 - C134 * C6378 + C153792 * C6385) *
                 C154106) *
                C154074 +
            (C50156 + C50155 + C50154) * C47633 +
            (C50153 + C50152 + C50151) * C47632) *
               C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C153638 * C47632 +
            (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
               C154022 -
           ((C52133 + C52134 + C52135) * C153638 * C154074 +
            (C52132 + C52131 + C52130) * C153638 * C47633 +
            (C52129 + C52128 + C52127) * C153638 * C47632) *
               C153775) *
              C154092 +
          (((C52922 + C52923 + C52924) * C153638 * C47632 +
            (C52925 + C52926 + C52927) * C153638 * C47633 +
            (C53534 + C53535 + C53536) * C153638 * C154074) *
               C153775 -
           (C53533 * C154074 + (C52924 + C52923 + C52922) * C153638 * C47633 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C153638 * C47632) *
               C154022) *
              C154093 +
          (((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
             C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
             C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                C153638 * C47632 +
            (C54299 + C54300 + C54301) * C153638 * C47633 +
            (C54302 + C54303 + C54304) * C153638 * C154074) *
               C154022 -
           ((C2881 * C30184 - C2882 * C30182 - C2881 * C30185 +
             C154071 * C30188 + C2879 * C30186 - C2880 * C30183 -
             C2879 * C30187 + C154097 * C30189 + C2877 * C6377 - C2878 * C6367 -
             C2877 * C6378 + C154109 * C6385) *
                C153638 * C154074 +
            (C54304 + C54303 + C54302) * C153638 * C47633 +
            (C54301 + C54300 + C54299) * C153638 * C47632) *
               C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C153638 * C55718 +
            C55976 * C55719 + C55977 * C55720 + C55978 * C55721 +
            C55979 * C55722) *
               C154022 -
           (C55998 * C55722 + C55979 * C55721 + C55978 * C55720 +
            C55977 * C55719 + C55976 * C55718) *
               C153775) *
              C154092 +
          ((C56414 * C55718 + C56415 * C55719 + C56416 * C55720 +
            C56434 * C55721 + C56773 * C55722) *
               C153775 -
           (C56434 * C55722 + C56416 * C55721 + C56415 * C55720 +
            C56414 * C55719 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                C153638 * C55718) *
               C154022) *
              C154093 +
          (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                C153638 * C55718 +
            C57180 * C55719 + C57181 * C55720 + C57196 * C55721 +
            C57197 * C55722) *
               C154022 -
           ((C134 * C34031 - C135 * C34029 - C134 * C34032 + C153792 * C34035) *
                C153638 * C55722 +
            C57197 * C55721 + C57196 * C55720 + C57181 * C55719 +
            C57180 * C55718) *
               C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (-0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                    C122 +
                C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                   C153810 * C153711 * C1279 -
               (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
                (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                    C122) *
                   C153810 * C153711 * C153747) *
                  C1281 +
              ((C437 * C122 + C436 * C123 + C435 * C124 + C434 * C125 +
                C808 * C126) *
                   C153810 * C153711 * C153747 -
               (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
                C205 * C122) *
                   C153810 * C153711 * C1279) *
                  C1282 +
              ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125 +
                C210 * C126) *
                   C153810 * C153711 * C1279 -
               ((C134 * C798 - C135 * C797 - C134 * C799 + C153792 * C800) *
                    C126 +
                C808 * C125 + C434 * C124 + C435 * C123 + C436 * C122) *
                   C153810 * C153711 * C153747) *
                  C1283) -
         0.25 * std::pow(Pi, 2.5) *
             (((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                   C122 +
               C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                  C153810 * C153711 * C1366 -
              (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
               (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                   C122) *
                  C153810 * C153711 * C1367 +
              ((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                   C122 +
               C438 * C123 + C439 * C124 + C440 * C125 + C441 * C126) *
                  C153810 * C153711 * C1368 -
              ((C134 * C1376 - C135 * C1371 - C134 * C1377 + C153792 * C1386) *
                   C126 +
               (C134 * C1378 - C135 * C1372 - C134 * C1379 + C153792 * C1387) *
                   C125 +
               (C134 * C1380 - C135 * C1373 - C134 * C1381 + C153792 * C1388) *
                   C124 +
               (C134 * C1382 - C135 * C1374 - C134 * C1383 + C153792 * C1389) *
                   C123 +
               (C134 * C1384 - C135 * C1375 - C134 * C1385 + C153792 * C1390) *
                   C122) *
                  C153810 * C153711 * C1369) *
             C153676 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                    C122 +
                C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                   C153810 * C563 -
               (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
                (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) *
                    C122) *
                   C153810 * C564 +
               ((C134 * C588 - C135 * C571 - C134 * C589 + C153792 * C607) *
                    C122 +
                C667 * C123 + C668 * C124 + C669 * C125 + C670 * C126) *
                   C153810 * C565) *
                  C1279 +
              (((C134 * C1111 - C135 * C1105 - C134 * C1112 + C153792 * C1123) *
                    C122 +
                C1154 * C123 + C1155 * C124 + C1156 * C125 + C1157 * C126) *
                   C153810 * C564 -
               (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
                (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                    C122) *
                   C153810 * C563 -
               ((C134 * C1518 - C135 * C1513 - C134 * C1519 + C153792 * C1528) *
                    C126 +
                (C134 * C1520 - C135 * C1514 - C134 * C1521 + C153792 * C1529) *
                    C125 +
                (C134 * C1522 - C135 * C1515 - C134 * C1523 + C153792 * C1530) *
                    C124 +
                (C134 * C1524 - C135 * C1516 - C134 * C1525 + C153792 * C1531) *
                    C123 +
                (C134 * C1526 - C135 * C1517 - C134 * C1527 + C153792 * C1532) *
                    C122) *
                   C153810 * C565) *
                  C153747) *
             C153676 -
         0.25 * std::pow(Pi, 2.5) *
             ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
                 C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
                 C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                    C2874 +
                (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
                   C153810 * C153711 * C1279 -
               (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
                (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 +
                 C154071 * C1390 + C2879 * C359 - C2880 * C342 - C2879 * C360 +
                 C154097 * C378 + C2877 * C357 - C2878 * C341 - C2877 * C358 +
                 C154109 * C377) *
                    C2874) *
                   C153810 * C153711 * C153747) *
                  C1281 +
              (((C3283 + C3282 + C3281) * C2874 +
                (C3280 + C3279 + C3278) * C2875 +
                (C3846 + C3847 + C3848) * C154058) *
                   C153810 * C153711 * C153747 -
               (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
                (C2958 + C2957 + C2956) * C2874) *
                   C153810 * C153711 * C1279) *
                  C1282 +
              ((C2970 * C2874 + (C2964 + C2963 + C2962) * C2875 +
                (C2965 + C2966 + C2967) * C154058) *
                   C153810 * C153711 * C1279 -
               ((C2881 * C1376 - C2882 * C1371 - C2881 * C1377 +
                 C154071 * C1386 + C2879 * C367 - C2880 * C346 - C2879 * C368 +
                 C154097 * C382 + C2877 * C349 - C2878 * C337 - C2877 * C350 +
                 C154109 * C373) *
                    C154058 +
                (C3848 + C3847 + C3846) * C2875 + C3839 * C2874) *
                   C153810 * C153711 * C153747) *
                  C1283) -
         0.25 * std::pow(Pi, 2.5) *
             (((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
                C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
                C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                   C2874 +
               (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
                  C153810 * C153711 * C1366 -
              (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
               (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 +
                C154071 * C1390 + C2879 * C359 - C2880 * C342 - C2879 * C360 +
                C154097 * C378 + C2877 * C357 - C2878 * C341 - C2877 * C358 +
                C154109 * C377) *
                   C2874) *
                  C153810 * C153711 * C1367 +
              ((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
                C2879 * C1384 - C2880 * C1375 - C2879 * C1385 +
                C154097 * C1390 + C2881 * C3193 - C2882 * C3189 -
                C2881 * C3194 + C154071 * C3201) *
                   C2874 +
               (C3284 + C3285 + C3286) * C2875 +
               (C3287 + C3288 + C3289) * C154058) *
                  C153810 * C153711 * C1368 -
              ((C2881 * C4804 - C2882 * C4801 - C2881 * C4805 +
                C154071 * C4810 + C2879 * C3197 - C2880 * C3191 -
                C2879 * C3198 + C154097 * C3203 + C2877 * C1380 -
                C2878 * C1373 - C2877 * C1381 + C154109 * C1388) *
                   C154058 +
               (C2881 * C4806 - C2882 * C4802 - C2881 * C4807 +
                C154071 * C4811 + C2879 * C3195 - C2880 * C3190 -
                C2879 * C3196 + C154097 * C3202 + C2877 * C1382 -
                C2878 * C1374 - C2877 * C1383 + C154109 * C1389) *
                   C2875 +
               (C2881 * C4808 - C2882 * C4803 - C2881 * C4809 +
                C154071 * C4812 + C2879 * C3193 - C2880 * C3189 -
                C2879 * C3194 + C154097 * C3201 + C2877 * C1384 -
                C2878 * C1375 - C2877 * C1385 + C154109 * C1390) *
                   C2874) *
                  C153810 * C153711 * C1369) *
             C153676 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
                 C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
                 C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                    C2874 +
                (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
                   C153810 * C563 -
               (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
                (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 +
                 C154071 * C1963 + C2879 * C1111 - C2880 * C1105 -
                 C2879 * C1112 + C154097 * C1123 + C2877 * C586 - C2878 * C570 -
                 C2877 * C587 + C154109 * C606) *
                    C2874) *
                   C153810 * C564 +
               ((C2877 * C588 - C2878 * C571 - C2877 * C589 + C154109 * C607 +
                 C2879 * C1526 - C2880 * C1517 - C2879 * C1527 +
                 C154097 * C1532 + C2881 * C3511 - C2882 * C3507 -
                 C2881 * C3512 + C154071 * C3519) *
                    C2874 +
                (C3602 + C3603 + C3604) * C2875 +
                (C3605 + C3606 + C3607) * C154058) *
                   C153810 * C565) *
                  C1279 +
              (((C2877 * C1111 - C2878 * C1105 - C2877 * C1112 +
                 C154109 * C1123 + C2879 * C1957 - C2880 * C1948 -
                 C2879 * C1958 + C154097 * C1963 + C2881 * C4383 -
                 C2882 * C4379 - C2881 * C4384 + C154071 * C4391) *
                    C2874 +
                (C4432 + C4433 + C4434) * C2875 +
                (C4435 + C4436 + C4437) * C154058) *
                   C153810 * C564 -
               (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
                (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 +
                 C154071 * C1390 + C2879 * C359 - C2880 * C342 - C2879 * C360 +
                 C154097 * C378 + C2877 * C357 - C2878 * C341 - C2877 * C358 +
                 C154109 * C377) *
                    C2874) *
                   C153810 * C563 -
               ((C2881 * C5034 - C2882 * C5031 - C2881 * C5035 +
                 C154071 * C5040 + C2879 * C3515 - C2880 * C3509 -
                 C2879 * C3516 + C154097 * C3521 + C2877 * C1522 -
                 C2878 * C1515 - C2877 * C1523 + C154109 * C1530) *
                    C154058 +
                (C2881 * C5036 - C2882 * C5032 - C2881 * C5037 +
                 C154071 * C5041 + C2879 * C3513 - C2880 * C3508 -
                 C2879 * C3514 + C154097 * C3520 + C2877 * C1524 -
                 C2878 * C1516 - C2877 * C1525 + C154109 * C1531) *
                    C2875 +
                (C2881 * C5038 - C2882 * C5033 - C2881 * C5039 +
                 C154071 * C5042 + C2879 * C3511 - C2880 * C3507 -
                 C2879 * C3512 + C154097 * C3519 + C2877 * C1526 -
                 C2878 * C1517 - C2877 * C1527 + C154109 * C1532) *
                    C2874) *
                   C153810 * C565) *
                  C153747) *
             C153676 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                     C2874 +
                 C205 * C2875 + C206 * C154058) *
                    C154110 +
                (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
                   C153711 * C1279 -
               ((C8589 + C8588 + C8617) * C154074 +
                (C8583 + C8582 + C8616) * C154099 +
                (C436 * C154058 + C437 * C2875 +
                 (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                     C2874) *
                    C154110) *
                   C153711 * C153747) *
                  C1281 +
              (((C437 * C2874 + C436 * C2875 + C435 * C154058) * C154110 +
                (C8598 + C8599 + C8600) * C154099 +
                (C8601 + C8602 + C8603) * C154074) *
                   C153711 * C153747 -
               (C7816 * C154074 + (C7791 + C7790 + C7789) * C154099 +
                (C207 * C154058 + C206 * C2875 + C205 * C2874) * C154110) *
                   C153711 * C1279) *
                  C1282 +
              (((C206 * C2874 + C207 * C2875 + C208 * C154058) * C154110 +
                (C8278 + C8279 + C8280) * C154099 +
                (C8281 + C8282 + C8283) * C154074) *
                   C153711 * C1279 -
               (((C134 * C1518 - C135 * C1513 - C134 * C1519 +
                  C153792 * C1528) *
                     C154058 +
                 C8059 * C2875 + C7517 * C2874) *
                    C154074 +
                (C1157 * C154058 + C1156 * C2875 + C1155 * C2874) * C154099 +
                (C434 * C154058 + C435 * C2875 + C436 * C2874) * C154110) *
                   C153711 * C153747) *
                  C1283) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                    C2874 +
                C205 * C2875 + C206 * C154058) *
                   C154110 +
               (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
                  C153711 * C1366 -
              ((C8589 + C8588 + C8617) * C154074 +
               (C8583 + C8582 + C8616) * C154099 +
               (C436 * C154058 + C437 * C2875 +
                (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                    C2874) *
                   C154110) *
                  C153711 * C1367 +
              (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                    C2874 +
                C438 * C2875 + C439 * C154058) *
                   C154110 +
               ((C134 * C1957 - C135 * C1948 - C134 * C1958 + C153792 * C1963) *
                    C2874 +
                C7519 * C2875 + C7520 * C154058) *
                   C154099 +
               ((C134 * C3511 - C135 * C3507 - C134 * C3512 + C153792 * C3519) *
                    C2874 +
                C7521 * C2875 + C7522 * C154058) *
                   C154074) *
                  C153711 * C1368 -
              (((C134 * C5034 - C135 * C5031 - C134 * C5035 + C153792 * C5040) *
                    C154058 +
                (C134 * C5036 - C135 * C5032 - C134 * C5037 + C153792 * C5041) *
                    C2875 +
                (C134 * C5038 - C135 * C5033 - C134 * C5039 + C153792 * C5042) *
                    C2874) *
                   C154074 +
               ((C134 * C4387 - C135 * C4381 - C134 * C4388 + C153792 * C4393) *
                    C154058 +
                (C134 * C4385 - C135 * C4380 - C134 * C4386 + C153792 * C4392) *
                    C2875 +
                (C134 * C4383 - C135 * C4379 - C134 * C4384 + C153792 * C4391) *
                    C2874) *
                   C154099 +
               ((C134 * C1380 - C135 * C1373 - C134 * C1381 + C153792 * C1388) *
                    C154058 +
                (C134 * C1382 - C135 * C1374 - C134 * C1383 + C153792 * C1389) *
                    C2875 +
                (C134 * C1384 - C135 * C1375 - C134 * C1385 + C153792 * C1390) *
                    C2874) *
                   C154110) *
                  C153711 * C1369) *
             C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C2874 +
             C205 * C2875 + C206 * C154058) *
                C154110 +
            (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
               C563 -
           ((C7827 + C7828 + C7829) * C154074 +
            (C7768 + C7767 + C7826) * C154099 +
            (C7762 + C7761 + C7825) * C154110) *
               C564 +
           (C7834 * C154110 + (C7829 + C7828 + C7827) * C154099 +
            ((C134 * C7744 - C135 * C7740 - C134 * C7745 + C153792 * C7752) *
                 C2874 +
             C7822 * C2875 + C7823 * C154058) *
                C154074) *
               C565) *
              C1279 +
          (((C8616 + C8582 + C8583) * C154110 +
            (C8617 + C8588 + C8589) * C154099 +
            (C9223 + C9216 + C9217) * C154074) *
               C564 -
           (C9220 * C154074 + (C8583 + C8582 + C8616) * C154099 +
            (C436 * C154058 + C437 * C2875 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C2874) *
                C154110) *
               C563 -
           (((C134 * C9202 - C135 * C9199 - C134 * C9203 + C153792 * C9208) *
                 C154058 +
             (C134 * C9204 - C135 * C9200 - C134 * C9205 + C153792 * C9209) *
                 C2875 +
             (C134 * C9206 - C135 * C9201 - C134 * C9207 + C153792 * C9210) *
                 C2874) *
                C154074 +
            (C9217 + C9216 + C9223) * C154099 + C9220 * C154110) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C153711 * C1279 -
           (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C153711 * C153747) *
              C1281 +
          (((C24602 + C24601 + C24600) * C154106 +
            (C24599 + C24598 + C24597) * C154087 +
            (C25149 + C25150 + C25151) * C154058) *
               C153810 * C153711 * C153747 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C153711 * C1279) *
              C1282 +
          ((C24305 * C154106 + (C24299 + C24298 + C24297) * C154087 +
            (C24300 + C24301 + C24302) * C154058) *
               C153810 * C153711 * C1279 -
           ((C24216 * C1376 - C24217 * C1371 - C24216 * C1377 +
             C154071 * C1386 + C24214 * C367 - C24215 * C346 - C24214 * C368 +
             C24207 * C382 + C24212 * C349 - C24213 * C337 - C24212 * C350 +
             C24206 * C373) *
                C154058 +
            (C25151 + C25150 + C25149) * C154087 + C25142 * C154106) *
               C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
            C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
            C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
               C154106 +
           (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
              C153810 * C153711 * C1366 -
          (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
           (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 + C154071 * C1390 +
            C24214 * C359 - C24215 * C342 - C24214 * C360 + C24207 * C378 +
            C24212 * C357 - C24213 * C341 - C24212 * C358 + C24206 * C377) *
               C154106) *
              C153810 * C153711 * C1367 +
          ((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
            C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
            C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
            C154071 * C3201) *
               C154106 +
           (C24603 + C24604 + C24605) * C154087 +
           (C24606 + C24607 + C24608) * C154058) *
              C153810 * C153711 * C1368 -
          ((C24216 * C4804 - C24217 * C4801 - C24216 * C4805 + C154071 * C4810 +
            C24214 * C3197 - C24215 * C3191 - C24214 * C3198 + C24207 * C3203 +
            C24212 * C1380 - C24213 * C1373 - C24212 * C1381 + C24206 * C1388) *
               C154058 +
           (C24216 * C4806 - C24217 * C4802 - C24216 * C4807 + C154071 * C4811 +
            C24214 * C3195 - C24215 * C3190 - C24214 * C3196 + C24207 * C3202 +
            C24212 * C1382 - C24213 * C1374 - C24212 * C1383 + C24206 * C1389) *
               C154087 +
           (C24216 * C4808 - C24217 * C4803 - C24216 * C4809 + C154071 * C4812 +
            C24214 * C3193 - C24215 * C3189 - C24214 * C3194 + C24207 * C3201 +
            C24212 * C1384 - C24213 * C1375 - C24212 * C1385 + C24206 * C1390) *
               C154106) *
              C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C563 -
           (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C564 +
           ((C24212 * C588 - C24213 * C571 - C24212 * C589 + C24206 * C607 +
             C24214 * C1526 - C24215 * C1517 - C24214 * C1527 + C24207 * C1532 +
             C24216 * C3511 - C24217 * C3507 - C24216 * C3512 +
             C154071 * C3519) *
                C154106 +
            (C24905 + C24906 + C24907) * C154087 +
            (C24908 + C24909 + C24910) * C154058) *
               C153810 * C565) *
              C1279 +
          (((C24212 * C1111 - C24213 * C1105 - C24212 * C1112 + C24206 * C1123 +
             C24214 * C1957 - C24215 * C1948 - C24214 * C1958 + C24207 * C1963 +
             C24216 * C4383 - C24217 * C4379 - C24216 * C4384 +
             C154071 * C4391) *
                C154106 +
            (C25719 + C25720 + C25721) * C154087 +
            (C25722 + C25723 + C25724) * C154058) *
               C153810 * C564 -
           (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C563 -
           ((C24216 * C5034 - C24217 * C5031 - C24216 * C5035 +
             C154071 * C5040 + C24214 * C3515 - C24215 * C3509 -
             C24214 * C3516 + C24207 * C3521 + C24212 * C1522 - C24213 * C1515 -
             C24212 * C1523 + C24206 * C1530) *
                C154058 +
            (C24216 * C5036 - C24217 * C5032 - C24216 * C5037 +
             C154071 * C5041 + C24214 * C3513 - C24215 * C3508 -
             C24214 * C3514 + C24207 * C3520 + C24212 * C1524 - C24213 * C1516 -
             C24212 * C1525 + C24206 * C1531) *
                C154087 +
            (C24216 * C5038 - C24217 * C5033 - C24216 * C5039 +
             C154071 * C5042 + C24214 * C3511 - C24215 * C3507 -
             C24214 * C3512 + C24207 * C3519 + C24212 * C1526 - C24213 * C1517 -
             C24212 * C1527 + C24206 * C1532) *
                C154106) *
               C153810 * C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C153711 * C1279 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C153711 * C153747) *
              C1281 +
          ((C28428 * C355 - C28429 * C340 - C28428 * C356 + C28422 * C376 +
            C28430 * C361 - C28431 * C343 - C28430 * C362 + C28423 * C379 +
            C28432 * C1382 - C28433 * C1374 - C28432 * C1383 + C28424 * C1389 +
            C28434 * C3195 - C28435 * C3190 - C28434 * C3196 + C28425 * C3202 +
            C28436 * C4806 - C28437 * C4802 - C28436 * C4807 + C28426 * C4811) *
               C153638 * C153810 * C153711 * C153747 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C153711 * C1279) *
              C1282 +
          ((C28428 * C148 - C28429 * C138 - C28428 * C149 + C28422 * C162 +
            C28430 * C353 - C28431 * C339 - C28430 * C354 + C28423 * C375 +
            C28432 * C363 - C28433 * C344 - C28432 * C364 + C28424 * C380 +
            C28434 * C1380 - C28435 * C1373 - C28434 * C1381 + C28425 * C1388 +
            C28436 * C3197 - C28437 * C3191 - C28436 * C3198 + C28426 * C3203) *
               C153638 * C153810 * C153711 * C1279 -
           (C28436 * C4804 - C28437 * C4801 - C28436 * C4805 + C28426 * C4810 +
            C28434 * C3197 - C28435 * C3191 - C28434 * C3198 + C28425 * C3203 +
            C28432 * C1380 - C28433 * C1373 - C28432 * C1381 + C28424 * C1388 +
            C28430 * C363 - C28431 * C344 - C28430 * C364 + C28423 * C380 +
            C28428 * C353 - C28429 * C339 - C28428 * C354 + C28422 * C375) *
               C153638 * C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
           C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
           C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
           C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
           C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
              C153638 * C153810 * C153711 * C1366 -
          (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
           C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
           C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
           C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
           C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
              C153638 * C153810 * C153711 * C1367 +
          (C28428 * C359 - C28429 * C342 - C28428 * C360 + C28422 * C378 +
           C28430 * C1384 - C28431 * C1375 - C28430 * C1385 + C28423 * C1390 +
           C28432 * C3193 - C28433 * C3189 - C28432 * C3194 + C28424 * C3201 +
           C28434 * C4808 - C28435 * C4803 - C28434 * C4809 + C28425 * C4812 +
           C28436 * C28562 - C28437 * C28560 - C28436 * C28563 +
           C28426 * C28566) *
              C153638 * C153810 * C153711 * C1368 -
          (C28436 * C29317 - C28437 * C29316 - C28436 * C29318 +
           C28426 * C29319 + C28434 * C28562 - C28435 * C28560 -
           C28434 * C28563 + C28425 * C28566 + C28432 * C4808 - C28433 * C4803 -
           C28432 * C4809 + C28424 * C4812 + C28430 * C3193 - C28431 * C3189 -
           C28430 * C3194 + C28423 * C3201 + C28428 * C1384 - C28429 * C1375 -
           C28428 * C1385 + C28422 * C1390) *
              C153638 * C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C563 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C564 +
           (C28428 * C588 - C28429 * C571 - C28428 * C589 + C28422 * C607 +
            C28430 * C1526 - C28431 * C1517 - C28430 * C1527 + C28423 * C1532 +
            C28432 * C3511 - C28433 * C3507 - C28432 * C3512 + C28424 * C3519 +
            C28434 * C5038 - C28435 * C5033 - C28434 * C5039 + C28425 * C5042 +
            C28436 * C28692 - C28437 * C28690 - C28436 * C28693 +
            C28426 * C28696) *
               C153638 * C153810 * C565) *
              C1279 +
          ((C28428 * C1111 - C28429 * C1105 - C28428 * C1112 + C28422 * C1123 +
            C28430 * C1957 - C28431 * C1948 - C28430 * C1958 + C28423 * C1963 +
            C28432 * C4383 - C28433 * C4379 - C28432 * C4384 + C28424 * C4391 +
            C28434 * C5776 - C28435 * C5771 - C28434 * C5777 + C28425 * C5780 +
            C28436 * C29106 - C28437 * C29104 - C28436 * C29107 +
            C28426 * C29110) *
               C153638 * C153810 * C564 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C563 -
           (C28436 * C29443 - C28437 * C29442 - C28436 * C29444 +
            C28426 * C29445 + C28434 * C28692 - C28435 * C28690 -
            C28434 * C28693 + C28425 * C28696 + C28432 * C5038 -
            C28433 * C5033 - C28432 * C5039 + C28424 * C5042 + C28430 * C3511 -
            C28431 * C3507 - C28430 * C3512 + C28423 * C3519 + C28428 * C1526 -
            C28429 * C1517 - C28428 * C1527 + C28422 * C1532) *
               C153638 * C153810 * C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C153638 * C154110 +
            (C31262 + C31263 + C31264) * C153638 * C154099 + C31276 * C154074) *
               C153711 * C1279 -
           ((C32066 + C32065 + C32064) * C153638 * C154074 +
            (C32063 + C32062 + C32061) * C153638 * C154099 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C153638 * C154110) *
               C153711 * C153747) *
              C1281 +
          (((C24602 + C24601 + C24600) * C153638 * C154110 +
            (C25719 + C25720 + C25721) * C153638 * C154099 +
            (C32067 + C32068 + C32069) * C153638 * C154074) *
               C153711 * C153747 -
           (C31261 * C154074 + (C24902 + C24903 + C24904) * C153638 * C154099 +
            (C24293 + C24292 + C24291) * C153638 * C154110) *
               C153711 * C1279) *
              C1282 +
          ((C24305 * C153638 * C154110 +
            (C24901 + C24900 + C24899) * C153638 * C154099 +
            (C24908 + C24909 + C24910) * C153638 * C154074) *
               C153711 * C1279 -
           ((C24216 * C5034 - C24217 * C5031 - C24216 * C5035 +
             C154071 * C5040 + C24214 * C3515 - C24215 * C3509 -
             C24214 * C3516 + C24207 * C3521 + C24212 * C1522 - C24213 * C1515 -
             C24212 * C1523 + C24206 * C1530) *
                C153638 * C154074 +
            (C25724 + C25723 + C25722) * C153638 * C154099 +
            C25142 * C153638 * C154110) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
            C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
            C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
               C153638 * C154110 +
           (C31262 + C31263 + C31264) * C153638 * C154099 + C31276 * C154074) *
              C153711 * C1366 -
          ((C32066 + C32065 + C32064) * C153638 * C154074 +
           (C32063 + C32062 + C32061) * C153638 * C154099 +
           (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 + C154071 * C1390 +
            C24214 * C359 - C24215 * C342 - C24214 * C360 + C24207 * C378 +
            C24212 * C357 - C24213 * C341 - C24212 * C358 + C24206 * C377) *
               C153638 * C154110) *
              C153711 * C1367 +
          ((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
            C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
            C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
            C154071 * C3201) *
               C153638 * C154110 +
           (C24212 * C1957 - C24213 * C1948 - C24212 * C1958 + C24206 * C1963 +
            C24214 * C4383 - C24215 * C4379 - C24214 * C4384 + C24207 * C4391 +
            C24216 * C5776 - C24217 * C5771 - C24216 * C5777 +
            C154071 * C5780) *
               C153638 * C154099 +
           (C24212 * C3511 - C24213 * C3507 - C24212 * C3512 + C24206 * C3519 +
            C24214 * C5038 - C24215 * C5033 - C24214 * C5039 + C24207 * C5042 +
            C24216 * C28692 - C24217 * C28690 - C24216 * C28693 +
            C154071 * C28696) *
               C153638 * C154074) *
              C153711 * C1368 -
          ((C24216 * C29443 - C24217 * C29442 - C24216 * C29444 +
            C154071 * C29445 + C24214 * C28692 - C24215 * C28690 -
            C24214 * C28693 + C24207 * C28696 + C24212 * C5038 -
            C24213 * C5033 - C24212 * C5039 + C24206 * C5042) *
               C153638 * C154074 +
           (C24216 * C29106 - C24217 * C29104 - C24216 * C29107 +
            C154071 * C29110 + C24214 * C5776 - C24215 * C5771 -
            C24214 * C5777 + C24207 * C5780 + C24212 * C4383 - C24213 * C4379 -
            C24212 * C4384 + C24206 * C4391) *
               C153638 * C154099 +
           (C24216 * C4808 - C24217 * C4803 - C24216 * C4809 + C154071 * C4812 +
            C24214 * C3193 - C24215 * C3189 - C24214 * C3194 + C24207 * C3201 +
            C24212 * C1384 - C24213 * C1375 - C24212 * C1385 + C24206 * C1390) *
               C153638 * C154110) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C153638 * C154110 +
            (C31262 + C31263 + C31264) * C153638 * C154099 + C31276 * C154074) *
               C563 -
           ((C31268 + C31269 + C31270) * C153638 * C154074 +
            (C31267 + C31266 + C31265) * C153638 * C154099 +
            (C31264 + C31263 + C31262) * C153638 * C154110) *
               C564 +
           (C31276 * C154110 + (C31270 + C31269 + C31268) * C153638 * C154099 +
            (C24212 * C7744 - C24213 * C7740 - C24212 * C7745 + C24206 * C7752 +
             C24214 * C9206 - C24215 * C9201 - C24214 * C9207 + C24207 * C9210 +
             C24216 * C31180 - C24217 * C31178 - C24216 * C31181 +
             C154071 * C31184) *
                C153638 * C154074) *
               C565) *
              C1279 +
          (((C32061 + C32062 + C32063) * C153638 * C154110 +
            (C32064 + C32065 + C32066) * C153638 * C154099 +
            (C32677 + C32678 + C32679) * C153638 * C154074) *
               C564 -
           (C32676 * C154074 + (C32063 + C32062 + C32061) * C153638 * C154099 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C153638 * C154110) *
               C563 -
           ((C24216 * C32652 - C24217 * C32651 - C24216 * C32653 +
             C154071 * C32654 + C24214 * C31180 - C24215 * C31178 -
             C24214 * C31181 + C24207 * C31184 + C24212 * C9206 -
             C24213 * C9201 - C24212 * C9207 + C24206 * C9210) *
                C153638 * C154074 +
            (C32679 + C32678 + C32677) * C153638 * C154099 + C32676 * C154110) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154106 +
             C205 * C154087 + C206 * C154058) *
                C47632 +
            (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
               C153711 * C1279 -
           ((C48831 + C48830 + C48829) * C154074 +
            (C48828 + C48827 + C48826) * C47633 +
            (C436 * C154058 + C437 * C154087 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154106) *
                C47632) *
               C153711 * C153747) *
              C1281 +
          (((C437 * C154106 + C436 * C154087 + C435 * C154058) * C47632 +
            (C48832 + C48833 + C48834) * C47633 +
            (C48835 + C48836 + C48837) * C154074) *
               C153711 * C153747 -
           (C48093 * C154074 + (C48083 + C48082 + C48081) * C47633 +
            (C207 * C154058 + C206 * C154087 + C205 * C154106) * C47632) *
               C153711 * C1279) *
              C1282 +
          (((C206 * C154106 + C207 * C154087 + C208 * C154058) * C47632 +
            (C48530 + C48531 + C48532) * C47633 +
            (C48533 + C48534 + C48535) * C154074) *
               C153711 * C1279 -
           (((C134 * C1518 - C135 * C1513 - C134 * C1519 + C153792 * C1528) *
                 C154058 +
             C8059 * C154087 + C7517 * C154106) *
                C154074 +
            (C1157 * C154058 + C1156 * C154087 + C1155 * C154106) * C47633 +
            (C434 * C154058 + C435 * C154087 + C436 * C154106) * C47632) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C154106 +
            C205 * C154087 + C206 * C154058) *
               C47632 +
           (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
              C153711 * C1366 -
          ((C48831 + C48830 + C48829) * C154074 +
           (C48828 + C48827 + C48826) * C47633 +
           (C436 * C154058 + C437 * C154087 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                C154106) *
               C47632) *
              C153711 * C1367 +
          (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                C154106 +
            C438 * C154087 + C439 * C154058) *
               C47632 +
           (C9966 * C154106 + C7519 * C154087 + C7520 * C154058) * C47633 +
           (C9967 * C154106 + C7521 * C154087 + C7522 * C154058) * C154074) *
              C153711 * C1368 -
          (((C134 * C5034 - C135 * C5031 - C134 * C5035 + C153792 * C5040) *
                C154058 +
            (C134 * C5036 - C135 * C5032 - C134 * C5037 + C153792 * C5041) *
                C154087 +
            (C134 * C5038 - C135 * C5033 - C134 * C5039 + C153792 * C5042) *
                C154106) *
               C154074 +
           ((C134 * C4387 - C135 * C4381 - C134 * C4388 + C153792 * C4393) *
                C154058 +
            (C134 * C4385 - C135 * C4380 - C134 * C4386 + C153792 * C4392) *
                C154087 +
            (C134 * C4383 - C135 * C4379 - C134 * C4384 + C153792 * C4391) *
                C154106) *
               C47633 +
           ((C134 * C1380 - C135 * C1373 - C134 * C1381 + C153792 * C1388) *
                C154058 +
            (C134 * C1382 - C135 * C1374 - C134 * C1383 + C153792 * C1389) *
                C154087 +
            (C134 * C1384 - C135 * C1375 - C134 * C1385 + C153792 * C1390) *
                C154106) *
               C47632) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154106 +
             C205 * C154087 + C206 * C154058) *
                C47632 +
            (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
               C563 -
           ((C48078 + C48079 + C48080) * C154074 +
            (C48077 + C48076 + C48075) * C47633 +
            (C48074 + C48073 + C48072) * C47632) *
               C564 +
           (C48092 * C47632 + (C48080 + C48079 + C48078) * C47633 +
            (C10574 * C154106 + C7822 * C154087 + C7823 * C154058) * C154074) *
               C565) *
              C1279 +
          (((C48826 + C48827 + C48828) * C47632 +
            (C48829 + C48830 + C48831) * C47633 +
            (C49420 + C49421 + C49422) * C154074) *
               C564 -
           (C49424 * C154074 + (C48828 + C48827 + C48826) * C47633 +
            (C436 * C154058 + C437 * C154087 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154106) *
                C47632) *
               C563 -
           (((C134 * C9202 - C135 * C9199 - C134 * C9203 + C153792 * C9208) *
                 C154058 +
             (C134 * C9204 - C135 * C9200 - C134 * C9205 + C153792 * C9209) *
                 C154087 +
             (C134 * C9206 - C135 * C9201 - C134 * C9207 + C153792 * C9210) *
                 C154106) *
                C154074 +
            (C49422 + C49421 + C49420) * C47633 + C49424 * C47632) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C153638 * C47632 +
            (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
               C153711 * C1279 -
           ((C52927 + C52926 + C52925) * C153638 * C154074 +
            (C52924 + C52923 + C52922) * C153638 * C47633 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C153638 * C47632) *
               C153711 * C153747) *
              C1281 +
          (((C3283 + C3282 + C3281) * C153638 * C47632 +
            (C4432 + C4433 + C4434) * C153638 * C47633 +
            (C52928 + C52929 + C52930) * C153638 * C154074) *
               C153711 * C153747 -
           (C52126 * C154074 + (C3599 + C3600 + C3601) * C153638 * C47633 +
            (C2958 + C2957 + C2956) * C153638 * C47632) *
               C153711 * C1279) *
              C1282 +
          ((C2970 * C153638 * C47632 +
            (C3598 + C3597 + C3596) * C153638 * C47633 +
            (C3605 + C3606 + C3607) * C153638 * C154074) *
               C153711 * C1279 -
           ((C2881 * C5034 - C2882 * C5031 - C2881 * C5035 + C154071 * C5040 +
             C2879 * C3515 - C2880 * C3509 - C2879 * C3516 + C154097 * C3521 +
             C2877 * C1522 - C2878 * C1515 - C2877 * C1523 + C154109 * C1530) *
                C153638 * C154074 +
            (C4437 + C4436 + C4435) * C153638 * C47633 +
            C3839 * C153638 * C47632) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
            C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
            C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
               C153638 * C47632 +
           (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
              C153711 * C1366 -
          ((C52927 + C52926 + C52925) * C153638 * C154074 +
           (C52924 + C52923 + C52922) * C153638 * C47633 +
           (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
            C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
            C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
               C153638 * C47632) *
              C153711 * C1367 +
          ((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
            C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
            C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
               C153638 * C47632 +
           (C2877 * C1957 - C2878 * C1948 - C2877 * C1958 + C154109 * C1963 +
            C2879 * C4383 - C2880 * C4379 - C2879 * C4384 + C154097 * C4391 +
            C2881 * C5776 - C2882 * C5771 - C2881 * C5777 + C154071 * C5780) *
               C153638 * C47633 +
           (C2877 * C3511 - C2878 * C3507 - C2877 * C3512 + C154109 * C3519 +
            C2879 * C5038 - C2880 * C5033 - C2879 * C5039 + C154097 * C5042 +
            C2881 * C28692 - C2882 * C28690 - C2881 * C28693 +
            C154071 * C28696) *
               C153638 * C154074) *
              C153711 * C1368 -
          ((C2881 * C29443 - C2882 * C29442 - C2881 * C29444 +
            C154071 * C29445 + C2879 * C28692 - C2880 * C28690 -
            C2879 * C28693 + C154097 * C28696 + C2877 * C5038 - C2878 * C5033 -
            C2877 * C5039 + C154109 * C5042) *
               C153638 * C154074 +
           (C2881 * C29106 - C2882 * C29104 - C2881 * C29107 +
            C154071 * C29110 + C2879 * C5776 - C2880 * C5771 - C2879 * C5777 +
            C154097 * C5780 + C2877 * C4383 - C2878 * C4379 - C2877 * C4384 +
            C154109 * C4391) *
               C153638 * C47633 +
           (C2881 * C4808 - C2882 * C4803 - C2881 * C4809 + C154071 * C4812 +
            C2879 * C3193 - C2880 * C3189 - C2879 * C3194 + C154097 * C3201 +
            C2877 * C1384 - C2878 * C1375 - C2877 * C1385 + C154109 * C1390) *
               C153638 * C47632) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C153638 * C47632 +
            (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
               C563 -
           ((C52133 + C52134 + C52135) * C153638 * C154074 +
            (C52132 + C52131 + C52130) * C153638 * C47633 +
            (C52129 + C52128 + C52127) * C153638 * C47632) *
               C564 +
           (C52141 * C47632 + (C52135 + C52134 + C52133) * C153638 * C47633 +
            (C2877 * C7744 - C2878 * C7740 - C2877 * C7745 + C154109 * C7752 +
             C2879 * C9206 - C2880 * C9201 - C2879 * C9207 + C154097 * C9210 +
             C2881 * C31180 - C2882 * C31178 - C2881 * C31181 +
             C154071 * C31184) *
                C153638 * C154074) *
               C565) *
              C1279 +
          (((C52922 + C52923 + C52924) * C153638 * C47632 +
            (C52925 + C52926 + C52927) * C153638 * C47633 +
            (C53534 + C53535 + C53536) * C153638 * C154074) *
               C564 -
           (C53533 * C154074 + (C52924 + C52923 + C52922) * C153638 * C47633 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C153638 * C47632) *
               C563 -
           ((C2881 * C32652 - C2882 * C32651 - C2881 * C32653 +
             C154071 * C32654 + C2879 * C31180 - C2880 * C31178 -
             C2879 * C31181 + C154097 * C31184 + C2877 * C9206 - C2878 * C9201 -
             C2877 * C9207 + C154109 * C9210) *
                C153638 * C154074 +
            (C53536 + C53535 + C53534) * C153638 * C47633 + C53533 * C47632) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C153638 * C55718 +
            C55976 * C55719 + C55977 * C55720 + C55978 * C55721 +
            C55979 * C55722) *
               C153711 * C1279 -
           (C56434 * C55722 + C56416 * C55721 + C56415 * C55720 +
            C56414 * C55719 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                C153638 * C55718) *
               C153711 * C153747) *
              C1281 +
          ((C437 * C153638 * C55718 + C56421 * C55719 + C56422 * C55720 +
            C56423 * C55721 + C56435 * C55722) *
               C153711 * C153747 -
           (C55987 * C55722 + C55986 * C55721 + C55985 * C55720 +
            C55984 * C55719 + C205 * C153638 * C55718) *
               C153711 * C1279) *
              C1282 +
          ((C206 * C153638 * C55718 + C56244 * C55719 + C56245 * C55720 +
            C56246 * C55721 + C56247 * C55722) *
               C153711 * C1279 -
           ((C134 * C9202 - C135 * C9199 - C134 * C9203 + C153792 * C9208) *
                C153638 * C55722 +
            C8615 * C153638 * C55721 + C7517 * C153638 * C55720 +
            C1155 * C153638 * C55719 + C436 * C153638 * C55718) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
               C153638 * C55718 +
           C55976 * C55719 + C55977 * C55720 + C55978 * C55721 +
           C55979 * C55722) *
              C153711 * C1366 -
          (C56434 * C55722 + C56416 * C55721 + C56415 * C55720 +
           C56414 * C55719 +
           (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
               C153638 * C55718) *
              C153711 * C1367 +
          ((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
               C153638 * C55718 +
           C9966 * C153638 * C55719 + C9967 * C153638 * C55720 +
           (C134 * C6377 - C135 * C6367 - C134 * C6378 + C153792 * C6385) *
               C153638 * C55721 +
           (C134 * C31180 - C135 * C31178 - C134 * C31181 + C153792 * C31184) *
               C153638 * C55722) *
              C153711 * C1368 -
          ((C134 * C32652 - C135 * C32651 - C134 * C32653 + C153792 * C32654) *
               C153638 * C55722 +
           (C134 * C30186 - C135 * C30183 - C134 * C30187 + C153792 * C30189) *
               C153638 * C55721 +
           (C134 * C5038 - C135 * C5033 - C134 * C5039 + C153792 * C5042) *
               C153638 * C55720 +
           (C134 * C4383 - C135 * C4379 - C134 * C4384 + C153792 * C4391) *
               C153638 * C55719 +
           (C134 * C1384 - C135 * C1375 - C134 * C1385 + C153792 * C1390) *
               C153638 * C55718) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C153638 * C55718 +
            C55976 * C55719 + C55977 * C55720 + C55978 * C55721 +
            C55979 * C55722) *
               C563 -
           (C55998 * C55722 + C55979 * C55721 + C55978 * C55720 +
            C55977 * C55719 + C55976 * C55718) *
               C564 +
           (C55977 * C55718 + C55978 * C55719 + C55979 * C55720 +
            C55998 * C55721 +
            (C134 * C55969 - C135 * C55967 - C134 * C55970 + C153792 * C55973) *
                C153638 * C55722) *
               C565) *
              C1279 +
          ((C56414 * C55718 + C56415 * C55719 + C56416 * C55720 +
            C56434 * C55721 + C56773 * C55722) *
               C564 -
           (C56434 * C55722 + C56416 * C55721 + C56415 * C55720 +
            C56414 * C55719 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                C153638 * C55718) *
               C563 -
           ((C134 * C56762 - C135 * C56761 - C134 * C56763 + C153792 * C56764) *
                C153638 * C55722 +
            C56773 * C55721 + C56434 * C55720 + C56416 * C55719 +
            C56415 * C55718) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                     C122 +
                 C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                    C153810 * C154022 -
                (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
                 (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) *
                     C122) *
                    C153810 * C153775) *
                   C1279 +
               (((C134 * C1111 - C135 * C1105 - C134 * C1112 +
                  C153792 * C1123) *
                     C122 +
                 C1154 * C123 + C1155 * C124 + C1156 * C125 + C1157 * C126) *
                    C153810 * C153775 -
                (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
                 (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                     C122) *
                    C153810 * C154022) *
                   C153747) *
                  C154013 +
              (((C666 * C122 + C665 * C123 + C664 * C124 + C663 * C125 +
                 C943 * C126) *
                    C153810 * C153775 -
                (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
                 C205 * C122) *
                    C153810 * C154022) *
                   C1279 +
               ((C437 * C122 + C436 * C123 + C435 * C124 + C434 * C125 +
                 C808 * C126) *
                    C153810 * C154022 -
                ((C134 * C1121 - C135 * C1110 - C134 * C1122 +
                  C153792 * C1128) *
                     C126 +
                 C1157 * C125 + C1156 * C124 + C1155 * C123 + C1154 * C122) *
                    C153810 * C153775) *
                   C153747) *
                  C153682) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
                  C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
                  C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                     C2874 +
                 (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
                    C153810 * C154022 -
                (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
                 (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 +
                  C154071 * C1963 + C2879 * C1111 - C2880 * C1105 -
                  C2879 * C1112 + C154097 * C1123 + C2877 * C586 -
                  C2878 * C570 - C2877 * C587 + C154109 * C606) *
                     C2874) *
                    C153810 * C153775) *
                   C1279 +
               (((C2877 * C1111 - C2878 * C1105 - C2877 * C1112 +
                  C154109 * C1123 + C2879 * C1957 - C2880 * C1948 -
                  C2879 * C1958 + C154097 * C1963 + C2881 * C4383 -
                  C2882 * C4379 - C2881 * C4384 + C154071 * C4391) *
                     C2874 +
                 (C4432 + C4433 + C4434) * C2875 +
                 (C4435 + C4436 + C4437) * C154058) *
                    C153810 * C153775 -
                (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
                 (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 +
                  C154071 * C1390 + C2879 * C359 - C2880 * C342 - C2879 * C360 +
                  C154097 * C378 + C2877 * C357 - C2878 * C341 - C2877 * C358 +
                  C154109 * C377) *
                     C2874) *
                    C153810 * C154022) *
                   C153747) *
                  C154013 +
              ((((C3601 + C3600 + C3599) * C2874 +
                 (C3598 + C3597 + C3596) * C2875 +
                 (C4087 + C4088 + C4089) * C154058) *
                    C153810 * C153775 -
                (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
                 (C2958 + C2957 + C2956) * C2874) *
                    C153810 * C154022) *
                   C1279 +
               (((C3283 + C3282 + C3281) * C2874 +
                 (C3280 + C3279 + C3278) * C2875 +
                 (C3846 + C3847 + C3848) * C154058) *
                    C153810 * C154022 -
                ((C2881 * C4389 - C2882 * C4382 - C2881 * C4390 +
                  C154071 * C4394 + C2879 * C1951 - C2880 * C1945 -
                  C2879 * C1952 + C154097 * C1960 + C2877 * C1117 -
                  C2878 * C1108 - C2877 * C1118 + C154109 * C1126) *
                     C154058 +
                 (C4437 + C4436 + C4435) * C2875 +
                 (C4434 + C4433 + C4432) * C2874) *
                    C153810 * C153775) *
                   C153747) *
                  C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                  C2874 +
              C205 * C2875 + C206 * C154058) *
                 C154110 +
             (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
                C154022 -
            ((C7827 + C7828 + C7829) * C154074 +
             (C7768 + C7767 + C7826) * C154099 +
             (C7762 + C7761 + C7825) * C154110) *
                C153775) *
               C1279 +
           (((C8616 + C8582 + C8583) * C154110 +
             (C8617 + C8588 + C8589) * C154099 +
             (C9223 + C9216 + C9217) * C154074) *
                C153775 -
            (C9220 * C154074 + (C8583 + C8582 + C8616) * C154099 +
             (C436 * C154058 + C437 * C2875 +
              (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                  C2874) *
                 C154110) *
                C154022) *
               C153747) *
              C154013 +
          ((((C7789 + C7790 + C7791) * C154110 +
             (C7792 + C7793 + C7794) * C154099 +
             (C7830 + C7831 + C7832) * C154074) *
                C153775 -
            (C7816 * C154074 + (C7791 + C7790 + C7789) * C154099 +
             (C207 * C154058 + C206 * C2875 + C205 * C2874) * C154110) *
                C154022) *
               C1279 +
           (((C437 * C2874 + C436 * C2875 + C435 * C154058) * C154110 +
             (C8598 + C8599 + C8600) * C154099 +
             (C8601 + C8602 + C8603) * C154074) *
                C154022 -
            (((C134 * C8574 - C135 * C8573 - C134 * C8575 + C153792 * C8576) *
                  C154058 +
              C8615 * C2875 + C8614 * C2874) *
                 C154074 +
             (C8603 + C8602 + C8601) * C154099 +
             (C8600 + C8599 + C8598) * C154110) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154106 +
             (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
                C153810 * C154022 -
            (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
             (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
              C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
              C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
              C24212 * C587 + C24206 * C606) *
                 C154106) *
                C153810 * C153775) *
               C1279 +
           (((C24212 * C1111 - C24213 * C1105 - C24212 * C1112 +
              C24206 * C1123 + C24214 * C1957 - C24215 * C1948 -
              C24214 * C1958 + C24207 * C1963 + C24216 * C4383 -
              C24217 * C4379 - C24216 * C4384 + C154071 * C4391) *
                 C154106 +
             (C25719 + C25720 + C25721) * C154087 +
             (C25722 + C25723 + C25724) * C154058) *
                C153810 * C153775 -
            (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C154106) *
                C153810 * C154022) *
               C153747) *
              C154013 +
          ((((C24904 + C24903 + C24902) * C154106 +
             (C24901 + C24900 + C24899) * C154087 +
             (C25390 + C25391 + C25392) * C154058) *
                C153810 * C153775 -
            (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
             (C24293 + C24292 + C24291) * C154106) *
                C153810 * C154022) *
               C1279 +
           (((C24602 + C24601 + C24600) * C154106 +
             (C24599 + C24598 + C24597) * C154087 +
             (C25149 + C25150 + C25151) * C154058) *
                C153810 * C154022 -
            ((C24216 * C4389 - C24217 * C4382 - C24216 * C4390 +
              C154071 * C4394 + C24214 * C1951 - C24215 * C1945 -
              C24214 * C1952 + C24207 * C1960 + C24212 * C1117 -
              C24213 * C1108 - C24212 * C1118 + C24206 * C1126) *
                 C154058 +
             (C25724 + C25723 + C25722) * C154087 +
             (C25721 + C25720 + C25719) * C154106) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
             C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
             C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
             C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
             C28436 * C3193 - C28437 * C3189 - C28436 * C3194 +
             C28426 * C3201) *
                C153638 * C153810 * C154022 -
            (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
             C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
             C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
             C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
             C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
                C153638 * C153810 * C153775) *
               C1279 +
           ((C28428 * C1111 - C28429 * C1105 - C28428 * C1112 + C28422 * C1123 +
             C28430 * C1957 - C28431 * C1948 - C28430 * C1958 + C28423 * C1963 +
             C28432 * C4383 - C28433 * C4379 - C28432 * C4384 + C28424 * C4391 +
             C28434 * C5776 - C28435 * C5771 - C28434 * C5777 + C28425 * C5780 +
             C28436 * C29106 - C28437 * C29104 - C28436 * C29107 +
             C28426 * C29110) *
                C153638 * C153810 * C153775 -
            (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
             C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
             C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
             C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
             C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
                C153638 * C153810 * C154022) *
               C153747) *
              C154013 +
          (((C28428 * C584 - C28429 * C569 - C28428 * C585 + C28422 * C605 +
             C28430 * C1113 - C28431 * C1106 - C28430 * C1114 + C28423 * C1124 +
             C28432 * C1955 - C28433 * C1947 - C28432 * C1956 + C28424 * C1962 +
             C28434 * C4385 - C28435 * C4380 - C28434 * C4386 + C28425 * C4392 +
             C28436 * C5774 - C28437 * C5770 - C28436 * C5775 +
             C28426 * C5779) *
                C153638 * C153810 * C153775 -
            (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
             C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
             C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
             C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
             C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
                C153638 * C153810 * C154022) *
               C1279 +
           ((C28428 * C355 - C28429 * C340 - C28428 * C356 + C28422 * C376 +
             C28430 * C361 - C28431 * C343 - C28430 * C362 + C28423 * C379 +
             C28432 * C1382 - C28433 * C1374 - C28432 * C1383 + C28424 * C1389 +
             C28434 * C3195 - C28435 * C3190 - C28434 * C3196 + C28425 * C3202 +
             C28436 * C4806 - C28437 * C4802 - C28436 * C4807 +
             C28426 * C4811) *
                C153638 * C153810 * C154022 -
            (C28436 * C29108 - C28437 * C29105 - C28436 * C29109 +
             C28426 * C29111 + C28434 * C5774 - C28435 * C5770 -
             C28434 * C5775 + C28425 * C5779 + C28432 * C4385 - C28433 * C4380 -
             C28432 * C4386 + C28424 * C4392 + C28430 * C1955 - C28431 * C1947 -
             C28430 * C1956 + C28423 * C1962 + C28428 * C1113 - C28429 * C1106 -
             C28428 * C1114 + C28422 * C1124) *
                C153638 * C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C153638 * C154110 +
             (C31262 + C31263 + C31264) * C153638 * C154099 +
             C31276 * C154074) *
                C154022 -
            ((C31268 + C31269 + C31270) * C153638 * C154074 +
             (C31267 + C31266 + C31265) * C153638 * C154099 +
             (C31264 + C31263 + C31262) * C153638 * C154110) *
                C153775) *
               C1279 +
           (((C32061 + C32062 + C32063) * C153638 * C154110 +
             (C32064 + C32065 + C32066) * C153638 * C154099 +
             (C32677 + C32678 + C32679) * C153638 * C154074) *
                C153775 -
            (C32676 * C154074 + (C32063 + C32062 + C32061) * C153638 * C154099 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C153638 * C154110) *
                C154022) *
               C153747) *
              C154013 +
          ((((C24904 + C24903 + C24902) * C153638 * C154110 +
             (C24905 + C24906 + C24907) * C153638 * C154099 +
             (C31271 + C31272 + C31273) * C153638 * C154074) *
                C153775 -
            (C31261 * C154074 + (C24902 + C24903 + C24904) * C153638 * C154099 +
             (C24293 + C24292 + C24291) * C153638 * C154110) *
                C154022) *
               C1279 +
           (((C24602 + C24601 + C24600) * C153638 * C154110 +
             (C25719 + C25720 + C25721) * C153638 * C154099 +
             (C32067 + C32068 + C32069) * C153638 * C154074) *
                C154022 -
            ((C24216 * C32003 - C24217 * C32002 - C24216 * C32004 +
              C154071 * C32005 + C24214 * C6373 - C24215 * C6365 -
              C24214 * C6374 + C24207 * C6383 + C24212 * C6375 -
              C24213 * C6366 - C24212 * C6376 + C24206 * C6384) *
                 C153638 * C154074 +
             (C32069 + C32068 + C32067) * C153638 * C154099 +
             (C25721 + C25720 + C25719) * C153638 * C154110) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                  C154106 +
              C205 * C154087 + C206 * C154058) *
                 C47632 +
             (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
                C154022 -
            ((C48078 + C48079 + C48080) * C154074 +
             (C48077 + C48076 + C48075) * C47633 +
             (C48074 + C48073 + C48072) * C47632) *
                C153775) *
               C1279 +
           (((C48826 + C48827 + C48828) * C47632 +
             (C48829 + C48830 + C48831) * C47633 +
             (C49420 + C49421 + C49422) * C154074) *
                C153775 -
            (C49424 * C154074 + (C48828 + C48827 + C48826) * C47633 +
             (C436 * C154058 + C437 * C154087 +
              (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                  C154106) *
                 C47632) *
                C154022) *
               C153747) *
              C154013 +
          ((((C48081 + C48082 + C48083) * C47632 +
             (C48084 + C48085 + C48086) * C47633 +
             (C48087 + C48088 + C48089) * C154074) *
                C153775 -
            (C48093 * C154074 + (C48083 + C48082 + C48081) * C47633 +
             (C207 * C154058 + C206 * C154087 + C205 * C154106) * C47632) *
                C154022) *
               C1279 +
           (((C437 * C154106 + C436 * C154087 + C435 * C154058) * C47632 +
             (C48832 + C48833 + C48834) * C47633 +
             (C48835 + C48836 + C48837) * C154074) *
                C154022 -
            (((C134 * C8574 - C135 * C8573 - C134 * C8575 + C153792 * C8576) *
                  C154058 +
              C8615 * C154087 + C8614 * C154106) *
                 C154074 +
             (C48837 + C48836 + C48835) * C47633 +
             (C48834 + C48833 + C48832) * C47632) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C153638 * C47632 +
             (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
                C154022 -
            ((C52133 + C52134 + C52135) * C153638 * C154074 +
             (C52132 + C52131 + C52130) * C153638 * C47633 +
             (C52129 + C52128 + C52127) * C153638 * C47632) *
                C153775) *
               C1279 +
           (((C52922 + C52923 + C52924) * C153638 * C47632 +
             (C52925 + C52926 + C52927) * C153638 * C47633 +
             (C53534 + C53535 + C53536) * C153638 * C154074) *
                C153775 -
            (C53533 * C154074 + (C52924 + C52923 + C52922) * C153638 * C47633 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C153638 * C47632) *
                C154022) *
               C153747) *
              C154013 +
          ((((C3601 + C3600 + C3599) * C153638 * C47632 +
             (C3602 + C3603 + C3604) * C153638 * C47633 +
             (C52136 + C52137 + C52138) * C153638 * C154074) *
                C153775 -
            (C52126 * C154074 + (C3599 + C3600 + C3601) * C153638 * C47633 +
             (C2958 + C2957 + C2956) * C153638 * C47632) *
                C154022) *
               C1279 +
           (((C3283 + C3282 + C3281) * C153638 * C47632 +
             (C4432 + C4433 + C4434) * C153638 * C47633 +
             (C52928 + C52929 + C52930) * C153638 * C154074) *
                C154022 -
            ((C2881 * C32003 - C2882 * C32002 - C2881 * C32004 +
              C154071 * C32005 + C2879 * C6373 - C2880 * C6365 - C2879 * C6374 +
              C154097 * C6383 + C2877 * C6375 - C2878 * C6366 - C2877 * C6376 +
              C154109 * C6384) *
                 C153638 * C154074 +
             (C52930 + C52929 + C52928) * C153638 * C47633 +
             (C4434 + C4433 + C4432) * C153638 * C47632) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C153638 * C55718 +
             C55976 * C55719 + C55977 * C55720 + C55978 * C55721 +
             C55979 * C55722) *
                C154022 -
            (C55998 * C55722 + C55979 * C55721 + C55978 * C55720 +
             C55977 * C55719 + C55976 * C55718) *
                C153775) *
               C1279 +
           ((C56414 * C55718 + C56415 * C55719 + C56416 * C55720 +
             C56434 * C55721 + C56773 * C55722) *
                C153775 -
            (C56434 * C55722 + C56416 * C55721 + C56415 * C55720 +
             C56414 * C55719 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C153638 * C55718) *
                C154022) *
               C153747) *
              C154013 +
          (((C55984 * C55718 + C55985 * C55719 + C55986 * C55720 +
             C55987 * C55721 + C55999 * C55722) *
                C153775 -
            (C55987 * C55722 + C55986 * C55721 + C55985 * C55720 +
             C55984 * C55719 + C205 * C153638 * C55718) *
                C154022) *
               C1279 +
           ((C437 * C153638 * C55718 + C56421 * C55719 + C56422 * C55720 +
             C56423 * C55721 + C56435 * C55722) *
                C154022 -
            ((C134 * C56410 - C135 * C56409 - C134 * C56411 +
              C153792 * C56412) *
                 C153638 * C55722 +
             C56435 * C55721 + C56423 * C55720 + C56422 * C55719 +
             C56421 * C55718) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C153711 * C1279 -
           (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) * C122) *
               C153810 * C153711 * C153747) *
              C1281 +
          ((C437 * C122 + C436 * C123 + C435 * C124 + C434 * C125 +
            C808 * C126) *
               C153810 * C153711 * C153747 -
           (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
            C205 * C122) *
               C153810 * C153711 * C1279) *
              C1282 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125 +
            C210 * C126) *
               C153810 * C153711 * C1279 -
           ((C134 * C798 - C135 * C797 - C134 * C799 + C153792 * C800) * C126 +
            C808 * C125 + C434 * C124 + C435 * C123 + C436 * C122) *
               C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
           C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
              C153810 * C153711 * C1366 -
          (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
           (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) * C122) *
              C153810 * C153711 * C1367 +
          ((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) * C122 +
           C438 * C123 + C439 * C124 + C440 * C125 + C441 * C126) *
              C153810 * C153711 * C1368 -
          ((C134 * C1376 - C135 * C1371 - C134 * C1377 + C153792 * C1386) *
               C126 +
           (C134 * C1378 - C135 * C1372 - C134 * C1379 + C153792 * C1387) *
               C125 +
           (C134 * C1380 - C135 * C1373 - C134 * C1381 + C153792 * C1388) *
               C124 +
           (C134 * C1382 - C135 * C1374 - C134 * C1383 + C153792 * C1389) *
               C123 +
           (C134 * C1384 - C135 * C1375 - C134 * C1385 + C153792 * C1390) *
               C122) *
              C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C153711 * C1279 -
           (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C2874) *
               C153810 * C153711 * C153747) *
              C1281 +
          (((C3283 + C3282 + C3281) * C2874 + (C3280 + C3279 + C3278) * C2875 +
            (C3846 + C3847 + C3848) * C154058) *
               C153810 * C153711 * C153747 -
           (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
            (C2958 + C2957 + C2956) * C2874) *
               C153810 * C153711 * C1279) *
              C1282 +
          ((C2970 * C2874 + (C2964 + C2963 + C2962) * C2875 +
            (C2965 + C2966 + C2967) * C154058) *
               C153810 * C153711 * C1279 -
           ((C2881 * C1376 - C2882 * C1371 - C2881 * C1377 + C154071 * C1386 +
             C2879 * C367 - C2880 * C346 - C2879 * C368 + C154097 * C382 +
             C2877 * C349 - C2878 * C337 - C2877 * C350 + C154109 * C373) *
                C154058 +
            (C3848 + C3847 + C3846) * C2875 + C3839 * C2874) *
               C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
            C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
            C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
               C2874 +
           (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
              C153810 * C153711 * C1366 -
          (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
           (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
            C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
            C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
               C2874) *
              C153810 * C153711 * C1367 +
          ((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
            C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
            C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
               C2874 +
           (C3284 + C3285 + C3286) * C2875 +
           (C3287 + C3288 + C3289) * C154058) *
              C153810 * C153711 * C1368 -
          ((C2881 * C4804 - C2882 * C4801 - C2881 * C4805 + C154071 * C4810 +
            C2879 * C3197 - C2880 * C3191 - C2879 * C3198 + C154097 * C3203 +
            C2877 * C1380 - C2878 * C1373 - C2877 * C1381 + C154109 * C1388) *
               C154058 +
           (C2881 * C4806 - C2882 * C4802 - C2881 * C4807 + C154071 * C4811 +
            C2879 * C3195 - C2880 * C3190 - C2879 * C3196 + C154097 * C3202 +
            C2877 * C1382 - C2878 * C1374 - C2877 * C1383 + C154109 * C1389) *
               C2875 +
           (C2881 * C4808 - C2882 * C4803 - C2881 * C4809 + C154071 * C4812 +
            C2879 * C3193 - C2880 * C3189 - C2879 * C3194 + C154097 * C3201 +
            C2877 * C1384 - C2878 * C1375 - C2877 * C1385 + C154109 * C1390) *
               C2874) *
              C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C2874 +
             C205 * C2875 + C206 * C154058) *
                C154110 +
            (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
               C153711 * C1279 -
           ((C8589 + C8588 + C8617) * C154074 +
            (C8583 + C8582 + C8616) * C154099 +
            (C436 * C154058 + C437 * C2875 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C2874) *
                C154110) *
               C153711 * C153747) *
              C1281 +
          (((C437 * C2874 + C436 * C2875 + C435 * C154058) * C154110 +
            (C8598 + C8599 + C8600) * C154099 +
            (C8601 + C8602 + C8603) * C154074) *
               C153711 * C153747 -
           (C7816 * C154074 + (C7791 + C7790 + C7789) * C154099 +
            (C207 * C154058 + C206 * C2875 + C205 * C2874) * C154110) *
               C153711 * C1279) *
              C1282 +
          (((C206 * C2874 + C207 * C2875 + C208 * C154058) * C154110 +
            (C8278 + C8279 + C8280) * C154099 +
            (C8281 + C8282 + C8283) * C154074) *
               C153711 * C1279 -
           (((C134 * C1518 - C135 * C1513 - C134 * C1519 + C153792 * C1528) *
                 C154058 +
             C8059 * C2875 + C7517 * C2874) *
                C154074 +
            (C1157 * C154058 + C1156 * C2875 + C1155 * C2874) * C154099 +
            (C434 * C154058 + C435 * C2875 + C436 * C2874) * C154110) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C2874 +
            C205 * C2875 + C206 * C154058) *
               C154110 +
           (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
              C153711 * C1366 -
          ((C8589 + C8588 + C8617) * C154074 +
           (C8583 + C8582 + C8616) * C154099 +
           (C436 * C154058 + C437 * C2875 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                C2874) *
               C154110) *
              C153711 * C1367 +
          (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) * C2874 +
            C438 * C2875 + C439 * C154058) *
               C154110 +
           ((C134 * C1957 - C135 * C1948 - C134 * C1958 + C153792 * C1963) *
                C2874 +
            C7519 * C2875 + C7520 * C154058) *
               C154099 +
           ((C134 * C3511 - C135 * C3507 - C134 * C3512 + C153792 * C3519) *
                C2874 +
            C7521 * C2875 + C7522 * C154058) *
               C154074) *
              C153711 * C1368 -
          (((C134 * C5034 - C135 * C5031 - C134 * C5035 + C153792 * C5040) *
                C154058 +
            (C134 * C5036 - C135 * C5032 - C134 * C5037 + C153792 * C5041) *
                C2875 +
            (C134 * C5038 - C135 * C5033 - C134 * C5039 + C153792 * C5042) *
                C2874) *
               C154074 +
           ((C134 * C4387 - C135 * C4381 - C134 * C4388 + C153792 * C4393) *
                C154058 +
            (C134 * C4385 - C135 * C4380 - C134 * C4386 + C153792 * C4392) *
                C2875 +
            (C134 * C4383 - C135 * C4379 - C134 * C4384 + C153792 * C4391) *
                C2874) *
               C154099 +
           ((C134 * C1380 - C135 * C1373 - C134 * C1381 + C153792 * C1388) *
                C154058 +
            (C134 * C1382 - C135 * C1374 - C134 * C1383 + C153792 * C1389) *
                C2875 +
            (C134 * C1384 - C135 * C1375 - C134 * C1385 + C153792 * C1390) *
                C2874) *
               C154110) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C153711 * C1279 -
           (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C153711 * C153747) *
              C1281 +
          (((C24602 + C24601 + C24600) * C154106 +
            (C24599 + C24598 + C24597) * C154087 +
            (C25149 + C25150 + C25151) * C154058) *
               C153810 * C153711 * C153747 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C153711 * C1279) *
              C1282 +
          ((C24305 * C154106 + (C24299 + C24298 + C24297) * C154087 +
            (C24300 + C24301 + C24302) * C154058) *
               C153810 * C153711 * C1279 -
           ((C24216 * C1376 - C24217 * C1371 - C24216 * C1377 +
             C154071 * C1386 + C24214 * C367 - C24215 * C346 - C24214 * C368 +
             C24207 * C382 + C24212 * C349 - C24213 * C337 - C24212 * C350 +
             C24206 * C373) *
                C154058 +
            (C25151 + C25150 + C25149) * C154087 + C25142 * C154106) *
               C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
            C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
            C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
               C154106 +
           (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
              C153810 * C153711 * C1366 -
          (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
           (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 + C154071 * C1390 +
            C24214 * C359 - C24215 * C342 - C24214 * C360 + C24207 * C378 +
            C24212 * C357 - C24213 * C341 - C24212 * C358 + C24206 * C377) *
               C154106) *
              C153810 * C153711 * C1367 +
          ((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
            C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
            C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
            C154071 * C3201) *
               C154106 +
           (C24603 + C24604 + C24605) * C154087 +
           (C24606 + C24607 + C24608) * C154058) *
              C153810 * C153711 * C1368 -
          ((C24216 * C4804 - C24217 * C4801 - C24216 * C4805 + C154071 * C4810 +
            C24214 * C3197 - C24215 * C3191 - C24214 * C3198 + C24207 * C3203 +
            C24212 * C1380 - C24213 * C1373 - C24212 * C1381 + C24206 * C1388) *
               C154058 +
           (C24216 * C4806 - C24217 * C4802 - C24216 * C4807 + C154071 * C4811 +
            C24214 * C3195 - C24215 * C3190 - C24214 * C3196 + C24207 * C3202 +
            C24212 * C1382 - C24213 * C1374 - C24212 * C1383 + C24206 * C1389) *
               C154087 +
           (C24216 * C4808 - C24217 * C4803 - C24216 * C4809 + C154071 * C4812 +
            C24214 * C3193 - C24215 * C3189 - C24214 * C3194 + C24207 * C3201 +
            C24212 * C1384 - C24213 * C1375 - C24212 * C1385 + C24206 * C1390) *
               C154106) *
              C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C153711 * C1279 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C153711 * C153747) *
              C1281 +
          ((C28428 * C355 - C28429 * C340 - C28428 * C356 + C28422 * C376 +
            C28430 * C361 - C28431 * C343 - C28430 * C362 + C28423 * C379 +
            C28432 * C1382 - C28433 * C1374 - C28432 * C1383 + C28424 * C1389 +
            C28434 * C3195 - C28435 * C3190 - C28434 * C3196 + C28425 * C3202 +
            C28436 * C4806 - C28437 * C4802 - C28436 * C4807 + C28426 * C4811) *
               C153638 * C153810 * C153711 * C153747 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C153711 * C1279) *
              C1282 +
          ((C28428 * C148 - C28429 * C138 - C28428 * C149 + C28422 * C162 +
            C28430 * C353 - C28431 * C339 - C28430 * C354 + C28423 * C375 +
            C28432 * C363 - C28433 * C344 - C28432 * C364 + C28424 * C380 +
            C28434 * C1380 - C28435 * C1373 - C28434 * C1381 + C28425 * C1388 +
            C28436 * C3197 - C28437 * C3191 - C28436 * C3198 + C28426 * C3203) *
               C153638 * C153810 * C153711 * C1279 -
           (C28436 * C4804 - C28437 * C4801 - C28436 * C4805 + C28426 * C4810 +
            C28434 * C3197 - C28435 * C3191 - C28434 * C3198 + C28425 * C3203 +
            C28432 * C1380 - C28433 * C1373 - C28432 * C1381 + C28424 * C1388 +
            C28430 * C363 - C28431 * C344 - C28430 * C364 + C28423 * C380 +
            C28428 * C353 - C28429 * C339 - C28428 * C354 + C28422 * C375) *
               C153638 * C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
           C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
           C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
           C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
           C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
              C153638 * C153810 * C153711 * C1366 -
          (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
           C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
           C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
           C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
           C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
              C153638 * C153810 * C153711 * C1367 +
          (C28428 * C359 - C28429 * C342 - C28428 * C360 + C28422 * C378 +
           C28430 * C1384 - C28431 * C1375 - C28430 * C1385 + C28423 * C1390 +
           C28432 * C3193 - C28433 * C3189 - C28432 * C3194 + C28424 * C3201 +
           C28434 * C4808 - C28435 * C4803 - C28434 * C4809 + C28425 * C4812 +
           C28436 * C28562 - C28437 * C28560 - C28436 * C28563 +
           C28426 * C28566) *
              C153638 * C153810 * C153711 * C1368 -
          (C28436 * C29317 - C28437 * C29316 - C28436 * C29318 +
           C28426 * C29319 + C28434 * C28562 - C28435 * C28560 -
           C28434 * C28563 + C28425 * C28566 + C28432 * C4808 - C28433 * C4803 -
           C28432 * C4809 + C28424 * C4812 + C28430 * C3193 - C28431 * C3189 -
           C28430 * C3194 + C28423 * C3201 + C28428 * C1384 - C28429 * C1375 -
           C28428 * C1385 + C28422 * C1390) *
              C153638 * C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C153638 * C154110 +
            (C31262 + C31263 + C31264) * C153638 * C154099 + C31276 * C154074) *
               C153711 * C1279 -
           ((C32066 + C32065 + C32064) * C153638 * C154074 +
            (C32063 + C32062 + C32061) * C153638 * C154099 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C153638 * C154110) *
               C153711 * C153747) *
              C1281 +
          (((C24602 + C24601 + C24600) * C153638 * C154110 +
            (C25719 + C25720 + C25721) * C153638 * C154099 +
            (C32067 + C32068 + C32069) * C153638 * C154074) *
               C153711 * C153747 -
           (C31261 * C154074 + (C24902 + C24903 + C24904) * C153638 * C154099 +
            (C24293 + C24292 + C24291) * C153638 * C154110) *
               C153711 * C1279) *
              C1282 +
          ((C24305 * C153638 * C154110 +
            (C24901 + C24900 + C24899) * C153638 * C154099 +
            (C24908 + C24909 + C24910) * C153638 * C154074) *
               C153711 * C1279 -
           ((C24216 * C5034 - C24217 * C5031 - C24216 * C5035 +
             C154071 * C5040 + C24214 * C3515 - C24215 * C3509 -
             C24214 * C3516 + C24207 * C3521 + C24212 * C1522 - C24213 * C1515 -
             C24212 * C1523 + C24206 * C1530) *
                C153638 * C154074 +
            (C25724 + C25723 + C25722) * C153638 * C154099 +
            C25142 * C153638 * C154110) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
            C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
            C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
               C153638 * C154110 +
           (C31262 + C31263 + C31264) * C153638 * C154099 + C31276 * C154074) *
              C153711 * C1366 -
          ((C32066 + C32065 + C32064) * C153638 * C154074 +
           (C32063 + C32062 + C32061) * C153638 * C154099 +
           (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 + C154071 * C1390 +
            C24214 * C359 - C24215 * C342 - C24214 * C360 + C24207 * C378 +
            C24212 * C357 - C24213 * C341 - C24212 * C358 + C24206 * C377) *
               C153638 * C154110) *
              C153711 * C1367 +
          ((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
            C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
            C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
            C154071 * C3201) *
               C153638 * C154110 +
           (C24212 * C1957 - C24213 * C1948 - C24212 * C1958 + C24206 * C1963 +
            C24214 * C4383 - C24215 * C4379 - C24214 * C4384 + C24207 * C4391 +
            C24216 * C5776 - C24217 * C5771 - C24216 * C5777 +
            C154071 * C5780) *
               C153638 * C154099 +
           (C24212 * C3511 - C24213 * C3507 - C24212 * C3512 + C24206 * C3519 +
            C24214 * C5038 - C24215 * C5033 - C24214 * C5039 + C24207 * C5042 +
            C24216 * C28692 - C24217 * C28690 - C24216 * C28693 +
            C154071 * C28696) *
               C153638 * C154074) *
              C153711 * C1368 -
          ((C24216 * C29443 - C24217 * C29442 - C24216 * C29444 +
            C154071 * C29445 + C24214 * C28692 - C24215 * C28690 -
            C24214 * C28693 + C24207 * C28696 + C24212 * C5038 -
            C24213 * C5033 - C24212 * C5039 + C24206 * C5042) *
               C153638 * C154074 +
           (C24216 * C29106 - C24217 * C29104 - C24216 * C29107 +
            C154071 * C29110 + C24214 * C5776 - C24215 * C5771 -
            C24214 * C5777 + C24207 * C5780 + C24212 * C4383 - C24213 * C4379 -
            C24212 * C4384 + C24206 * C4391) *
               C153638 * C154099 +
           (C24216 * C4808 - C24217 * C4803 - C24216 * C4809 + C154071 * C4812 +
            C24214 * C3193 - C24215 * C3189 - C24214 * C3194 + C24207 * C3201 +
            C24212 * C1384 - C24213 * C1375 - C24212 * C1385 + C24206 * C1390) *
               C153638 * C154110) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154106 +
             C205 * C154087 + C206 * C154058) *
                C47632 +
            (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
               C153711 * C1279 -
           ((C48831 + C48830 + C48829) * C154074 +
            (C48828 + C48827 + C48826) * C47633 +
            (C436 * C154058 + C437 * C154087 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154106) *
                C47632) *
               C153711 * C153747) *
              C1281 +
          (((C437 * C154106 + C436 * C154087 + C435 * C154058) * C47632 +
            (C48832 + C48833 + C48834) * C47633 +
            (C48835 + C48836 + C48837) * C154074) *
               C153711 * C153747 -
           (C48093 * C154074 + (C48083 + C48082 + C48081) * C47633 +
            (C207 * C154058 + C206 * C154087 + C205 * C154106) * C47632) *
               C153711 * C1279) *
              C1282 +
          (((C206 * C154106 + C207 * C154087 + C208 * C154058) * C47632 +
            (C48530 + C48531 + C48532) * C47633 +
            (C48533 + C48534 + C48535) * C154074) *
               C153711 * C1279 -
           (((C134 * C1518 - C135 * C1513 - C134 * C1519 + C153792 * C1528) *
                 C154058 +
             C8059 * C154087 + C7517 * C154106) *
                C154074 +
            (C1157 * C154058 + C1156 * C154087 + C1155 * C154106) * C47633 +
            (C434 * C154058 + C435 * C154087 + C436 * C154106) * C47632) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C154106 +
            C205 * C154087 + C206 * C154058) *
               C47632 +
           (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
              C153711 * C1366 -
          ((C48831 + C48830 + C48829) * C154074 +
           (C48828 + C48827 + C48826) * C47633 +
           (C436 * C154058 + C437 * C154087 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                C154106) *
               C47632) *
              C153711 * C1367 +
          (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                C154106 +
            C438 * C154087 + C439 * C154058) *
               C47632 +
           (C9966 * C154106 + C7519 * C154087 + C7520 * C154058) * C47633 +
           (C9967 * C154106 + C7521 * C154087 + C7522 * C154058) * C154074) *
              C153711 * C1368 -
          (((C134 * C5034 - C135 * C5031 - C134 * C5035 + C153792 * C5040) *
                C154058 +
            (C134 * C5036 - C135 * C5032 - C134 * C5037 + C153792 * C5041) *
                C154087 +
            (C134 * C5038 - C135 * C5033 - C134 * C5039 + C153792 * C5042) *
                C154106) *
               C154074 +
           ((C134 * C4387 - C135 * C4381 - C134 * C4388 + C153792 * C4393) *
                C154058 +
            (C134 * C4385 - C135 * C4380 - C134 * C4386 + C153792 * C4392) *
                C154087 +
            (C134 * C4383 - C135 * C4379 - C134 * C4384 + C153792 * C4391) *
                C154106) *
               C47633 +
           ((C134 * C1380 - C135 * C1373 - C134 * C1381 + C153792 * C1388) *
                C154058 +
            (C134 * C1382 - C135 * C1374 - C134 * C1383 + C153792 * C1389) *
                C154087 +
            (C134 * C1384 - C135 * C1375 - C134 * C1385 + C153792 * C1390) *
                C154106) *
               C47632) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C153638 * C47632 +
            (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
               C153711 * C1279 -
           ((C52927 + C52926 + C52925) * C153638 * C154074 +
            (C52924 + C52923 + C52922) * C153638 * C47633 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C153638 * C47632) *
               C153711 * C153747) *
              C1281 +
          (((C3283 + C3282 + C3281) * C153638 * C47632 +
            (C4432 + C4433 + C4434) * C153638 * C47633 +
            (C52928 + C52929 + C52930) * C153638 * C154074) *
               C153711 * C153747 -
           (C52126 * C154074 + (C3599 + C3600 + C3601) * C153638 * C47633 +
            (C2958 + C2957 + C2956) * C153638 * C47632) *
               C153711 * C1279) *
              C1282 +
          ((C2970 * C153638 * C47632 +
            (C3598 + C3597 + C3596) * C153638 * C47633 +
            (C3605 + C3606 + C3607) * C153638 * C154074) *
               C153711 * C1279 -
           ((C2881 * C5034 - C2882 * C5031 - C2881 * C5035 + C154071 * C5040 +
             C2879 * C3515 - C2880 * C3509 - C2879 * C3516 + C154097 * C3521 +
             C2877 * C1522 - C2878 * C1515 - C2877 * C1523 + C154109 * C1530) *
                C153638 * C154074 +
            (C4437 + C4436 + C4435) * C153638 * C47633 +
            C3839 * C153638 * C47632) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
            C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
            C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
               C153638 * C47632 +
           (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
              C153711 * C1366 -
          ((C52927 + C52926 + C52925) * C153638 * C154074 +
           (C52924 + C52923 + C52922) * C153638 * C47633 +
           (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
            C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
            C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
               C153638 * C47632) *
              C153711 * C1367 +
          ((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
            C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
            C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
               C153638 * C47632 +
           (C2877 * C1957 - C2878 * C1948 - C2877 * C1958 + C154109 * C1963 +
            C2879 * C4383 - C2880 * C4379 - C2879 * C4384 + C154097 * C4391 +
            C2881 * C5776 - C2882 * C5771 - C2881 * C5777 + C154071 * C5780) *
               C153638 * C47633 +
           (C2877 * C3511 - C2878 * C3507 - C2877 * C3512 + C154109 * C3519 +
            C2879 * C5038 - C2880 * C5033 - C2879 * C5039 + C154097 * C5042 +
            C2881 * C28692 - C2882 * C28690 - C2881 * C28693 +
            C154071 * C28696) *
               C153638 * C154074) *
              C153711 * C1368 -
          ((C2881 * C29443 - C2882 * C29442 - C2881 * C29444 +
            C154071 * C29445 + C2879 * C28692 - C2880 * C28690 -
            C2879 * C28693 + C154097 * C28696 + C2877 * C5038 - C2878 * C5033 -
            C2877 * C5039 + C154109 * C5042) *
               C153638 * C154074 +
           (C2881 * C29106 - C2882 * C29104 - C2881 * C29107 +
            C154071 * C29110 + C2879 * C5776 - C2880 * C5771 - C2879 * C5777 +
            C154097 * C5780 + C2877 * C4383 - C2878 * C4379 - C2877 * C4384 +
            C154109 * C4391) *
               C153638 * C47633 +
           (C2881 * C4808 - C2882 * C4803 - C2881 * C4809 + C154071 * C4812 +
            C2879 * C3193 - C2880 * C3189 - C2879 * C3194 + C154097 * C3201 +
            C2877 * C1384 - C2878 * C1375 - C2877 * C1385 + C154109 * C1390) *
               C153638 * C47632) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C153638 * C55718 +
            C55976 * C55719 + C55977 * C55720 + C55978 * C55721 +
            C55979 * C55722) *
               C153711 * C1279 -
           (C56434 * C55722 + C56416 * C55721 + C56415 * C55720 +
            C56414 * C55719 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                C153638 * C55718) *
               C153711 * C153747) *
              C1281 +
          ((C437 * C153638 * C55718 + C56421 * C55719 + C56422 * C55720 +
            C56423 * C55721 + C56435 * C55722) *
               C153711 * C153747 -
           (C55987 * C55722 + C55986 * C55721 + C55985 * C55720 +
            C55984 * C55719 + C205 * C153638 * C55718) *
               C153711 * C1279) *
              C1282 +
          ((C206 * C153638 * C55718 + C56244 * C55719 + C56245 * C55720 +
            C56246 * C55721 + C56247 * C55722) *
               C153711 * C1279 -
           ((C134 * C9202 - C135 * C9199 - C134 * C9203 + C153792 * C9208) *
                C153638 * C55722 +
            C8615 * C153638 * C55721 + C7517 * C153638 * C55720 +
            C1155 * C153638 * C55719 + C436 * C153638 * C55718) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
               C153638 * C55718 +
           C55976 * C55719 + C55977 * C55720 + C55978 * C55721 +
           C55979 * C55722) *
              C153711 * C1366 -
          (C56434 * C55722 + C56416 * C55721 + C56415 * C55720 +
           C56414 * C55719 +
           (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
               C153638 * C55718) *
              C153711 * C1367 +
          ((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
               C153638 * C55718 +
           C9966 * C153638 * C55719 + C9967 * C153638 * C55720 +
           (C134 * C6377 - C135 * C6367 - C134 * C6378 + C153792 * C6385) *
               C153638 * C55721 +
           (C134 * C31180 - C135 * C31178 - C134 * C31181 + C153792 * C31184) *
               C153638 * C55722) *
              C153711 * C1368 -
          ((C134 * C32652 - C135 * C32651 - C134 * C32653 + C153792 * C32654) *
               C153638 * C55722 +
           (C134 * C30186 - C135 * C30183 - C134 * C30187 + C153792 * C30189) *
               C153638 * C55721 +
           (C134 * C5038 - C135 * C5033 - C134 * C5039 + C153792 * C5042) *
               C153638 * C55720 +
           (C134 * C4383 - C135 * C4379 - C134 * C4384 + C153792 * C4391) *
               C153638 * C55719 +
           (C134 * C1384 - C135 * C1375 - C134 * C1385 + C153792 * C1390) *
               C153638 * C55718) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                     C122 +
                 C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                    C153810 * C2086 -
                (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
                 (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) *
                     C122) *
                    C153810 * C153775) *
                   C154021 +
               (((C134 * C1111 - C135 * C1105 - C134 * C1112 +
                  C153792 * C1123) *
                     C122 +
                 C1154 * C123 + C1155 * C124 + C1156 * C125 + C1157 * C126) *
                    C153810 * C153775 -
                (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
                 (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                     C122) *
                    C153810 * C2086) *
                   C153747) *
                  C154013 +
              (((C666 * C122 + C665 * C123 + C664 * C124 + C663 * C125 +
                 C943 * C126) *
                    C153810 * C153775 -
                (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
                 C205 * C122) *
                    C153810 * C2086) *
                   C154021 +
               ((C437 * C122 + C436 * C123 + C435 * C124 + C434 * C125 +
                 C808 * C126) *
                    C153810 * C2086 -
                ((C134 * C1121 - C135 * C1110 - C134 * C1122 +
                  C153792 * C1128) *
                     C126 +
                 C1157 * C125 + C1156 * C124 + C1155 * C123 + C1154 * C122) *
                    C153810 * C153775) *
                   C153747) *
                  C153682) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
                  C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
                  C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                     C2874 +
                 (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
                    C153810 * C2086 -
                (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
                 (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 +
                  C154071 * C1963 + C2879 * C1111 - C2880 * C1105 -
                  C2879 * C1112 + C154097 * C1123 + C2877 * C586 -
                  C2878 * C570 - C2877 * C587 + C154109 * C606) *
                     C2874) *
                    C153810 * C153775) *
                   C154021 +
               (((C2877 * C1111 - C2878 * C1105 - C2877 * C1112 +
                  C154109 * C1123 + C2879 * C1957 - C2880 * C1948 -
                  C2879 * C1958 + C154097 * C1963 + C2881 * C4383 -
                  C2882 * C4379 - C2881 * C4384 + C154071 * C4391) *
                     C2874 +
                 (C4432 + C4433 + C4434) * C2875 +
                 (C4435 + C4436 + C4437) * C154058) *
                    C153810 * C153775 -
                (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
                 (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 +
                  C154071 * C1390 + C2879 * C359 - C2880 * C342 - C2879 * C360 +
                  C154097 * C378 + C2877 * C357 - C2878 * C341 - C2877 * C358 +
                  C154109 * C377) *
                     C2874) *
                    C153810 * C2086) *
                   C153747) *
                  C154013 +
              ((((C3601 + C3600 + C3599) * C2874 +
                 (C3598 + C3597 + C3596) * C2875 +
                 (C4087 + C4088 + C4089) * C154058) *
                    C153810 * C153775 -
                (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
                 (C2958 + C2957 + C2956) * C2874) *
                    C153810 * C2086) *
                   C154021 +
               (((C3283 + C3282 + C3281) * C2874 +
                 (C3280 + C3279 + C3278) * C2875 +
                 (C3846 + C3847 + C3848) * C154058) *
                    C153810 * C2086 -
                ((C2881 * C4389 - C2882 * C4382 - C2881 * C4390 +
                  C154071 * C4394 + C2879 * C1951 - C2880 * C1945 -
                  C2879 * C1952 + C154097 * C1960 + C2877 * C1117 -
                  C2878 * C1108 - C2877 * C1118 + C154109 * C1126) *
                     C154058 +
                 (C4437 + C4436 + C4435) * C2875 +
                 (C4434 + C4433 + C4432) * C2874) *
                    C153810 * C153775) *
                   C153747) *
                  C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                  C2874 +
              C205 * C2875 + C206 * C154058) *
                 C154110 +
             (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
                C2086 -
            (C10571 * C154074 + (C7768 + C7767 + C7826) * C154099 +
             (C7762 + C7761 + C7825) * C154110) *
                C153775) *
               C154021 +
           (((C8616 + C8582 + C8583) * C154110 +
             (C8617 + C8588 + C8589) * C154099 +
             (C9223 + C9216 + C9217) * C154074) *
                C153775 -
            (C9220 * C154074 + (C8583 + C8582 + C8616) * C154099 +
             (C436 * C154058 + C437 * C2875 +
              (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                  C2874) *
                 C154110) *
                C2086) *
               C153747) *
              C154013 +
          ((((C7789 + C7790 + C7791) * C154110 +
             (C7792 + C7793 + C7794) * C154099 +
             (C7830 + C7831 + C7832) * C154074) *
                C153775 -
            (C7816 * C154074 + (C7791 + C7790 + C7789) * C154099 +
             (C207 * C154058 + C206 * C2875 + C205 * C2874) * C154110) *
                C2086) *
               C154021 +
           (((C437 * C2874 + C436 * C2875 + C435 * C154058) * C154110 +
             (C8598 + C8599 + C8600) * C154099 +
             (C8601 + C8602 + C8603) * C154074) *
                C2086 -
            (((C134 * C8574 - C135 * C8573 - C134 * C8575 + C153792 * C8576) *
                  C154058 +
              C8615 * C2875 + C8614 * C2874) *
                 C154074 +
             (C8603 + C8602 + C8601) * C154099 +
             (C8600 + C8599 + C8598) * C154110) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154106 +
             (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
                C153810 * C2086 -
            (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
             (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
              C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
              C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
              C24212 * C587 + C24206 * C606) *
                 C154106) *
                C153810 * C153775) *
               C154021 +
           (((C24212 * C1111 - C24213 * C1105 - C24212 * C1112 +
              C24206 * C1123 + C24214 * C1957 - C24215 * C1948 -
              C24214 * C1958 + C24207 * C1963 + C24216 * C4383 -
              C24217 * C4379 - C24216 * C4384 + C154071 * C4391) *
                 C154106 +
             (C25719 + C25720 + C25721) * C154087 +
             (C25722 + C25723 + C25724) * C154058) *
                C153810 * C153775 -
            (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C154106) *
                C153810 * C2086) *
               C153747) *
              C154013 +
          ((((C24904 + C24903 + C24902) * C154106 +
             (C24901 + C24900 + C24899) * C154087 +
             (C25390 + C25391 + C25392) * C154058) *
                C153810 * C153775 -
            (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
             (C24293 + C24292 + C24291) * C154106) *
                C153810 * C2086) *
               C154021 +
           (((C24602 + C24601 + C24600) * C154106 +
             (C24599 + C24598 + C24597) * C154087 +
             (C25149 + C25150 + C25151) * C154058) *
                C153810 * C2086 -
            ((C24216 * C4389 - C24217 * C4382 - C24216 * C4390 +
              C154071 * C4394 + C24214 * C1951 - C24215 * C1945 -
              C24214 * C1952 + C24207 * C1960 + C24212 * C1117 -
              C24213 * C1108 - C24212 * C1118 + C24206 * C1126) *
                 C154058 +
             (C25724 + C25723 + C25722) * C154087 +
             (C25721 + C25720 + C25719) * C154106) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
             C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
             C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
             C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
             C28436 * C3193 - C28437 * C3189 - C28436 * C3194 +
             C28426 * C3201) *
                C153638 * C153810 * C2086 -
            (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
             C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
             C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
             C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
             C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
                C153638 * C153810 * C153775) *
               C154021 +
           ((C28428 * C1111 - C28429 * C1105 - C28428 * C1112 + C28422 * C1123 +
             C28430 * C1957 - C28431 * C1948 - C28430 * C1958 + C28423 * C1963 +
             C28432 * C4383 - C28433 * C4379 - C28432 * C4384 + C28424 * C4391 +
             C28434 * C5776 - C28435 * C5771 - C28434 * C5777 + C28425 * C5780 +
             C28436 * C29106 - C28437 * C29104 - C28436 * C29107 +
             C28426 * C29110) *
                C153638 * C153810 * C153775 -
            (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
             C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
             C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
             C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
             C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
                C153638 * C153810 * C2086) *
               C153747) *
              C154013 +
          (((C28428 * C584 - C28429 * C569 - C28428 * C585 + C28422 * C605 +
             C28430 * C1113 - C28431 * C1106 - C28430 * C1114 + C28423 * C1124 +
             C28432 * C1955 - C28433 * C1947 - C28432 * C1956 + C28424 * C1962 +
             C28434 * C4385 - C28435 * C4380 - C28434 * C4386 + C28425 * C4392 +
             C28436 * C5774 - C28437 * C5770 - C28436 * C5775 +
             C28426 * C5779) *
                C153638 * C153810 * C153775 -
            (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
             C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
             C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
             C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
             C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
                C153638 * C153810 * C2086) *
               C154021 +
           ((C28428 * C355 - C28429 * C340 - C28428 * C356 + C28422 * C376 +
             C28430 * C361 - C28431 * C343 - C28430 * C362 + C28423 * C379 +
             C28432 * C1382 - C28433 * C1374 - C28432 * C1383 + C28424 * C1389 +
             C28434 * C3195 - C28435 * C3190 - C28434 * C3196 + C28425 * C3202 +
             C28436 * C4806 - C28437 * C4802 - C28436 * C4807 +
             C28426 * C4811) *
                C153638 * C153810 * C2086 -
            (C28436 * C29108 - C28437 * C29105 - C28436 * C29109 +
             C28426 * C29111 + C28434 * C5774 - C28435 * C5770 -
             C28434 * C5775 + C28425 * C5779 + C28432 * C4385 - C28433 * C4380 -
             C28432 * C4386 + C28424 * C4392 + C28430 * C1955 - C28431 * C1947 -
             C28430 * C1956 + C28423 * C1962 + C28428 * C1113 - C28429 * C1106 -
             C28428 * C1114 + C28422 * C1124) *
                C153638 * C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C153638 * C154110 +
             (C31262 + C31263 + C31264) * C153638 * C154099 +
             C31276 * C154074) *
                C2086 -
            (C34055 * C154074 + (C31267 + C31266 + C31265) * C153638 * C154099 +
             (C31264 + C31263 + C31262) * C153638 * C154110) *
                C153775) *
               C154021 +
           (((C32061 + C32062 + C32063) * C153638 * C154110 +
             (C32064 + C32065 + C32066) * C153638 * C154099 +
             (C32677 + C32678 + C32679) * C153638 * C154074) *
                C153775 -
            (C32676 * C154074 + (C32063 + C32062 + C32061) * C153638 * C154099 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C153638 * C154110) *
                C2086) *
               C153747) *
              C154013 +
          ((((C24904 + C24903 + C24902) * C153638 * C154110 +
             (C24905 + C24906 + C24907) * C153638 * C154099 +
             (C31271 + C31272 + C31273) * C153638 * C154074) *
                C153775 -
            (C31261 * C154074 + (C24902 + C24903 + C24904) * C153638 * C154099 +
             (C24293 + C24292 + C24291) * C153638 * C154110) *
                C2086) *
               C154021 +
           (((C24602 + C24601 + C24600) * C153638 * C154110 +
             (C25719 + C25720 + C25721) * C153638 * C154099 +
             (C32067 + C32068 + C32069) * C153638 * C154074) *
                C2086 -
            ((C24216 * C32003 - C24217 * C32002 - C24216 * C32004 +
              C154071 * C32005 + C24214 * C6373 - C24215 * C6365 -
              C24214 * C6374 + C24207 * C6383 + C24212 * C6375 -
              C24213 * C6366 - C24212 * C6376 + C24206 * C6384) *
                 C153638 * C154074 +
             (C32069 + C32068 + C32067) * C153638 * C154099 +
             (C25721 + C25720 + C25719) * C153638 * C154110) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                  C154106 +
              C205 * C154087 + C206 * C154058) *
                 C47632 +
             (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
                C2086 -
            (C50743 * C154074 + (C48077 + C48076 + C48075) * C47633 +
             (C48074 + C48073 + C48072) * C47632) *
                C153775) *
               C154021 +
           (((C48826 + C48827 + C48828) * C47632 +
             (C48829 + C48830 + C48831) * C47633 +
             (C49420 + C49421 + C49422) * C154074) *
                C153775 -
            (C49424 * C154074 + (C48828 + C48827 + C48826) * C47633 +
             (C436 * C154058 + C437 * C154087 +
              (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                  C154106) *
                 C47632) *
                C2086) *
               C153747) *
              C154013 +
          ((((C48081 + C48082 + C48083) * C47632 +
             (C48084 + C48085 + C48086) * C47633 +
             (C48087 + C48088 + C48089) * C154074) *
                C153775 -
            (C48093 * C154074 + (C48083 + C48082 + C48081) * C47633 +
             (C207 * C154058 + C206 * C154087 + C205 * C154106) * C47632) *
                C2086) *
               C154021 +
           (((C437 * C154106 + C436 * C154087 + C435 * C154058) * C47632 +
             (C48832 + C48833 + C48834) * C47633 +
             (C48835 + C48836 + C48837) * C154074) *
                C2086 -
            (((C134 * C8574 - C135 * C8573 - C134 * C8575 + C153792 * C8576) *
                  C154058 +
              C8615 * C154087 + C8614 * C154106) *
                 C154074 +
             (C48837 + C48836 + C48835) * C47633 +
             (C48834 + C48833 + C48832) * C47632) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C153638 * C47632 +
             (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
                C2086 -
            (C54904 * C154074 + (C52132 + C52131 + C52130) * C153638 * C47633 +
             (C52129 + C52128 + C52127) * C153638 * C47632) *
                C153775) *
               C154021 +
           (((C52922 + C52923 + C52924) * C153638 * C47632 +
             (C52925 + C52926 + C52927) * C153638 * C47633 +
             (C53534 + C53535 + C53536) * C153638 * C154074) *
                C153775 -
            (C53533 * C154074 + (C52924 + C52923 + C52922) * C153638 * C47633 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C153638 * C47632) *
                C2086) *
               C153747) *
              C154013 +
          ((((C3601 + C3600 + C3599) * C153638 * C47632 +
             (C3602 + C3603 + C3604) * C153638 * C47633 +
             (C52136 + C52137 + C52138) * C153638 * C154074) *
                C153775 -
            (C52126 * C154074 + (C3599 + C3600 + C3601) * C153638 * C47633 +
             (C2958 + C2957 + C2956) * C153638 * C47632) *
                C2086) *
               C154021 +
           (((C3283 + C3282 + C3281) * C153638 * C47632 +
             (C4432 + C4433 + C4434) * C153638 * C47633 +
             (C52928 + C52929 + C52930) * C153638 * C154074) *
                C2086 -
            ((C2881 * C32003 - C2882 * C32002 - C2881 * C32004 +
              C154071 * C32005 + C2879 * C6373 - C2880 * C6365 - C2879 * C6374 +
              C154097 * C6383 + C2877 * C6375 - C2878 * C6366 - C2877 * C6376 +
              C154109 * C6384) *
                 C153638 * C154074 +
             (C52930 + C52929 + C52928) * C153638 * C47633 +
             (C4434 + C4433 + C4432) * C153638 * C47632) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C153638 * C55718 +
             C55976 * C55719 + C55977 * C55720 + C55978 * C55721 +
             C55979 * C55722) *
                C2086 -
            (C55998 * C55722 + C55979 * C55721 + C55978 * C55720 +
             C55977 * C55719 + C55976 * C55718) *
                C153775) *
               C154021 +
           ((C56414 * C55718 + C56415 * C55719 + C56416 * C55720 +
             C56434 * C55721 + C56773 * C55722) *
                C153775 -
            (C56434 * C55722 + C56416 * C55721 + C56415 * C55720 +
             C56414 * C55719 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C153638 * C55718) *
                C2086) *
               C153747) *
              C154013 +
          (((C55984 * C55718 + C55985 * C55719 + C55986 * C55720 +
             C55987 * C55721 + C55999 * C55722) *
                C153775 -
            (C55987 * C55722 + C55986 * C55721 + C55985 * C55720 +
             C55984 * C55719 + C205 * C153638 * C55718) *
                C2086) *
               C154021 +
           ((C437 * C153638 * C55718 + C56421 * C55719 + C56422 * C55720 +
             C56423 * C55721 + C56435 * C55722) *
                C2086 -
            ((C134 * C56410 - C135 * C56409 - C134 * C56411 +
              C153792 * C56412) *
                 C153638 * C55722 +
             C56435 * C55721 + C56423 * C55720 + C56422 * C55719 +
             C56421 * C55718) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                    C122 +
                C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                   C153810 * C154094 -
               (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
                (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) *
                    C122) *
                   C153810 * C154095 +
               ((C134 * C588 - C135 * C571 - C134 * C589 + C153792 * C607) *
                    C122 +
                C667 * C123 + C668 * C124 + C669 * C125 + C670 * C126) *
                   C153810 * C2602) *
                  C154021 +
              (((C134 * C1111 - C135 * C1105 - C134 * C1112 + C153792 * C1123) *
                    C122 +
                C1154 * C123 + C1155 * C124 + C1156 * C125 + C1157 * C126) *
                   C153810 * C154095 -
               (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
                (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                    C122) *
                   C153810 * C154094 -
               ((C134 * C1518 - C135 * C1513 - C134 * C1519 + C153792 * C1528) *
                    C126 +
                (C134 * C1520 - C135 * C1514 - C134 * C1521 + C153792 * C1529) *
                    C125 +
                (C134 * C1522 - C135 * C1515 - C134 * C1523 + C153792 * C1530) *
                    C124 +
                (C134 * C1524 - C135 * C1516 - C134 * C1525 + C153792 * C1531) *
                    C123 +
                (C134 * C1526 - C135 * C1517 - C134 * C1527 + C153792 * C1532) *
                    C122) *
                   C153810 * C2602) *
                  C153747) *
             C153676 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
                 C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
                 C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                    C2874 +
                (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
                   C153810 * C154094 -
               (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
                (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 +
                 C154071 * C1963 + C2879 * C1111 - C2880 * C1105 -
                 C2879 * C1112 + C154097 * C1123 + C2877 * C586 - C2878 * C570 -
                 C2877 * C587 + C154109 * C606) *
                    C2874) *
                   C153810 * C154095 +
               ((C2877 * C588 - C2878 * C571 - C2877 * C589 + C154109 * C607 +
                 C2879 * C1526 - C2880 * C1517 - C2879 * C1527 +
                 C154097 * C1532 + C2881 * C3511 - C2882 * C3507 -
                 C2881 * C3512 + C154071 * C3519) *
                    C2874 +
                (C3602 + C3603 + C3604) * C2875 +
                (C3605 + C3606 + C3607) * C154058) *
                   C153810 * C2602) *
                  C154021 +
              (((C2877 * C1111 - C2878 * C1105 - C2877 * C1112 +
                 C154109 * C1123 + C2879 * C1957 - C2880 * C1948 -
                 C2879 * C1958 + C154097 * C1963 + C2881 * C4383 -
                 C2882 * C4379 - C2881 * C4384 + C154071 * C4391) *
                    C2874 +
                (C4432 + C4433 + C4434) * C2875 +
                (C4435 + C4436 + C4437) * C154058) *
                   C153810 * C154095 -
               (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
                (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 +
                 C154071 * C1390 + C2879 * C359 - C2880 * C342 - C2879 * C360 +
                 C154097 * C378 + C2877 * C357 - C2878 * C341 - C2877 * C358 +
                 C154109 * C377) *
                    C2874) *
                   C153810 * C154094 -
               ((C2881 * C5034 - C2882 * C5031 - C2881 * C5035 +
                 C154071 * C5040 + C2879 * C3515 - C2880 * C3509 -
                 C2879 * C3516 + C154097 * C3521 + C2877 * C1522 -
                 C2878 * C1515 - C2877 * C1523 + C154109 * C1530) *
                    C154058 +
                (C2881 * C5036 - C2882 * C5032 - C2881 * C5037 +
                 C154071 * C5041 + C2879 * C3513 - C2880 * C3508 -
                 C2879 * C3514 + C154097 * C3520 + C2877 * C1524 -
                 C2878 * C1516 - C2877 * C1525 + C154109 * C1531) *
                    C2875 +
                (C2881 * C5038 - C2882 * C5033 - C2881 * C5039 +
                 C154071 * C5042 + C2879 * C3511 - C2880 * C3507 -
                 C2879 * C3512 + C154097 * C3519 + C2877 * C1526 -
                 C2878 * C1517 - C2877 * C1527 + C154109 * C1532) *
                    C2874) *
                   C153810 * C2602) *
                  C153747) *
             C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C2874 +
             C205 * C2875 + C206 * C154058) *
                C154110 +
            (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
               C154094 -
           (C10571 * C154074 + (C7768 + C7767 + C7826) * C154099 +
            (C7762 + C7761 + C7825) * C154110) *
               C154095 +
           (C7834 * C154110 + (C7829 + C7828 + C7827) * C154099 +
            (C10575 + C10569 + C10570) * C154074) *
               C2602) *
              C154021 +
          (((C8616 + C8582 + C8583) * C154110 +
            (C8617 + C8588 + C8589) * C154099 +
            (C9223 + C9216 + C9217) * C154074) *
               C154095 -
           (C9220 * C154074 + (C8583 + C8582 + C8616) * C154099 +
            (C436 * C154058 + C437 * C2875 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C2874) *
                C154110) *
               C154094 -
           (((C134 * C9202 - C135 * C9199 - C134 * C9203 + C153792 * C9208) *
                 C154058 +
             (C134 * C9204 - C135 * C9200 - C134 * C9205 + C153792 * C9209) *
                 C2875 +
             (C134 * C9206 - C135 * C9201 - C134 * C9207 + C153792 * C9210) *
                 C2874) *
                C154074 +
            (C9217 + C9216 + C9223) * C154099 + C9220 * C154110) *
               C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C154094 -
           (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C154095 +
           ((C24212 * C588 - C24213 * C571 - C24212 * C589 + C24206 * C607 +
             C24214 * C1526 - C24215 * C1517 - C24214 * C1527 + C24207 * C1532 +
             C24216 * C3511 - C24217 * C3507 - C24216 * C3512 +
             C154071 * C3519) *
                C154106 +
            (C24905 + C24906 + C24907) * C154087 +
            (C24908 + C24909 + C24910) * C154058) *
               C153810 * C2602) *
              C154021 +
          (((C24212 * C1111 - C24213 * C1105 - C24212 * C1112 + C24206 * C1123 +
             C24214 * C1957 - C24215 * C1948 - C24214 * C1958 + C24207 * C1963 +
             C24216 * C4383 - C24217 * C4379 - C24216 * C4384 +
             C154071 * C4391) *
                C154106 +
            (C25719 + C25720 + C25721) * C154087 +
            (C25722 + C25723 + C25724) * C154058) *
               C153810 * C154095 -
           (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C154094 -
           ((C24216 * C5034 - C24217 * C5031 - C24216 * C5035 +
             C154071 * C5040 + C24214 * C3515 - C24215 * C3509 -
             C24214 * C3516 + C24207 * C3521 + C24212 * C1522 - C24213 * C1515 -
             C24212 * C1523 + C24206 * C1530) *
                C154058 +
            (C24216 * C5036 - C24217 * C5032 - C24216 * C5037 +
             C154071 * C5041 + C24214 * C3513 - C24215 * C3508 -
             C24214 * C3514 + C24207 * C3520 + C24212 * C1524 - C24213 * C1516 -
             C24212 * C1525 + C24206 * C1531) *
                C154087 +
            (C24216 * C5038 - C24217 * C5033 - C24216 * C5039 +
             C154071 * C5042 + C24214 * C3511 - C24215 * C3507 -
             C24214 * C3512 + C24207 * C3519 + C24212 * C1526 - C24213 * C1517 -
             C24212 * C1527 + C24206 * C1532) *
                C154106) *
               C153810 * C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C154094 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C154095 +
           (C28428 * C588 - C28429 * C571 - C28428 * C589 + C28422 * C607 +
            C28430 * C1526 - C28431 * C1517 - C28430 * C1527 + C28423 * C1532 +
            C28432 * C3511 - C28433 * C3507 - C28432 * C3512 + C28424 * C3519 +
            C28434 * C5038 - C28435 * C5033 - C28434 * C5039 + C28425 * C5042 +
            C28436 * C28692 - C28437 * C28690 - C28436 * C28693 +
            C28426 * C28696) *
               C153638 * C153810 * C2602) *
              C154021 +
          ((C28428 * C1111 - C28429 * C1105 - C28428 * C1112 + C28422 * C1123 +
            C28430 * C1957 - C28431 * C1948 - C28430 * C1958 + C28423 * C1963 +
            C28432 * C4383 - C28433 * C4379 - C28432 * C4384 + C28424 * C4391 +
            C28434 * C5776 - C28435 * C5771 - C28434 * C5777 + C28425 * C5780 +
            C28436 * C29106 - C28437 * C29104 - C28436 * C29107 +
            C28426 * C29110) *
               C153638 * C153810 * C154095 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C154094 -
           (C28436 * C29443 - C28437 * C29442 - C28436 * C29444 +
            C28426 * C29445 + C28434 * C28692 - C28435 * C28690 -
            C28434 * C28693 + C28425 * C28696 + C28432 * C5038 -
            C28433 * C5033 - C28432 * C5039 + C28424 * C5042 + C28430 * C3511 -
            C28431 * C3507 - C28430 * C3512 + C28423 * C3519 + C28428 * C1526 -
            C28429 * C1517 - C28428 * C1527 + C28422 * C1532) *
               C153638 * C153810 * C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C153638 * C154110 +
            (C31262 + C31263 + C31264) * C153638 * C154099 + C31276 * C154074) *
               C154094 -
           (C34055 * C154074 + (C31267 + C31266 + C31265) * C153638 * C154099 +
            (C31264 + C31263 + C31262) * C153638 * C154110) *
               C154095 +
           (C31276 * C154110 + (C31270 + C31269 + C31268) * C153638 * C154099 +
            (C34059 + C34060 + C34061) * C153638 * C154074) *
               C2602) *
              C154021 +
          (((C32061 + C32062 + C32063) * C153638 * C154110 +
            (C32064 + C32065 + C32066) * C153638 * C154099 +
            (C32677 + C32678 + C32679) * C153638 * C154074) *
               C154095 -
           (C32676 * C154074 + (C32063 + C32062 + C32061) * C153638 * C154099 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C153638 * C154110) *
               C154094 -
           ((C24216 * C32652 - C24217 * C32651 - C24216 * C32653 +
             C154071 * C32654 + C24214 * C31180 - C24215 * C31178 -
             C24214 * C31181 + C24207 * C31184 + C24212 * C9206 -
             C24213 * C9201 - C24212 * C9207 + C24206 * C9210) *
                C153638 * C154074 +
            (C32679 + C32678 + C32677) * C153638 * C154099 + C32676 * C154110) *
               C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154106 +
             C205 * C154087 + C206 * C154058) *
                C47632 +
            (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
               C154094 -
           (C50743 * C154074 + (C48077 + C48076 + C48075) * C47633 +
            (C48074 + C48073 + C48072) * C47632) *
               C154095 +
           (C48092 * C47632 + (C48080 + C48079 + C48078) * C47633 +
            (C50740 + C50741 + C50742) * C154074) *
               C2602) *
              C154021 +
          (((C48826 + C48827 + C48828) * C47632 +
            (C48829 + C48830 + C48831) * C47633 +
            (C49420 + C49421 + C49422) * C154074) *
               C154095 -
           (C49424 * C154074 + (C48828 + C48827 + C48826) * C47633 +
            (C436 * C154058 + C437 * C154087 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154106) *
                C47632) *
               C154094 -
           (((C134 * C9202 - C135 * C9199 - C134 * C9203 + C153792 * C9208) *
                 C154058 +
             (C134 * C9204 - C135 * C9200 - C134 * C9205 + C153792 * C9209) *
                 C154087 +
             (C134 * C9206 - C135 * C9201 - C134 * C9207 + C153792 * C9210) *
                 C154106) *
                C154074 +
            (C49422 + C49421 + C49420) * C47633 + C49424 * C47632) *
               C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C153638 * C47632 +
            (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
               C154094 -
           (C54904 * C154074 + (C52132 + C52131 + C52130) * C153638 * C47633 +
            (C52129 + C52128 + C52127) * C153638 * C47632) *
               C154095 +
           (C52141 * C47632 + (C52135 + C52134 + C52133) * C153638 * C47633 +
            (C54908 + C54909 + C54910) * C153638 * C154074) *
               C2602) *
              C154021 +
          (((C52922 + C52923 + C52924) * C153638 * C47632 +
            (C52925 + C52926 + C52927) * C153638 * C47633 +
            (C53534 + C53535 + C53536) * C153638 * C154074) *
               C154095 -
           (C53533 * C154074 + (C52924 + C52923 + C52922) * C153638 * C47633 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C153638 * C47632) *
               C154094 -
           ((C2881 * C32652 - C2882 * C32651 - C2881 * C32653 +
             C154071 * C32654 + C2879 * C31180 - C2880 * C31178 -
             C2879 * C31181 + C154097 * C31184 + C2877 * C9206 - C2878 * C9201 -
             C2877 * C9207 + C154109 * C9210) *
                C153638 * C154074 +
            (C53536 + C53535 + C53534) * C153638 * C47633 + C53533 * C47632) *
               C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C153638 * C55718 +
            C55976 * C55719 + C55977 * C55720 + C55978 * C55721 +
            C55979 * C55722) *
               C154094 -
           (C55998 * C55722 + C55979 * C55721 + C55978 * C55720 +
            C55977 * C55719 + C55976 * C55718) *
               C154095 +
           (C55977 * C55718 + C55978 * C55719 + C55979 * C55720 +
            C55998 * C55721 + C57535 * C55722) *
               C2602) *
              C154021 +
          ((C56414 * C55718 + C56415 * C55719 + C56416 * C55720 +
            C56434 * C55721 + C56773 * C55722) *
               C154095 -
           (C56434 * C55722 + C56416 * C55721 + C56415 * C55720 +
            C56414 * C55719 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                C153638 * C55718) *
               C154094 -
           ((C134 * C56762 - C135 * C56761 - C134 * C56763 + C153792 * C56764) *
                C153638 * C55722 +
            C56773 * C55721 + C56434 * C55720 + C56416 * C55719 +
            C56415 * C55718) *
               C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (-0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                    C122 +
                C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                   C153810 * C2086 -
               (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
                (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) *
                    C122) *
                   C153810 * C153775) *
                  C153695 * C1281 +
              ((C666 * C122 + C665 * C123 + C664 * C124 + C663 * C125 +
                C943 * C126) *
                   C153810 * C153775 -
               (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
                C205 * C122) *
                   C153810 * C2086) *
                  C153695 * C1282 +
              ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125 +
                C210 * C126) *
                   C153810 * C2086 -
               ((C134 * C933 - C135 * C932 - C134 * C934 + C153792 * C935) *
                    C126 +
                C943 * C125 + C663 * C124 + C664 * C123 + C665 * C122) *
                   C153810 * C153775) *
                  C153695 * C1283) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                    C122 +
                C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                   C153810 * C2086 -
               (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
                (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) *
                    C122) *
                   C153810 * C153775) *
                  C332 +
              (((C134 * C1111 - C135 * C1105 - C134 * C1112 + C153792 * C1123) *
                    C122 +
                C1154 * C123 + C1155 * C124 + C1156 * C125 + C1157 * C126) *
                   C153810 * C153775 -
               (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
                (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                    C122) *
                   C153810 * C2086) *
                  C333 +
              (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                    C122 +
                C438 * C123 + C439 * C124 + C440 * C125 + C441 * C126) *
                   C153810 * C2086 -
               ((C134 * C1949 - C135 * C1944 - C134 * C1950 + C153792 * C1959) *
                    C126 +
                (C134 * C1951 - C135 * C1945 - C134 * C1952 + C153792 * C1960) *
                    C125 +
                (C134 * C1953 - C135 * C1946 - C134 * C1954 + C153792 * C1961) *
                    C124 +
                (C134 * C1955 - C135 * C1947 - C134 * C1956 + C153792 * C1962) *
                    C123 +
                (C134 * C1957 - C135 * C1948 - C134 * C1958 + C153792 * C1963) *
                    C122) *
                   C153810 * C153775) *
                  C334) *
             C153676 +
         0.5 * std::pow(Pi, 2.5) *
             (((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                   C122 +
               C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                  C153810 * C2292 -
              (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
               (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) *
                   C122) *
                  C153810 * C2293 +
              ((C134 * C588 - C135 * C571 - C134 * C589 + C153792 * C607) *
                   C122 +
               C667 * C123 + C668 * C124 + C669 * C125 + C670 * C126) *
                  C153810 * C2294 -
              ((C134 * C2301 - C135 * C2296 - C134 * C2302 + C153792 * C2311) *
                   C126 +
               (C134 * C2303 - C135 * C2297 - C134 * C2304 + C153792 * C2312) *
                   C125 +
               (C134 * C2305 - C135 * C2298 - C134 * C2306 + C153792 * C2313) *
                   C124 +
               (C134 * C2307 - C135 * C2299 - C134 * C2308 + C153792 * C2314) *
                   C123 +
               (C134 * C2309 - C135 * C2300 - C134 * C2310 + C153792 * C2315) *
                   C122) *
                  C153810 * C2295) *
             C153695 * C153676 -
         0.25 * std::pow(Pi, 2.5) *
             ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
                 C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
                 C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                    C2874 +
                (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
                   C153810 * C2086 -
               (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
                (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 +
                 C154071 * C1963 + C2879 * C1111 - C2880 * C1105 -
                 C2879 * C1112 + C154097 * C1123 + C2877 * C586 - C2878 * C570 -
                 C2877 * C587 + C154109 * C606) *
                    C2874) *
                   C153810 * C153775) *
                  C153695 * C1281 +
              (((C3601 + C3600 + C3599) * C2874 +
                (C3598 + C3597 + C3596) * C2875 +
                (C4087 + C4088 + C4089) * C154058) *
                   C153810 * C153775 -
               (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
                (C2958 + C2957 + C2956) * C2874) *
                   C153810 * C2086) *
                  C153695 * C1282 +
              ((C2970 * C2874 + (C2964 + C2963 + C2962) * C2875 +
                (C2965 + C2966 + C2967) * C154058) *
                   C153810 * C2086 -
               ((C2881 * C1949 - C2882 * C1944 - C2881 * C1950 +
                 C154071 * C1959 + C2879 * C1119 - C2880 * C1109 -
                 C2879 * C1120 + C154097 * C1127 + C2877 * C578 - C2878 * C566 -
                 C2877 * C579 + C154109 * C602) *
                    C154058 +
                (C4089 + C4088 + C4087) * C2875 + C4080 * C2874) *
                   C153810 * C153775) *
                  C153695 * C1283) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
                 C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
                 C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                    C2874 +
                (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
                   C153810 * C2086 -
               (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
                (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 +
                 C154071 * C1963 + C2879 * C1111 - C2880 * C1105 -
                 C2879 * C1112 + C154097 * C1123 + C2877 * C586 - C2878 * C570 -
                 C2877 * C587 + C154109 * C606) *
                    C2874) *
                   C153810 * C153775) *
                  C332 +
              (((C2877 * C1111 - C2878 * C1105 - C2877 * C1112 +
                 C154109 * C1123 + C2879 * C1957 - C2880 * C1948 -
                 C2879 * C1958 + C154097 * C1963 + C2881 * C4383 -
                 C2882 * C4379 - C2881 * C4384 + C154071 * C4391) *
                    C2874 +
                (C4432 + C4433 + C4434) * C2875 +
                (C4435 + C4436 + C4437) * C154058) *
                   C153810 * C153775 -
               (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
                (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 +
                 C154071 * C1390 + C2879 * C359 - C2880 * C342 - C2879 * C360 +
                 C154097 * C378 + C2877 * C357 - C2878 * C341 - C2877 * C358 +
                 C154109 * C377) *
                    C2874) *
                   C153810 * C2086) *
                  C333 +
              (((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
                 C2879 * C1384 - C2880 * C1375 - C2879 * C1385 +
                 C154097 * C1390 + C2881 * C3193 - C2882 * C3189 -
                 C2881 * C3194 + C154071 * C3201) *
                    C2874 +
                (C3284 + C3285 + C3286) * C2875 +
                (C3287 + C3288 + C3289) * C154058) *
                   C153810 * C2086 -
               ((C2881 * C5772 - C2882 * C5769 - C2881 * C5773 +
                 C154071 * C5778 + C2879 * C4387 - C2880 * C4381 -
                 C2879 * C4388 + C154097 * C4393 + C2877 * C1953 -
                 C2878 * C1946 - C2877 * C1954 + C154109 * C1961) *
                    C154058 +
                (C2881 * C5774 - C2882 * C5770 - C2881 * C5775 +
                 C154071 * C5779 + C2879 * C4385 - C2880 * C4380 -
                 C2879 * C4386 + C154097 * C4392 + C2877 * C1955 -
                 C2878 * C1947 - C2877 * C1956 + C154109 * C1962) *
                    C2875 +
                (C2881 * C5776 - C2882 * C5771 - C2881 * C5777 +
                 C154071 * C5780 + C2879 * C4383 - C2880 * C4379 -
                 C2879 * C4384 + C154097 * C4391 + C2877 * C1957 -
                 C2878 * C1948 - C2877 * C1958 + C154109 * C1963) *
                    C2874) *
                   C153810 * C153775) *
                  C334) *
             C153676 +
         0.5 * std::pow(Pi, 2.5) *
             (((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
                C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
                C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                   C2874 +
               (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
                  C153810 * C2292 -
              (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
               (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 +
                C154071 * C1963 + C2879 * C1111 - C2880 * C1105 -
                C2879 * C1112 + C154097 * C1123 + C2877 * C586 - C2878 * C570 -
                C2877 * C587 + C154109 * C606) *
                   C2874) *
                  C153810 * C2293 +
              ((C2877 * C588 - C2878 * C571 - C2877 * C589 + C154109 * C607 +
                C2879 * C1526 - C2880 * C1517 - C2879 * C1527 +
                C154097 * C1532 + C2881 * C3511 - C2882 * C3507 -
                C2881 * C3512 + C154071 * C3519) *
                   C2874 +
               (C3602 + C3603 + C3604) * C2875 +
               (C3605 + C3606 + C3607) * C154058) *
                  C153810 * C2294 -
              ((C2881 * C6369 - C2882 * C6363 - C2881 * C6370 +
                C154071 * C6381 + C2879 * C6371 - C2880 * C6364 -
                C2879 * C6372 + C154097 * C6382 + C2877 * C2305 -
                C2878 * C2298 - C2877 * C2306 + C154109 * C2313) *
                   C154058 +
               (C2881 * C6373 - C2882 * C6365 - C2881 * C6374 +
                C154071 * C6383 + C2879 * C6375 - C2880 * C6366 -
                C2879 * C6376 + C154097 * C6384 + C2877 * C2307 -
                C2878 * C2299 - C2877 * C2308 + C154109 * C2314) *
                   C2875 +
               (C2881 * C6377 - C2882 * C6367 - C2881 * C6378 +
                C154071 * C6385 + C2879 * C6379 - C2880 * C6368 -
                C2879 * C6380 + C154097 * C6386 + C2877 * C2309 -
                C2878 * C2300 - C2877 * C2310 + C154109 * C2315) *
                   C2874) *
                  C153810 * C2295) *
             C153695 * C153676 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                     C2874 +
                 C205 * C2875 + C206 * C154058) *
                    C154110 +
                (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
                   C2086 -
               ((C7827 + C7828 + C7829) * C154074 +
                (C7768 + C7767 + C7826) * C154099 +
                (C7762 + C7761 + C7825) * C154110) *
                   C153775) *
                  C153695 * C1281 +
              (((C7789 + C7790 + C7791) * C154110 +
                (C7792 + C7793 + C7794) * C154099 +
                (C7830 + C7831 + C7832) * C154074) *
                   C153775 -
               (C7816 * C154074 + (C7791 + C7790 + C7789) * C154099 +
                (C207 * C154058 + C206 * C2875 + C205 * C2874) * C154110) *
                   C2086) *
                  C153695 * C1282 +
              (((C206 * C2874 + C207 * C2875 + C208 * C154058) * C154110 +
                (C8278 + C8279 + C8280) * C154099 +
                (C8281 + C8282 + C8283) * C154074) *
                   C2086 -
               (((C134 * C2301 - C135 * C2296 - C134 * C2302 +
                  C153792 * C2311) *
                     C154058 +
                 C7824 * C2875 + C7819 * C2874) *
                    C154074 +
                (C8283 + C8282 + C8281) * C154099 +
                (C8280 + C8279 + C8278) * C154110) *
                   C153775) *
                  C153695 * C1283) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                     C2874 +
                 C205 * C2875 + C206 * C154058) *
                    C154110 +
                (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
                   C2086 -
               ((C7827 + C7828 + C7829) * C154074 +
                (C7768 + C7767 + C7826) * C154099 +
                (C7762 + C7761 + C7825) * C154110) *
                   C153775) *
                  C332 +
              (((C8616 + C8582 + C8583) * C154110 +
                (C8617 + C8588 + C8589) * C154099 +
                (C9223 + C9216 + C9217) * C154074) *
                   C153775 -
               (C9220 * C154074 + (C8583 + C8582 + C8616) * C154099 +
                (C436 * C154058 + C437 * C2875 +
                 (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                     C2874) *
                    C154110) *
                   C2086) *
                  C333 +
              ((((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                     C2874 +
                 C438 * C2875 + C439 * C154058) *
                    C154110 +
                (C9968 + C9954 + C9955) * C154099 +
                (C9969 + C9960 + C9961) * C154074) *
                   C2086 -
               (((C134 * C6369 - C135 * C6363 - C134 * C6370 +
                  C153792 * C6381) *
                     C154058 +
                 (C134 * C6373 - C135 * C6365 - C134 * C6374 +
                  C153792 * C6383) *
                     C2875 +
                 (C134 * C6377 - C135 * C6367 - C134 * C6378 +
                  C153792 * C6385) *
                     C2874) *
                    C154074 +
                (C9961 + C9960 + C9969) * C154099 +
                (C9955 + C9954 + C9968) * C154110) *
                   C153775) *
                  C334) *
             C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C2874 +
            C205 * C2875 + C206 * C154058) *
               C154110 +
           (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
              C2292 -
          (C10571 * C154074 + (C7768 + C7767 + C7826) * C154099 +
           (C7762 + C7761 + C7825) * C154110) *
              C2293 +
          (C7834 * C154110 + (C7829 + C7828 + C7827) * C154099 +
           (C10575 + C10569 + C10570) * C154074) *
              C2294 -
          (((C134 * C10554 - C135 * C10551 - C134 * C10555 + C153792 * C10560) *
                C154058 +
            (C134 * C10556 - C135 * C10552 - C134 * C10557 + C153792 * C10561) *
                C2875 +
            (C134 * C10558 - C135 * C10553 - C134 * C10559 + C153792 * C10562) *
                C2874) *
               C154074 +
           (C10570 + C10569 + C10575) * C154099 + C10571 * C154110) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C2086 -
           (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C153775) *
              C153695 * C1281 +
          (((C24904 + C24903 + C24902) * C154106 +
            (C24901 + C24900 + C24899) * C154087 +
            (C25390 + C25391 + C25392) * C154058) *
               C153810 * C153775 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C2086) *
              C153695 * C1282 +
          ((C24305 * C154106 + (C24299 + C24298 + C24297) * C154087 +
            (C24300 + C24301 + C24302) * C154058) *
               C153810 * C2086 -
           ((C24216 * C1949 - C24217 * C1944 - C24216 * C1950 +
             C154071 * C1959 + C24214 * C1119 - C24215 * C1109 -
             C24214 * C1120 + C24207 * C1127 + C24212 * C578 - C24213 * C566 -
             C24212 * C579 + C24206 * C602) *
                C154058 +
            (C25392 + C25391 + C25390) * C154087 + C25383 * C154106) *
               C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C2086 -
           (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C153775) *
              C332 +
          (((C24212 * C1111 - C24213 * C1105 - C24212 * C1112 + C24206 * C1123 +
             C24214 * C1957 - C24215 * C1948 - C24214 * C1958 + C24207 * C1963 +
             C24216 * C4383 - C24217 * C4379 - C24216 * C4384 +
             C154071 * C4391) *
                C154106 +
            (C25719 + C25720 + C25721) * C154087 +
            (C25722 + C25723 + C25724) * C154058) *
               C153810 * C153775 -
           (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C2086) *
              C333 +
          (((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C154106 +
            (C24603 + C24604 + C24605) * C154087 +
            (C24606 + C24607 + C24608) * C154058) *
               C153810 * C2086 -
           ((C24216 * C5772 - C24217 * C5769 - C24216 * C5773 +
             C154071 * C5778 + C24214 * C4387 - C24215 * C4381 -
             C24214 * C4388 + C24207 * C4393 + C24212 * C1953 - C24213 * C1946 -
             C24212 * C1954 + C24206 * C1961) *
                C154058 +
            (C24216 * C5774 - C24217 * C5770 - C24216 * C5775 +
             C154071 * C5779 + C24214 * C4385 - C24215 * C4380 -
             C24214 * C4386 + C24207 * C4392 + C24212 * C1955 - C24213 * C1947 -
             C24212 * C1956 + C24206 * C1962) *
                C154087 +
            (C24216 * C5776 - C24217 * C5771 - C24216 * C5777 +
             C154071 * C5780 + C24214 * C4383 - C24215 * C4379 -
             C24214 * C4384 + C24207 * C4391 + C24212 * C1957 - C24213 * C1948 -
             C24212 * C1958 + C24206 * C1963) *
                C154106) *
               C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
            C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
            C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
               C154106 +
           (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
              C153810 * C2292 -
          (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
           (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 + C154071 * C1963 +
            C24214 * C1111 - C24215 * C1105 - C24214 * C1112 + C24207 * C1123 +
            C24212 * C586 - C24213 * C570 - C24212 * C587 + C24206 * C606) *
               C154106) *
              C153810 * C2293 +
          ((C24212 * C588 - C24213 * C571 - C24212 * C589 + C24206 * C607 +
            C24214 * C1526 - C24215 * C1517 - C24214 * C1527 + C24207 * C1532 +
            C24216 * C3511 - C24217 * C3507 - C24216 * C3512 +
            C154071 * C3519) *
               C154106 +
           (C24905 + C24906 + C24907) * C154087 +
           (C24908 + C24909 + C24910) * C154058) *
              C153810 * C2294 -
          ((C24216 * C6369 - C24217 * C6363 - C24216 * C6370 + C154071 * C6381 +
            C24214 * C6371 - C24215 * C6364 - C24214 * C6372 + C24207 * C6382 +
            C24212 * C2305 - C24213 * C2298 - C24212 * C2306 + C24206 * C2313) *
               C154058 +
           (C24216 * C6373 - C24217 * C6365 - C24216 * C6374 + C154071 * C6383 +
            C24214 * C6375 - C24215 * C6366 - C24214 * C6376 + C24207 * C6384 +
            C24212 * C2307 - C24213 * C2299 - C24212 * C2308 + C24206 * C2314) *
               C154087 +
           (C24216 * C6377 - C24217 * C6367 - C24216 * C6378 + C154071 * C6385 +
            C24214 * C6379 - C24215 * C6368 - C24214 * C6380 + C24207 * C6386 +
            C24212 * C2309 - C24213 * C2300 - C24212 * C2310 + C24206 * C2315) *
               C154106) *
              C153810 * C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C2086 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C153775) *
              C153695 * C1281 +
          ((C28428 * C584 - C28429 * C569 - C28428 * C585 + C28422 * C605 +
            C28430 * C1113 - C28431 * C1106 - C28430 * C1114 + C28423 * C1124 +
            C28432 * C1955 - C28433 * C1947 - C28432 * C1956 + C28424 * C1962 +
            C28434 * C4385 - C28435 * C4380 - C28434 * C4386 + C28425 * C4392 +
            C28436 * C5774 - C28437 * C5770 - C28436 * C5775 + C28426 * C5779) *
               C153638 * C153810 * C153775 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C2086) *
              C153695 * C1282 +
          ((C28428 * C148 - C28429 * C138 - C28428 * C149 + C28422 * C162 +
            C28430 * C353 - C28431 * C339 - C28430 * C354 + C28423 * C375 +
            C28432 * C363 - C28433 * C344 - C28432 * C364 + C28424 * C380 +
            C28434 * C1380 - C28435 * C1373 - C28434 * C1381 + C28425 * C1388 +
            C28436 * C3197 - C28437 * C3191 - C28436 * C3198 + C28426 * C3203) *
               C153638 * C153810 * C2086 -
           (C28436 * C5772 - C28437 * C5769 - C28436 * C5773 + C28426 * C5778 +
            C28434 * C4387 - C28435 * C4381 - C28434 * C4388 + C28425 * C4393 +
            C28432 * C1953 - C28433 * C1946 - C28432 * C1954 + C28424 * C1961 +
            C28430 * C1115 - C28431 * C1107 - C28430 * C1116 + C28423 * C1125 +
            C28428 * C582 - C28429 * C568 - C28428 * C583 + C28422 * C604) *
               C153638 * C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C2086 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C153775) *
              C332 +
          ((C28428 * C1111 - C28429 * C1105 - C28428 * C1112 + C28422 * C1123 +
            C28430 * C1957 - C28431 * C1948 - C28430 * C1958 + C28423 * C1963 +
            C28432 * C4383 - C28433 * C4379 - C28432 * C4384 + C28424 * C4391 +
            C28434 * C5776 - C28435 * C5771 - C28434 * C5777 + C28425 * C5780 +
            C28436 * C29106 - C28437 * C29104 - C28436 * C29107 +
            C28426 * C29110) *
               C153638 * C153810 * C153775 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C2086) *
              C333 +
          ((C28428 * C359 - C28429 * C342 - C28428 * C360 + C28422 * C378 +
            C28430 * C1384 - C28431 * C1375 - C28430 * C1385 + C28423 * C1390 +
            C28432 * C3193 - C28433 * C3189 - C28432 * C3194 + C28424 * C3201 +
            C28434 * C4808 - C28435 * C4803 - C28434 * C4809 + C28425 * C4812 +
            C28436 * C28562 - C28437 * C28560 - C28436 * C28563 +
            C28426 * C28566) *
               C153638 * C153810 * C2086 -
           (C28436 * C29853 - C28437 * C29852 - C28436 * C29854 +
            C28426 * C29855 + C28434 * C29106 - C28435 * C29104 -
            C28434 * C29107 + C28425 * C29110 + C28432 * C5776 -
            C28433 * C5771 - C28432 * C5777 + C28424 * C5780 + C28430 * C4383 -
            C28431 * C4379 - C28430 * C4384 + C28423 * C4391 + C28428 * C1957 -
            C28429 * C1948 - C28428 * C1958 + C28422 * C1963) *
               C153638 * C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
           C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
           C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
           C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
           C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
              C153638 * C153810 * C2292 -
          (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
           C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
           C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
           C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
           C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
              C153638 * C153810 * C2293 +
          (C28428 * C588 - C28429 * C571 - C28428 * C589 + C28422 * C607 +
           C28430 * C1526 - C28431 * C1517 - C28430 * C1527 + C28423 * C1532 +
           C28432 * C3511 - C28433 * C3507 - C28432 * C3512 + C28424 * C3519 +
           C28434 * C5038 - C28435 * C5033 - C28434 * C5039 + C28425 * C5042 +
           C28436 * C28692 - C28437 * C28690 - C28436 * C28693 +
           C28426 * C28696) *
              C153638 * C153810 * C2294 -
          (C28436 * C30184 - C28437 * C30182 - C28436 * C30185 +
           C28426 * C30188 + C28434 * C30186 - C28435 * C30183 -
           C28434 * C30187 + C28425 * C30189 + C28432 * C6377 - C28433 * C6367 -
           C28432 * C6378 + C28424 * C6385 + C28430 * C6379 - C28431 * C6368 -
           C28430 * C6380 + C28423 * C6386 + C28428 * C2309 - C28429 * C2300 -
           C28428 * C2310 + C28422 * C2315) *
              C153638 * C153810 * C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C153638 * C154110 +
            (C31262 + C31263 + C31264) * C153638 * C154099 + C31276 * C154074) *
               C2086 -
           ((C31268 + C31269 + C31270) * C153638 * C154074 +
            (C31267 + C31266 + C31265) * C153638 * C154099 +
            (C31264 + C31263 + C31262) * C153638 * C154110) *
               C153775) *
              C153695 * C1281 +
          (((C24904 + C24903 + C24902) * C153638 * C154110 +
            (C24905 + C24906 + C24907) * C153638 * C154099 +
            (C31271 + C31272 + C31273) * C153638 * C154074) *
               C153775 -
           (C31261 * C154074 + (C24902 + C24903 + C24904) * C153638 * C154099 +
            (C24293 + C24292 + C24291) * C153638 * C154110) *
               C2086) *
              C153695 * C1282 +
          ((C24305 * C153638 * C154110 +
            (C24901 + C24900 + C24899) * C153638 * C154099 +
            (C24908 + C24909 + C24910) * C153638 * C154074) *
               C2086 -
           ((C24216 * C6369 - C24217 * C6363 - C24216 * C6370 +
             C154071 * C6381 + C24214 * C6371 - C24215 * C6364 -
             C24214 * C6372 + C24207 * C6382 + C24212 * C2305 - C24213 * C2298 -
             C24212 * C2306 + C24206 * C2313) *
                C153638 * C154074 +
            (C24910 + C24909 + C24908) * C153638 * C154099 +
            C25383 * C153638 * C154110) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C153638 * C154110 +
            (C31262 + C31263 + C31264) * C153638 * C154099 + C31276 * C154074) *
               C2086 -
           ((C31268 + C31269 + C31270) * C153638 * C154074 +
            (C31267 + C31266 + C31265) * C153638 * C154099 +
            (C31264 + C31263 + C31262) * C153638 * C154110) *
               C153775) *
              C332 +
          (((C32061 + C32062 + C32063) * C153638 * C154110 +
            (C32064 + C32065 + C32066) * C153638 * C154099 +
            (C32677 + C32678 + C32679) * C153638 * C154074) *
               C153775 -
           (C32676 * C154074 + (C32063 + C32062 + C32061) * C153638 * C154099 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C153638 * C154110) *
               C2086) *
              C333 +
          (((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C153638 * C154110 +
            (C33442 + C33443 + C33444) * C153638 * C154099 +
            (C33445 + C33446 + C33447) * C153638 * C154074) *
               C2086 -
           ((C24216 * C30184 - C24217 * C30182 - C24216 * C30185 +
             C154071 * C30188 + C24214 * C30186 - C24215 * C30183 -
             C24214 * C30187 + C24207 * C30189 + C24212 * C6377 -
             C24213 * C6367 - C24212 * C6378 + C24206 * C6385) *
                C153638 * C154074 +
            (C33447 + C33446 + C33445) * C153638 * C154099 +
            (C33444 + C33443 + C33442) * C153638 * C154110) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
            C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
            C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
               C153638 * C154110 +
           (C31262 + C31263 + C31264) * C153638 * C154099 + C31276 * C154074) *
              C2292 -
          (C34055 * C154074 + (C31267 + C31266 + C31265) * C153638 * C154099 +
           (C31264 + C31263 + C31262) * C153638 * C154110) *
              C2293 +
          (C31276 * C154110 + (C31270 + C31269 + C31268) * C153638 * C154099 +
           (C34059 + C34060 + C34061) * C153638 * C154074) *
              C2294 -
          ((C24216 * C34031 - C24217 * C34029 - C24216 * C34032 +
            C154071 * C34035 + C24214 * C34033 - C24215 * C34030 -
            C24214 * C34034 + C24207 * C34036 + C24212 * C10558 -
            C24213 * C10553 - C24212 * C10559 + C24206 * C10562) *
               C153638 * C154074 +
           (C34061 + C34060 + C34059) * C153638 * C154099 + C34055 * C154110) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154106 +
             C205 * C154087 + C206 * C154058) *
                C47632 +
            (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
               C2086 -
           ((C48078 + C48079 + C48080) * C154074 +
            (C48077 + C48076 + C48075) * C47633 +
            (C48074 + C48073 + C48072) * C47632) *
               C153775) *
              C153695 * C1281 +
          (((C48081 + C48082 + C48083) * C47632 +
            (C48084 + C48085 + C48086) * C47633 +
            (C48087 + C48088 + C48089) * C154074) *
               C153775 -
           (C48093 * C154074 + (C48083 + C48082 + C48081) * C47633 +
            (C207 * C154058 + C206 * C154087 + C205 * C154106) * C47632) *
               C2086) *
              C153695 * C1282 +
          (((C206 * C154106 + C207 * C154087 + C208 * C154058) * C47632 +
            (C48530 + C48531 + C48532) * C47633 +
            (C48533 + C48534 + C48535) * C154074) *
               C2086 -
           (((C134 * C2301 - C135 * C2296 - C134 * C2302 + C153792 * C2311) *
                 C154058 +
             C7824 * C154087 + C7819 * C154106) *
                C154074 +
            (C48535 + C48534 + C48533) * C47633 +
            (C48532 + C48531 + C48530) * C47632) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154106 +
             C205 * C154087 + C206 * C154058) *
                C47632 +
            (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
               C2086 -
           ((C48078 + C48079 + C48080) * C154074 +
            (C48077 + C48076 + C48075) * C47633 +
            (C48074 + C48073 + C48072) * C47632) *
               C153775) *
              C332 +
          (((C48826 + C48827 + C48828) * C47632 +
            (C48829 + C48830 + C48831) * C47633 +
            (C49420 + C49421 + C49422) * C154074) *
               C153775 -
           (C49424 * C154074 + (C48828 + C48827 + C48826) * C47633 +
            (C436 * C154058 + C437 * C154087 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154106) *
                C47632) *
               C2086) *
              C333 +
          ((((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C154106 +
             C438 * C154087 + C439 * C154058) *
                C47632 +
            (C50151 + C50152 + C50153) * C47633 +
            (C50154 + C50155 + C50156) * C154074) *
               C2086 -
           (((C134 * C6369 - C135 * C6363 - C134 * C6370 + C153792 * C6381) *
                 C154058 +
             (C134 * C6373 - C135 * C6365 - C134 * C6374 + C153792 * C6383) *
                 C154087 +
             (C134 * C6377 - C135 * C6367 - C134 * C6378 + C153792 * C6385) *
                 C154106) *
                C154074 +
            (C50156 + C50155 + C50154) * C47633 +
            (C50153 + C50152 + C50151) * C47632) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C154106 +
            C205 * C154087 + C206 * C154058) *
               C47632 +
           (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
              C2292 -
          (C50743 * C154074 + (C48077 + C48076 + C48075) * C47633 +
           (C48074 + C48073 + C48072) * C47632) *
              C2293 +
          (C48092 * C47632 + (C48080 + C48079 + C48078) * C47633 +
           (C50740 + C50741 + C50742) * C154074) *
              C2294 -
          (((C134 * C10554 - C135 * C10551 - C134 * C10555 + C153792 * C10560) *
                C154058 +
            (C134 * C10556 - C135 * C10552 - C134 * C10557 + C153792 * C10561) *
                C154087 +
            (C134 * C10558 - C135 * C10553 - C134 * C10559 + C153792 * C10562) *
                C154106) *
               C154074 +
           (C50742 + C50741 + C50740) * C47633 + C50743 * C47632) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C153638 * C47632 +
            (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
               C2086 -
           ((C52133 + C52134 + C52135) * C153638 * C154074 +
            (C52132 + C52131 + C52130) * C153638 * C47633 +
            (C52129 + C52128 + C52127) * C153638 * C47632) *
               C153775) *
              C153695 * C1281 +
          (((C3601 + C3600 + C3599) * C153638 * C47632 +
            (C3602 + C3603 + C3604) * C153638 * C47633 +
            (C52136 + C52137 + C52138) * C153638 * C154074) *
               C153775 -
           (C52126 * C154074 + (C3599 + C3600 + C3601) * C153638 * C47633 +
            (C2958 + C2957 + C2956) * C153638 * C47632) *
               C2086) *
              C153695 * C1282 +
          ((C2970 * C153638 * C47632 +
            (C3598 + C3597 + C3596) * C153638 * C47633 +
            (C3605 + C3606 + C3607) * C153638 * C154074) *
               C2086 -
           ((C2881 * C6369 - C2882 * C6363 - C2881 * C6370 + C154071 * C6381 +
             C2879 * C6371 - C2880 * C6364 - C2879 * C6372 + C154097 * C6382 +
             C2877 * C2305 - C2878 * C2298 - C2877 * C2306 + C154109 * C2313) *
                C153638 * C154074 +
            (C3607 + C3606 + C3605) * C153638 * C47633 +
            C4080 * C153638 * C47632) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C153638 * C47632 +
            (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
               C2086 -
           ((C52133 + C52134 + C52135) * C153638 * C154074 +
            (C52132 + C52131 + C52130) * C153638 * C47633 +
            (C52129 + C52128 + C52127) * C153638 * C47632) *
               C153775) *
              C332 +
          (((C52922 + C52923 + C52924) * C153638 * C47632 +
            (C52925 + C52926 + C52927) * C153638 * C47633 +
            (C53534 + C53535 + C53536) * C153638 * C154074) *
               C153775 -
           (C53533 * C154074 + (C52924 + C52923 + C52922) * C153638 * C47633 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C153638 * C47632) *
               C2086) *
              C333 +
          (((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
             C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
             C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                C153638 * C47632 +
            (C54299 + C54300 + C54301) * C153638 * C47633 +
            (C54302 + C54303 + C54304) * C153638 * C154074) *
               C2086 -
           ((C2881 * C30184 - C2882 * C30182 - C2881 * C30185 +
             C154071 * C30188 + C2879 * C30186 - C2880 * C30183 -
             C2879 * C30187 + C154097 * C30189 + C2877 * C6377 - C2878 * C6367 -
             C2877 * C6378 + C154109 * C6385) *
                C153638 * C154074 +
            (C54304 + C54303 + C54302) * C153638 * C47633 +
            (C54301 + C54300 + C54299) * C153638 * C47632) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
            C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
            C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
               C153638 * C47632 +
           (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
              C2292 -
          (C54904 * C154074 + (C52132 + C52131 + C52130) * C153638 * C47633 +
           (C52129 + C52128 + C52127) * C153638 * C47632) *
              C2293 +
          (C52141 * C47632 + (C52135 + C52134 + C52133) * C153638 * C47633 +
           (C54908 + C54909 + C54910) * C153638 * C154074) *
              C2294 -
          ((C2881 * C34031 - C2882 * C34029 - C2881 * C34032 +
            C154071 * C34035 + C2879 * C34033 - C2880 * C34030 -
            C2879 * C34034 + C154097 * C34036 + C2877 * C10558 -
            C2878 * C10553 - C2877 * C10559 + C154109 * C10562) *
               C153638 * C154074 +
           (C54910 + C54909 + C54908) * C153638 * C47633 + C54904 * C47632) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C153638 * C55718 +
            C55976 * C55719 + C55977 * C55720 + C55978 * C55721 +
            C55979 * C55722) *
               C2086 -
           (C55998 * C55722 + C55979 * C55721 + C55978 * C55720 +
            C55977 * C55719 + C55976 * C55718) *
               C153775) *
              C153695 * C1281 +
          ((C55984 * C55718 + C55985 * C55719 + C55986 * C55720 +
            C55987 * C55721 + C55999 * C55722) *
               C153775 -
           (C55987 * C55722 + C55986 * C55721 + C55985 * C55720 +
            C55984 * C55719 + C205 * C153638 * C55718) *
               C2086) *
              C153695 * C1282 +
          ((C206 * C153638 * C55718 + C56244 * C55719 + C56245 * C55720 +
            C56246 * C55721 + C56247 * C55722) *
               C2086 -
           ((C134 * C10554 - C135 * C10551 - C134 * C10555 + C153792 * C10560) *
                C153638 * C55722 +
            C56247 * C55721 + C56246 * C55720 + C56245 * C55719 +
            C56244 * C55718) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C153638 * C55718 +
            C55976 * C55719 + C55977 * C55720 + C55978 * C55721 +
            C55979 * C55722) *
               C2086 -
           (C55998 * C55722 + C55979 * C55721 + C55978 * C55720 +
            C55977 * C55719 + C55976 * C55718) *
               C153775) *
              C332 +
          ((C56414 * C55718 + C56415 * C55719 + C56416 * C55720 +
            C56434 * C55721 + C56773 * C55722) *
               C153775 -
           (C56434 * C55722 + C56416 * C55721 + C56415 * C55720 +
            C56414 * C55719 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                C153638 * C55718) *
               C2086) *
              C333 +
          (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                C153638 * C55718 +
            C57180 * C55719 + C57181 * C55720 + C57196 * C55721 +
            C57197 * C55722) *
               C2086 -
           ((C134 * C34031 - C135 * C34029 - C134 * C34032 + C153792 * C34035) *
                C153638 * C55722 +
            C57197 * C55721 + C57196 * C55720 + C57181 * C55719 +
            C57180 * C55718) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
               C153638 * C55718 +
           C55976 * C55719 + C55977 * C55720 + C55978 * C55721 +
           C55979 * C55722) *
              C2292 -
          (C55998 * C55722 + C55979 * C55721 + C55978 * C55720 +
           C55977 * C55719 + C55976 * C55718) *
              C2293 +
          (C55977 * C55718 + C55978 * C55719 + C55979 * C55720 +
           C55998 * C55721 + C57535 * C55722) *
              C2294 -
          ((C134 * C57524 - C135 * C57523 - C134 * C57525 + C153792 * C57526) *
               C153638 * C55722 +
           C57535 * C55721 + C55998 * C55720 + C55979 * C55719 +
           C55978 * C55718) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                    C122 +
                C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                   C153810 * C154094 -
               (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
                (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) *
                    C122) *
                   C153810 * C154095 +
               ((C134 * C588 - C135 * C571 - C134 * C589 + C153792 * C607) *
                    C122 +
                C667 * C123 + C668 * C124 + C669 * C125 + C670 * C126) *
                   C153810 * C2602) *
                  C153695 * C154013 +
              ((C666 * C122 + C665 * C123 + C664 * C124 + C663 * C125 +
                C943 * C126) *
                   C153810 * C154095 -
               (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
                C205 * C122) *
                   C153810 * C154094 -
               ((C134 * C600 - C135 * C577 - C134 * C601 + C153792 * C613) *
                    C126 +
                C670 * C125 + C669 * C124 + C668 * C123 + C667 * C122) *
                   C153810 * C2602) *
                  C153695 * C153682) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
                 C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
                 C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                    C2874 +
                (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
                   C153810 * C154094 -
               (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
                (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 +
                 C154071 * C1963 + C2879 * C1111 - C2880 * C1105 -
                 C2879 * C1112 + C154097 * C1123 + C2877 * C586 - C2878 * C570 -
                 C2877 * C587 + C154109 * C606) *
                    C2874) *
                   C153810 * C154095 +
               ((C2877 * C588 - C2878 * C571 - C2877 * C589 + C154109 * C607 +
                 C2879 * C1526 - C2880 * C1517 - C2879 * C1527 +
                 C154097 * C1532 + C2881 * C3511 - C2882 * C3507 -
                 C2881 * C3512 + C154071 * C3519) *
                    C2874 +
                (C3602 + C3603 + C3604) * C2875 +
                (C3605 + C3606 + C3607) * C154058) *
                   C153810 * C2602) *
                  C153695 * C154013 +
              (((C3601 + C3600 + C3599) * C2874 +
                (C3598 + C3597 + C3596) * C2875 +
                (C4087 + C4088 + C4089) * C154058) *
                   C153810 * C154095 -
               (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
                (C2958 + C2957 + C2956) * C2874) *
                   C153810 * C154094 -
               ((C2881 * C3517 - C2882 * C3510 - C2881 * C3518 +
                 C154071 * C3522 + C2879 * C1520 - C2880 * C1514 -
                 C2879 * C1521 + C154097 * C1529 + C2877 * C594 - C2878 * C574 -
                 C2877 * C595 + C154109 * C610) *
                    C154058 +
                (C3607 + C3606 + C3605) * C2875 +
                (C3604 + C3603 + C3602) * C2874) *
                   C153810 * C2602) *
                  C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C2874 +
             C205 * C2875 + C206 * C154058) *
                C154110 +
            (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
               C154094 -
           (C10571 * C154074 + (C7768 + C7767 + C7826) * C154099 +
            (C7762 + C7761 + C7825) * C154110) *
               C154095 +
           (C7834 * C154110 + (C7829 + C7828 + C7827) * C154099 +
            (C10575 + C10569 + C10570) * C154074) *
               C2602) *
              C153695 * C154013 +
          (((C7789 + C7790 + C7791) * C154110 +
            (C7792 + C7793 + C7794) * C154099 +
            (C7830 + C7831 + C7832) * C154074) *
               C154095 -
           (C7816 * C154074 + (C7791 + C7790 + C7789) * C154099 +
            (C207 * C154058 + C206 * C2875 + C205 * C2874) * C154110) *
               C154094 -
           (((C134 * C7750 - C135 * C7743 - C134 * C7751 + C153792 * C7755) *
                 C154058 +
             C7823 * C2875 + C7822 * C2874) *
                C154074 +
            (C7832 + C7831 + C7830) * C154099 + C7816 * C154110) *
               C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C154094 -
           (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C154095 +
           ((C24212 * C588 - C24213 * C571 - C24212 * C589 + C24206 * C607 +
             C24214 * C1526 - C24215 * C1517 - C24214 * C1527 + C24207 * C1532 +
             C24216 * C3511 - C24217 * C3507 - C24216 * C3512 +
             C154071 * C3519) *
                C154106 +
            (C24905 + C24906 + C24907) * C154087 +
            (C24908 + C24909 + C24910) * C154058) *
               C153810 * C2602) *
              C153695 * C154013 +
          (((C24904 + C24903 + C24902) * C154106 +
            (C24901 + C24900 + C24899) * C154087 +
            (C25390 + C25391 + C25392) * C154058) *
               C153810 * C154095 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C154094 -
           ((C24216 * C3517 - C24217 * C3510 - C24216 * C3518 +
             C154071 * C3522 + C24214 * C1520 - C24215 * C1514 -
             C24214 * C1521 + C24207 * C1529 + C24212 * C594 - C24213 * C574 -
             C24212 * C595 + C24206 * C610) *
                C154058 +
            (C24910 + C24909 + C24908) * C154087 +
            (C24907 + C24906 + C24905) * C154106) *
               C153810 * C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C154094 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C154095 +
           (C28428 * C588 - C28429 * C571 - C28428 * C589 + C28422 * C607 +
            C28430 * C1526 - C28431 * C1517 - C28430 * C1527 + C28423 * C1532 +
            C28432 * C3511 - C28433 * C3507 - C28432 * C3512 + C28424 * C3519 +
            C28434 * C5038 - C28435 * C5033 - C28434 * C5039 + C28425 * C5042 +
            C28436 * C28692 - C28437 * C28690 - C28436 * C28693 +
            C28426 * C28696) *
               C153638 * C153810 * C2602) *
              C153695 * C154013 +
          ((C28428 * C584 - C28429 * C569 - C28428 * C585 + C28422 * C605 +
            C28430 * C1113 - C28431 * C1106 - C28430 * C1114 + C28423 * C1124 +
            C28432 * C1955 - C28433 * C1947 - C28432 * C1956 + C28424 * C1962 +
            C28434 * C4385 - C28435 * C4380 - C28434 * C4386 + C28425 * C4392 +
            C28436 * C5774 - C28437 * C5770 - C28436 * C5775 + C28426 * C5779) *
               C153638 * C153810 * C154095 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C154094 -
           (C28436 * C28694 - C28437 * C28691 - C28436 * C28695 +
            C28426 * C28697 + C28434 * C5036 - C28435 * C5032 - C28434 * C5037 +
            C28425 * C5041 + C28432 * C3513 - C28433 * C3508 - C28432 * C3514 +
            C28424 * C3520 + C28430 * C1524 - C28431 * C1516 - C28430 * C1525 +
            C28423 * C1531 + C28428 * C590 - C28429 * C572 - C28428 * C591 +
            C28422 * C608) *
               C153638 * C153810 * C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C153638 * C154110 +
            (C31262 + C31263 + C31264) * C153638 * C154099 + C31276 * C154074) *
               C154094 -
           (C34055 * C154074 + (C31267 + C31266 + C31265) * C153638 * C154099 +
            (C31264 + C31263 + C31262) * C153638 * C154110) *
               C154095 +
           (C31276 * C154110 + (C31270 + C31269 + C31268) * C153638 * C154099 +
            (C34059 + C34060 + C34061) * C153638 * C154074) *
               C2602) *
              C153695 * C154013 +
          (((C24904 + C24903 + C24902) * C153638 * C154110 +
            (C24905 + C24906 + C24907) * C153638 * C154099 +
            (C31271 + C31272 + C31273) * C153638 * C154074) *
               C154095 -
           (C31261 * C154074 + (C24902 + C24903 + C24904) * C153638 * C154099 +
            (C24293 + C24292 + C24291) * C153638 * C154110) *
               C154094 -
           ((C24216 * C31182 - C24217 * C31179 - C24216 * C31183 +
             C154071 * C31185 + C24214 * C9204 - C24215 * C9200 -
             C24214 * C9205 + C24207 * C9209 + C24212 * C7746 - C24213 * C7741 -
             C24212 * C7747 + C24206 * C7753) *
                C153638 * C154074 +
            (C31273 + C31272 + C31271) * C153638 * C154099 + C31261 * C154110) *
               C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154106 +
             C205 * C154087 + C206 * C154058) *
                C47632 +
            (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
               C154094 -
           (C50743 * C154074 + (C48077 + C48076 + C48075) * C47633 +
            (C48074 + C48073 + C48072) * C47632) *
               C154095 +
           (C48092 * C47632 + (C48080 + C48079 + C48078) * C47633 +
            (C50740 + C50741 + C50742) * C154074) *
               C2602) *
              C153695 * C154013 +
          (((C48081 + C48082 + C48083) * C47632 +
            (C48084 + C48085 + C48086) * C47633 +
            (C48087 + C48088 + C48089) * C154074) *
               C154095 -
           (C48093 * C154074 + (C48083 + C48082 + C48081) * C47633 +
            (C207 * C154058 + C206 * C154087 + C205 * C154106) * C47632) *
               C154094 -
           (((C134 * C7750 - C135 * C7743 - C134 * C7751 + C153792 * C7755) *
                 C154058 +
             C7823 * C154087 + C7822 * C154106) *
                C154074 +
            (C48089 + C48088 + C48087) * C47633 + C48093 * C47632) *
               C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C153638 * C47632 +
            (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
               C154094 -
           (C54904 * C154074 + (C52132 + C52131 + C52130) * C153638 * C47633 +
            (C52129 + C52128 + C52127) * C153638 * C47632) *
               C154095 +
           (C52141 * C47632 + (C52135 + C52134 + C52133) * C153638 * C47633 +
            (C54908 + C54909 + C54910) * C153638 * C154074) *
               C2602) *
              C153695 * C154013 +
          (((C3601 + C3600 + C3599) * C153638 * C47632 +
            (C3602 + C3603 + C3604) * C153638 * C47633 +
            (C52136 + C52137 + C52138) * C153638 * C154074) *
               C154095 -
           (C52126 * C154074 + (C3599 + C3600 + C3601) * C153638 * C47633 +
            (C2958 + C2957 + C2956) * C153638 * C47632) *
               C154094 -
           ((C2881 * C31182 - C2882 * C31179 - C2881 * C31183 +
             C154071 * C31185 + C2879 * C9204 - C2880 * C9200 - C2879 * C9205 +
             C154097 * C9209 + C2877 * C7746 - C2878 * C7741 - C2877 * C7747 +
             C154109 * C7753) *
                C153638 * C154074 +
            (C52138 + C52137 + C52136) * C153638 * C47633 + C52126 * C47632) *
               C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C153638 * C55718 +
            C55976 * C55719 + C55977 * C55720 + C55978 * C55721 +
            C55979 * C55722) *
               C154094 -
           (C55998 * C55722 + C55979 * C55721 + C55978 * C55720 +
            C55977 * C55719 + C55976 * C55718) *
               C154095 +
           (C55977 * C55718 + C55978 * C55719 + C55979 * C55720 +
            C55998 * C55721 + C57535 * C55722) *
               C2602) *
              C153695 * C154013 +
          ((C55984 * C55718 + C55985 * C55719 + C55986 * C55720 +
            C55987 * C55721 + C55999 * C55722) *
               C154095 -
           (C55987 * C55722 + C55986 * C55721 + C55985 * C55720 +
            C55984 * C55719 + C205 * C153638 * C55718) *
               C154094 -
           ((C134 * C55971 - C135 * C55968 - C134 * C55972 + C153792 * C55974) *
                C153638 * C55722 +
            C55999 * C55721 + C55987 * C55720 + C55986 * C55719 +
            C55985 * C55718) *
               C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C2086 -
           (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
            (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) * C122) *
               C153810 * C153775) *
              C153695 * C1281 +
          ((C666 * C122 + C665 * C123 + C664 * C124 + C663 * C125 +
            C943 * C126) *
               C153810 * C153775 -
           (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
            C205 * C122) *
               C153810 * C2086) *
              C153695 * C1282 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125 +
            C210 * C126) *
               C153810 * C2086 -
           ((C134 * C933 - C135 * C932 - C134 * C934 + C153792 * C935) * C126 +
            C943 * C125 + C663 * C124 + C664 * C123 + C665 * C122) *
               C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C2086 -
           (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
            (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) * C122) *
               C153810 * C153775) *
              C332 +
          (((C134 * C1111 - C135 * C1105 - C134 * C1112 + C153792 * C1123) *
                C122 +
            C1154 * C123 + C1155 * C124 + C1156 * C125 + C1157 * C126) *
               C153810 * C153775 -
           (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) * C122) *
               C153810 * C2086) *
              C333 +
          (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) * C122 +
            C438 * C123 + C439 * C124 + C440 * C125 + C441 * C126) *
               C153810 * C2086 -
           ((C134 * C1949 - C135 * C1944 - C134 * C1950 + C153792 * C1959) *
                C126 +
            (C134 * C1951 - C135 * C1945 - C134 * C1952 + C153792 * C1960) *
                C125 +
            (C134 * C1953 - C135 * C1946 - C134 * C1954 + C153792 * C1961) *
                C124 +
            (C134 * C1955 - C135 * C1947 - C134 * C1956 + C153792 * C1962) *
                C123 +
            (C134 * C1957 - C135 * C1948 - C134 * C1958 + C153792 * C1963) *
                C122) *
               C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C2086 -
           (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
            (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
             C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
             C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                C2874) *
               C153810 * C153775) *
              C153695 * C1281 +
          (((C3601 + C3600 + C3599) * C2874 + (C3598 + C3597 + C3596) * C2875 +
            (C4087 + C4088 + C4089) * C154058) *
               C153810 * C153775 -
           (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
            (C2958 + C2957 + C2956) * C2874) *
               C153810 * C2086) *
              C153695 * C1282 +
          ((C2970 * C2874 + (C2964 + C2963 + C2962) * C2875 +
            (C2965 + C2966 + C2967) * C154058) *
               C153810 * C2086 -
           ((C2881 * C1949 - C2882 * C1944 - C2881 * C1950 + C154071 * C1959 +
             C2879 * C1119 - C2880 * C1109 - C2879 * C1120 + C154097 * C1127 +
             C2877 * C578 - C2878 * C566 - C2877 * C579 + C154109 * C602) *
                C154058 +
            (C4089 + C4088 + C4087) * C2875 + C4080 * C2874) *
               C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C2086 -
           (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
            (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
             C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
             C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                C2874) *
               C153810 * C153775) *
              C332 +
          (((C2877 * C1111 - C2878 * C1105 - C2877 * C1112 + C154109 * C1123 +
             C2879 * C1957 - C2880 * C1948 - C2879 * C1958 + C154097 * C1963 +
             C2881 * C4383 - C2882 * C4379 - C2881 * C4384 + C154071 * C4391) *
                C2874 +
            (C4432 + C4433 + C4434) * C2875 +
            (C4435 + C4436 + C4437) * C154058) *
               C153810 * C153775 -
           (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C2874) *
               C153810 * C2086) *
              C333 +
          (((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
             C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
             C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                C2874 +
            (C3284 + C3285 + C3286) * C2875 +
            (C3287 + C3288 + C3289) * C154058) *
               C153810 * C2086 -
           ((C2881 * C5772 - C2882 * C5769 - C2881 * C5773 + C154071 * C5778 +
             C2879 * C4387 - C2880 * C4381 - C2879 * C4388 + C154097 * C4393 +
             C2877 * C1953 - C2878 * C1946 - C2877 * C1954 + C154109 * C1961) *
                C154058 +
            (C2881 * C5774 - C2882 * C5770 - C2881 * C5775 + C154071 * C5779 +
             C2879 * C4385 - C2880 * C4380 - C2879 * C4386 + C154097 * C4392 +
             C2877 * C1955 - C2878 * C1947 - C2877 * C1956 + C154109 * C1962) *
                C2875 +
            (C2881 * C5776 - C2882 * C5771 - C2881 * C5777 + C154071 * C5780 +
             C2879 * C4383 - C2880 * C4379 - C2879 * C4384 + C154097 * C4391 +
             C2877 * C1957 - C2878 * C1948 - C2877 * C1958 + C154109 * C1963) *
                C2874) *
               C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C2874 +
             C205 * C2875 + C206 * C154058) *
                C154110 +
            (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
               C2086 -
           ((C7827 + C7828 + C7829) * C154074 +
            (C7768 + C7767 + C7826) * C154099 +
            (C7762 + C7761 + C7825) * C154110) *
               C153775) *
              C153695 * C1281 +
          (((C7789 + C7790 + C7791) * C154110 +
            (C7792 + C7793 + C7794) * C154099 +
            (C7830 + C7831 + C7832) * C154074) *
               C153775 -
           (C7816 * C154074 + (C7791 + C7790 + C7789) * C154099 +
            (C207 * C154058 + C206 * C2875 + C205 * C2874) * C154110) *
               C2086) *
              C153695 * C1282 +
          (((C206 * C2874 + C207 * C2875 + C208 * C154058) * C154110 +
            (C8278 + C8279 + C8280) * C154099 +
            (C8281 + C8282 + C8283) * C154074) *
               C2086 -
           (((C134 * C2301 - C135 * C2296 - C134 * C2302 + C153792 * C2311) *
                 C154058 +
             C7824 * C2875 + C7819 * C2874) *
                C154074 +
            (C8283 + C8282 + C8281) * C154099 +
            (C8280 + C8279 + C8278) * C154110) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C2874 +
             C205 * C2875 + C206 * C154058) *
                C154110 +
            (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
               C2086 -
           ((C7827 + C7828 + C7829) * C154074 +
            (C7768 + C7767 + C7826) * C154099 +
            (C7762 + C7761 + C7825) * C154110) *
               C153775) *
              C332 +
          (((C8616 + C8582 + C8583) * C154110 +
            (C8617 + C8588 + C8589) * C154099 +
            (C9223 + C9216 + C9217) * C154074) *
               C153775 -
           (C9220 * C154074 + (C8583 + C8582 + C8616) * C154099 +
            (C436 * C154058 + C437 * C2875 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C2874) *
                C154110) *
               C2086) *
              C333 +
          ((((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C2874 +
             C438 * C2875 + C439 * C154058) *
                C154110 +
            (C9968 + C9954 + C9955) * C154099 +
            (C9969 + C9960 + C9961) * C154074) *
               C2086 -
           (((C134 * C6369 - C135 * C6363 - C134 * C6370 + C153792 * C6381) *
                 C154058 +
             (C134 * C6373 - C135 * C6365 - C134 * C6374 + C153792 * C6383) *
                 C2875 +
             (C134 * C6377 - C135 * C6367 - C134 * C6378 + C153792 * C6385) *
                 C2874) *
                C154074 +
            (C9961 + C9960 + C9969) * C154099 +
            (C9955 + C9954 + C9968) * C154110) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C2086 -
           (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C153775) *
              C153695 * C1281 +
          (((C24904 + C24903 + C24902) * C154106 +
            (C24901 + C24900 + C24899) * C154087 +
            (C25390 + C25391 + C25392) * C154058) *
               C153810 * C153775 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C2086) *
              C153695 * C1282 +
          ((C24305 * C154106 + (C24299 + C24298 + C24297) * C154087 +
            (C24300 + C24301 + C24302) * C154058) *
               C153810 * C2086 -
           ((C24216 * C1949 - C24217 * C1944 - C24216 * C1950 +
             C154071 * C1959 + C24214 * C1119 - C24215 * C1109 -
             C24214 * C1120 + C24207 * C1127 + C24212 * C578 - C24213 * C566 -
             C24212 * C579 + C24206 * C602) *
                C154058 +
            (C25392 + C25391 + C25390) * C154087 + C25383 * C154106) *
               C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C2086 -
           (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C153775) *
              C332 +
          (((C24212 * C1111 - C24213 * C1105 - C24212 * C1112 + C24206 * C1123 +
             C24214 * C1957 - C24215 * C1948 - C24214 * C1958 + C24207 * C1963 +
             C24216 * C4383 - C24217 * C4379 - C24216 * C4384 +
             C154071 * C4391) *
                C154106 +
            (C25719 + C25720 + C25721) * C154087 +
            (C25722 + C25723 + C25724) * C154058) *
               C153810 * C153775 -
           (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C2086) *
              C333 +
          (((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C154106 +
            (C24603 + C24604 + C24605) * C154087 +
            (C24606 + C24607 + C24608) * C154058) *
               C153810 * C2086 -
           ((C24216 * C5772 - C24217 * C5769 - C24216 * C5773 +
             C154071 * C5778 + C24214 * C4387 - C24215 * C4381 -
             C24214 * C4388 + C24207 * C4393 + C24212 * C1953 - C24213 * C1946 -
             C24212 * C1954 + C24206 * C1961) *
                C154058 +
            (C24216 * C5774 - C24217 * C5770 - C24216 * C5775 +
             C154071 * C5779 + C24214 * C4385 - C24215 * C4380 -
             C24214 * C4386 + C24207 * C4392 + C24212 * C1955 - C24213 * C1947 -
             C24212 * C1956 + C24206 * C1962) *
                C154087 +
            (C24216 * C5776 - C24217 * C5771 - C24216 * C5777 +
             C154071 * C5780 + C24214 * C4383 - C24215 * C4379 -
             C24214 * C4384 + C24207 * C4391 + C24212 * C1957 - C24213 * C1948 -
             C24212 * C1958 + C24206 * C1963) *
                C154106) *
               C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C2086 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C153775) *
              C153695 * C1281 +
          ((C28428 * C584 - C28429 * C569 - C28428 * C585 + C28422 * C605 +
            C28430 * C1113 - C28431 * C1106 - C28430 * C1114 + C28423 * C1124 +
            C28432 * C1955 - C28433 * C1947 - C28432 * C1956 + C28424 * C1962 +
            C28434 * C4385 - C28435 * C4380 - C28434 * C4386 + C28425 * C4392 +
            C28436 * C5774 - C28437 * C5770 - C28436 * C5775 + C28426 * C5779) *
               C153638 * C153810 * C153775 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C2086) *
              C153695 * C1282 +
          ((C28428 * C148 - C28429 * C138 - C28428 * C149 + C28422 * C162 +
            C28430 * C353 - C28431 * C339 - C28430 * C354 + C28423 * C375 +
            C28432 * C363 - C28433 * C344 - C28432 * C364 + C28424 * C380 +
            C28434 * C1380 - C28435 * C1373 - C28434 * C1381 + C28425 * C1388 +
            C28436 * C3197 - C28437 * C3191 - C28436 * C3198 + C28426 * C3203) *
               C153638 * C153810 * C2086 -
           (C28436 * C5772 - C28437 * C5769 - C28436 * C5773 + C28426 * C5778 +
            C28434 * C4387 - C28435 * C4381 - C28434 * C4388 + C28425 * C4393 +
            C28432 * C1953 - C28433 * C1946 - C28432 * C1954 + C28424 * C1961 +
            C28430 * C1115 - C28431 * C1107 - C28430 * C1116 + C28423 * C1125 +
            C28428 * C582 - C28429 * C568 - C28428 * C583 + C28422 * C604) *
               C153638 * C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C2086 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C153775) *
              C332 +
          ((C28428 * C1111 - C28429 * C1105 - C28428 * C1112 + C28422 * C1123 +
            C28430 * C1957 - C28431 * C1948 - C28430 * C1958 + C28423 * C1963 +
            C28432 * C4383 - C28433 * C4379 - C28432 * C4384 + C28424 * C4391 +
            C28434 * C5776 - C28435 * C5771 - C28434 * C5777 + C28425 * C5780 +
            C28436 * C29106 - C28437 * C29104 - C28436 * C29107 +
            C28426 * C29110) *
               C153638 * C153810 * C153775 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C2086) *
              C333 +
          ((C28428 * C359 - C28429 * C342 - C28428 * C360 + C28422 * C378 +
            C28430 * C1384 - C28431 * C1375 - C28430 * C1385 + C28423 * C1390 +
            C28432 * C3193 - C28433 * C3189 - C28432 * C3194 + C28424 * C3201 +
            C28434 * C4808 - C28435 * C4803 - C28434 * C4809 + C28425 * C4812 +
            C28436 * C28562 - C28437 * C28560 - C28436 * C28563 +
            C28426 * C28566) *
               C153638 * C153810 * C2086 -
           (C28436 * C29853 - C28437 * C29852 - C28436 * C29854 +
            C28426 * C29855 + C28434 * C29106 - C28435 * C29104 -
            C28434 * C29107 + C28425 * C29110 + C28432 * C5776 -
            C28433 * C5771 - C28432 * C5777 + C28424 * C5780 + C28430 * C4383 -
            C28431 * C4379 - C28430 * C4384 + C28423 * C4391 + C28428 * C1957 -
            C28429 * C1948 - C28428 * C1958 + C28422 * C1963) *
               C153638 * C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C153638 * C154110 +
            (C31262 + C31263 + C31264) * C153638 * C154099 + C31276 * C154074) *
               C2086 -
           ((C31268 + C31269 + C31270) * C153638 * C154074 +
            (C31267 + C31266 + C31265) * C153638 * C154099 +
            (C31264 + C31263 + C31262) * C153638 * C154110) *
               C153775) *
              C153695 * C1281 +
          (((C24904 + C24903 + C24902) * C153638 * C154110 +
            (C24905 + C24906 + C24907) * C153638 * C154099 +
            (C31271 + C31272 + C31273) * C153638 * C154074) *
               C153775 -
           (C31261 * C154074 + (C24902 + C24903 + C24904) * C153638 * C154099 +
            (C24293 + C24292 + C24291) * C153638 * C154110) *
               C2086) *
              C153695 * C1282 +
          ((C24305 * C153638 * C154110 +
            (C24901 + C24900 + C24899) * C153638 * C154099 +
            (C24908 + C24909 + C24910) * C153638 * C154074) *
               C2086 -
           ((C24216 * C6369 - C24217 * C6363 - C24216 * C6370 +
             C154071 * C6381 + C24214 * C6371 - C24215 * C6364 -
             C24214 * C6372 + C24207 * C6382 + C24212 * C2305 - C24213 * C2298 -
             C24212 * C2306 + C24206 * C2313) *
                C153638 * C154074 +
            (C24910 + C24909 + C24908) * C153638 * C154099 +
            C25383 * C153638 * C154110) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C153638 * C154110 +
            (C31262 + C31263 + C31264) * C153638 * C154099 + C31276 * C154074) *
               C2086 -
           ((C31268 + C31269 + C31270) * C153638 * C154074 +
            (C31267 + C31266 + C31265) * C153638 * C154099 +
            (C31264 + C31263 + C31262) * C153638 * C154110) *
               C153775) *
              C332 +
          (((C32061 + C32062 + C32063) * C153638 * C154110 +
            (C32064 + C32065 + C32066) * C153638 * C154099 +
            (C32677 + C32678 + C32679) * C153638 * C154074) *
               C153775 -
           (C32676 * C154074 + (C32063 + C32062 + C32061) * C153638 * C154099 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C153638 * C154110) *
               C2086) *
              C333 +
          (((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C153638 * C154110 +
            (C33442 + C33443 + C33444) * C153638 * C154099 +
            (C33445 + C33446 + C33447) * C153638 * C154074) *
               C2086 -
           ((C24216 * C30184 - C24217 * C30182 - C24216 * C30185 +
             C154071 * C30188 + C24214 * C30186 - C24215 * C30183 -
             C24214 * C30187 + C24207 * C30189 + C24212 * C6377 -
             C24213 * C6367 - C24212 * C6378 + C24206 * C6385) *
                C153638 * C154074 +
            (C33447 + C33446 + C33445) * C153638 * C154099 +
            (C33444 + C33443 + C33442) * C153638 * C154110) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154106 +
             C205 * C154087 + C206 * C154058) *
                C47632 +
            (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
               C2086 -
           ((C48078 + C48079 + C48080) * C154074 +
            (C48077 + C48076 + C48075) * C47633 +
            (C48074 + C48073 + C48072) * C47632) *
               C153775) *
              C153695 * C1281 +
          (((C48081 + C48082 + C48083) * C47632 +
            (C48084 + C48085 + C48086) * C47633 +
            (C48087 + C48088 + C48089) * C154074) *
               C153775 -
           (C48093 * C154074 + (C48083 + C48082 + C48081) * C47633 +
            (C207 * C154058 + C206 * C154087 + C205 * C154106) * C47632) *
               C2086) *
              C153695 * C1282 +
          (((C206 * C154106 + C207 * C154087 + C208 * C154058) * C47632 +
            (C48530 + C48531 + C48532) * C47633 +
            (C48533 + C48534 + C48535) * C154074) *
               C2086 -
           (((C134 * C2301 - C135 * C2296 - C134 * C2302 + C153792 * C2311) *
                 C154058 +
             C7824 * C154087 + C7819 * C154106) *
                C154074 +
            (C48535 + C48534 + C48533) * C47633 +
            (C48532 + C48531 + C48530) * C47632) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154106 +
             C205 * C154087 + C206 * C154058) *
                C47632 +
            (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
               C2086 -
           ((C48078 + C48079 + C48080) * C154074 +
            (C48077 + C48076 + C48075) * C47633 +
            (C48074 + C48073 + C48072) * C47632) *
               C153775) *
              C332 +
          (((C48826 + C48827 + C48828) * C47632 +
            (C48829 + C48830 + C48831) * C47633 +
            (C49420 + C49421 + C49422) * C154074) *
               C153775 -
           (C49424 * C154074 + (C48828 + C48827 + C48826) * C47633 +
            (C436 * C154058 + C437 * C154087 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154106) *
                C47632) *
               C2086) *
              C333 +
          ((((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C154106 +
             C438 * C154087 + C439 * C154058) *
                C47632 +
            (C50151 + C50152 + C50153) * C47633 +
            (C50154 + C50155 + C50156) * C154074) *
               C2086 -
           (((C134 * C6369 - C135 * C6363 - C134 * C6370 + C153792 * C6381) *
                 C154058 +
             (C134 * C6373 - C135 * C6365 - C134 * C6374 + C153792 * C6383) *
                 C154087 +
             (C134 * C6377 - C135 * C6367 - C134 * C6378 + C153792 * C6385) *
                 C154106) *
                C154074 +
            (C50156 + C50155 + C50154) * C47633 +
            (C50153 + C50152 + C50151) * C47632) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C153638 * C47632 +
            (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
               C2086 -
           ((C52133 + C52134 + C52135) * C153638 * C154074 +
            (C52132 + C52131 + C52130) * C153638 * C47633 +
            (C52129 + C52128 + C52127) * C153638 * C47632) *
               C153775) *
              C153695 * C1281 +
          (((C3601 + C3600 + C3599) * C153638 * C47632 +
            (C3602 + C3603 + C3604) * C153638 * C47633 +
            (C52136 + C52137 + C52138) * C153638 * C154074) *
               C153775 -
           (C52126 * C154074 + (C3599 + C3600 + C3601) * C153638 * C47633 +
            (C2958 + C2957 + C2956) * C153638 * C47632) *
               C2086) *
              C153695 * C1282 +
          ((C2970 * C153638 * C47632 +
            (C3598 + C3597 + C3596) * C153638 * C47633 +
            (C3605 + C3606 + C3607) * C153638 * C154074) *
               C2086 -
           ((C2881 * C6369 - C2882 * C6363 - C2881 * C6370 + C154071 * C6381 +
             C2879 * C6371 - C2880 * C6364 - C2879 * C6372 + C154097 * C6382 +
             C2877 * C2305 - C2878 * C2298 - C2877 * C2306 + C154109 * C2313) *
                C153638 * C154074 +
            (C3607 + C3606 + C3605) * C153638 * C47633 +
            C4080 * C153638 * C47632) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C153638 * C47632 +
            (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
               C2086 -
           ((C52133 + C52134 + C52135) * C153638 * C154074 +
            (C52132 + C52131 + C52130) * C153638 * C47633 +
            (C52129 + C52128 + C52127) * C153638 * C47632) *
               C153775) *
              C332 +
          (((C52922 + C52923 + C52924) * C153638 * C47632 +
            (C52925 + C52926 + C52927) * C153638 * C47633 +
            (C53534 + C53535 + C53536) * C153638 * C154074) *
               C153775 -
           (C53533 * C154074 + (C52924 + C52923 + C52922) * C153638 * C47633 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C153638 * C47632) *
               C2086) *
              C333 +
          (((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
             C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
             C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                C153638 * C47632 +
            (C54299 + C54300 + C54301) * C153638 * C47633 +
            (C54302 + C54303 + C54304) * C153638 * C154074) *
               C2086 -
           ((C2881 * C30184 - C2882 * C30182 - C2881 * C30185 +
             C154071 * C30188 + C2879 * C30186 - C2880 * C30183 -
             C2879 * C30187 + C154097 * C30189 + C2877 * C6377 - C2878 * C6367 -
             C2877 * C6378 + C154109 * C6385) *
                C153638 * C154074 +
            (C54304 + C54303 + C54302) * C153638 * C47633 +
            (C54301 + C54300 + C54299) * C153638 * C47632) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C153638 * C55718 +
            C55976 * C55719 + C55977 * C55720 + C55978 * C55721 +
            C55979 * C55722) *
               C2086 -
           (C55998 * C55722 + C55979 * C55721 + C55978 * C55720 +
            C55977 * C55719 + C55976 * C55718) *
               C153775) *
              C153695 * C1281 +
          ((C55984 * C55718 + C55985 * C55719 + C55986 * C55720 +
            C55987 * C55721 + C55999 * C55722) *
               C153775 -
           (C55987 * C55722 + C55986 * C55721 + C55985 * C55720 +
            C55984 * C55719 + C205 * C153638 * C55718) *
               C2086) *
              C153695 * C1282 +
          ((C206 * C153638 * C55718 + C56244 * C55719 + C56245 * C55720 +
            C56246 * C55721 + C56247 * C55722) *
               C2086 -
           ((C134 * C10554 - C135 * C10551 - C134 * C10555 + C153792 * C10560) *
                C153638 * C55722 +
            C56247 * C55721 + C56246 * C55720 + C56245 * C55719 +
            C56244 * C55718) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C153638 * C55718 +
            C55976 * C55719 + C55977 * C55720 + C55978 * C55721 +
            C55979 * C55722) *
               C2086 -
           (C55998 * C55722 + C55979 * C55721 + C55978 * C55720 +
            C55977 * C55719 + C55976 * C55718) *
               C153775) *
              C332 +
          ((C56414 * C55718 + C56415 * C55719 + C56416 * C55720 +
            C56434 * C55721 + C56773 * C55722) *
               C153775 -
           (C56434 * C55722 + C56416 * C55721 + C56415 * C55720 +
            C56414 * C55719 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                C153638 * C55718) *
               C2086) *
              C333 +
          (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                C153638 * C55718 +
            C57180 * C55719 + C57181 * C55720 + C57196 * C55721 +
            C57197 * C55722) *
               C2086 -
           ((C134 * C34031 - C135 * C34029 - C134 * C34032 + C153792 * C34035) *
                C153638 * C55722 +
            C57197 * C55721 + C57196 * C55720 + C57181 * C55719 +
            C57180 * C55718) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154002 +
             (C24291 + C24292 + C24293) * C153648) *
                C154037 +
            ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
                C153897) *
               C153711 * C154021 -
           (((C25721 + C25720 + C25719) * C153648 +
             (C32063 + C32062 + C32061) * C154002) *
                C153897 +
            ((C24600 + C24601 + C24602) * C153648 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C154002) *
                C154037) *
               C153711 * C153747) *
              C154090 +
          ((((C24602 + C24601 + C24600) * C154002 +
             (C24599 + C24598 + C24597) * C153648) *
                C154037 +
            ((C25719 + C25720 + C25721) * C154002 +
             (C25722 + C25723 + C25724) * C153648) *
                C153897) *
               C153711 * C153747 -
           ((C25383 * C153648 + C39373 * C154002) * C153897 +
            ((C24296 + C24295 + C24294) * C153648 +
             (C24293 + C24292 + C24291) * C154002) *
                C154037) *
               C153711 * C154021) *
              C154091 +
          (((C24305 * C154002 + (C24299 + C24298 + C24297) * C153648) *
                C154037 +
            ((C24901 + C24900 + C24899) * C154002 +
             (C25390 + C25391 + C25392) * C153648) *
                C153897) *
               C153711 * C154021 -
           (((C24216 * C4389 - C24217 * C4382 - C24216 * C4390 +
              C154071 * C4394 + C24214 * C1951 - C24215 * C1945 -
              C24214 * C1952 + C24207 * C1960 + C24212 * C1117 -
              C24213 * C1108 - C24212 * C1118 + C24206 * C1126) *
                 C153648 +
             (C25724 + C25723 + C25722) * C154002) *
                C153897 +
            ((C25151 + C25150 + C25149) * C153648 + C25142 * C154002) *
                C154037) *
               C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C11433 +
             C205 * C11434 + C206 * C11435 + C207 * C154036) *
                C154037 +
            (C15647 + C15648 + C15649 + C15650) * C153897) *
               C153711 * C154021 -
           ((C1156 * C154036 + C1155 * C11435 + C1154 * C11434 +
             C8612 * C11433) *
                C153897 +
            (C435 * C154036 + C436 * C11435 + C437 * C11434 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C11433) *
                C154037) *
               C153711 * C153747) *
              C154090 +
          (((C437 * C11433 + C436 * C11434 + C435 * C11435 + C434 * C154036) *
                C154037 +
            (C1154 * C11433 + C1155 * C11434 + C1156 * C11435 +
             C1157 * C154036) *
                C153897) *
               C153711 * C153747 -
           ((C15658 + C15657 + C15656 + C15655) * C153897 +
            (C208 * C154036 + C207 * C11435 + C206 * C11434 + C205 * C11433) *
                C154037) *
               C153711 * C154021) *
              C154091 +
          (((C206 * C11433 + C207 * C11434 + C208 * C11435 + C209 * C154036) *
                C154037 +
            (C665 * C11433 + C664 * C11434 + C663 * C11435 + C943 * C154036) *
                C153897) *
               C153711 * C154021 -
           (((C134 * C1121 - C135 * C1110 - C134 * C1122 + C153792 * C1128) *
                 C154036 +
             C1157 * C11435 + C1156 * C11434 + C1155 * C11433) *
                C153897 +
            (C808 * C154036 + C434 * C11435 + C435 * C11434 + C436 * C11433) *
                C154037) *
               C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154002 +
             C205 * C153648) *
                C63394 +
            (C63794 + C63795) * C63395 + C63810 * C63396 + C63811 * C154051) *
               C153711 * C154021 -
           ((C8614 * C153648 + C9222 * C154002) * C154051 +
            (C7518 * C153648 + C8613 * C154002) * C63396 +
            (C1154 * C153648 + C8612 * C154002) * C63395 +
            (C437 * C153648 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154002) *
                C63394) *
               C153711 * C153747) *
              C154090 +
          (((C437 * C154002 + C436 * C153648) * C63394 +
            (C1154 * C154002 + C1155 * C153648) * C63395 +
            (C7518 * C154002 + C7517 * C153648) * C63396 +
            (C8614 * C154002 + C8615 * C153648) * C154051) *
               C153711 * C153747 -
           (C63812 * C154051 + C63813 * C63396 + (C63803 + C63802) * C63395 +
            (C206 * C153648 + C205 * C154002) * C63394) *
               C153711 * C154021) *
              C154091 +
          (((C206 * C154002 + C207 * C153648) * C63394 +
            (C665 * C154002 + C664 * C153648) * C63395 +
            (C668 * C154002 + C669 * C153648) * C63396 +
            (C7819 * C154002 + C7824 * C153648) * C154051) *
               C153711 * C154021 -
           (((C134 * C8574 - C135 * C8573 - C134 * C8575 + C153792 * C8576) *
                 C153648 +
             C8615 * C154002) *
                C154051 +
            (C8059 * C153648 + C7517 * C154002) * C63396 +
            (C1156 * C153648 + C1155 * C154002) * C63395 +
            (C435 * C153648 + C436 * C154002) * C63394) *
               C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
               C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
               C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                  C154002 +
              (C24291 + C24292 + C24293) * C153648) *
                 C154037 +
             ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
                 C153897) *
                C154022 -
            ((C31248 * C153648 + (C31267 + C31266 + C31265) * C154002) *
                 C153897 +
             (C39373 * C153648 + (C31264 + C31263 + C31262) * C154002) *
                 C154037) *
                C153775) *
               C154021 +
           ((((C32061 + C32062 + C32063) * C154002 + C40345 * C153648) *
                 C154037 +
             ((C32064 + C32065 + C32066) * C154002 +
              (C32067 + C32068 + C32069) * C153648) *
                 C153897) *
                C153775 -
            ((C40346 * C153648 + (C32063 + C32062 + C32061) * C154002) *
                 C153897 +
             ((C24600 + C24601 + C24602) * C153648 +
              (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
               C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
               C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
               C24206 * C377) *
                  C154002) *
                 C154037) *
                C154022) *
               C153747) *
              C335 +
          ((((C39372 * C154002 + C39956 * C153648) * C154037 +
             (C39374 * C154002 + (C24908 + C24909 + C24910) * C153648) *
                 C153897) *
                C153775 -
            ((C25383 * C153648 + C39373 * C154002) * C153897 +
             ((C24296 + C24295 + C24294) * C153648 +
              (C24293 + C24292 + C24291) * C154002) *
                 C154037) *
                C154022) *
               C154021 +
           ((((C24602 + C24601 + C24600) * C154002 +
              (C24599 + C24598 + C24597) * C153648) *
                 C154037 +
             (C40345 * C154002 + (C25722 + C25723 + C25724) * C153648) *
                 C153897) *
                C154022 -
            (((C24216 * C5034 - C24217 * C5031 - C24216 * C5035 +
               C154071 * C5040 + C24214 * C3515 - C24215 * C3509 -
               C24214 * C3516 + C24207 * C3521 + C24212 * C1522 -
               C24213 * C1515 - C24212 * C1523 + C24206 * C1530) *
                  C153648 +
              (C32069 + C32068 + C32067) * C154002) *
                 C153897 +
             ((C25724 + C25723 + C25722) * C153648 + C40346 * C154002) *
                 C154037) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                  C11433 +
              C205 * C11434 + C206 * C11435 + C207 * C154036) *
                 C154037 +
             (C15647 + C15648 + C15649 + C15650) * C153897) *
                C154022 -
            ((C15651 + C15652 + C15653 + C15654) * C153897 +
             (C15650 + C15649 + C15648 + C15647) * C154037) *
                C153775) *
               C154021 +
           (((C16313 + C16314 + C16315 + C16316) * C154037 +
             (C8613 * C11433 + C7518 * C11434 + C7517 * C11435 +
              C8059 * C154036) *
                 C153897) *
                C153775 -
            ((C16316 + C16315 + C16314 + C16313) * C153897 +
             (C435 * C154036 + C436 * C11435 + C437 * C11434 +
              (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                  C11433) *
                 C154037) *
                C154022) *
               C153747) *
              C335 +
          ((((C15655 + C15656 + C15657 + C15658) * C154037 +
             (C15659 + C15660 + C15661 + C15662) * C153897) *
                C153775 -
            ((C15658 + C15657 + C15656 + C15655) * C153897 +
             (C208 * C154036 + C207 * C11435 + C206 * C11434 + C205 * C11433) *
                 C154037) *
                C154022) *
               C154021 +
           (((C437 * C11433 + C436 * C11434 + C435 * C11435 + C434 * C154036) *
                 C154037 +
             (C16317 + C16318 + C16319 + C16320) * C153897) *
                C154022 -
            (((C134 * C1518 - C135 * C1513 - C134 * C1519 + C153792 * C1528) *
                  C154036 +
              C8059 * C11435 + C7517 * C11434 + C7518 * C11433) *
                 C153897 +
             (C16320 + C16319 + C16318 + C16317) * C154037) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                  C154002 +
              C205 * C153648) *
                 C63394 +
             (C63794 + C63795) * C63395 + C63810 * C63396 + C63811 * C154051) *
                C154022 -
            ((C63800 + C63801) * C154051 + (C63799 + C63798) * C63396 +
             (C63797 + C63796) * C63395 + (C63795 + C63794) * C63394) *
                C153775) *
               C154021 +
           (((C64466 + C64467) * C63394 + (C64468 + C64469) * C63395 +
             (C64470 + C64471) * C63396 +
             (C56432 * C154002 + C56433 * C153648) * C154051) *
                C153775 -
            ((C64471 + C64470) * C154051 + (C64469 + C64468) * C63396 +
             (C64467 + C64466) * C63395 +
             (C437 * C153648 +
              (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                  C154002) *
                 C63394) *
                C154022) *
               C153747) *
              C335 +
          ((((C63802 + C63803) * C63394 + (C63804 + C63805) * C63395 +
             (C63806 + C63807) * C63396 + (C63808 + C63809) * C154051) *
                C153775 -
            (C63812 * C154051 + C63813 * C63396 + (C63803 + C63802) * C63395 +
             (C206 * C153648 + C205 * C154002) * C63394) *
                C154022) *
               C154021 +
           (((C437 * C154002 + C436 * C153648) * C63394 +
             (C64472 + C64473) * C63395 + (C64474 + C64475) * C63396 +
             (C64476 + C64477) * C154051) *
                C154022 -
            (((C134 * C9202 - C135 * C9199 - C134 * C9203 + C153792 * C9208) *
                  C153648 +
              C56433 * C154002) *
                 C154051 +
             (C64477 + C64476) * C63396 + (C64475 + C64474) * C63395 +
             (C64473 + C64472) * C63394) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                    C11433 +
                C205 * C11434 + C206 * C11435 + C207 * C154036) *
                   C154037 +
               (C7817 * C11433 + C666 * C11434 + C665 * C11435 +
                C664 * C154036) *
                   C153897) *
                  C153711 * C153695 * C130 -
              ((C663 * C154036 + C664 * C11435 + C665 * C11434 +
                C666 * C11433) *
                   C153897 +
               (C208 * C154036 + C207 * C11435 + C206 * C11434 +
                C205 * C11433) *
                   C154037) *
                  C153711 * C153695 * C131 +
              ((C206 * C11433 + C207 * C11434 + C208 * C11435 +
                C209 * C154036) *
                   C154037 +
               (C665 * C11433 + C664 * C11434 + C663 * C11435 +
                C943 * C154036) *
                   C153897) *
                  C153711 * C153695 * C132 -
              (((C134 * C933 - C135 * C932 - C134 * C934 + C153792 * C935) *
                    C154036 +
                C943 * C11435 + C663 * C11434 + C664 * C11433) *
                   C153897 +
               (C210 * C154036 + C209 * C11435 + C208 * C11434 +
                C207 * C11433) *
                   C154037) *
                  C153711 * C153695 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                     C11433 +
                 C205 * C11434 + C206 * C11435 + C207 * C154036) *
                    C154037 +
                (C7817 * C11433 + C666 * C11434 + C665 * C11435 +
                 C664 * C154036) *
                    C153897) *
                   C153711 * C332 -
               ((C1156 * C154036 + C1155 * C11435 + C1154 * C11434 +
                 C8612 * C11433) *
                    C153897 +
                (C435 * C154036 + C436 * C11435 + C437 * C11434 +
                 (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                     C11433) *
                    C154037) *
                   C153711 * C333 +
               (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                     C11433 +
                 C438 * C11434 + C439 * C11435 + C440 * C154036) *
                    C154037 +
                (C9966 * C11433 + C7519 * C11434 + C7520 * C11435 +
                 C15452 * C154036) *
                    C153897) *
                   C153711 * C334) *
                  C335 +
              (((C437 * C11433 + C436 * C11434 + C435 * C11435 +
                 C434 * C154036) *
                    C154037 +
                (C1154 * C11433 + C1155 * C11434 + C1156 * C11435 +
                 C1157 * C154036) *
                    C153897) *
                   C153711 * C333 -
               ((C663 * C154036 + C664 * C11435 + C665 * C11434 +
                 C666 * C11433) *
                    C153897 +
                (C208 * C154036 + C207 * C11435 + C206 * C11434 +
                 C205 * C11433) *
                    C154037) *
                   C153711 * C332 -
               (((C134 * C1949 - C135 * C1944 - C134 * C1950 +
                  C153792 * C1959) *
                     C154036 +
                 C15452 * C11435 + C7520 * C11434 + C7519 * C11433) *
                    C153897 +
                (C441 * C154036 + C440 * C11435 + C439 * C11434 +
                 C438 * C11433) *
                    C154037) *
                   C153711 * C334) *
                  C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C11433 +
             C205 * C11434 + C206 * C11435 + C207 * C154036) *
                C154037 +
            (C15647 + C15648 + C15649 + C15650) * C153897) *
               C563 -
           ((C15651 + C15652 + C15653 + C15654) * C153897 +
            (C15650 + C15649 + C15648 + C15647) * C154037) *
               C564 +
           ((C15654 + C15653 + C15652 + C15651) * C154037 +
            (C7821 * C11433 + C7820 * C11434 + C7819 * C11435 +
             C7824 * C154036) *
                C153897) *
               C565) *
              C153695 * C335 +
          (((C15655 + C15656 + C15657 + C15658) * C154037 +
            (C15659 + C15660 + C15661 + C15662) * C153897) *
               C564 -
           ((C15658 + C15657 + C15656 + C15655) * C153897 +
            (C208 * C154036 + C207 * C11435 + C206 * C11434 + C205 * C11433) *
                C154037) *
               C563 -
           (((C134 * C2301 - C135 * C2296 - C134 * C2302 + C153792 * C2311) *
                 C154036 +
             C7824 * C11435 + C7819 * C11434 + C7820 * C11433) *
                C153897 +
            (C15662 + C15661 + C15660 + C15659) * C154037) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154002 +
            (C24291 + C24292 + C24293) * C153648) *
               C154037 +
           ((C31262 + C31263 + C31264) * C154002 +
            (C24904 + C24903 + C24902) * C153648) *
               C153897) *
              C153711 * C153695 * C130 -
          ((C25383 * C153648 + (C24902 + C24903 + C24904) * C154002) * C153897 +
           ((C24296 + C24295 + C24294) * C153648 +
            (C24293 + C24292 + C24291) * C154002) *
               C154037) *
              C153711 * C153695 * C131 +
          ((C24305 * C154002 + (C24299 + C24298 + C24297) * C153648) * C154037 +
           ((C24901 + C24900 + C24899) * C154002 +
            (C25390 + C25391 + C25392) * C153648) *
               C153897) *
              C153711 * C153695 * C132 -
          (((C24216 * C1949 - C24217 * C1944 - C24216 * C1950 +
             C154071 * C1959 + C24214 * C1119 - C24215 * C1109 -
             C24214 * C1120 + C24207 * C1127 + C24212 * C578 - C24213 * C566 -
             C24212 * C579 + C24206 * C602) *
                C153648 +
            (C25392 + C25391 + C25390) * C154002) *
               C153897 +
           ((C24302 + C24301 + C24300) * C153648 + C24306 * C154002) *
               C154037) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154002 +
             (C24291 + C24292 + C24293) * C153648) *
                C154037 +
            ((C31262 + C31263 + C31264) * C154002 +
             (C24904 + C24903 + C24902) * C153648) *
                C153897) *
               C153711 * C332 -
           (((C25721 + C25720 + C25719) * C153648 +
             (C32063 + C32062 + C32061) * C154002) *
                C153897 +
            ((C24600 + C24601 + C24602) * C153648 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C154002) *
                C154037) *
               C153711 * C333 +
           (((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
              C24214 * C1384 - C24215 * C1375 - C24214 * C1385 +
              C24207 * C1390 + C24216 * C3193 - C24217 * C3189 -
              C24216 * C3194 + C154071 * C3201) *
                 C154002 +
             (C24603 + C24604 + C24605) * C153648) *
                C154037 +
            ((C33442 + C33443 + C33444) * C154002 +
             (C39076 + C39077 + C39078) * C153648) *
                C153897) *
               C153711 * C334) *
              C335 +
          ((((C24602 + C24601 + C24600) * C154002 +
             (C24599 + C24598 + C24597) * C153648) *
                C154037 +
            ((C25719 + C25720 + C25721) * C154002 +
             (C25722 + C25723 + C25724) * C153648) *
                C153897) *
               C153711 * C333 -
           ((C25383 * C153648 + (C24902 + C24903 + C24904) * C154002) *
                C153897 +
            ((C24296 + C24295 + C24294) * C153648 +
             (C24293 + C24292 + C24291) * C154002) *
                C154037) *
               C153711 * C332 -
           (((C24216 * C5772 - C24217 * C5769 - C24216 * C5773 +
              C154071 * C5778 + C24214 * C4387 - C24215 * C4381 -
              C24214 * C4388 + C24207 * C4393 + C24212 * C1953 -
              C24213 * C1946 - C24212 * C1954 + C24206 * C1961) *
                 C153648 +
             (C39078 + C39077 + C39076) * C154002) *
                C153897 +
            ((C24608 + C24607 + C24606) * C153648 +
             (C24605 + C24604 + C24603) * C154002) *
                C154037) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154002 +
             (C24291 + C24292 + C24293) * C153648) *
                C154037 +
            ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
                C153897) *
               C563 -
           ((C31248 * C153648 + (C31267 + C31266 + C31265) * C154002) *
                C153897 +
            (C39373 * C153648 + (C31264 + C31263 + C31262) * C154002) *
                C154037) *
               C564 +
           ((C31275 * C154002 + C39374 * C153648) * C154037 +
            ((C31270 + C31269 + C31268) * C154002 +
             (C31271 + C31272 + C31273) * C153648) *
                C153897) *
               C565) *
              C153695 * C335 +
          (((C39372 * C154002 + (C24901 + C24900 + C24899) * C153648) *
                C154037 +
            (C39374 * C154002 + (C24908 + C24909 + C24910) * C153648) *
                C153897) *
               C564 -
           ((C25383 * C153648 + C39373 * C154002) * C153897 +
            ((C24296 + C24295 + C24294) * C153648 +
             (C24293 + C24292 + C24291) * C154002) *
                C154037) *
               C563 -
           (((C24216 * C6369 - C24217 * C6363 - C24216 * C6370 +
              C154071 * C6381 + C24214 * C6371 - C24215 * C6364 -
              C24214 * C6372 + C24207 * C6382 + C24212 * C2305 -
              C24213 * C2298 - C24212 * C2306 + C24206 * C2313) *
                 C153648 +
             (C31273 + C31272 + C31271) * C154002) *
                C153897 +
            ((C24910 + C24909 + C24908) * C153648 + C31248 * C154002) *
                C154037) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C154002 +
            C205 * C153648) *
               C63394 +
           (C7817 * C154002 + C666 * C153648) * C63395 +
           (C7818 * C154002 + C667 * C153648) * C63396 +
           (C7821 * C154002 + C7820 * C153648) * C154051) *
              C153711 * C153695 * C130 -
          ((C7819 * C153648 + C7820 * C154002) * C154051 +
           (C668 * C153648 + C667 * C154002) * C63396 +
           (C665 * C153648 + C666 * C154002) * C63395 +
           (C206 * C153648 + C205 * C154002) * C63394) *
              C153711 * C153695 * C131 +
          ((C206 * C154002 + C207 * C153648) * C63394 +
           (C665 * C154002 + C664 * C153648) * C63395 +
           (C668 * C154002 + C669 * C153648) * C63396 +
           (C7819 * C154002 + C7824 * C153648) * C154051) *
              C153711 * C153695 * C132 -
          (((C134 * C2301 - C135 * C2296 - C134 * C2302 + C153792 * C2311) *
                C153648 +
            C7824 * C154002) *
               C154051 +
           (C670 * C153648 + C669 * C154002) * C63396 +
           (C663 * C153648 + C664 * C154002) * C63395 +
           (C208 * C153648 + C207 * C154002) * C63394) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154002 +
             C205 * C153648) *
                C63394 +
            (C7817 * C154002 + C666 * C153648) * C63395 +
            (C7818 * C154002 + C667 * C153648) * C63396 +
            (C7821 * C154002 + C7820 * C153648) * C154051) *
               C153711 * C332 -
           ((C8614 * C153648 + C9222 * C154002) * C154051 +
            (C7518 * C153648 + C8613 * C154002) * C63396 +
            (C1154 * C153648 + C8612 * C154002) * C63395 +
            (C437 * C153648 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154002) *
                C63394) *
               C153711 * C333 +
           (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C154002 +
             C438 * C153648) *
                C63394 +
            (C9966 * C154002 + C7519 * C153648) * C63395 +
            (C9967 * C154002 + C7521 * C153648) * C63396 +
            (C57194 * C154002 + C63599 * C153648) * C154051) *
               C153711 * C334) *
              C335 +
          (((C437 * C154002 + C436 * C153648) * C63394 +
            (C1154 * C154002 + C1155 * C153648) * C63395 +
            (C7518 * C154002 + C7517 * C153648) * C63396 +
            (C8614 * C154002 + C8615 * C153648) * C154051) *
               C153711 * C333 -
           ((C7819 * C153648 + C7820 * C154002) * C154051 +
            (C668 * C153648 + C667 * C154002) * C63396 +
            (C665 * C153648 + C666 * C154002) * C63395 +
            (C206 * C153648 + C205 * C154002) * C63394) *
               C153711 * C332 -
           (((C134 * C6369 - C135 * C6363 - C134 * C6370 + C153792 * C6381) *
                 C153648 +
             C63599 * C154002) *
                C154051 +
            (C7522 * C153648 + C7521 * C154002) * C63396 +
            (C7520 * C153648 + C7519 * C154002) * C63395 +
            (C439 * C153648 + C438 * C154002) * C63394) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154002 +
             C205 * C153648) *
                C63394 +
            (C63794 + C63795) * C63395 + C63810 * C63396 + C63811 * C154051) *
               C563 -
           ((C63800 + C63801) * C154051 + (C63799 + C63798) * C63396 +
            (C63797 + C63796) * C63395 + (C63795 + C63794) * C63394) *
               C564 +
           (C63810 * C63394 + C63811 * C63395 + (C63801 + C63800) * C63396 +
            (C55996 * C154002 + C55997 * C153648) * C154051) *
               C565) *
              C153695 * C335 +
          (((C63802 + C63803) * C63394 + (C63804 + C63805) * C63395 +
            (C63806 + C63807) * C63396 + (C63808 + C63809) * C154051) *
               C564 -
           (C63812 * C154051 + C63813 * C63396 + (C63803 + C63802) * C63395 +
            (C206 * C153648 + C205 * C154002) * C63394) *
               C563 -
           (((C134 * C10554 - C135 * C10551 - C134 * C10555 +
              C153792 * C10560) *
                 C153648 +
             C55997 * C154002) *
                C154051 +
            (C63809 + C63808) * C63396 + C63812 * C63395 + C63813 * C63394) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154002 +
             (C24291 + C24292 + C24293) * C153648) *
                C154037 +
            ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
                C153897) *
               C154022 -
           ((C31248 * C153648 + (C31267 + C31266 + C31265) * C154002) *
                C153897 +
            (C39373 * C153648 + (C31264 + C31263 + C31262) * C154002) *
                C154037) *
               C153775) *
              C153695 * C154090 +
          (((C39372 * C154002 + C39956 * C153648) * C154037 +
            (C39374 * C154002 + (C24908 + C24909 + C24910) * C153648) *
                C153897) *
               C153775 -
           ((C25383 * C153648 + C39373 * C154002) * C153897 +
            ((C24296 + C24295 + C24294) * C153648 +
             (C24293 + C24292 + C24291) * C154002) *
                C154037) *
               C154022) *
              C153695 * C154091 +
          (((C24305 * C154002 + (C24299 + C24298 + C24297) * C153648) *
                C154037 +
            (C39956 * C154002 + (C25390 + C25391 + C25392) * C153648) *
                C153897) *
               C154022 -
           (((C24216 * C3517 - C24217 * C3510 - C24216 * C3518 +
              C154071 * C3522 + C24214 * C1520 - C24215 * C1514 -
              C24214 * C1521 + C24207 * C1529 + C24212 * C594 - C24213 * C574 -
              C24212 * C595 + C24206 * C610) *
                 C153648 +
             (C24910 + C24909 + C24908) * C154002) *
                C153897 +
            ((C25392 + C25391 + C25390) * C153648 + C25383 * C154002) *
                C154037) *
               C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C11433 +
             C205 * C11434 + C206 * C11435 + C207 * C154036) *
                C154037 +
            (C15647 + C15648 + C15649 + C15650) * C153897) *
               C154022 -
           ((C15651 + C15652 + C15653 + C15654) * C153897 +
            (C15650 + C15649 + C15648 + C15647) * C154037) *
               C153775) *
              C153695 * C154090 +
          (((C15655 + C15656 + C15657 + C15658) * C154037 +
            (C15659 + C15660 + C15661 + C15662) * C153897) *
               C153775 -
           ((C15658 + C15657 + C15656 + C15655) * C153897 +
            (C208 * C154036 + C207 * C11435 + C206 * C11434 + C205 * C11433) *
                C154037) *
               C154022) *
              C153695 * C154091 +
          (((C206 * C11433 + C207 * C11434 + C208 * C11435 + C209 * C154036) *
                C154037 +
            (C16051 + C16052 + C16053 + C16054) * C153897) *
               C154022 -
           (((C134 * C600 - C135 * C577 - C134 * C601 + C153792 * C613) *
                 C154036 +
             C670 * C11435 + C669 * C11434 + C668 * C11433) *
                C153897 +
            (C16054 + C16053 + C16052 + C16051) * C154037) *
               C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154002 +
             C205 * C153648) *
                C63394 +
            (C63794 + C63795) * C63395 + C63810 * C63396 + C63811 * C154051) *
               C154022 -
           ((C63800 + C63801) * C154051 + (C63799 + C63798) * C63396 +
            (C63797 + C63796) * C63395 + (C63795 + C63794) * C63394) *
               C153775) *
              C153695 * C154090 +
          (((C63802 + C63803) * C63394 + (C63804 + C63805) * C63395 +
            (C63806 + C63807) * C63396 + (C63808 + C63809) * C154051) *
               C153775 -
           (C63812 * C154051 + C63813 * C63396 + (C63803 + C63802) * C63395 +
            (C206 * C153648 + C205 * C154002) * C63394) *
               C154022) *
              C153695 * C154091 +
          (((C206 * C154002 + C207 * C153648) * C63394 +
            (C64202 + C64203) * C63395 + (C64204 + C64205) * C63396 +
            (C64206 + C64207) * C154051) *
               C154022 -
           (((C134 * C7750 - C135 * C7743 - C134 * C7751 + C153792 * C7755) *
                 C153648 +
             C7823 * C154002) *
                C154051 +
            (C64207 + C64206) * C63396 + (C64205 + C64204) * C63395 +
            (C64203 + C64202) * C63394) *
               C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C11433 +
             C205 * C11434 + C206 * C11435 + C207 * C154036) *
                C154037 +
            (C7817 * C11433 + C666 * C11434 + C665 * C11435 + C664 * C154036) *
                C153897) *
               C153711 * C332 -
           ((C1156 * C154036 + C1155 * C11435 + C1154 * C11434 +
             C8612 * C11433) *
                C153897 +
            (C435 * C154036 + C436 * C11435 + C437 * C11434 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C11433) *
                C154037) *
               C153711 * C333 +
           (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C11433 +
             C438 * C11434 + C439 * C11435 + C440 * C154036) *
                C154037 +
            (C9966 * C11433 + C7519 * C11434 + C7520 * C11435 +
             C15452 * C154036) *
                C153897) *
               C153711 * C334) *
              C335 +
          (((C437 * C11433 + C436 * C11434 + C435 * C11435 + C434 * C154036) *
                C154037 +
            (C1154 * C11433 + C1155 * C11434 + C1156 * C11435 +
             C1157 * C154036) *
                C153897) *
               C153711 * C333 -
           ((C663 * C154036 + C664 * C11435 + C665 * C11434 + C666 * C11433) *
                C153897 +
            (C208 * C154036 + C207 * C11435 + C206 * C11434 + C205 * C11433) *
                C154037) *
               C153711 * C332 -
           (((C134 * C1949 - C135 * C1944 - C134 * C1950 + C153792 * C1959) *
                 C154036 +
             C15452 * C11435 + C7520 * C11434 + C7519 * C11433) *
                C153897 +
            (C441 * C154036 + C440 * C11435 + C439 * C11434 + C438 * C11433) *
                C154037) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C11433 +
            C205 * C11434 + C206 * C11435 + C207 * C154036) *
               C154037 +
           (C7817 * C11433 + C666 * C11434 + C665 * C11435 + C664 * C154036) *
               C153897) *
              C153711 * C153695 * C130 -
          ((C663 * C154036 + C664 * C11435 + C665 * C11434 + C666 * C11433) *
               C153897 +
           (C208 * C154036 + C207 * C11435 + C206 * C11434 + C205 * C11433) *
               C154037) *
              C153711 * C153695 * C131 +
          ((C206 * C11433 + C207 * C11434 + C208 * C11435 + C209 * C154036) *
               C154037 +
           (C665 * C11433 + C664 * C11434 + C663 * C11435 + C943 * C154036) *
               C153897) *
              C153711 * C153695 * C132 -
          (((C134 * C933 - C135 * C932 - C134 * C934 + C153792 * C935) *
                C154036 +
            C943 * C11435 + C663 * C11434 + C664 * C11433) *
               C153897 +
           (C210 * C154036 + C209 * C11435 + C208 * C11434 + C207 * C11433) *
               C154037) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154002 +
            (C24291 + C24292 + C24293) * C153648) *
               C154037 +
           ((C31262 + C31263 + C31264) * C154002 +
            (C24904 + C24903 + C24902) * C153648) *
               C153897) *
              C153711 * C153695 * C130 -
          ((C25383 * C153648 + (C24902 + C24903 + C24904) * C154002) * C153897 +
           ((C24296 + C24295 + C24294) * C153648 +
            (C24293 + C24292 + C24291) * C154002) *
               C154037) *
              C153711 * C153695 * C131 +
          ((C24305 * C154002 + (C24299 + C24298 + C24297) * C153648) * C154037 +
           ((C24901 + C24900 + C24899) * C154002 +
            (C25390 + C25391 + C25392) * C153648) *
               C153897) *
              C153711 * C153695 * C132 -
          (((C24216 * C1949 - C24217 * C1944 - C24216 * C1950 +
             C154071 * C1959 + C24214 * C1119 - C24215 * C1109 -
             C24214 * C1120 + C24207 * C1127 + C24212 * C578 - C24213 * C566 -
             C24212 * C579 + C24206 * C602) *
                C153648 +
            (C25392 + C25391 + C25390) * C154002) *
               C153897 +
           ((C24302 + C24301 + C24300) * C153648 + C24306 * C154002) *
               C154037) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154002 +
             (C24291 + C24292 + C24293) * C153648) *
                C154037 +
            ((C31262 + C31263 + C31264) * C154002 +
             (C24904 + C24903 + C24902) * C153648) *
                C153897) *
               C153711 * C332 -
           (((C25721 + C25720 + C25719) * C153648 +
             (C32063 + C32062 + C32061) * C154002) *
                C153897 +
            ((C24600 + C24601 + C24602) * C153648 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C154002) *
                C154037) *
               C153711 * C333 +
           (((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
              C24214 * C1384 - C24215 * C1375 - C24214 * C1385 +
              C24207 * C1390 + C24216 * C3193 - C24217 * C3189 -
              C24216 * C3194 + C154071 * C3201) *
                 C154002 +
             (C24603 + C24604 + C24605) * C153648) *
                C154037 +
            ((C33442 + C33443 + C33444) * C154002 +
             (C39076 + C39077 + C39078) * C153648) *
                C153897) *
               C153711 * C334) *
              C335 +
          ((((C24602 + C24601 + C24600) * C154002 +
             (C24599 + C24598 + C24597) * C153648) *
                C154037 +
            ((C25719 + C25720 + C25721) * C154002 +
             (C25722 + C25723 + C25724) * C153648) *
                C153897) *
               C153711 * C333 -
           ((C25383 * C153648 + (C24902 + C24903 + C24904) * C154002) *
                C153897 +
            ((C24296 + C24295 + C24294) * C153648 +
             (C24293 + C24292 + C24291) * C154002) *
                C154037) *
               C153711 * C332 -
           (((C24216 * C5772 - C24217 * C5769 - C24216 * C5773 +
              C154071 * C5778 + C24214 * C4387 - C24215 * C4381 -
              C24214 * C4388 + C24207 * C4393 + C24212 * C1953 -
              C24213 * C1946 - C24212 * C1954 + C24206 * C1961) *
                 C153648 +
             (C39078 + C39077 + C39076) * C154002) *
                C153897 +
            ((C24608 + C24607 + C24606) * C153648 +
             (C24605 + C24604 + C24603) * C154002) *
                C154037) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C154002 +
            C205 * C153648) *
               C63394 +
           (C7817 * C154002 + C666 * C153648) * C63395 +
           (C7818 * C154002 + C667 * C153648) * C63396 +
           (C7821 * C154002 + C7820 * C153648) * C154051) *
              C153711 * C153695 * C130 -
          ((C7819 * C153648 + C7820 * C154002) * C154051 +
           (C668 * C153648 + C667 * C154002) * C63396 +
           (C665 * C153648 + C666 * C154002) * C63395 +
           (C206 * C153648 + C205 * C154002) * C63394) *
              C153711 * C153695 * C131 +
          ((C206 * C154002 + C207 * C153648) * C63394 +
           (C665 * C154002 + C664 * C153648) * C63395 +
           (C668 * C154002 + C669 * C153648) * C63396 +
           (C7819 * C154002 + C7824 * C153648) * C154051) *
              C153711 * C153695 * C132 -
          (((C134 * C2301 - C135 * C2296 - C134 * C2302 + C153792 * C2311) *
                C153648 +
            C7824 * C154002) *
               C154051 +
           (C670 * C153648 + C669 * C154002) * C63396 +
           (C663 * C153648 + C664 * C154002) * C63395 +
           (C208 * C153648 + C207 * C154002) * C63394) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154002 +
             C205 * C153648) *
                C63394 +
            (C7817 * C154002 + C666 * C153648) * C63395 +
            (C7818 * C154002 + C667 * C153648) * C63396 +
            (C7821 * C154002 + C7820 * C153648) * C154051) *
               C153711 * C332 -
           ((C8614 * C153648 + C9222 * C154002) * C154051 +
            (C7518 * C153648 + C8613 * C154002) * C63396 +
            (C1154 * C153648 + C8612 * C154002) * C63395 +
            (C437 * C153648 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154002) *
                C63394) *
               C153711 * C333 +
           (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C154002 +
             C438 * C153648) *
                C63394 +
            (C9966 * C154002 + C7519 * C153648) * C63395 +
            (C9967 * C154002 + C7521 * C153648) * C63396 +
            (C57194 * C154002 + C63599 * C153648) * C154051) *
               C153711 * C334) *
              C335 +
          (((C437 * C154002 + C436 * C153648) * C63394 +
            (C1154 * C154002 + C1155 * C153648) * C63395 +
            (C7518 * C154002 + C7517 * C153648) * C63396 +
            (C8614 * C154002 + C8615 * C153648) * C154051) *
               C153711 * C333 -
           ((C7819 * C153648 + C7820 * C154002) * C154051 +
            (C668 * C153648 + C667 * C154002) * C63396 +
            (C665 * C153648 + C666 * C154002) * C63395 +
            (C206 * C153648 + C205 * C154002) * C63394) *
               C153711 * C332 -
           (((C134 * C6369 - C135 * C6363 - C134 * C6370 + C153792 * C6381) *
                 C153648 +
             C63599 * C154002) *
                C154051 +
            (C7522 * C153648 + C7521 * C154002) * C63396 +
            (C7520 * C153648 + C7519 * C154002) * C63395 +
            (C439 * C153648 + C438 * C154002) * C63394) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154002 +
             (C24291 + C24292 + C24293) * C153648) *
                C154037 +
            ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
                C153897) *
               C153711 * C154092 -
           ((C40346 * C153648 + (C32063 + C32062 + C32061) * C154002) *
                C153897 +
            ((C24600 + C24601 + C24602) * C153648 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C154002) *
                C154037) *
               C153711 * C154093 +
           (((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
              C24214 * C1384 - C24215 * C1375 - C24214 * C1385 +
              C24207 * C1390 + C24216 * C3193 - C24217 * C3189 -
              C24216 * C3194 + C154071 * C3201) *
                 C154002 +
             (C24603 + C24604 + C24605) * C153648) *
                C154037 +
            ((C33442 + C33443 + C33444) * C154002 +
             (C39076 + C39077 + C39078) * C153648) *
                C153897) *
               C153711 * C1657) *
              C154013 +
          ((((C24602 + C24601 + C24600) * C154002 +
             (C24599 + C24598 + C24597) * C153648) *
                C154037 +
            (C40345 * C154002 + (C25722 + C25723 + C25724) * C153648) *
                C153897) *
               C153711 * C154093 -
           ((C25383 * C153648 + C39373 * C154002) * C153897 +
            ((C24296 + C24295 + C24294) * C153648 +
             (C24293 + C24292 + C24291) * C154002) *
                C154037) *
               C153711 * C154092 -
           (((C24216 * C5772 - C24217 * C5769 - C24216 * C5773 +
              C154071 * C5778 + C24214 * C4387 - C24215 * C4381 -
              C24214 * C4388 + C24207 * C4393 + C24212 * C1953 -
              C24213 * C1946 - C24212 * C1954 + C24206 * C1961) *
                 C153648 +
             (C39078 + C39077 + C39076) * C154002) *
                C153897 +
            ((C24608 + C24607 + C24606) * C153648 +
             (C24605 + C24604 + C24603) * C154002) *
                C154037) *
               C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C11433 +
             C205 * C11434 + C206 * C11435 + C207 * C154036) *
                C154037 +
            (C15647 + C15648 + C15649 + C15650) * C153897) *
               C153711 * C154092 -
           ((C16316 + C16315 + C16314 + C16313) * C153897 +
            (C435 * C154036 + C436 * C11435 + C437 * C11434 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C11433) *
                C154037) *
               C153711 * C154093 +
           (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C11433 +
             C438 * C11434 + C439 * C11435 + C440 * C154036) *
                C154037 +
            (C9966 * C11433 + C7519 * C11434 + C7520 * C11435 +
             C15452 * C154036) *
                C153897) *
               C153711 * C1657) *
              C154013 +
          (((C437 * C11433 + C436 * C11434 + C435 * C11435 + C434 * C154036) *
                C154037 +
            (C16317 + C16318 + C16319 + C16320) * C153897) *
               C153711 * C154093 -
           ((C15658 + C15657 + C15656 + C15655) * C153897 +
            (C208 * C154036 + C207 * C11435 + C206 * C11434 + C205 * C11433) *
                C154037) *
               C153711 * C154092 -
           (((C134 * C1949 - C135 * C1944 - C134 * C1950 + C153792 * C1959) *
                 C154036 +
             C15452 * C11435 + C7520 * C11434 + C7519 * C11433) *
                C153897 +
            (C441 * C154036 + C440 * C11435 + C439 * C11434 + C438 * C11433) *
                C154037) *
               C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154002 +
             C205 * C153648) *
                C63394 +
            (C63794 + C63795) * C63395 + C63810 * C63396 + C63811 * C154051) *
               C153711 * C154092 -
           (C64998 * C154051 + C64999 * C63396 + (C64467 + C64466) * C63395 +
            (C437 * C153648 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154002) *
                C63394) *
               C153711 * C154093 +
           (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C154002 +
             C438 * C153648) *
                C63394 +
            (C9966 * C154002 + C7519 * C153648) * C63395 +
            (C9967 * C154002 + C7521 * C153648) * C63396 +
            (C57194 * C154002 + C63599 * C153648) * C154051) *
               C153711 * C1657) *
              C154013 +
          (((C437 * C154002 + C436 * C153648) * C63394 +
            (C64472 + C64473) * C63395 + (C64474 + C64475) * C63396 +
            (C64476 + C64477) * C154051) *
               C153711 * C154093 -
           (C63812 * C154051 + C63813 * C63396 + (C63803 + C63802) * C63395 +
            (C206 * C153648 + C205 * C154002) * C63394) *
               C153711 * C154092 -
           (((C134 * C6369 - C135 * C6363 - C134 * C6370 + C153792 * C6381) *
                 C153648 +
             C63599 * C154002) *
                C154051 +
            (C7522 * C153648 + C7521 * C154002) * C63396 +
            (C7520 * C153648 + C7519 * C154002) * C63395 +
            (C439 * C153648 + C438 * C154002) * C63394) *
               C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154002 +
             (C24291 + C24292 + C24293) * C153648) *
                C154037 +
            ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
                C153897) *
               C154022 -
           ((C31248 * C153648 + (C31267 + C31266 + C31265) * C154002) *
                C153897 +
            (C39373 * C153648 + (C31264 + C31263 + C31262) * C154002) *
                C154037) *
               C153775) *
              C154092 +
          ((((C32061 + C32062 + C32063) * C154002 + C40345 * C153648) *
                C154037 +
            ((C32064 + C32065 + C32066) * C154002 +
             (C32067 + C32068 + C32069) * C153648) *
                C153897) *
               C153775 -
           ((C40346 * C153648 + (C32063 + C32062 + C32061) * C154002) *
                C153897 +
            ((C24600 + C24601 + C24602) * C153648 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C154002) *
                C154037) *
               C154022) *
              C154093 +
          ((((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
              C24214 * C1384 - C24215 * C1375 - C24214 * C1385 +
              C24207 * C1390 + C24216 * C3193 - C24217 * C3189 -
              C24216 * C3194 + C154071 * C3201) *
                 C154002 +
             (C24603 + C24604 + C24605) * C153648) *
                C154037 +
            ((C33442 + C33443 + C33444) * C154002 +
             (C39076 + C39077 + C39078) * C153648) *
                C153897) *
               C154022 -
           (((C24216 * C28694 - C24217 * C28691 - C24216 * C28695 +
              C154071 * C28697 + C24214 * C5036 - C24215 * C5032 -
              C24214 * C5037 + C24207 * C5041 + C24212 * C3513 -
              C24213 * C3508 - C24212 * C3514 + C24206 * C3520) *
                 C153648 +
             (C33447 + C33446 + C33445) * C154002) *
                C153897 +
            ((C39078 + C39077 + C39076) * C153648 +
             (C33444 + C33443 + C33442) * C154002) *
                C154037) *
               C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C11433 +
             C205 * C11434 + C206 * C11435 + C207 * C154036) *
                C154037 +
            (C15647 + C15648 + C15649 + C15650) * C153897) *
               C154022 -
           ((C15651 + C15652 + C15653 + C15654) * C153897 +
            (C15650 + C15649 + C15648 + C15647) * C154037) *
               C153775) *
              C154092 +
          (((C16313 + C16314 + C16315 + C16316) * C154037 +
            (C16839 + C16840 + C16841 + C16842) * C153897) *
               C153775 -
           ((C16316 + C16315 + C16314 + C16313) * C153897 +
            (C435 * C154036 + C436 * C11435 + C437 * C11434 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C11433) *
                C154037) *
               C154022) *
              C154093 +
          ((((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C11433 +
             C438 * C11434 + C439 * C11435 + C440 * C154036) *
                C154037 +
            (C17489 + C17490 + C17491 + C17492) * C153897) *
               C154022 -
           (((C134 * C3517 - C135 * C3510 - C134 * C3518 + C153792 * C3522) *
                 C154036 +
             C7522 * C11435 + C7521 * C11434 + C9967 * C11433) *
                C153897 +
            (C17492 + C17491 + C17490 + C17489) * C154037) *
               C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154002 +
             C205 * C153648) *
                C63394 +
            (C63794 + C63795) * C63395 + C63810 * C63396 + C63811 * C154051) *
               C154022 -
           ((C63800 + C63801) * C154051 + (C63799 + C63798) * C63396 +
            (C63797 + C63796) * C63395 + (C63795 + C63794) * C63394) *
               C153775) *
              C154092 +
          (((C64466 + C64467) * C63394 + (C64468 + C64469) * C63395 +
            (C64470 + C64471) * C63396 + (C64996 + C64997) * C154051) *
               C153775 -
           (C64998 * C154051 + C64999 * C63396 + (C64467 + C64466) * C63395 +
            (C437 * C153648 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154002) *
                C63394) *
               C154022) *
              C154093 +
          ((((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C154002 +
             C438 * C153648) *
                C63394 +
            (C65646 + C65647) * C63395 + (C65648 + C65649) * C63396 +
            (C65650 + C65651) * C154051) *
               C154022 -
           (((C134 * C31182 - C135 * C31179 - C134 * C31183 +
              C153792 * C31185) *
                 C153648 +
             C57195 * C154002) *
                C154051 +
            (C65651 + C65650) * C63396 + (C65649 + C65648) * C63395 +
            (C65647 + C65646) * C63394) *
               C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                     C11433 +
                 C205 * C11434 + C206 * C11435 + C207 * C154036) *
                    C154037 +
                (C15647 + C15648 + C15649 + C15650) * C153897) *
                   C153711 * C1279 -
               ((C16316 + C16315 + C16314 + C16313) * C153897 +
                (C435 * C154036 + C436 * C11435 + C437 * C11434 +
                 (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                     C11433) *
                    C154037) *
                   C153711 * C153747) *
                  C1281 +
              (((C437 * C11433 + C436 * C11434 + C435 * C11435 +
                 C434 * C154036) *
                    C154037 +
                (C16317 + C16318 + C16319 + C16320) * C153897) *
                   C153711 * C153747 -
               ((C15658 + C15657 + C15656 + C15655) * C153897 +
                (C208 * C154036 + C207 * C11435 + C206 * C11434 +
                 C205 * C11433) *
                    C154037) *
                   C153711 * C1279) *
                  C1282 +
              (((C206 * C11433 + C207 * C11434 + C208 * C11435 +
                 C209 * C154036) *
                    C154037 +
                (C16051 + C16052 + C16053 + C16054) * C153897) *
                   C153711 * C1279 -
               (((C134 * C1121 - C135 * C1110 - C134 * C1122 +
                  C153792 * C1128) *
                     C154036 +
                 C1157 * C11435 + C1156 * C11434 + C1155 * C11433) *
                    C153897 +
                (C808 * C154036 + C434 * C11435 + C435 * C11434 +
                 C436 * C11433) *
                    C154037) *
                   C153711 * C153747) *
                  C1283) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                    C11433 +
                C205 * C11434 + C206 * C11435 + C207 * C154036) *
                   C154037 +
               (C15647 + C15648 + C15649 + C15650) * C153897) *
                  C153711 * C1366 -
              ((C16316 + C16315 + C16314 + C16313) * C153897 +
               (C435 * C154036 + C436 * C11435 + C437 * C11434 +
                (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                    C11433) *
                   C154037) *
                  C153711 * C1367 +
              (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                    C11433 +
                C438 * C11434 + C439 * C11435 + C440 * C154036) *
                   C154037 +
               (C9966 * C11433 + C7519 * C11434 + C7520 * C11435 +
                C15452 * C154036) *
                   C153897) *
                  C153711 * C1368 -
              (((C134 * C4389 - C135 * C4382 - C134 * C4390 + C153792 * C4394) *
                    C154036 +
                (C134 * C4387 - C135 * C4381 - C134 * C4388 + C153792 * C4393) *
                    C11435 +
                (C134 * C4385 - C135 * C4380 - C134 * C4386 + C153792 * C4392) *
                    C11434 +
                (C134 * C4383 - C135 * C4379 - C134 * C4384 + C153792 * C4391) *
                    C11433) *
                   C153897 +
               ((C134 * C1378 - C135 * C1372 - C134 * C1379 + C153792 * C1387) *
                    C154036 +
                (C134 * C1380 - C135 * C1373 - C134 * C1381 + C153792 * C1388) *
                    C11435 +
                (C134 * C1382 - C135 * C1374 - C134 * C1383 + C153792 * C1389) *
                    C11434 +
                (C134 * C1384 - C135 * C1375 - C134 * C1385 + C153792 * C1390) *
                    C11433) *
                   C154037) *
                  C153711 * C1369) *
             C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C11433 +
             C205 * C11434 + C206 * C11435 + C207 * C154036) *
                C154037 +
            (C15647 + C15648 + C15649 + C15650) * C153897) *
               C563 -
           ((C15651 + C15652 + C15653 + C15654) * C153897 +
            (C15650 + C15649 + C15648 + C15647) * C154037) *
               C564 +
           ((C15654 + C15653 + C15652 + C15651) * C154037 +
            (C7821 * C11433 + C7820 * C11434 + C7819 * C11435 +
             C7824 * C154036) *
                C153897) *
               C565) *
              C1279 +
          (((C16313 + C16314 + C16315 + C16316) * C154037 +
            (C16839 + C16840 + C16841 + C16842) * C153897) *
               C564 -
           ((C16316 + C16315 + C16314 + C16313) * C153897 +
            (C435 * C154036 + C436 * C11435 + C437 * C11434 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C11433) *
                C154037) *
               C563 -
           (((C134 * C8574 - C135 * C8573 - C134 * C8575 + C153792 * C8576) *
                 C154036 +
             C8615 * C11435 + C8614 * C11434 + C9222 * C11433) *
                C153897 +
            (C16842 + C16841 + C16840 + C16839) * C154037) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154002 +
             (C24291 + C24292 + C24293) * C153648) *
                C154037 +
            ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
                C153897) *
               C153711 * C1279 -
           ((C40346 * C153648 + (C32063 + C32062 + C32061) * C154002) *
                C153897 +
            ((C24600 + C24601 + C24602) * C153648 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C154002) *
                C154037) *
               C153711 * C153747) *
              C1281 +
          ((((C24602 + C24601 + C24600) * C154002 +
             (C24599 + C24598 + C24597) * C153648) *
                C154037 +
            (C40345 * C154002 + (C25722 + C25723 + C25724) * C153648) *
                C153897) *
               C153711 * C153747 -
           ((C25383 * C153648 + C39373 * C154002) * C153897 +
            ((C24296 + C24295 + C24294) * C153648 +
             (C24293 + C24292 + C24291) * C154002) *
                C154037) *
               C153711 * C1279) *
              C1282 +
          (((C24305 * C154002 + (C24299 + C24298 + C24297) * C153648) *
                C154037 +
            (C39956 * C154002 + (C25390 + C25391 + C25392) * C153648) *
                C153897) *
               C153711 * C1279 -
           (((C24216 * C4389 - C24217 * C4382 - C24216 * C4390 +
              C154071 * C4394 + C24214 * C1951 - C24215 * C1945 -
              C24214 * C1952 + C24207 * C1960 + C24212 * C1117 -
              C24213 * C1108 - C24212 * C1118 + C24206 * C1126) *
                 C153648 +
             (C25724 + C25723 + C25722) * C154002) *
                C153897 +
            ((C25151 + C25150 + C25149) * C153648 + C25142 * C154002) *
                C154037) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154002 +
            (C24291 + C24292 + C24293) * C153648) *
               C154037 +
           ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
               C153897) *
              C153711 * C1366 -
          ((C40346 * C153648 + (C32063 + C32062 + C32061) * C154002) * C153897 +
           ((C24600 + C24601 + C24602) * C153648 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154002) *
               C154037) *
              C153711 * C1367 +
          (((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C154002 +
            (C24603 + C24604 + C24605) * C153648) *
               C154037 +
           ((C33442 + C33443 + C33444) * C154002 +
            (C39076 + C39077 + C39078) * C153648) *
               C153897) *
              C153711 * C1368 -
          (((C24216 * C29108 - C24217 * C29105 - C24216 * C29109 +
             C154071 * C29111 + C24214 * C5774 - C24215 * C5770 -
             C24214 * C5775 + C24207 * C5779 + C24212 * C4385 - C24213 * C4380 -
             C24212 * C4386 + C24206 * C4392) *
                C153648 +
            (C24216 * C29106 - C24217 * C29104 - C24216 * C29107 +
             C154071 * C29110 + C24214 * C5776 - C24215 * C5771 -
             C24214 * C5777 + C24207 * C5780 + C24212 * C4383 - C24213 * C4379 -
             C24212 * C4384 + C24206 * C4391) *
                C154002) *
               C153897 +
           ((C24216 * C4806 - C24217 * C4802 - C24216 * C4807 +
             C154071 * C4811 + C24214 * C3195 - C24215 * C3190 -
             C24214 * C3196 + C24207 * C3202 + C24212 * C1382 - C24213 * C1374 -
             C24212 * C1383 + C24206 * C1389) *
                C153648 +
            (C24216 * C4808 - C24217 * C4803 - C24216 * C4809 +
             C154071 * C4812 + C24214 * C3193 - C24215 * C3189 -
             C24214 * C3194 + C24207 * C3201 + C24212 * C1384 - C24213 * C1375 -
             C24212 * C1385 + C24206 * C1390) *
                C154002) *
               C154037) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154002 +
             (C24291 + C24292 + C24293) * C153648) *
                C154037 +
            ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
                C153897) *
               C563 -
           ((C31248 * C153648 + (C31267 + C31266 + C31265) * C154002) *
                C153897 +
            (C39373 * C153648 + (C31264 + C31263 + C31262) * C154002) *
                C154037) *
               C564 +
           ((C31275 * C154002 + C39374 * C153648) * C154037 +
            ((C31270 + C31269 + C31268) * C154002 +
             (C31271 + C31272 + C31273) * C153648) *
                C153897) *
               C565) *
              C1279 +
          ((((C32061 + C32062 + C32063) * C154002 + C40345 * C153648) *
                C154037 +
            ((C32064 + C32065 + C32066) * C154002 +
             (C32067 + C32068 + C32069) * C153648) *
                C153897) *
               C564 -
           ((C40346 * C153648 + (C32063 + C32062 + C32061) * C154002) *
                C153897 +
            ((C24600 + C24601 + C24602) * C153648 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C154002) *
                C154037) *
               C563 -
           (((C24216 * C32003 - C24217 * C32002 - C24216 * C32004 +
              C154071 * C32005 + C24214 * C6373 - C24215 * C6365 -
              C24214 * C6374 + C24207 * C6383 + C24212 * C6375 -
              C24213 * C6366 - C24212 * C6376 + C24206 * C6384) *
                 C153648 +
             (C32679 + C32678 + C32677) * C154002) *
                C153897 +
            ((C32069 + C32068 + C32067) * C153648 + C32672 * C154002) *
                C154037) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154002 +
             C205 * C153648) *
                C63394 +
            (C63794 + C63795) * C63395 + C63810 * C63396 + C63811 * C154051) *
               C153711 * C1279 -
           ((C64471 + C64470) * C154051 + (C64469 + C64468) * C63396 +
            (C64467 + C64466) * C63395 +
            (C437 * C153648 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154002) *
                C63394) *
               C153711 * C153747) *
              C1281 +
          (((C437 * C154002 + C436 * C153648) * C63394 +
            (C64472 + C64473) * C63395 + (C64474 + C64475) * C63396 +
            (C64476 + C64477) * C154051) *
               C153711 * C153747 -
           (C63812 * C154051 + C63813 * C63396 + (C63803 + C63802) * C63395 +
            (C206 * C153648 + C205 * C154002) * C63394) *
               C153711 * C1279) *
              C1282 +
          (((C206 * C154002 + C207 * C153648) * C63394 +
            (C64202 + C64203) * C63395 + (C64204 + C64205) * C63396 +
            (C64206 + C64207) * C154051) *
               C153711 * C1279 -
           (((C134 * C8574 - C135 * C8573 - C134 * C8575 + C153792 * C8576) *
                 C153648 +
             C8615 * C154002) *
                C154051 +
            (C8059 * C153648 + C7517 * C154002) * C63396 +
            (C1156 * C153648 + C1155 * C154002) * C63395 +
            (C435 * C153648 + C436 * C154002) * C63394) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C154002 +
            C205 * C153648) *
               C63394 +
           (C63794 + C63795) * C63395 + C63810 * C63396 + C63811 * C154051) *
              C153711 * C1366 -
          ((C64471 + C64470) * C154051 + (C64469 + C64468) * C63396 +
           (C64467 + C64466) * C63395 +
           (C437 * C153648 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                C154002) *
               C63394) *
              C153711 * C1367 +
          (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                C154002 +
            C438 * C153648) *
               C63394 +
           (C9966 * C154002 + C7519 * C153648) * C63395 +
           (C9967 * C154002 + C7521 * C153648) * C63396 +
           (C57194 * C154002 + C63599 * C153648) * C154051) *
              C153711 * C1368 -
          (((C134 * C32003 - C135 * C32002 - C134 * C32004 + C153792 * C32005) *
                C153648 +
            (C134 * C30186 - C135 * C30183 - C134 * C30187 + C153792 * C30189) *
                C154002) *
               C154051 +
           ((C134 * C5036 - C135 * C5032 - C134 * C5037 + C153792 * C5041) *
                C153648 +
            (C134 * C5038 - C135 * C5033 - C134 * C5039 + C153792 * C5042) *
                C154002) *
               C63396 +
           ((C134 * C4385 - C135 * C4380 - C134 * C4386 + C153792 * C4392) *
                C153648 +
            (C134 * C4383 - C135 * C4379 - C134 * C4384 + C153792 * C4391) *
                C154002) *
               C63395 +
           ((C134 * C1382 - C135 * C1374 - C134 * C1383 + C153792 * C1389) *
                C153648 +
            (C134 * C1384 - C135 * C1375 - C134 * C1385 + C153792 * C1390) *
                C154002) *
               C63394) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154002 +
             C205 * C153648) *
                C63394 +
            (C63794 + C63795) * C63395 + C63810 * C63396 + C63811 * C154051) *
               C563 -
           ((C63800 + C63801) * C154051 + (C63799 + C63798) * C63396 +
            (C63797 + C63796) * C63395 + (C63795 + C63794) * C63394) *
               C564 +
           (C63810 * C63394 + C63811 * C63395 + (C63801 + C63800) * C63396 +
            (C55996 * C154002 + C55997 * C153648) * C154051) *
               C565) *
              C1279 +
          (((C64466 + C64467) * C63394 + (C64468 + C64469) * C63395 +
            (C64470 + C64471) * C63396 + (C64996 + C64997) * C154051) *
               C564 -
           (C64998 * C154051 + C64999 * C63396 + (C64467 + C64466) * C63395 +
            (C437 * C153648 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154002) *
                C63394) *
               C563 -
           (((C134 * C56410 - C135 * C56409 - C134 * C56411 +
              C153792 * C56412) *
                 C153648 +
             C56772 * C154002) *
                C154051 +
            (C64997 + C64996) * C63396 + C64998 * C63395 + C64999 * C63394) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
               C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
               C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                  C154002 +
              (C24291 + C24292 + C24293) * C153648) *
                 C154037 +
             ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
                 C153897) *
                C154022 -
            ((C31248 * C153648 + (C31267 + C31266 + C31265) * C154002) *
                 C153897 +
             (C39373 * C153648 + (C31264 + C31263 + C31262) * C154002) *
                 C154037) *
                C153775) *
               C1279 +
           ((((C32061 + C32062 + C32063) * C154002 + C40345 * C153648) *
                 C154037 +
             ((C32064 + C32065 + C32066) * C154002 +
              (C32067 + C32068 + C32069) * C153648) *
                 C153897) *
                C153775 -
            ((C40346 * C153648 + (C32063 + C32062 + C32061) * C154002) *
                 C153897 +
             ((C24600 + C24601 + C24602) * C153648 +
              (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
               C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
               C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
               C24206 * C377) *
                  C154002) *
                 C154037) *
                C154022) *
               C153747) *
              C154013 +
          ((((C39372 * C154002 + C39956 * C153648) * C154037 +
             (C39374 * C154002 + (C24908 + C24909 + C24910) * C153648) *
                 C153897) *
                C153775 -
            ((C25383 * C153648 + C39373 * C154002) * C153897 +
             ((C24296 + C24295 + C24294) * C153648 +
              (C24293 + C24292 + C24291) * C154002) *
                 C154037) *
                C154022) *
               C1279 +
           ((((C24602 + C24601 + C24600) * C154002 +
              (C24599 + C24598 + C24597) * C153648) *
                 C154037 +
             (C40345 * C154002 + (C25722 + C25723 + C25724) * C153648) *
                 C153897) *
                C154022 -
            (((C24216 * C5034 - C24217 * C5031 - C24216 * C5035 +
               C154071 * C5040 + C24214 * C3515 - C24215 * C3509 -
               C24214 * C3516 + C24207 * C3521 + C24212 * C1522 -
               C24213 * C1515 - C24212 * C1523 + C24206 * C1530) *
                  C153648 +
              (C32069 + C32068 + C32067) * C154002) *
                 C153897 +
             ((C25724 + C25723 + C25722) * C153648 + C40346 * C154002) *
                 C154037) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                  C11433 +
              C205 * C11434 + C206 * C11435 + C207 * C154036) *
                 C154037 +
             (C15647 + C15648 + C15649 + C15650) * C153897) *
                C154022 -
            ((C15651 + C15652 + C15653 + C15654) * C153897 +
             (C15650 + C15649 + C15648 + C15647) * C154037) *
                C153775) *
               C1279 +
           (((C16313 + C16314 + C16315 + C16316) * C154037 +
             (C16839 + C16840 + C16841 + C16842) * C153897) *
                C153775 -
            ((C16316 + C16315 + C16314 + C16313) * C153897 +
             (C435 * C154036 + C436 * C11435 + C437 * C11434 +
              (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                  C11433) *
                 C154037) *
                C154022) *
               C153747) *
              C154013 +
          ((((C15655 + C15656 + C15657 + C15658) * C154037 +
             (C15659 + C15660 + C15661 + C15662) * C153897) *
                C153775 -
            ((C15658 + C15657 + C15656 + C15655) * C153897 +
             (C208 * C154036 + C207 * C11435 + C206 * C11434 + C205 * C11433) *
                 C154037) *
                C154022) *
               C1279 +
           (((C437 * C11433 + C436 * C11434 + C435 * C11435 + C434 * C154036) *
                 C154037 +
             (C16317 + C16318 + C16319 + C16320) * C153897) *
                C154022 -
            (((C134 * C1518 - C135 * C1513 - C134 * C1519 + C153792 * C1528) *
                  C154036 +
              C8059 * C11435 + C7517 * C11434 + C7518 * C11433) *
                 C153897 +
             (C16320 + C16319 + C16318 + C16317) * C154037) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                  C154002 +
              C205 * C153648) *
                 C63394 +
             (C63794 + C63795) * C63395 + C63810 * C63396 + C63811 * C154051) *
                C154022 -
            ((C63800 + C63801) * C154051 + (C63799 + C63798) * C63396 +
             (C63797 + C63796) * C63395 + (C63795 + C63794) * C63394) *
                C153775) *
               C1279 +
           (((C64466 + C64467) * C63394 + (C64468 + C64469) * C63395 +
             (C64470 + C64471) * C63396 + (C64996 + C64997) * C154051) *
                C153775 -
            (C64998 * C154051 + C64999 * C63396 + (C64467 + C64466) * C63395 +
             (C437 * C153648 +
              (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                  C154002) *
                 C63394) *
                C154022) *
               C153747) *
              C154013 +
          ((((C63802 + C63803) * C63394 + (C63804 + C63805) * C63395 +
             (C63806 + C63807) * C63396 + (C63808 + C63809) * C154051) *
                C153775 -
            (C63812 * C154051 + C63813 * C63396 + (C63803 + C63802) * C63395 +
             (C206 * C153648 + C205 * C154002) * C63394) *
                C154022) *
               C1279 +
           (((C437 * C154002 + C436 * C153648) * C63394 +
             (C64472 + C64473) * C63395 + (C64474 + C64475) * C63396 +
             (C64476 + C64477) * C154051) *
                C154022 -
            (((C134 * C9202 - C135 * C9199 - C134 * C9203 + C153792 * C9208) *
                  C153648 +
              C56433 * C154002) *
                 C154051 +
             (C64477 + C64476) * C63396 + (C64475 + C64474) * C63395 +
             (C64473 + C64472) * C63394) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C11433 +
            C205 * C11434 + C206 * C11435 + C207 * C154036) *
               C154037 +
           (C15647 + C15648 + C15649 + C15650) * C153897) *
              C153711 * C1366 -
          ((C16316 + C16315 + C16314 + C16313) * C153897 +
           (C435 * C154036 + C436 * C11435 + C437 * C11434 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                C11433) *
               C154037) *
              C153711 * C1367 +
          (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                C11433 +
            C438 * C11434 + C439 * C11435 + C440 * C154036) *
               C154037 +
           (C9966 * C11433 + C7519 * C11434 + C7520 * C11435 +
            C15452 * C154036) *
               C153897) *
              C153711 * C1368 -
          (((C134 * C4389 - C135 * C4382 - C134 * C4390 + C153792 * C4394) *
                C154036 +
            (C134 * C4387 - C135 * C4381 - C134 * C4388 + C153792 * C4393) *
                C11435 +
            (C134 * C4385 - C135 * C4380 - C134 * C4386 + C153792 * C4392) *
                C11434 +
            (C134 * C4383 - C135 * C4379 - C134 * C4384 + C153792 * C4391) *
                C11433) *
               C153897 +
           ((C134 * C1378 - C135 * C1372 - C134 * C1379 + C153792 * C1387) *
                C154036 +
            (C134 * C1380 - C135 * C1373 - C134 * C1381 + C153792 * C1388) *
                C11435 +
            (C134 * C1382 - C135 * C1374 - C134 * C1383 + C153792 * C1389) *
                C11434 +
            (C134 * C1384 - C135 * C1375 - C134 * C1385 + C153792 * C1390) *
                C11433) *
               C154037) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C11433 +
             C205 * C11434 + C206 * C11435 + C207 * C154036) *
                C154037 +
            (C15647 + C15648 + C15649 + C15650) * C153897) *
               C153711 * C1279 -
           ((C16316 + C16315 + C16314 + C16313) * C153897 +
            (C435 * C154036 + C436 * C11435 + C437 * C11434 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C11433) *
                C154037) *
               C153711 * C153747) *
              C1281 +
          (((C437 * C11433 + C436 * C11434 + C435 * C11435 + C434 * C154036) *
                C154037 +
            (C16317 + C16318 + C16319 + C16320) * C153897) *
               C153711 * C153747 -
           ((C15658 + C15657 + C15656 + C15655) * C153897 +
            (C208 * C154036 + C207 * C11435 + C206 * C11434 + C205 * C11433) *
                C154037) *
               C153711 * C1279) *
              C1282 +
          (((C206 * C11433 + C207 * C11434 + C208 * C11435 + C209 * C154036) *
                C154037 +
            (C16051 + C16052 + C16053 + C16054) * C153897) *
               C153711 * C1279 -
           (((C134 * C1121 - C135 * C1110 - C134 * C1122 + C153792 * C1128) *
                 C154036 +
             C1157 * C11435 + C1156 * C11434 + C1155 * C11433) *
                C153897 +
            (C808 * C154036 + C434 * C11435 + C435 * C11434 + C436 * C11433) *
                C154037) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154002 +
             (C24291 + C24292 + C24293) * C153648) *
                C154037 +
            ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
                C153897) *
               C153711 * C1279 -
           ((C40346 * C153648 + (C32063 + C32062 + C32061) * C154002) *
                C153897 +
            ((C24600 + C24601 + C24602) * C153648 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C154002) *
                C154037) *
               C153711 * C153747) *
              C1281 +
          ((((C24602 + C24601 + C24600) * C154002 +
             (C24599 + C24598 + C24597) * C153648) *
                C154037 +
            (C40345 * C154002 + (C25722 + C25723 + C25724) * C153648) *
                C153897) *
               C153711 * C153747 -
           ((C25383 * C153648 + C39373 * C154002) * C153897 +
            ((C24296 + C24295 + C24294) * C153648 +
             (C24293 + C24292 + C24291) * C154002) *
                C154037) *
               C153711 * C1279) *
              C1282 +
          (((C24305 * C154002 + (C24299 + C24298 + C24297) * C153648) *
                C154037 +
            (C39956 * C154002 + (C25390 + C25391 + C25392) * C153648) *
                C153897) *
               C153711 * C1279 -
           (((C24216 * C4389 - C24217 * C4382 - C24216 * C4390 +
              C154071 * C4394 + C24214 * C1951 - C24215 * C1945 -
              C24214 * C1952 + C24207 * C1960 + C24212 * C1117 -
              C24213 * C1108 - C24212 * C1118 + C24206 * C1126) *
                 C153648 +
             (C25724 + C25723 + C25722) * C154002) *
                C153897 +
            ((C25151 + C25150 + C25149) * C153648 + C25142 * C154002) *
                C154037) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154002 +
            (C24291 + C24292 + C24293) * C153648) *
               C154037 +
           ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
               C153897) *
              C153711 * C1366 -
          ((C40346 * C153648 + (C32063 + C32062 + C32061) * C154002) * C153897 +
           ((C24600 + C24601 + C24602) * C153648 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154002) *
               C154037) *
              C153711 * C1367 +
          (((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C154002 +
            (C24603 + C24604 + C24605) * C153648) *
               C154037 +
           ((C33442 + C33443 + C33444) * C154002 +
            (C39076 + C39077 + C39078) * C153648) *
               C153897) *
              C153711 * C1368 -
          (((C24216 * C29108 - C24217 * C29105 - C24216 * C29109 +
             C154071 * C29111 + C24214 * C5774 - C24215 * C5770 -
             C24214 * C5775 + C24207 * C5779 + C24212 * C4385 - C24213 * C4380 -
             C24212 * C4386 + C24206 * C4392) *
                C153648 +
            (C24216 * C29106 - C24217 * C29104 - C24216 * C29107 +
             C154071 * C29110 + C24214 * C5776 - C24215 * C5771 -
             C24214 * C5777 + C24207 * C5780 + C24212 * C4383 - C24213 * C4379 -
             C24212 * C4384 + C24206 * C4391) *
                C154002) *
               C153897 +
           ((C24216 * C4806 - C24217 * C4802 - C24216 * C4807 +
             C154071 * C4811 + C24214 * C3195 - C24215 * C3190 -
             C24214 * C3196 + C24207 * C3202 + C24212 * C1382 - C24213 * C1374 -
             C24212 * C1383 + C24206 * C1389) *
                C153648 +
            (C24216 * C4808 - C24217 * C4803 - C24216 * C4809 +
             C154071 * C4812 + C24214 * C3193 - C24215 * C3189 -
             C24214 * C3194 + C24207 * C3201 + C24212 * C1384 - C24213 * C1375 -
             C24212 * C1385 + C24206 * C1390) *
                C154002) *
               C154037) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154002 +
             C205 * C153648) *
                C63394 +
            (C63794 + C63795) * C63395 + C63810 * C63396 + C63811 * C154051) *
               C153711 * C1279 -
           ((C64471 + C64470) * C154051 + (C64469 + C64468) * C63396 +
            (C64467 + C64466) * C63395 +
            (C437 * C153648 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154002) *
                C63394) *
               C153711 * C153747) *
              C1281 +
          (((C437 * C154002 + C436 * C153648) * C63394 +
            (C64472 + C64473) * C63395 + (C64474 + C64475) * C63396 +
            (C64476 + C64477) * C154051) *
               C153711 * C153747 -
           (C63812 * C154051 + C63813 * C63396 + (C63803 + C63802) * C63395 +
            (C206 * C153648 + C205 * C154002) * C63394) *
               C153711 * C1279) *
              C1282 +
          (((C206 * C154002 + C207 * C153648) * C63394 +
            (C64202 + C64203) * C63395 + (C64204 + C64205) * C63396 +
            (C64206 + C64207) * C154051) *
               C153711 * C1279 -
           (((C134 * C8574 - C135 * C8573 - C134 * C8575 + C153792 * C8576) *
                 C153648 +
             C8615 * C154002) *
                C154051 +
            (C8059 * C153648 + C7517 * C154002) * C63396 +
            (C1156 * C153648 + C1155 * C154002) * C63395 +
            (C435 * C153648 + C436 * C154002) * C63394) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C154002 +
            C205 * C153648) *
               C63394 +
           (C63794 + C63795) * C63395 + C63810 * C63396 + C63811 * C154051) *
              C153711 * C1366 -
          ((C64471 + C64470) * C154051 + (C64469 + C64468) * C63396 +
           (C64467 + C64466) * C63395 +
           (C437 * C153648 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                C154002) *
               C63394) *
              C153711 * C1367 +
          (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                C154002 +
            C438 * C153648) *
               C63394 +
           (C9966 * C154002 + C7519 * C153648) * C63395 +
           (C9967 * C154002 + C7521 * C153648) * C63396 +
           (C57194 * C154002 + C63599 * C153648) * C154051) *
              C153711 * C1368 -
          (((C134 * C32003 - C135 * C32002 - C134 * C32004 + C153792 * C32005) *
                C153648 +
            (C134 * C30186 - C135 * C30183 - C134 * C30187 + C153792 * C30189) *
                C154002) *
               C154051 +
           ((C134 * C5036 - C135 * C5032 - C134 * C5037 + C153792 * C5041) *
                C153648 +
            (C134 * C5038 - C135 * C5033 - C134 * C5039 + C153792 * C5042) *
                C154002) *
               C63396 +
           ((C134 * C4385 - C135 * C4380 - C134 * C4386 + C153792 * C4392) *
                C153648 +
            (C134 * C4383 - C135 * C4379 - C134 * C4384 + C153792 * C4391) *
                C154002) *
               C63395 +
           ((C134 * C1382 - C135 * C1374 - C134 * C1383 + C153792 * C1389) *
                C153648 +
            (C134 * C1384 - C135 * C1375 - C134 * C1385 + C153792 * C1390) *
                C154002) *
               C63394) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
               C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
               C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                  C154002 +
              (C24291 + C24292 + C24293) * C153648) *
                 C154037 +
             ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
                 C153897) *
                C2086 -
            ((C31248 * C153648 + (C31267 + C31266 + C31265) * C154002) *
                 C153897 +
             (C39373 * C153648 + (C31264 + C31263 + C31262) * C154002) *
                 C154037) *
                C153775) *
               C154021 +
           ((((C32061 + C32062 + C32063) * C154002 + C40345 * C153648) *
                 C154037 +
             ((C32064 + C32065 + C32066) * C154002 +
              (C32067 + C32068 + C32069) * C153648) *
                 C153897) *
                C153775 -
            ((C40346 * C153648 + (C32063 + C32062 + C32061) * C154002) *
                 C153897 +
             ((C24600 + C24601 + C24602) * C153648 +
              (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
               C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
               C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
               C24206 * C377) *
                  C154002) *
                 C154037) *
                C2086) *
               C153747) *
              C154013 +
          ((((C39372 * C154002 + C39956 * C153648) * C154037 +
             (C39374 * C154002 + (C24908 + C24909 + C24910) * C153648) *
                 C153897) *
                C153775 -
            ((C25383 * C153648 + C39373 * C154002) * C153897 +
             ((C24296 + C24295 + C24294) * C153648 +
              (C24293 + C24292 + C24291) * C154002) *
                 C154037) *
                C2086) *
               C154021 +
           ((((C24602 + C24601 + C24600) * C154002 +
              (C24599 + C24598 + C24597) * C153648) *
                 C154037 +
             (C40345 * C154002 + (C25722 + C25723 + C25724) * C153648) *
                 C153897) *
                C2086 -
            (((C24216 * C5034 - C24217 * C5031 - C24216 * C5035 +
               C154071 * C5040 + C24214 * C3515 - C24215 * C3509 -
               C24214 * C3516 + C24207 * C3521 + C24212 * C1522 -
               C24213 * C1515 - C24212 * C1523 + C24206 * C1530) *
                  C153648 +
              (C32069 + C32068 + C32067) * C154002) *
                 C153897 +
             ((C25724 + C25723 + C25722) * C153648 + C40346 * C154002) *
                 C154037) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                  C11433 +
              C205 * C11434 + C206 * C11435 + C207 * C154036) *
                 C154037 +
             (C15647 + C15648 + C15649 + C15650) * C153897) *
                C2086 -
            ((C15651 + C15652 + C15653 + C15654) * C153897 +
             (C15650 + C15649 + C15648 + C15647) * C154037) *
                C153775) *
               C154021 +
           (((C16313 + C16314 + C16315 + C16316) * C154037 +
             (C16839 + C16840 + C16841 + C16842) * C153897) *
                C153775 -
            ((C16316 + C16315 + C16314 + C16313) * C153897 +
             (C435 * C154036 + C436 * C11435 + C437 * C11434 +
              (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                  C11433) *
                 C154037) *
                C2086) *
               C153747) *
              C154013 +
          ((((C15655 + C15656 + C15657 + C15658) * C154037 +
             (C15659 + C15660 + C15661 + C15662) * C153897) *
                C153775 -
            ((C15658 + C15657 + C15656 + C15655) * C153897 +
             (C208 * C154036 + C207 * C11435 + C206 * C11434 + C205 * C11433) *
                 C154037) *
                C2086) *
               C154021 +
           (((C437 * C11433 + C436 * C11434 + C435 * C11435 + C434 * C154036) *
                 C154037 +
             (C16317 + C16318 + C16319 + C16320) * C153897) *
                C2086 -
            (((C134 * C1518 - C135 * C1513 - C134 * C1519 + C153792 * C1528) *
                  C154036 +
              C8059 * C11435 + C7517 * C11434 + C7518 * C11433) *
                 C153897 +
             (C16320 + C16319 + C16318 + C16317) * C154037) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                  C154002 +
              C205 * C153648) *
                 C63394 +
             (C63794 + C63795) * C63395 + C63810 * C63396 + C63811 * C154051) *
                C2086 -
            (C66170 * C154051 + C66171 * C63396 + (C63797 + C63796) * C63395 +
             (C63795 + C63794) * C63394) *
                C153775) *
               C154021 +
           (((C64466 + C64467) * C63394 + (C64468 + C64469) * C63395 +
             (C64470 + C64471) * C63396 + (C64996 + C64997) * C154051) *
                C153775 -
            (C64998 * C154051 + C64999 * C63396 + (C64467 + C64466) * C63395 +
             (C437 * C153648 +
              (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                  C154002) *
                 C63394) *
                C2086) *
               C153747) *
              C154013 +
          ((((C63802 + C63803) * C63394 + (C63804 + C63805) * C63395 +
             (C63806 + C63807) * C63396 + (C63808 + C63809) * C154051) *
                C153775 -
            (C63812 * C154051 + C63813 * C63396 + (C63803 + C63802) * C63395 +
             (C206 * C153648 + C205 * C154002) * C63394) *
                C2086) *
               C154021 +
           (((C437 * C154002 + C436 * C153648) * C63394 +
             (C64472 + C64473) * C63395 + (C64474 + C64475) * C63396 +
             (C64476 + C64477) * C154051) *
                C2086 -
            (((C134 * C9202 - C135 * C9199 - C134 * C9203 + C153792 * C9208) *
                  C153648 +
              C56433 * C154002) *
                 C154051 +
             (C64477 + C64476) * C63396 + (C64475 + C64474) * C63395 +
             (C64473 + C64472) * C63394) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154002 +
             (C24291 + C24292 + C24293) * C153648) *
                C154037 +
            ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
                C153897) *
               C154094 -
           ((C31248 * C153648 + (C31267 + C31266 + C31265) * C154002) *
                C153897 +
            (C39373 * C153648 + (C31264 + C31263 + C31262) * C154002) *
                C154037) *
               C154095 +
           ((C31275 * C154002 + C39374 * C153648) * C154037 +
            ((C31270 + C31269 + C31268) * C154002 +
             (C31271 + C31272 + C31273) * C153648) *
                C153897) *
               C2602) *
              C154021 +
          ((((C32061 + C32062 + C32063) * C154002 + C40345 * C153648) *
                C154037 +
            ((C32064 + C32065 + C32066) * C154002 +
             (C32067 + C32068 + C32069) * C153648) *
                C153897) *
               C154095 -
           ((C40346 * C153648 + (C32063 + C32062 + C32061) * C154002) *
                C153897 +
            ((C24600 + C24601 + C24602) * C153648 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C154002) *
                C154037) *
               C154094 -
           (((C24216 * C32003 - C24217 * C32002 - C24216 * C32004 +
              C154071 * C32005 + C24214 * C6373 - C24215 * C6365 -
              C24214 * C6374 + C24207 * C6383 + C24212 * C6375 -
              C24213 * C6366 - C24212 * C6376 + C24206 * C6384) *
                 C153648 +
             (C32679 + C32678 + C32677) * C154002) *
                C153897 +
            ((C32069 + C32068 + C32067) * C153648 + C32672 * C154002) *
                C154037) *
               C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C11433 +
             C205 * C11434 + C206 * C11435 + C207 * C154036) *
                C154037 +
            (C15647 + C15648 + C15649 + C15650) * C153897) *
               C154094 -
           ((C15651 + C15652 + C15653 + C15654) * C153897 +
            (C15650 + C15649 + C15648 + C15647) * C154037) *
               C154095 +
           ((C15654 + C15653 + C15652 + C15651) * C154037 +
            (C18011 + C18012 + C18013 + C18014) * C153897) *
               C2602) *
              C154021 +
          (((C16313 + C16314 + C16315 + C16316) * C154037 +
            (C16839 + C16840 + C16841 + C16842) * C153897) *
               C154095 -
           ((C16316 + C16315 + C16314 + C16313) * C153897 +
            (C435 * C154036 + C436 * C11435 + C437 * C11434 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C11433) *
                C154037) *
               C154094 -
           (((C134 * C8574 - C135 * C8573 - C134 * C8575 + C153792 * C8576) *
                 C154036 +
             C8615 * C11435 + C8614 * C11434 + C9222 * C11433) *
                C153897 +
            (C16842 + C16841 + C16840 + C16839) * C154037) *
               C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154002 +
             C205 * C153648) *
                C63394 +
            (C63794 + C63795) * C63395 + C63810 * C63396 + C63811 * C154051) *
               C154094 -
           (C66170 * C154051 + C66171 * C63396 + (C63797 + C63796) * C63395 +
            (C63795 + C63794) * C63394) *
               C154095 +
           (C63810 * C63394 + C63811 * C63395 + (C63801 + C63800) * C63396 +
            (C66172 + C66173) * C154051) *
               C2602) *
              C154021 +
          (((C64466 + C64467) * C63394 + (C64468 + C64469) * C63395 +
            (C64470 + C64471) * C63396 + (C64996 + C64997) * C154051) *
               C154095 -
           (C64998 * C154051 + C64999 * C63396 + (C64467 + C64466) * C63395 +
            (C437 * C153648 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154002) *
                C63394) *
               C154094 -
           (((C134 * C56410 - C135 * C56409 - C134 * C56411 +
              C153792 * C56412) *
                 C153648 +
             C56772 * C154002) *
                C154051 +
            (C64997 + C64996) * C63396 + C64998 * C63395 + C64999 * C63394) *
               C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                     C11433 +
                 C205 * C11434 + C206 * C11435 + C207 * C154036) *
                    C154037 +
                (C15647 + C15648 + C15649 + C15650) * C153897) *
                   C2086 -
               ((C15651 + C15652 + C15653 + C15654) * C153897 +
                (C15650 + C15649 + C15648 + C15647) * C154037) *
                   C153775) *
                  C153695 * C1281 +
              (((C15655 + C15656 + C15657 + C15658) * C154037 +
                (C15659 + C15660 + C15661 + C15662) * C153897) *
                   C153775 -
               ((C15658 + C15657 + C15656 + C15655) * C153897 +
                (C208 * C154036 + C207 * C11435 + C206 * C11434 +
                 C205 * C11433) *
                    C154037) *
                   C2086) *
                  C153695 * C1282 +
              (((C206 * C11433 + C207 * C11434 + C208 * C11435 +
                 C209 * C154036) *
                    C154037 +
                (C16051 + C16052 + C16053 + C16054) * C153897) *
                   C2086 -
               (((C134 * C600 - C135 * C577 - C134 * C601 + C153792 * C613) *
                     C154036 +
                 C670 * C11435 + C669 * C11434 + C668 * C11433) *
                    C153897 +
                (C16054 + C16053 + C16052 + C16051) * C154037) *
                   C153775) *
                  C153695 * C1283) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                     C11433 +
                 C205 * C11434 + C206 * C11435 + C207 * C154036) *
                    C154037 +
                (C15647 + C15648 + C15649 + C15650) * C153897) *
                   C2086 -
               ((C15651 + C15652 + C15653 + C15654) * C153897 +
                (C15650 + C15649 + C15648 + C15647) * C154037) *
                   C153775) *
                  C332 +
              (((C16313 + C16314 + C16315 + C16316) * C154037 +
                (C16839 + C16840 + C16841 + C16842) * C153897) *
                   C153775 -
               ((C16316 + C16315 + C16314 + C16313) * C153897 +
                (C435 * C154036 + C436 * C11435 + C437 * C11434 +
                 (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                     C11433) *
                    C154037) *
                   C2086) *
                  C333 +
              ((((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                     C11433 +
                 C438 * C11434 + C439 * C11435 + C440 * C154036) *
                    C154037 +
                (C17489 + C17490 + C17491 + C17492) * C153897) *
                   C2086 -
               (((C134 * C3517 - C135 * C3510 - C134 * C3518 +
                  C153792 * C3522) *
                     C154036 +
                 C7522 * C11435 + C7521 * C11434 + C9967 * C11433) *
                    C153897 +
                (C17492 + C17491 + C17490 + C17489) * C154037) *
                   C153775) *
                  C334) *
             C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C11433 +
            C205 * C11434 + C206 * C11435 + C207 * C154036) *
               C154037 +
           (C15647 + C15648 + C15649 + C15650) * C153897) *
              C2292 -
          ((C15651 + C15652 + C15653 + C15654) * C153897 +
           (C15650 + C15649 + C15648 + C15647) * C154037) *
              C2293 +
          ((C15654 + C15653 + C15652 + C15651) * C154037 +
           (C18011 + C18012 + C18013 + C18014) * C153897) *
              C2294 -
          (((C134 * C7750 - C135 * C7743 - C134 * C7751 + C153792 * C7755) *
                C154036 +
            C7823 * C11435 + C7822 * C11434 + C10574 * C11433) *
               C153897 +
           (C18014 + C18013 + C18012 + C18011) * C154037) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154002 +
             (C24291 + C24292 + C24293) * C153648) *
                C154037 +
            ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
                C153897) *
               C2086 -
           ((C31248 * C153648 + (C31267 + C31266 + C31265) * C154002) *
                C153897 +
            (C39373 * C153648 + (C31264 + C31263 + C31262) * C154002) *
                C154037) *
               C153775) *
              C153695 * C1281 +
          (((C39372 * C154002 + C39956 * C153648) * C154037 +
            (C39374 * C154002 + (C24908 + C24909 + C24910) * C153648) *
                C153897) *
               C153775 -
           ((C25383 * C153648 + C39373 * C154002) * C153897 +
            ((C24296 + C24295 + C24294) * C153648 +
             (C24293 + C24292 + C24291) * C154002) *
                C154037) *
               C2086) *
              C153695 * C1282 +
          (((C24305 * C154002 + (C24299 + C24298 + C24297) * C153648) *
                C154037 +
            (C39956 * C154002 + (C25390 + C25391 + C25392) * C153648) *
                C153897) *
               C2086 -
           (((C24216 * C3517 - C24217 * C3510 - C24216 * C3518 +
              C154071 * C3522 + C24214 * C1520 - C24215 * C1514 -
              C24214 * C1521 + C24207 * C1529 + C24212 * C594 - C24213 * C574 -
              C24212 * C595 + C24206 * C610) *
                 C153648 +
             (C24910 + C24909 + C24908) * C154002) *
                C153897 +
            ((C25392 + C25391 + C25390) * C153648 + C25383 * C154002) *
                C154037) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154002 +
             (C24291 + C24292 + C24293) * C153648) *
                C154037 +
            ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
                C153897) *
               C2086 -
           ((C31248 * C153648 + (C31267 + C31266 + C31265) * C154002) *
                C153897 +
            (C39373 * C153648 + (C31264 + C31263 + C31262) * C154002) *
                C154037) *
               C153775) *
              C332 +
          ((((C32061 + C32062 + C32063) * C154002 + C40345 * C153648) *
                C154037 +
            ((C32064 + C32065 + C32066) * C154002 +
             (C32067 + C32068 + C32069) * C153648) *
                C153897) *
               C153775 -
           ((C40346 * C153648 + (C32063 + C32062 + C32061) * C154002) *
                C153897 +
            ((C24600 + C24601 + C24602) * C153648 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C154002) *
                C154037) *
               C2086) *
              C333 +
          ((((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
              C24214 * C1384 - C24215 * C1375 - C24214 * C1385 +
              C24207 * C1390 + C24216 * C3193 - C24217 * C3189 -
              C24216 * C3194 + C154071 * C3201) *
                 C154002 +
             (C24603 + C24604 + C24605) * C153648) *
                C154037 +
            ((C33442 + C33443 + C33444) * C154002 +
             (C39076 + C39077 + C39078) * C153648) *
                C153897) *
               C2086 -
           (((C24216 * C28694 - C24217 * C28691 - C24216 * C28695 +
              C154071 * C28697 + C24214 * C5036 - C24215 * C5032 -
              C24214 * C5037 + C24207 * C5041 + C24212 * C3513 -
              C24213 * C3508 - C24212 * C3514 + C24206 * C3520) *
                 C153648 +
             (C33447 + C33446 + C33445) * C154002) *
                C153897 +
            ((C39078 + C39077 + C39076) * C153648 +
             (C33444 + C33443 + C33442) * C154002) *
                C154037) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154002 +
            (C24291 + C24292 + C24293) * C153648) *
               C154037 +
           ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
               C153897) *
              C2292 -
          ((C31248 * C153648 + (C31267 + C31266 + C31265) * C154002) * C153897 +
           (C39373 * C153648 + (C31264 + C31263 + C31262) * C154002) *
               C154037) *
              C2293 +
          ((C31275 * C154002 + C39374 * C153648) * C154037 +
           ((C31270 + C31269 + C31268) * C154002 +
            (C31271 + C31272 + C31273) * C153648) *
               C153897) *
              C2294 -
          (((C24216 * C31182 - C24217 * C31179 - C24216 * C31183 +
             C154071 * C31185 + C24214 * C9204 - C24215 * C9200 -
             C24214 * C9205 + C24207 * C9209 + C24212 * C7746 - C24213 * C7741 -
             C24212 * C7747 + C24206 * C7753) *
                C153648 +
            (C34061 + C34060 + C34059) * C154002) *
               C153897 +
           ((C31273 + C31272 + C31271) * C153648 + C34051 * C154002) *
               C154037) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154002 +
             C205 * C153648) *
                C63394 +
            (C63794 + C63795) * C63395 + C63810 * C63396 + C63811 * C154051) *
               C2086 -
           ((C63800 + C63801) * C154051 + (C63799 + C63798) * C63396 +
            (C63797 + C63796) * C63395 + (C63795 + C63794) * C63394) *
               C153775) *
              C153695 * C1281 +
          (((C63802 + C63803) * C63394 + (C63804 + C63805) * C63395 +
            (C63806 + C63807) * C63396 + (C63808 + C63809) * C154051) *
               C153775 -
           (C63812 * C154051 + C63813 * C63396 + (C63803 + C63802) * C63395 +
            (C206 * C153648 + C205 * C154002) * C63394) *
               C2086) *
              C153695 * C1282 +
          (((C206 * C154002 + C207 * C153648) * C63394 +
            (C64202 + C64203) * C63395 + (C64204 + C64205) * C63396 +
            (C64206 + C64207) * C154051) *
               C2086 -
           (((C134 * C7750 - C135 * C7743 - C134 * C7751 + C153792 * C7755) *
                 C153648 +
             C7823 * C154002) *
                C154051 +
            (C64207 + C64206) * C63396 + (C64205 + C64204) * C63395 +
            (C64203 + C64202) * C63394) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154002 +
             C205 * C153648) *
                C63394 +
            (C63794 + C63795) * C63395 + C63810 * C63396 + C63811 * C154051) *
               C2086 -
           ((C63800 + C63801) * C154051 + (C63799 + C63798) * C63396 +
            (C63797 + C63796) * C63395 + (C63795 + C63794) * C63394) *
               C153775) *
              C332 +
          (((C64466 + C64467) * C63394 + (C64468 + C64469) * C63395 +
            (C64470 + C64471) * C63396 + (C64996 + C64997) * C154051) *
               C153775 -
           (C64998 * C154051 + C64999 * C63396 + (C64467 + C64466) * C63395 +
            (C437 * C153648 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154002) *
                C63394) *
               C2086) *
              C333 +
          ((((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C154002 +
             C438 * C153648) *
                C63394 +
            (C65646 + C65647) * C63395 + (C65648 + C65649) * C63396 +
            (C65650 + C65651) * C154051) *
               C2086 -
           (((C134 * C31182 - C135 * C31179 - C134 * C31183 +
              C153792 * C31185) *
                 C153648 +
             C57195 * C154002) *
                C154051 +
            (C65651 + C65650) * C63396 + (C65649 + C65648) * C63395 +
            (C65647 + C65646) * C63394) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C154002 +
            C205 * C153648) *
               C63394 +
           (C63794 + C63795) * C63395 + C63810 * C63396 + C63811 * C154051) *
              C2292 -
          (C66170 * C154051 + C66171 * C63396 + (C63797 + C63796) * C63395 +
           (C63795 + C63794) * C63394) *
              C2293 +
          (C63810 * C63394 + C63811 * C63395 + (C63801 + C63800) * C63396 +
           (C66172 + C66173) * C154051) *
              C2294 -
          (((C134 * C55971 - C135 * C55968 - C134 * C55972 + C153792 * C55974) *
                C153648 +
            C57534 * C154002) *
               C154051 +
           (C66173 + C66172) * C63396 + C66170 * C63395 + C66171 * C63394) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154002 +
             (C24291 + C24292 + C24293) * C153648) *
                C154037 +
            ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
                C153897) *
               C154094 -
           ((C31248 * C153648 + (C31267 + C31266 + C31265) * C154002) *
                C153897 +
            (C39373 * C153648 + (C31264 + C31263 + C31262) * C154002) *
                C154037) *
               C154095 +
           ((C31275 * C154002 + C39374 * C153648) * C154037 +
            ((C31270 + C31269 + C31268) * C154002 +
             (C31271 + C31272 + C31273) * C153648) *
                C153897) *
               C2602) *
              C153695 * C154013 +
          (((C39372 * C154002 + C39956 * C153648) * C154037 +
            (C39374 * C154002 + (C24908 + C24909 + C24910) * C153648) *
                C153897) *
               C154095 -
           ((C25383 * C153648 + C39373 * C154002) * C153897 +
            ((C24296 + C24295 + C24294) * C153648 +
             (C24293 + C24292 + C24291) * C154002) *
                C154037) *
               C154094 -
           (((C24216 * C6369 - C24217 * C6363 - C24216 * C6370 +
              C154071 * C6381 + C24214 * C6371 - C24215 * C6364 -
              C24214 * C6372 + C24207 * C6382 + C24212 * C2305 -
              C24213 * C2298 - C24212 * C2306 + C24206 * C2313) *
                 C153648 +
             (C31273 + C31272 + C31271) * C154002) *
                C153897 +
            ((C24910 + C24909 + C24908) * C153648 + C31248 * C154002) *
                C154037) *
               C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C11433 +
             C205 * C11434 + C206 * C11435 + C207 * C154036) *
                C154037 +
            (C15647 + C15648 + C15649 + C15650) * C153897) *
               C154094 -
           ((C15651 + C15652 + C15653 + C15654) * C153897 +
            (C15650 + C15649 + C15648 + C15647) * C154037) *
               C154095 +
           ((C15654 + C15653 + C15652 + C15651) * C154037 +
            (C18011 + C18012 + C18013 + C18014) * C153897) *
               C2602) *
              C153695 * C154013 +
          (((C15655 + C15656 + C15657 + C15658) * C154037 +
            (C15659 + C15660 + C15661 + C15662) * C153897) *
               C154095 -
           ((C15658 + C15657 + C15656 + C15655) * C153897 +
            (C208 * C154036 + C207 * C11435 + C206 * C11434 + C205 * C11433) *
                C154037) *
               C154094 -
           (((C134 * C2301 - C135 * C2296 - C134 * C2302 + C153792 * C2311) *
                 C154036 +
             C7824 * C11435 + C7819 * C11434 + C7820 * C11433) *
                C153897 +
            (C15662 + C15661 + C15660 + C15659) * C154037) *
               C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154002 +
             C205 * C153648) *
                C63394 +
            (C63794 + C63795) * C63395 + C63810 * C63396 + C63811 * C154051) *
               C154094 -
           (C66170 * C154051 + C66171 * C63396 + (C63797 + C63796) * C63395 +
            (C63795 + C63794) * C63394) *
               C154095 +
           (C63810 * C63394 + C63811 * C63395 + (C63801 + C63800) * C63396 +
            (C66172 + C66173) * C154051) *
               C2602) *
              C153695 * C154013 +
          (((C63802 + C63803) * C63394 + (C63804 + C63805) * C63395 +
            (C63806 + C63807) * C63396 + (C63808 + C63809) * C154051) *
               C154095 -
           (C63812 * C154051 + C63813 * C63396 + (C63803 + C63802) * C63395 +
            (C206 * C153648 + C205 * C154002) * C63394) *
               C154094 -
           (((C134 * C10554 - C135 * C10551 - C134 * C10555 +
              C153792 * C10560) *
                 C153648 +
             C55997 * C154002) *
                C154051 +
            (C63809 + C63808) * C63396 + C63812 * C63395 + C63813 * C63394) *
               C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C11433 +
             C205 * C11434 + C206 * C11435 + C207 * C154036) *
                C154037 +
            (C15647 + C15648 + C15649 + C15650) * C153897) *
               C2086 -
           ((C15651 + C15652 + C15653 + C15654) * C153897 +
            (C15650 + C15649 + C15648 + C15647) * C154037) *
               C153775) *
              C332 +
          (((C16313 + C16314 + C16315 + C16316) * C154037 +
            (C16839 + C16840 + C16841 + C16842) * C153897) *
               C153775 -
           ((C16316 + C16315 + C16314 + C16313) * C153897 +
            (C435 * C154036 + C436 * C11435 + C437 * C11434 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C11433) *
                C154037) *
               C2086) *
              C333 +
          ((((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C11433 +
             C438 * C11434 + C439 * C11435 + C440 * C154036) *
                C154037 +
            (C17489 + C17490 + C17491 + C17492) * C153897) *
               C2086 -
           (((C134 * C3517 - C135 * C3510 - C134 * C3518 + C153792 * C3522) *
                 C154036 +
             C7522 * C11435 + C7521 * C11434 + C9967 * C11433) *
                C153897 +
            (C17492 + C17491 + C17490 + C17489) * C154037) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C11433 +
             C205 * C11434 + C206 * C11435 + C207 * C154036) *
                C154037 +
            (C15647 + C15648 + C15649 + C15650) * C153897) *
               C2086 -
           ((C15651 + C15652 + C15653 + C15654) * C153897 +
            (C15650 + C15649 + C15648 + C15647) * C154037) *
               C153775) *
              C153695 * C1281 +
          (((C15655 + C15656 + C15657 + C15658) * C154037 +
            (C15659 + C15660 + C15661 + C15662) * C153897) *
               C153775 -
           ((C15658 + C15657 + C15656 + C15655) * C153897 +
            (C208 * C154036 + C207 * C11435 + C206 * C11434 + C205 * C11433) *
                C154037) *
               C2086) *
              C153695 * C1282 +
          (((C206 * C11433 + C207 * C11434 + C208 * C11435 + C209 * C154036) *
                C154037 +
            (C16051 + C16052 + C16053 + C16054) * C153897) *
               C2086 -
           (((C134 * C600 - C135 * C577 - C134 * C601 + C153792 * C613) *
                 C154036 +
             C670 * C11435 + C669 * C11434 + C668 * C11433) *
                C153897 +
            (C16054 + C16053 + C16052 + C16051) * C154037) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154002 +
             (C24291 + C24292 + C24293) * C153648) *
                C154037 +
            ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
                C153897) *
               C2086 -
           ((C31248 * C153648 + (C31267 + C31266 + C31265) * C154002) *
                C153897 +
            (C39373 * C153648 + (C31264 + C31263 + C31262) * C154002) *
                C154037) *
               C153775) *
              C153695 * C1281 +
          (((C39372 * C154002 + C39956 * C153648) * C154037 +
            (C39374 * C154002 + (C24908 + C24909 + C24910) * C153648) *
                C153897) *
               C153775 -
           ((C25383 * C153648 + C39373 * C154002) * C153897 +
            ((C24296 + C24295 + C24294) * C153648 +
             (C24293 + C24292 + C24291) * C154002) *
                C154037) *
               C2086) *
              C153695 * C1282 +
          (((C24305 * C154002 + (C24299 + C24298 + C24297) * C153648) *
                C154037 +
            (C39956 * C154002 + (C25390 + C25391 + C25392) * C153648) *
                C153897) *
               C2086 -
           (((C24216 * C3517 - C24217 * C3510 - C24216 * C3518 +
              C154071 * C3522 + C24214 * C1520 - C24215 * C1514 -
              C24214 * C1521 + C24207 * C1529 + C24212 * C594 - C24213 * C574 -
              C24212 * C595 + C24206 * C610) *
                 C153648 +
             (C24910 + C24909 + C24908) * C154002) *
                C153897 +
            ((C25392 + C25391 + C25390) * C153648 + C25383 * C154002) *
                C154037) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154002 +
             (C24291 + C24292 + C24293) * C153648) *
                C154037 +
            ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
                C153897) *
               C2086 -
           ((C31248 * C153648 + (C31267 + C31266 + C31265) * C154002) *
                C153897 +
            (C39373 * C153648 + (C31264 + C31263 + C31262) * C154002) *
                C154037) *
               C153775) *
              C332 +
          ((((C32061 + C32062 + C32063) * C154002 + C40345 * C153648) *
                C154037 +
            ((C32064 + C32065 + C32066) * C154002 +
             (C32067 + C32068 + C32069) * C153648) *
                C153897) *
               C153775 -
           ((C40346 * C153648 + (C32063 + C32062 + C32061) * C154002) *
                C153897 +
            ((C24600 + C24601 + C24602) * C153648 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C154002) *
                C154037) *
               C2086) *
              C333 +
          ((((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
              C24214 * C1384 - C24215 * C1375 - C24214 * C1385 +
              C24207 * C1390 + C24216 * C3193 - C24217 * C3189 -
              C24216 * C3194 + C154071 * C3201) *
                 C154002 +
             (C24603 + C24604 + C24605) * C153648) *
                C154037 +
            ((C33442 + C33443 + C33444) * C154002 +
             (C39076 + C39077 + C39078) * C153648) *
                C153897) *
               C2086 -
           (((C24216 * C28694 - C24217 * C28691 - C24216 * C28695 +
              C154071 * C28697 + C24214 * C5036 - C24215 * C5032 -
              C24214 * C5037 + C24207 * C5041 + C24212 * C3513 -
              C24213 * C3508 - C24212 * C3514 + C24206 * C3520) *
                 C153648 +
             (C33447 + C33446 + C33445) * C154002) *
                C153897 +
            ((C39078 + C39077 + C39076) * C153648 +
             (C33444 + C33443 + C33442) * C154002) *
                C154037) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154002 +
             C205 * C153648) *
                C63394 +
            (C63794 + C63795) * C63395 + C63810 * C63396 + C63811 * C154051) *
               C2086 -
           ((C63800 + C63801) * C154051 + (C63799 + C63798) * C63396 +
            (C63797 + C63796) * C63395 + (C63795 + C63794) * C63394) *
               C153775) *
              C153695 * C1281 +
          (((C63802 + C63803) * C63394 + (C63804 + C63805) * C63395 +
            (C63806 + C63807) * C63396 + (C63808 + C63809) * C154051) *
               C153775 -
           (C63812 * C154051 + C63813 * C63396 + (C63803 + C63802) * C63395 +
            (C206 * C153648 + C205 * C154002) * C63394) *
               C2086) *
              C153695 * C1282 +
          (((C206 * C154002 + C207 * C153648) * C63394 +
            (C64202 + C64203) * C63395 + (C64204 + C64205) * C63396 +
            (C64206 + C64207) * C154051) *
               C2086 -
           (((C134 * C7750 - C135 * C7743 - C134 * C7751 + C153792 * C7755) *
                 C153648 +
             C7823 * C154002) *
                C154051 +
            (C64207 + C64206) * C63396 + (C64205 + C64204) * C63395 +
            (C64203 + C64202) * C63394) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154002 +
             C205 * C153648) *
                C63394 +
            (C63794 + C63795) * C63395 + C63810 * C63396 + C63811 * C154051) *
               C2086 -
           ((C63800 + C63801) * C154051 + (C63799 + C63798) * C63396 +
            (C63797 + C63796) * C63395 + (C63795 + C63794) * C63394) *
               C153775) *
              C332 +
          (((C64466 + C64467) * C63394 + (C64468 + C64469) * C63395 +
            (C64470 + C64471) * C63396 + (C64996 + C64997) * C154051) *
               C153775 -
           (C64998 * C154051 + C64999 * C63396 + (C64467 + C64466) * C63395 +
            (C437 * C153648 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154002) *
                C63394) *
               C2086) *
              C333 +
          ((((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C154002 +
             C438 * C153648) *
                C63394 +
            (C65646 + C65647) * C63395 + (C65648 + C65649) * C63396 +
            (C65650 + C65651) * C154051) *
               C2086 -
           (((C134 * C31182 - C135 * C31179 - C134 * C31183 +
              C153792 * C31185) *
                 C153648 +
             C57195 * C154002) *
                C154051 +
            (C65651 + C65650) * C63396 + (C65649 + C65648) * C63395 +
            (C65647 + C65646) * C63394) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C153711 * C154021 -
           (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C2874) *
               C153810 * C153711 * C153747) *
              C154090 +
          (((C3283 + C3282 + C3281) * C2874 + (C3280 + C3279 + C3278) * C2875 +
            (C3846 + C3847 + C3848) * C154058) *
               C153810 * C153711 * C153747 -
           (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
            (C2958 + C2957 + C2956) * C2874) *
               C153810 * C153711 * C154021) *
              C154091 +
          ((C2970 * C2874 + (C2964 + C2963 + C2962) * C2875 +
            (C2965 + C2966 + C2967) * C154058) *
               C153810 * C153711 * C154021 -
           ((C2881 * C1376 - C2882 * C1371 - C2881 * C1377 + C154071 * C1386 +
             C2879 * C367 - C2880 * C346 - C2879 * C368 + C154097 * C382 +
             C2877 * C349 - C2878 * C337 - C2877 * C350 + C154109 * C373) *
                C154058 +
            (C3848 + C3847 + C3846) * C2875 + C3839 * C2874) *
               C153810 * C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C153711 * C154021 -
           (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) * C122) *
               C153810 * C153711 * C153747) *
              C154090 +
          ((C437 * C122 + C436 * C123 + C435 * C124 + C434 * C125 +
            C808 * C126) *
               C153810 * C153711 * C153747 -
           (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
            C205 * C122) *
               C153810 * C153711 * C154021) *
              C154091 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125 +
            C210 * C126) *
               C153810 * C153711 * C154021 -
           ((C134 * C798 - C135 * C797 - C134 * C799 + C153792 * C800) * C126 +
            C808 * C125 + C434 * C124 + C435 * C123 + C436 * C122) *
               C153810 * C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C153711 * C154021 -
           (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C153711 * C153747) *
              C154090 +
          (((C24602 + C24601 + C24600) * C154106 +
            (C24599 + C24598 + C24597) * C154087 +
            (C25149 + C25150 + C25151) * C154058) *
               C153810 * C153711 * C153747 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C153711 * C154021) *
              C154091 +
          ((C24305 * C154106 + (C24299 + C24298 + C24297) * C154087 +
            (C24300 + C24301 + C24302) * C154058) *
               C153810 * C153711 * C154021 -
           ((C24216 * C1376 - C24217 * C1371 - C24216 * C1377 +
             C154071 * C1386 + C24214 * C367 - C24215 * C346 - C24214 * C368 +
             C24207 * C382 + C24212 * C349 - C24213 * C337 - C24212 * C350 +
             C24206 * C373) *
                C154058 +
            (C25151 + C25150 + C25149) * C154087 + C25142 * C154106) *
               C153810 * C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C153711 * C154021 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C153711 * C153747) *
              C154090 +
          ((C28428 * C355 - C28429 * C340 - C28428 * C356 + C28422 * C376 +
            C28430 * C361 - C28431 * C343 - C28430 * C362 + C28423 * C379 +
            C28432 * C1382 - C28433 * C1374 - C28432 * C1383 + C28424 * C1389 +
            C28434 * C3195 - C28435 * C3190 - C28434 * C3196 + C28425 * C3202 +
            C28436 * C4806 - C28437 * C4802 - C28436 * C4807 + C28426 * C4811) *
               C153638 * C153810 * C153711 * C153747 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C153711 * C154021) *
              C154091 +
          ((C28428 * C148 - C28429 * C138 - C28428 * C149 + C28422 * C162 +
            C28430 * C353 - C28431 * C339 - C28430 * C354 + C28423 * C375 +
            C28432 * C363 - C28433 * C344 - C28432 * C364 + C28424 * C380 +
            C28434 * C1380 - C28435 * C1373 - C28434 * C1381 + C28425 * C1388 +
            C28436 * C3197 - C28437 * C3191 - C28436 * C3198 + C28426 * C3203) *
               C153638 * C153810 * C153711 * C154021 -
           (C28436 * C4804 - C28437 * C4801 - C28436 * C4805 + C28426 * C4810 +
            C28434 * C3197 - C28435 * C3191 - C28434 * C3198 + C28425 * C3203 +
            C28432 * C1380 - C28433 * C1373 - C28432 * C1381 + C28424 * C1388 +
            C28430 * C363 - C28431 * C344 - C28430 * C364 + C28423 * C380 +
            C28428 * C353 - C28429 * C339 - C28428 * C354 + C28422 * C375) *
               C153638 * C153810 * C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154106 +
             C205 * C154087 + C206 * C154058) *
                C47632 +
            (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
               C153711 * C154021 -
           ((C7517 * C154058 + C7518 * C154087 + C8613 * C154106) * C154074 +
            (C1155 * C154058 + C1154 * C154087 + C8612 * C154106) * C47633 +
            (C436 * C154058 + C437 * C154087 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154106) *
                C47632) *
               C153711 * C153747) *
              C154090 +
          (((C437 * C154106 + C436 * C154087 + C435 * C154058) * C47632 +
            (C1154 * C154106 + C1155 * C154087 + C1156 * C154058) * C47633 +
            (C7518 * C154106 + C7517 * C154087 + C8059 * C154058) * C154074) *
               C153711 * C153747 -
           (C48093 * C154074 + (C48083 + C48082 + C48081) * C47633 +
            (C207 * C154058 + C206 * C154087 + C205 * C154106) * C47632) *
               C153711 * C154021) *
              C154091 +
          (((C206 * C154106 + C207 * C154087 + C208 * C154058) * C47632 +
            (C665 * C154106 + C664 * C154087 + C663 * C154058) * C47633 +
            (C668 * C154106 + C669 * C154087 + C670 * C154058) * C154074) *
               C153711 * C154021 -
           (((C134 * C1518 - C135 * C1513 - C134 * C1519 + C153792 * C1528) *
                 C154058 +
             C8059 * C154087 + C7517 * C154106) *
                C154074 +
            (C1157 * C154058 + C1156 * C154087 + C1155 * C154106) * C47633 +
            (C434 * C154058 + C435 * C154087 + C436 * C154106) * C47632) *
               C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C153638 * C47632 +
            (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
               C153711 * C154021 -
           ((C2881 * C5038 - C2882 * C5033 - C2881 * C5039 + C154071 * C5042 +
             C2879 * C3511 - C2880 * C3507 - C2879 * C3512 + C154097 * C3519 +
             C2877 * C1526 - C2878 * C1517 - C2877 * C1527 + C154109 * C1532) *
                C153638 * C154074 +
            (C2881 * C4383 - C2882 * C4379 - C2881 * C4384 + C154071 * C4391 +
             C2879 * C1957 - C2880 * C1948 - C2879 * C1958 + C154097 * C1963 +
             C2877 * C1111 - C2878 * C1105 - C2877 * C1112 + C154109 * C1123) *
                C153638 * C47633 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C153638 * C47632) *
               C153711 * C153747) *
              C154090 +
          (((C3283 + C3282 + C3281) * C153638 * C47632 +
            (C4432 + C4433 + C4434) * C153638 * C47633 +
            (C2877 * C1524 - C2878 * C1516 - C2877 * C1525 + C154109 * C1531 +
             C2879 * C3513 - C2880 * C3508 - C2879 * C3514 + C154097 * C3520 +
             C2881 * C5036 - C2882 * C5032 - C2881 * C5037 + C154071 * C5041) *
                C153638 * C154074) *
               C153711 * C153747 -
           (C52126 * C154074 + (C3599 + C3600 + C3601) * C153638 * C47633 +
            (C2958 + C2957 + C2956) * C153638 * C47632) *
               C153711 * C154021) *
              C154091 +
          ((C2970 * C153638 * C47632 +
            (C3598 + C3597 + C3596) * C153638 * C47633 +
            (C3605 + C3606 + C3607) * C153638 * C154074) *
               C153711 * C154021 -
           ((C2881 * C5034 - C2882 * C5031 - C2881 * C5035 + C154071 * C5040 +
             C2879 * C3515 - C2880 * C3509 - C2879 * C3516 + C154097 * C3521 +
             C2877 * C1522 - C2878 * C1515 - C2877 * C1523 + C154109 * C1530) *
                C153638 * C154074 +
            (C4437 + C4436 + C4435) * C153638 * C47633 +
            C3839 * C153638 * C47632) *
               C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C2874 +
             (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
                C153810 * C154022 -
            (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
             (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
              C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
              C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                 C2874) *
                C153810 * C153775) *
               C154021 +
           (((C2877 * C1111 - C2878 * C1105 - C2877 * C1112 + C154109 * C1123 +
              C2879 * C1957 - C2880 * C1948 - C2879 * C1958 + C154097 * C1963 +
              C2881 * C4383 - C2882 * C4379 - C2881 * C4384 + C154071 * C4391) *
                 C2874 +
             (C4432 + C4433 + C4434) * C2875 +
             (C4435 + C4436 + C4437) * C154058) *
                C153810 * C153775 -
            (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C2874) *
                C153810 * C154022) *
               C153747) *
              C335 +
          ((((C3601 + C3600 + C3599) * C2874 + (C3598 + C3597 + C3596) * C2875 +
             (C4087 + C4088 + C4089) * C154058) *
                C153810 * C153775 -
            (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
             (C2958 + C2957 + C2956) * C2874) *
                C153810 * C154022) *
               C154021 +
           (((C3283 + C3282 + C3281) * C2874 + (C3280 + C3279 + C3278) * C2875 +
             (C3846 + C3847 + C3848) * C154058) *
                C153810 * C154022 -
            ((C2881 * C4389 - C2882 * C4382 - C2881 * C4390 + C154071 * C4394 +
              C2879 * C1951 - C2880 * C1945 - C2879 * C1952 + C154097 * C1960 +
              C2877 * C1117 - C2878 * C1108 - C2877 * C1118 + C154109 * C1126) *
                 C154058 +
             (C4437 + C4436 + C4435) * C2875 +
             (C4434 + C4433 + C4432) * C2874) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                C153810 * C154022 -
            (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
             (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) *
                 C122) *
                C153810 * C153775) *
               C154021 +
           (((C134 * C1111 - C135 * C1105 - C134 * C1112 + C153792 * C1123) *
                 C122 +
             C1154 * C123 + C1155 * C124 + C1156 * C125 + C1157 * C126) *
                C153810 * C153775 -
            (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C122) *
                C153810 * C154022) *
               C153747) *
              C335 +
          (((C666 * C122 + C665 * C123 + C664 * C124 + C663 * C125 +
             C943 * C126) *
                C153810 * C153775 -
            (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
             C205 * C122) *
                C153810 * C154022) *
               C154021 +
           ((C437 * C122 + C436 * C123 + C435 * C124 + C434 * C125 +
             C808 * C126) *
                C153810 * C154022 -
            ((C134 * C1121 - C135 * C1110 - C134 * C1122 + C153792 * C1128) *
                 C126 +
             C1157 * C125 + C1156 * C124 + C1155 * C123 + C1154 * C122) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154106 +
             (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
                C153810 * C154022 -
            (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
             (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
              C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
              C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
              C24212 * C587 + C24206 * C606) *
                 C154106) *
                C153810 * C153775) *
               C154021 +
           (((C24212 * C1111 - C24213 * C1105 - C24212 * C1112 +
              C24206 * C1123 + C24214 * C1957 - C24215 * C1948 -
              C24214 * C1958 + C24207 * C1963 + C24216 * C4383 -
              C24217 * C4379 - C24216 * C4384 + C154071 * C4391) *
                 C154106 +
             (C25719 + C25720 + C25721) * C154087 +
             (C25722 + C25723 + C25724) * C154058) *
                C153810 * C153775 -
            (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C154106) *
                C153810 * C154022) *
               C153747) *
              C335 +
          ((((C24904 + C24903 + C24902) * C154106 +
             (C24901 + C24900 + C24899) * C154087 +
             (C25390 + C25391 + C25392) * C154058) *
                C153810 * C153775 -
            (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
             (C24293 + C24292 + C24291) * C154106) *
                C153810 * C154022) *
               C154021 +
           (((C24602 + C24601 + C24600) * C154106 +
             (C24599 + C24598 + C24597) * C154087 +
             (C25149 + C25150 + C25151) * C154058) *
                C153810 * C154022 -
            ((C24216 * C4389 - C24217 * C4382 - C24216 * C4390 +
              C154071 * C4394 + C24214 * C1951 - C24215 * C1945 -
              C24214 * C1952 + C24207 * C1960 + C24212 * C1117 -
              C24213 * C1108 - C24212 * C1118 + C24206 * C1126) *
                 C154058 +
             (C25724 + C25723 + C25722) * C154087 +
             (C25721 + C25720 + C25719) * C154106) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
             C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
             C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
             C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
             C28436 * C3193 - C28437 * C3189 - C28436 * C3194 +
             C28426 * C3201) *
                C153638 * C153810 * C154022 -
            (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
             C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
             C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
             C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
             C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
                C153638 * C153810 * C153775) *
               C154021 +
           ((C28428 * C1111 - C28429 * C1105 - C28428 * C1112 + C28422 * C1123 +
             C28430 * C1957 - C28431 * C1948 - C28430 * C1958 + C28423 * C1963 +
             C28432 * C4383 - C28433 * C4379 - C28432 * C4384 + C28424 * C4391 +
             C28434 * C5776 - C28435 * C5771 - C28434 * C5777 + C28425 * C5780 +
             C28436 * C29106 - C28437 * C29104 - C28436 * C29107 +
             C28426 * C29110) *
                C153638 * C153810 * C153775 -
            (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
             C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
             C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
             C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
             C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
                C153638 * C153810 * C154022) *
               C153747) *
              C335 +
          (((C28428 * C584 - C28429 * C569 - C28428 * C585 + C28422 * C605 +
             C28430 * C1113 - C28431 * C1106 - C28430 * C1114 + C28423 * C1124 +
             C28432 * C1955 - C28433 * C1947 - C28432 * C1956 + C28424 * C1962 +
             C28434 * C4385 - C28435 * C4380 - C28434 * C4386 + C28425 * C4392 +
             C28436 * C5774 - C28437 * C5770 - C28436 * C5775 +
             C28426 * C5779) *
                C153638 * C153810 * C153775 -
            (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
             C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
             C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
             C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
             C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
                C153638 * C153810 * C154022) *
               C154021 +
           ((C28428 * C355 - C28429 * C340 - C28428 * C356 + C28422 * C376 +
             C28430 * C361 - C28431 * C343 - C28430 * C362 + C28423 * C379 +
             C28432 * C1382 - C28433 * C1374 - C28432 * C1383 + C28424 * C1389 +
             C28434 * C3195 - C28435 * C3190 - C28434 * C3196 + C28425 * C3202 +
             C28436 * C4806 - C28437 * C4802 - C28436 * C4807 +
             C28426 * C4811) *
                C153638 * C153810 * C154022 -
            (C28436 * C29108 - C28437 * C29105 - C28436 * C29109 +
             C28426 * C29111 + C28434 * C5774 - C28435 * C5770 -
             C28434 * C5775 + C28425 * C5779 + C28432 * C4385 - C28433 * C4380 -
             C28432 * C4386 + C28424 * C4392 + C28430 * C1955 - C28431 * C1947 -
             C28430 * C1956 + C28423 * C1962 + C28428 * C1113 - C28429 * C1106 -
             C28428 * C1114 + C28422 * C1124) *
                C153638 * C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                  C154106 +
              C205 * C154087 + C206 * C154058) *
                 C47632 +
             (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
                C154022 -
            ((C48078 + C48079 + C48080) * C154074 +
             (C48077 + C48076 + C48075) * C47633 +
             (C48074 + C48073 + C48072) * C47632) *
                C153775) *
               C154021 +
           (((C48826 + C48827 + C48828) * C47632 +
             (C48829 + C48830 + C48831) * C47633 +
             (C9222 * C154106 + C8614 * C154087 + C8615 * C154058) * C154074) *
                C153775 -
            ((C48831 + C48830 + C48829) * C154074 +
             (C48828 + C48827 + C48826) * C47633 +
             (C436 * C154058 + C437 * C154087 +
              (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                  C154106) *
                 C47632) *
                C154022) *
               C153747) *
              C335 +
          ((((C48081 + C48082 + C48083) * C47632 +
             (C48084 + C48085 + C48086) * C47633 +
             (C48087 + C48088 + C48089) * C154074) *
                C153775 -
            (C48093 * C154074 + (C48083 + C48082 + C48081) * C47633 +
             (C207 * C154058 + C206 * C154087 + C205 * C154106) * C47632) *
                C154022) *
               C154021 +
           (((C437 * C154106 + C436 * C154087 + C435 * C154058) * C47632 +
             (C48832 + C48833 + C48834) * C47633 +
             (C48835 + C48836 + C48837) * C154074) *
                C154022 -
            (((C134 * C8574 - C135 * C8573 - C134 * C8575 + C153792 * C8576) *
                  C154058 +
              C8615 * C154087 + C8614 * C154106) *
                 C154074 +
             (C48837 + C48836 + C48835) * C47633 +
             (C48834 + C48833 + C48832) * C47632) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C153638 * C47632 +
             (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
                C154022 -
            ((C52133 + C52134 + C52135) * C153638 * C154074 +
             (C52132 + C52131 + C52130) * C153638 * C47633 +
             (C52129 + C52128 + C52127) * C153638 * C47632) *
                C153775) *
               C154021 +
           (((C52922 + C52923 + C52924) * C153638 * C47632 +
             (C52925 + C52926 + C52927) * C153638 * C47633 +
             (C2877 * C6379 - C2878 * C6368 - C2877 * C6380 + C154109 * C6386 +
              C2879 * C6377 - C2880 * C6367 - C2879 * C6378 + C154097 * C6385 +
              C2881 * C30186 - C2882 * C30183 - C2881 * C30187 +
              C154071 * C30189) *
                 C153638 * C154074) *
                C153775 -
            ((C52927 + C52926 + C52925) * C153638 * C154074 +
             (C52924 + C52923 + C52922) * C153638 * C47633 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C153638 * C47632) *
                C154022) *
               C153747) *
              C335 +
          ((((C3601 + C3600 + C3599) * C153638 * C47632 +
             (C3602 + C3603 + C3604) * C153638 * C47633 +
             (C52136 + C52137 + C52138) * C153638 * C154074) *
                C153775 -
            (C52126 * C154074 + (C3599 + C3600 + C3601) * C153638 * C47633 +
             (C2958 + C2957 + C2956) * C153638 * C47632) *
                C154022) *
               C154021 +
           (((C3283 + C3282 + C3281) * C153638 * C47632 +
             (C4432 + C4433 + C4434) * C153638 * C47633 +
             (C52928 + C52929 + C52930) * C153638 * C154074) *
                C154022 -
            ((C2881 * C32003 - C2882 * C32002 - C2881 * C32004 +
              C154071 * C32005 + C2879 * C6373 - C2880 * C6365 - C2879 * C6374 +
              C154097 * C6383 + C2877 * C6375 - C2878 * C6366 - C2877 * C6376 +
              C154109 * C6384) *
                 C153638 * C154074 +
             (C52930 + C52929 + C52928) * C153638 * C47633 +
             (C4434 + C4433 + C4432) * C153638 * C47632) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                   C122 +
               C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                  C153810 * C153711 * C153695 * C130 -
              (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
               C205 * C122) *
                  C153810 * C153711 * C153695 * C131 +
              (C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125 +
               C210 * C126) *
                  C153810 * C153711 * C153695 * C132 -
              ((C134 * C158 - C135 * C143 - C134 * C159 + C153792 * C167) *
                   C126 +
               C210 * C125 + C209 * C124 + C208 * C123 + C207 * C122) *
                  C153810 * C153711 * C153695 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                    C122 +
                C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                   C153810 * C153711 * C332 -
               (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
                (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                    C122) *
                   C153810 * C153711 * C333 +
               ((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                    C122 +
                C438 * C123 + C439 * C124 + C440 * C125 + C441 * C126) *
                   C153810 * C153711 * C334) *
                  C335 +
              ((C437 * C122 + C436 * C123 + C435 * C124 + C434 * C125 +
                (C134 * C369 - C135 * C347 - C134 * C370 + C153792 * C383) *
                    C126) *
                   C153810 * C153711 * C333 -
               (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
                C205 * C122) *
                   C153810 * C153711 * C332 -
               ((C134 * C371 - C135 * C348 - C134 * C372 + C153792 * C384) *
                    C126 +
                C441 * C125 + C440 * C124 + C439 * C123 + C438 * C122) *
                   C153810 * C153711 * C334) *
                  C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C563 -
           (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
            (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) * C122) *
               C153810 * C564 +
           ((C134 * C588 - C135 * C571 - C134 * C589 + C153792 * C607) * C122 +
            C667 * C123 + C668 * C124 + C669 * C125 + C670 * C126) *
               C153810 * C565) *
              C153695 * C335 +
          ((C666 * C122 + C665 * C123 + C664 * C124 + C663 * C125 +
            (C134 * C598 - C135 * C576 - C134 * C599 + C153792 * C612) * C126) *
               C153810 * C564 -
           (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
            C205 * C122) *
               C153810 * C563 -
           ((C134 * C600 - C135 * C577 - C134 * C601 + C153792 * C613) * C126 +
            C670 * C125 + C669 * C124 + C668 * C123 + C667 * C122) *
               C153810 * C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
            C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
            C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
               C2874 +
           (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
              C153810 * C153711 * C153695 * C130 -
          (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
           (C2958 + C2957 + C2956) * C2874) *
              C153810 * C153711 * C153695 * C131 +
          (C2970 * C2874 + (C2964 + C2963 + C2962) * C2875 +
           (C2965 + C2966 + C2967) * C154058) *
              C153810 * C153711 * C153695 * C132 -
          ((C2881 * C371 - C2882 * C348 - C2881 * C372 + C154071 * C384 +
            C2879 * C369 - C2880 * C347 - C2879 * C370 + C154097 * C383 +
            C2877 * C154 - C2878 * C141 - C2877 * C155 + C154109 * C165) *
               C154058 +
           (C2967 + C2966 + C2965) * C2875 + C2971 * C2874) *
              C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C153711 * C332 -
           ((C3278 + C3279 + C3280) * C154058 +
            (C3281 + C3282 + C3283) * C2875 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C2874) *
               C153810 * C153711 * C333 +
           ((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
             C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
             C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                C2874 +
            (C3284 + C3285 + C3286) * C2875 +
            (C3287 + C3288 + C3289) * C154058) *
               C153810 * C153711 * C334) *
              C335 +
          (((C3283 + C3282 + C3281) * C2874 + (C3280 + C3279 + C3278) * C2875 +
            (C2877 * C351 - C2878 * C338 - C2877 * C352 + C154109 * C374 +
             C2879 * C365 - C2880 * C345 - C2879 * C366 + C154097 * C381 +
             C2881 * C1378 - C2882 * C1372 - C2881 * C1379 + C154071 * C1387) *
                C154058) *
               C153810 * C153711 * C333 -
           (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
            (C2958 + C2957 + C2956) * C2874) *
               C153810 * C153711 * C332 -
           ((C2881 * C3199 - C2882 * C3192 - C2881 * C3200 + C154071 * C3204 +
             C2879 * C1378 - C2880 * C1372 - C2879 * C1379 + C154097 * C1387 +
             C2877 * C365 - C2878 * C345 - C2877 * C366 + C154109 * C381) *
                C154058 +
            (C3289 + C3288 + C3287) * C2875 + (C3286 + C3285 + C3284) * C2874) *
               C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C563 -
           ((C3596 + C3597 + C3598) * C154058 +
            (C3599 + C3600 + C3601) * C2875 +
            (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
             C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
             C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                C2874) *
               C153810 * C564 +
           ((C2877 * C588 - C2878 * C571 - C2877 * C589 + C154109 * C607 +
             C2879 * C1526 - C2880 * C1517 - C2879 * C1527 + C154097 * C1532 +
             C2881 * C3511 - C2882 * C3507 - C2881 * C3512 + C154071 * C3519) *
                C2874 +
            (C3602 + C3603 + C3604) * C2875 +
            (C3605 + C3606 + C3607) * C154058) *
               C153810 * C565) *
              C153695 * C335 +
          (((C3601 + C3600 + C3599) * C2874 + (C3598 + C3597 + C3596) * C2875 +
            (C2877 * C580 - C2878 * C567 - C2877 * C581 + C154109 * C603 +
             C2879 * C1117 - C2880 * C1108 - C2879 * C1118 + C154097 * C1126 +
             C2881 * C1951 - C2882 * C1945 - C2881 * C1952 + C154071 * C1960) *
                C154058) *
               C153810 * C564 -
           (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
            (C2958 + C2957 + C2956) * C2874) *
               C153810 * C563 -
           ((C2881 * C3517 - C2882 * C3510 - C2881 * C3518 + C154071 * C3522 +
             C2879 * C1520 - C2880 * C1514 - C2879 * C1521 + C154097 * C1529 +
             C2877 * C594 - C2878 * C574 - C2877 * C595 + C154109 * C610) *
                C154058 +
            (C3607 + C3606 + C3605) * C2875 + (C3604 + C3603 + C3602) * C2874) *
               C153810 * C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
            C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
            C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
               C154106 +
           (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
              C153810 * C153711 * C153695 * C130 -
          (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
           (C24293 + C24292 + C24291) * C154106) *
              C153810 * C153711 * C153695 * C131 +
          (C24305 * C154106 + (C24299 + C24298 + C24297) * C154087 +
           (C24300 + C24301 + C24302) * C154058) *
              C153810 * C153711 * C153695 * C132 -
          ((C24216 * C371 - C24217 * C348 - C24216 * C372 + C154071 * C384 +
            C24214 * C369 - C24215 * C347 - C24214 * C370 + C24207 * C383 +
            C24212 * C154 - C24213 * C141 - C24212 * C155 + C24206 * C165) *
               C154058 +
           (C24302 + C24301 + C24300) * C154087 + C24306 * C154106) *
              C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C153711 * C332 -
           ((C24597 + C24598 + C24599) * C154058 +
            (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C153711 * C333 +
           ((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C154106 +
            (C24603 + C24604 + C24605) * C154087 +
            (C24606 + C24607 + C24608) * C154058) *
               C153810 * C153711 * C334) *
              C335 +
          (((C24602 + C24601 + C24600) * C154106 +
            (C24599 + C24598 + C24597) * C154087 +
            (C24212 * C351 - C24213 * C338 - C24212 * C352 + C24206 * C374 +
             C24214 * C365 - C24215 * C345 - C24214 * C366 + C24207 * C381 +
             C24216 * C1378 - C24217 * C1372 - C24216 * C1379 +
             C154071 * C1387) *
                C154058) *
               C153810 * C153711 * C333 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C153711 * C332 -
           ((C24216 * C3199 - C24217 * C3192 - C24216 * C3200 +
             C154071 * C3204 + C24214 * C1378 - C24215 * C1372 -
             C24214 * C1379 + C24207 * C1387 + C24212 * C365 - C24213 * C345 -
             C24212 * C366 + C24206 * C381) *
                C154058 +
            (C24608 + C24607 + C24606) * C154087 +
            (C24605 + C24604 + C24603) * C154106) *
               C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C563 -
           ((C24899 + C24900 + C24901) * C154058 +
            (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C564 +
           ((C24212 * C588 - C24213 * C571 - C24212 * C589 + C24206 * C607 +
             C24214 * C1526 - C24215 * C1517 - C24214 * C1527 + C24207 * C1532 +
             C24216 * C3511 - C24217 * C3507 - C24216 * C3512 +
             C154071 * C3519) *
                C154106 +
            (C24905 + C24906 + C24907) * C154087 +
            (C24908 + C24909 + C24910) * C154058) *
               C153810 * C565) *
              C153695 * C335 +
          (((C24904 + C24903 + C24902) * C154106 +
            (C24901 + C24900 + C24899) * C154087 +
            (C24212 * C580 - C24213 * C567 - C24212 * C581 + C24206 * C603 +
             C24214 * C1117 - C24215 * C1108 - C24214 * C1118 + C24207 * C1126 +
             C24216 * C1951 - C24217 * C1945 - C24216 * C1952 +
             C154071 * C1960) *
                C154058) *
               C153810 * C564 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C563 -
           ((C24216 * C3517 - C24217 * C3510 - C24216 * C3518 +
             C154071 * C3522 + C24214 * C1520 - C24215 * C1514 -
             C24214 * C1521 + C24207 * C1529 + C24212 * C594 - C24213 * C574 -
             C24212 * C595 + C24206 * C610) *
                C154058 +
            (C24910 + C24909 + C24908) * C154087 +
            (C24907 + C24906 + C24905) * C154106) *
               C153810 * C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
           C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
           C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
           C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
           C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
              C153638 * C153810 * C153711 * C153695 * C130 -
          (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
           C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
           C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
           C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
           C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
              C153638 * C153810 * C153711 * C153695 * C131 +
          (C28428 * C148 - C28429 * C138 - C28428 * C149 + C28422 * C162 +
           C28430 * C353 - C28431 * C339 - C28430 * C354 + C28423 * C375 +
           C28432 * C363 - C28433 * C344 - C28432 * C364 + C28424 * C380 +
           C28434 * C1380 - C28435 * C1373 - C28434 * C1381 + C28425 * C1388 +
           C28436 * C3197 - C28437 * C3191 - C28436 * C3198 + C28426 * C3203) *
              C153638 * C153810 * C153711 * C153695 * C132 -
          (C28436 * C3199 - C28437 * C3192 - C28436 * C3200 + C28426 * C3204 +
           C28434 * C1378 - C28435 * C1372 - C28434 * C1379 + C28425 * C1387 +
           C28432 * C365 - C28433 * C345 - C28432 * C366 + C28424 * C381 +
           C28430 * C351 - C28431 * C338 - C28430 * C352 + C28423 * C374 +
           C28428 * C150 - C28429 * C139 - C28428 * C151 + C28422 * C163) *
              C153638 * C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C153711 * C332 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C153711 * C333 +
           (C28428 * C359 - C28429 * C342 - C28428 * C360 + C28422 * C378 +
            C28430 * C1384 - C28431 * C1375 - C28430 * C1385 + C28423 * C1390 +
            C28432 * C3193 - C28433 * C3189 - C28432 * C3194 + C28424 * C3201 +
            C28434 * C4808 - C28435 * C4803 - C28434 * C4809 + C28425 * C4812 +
            C28436 * C28562 - C28437 * C28560 - C28436 * C28563 +
            C28426 * C28566) *
               C153638 * C153810 * C153711 * C334) *
              C335 +
          ((C28428 * C355 - C28429 * C340 - C28428 * C356 + C28422 * C376 +
            C28430 * C361 - C28431 * C343 - C28430 * C362 + C28423 * C379 +
            C28432 * C1382 - C28433 * C1374 - C28432 * C1383 + C28424 * C1389 +
            C28434 * C3195 - C28435 * C3190 - C28434 * C3196 + C28425 * C3202 +
            C28436 * C4806 - C28437 * C4802 - C28436 * C4807 + C28426 * C4811) *
               C153638 * C153810 * C153711 * C333 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C153711 * C332 -
           (C28436 * C28564 - C28437 * C28561 - C28436 * C28565 +
            C28426 * C28567 + C28434 * C4806 - C28435 * C4802 - C28434 * C4807 +
            C28425 * C4811 + C28432 * C3195 - C28433 * C3190 - C28432 * C3196 +
            C28424 * C3202 + C28430 * C1382 - C28431 * C1374 - C28430 * C1383 +
            C28423 * C1389 + C28428 * C361 - C28429 * C343 - C28428 * C362 +
            C28422 * C379) *
               C153638 * C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C563 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C564 +
           (C28428 * C588 - C28429 * C571 - C28428 * C589 + C28422 * C607 +
            C28430 * C1526 - C28431 * C1517 - C28430 * C1527 + C28423 * C1532 +
            C28432 * C3511 - C28433 * C3507 - C28432 * C3512 + C28424 * C3519 +
            C28434 * C5038 - C28435 * C5033 - C28434 * C5039 + C28425 * C5042 +
            C28436 * C28692 - C28437 * C28690 - C28436 * C28693 +
            C28426 * C28696) *
               C153638 * C153810 * C565) *
              C153695 * C335 +
          ((C28428 * C584 - C28429 * C569 - C28428 * C585 + C28422 * C605 +
            C28430 * C1113 - C28431 * C1106 - C28430 * C1114 + C28423 * C1124 +
            C28432 * C1955 - C28433 * C1947 - C28432 * C1956 + C28424 * C1962 +
            C28434 * C4385 - C28435 * C4380 - C28434 * C4386 + C28425 * C4392 +
            C28436 * C5774 - C28437 * C5770 - C28436 * C5775 + C28426 * C5779) *
               C153638 * C153810 * C564 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C563 -
           (C28436 * C28694 - C28437 * C28691 - C28436 * C28695 +
            C28426 * C28697 + C28434 * C5036 - C28435 * C5032 - C28434 * C5037 +
            C28425 * C5041 + C28432 * C3513 - C28433 * C3508 - C28432 * C3514 +
            C28424 * C3520 + C28430 * C1524 - C28431 * C1516 - C28430 * C1525 +
            C28423 * C1531 + C28428 * C590 - C28429 * C572 - C28428 * C591 +
            C28422 * C608) *
               C153638 * C153810 * C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C154106 +
            C205 * C154087 + C206 * C154058) *
               C47632 +
           (C7817 * C154106 + C666 * C154087 + C665 * C154058) * C47633 +
           (C7818 * C154106 + C667 * C154087 + C668 * C154058) * C154074) *
              C153711 * C153695 * C130 -
          ((C669 * C154058 + C668 * C154087 + C667 * C154106) * C154074 +
           (C664 * C154058 + C665 * C154087 + C666 * C154106) * C47633 +
           (C207 * C154058 + C206 * C154087 + C205 * C154106) * C47632) *
              C153711 * C153695 * C131 +
          ((C206 * C154106 + C207 * C154087 + C208 * C154058) * C47632 +
           (C665 * C154106 + C664 * C154087 + C663 * C154058) * C47633 +
           (C668 * C154106 + C669 * C154087 + C670 * C154058) * C154074) *
              C153711 * C153695 * C132 -
          (((C134 * C600 - C135 * C577 - C134 * C601 + C153792 * C613) *
                C154058 +
            C670 * C154087 + C669 * C154106) *
               C154074 +
           (C943 * C154058 + C663 * C154087 + C664 * C154106) * C47633 +
           (C209 * C154058 + C208 * C154087 + C207 * C154106) * C47632) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154106 +
             C205 * C154087 + C206 * C154058) *
                C47632 +
            (C7817 * C154106 + C666 * C154087 + C665 * C154058) * C47633 +
            (C7818 * C154106 + C667 * C154087 + C668 * C154058) * C154074) *
               C153711 * C332 -
           ((C7517 * C154058 + C7518 * C154087 + C8613 * C154106) * C154074 +
            (C1155 * C154058 + C1154 * C154087 + C8612 * C154106) * C47633 +
            (C436 * C154058 + C437 * C154087 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154106) *
                C47632) *
               C153711 * C333 +
           (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C154106 +
             C438 * C154087 + C439 * C154058) *
                C47632 +
            (C9966 * C154106 + C7519 * C154087 + C7520 * C154058) * C47633 +
            (C9967 * C154106 + C7521 * C154087 + C7522 * C154058) * C154074) *
               C153711 * C334) *
              C335 +
          (((C437 * C154106 + C436 * C154087 + C435 * C154058) * C47632 +
            (C1154 * C154106 + C1155 * C154087 + C1156 * C154058) * C47633 +
            (C7518 * C154106 + C7517 * C154087 + C8059 * C154058) * C154074) *
               C153711 * C333 -
           ((C669 * C154058 + C668 * C154087 + C667 * C154106) * C154074 +
            (C664 * C154058 + C665 * C154087 + C666 * C154106) * C47633 +
            (C207 * C154058 + C206 * C154087 + C205 * C154106) * C47632) *
               C153711 * C332 -
           (((C134 * C3517 - C135 * C3510 - C134 * C3518 + C153792 * C3522) *
                 C154058 +
             C7522 * C154087 + C7521 * C154106) *
                C154074 +
            (C15452 * C154058 + C7520 * C154087 + C7519 * C154106) * C47633 +
            (C440 * C154058 + C439 * C154087 + C438 * C154106) * C47632) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154106 +
             C205 * C154087 + C206 * C154058) *
                C47632 +
            (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
               C563 -
           ((C48078 + C48079 + C48080) * C154074 +
            (C48077 + C48076 + C48075) * C47633 +
            (C48074 + C48073 + C48072) * C47632) *
               C564 +
           (C48092 * C47632 + (C48080 + C48079 + C48078) * C47633 +
            (C10574 * C154106 + C7822 * C154087 + C7823 * C154058) * C154074) *
               C565) *
              C153695 * C335 +
          (((C48081 + C48082 + C48083) * C47632 +
            (C48084 + C48085 + C48086) * C47633 +
            (C48087 + C48088 + C48089) * C154074) *
               C564 -
           (C48093 * C154074 + (C48083 + C48082 + C48081) * C47633 +
            (C207 * C154058 + C206 * C154087 + C205 * C154106) * C47632) *
               C563 -
           (((C134 * C7750 - C135 * C7743 - C134 * C7751 + C153792 * C7755) *
                 C154058 +
             C7823 * C154087 + C7822 * C154106) *
                C154074 +
            (C48089 + C48088 + C48087) * C47633 + C48093 * C47632) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
            C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
            C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
               C153638 * C47632 +
           (C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606 +
            C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
            C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963) *
               C153638 * C47633 +
           (C2877 * C588 - C2878 * C571 - C2877 * C589 + C154109 * C607 +
            C2879 * C1526 - C2880 * C1517 - C2879 * C1527 + C154097 * C1532 +
            C2881 * C3511 - C2882 * C3507 - C2881 * C3512 + C154071 * C3519) *
               C153638 * C154074) *
              C153711 * C153695 * C130 -
          ((C3604 + C3603 + C3602) * C153638 * C154074 +
           (C3599 + C3600 + C3601) * C153638 * C47633 +
           (C2958 + C2957 + C2956) * C153638 * C47632) *
              C153711 * C153695 * C131 +
          (C2970 * C153638 * C47632 +
           (C3598 + C3597 + C3596) * C153638 * C47633 +
           (C3605 + C3606 + C3607) * C153638 * C154074) *
              C153711 * C153695 * C132 -
          ((C2881 * C3517 - C2882 * C3510 - C2881 * C3518 + C154071 * C3522 +
            C2879 * C1520 - C2880 * C1514 - C2879 * C1521 + C154097 * C1529 +
            C2877 * C594 - C2878 * C574 - C2877 * C595 + C154109 * C610) *
               C153638 * C154074 +
           (C4089 + C4088 + C4087) * C153638 * C47633 +
           C2971 * C153638 * C47632) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C153638 * C47632 +
            (C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606 +
             C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
             C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963) *
                C153638 * C47633 +
            (C2877 * C588 - C2878 * C571 - C2877 * C589 + C154109 * C607 +
             C2879 * C1526 - C2880 * C1517 - C2879 * C1527 + C154097 * C1532 +
             C2881 * C3511 - C2882 * C3507 - C2881 * C3512 + C154071 * C3519) *
                C153638 * C154074) *
               C153711 * C332 -
           ((C2881 * C5038 - C2882 * C5033 - C2881 * C5039 + C154071 * C5042 +
             C2879 * C3511 - C2880 * C3507 - C2879 * C3512 + C154097 * C3519 +
             C2877 * C1526 - C2878 * C1517 - C2877 * C1527 + C154109 * C1532) *
                C153638 * C154074 +
            (C2881 * C4383 - C2882 * C4379 - C2881 * C4384 + C154071 * C4391 +
             C2879 * C1957 - C2880 * C1948 - C2879 * C1958 + C154097 * C1963 +
             C2877 * C1111 - C2878 * C1105 - C2877 * C1112 + C154109 * C1123) *
                C153638 * C47633 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C153638 * C47632) *
               C153711 * C333 +
           ((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
             C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
             C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                C153638 * C47632 +
            (C2877 * C1957 - C2878 * C1948 - C2877 * C1958 + C154109 * C1963 +
             C2879 * C4383 - C2880 * C4379 - C2879 * C4384 + C154097 * C4391 +
             C2881 * C5776 - C2882 * C5771 - C2881 * C5777 + C154071 * C5780) *
                C153638 * C47633 +
            (C2877 * C3511 - C2878 * C3507 - C2877 * C3512 + C154109 * C3519 +
             C2879 * C5038 - C2880 * C5033 - C2879 * C5039 + C154097 * C5042 +
             C2881 * C28692 - C2882 * C28690 - C2881 * C28693 +
             C154071 * C28696) *
                C153638 * C154074) *
               C153711 * C334) *
              C335 +
          (((C3283 + C3282 + C3281) * C153638 * C47632 +
            (C4432 + C4433 + C4434) * C153638 * C47633 +
            (C2877 * C1524 - C2878 * C1516 - C2877 * C1525 + C154109 * C1531 +
             C2879 * C3513 - C2880 * C3508 - C2879 * C3514 + C154097 * C3520 +
             C2881 * C5036 - C2882 * C5032 - C2881 * C5037 + C154071 * C5041) *
                C153638 * C154074) *
               C153711 * C333 -
           ((C3604 + C3603 + C3602) * C153638 * C154074 +
            (C3599 + C3600 + C3601) * C153638 * C47633 +
            (C2958 + C2957 + C2956) * C153638 * C47632) *
               C153711 * C332 -
           ((C2881 * C28694 - C2882 * C28691 - C2881 * C28695 +
             C154071 * C28697 + C2879 * C5036 - C2880 * C5032 - C2879 * C5037 +
             C154097 * C5041 + C2877 * C3513 - C2878 * C3508 - C2877 * C3514 +
             C154109 * C3520) *
                C153638 * C154074 +
            (C2881 * C5774 - C2882 * C5770 - C2881 * C5775 + C154071 * C5779 +
             C2879 * C4385 - C2880 * C4380 - C2879 * C4386 + C154097 * C4392 +
             C2877 * C1955 - C2878 * C1947 - C2877 * C1956 + C154109 * C1962) *
                C153638 * C47633 +
            (C3286 + C3285 + C3284) * C153638 * C47632) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C153638 * C47632 +
            (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
               C563 -
           ((C52133 + C52134 + C52135) * C153638 * C154074 +
            (C52132 + C52131 + C52130) * C153638 * C47633 +
            (C52129 + C52128 + C52127) * C153638 * C47632) *
               C564 +
           (C52141 * C47632 + (C52135 + C52134 + C52133) * C153638 * C47633 +
            (C2877 * C7744 - C2878 * C7740 - C2877 * C7745 + C154109 * C7752 +
             C2879 * C9206 - C2880 * C9201 - C2879 * C9207 + C154097 * C9210 +
             C2881 * C31180 - C2882 * C31178 - C2881 * C31181 +
             C154071 * C31184) *
                C153638 * C154074) *
               C565) *
              C153695 * C335 +
          (((C3601 + C3600 + C3599) * C153638 * C47632 +
            (C3602 + C3603 + C3604) * C153638 * C47633 +
            (C52136 + C52137 + C52138) * C153638 * C154074) *
               C564 -
           (C52126 * C154074 + (C3599 + C3600 + C3601) * C153638 * C47633 +
            (C2958 + C2957 + C2956) * C153638 * C47632) *
               C563 -
           ((C2881 * C31182 - C2882 * C31179 - C2881 * C31183 +
             C154071 * C31185 + C2879 * C9204 - C2880 * C9200 - C2879 * C9205 +
             C154097 * C9209 + C2877 * C7746 - C2878 * C7741 - C2877 * C7747 +
             C154109 * C7753) *
                C153638 * C154074 +
            (C52138 + C52137 + C52136) * C153638 * C47633 + C52126 * C47632) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C154022 -
           (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
            (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
             C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
             C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                C2874) *
               C153810 * C153775) *
              C153695 * C154090 +
          (((C3601 + C3600 + C3599) * C2874 + (C3598 + C3597 + C3596) * C2875 +
            (C4087 + C4088 + C4089) * C154058) *
               C153810 * C153775 -
           (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
            (C2958 + C2957 + C2956) * C2874) *
               C153810 * C154022) *
              C153695 * C154091 +
          ((C2970 * C2874 + (C2964 + C2963 + C2962) * C2875 +
            (C2965 + C2966 + C2967) * C154058) *
               C153810 * C154022 -
           ((C2881 * C1949 - C2882 * C1944 - C2881 * C1950 + C154071 * C1959 +
             C2879 * C1119 - C2880 * C1109 - C2879 * C1120 + C154097 * C1127 +
             C2877 * C578 - C2878 * C566 - C2877 * C579 + C154109 * C602) *
                C154058 +
            (C4089 + C4088 + C4087) * C2875 + C4080 * C2874) *
               C153810 * C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C154022 -
           (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
            (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) * C122) *
               C153810 * C153775) *
              C153695 * C154090 +
          ((C666 * C122 + C665 * C123 + C664 * C124 + C663 * C125 +
            C943 * C126) *
               C153810 * C153775 -
           (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
            C205 * C122) *
               C153810 * C154022) *
              C153695 * C154091 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125 +
            C210 * C126) *
               C153810 * C154022 -
           ((C134 * C933 - C135 * C932 - C134 * C934 + C153792 * C935) * C126 +
            C943 * C125 + C663 * C124 + C664 * C123 + C665 * C122) *
               C153810 * C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C154022 -
           (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C153775) *
              C153695 * C154090 +
          (((C24904 + C24903 + C24902) * C154106 +
            (C24901 + C24900 + C24899) * C154087 +
            (C25390 + C25391 + C25392) * C154058) *
               C153810 * C153775 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C154022) *
              C153695 * C154091 +
          ((C24305 * C154106 + (C24299 + C24298 + C24297) * C154087 +
            (C24300 + C24301 + C24302) * C154058) *
               C153810 * C154022 -
           ((C24216 * C1949 - C24217 * C1944 - C24216 * C1950 +
             C154071 * C1959 + C24214 * C1119 - C24215 * C1109 -
             C24214 * C1120 + C24207 * C1127 + C24212 * C578 - C24213 * C566 -
             C24212 * C579 + C24206 * C602) *
                C154058 +
            (C25392 + C25391 + C25390) * C154087 + C25383 * C154106) *
               C153810 * C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C154022 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C153775) *
              C153695 * C154090 +
          ((C28428 * C584 - C28429 * C569 - C28428 * C585 + C28422 * C605 +
            C28430 * C1113 - C28431 * C1106 - C28430 * C1114 + C28423 * C1124 +
            C28432 * C1955 - C28433 * C1947 - C28432 * C1956 + C28424 * C1962 +
            C28434 * C4385 - C28435 * C4380 - C28434 * C4386 + C28425 * C4392 +
            C28436 * C5774 - C28437 * C5770 - C28436 * C5775 + C28426 * C5779) *
               C153638 * C153810 * C153775 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C154022) *
              C153695 * C154091 +
          ((C28428 * C148 - C28429 * C138 - C28428 * C149 + C28422 * C162 +
            C28430 * C353 - C28431 * C339 - C28430 * C354 + C28423 * C375 +
            C28432 * C363 - C28433 * C344 - C28432 * C364 + C28424 * C380 +
            C28434 * C1380 - C28435 * C1373 - C28434 * C1381 + C28425 * C1388 +
            C28436 * C3197 - C28437 * C3191 - C28436 * C3198 + C28426 * C3203) *
               C153638 * C153810 * C154022 -
           (C28436 * C5772 - C28437 * C5769 - C28436 * C5773 + C28426 * C5778 +
            C28434 * C4387 - C28435 * C4381 - C28434 * C4388 + C28425 * C4393 +
            C28432 * C1953 - C28433 * C1946 - C28432 * C1954 + C28424 * C1961 +
            C28430 * C1115 - C28431 * C1107 - C28430 * C1116 + C28423 * C1125 +
            C28428 * C582 - C28429 * C568 - C28428 * C583 + C28422 * C604) *
               C153638 * C153810 * C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154106 +
             C205 * C154087 + C206 * C154058) *
                C47632 +
            (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
               C154022 -
           ((C48078 + C48079 + C48080) * C154074 +
            (C48077 + C48076 + C48075) * C47633 +
            (C48074 + C48073 + C48072) * C47632) *
               C153775) *
              C153695 * C154090 +
          (((C48081 + C48082 + C48083) * C47632 +
            (C48084 + C48085 + C48086) * C47633 +
            (C48087 + C48088 + C48089) * C154074) *
               C153775 -
           (C48093 * C154074 + (C48083 + C48082 + C48081) * C47633 +
            (C207 * C154058 + C206 * C154087 + C205 * C154106) * C47632) *
               C154022) *
              C153695 * C154091 +
          (((C206 * C154106 + C207 * C154087 + C208 * C154058) * C47632 +
            (C48530 + C48531 + C48532) * C47633 +
            (C48533 + C48534 + C48535) * C154074) *
               C154022 -
           (((C134 * C2301 - C135 * C2296 - C134 * C2302 + C153792 * C2311) *
                 C154058 +
             C7824 * C154087 + C7819 * C154106) *
                C154074 +
            (C48535 + C48534 + C48533) * C47633 +
            (C48532 + C48531 + C48530) * C47632) *
               C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C153638 * C47632 +
            (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
               C154022 -
           ((C52133 + C52134 + C52135) * C153638 * C154074 +
            (C52132 + C52131 + C52130) * C153638 * C47633 +
            (C52129 + C52128 + C52127) * C153638 * C47632) *
               C153775) *
              C153695 * C154090 +
          (((C3601 + C3600 + C3599) * C153638 * C47632 +
            (C3602 + C3603 + C3604) * C153638 * C47633 +
            (C52136 + C52137 + C52138) * C153638 * C154074) *
               C153775 -
           (C52126 * C154074 + (C3599 + C3600 + C3601) * C153638 * C47633 +
            (C2958 + C2957 + C2956) * C153638 * C47632) *
               C154022) *
              C153695 * C154091 +
          ((C2970 * C153638 * C47632 +
            (C3598 + C3597 + C3596) * C153638 * C47633 +
            (C3605 + C3606 + C3607) * C153638 * C154074) *
               C154022 -
           ((C2881 * C6369 - C2882 * C6363 - C2881 * C6370 + C154071 * C6381 +
             C2879 * C6371 - C2880 * C6364 - C2879 * C6372 + C154097 * C6382 +
             C2877 * C2305 - C2878 * C2298 - C2877 * C2306 + C154109 * C2313) *
                C153638 * C154074 +
            (C3607 + C3606 + C3605) * C153638 * C47633 +
            C4080 * C153638 * C47632) *
               C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C153711 * C332 -
           (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) * C122) *
               C153810 * C153711 * C333 +
           ((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) * C122 +
            C438 * C123 + C439 * C124 + C440 * C125 + C441 * C126) *
               C153810 * C153711 * C334) *
              C335 +
          ((C437 * C122 + C436 * C123 + C435 * C124 + C434 * C125 +
            (C134 * C369 - C135 * C347 - C134 * C370 + C153792 * C383) * C126) *
               C153810 * C153711 * C333 -
           (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
            C205 * C122) *
               C153810 * C153711 * C332 -
           ((C134 * C371 - C135 * C348 - C134 * C372 + C153792 * C384) * C126 +
            C441 * C125 + C440 * C124 + C439 * C123 + C438 * C122) *
               C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
           C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
              C153810 * C153711 * C153695 * C130 -
          (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
           C205 * C122) *
              C153810 * C153711 * C153695 * C131 +
          (C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125 +
           C210 * C126) *
              C153810 * C153711 * C153695 * C132 -
          ((C134 * C158 - C135 * C143 - C134 * C159 + C153792 * C167) * C126 +
           C210 * C125 + C209 * C124 + C208 * C123 + C207 * C122) *
              C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
            C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
            C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
               C2874 +
           (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
              C153810 * C153711 * C153695 * C130 -
          (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
           (C2958 + C2957 + C2956) * C2874) *
              C153810 * C153711 * C153695 * C131 +
          (C2970 * C2874 + (C2964 + C2963 + C2962) * C2875 +
           (C2965 + C2966 + C2967) * C154058) *
              C153810 * C153711 * C153695 * C132 -
          ((C2881 * C371 - C2882 * C348 - C2881 * C372 + C154071 * C384 +
            C2879 * C369 - C2880 * C347 - C2879 * C370 + C154097 * C383 +
            C2877 * C154 - C2878 * C141 - C2877 * C155 + C154109 * C165) *
               C154058 +
           (C2967 + C2966 + C2965) * C2875 + C2971 * C2874) *
              C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C153711 * C332 -
           ((C3278 + C3279 + C3280) * C154058 +
            (C3281 + C3282 + C3283) * C2875 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C2874) *
               C153810 * C153711 * C333 +
           ((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
             C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
             C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                C2874 +
            (C3284 + C3285 + C3286) * C2875 +
            (C3287 + C3288 + C3289) * C154058) *
               C153810 * C153711 * C334) *
              C335 +
          (((C3283 + C3282 + C3281) * C2874 + (C3280 + C3279 + C3278) * C2875 +
            (C2877 * C351 - C2878 * C338 - C2877 * C352 + C154109 * C374 +
             C2879 * C365 - C2880 * C345 - C2879 * C366 + C154097 * C381 +
             C2881 * C1378 - C2882 * C1372 - C2881 * C1379 + C154071 * C1387) *
                C154058) *
               C153810 * C153711 * C333 -
           (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
            (C2958 + C2957 + C2956) * C2874) *
               C153810 * C153711 * C332 -
           ((C2881 * C3199 - C2882 * C3192 - C2881 * C3200 + C154071 * C3204 +
             C2879 * C1378 - C2880 * C1372 - C2879 * C1379 + C154097 * C1387 +
             C2877 * C365 - C2878 * C345 - C2877 * C366 + C154109 * C381) *
                C154058 +
            (C3289 + C3288 + C3287) * C2875 + (C3286 + C3285 + C3284) * C2874) *
               C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
            C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
            C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
               C154106 +
           (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
              C153810 * C153711 * C153695 * C130 -
          (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
           (C24293 + C24292 + C24291) * C154106) *
              C153810 * C153711 * C153695 * C131 +
          (C24305 * C154106 + (C24299 + C24298 + C24297) * C154087 +
           (C24300 + C24301 + C24302) * C154058) *
              C153810 * C153711 * C153695 * C132 -
          ((C24216 * C371 - C24217 * C348 - C24216 * C372 + C154071 * C384 +
            C24214 * C369 - C24215 * C347 - C24214 * C370 + C24207 * C383 +
            C24212 * C154 - C24213 * C141 - C24212 * C155 + C24206 * C165) *
               C154058 +
           (C24302 + C24301 + C24300) * C154087 + C24306 * C154106) *
              C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C153711 * C332 -
           ((C24597 + C24598 + C24599) * C154058 +
            (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C153711 * C333 +
           ((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C154106 +
            (C24603 + C24604 + C24605) * C154087 +
            (C24606 + C24607 + C24608) * C154058) *
               C153810 * C153711 * C334) *
              C335 +
          (((C24602 + C24601 + C24600) * C154106 +
            (C24599 + C24598 + C24597) * C154087 +
            (C24212 * C351 - C24213 * C338 - C24212 * C352 + C24206 * C374 +
             C24214 * C365 - C24215 * C345 - C24214 * C366 + C24207 * C381 +
             C24216 * C1378 - C24217 * C1372 - C24216 * C1379 +
             C154071 * C1387) *
                C154058) *
               C153810 * C153711 * C333 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C153711 * C332 -
           ((C24216 * C3199 - C24217 * C3192 - C24216 * C3200 +
             C154071 * C3204 + C24214 * C1378 - C24215 * C1372 -
             C24214 * C1379 + C24207 * C1387 + C24212 * C365 - C24213 * C345 -
             C24212 * C366 + C24206 * C381) *
                C154058 +
            (C24608 + C24607 + C24606) * C154087 +
            (C24605 + C24604 + C24603) * C154106) *
               C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
           C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
           C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
           C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
           C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
              C153638 * C153810 * C153711 * C153695 * C130 -
          (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
           C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
           C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
           C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
           C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
              C153638 * C153810 * C153711 * C153695 * C131 +
          (C28428 * C148 - C28429 * C138 - C28428 * C149 + C28422 * C162 +
           C28430 * C353 - C28431 * C339 - C28430 * C354 + C28423 * C375 +
           C28432 * C363 - C28433 * C344 - C28432 * C364 + C28424 * C380 +
           C28434 * C1380 - C28435 * C1373 - C28434 * C1381 + C28425 * C1388 +
           C28436 * C3197 - C28437 * C3191 - C28436 * C3198 + C28426 * C3203) *
              C153638 * C153810 * C153711 * C153695 * C132 -
          (C28436 * C3199 - C28437 * C3192 - C28436 * C3200 + C28426 * C3204 +
           C28434 * C1378 - C28435 * C1372 - C28434 * C1379 + C28425 * C1387 +
           C28432 * C365 - C28433 * C345 - C28432 * C366 + C28424 * C381 +
           C28430 * C351 - C28431 * C338 - C28430 * C352 + C28423 * C374 +
           C28428 * C150 - C28429 * C139 - C28428 * C151 + C28422 * C163) *
              C153638 * C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C153711 * C332 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C153711 * C333 +
           (C28428 * C359 - C28429 * C342 - C28428 * C360 + C28422 * C378 +
            C28430 * C1384 - C28431 * C1375 - C28430 * C1385 + C28423 * C1390 +
            C28432 * C3193 - C28433 * C3189 - C28432 * C3194 + C28424 * C3201 +
            C28434 * C4808 - C28435 * C4803 - C28434 * C4809 + C28425 * C4812 +
            C28436 * C28562 - C28437 * C28560 - C28436 * C28563 +
            C28426 * C28566) *
               C153638 * C153810 * C153711 * C334) *
              C335 +
          ((C28428 * C355 - C28429 * C340 - C28428 * C356 + C28422 * C376 +
            C28430 * C361 - C28431 * C343 - C28430 * C362 + C28423 * C379 +
            C28432 * C1382 - C28433 * C1374 - C28432 * C1383 + C28424 * C1389 +
            C28434 * C3195 - C28435 * C3190 - C28434 * C3196 + C28425 * C3202 +
            C28436 * C4806 - C28437 * C4802 - C28436 * C4807 + C28426 * C4811) *
               C153638 * C153810 * C153711 * C333 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C153711 * C332 -
           (C28436 * C28564 - C28437 * C28561 - C28436 * C28565 +
            C28426 * C28567 + C28434 * C4806 - C28435 * C4802 - C28434 * C4807 +
            C28425 * C4811 + C28432 * C3195 - C28433 * C3190 - C28432 * C3196 +
            C28424 * C3202 + C28430 * C1382 - C28431 * C1374 - C28430 * C1383 +
            C28423 * C1389 + C28428 * C361 - C28429 * C343 - C28428 * C362 +
            C28422 * C379) *
               C153638 * C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C154106 +
            C205 * C154087 + C206 * C154058) *
               C47632 +
           (C7817 * C154106 + C666 * C154087 + C665 * C154058) * C47633 +
           (C7818 * C154106 + C667 * C154087 + C668 * C154058) * C154074) *
              C153711 * C153695 * C130 -
          ((C669 * C154058 + C668 * C154087 + C667 * C154106) * C154074 +
           (C664 * C154058 + C665 * C154087 + C666 * C154106) * C47633 +
           (C207 * C154058 + C206 * C154087 + C205 * C154106) * C47632) *
              C153711 * C153695 * C131 +
          ((C206 * C154106 + C207 * C154087 + C208 * C154058) * C47632 +
           (C665 * C154106 + C664 * C154087 + C663 * C154058) * C47633 +
           (C668 * C154106 + C669 * C154087 + C670 * C154058) * C154074) *
              C153711 * C153695 * C132 -
          (((C134 * C600 - C135 * C577 - C134 * C601 + C153792 * C613) *
                C154058 +
            C670 * C154087 + C669 * C154106) *
               C154074 +
           (C943 * C154058 + C663 * C154087 + C664 * C154106) * C47633 +
           (C209 * C154058 + C208 * C154087 + C207 * C154106) * C47632) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154106 +
             C205 * C154087 + C206 * C154058) *
                C47632 +
            (C7817 * C154106 + C666 * C154087 + C665 * C154058) * C47633 +
            (C7818 * C154106 + C667 * C154087 + C668 * C154058) * C154074) *
               C153711 * C332 -
           ((C7517 * C154058 + C7518 * C154087 + C8613 * C154106) * C154074 +
            (C1155 * C154058 + C1154 * C154087 + C8612 * C154106) * C47633 +
            (C436 * C154058 + C437 * C154087 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154106) *
                C47632) *
               C153711 * C333 +
           (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C154106 +
             C438 * C154087 + C439 * C154058) *
                C47632 +
            (C9966 * C154106 + C7519 * C154087 + C7520 * C154058) * C47633 +
            (C9967 * C154106 + C7521 * C154087 + C7522 * C154058) * C154074) *
               C153711 * C334) *
              C335 +
          (((C437 * C154106 + C436 * C154087 + C435 * C154058) * C47632 +
            (C1154 * C154106 + C1155 * C154087 + C1156 * C154058) * C47633 +
            (C7518 * C154106 + C7517 * C154087 + C8059 * C154058) * C154074) *
               C153711 * C333 -
           ((C669 * C154058 + C668 * C154087 + C667 * C154106) * C154074 +
            (C664 * C154058 + C665 * C154087 + C666 * C154106) * C47633 +
            (C207 * C154058 + C206 * C154087 + C205 * C154106) * C47632) *
               C153711 * C332 -
           (((C134 * C3517 - C135 * C3510 - C134 * C3518 + C153792 * C3522) *
                 C154058 +
             C7522 * C154087 + C7521 * C154106) *
                C154074 +
            (C15452 * C154058 + C7520 * C154087 + C7519 * C154106) * C47633 +
            (C440 * C154058 + C439 * C154087 + C438 * C154106) * C47632) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
            C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
            C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
               C153638 * C47632 +
           (C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606 +
            C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
            C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963) *
               C153638 * C47633 +
           (C2877 * C588 - C2878 * C571 - C2877 * C589 + C154109 * C607 +
            C2879 * C1526 - C2880 * C1517 - C2879 * C1527 + C154097 * C1532 +
            C2881 * C3511 - C2882 * C3507 - C2881 * C3512 + C154071 * C3519) *
               C153638 * C154074) *
              C153711 * C153695 * C130 -
          ((C3604 + C3603 + C3602) * C153638 * C154074 +
           (C3599 + C3600 + C3601) * C153638 * C47633 +
           (C2958 + C2957 + C2956) * C153638 * C47632) *
              C153711 * C153695 * C131 +
          (C2970 * C153638 * C47632 +
           (C3598 + C3597 + C3596) * C153638 * C47633 +
           (C3605 + C3606 + C3607) * C153638 * C154074) *
              C153711 * C153695 * C132 -
          ((C2881 * C3517 - C2882 * C3510 - C2881 * C3518 + C154071 * C3522 +
            C2879 * C1520 - C2880 * C1514 - C2879 * C1521 + C154097 * C1529 +
            C2877 * C594 - C2878 * C574 - C2877 * C595 + C154109 * C610) *
               C153638 * C154074 +
           (C4089 + C4088 + C4087) * C153638 * C47633 +
           C2971 * C153638 * C47632) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C153638 * C47632 +
            (C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606 +
             C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
             C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963) *
                C153638 * C47633 +
            (C2877 * C588 - C2878 * C571 - C2877 * C589 + C154109 * C607 +
             C2879 * C1526 - C2880 * C1517 - C2879 * C1527 + C154097 * C1532 +
             C2881 * C3511 - C2882 * C3507 - C2881 * C3512 + C154071 * C3519) *
                C153638 * C154074) *
               C153711 * C332 -
           ((C2881 * C5038 - C2882 * C5033 - C2881 * C5039 + C154071 * C5042 +
             C2879 * C3511 - C2880 * C3507 - C2879 * C3512 + C154097 * C3519 +
             C2877 * C1526 - C2878 * C1517 - C2877 * C1527 + C154109 * C1532) *
                C153638 * C154074 +
            (C2881 * C4383 - C2882 * C4379 - C2881 * C4384 + C154071 * C4391 +
             C2879 * C1957 - C2880 * C1948 - C2879 * C1958 + C154097 * C1963 +
             C2877 * C1111 - C2878 * C1105 - C2877 * C1112 + C154109 * C1123) *
                C153638 * C47633 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C153638 * C47632) *
               C153711 * C333 +
           ((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
             C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
             C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                C153638 * C47632 +
            (C2877 * C1957 - C2878 * C1948 - C2877 * C1958 + C154109 * C1963 +
             C2879 * C4383 - C2880 * C4379 - C2879 * C4384 + C154097 * C4391 +
             C2881 * C5776 - C2882 * C5771 - C2881 * C5777 + C154071 * C5780) *
                C153638 * C47633 +
            (C2877 * C3511 - C2878 * C3507 - C2877 * C3512 + C154109 * C3519 +
             C2879 * C5038 - C2880 * C5033 - C2879 * C5039 + C154097 * C5042 +
             C2881 * C28692 - C2882 * C28690 - C2881 * C28693 +
             C154071 * C28696) *
                C153638 * C154074) *
               C153711 * C334) *
              C335 +
          (((C3283 + C3282 + C3281) * C153638 * C47632 +
            (C4432 + C4433 + C4434) * C153638 * C47633 +
            (C2877 * C1524 - C2878 * C1516 - C2877 * C1525 + C154109 * C1531 +
             C2879 * C3513 - C2880 * C3508 - C2879 * C3514 + C154097 * C3520 +
             C2881 * C5036 - C2882 * C5032 - C2881 * C5037 + C154071 * C5041) *
                C153638 * C154074) *
               C153711 * C333 -
           ((C3604 + C3603 + C3602) * C153638 * C154074 +
            (C3599 + C3600 + C3601) * C153638 * C47633 +
            (C2958 + C2957 + C2956) * C153638 * C47632) *
               C153711 * C332 -
           ((C2881 * C28694 - C2882 * C28691 - C2881 * C28695 +
             C154071 * C28697 + C2879 * C5036 - C2880 * C5032 - C2879 * C5037 +
             C154097 * C5041 + C2877 * C3513 - C2878 * C3508 - C2877 * C3514 +
             C154109 * C3520) *
                C153638 * C154074 +
            (C2881 * C5774 - C2882 * C5770 - C2881 * C5775 + C154071 * C5779 +
             C2879 * C4385 - C2880 * C4380 - C2879 * C4386 + C154097 * C4392 +
             C2877 * C1955 - C2878 * C1947 - C2877 * C1956 + C154109 * C1962) *
                C153638 * C47633 +
            (C3286 + C3285 + C3284) * C153638 * C47632) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C153711 * C154092 -
           (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C2874) *
               C153810 * C153711 * C154093 +
           ((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
             C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
             C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                C2874 +
            (C3284 + C3285 + C3286) * C2875 +
            (C3287 + C3288 + C3289) * C154058) *
               C153810 * C153711 * C1657) *
              C154013 +
          (((C3283 + C3282 + C3281) * C2874 + (C3280 + C3279 + C3278) * C2875 +
            (C3846 + C3847 + C3848) * C154058) *
               C153810 * C153711 * C154093 -
           (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
            (C2958 + C2957 + C2956) * C2874) *
               C153810 * C153711 * C154092 -
           ((C2881 * C3199 - C2882 * C3192 - C2881 * C3200 + C154071 * C3204 +
             C2879 * C1378 - C2880 * C1372 - C2879 * C1379 + C154097 * C1387 +
             C2877 * C365 - C2878 * C345 - C2877 * C366 + C154109 * C381) *
                C154058 +
            (C3289 + C3288 + C3287) * C2875 + (C3286 + C3285 + C3284) * C2874) *
               C153810 * C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C153711 * C154092 -
           (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) * C122) *
               C153810 * C153711 * C154093 +
           ((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) * C122 +
            C438 * C123 + C439 * C124 + C440 * C125 + C441 * C126) *
               C153810 * C153711 * C1657) *
              C154013 +
          ((C437 * C122 + C436 * C123 + C435 * C124 + C434 * C125 +
            C808 * C126) *
               C153810 * C153711 * C154093 -
           (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
            C205 * C122) *
               C153810 * C153711 * C154092 -
           ((C134 * C371 - C135 * C348 - C134 * C372 + C153792 * C384) * C126 +
            C441 * C125 + C440 * C124 + C439 * C123 + C438 * C122) *
               C153810 * C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C153711 * C154092 -
           (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C153711 * C154093 +
           ((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C154106 +
            (C24603 + C24604 + C24605) * C154087 +
            (C24606 + C24607 + C24608) * C154058) *
               C153810 * C153711 * C1657) *
              C154013 +
          (((C24602 + C24601 + C24600) * C154106 +
            (C24599 + C24598 + C24597) * C154087 +
            (C25149 + C25150 + C25151) * C154058) *
               C153810 * C153711 * C154093 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C153711 * C154092 -
           ((C24216 * C3199 - C24217 * C3192 - C24216 * C3200 +
             C154071 * C3204 + C24214 * C1378 - C24215 * C1372 -
             C24214 * C1379 + C24207 * C1387 + C24212 * C365 - C24213 * C345 -
             C24212 * C366 + C24206 * C381) *
                C154058 +
            (C24608 + C24607 + C24606) * C154087 +
            (C24605 + C24604 + C24603) * C154106) *
               C153810 * C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C153711 * C154092 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C153711 * C154093 +
           (C28428 * C359 - C28429 * C342 - C28428 * C360 + C28422 * C378 +
            C28430 * C1384 - C28431 * C1375 - C28430 * C1385 + C28423 * C1390 +
            C28432 * C3193 - C28433 * C3189 - C28432 * C3194 + C28424 * C3201 +
            C28434 * C4808 - C28435 * C4803 - C28434 * C4809 + C28425 * C4812 +
            C28436 * C28562 - C28437 * C28560 - C28436 * C28563 +
            C28426 * C28566) *
               C153638 * C153810 * C153711 * C1657) *
              C154013 +
          ((C28428 * C355 - C28429 * C340 - C28428 * C356 + C28422 * C376 +
            C28430 * C361 - C28431 * C343 - C28430 * C362 + C28423 * C379 +
            C28432 * C1382 - C28433 * C1374 - C28432 * C1383 + C28424 * C1389 +
            C28434 * C3195 - C28435 * C3190 - C28434 * C3196 + C28425 * C3202 +
            C28436 * C4806 - C28437 * C4802 - C28436 * C4807 + C28426 * C4811) *
               C153638 * C153810 * C153711 * C154093 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C153711 * C154092 -
           (C28436 * C28564 - C28437 * C28561 - C28436 * C28565 +
            C28426 * C28567 + C28434 * C4806 - C28435 * C4802 - C28434 * C4807 +
            C28425 * C4811 + C28432 * C3195 - C28433 * C3190 - C28432 * C3196 +
            C28424 * C3202 + C28430 * C1382 - C28431 * C1374 - C28430 * C1383 +
            C28423 * C1389 + C28428 * C361 - C28429 * C343 - C28428 * C362 +
            C28422 * C379) *
               C153638 * C153810 * C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154106 +
             C205 * C154087 + C206 * C154058) *
                C47632 +
            (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
               C153711 * C154092 -
           (C49424 * C154074 + (C48828 + C48827 + C48826) * C47633 +
            (C436 * C154058 + C437 * C154087 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154106) *
                C47632) *
               C153711 * C154093 +
           (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C154106 +
             C438 * C154087 + C439 * C154058) *
                C47632 +
            (C9966 * C154106 + C7519 * C154087 + C7520 * C154058) * C47633 +
            (C9967 * C154106 + C7521 * C154087 + C7522 * C154058) * C154074) *
               C153711 * C1657) *
              C154013 +
          (((C437 * C154106 + C436 * C154087 + C435 * C154058) * C47632 +
            (C48832 + C48833 + C48834) * C47633 +
            (C48835 + C48836 + C48837) * C154074) *
               C153711 * C154093 -
           (C48093 * C154074 + (C48083 + C48082 + C48081) * C47633 +
            (C207 * C154058 + C206 * C154087 + C205 * C154106) * C47632) *
               C153711 * C154092 -
           (((C134 * C3517 - C135 * C3510 - C134 * C3518 + C153792 * C3522) *
                 C154058 +
             C7522 * C154087 + C7521 * C154106) *
                C154074 +
            (C15452 * C154058 + C7520 * C154087 + C7519 * C154106) * C47633 +
            (C440 * C154058 + C439 * C154087 + C438 * C154106) * C47632) *
               C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C153638 * C47632 +
            (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
               C153711 * C154092 -
           (C53533 * C154074 + (C52924 + C52923 + C52922) * C153638 * C47633 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C153638 * C47632) *
               C153711 * C154093 +
           ((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
             C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
             C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                C153638 * C47632 +
            (C2877 * C1957 - C2878 * C1948 - C2877 * C1958 + C154109 * C1963 +
             C2879 * C4383 - C2880 * C4379 - C2879 * C4384 + C154097 * C4391 +
             C2881 * C5776 - C2882 * C5771 - C2881 * C5777 + C154071 * C5780) *
                C153638 * C47633 +
            (C2877 * C3511 - C2878 * C3507 - C2877 * C3512 + C154109 * C3519 +
             C2879 * C5038 - C2880 * C5033 - C2879 * C5039 + C154097 * C5042 +
             C2881 * C28692 - C2882 * C28690 - C2881 * C28693 +
             C154071 * C28696) *
                C153638 * C154074) *
               C153711 * C1657) *
              C154013 +
          (((C3283 + C3282 + C3281) * C153638 * C47632 +
            (C4432 + C4433 + C4434) * C153638 * C47633 +
            (C52928 + C52929 + C52930) * C153638 * C154074) *
               C153711 * C154093 -
           (C52126 * C154074 + (C3599 + C3600 + C3601) * C153638 * C47633 +
            (C2958 + C2957 + C2956) * C153638 * C47632) *
               C153711 * C154092 -
           ((C2881 * C28694 - C2882 * C28691 - C2881 * C28695 +
             C154071 * C28697 + C2879 * C5036 - C2880 * C5032 - C2879 * C5037 +
             C154097 * C5041 + C2877 * C3513 - C2878 * C3508 - C2877 * C3514 +
             C154109 * C3520) *
                C153638 * C154074 +
            (C2881 * C5774 - C2882 * C5770 - C2881 * C5775 + C154071 * C5779 +
             C2879 * C4385 - C2880 * C4380 - C2879 * C4386 + C154097 * C4392 +
             C2877 * C1955 - C2878 * C1947 - C2877 * C1956 + C154109 * C1962) *
                C153638 * C47633 +
            (C3286 + C3285 + C3284) * C153638 * C47632) *
               C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C154022 -
           (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
            (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
             C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
             C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                C2874) *
               C153810 * C153775) *
              C154092 +
          (((C2877 * C1111 - C2878 * C1105 - C2877 * C1112 + C154109 * C1123 +
             C2879 * C1957 - C2880 * C1948 - C2879 * C1958 + C154097 * C1963 +
             C2881 * C4383 - C2882 * C4379 - C2881 * C4384 + C154071 * C4391) *
                C2874 +
            (C4432 + C4433 + C4434) * C2875 +
            (C4435 + C4436 + C4437) * C154058) *
               C153810 * C153775 -
           (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C2874) *
               C153810 * C154022) *
              C154093 +
          (((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
             C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
             C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                C2874 +
            (C3284 + C3285 + C3286) * C2875 +
            (C3287 + C3288 + C3289) * C154058) *
               C153810 * C154022 -
           ((C2881 * C5772 - C2882 * C5769 - C2881 * C5773 + C154071 * C5778 +
             C2879 * C4387 - C2880 * C4381 - C2879 * C4388 + C154097 * C4393 +
             C2877 * C1953 - C2878 * C1946 - C2877 * C1954 + C154109 * C1961) *
                C154058 +
            (C2881 * C5774 - C2882 * C5770 - C2881 * C5775 + C154071 * C5779 +
             C2879 * C4385 - C2880 * C4380 - C2879 * C4386 + C154097 * C4392 +
             C2877 * C1955 - C2878 * C1947 - C2877 * C1956 + C154109 * C1962) *
                C2875 +
            (C2881 * C5776 - C2882 * C5771 - C2881 * C5777 + C154071 * C5780 +
             C2879 * C4383 - C2880 * C4379 - C2879 * C4384 + C154097 * C4391 +
             C2877 * C1957 - C2878 * C1948 - C2877 * C1958 + C154109 * C1963) *
                C2874) *
               C153810 * C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C154022 -
           (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
            (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) * C122) *
               C153810 * C153775) *
              C154092 +
          (((C134 * C1111 - C135 * C1105 - C134 * C1112 + C153792 * C1123) *
                C122 +
            C1154 * C123 + C1155 * C124 + C1156 * C125 + C1157 * C126) *
               C153810 * C153775 -
           (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) * C122) *
               C153810 * C154022) *
              C154093 +
          (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) * C122 +
            C438 * C123 + C439 * C124 + C440 * C125 + C441 * C126) *
               C153810 * C154022 -
           ((C134 * C1949 - C135 * C1944 - C134 * C1950 + C153792 * C1959) *
                C126 +
            (C134 * C1951 - C135 * C1945 - C134 * C1952 + C153792 * C1960) *
                C125 +
            (C134 * C1953 - C135 * C1946 - C134 * C1954 + C153792 * C1961) *
                C124 +
            (C134 * C1955 - C135 * C1947 - C134 * C1956 + C153792 * C1962) *
                C123 +
            (C134 * C1957 - C135 * C1948 - C134 * C1958 + C153792 * C1963) *
                C122) *
               C153810 * C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C154022 -
           (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C153775) *
              C154092 +
          (((C24212 * C1111 - C24213 * C1105 - C24212 * C1112 + C24206 * C1123 +
             C24214 * C1957 - C24215 * C1948 - C24214 * C1958 + C24207 * C1963 +
             C24216 * C4383 - C24217 * C4379 - C24216 * C4384 +
             C154071 * C4391) *
                C154106 +
            (C25719 + C25720 + C25721) * C154087 +
            (C25722 + C25723 + C25724) * C154058) *
               C153810 * C153775 -
           (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C154022) *
              C154093 +
          (((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C154106 +
            (C24603 + C24604 + C24605) * C154087 +
            (C24606 + C24607 + C24608) * C154058) *
               C153810 * C154022 -
           ((C24216 * C5772 - C24217 * C5769 - C24216 * C5773 +
             C154071 * C5778 + C24214 * C4387 - C24215 * C4381 -
             C24214 * C4388 + C24207 * C4393 + C24212 * C1953 - C24213 * C1946 -
             C24212 * C1954 + C24206 * C1961) *
                C154058 +
            (C24216 * C5774 - C24217 * C5770 - C24216 * C5775 +
             C154071 * C5779 + C24214 * C4385 - C24215 * C4380 -
             C24214 * C4386 + C24207 * C4392 + C24212 * C1955 - C24213 * C1947 -
             C24212 * C1956 + C24206 * C1962) *
                C154087 +
            (C24216 * C5776 - C24217 * C5771 - C24216 * C5777 +
             C154071 * C5780 + C24214 * C4383 - C24215 * C4379 -
             C24214 * C4384 + C24207 * C4391 + C24212 * C1957 - C24213 * C1948 -
             C24212 * C1958 + C24206 * C1963) *
                C154106) *
               C153810 * C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C154022 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C153775) *
              C154092 +
          ((C28428 * C1111 - C28429 * C1105 - C28428 * C1112 + C28422 * C1123 +
            C28430 * C1957 - C28431 * C1948 - C28430 * C1958 + C28423 * C1963 +
            C28432 * C4383 - C28433 * C4379 - C28432 * C4384 + C28424 * C4391 +
            C28434 * C5776 - C28435 * C5771 - C28434 * C5777 + C28425 * C5780 +
            C28436 * C29106 - C28437 * C29104 - C28436 * C29107 +
            C28426 * C29110) *
               C153638 * C153810 * C153775 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C154022) *
              C154093 +
          ((C28428 * C359 - C28429 * C342 - C28428 * C360 + C28422 * C378 +
            C28430 * C1384 - C28431 * C1375 - C28430 * C1385 + C28423 * C1390 +
            C28432 * C3193 - C28433 * C3189 - C28432 * C3194 + C28424 * C3201 +
            C28434 * C4808 - C28435 * C4803 - C28434 * C4809 + C28425 * C4812 +
            C28436 * C28562 - C28437 * C28560 - C28436 * C28563 +
            C28426 * C28566) *
               C153638 * C153810 * C154022 -
           (C28436 * C29853 - C28437 * C29852 - C28436 * C29854 +
            C28426 * C29855 + C28434 * C29106 - C28435 * C29104 -
            C28434 * C29107 + C28425 * C29110 + C28432 * C5776 -
            C28433 * C5771 - C28432 * C5777 + C28424 * C5780 + C28430 * C4383 -
            C28431 * C4379 - C28430 * C4384 + C28423 * C4391 + C28428 * C1957 -
            C28429 * C1948 - C28428 * C1958 + C28422 * C1963) *
               C153638 * C153810 * C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154106 +
             C205 * C154087 + C206 * C154058) *
                C47632 +
            (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
               C154022 -
           ((C48078 + C48079 + C48080) * C154074 +
            (C48077 + C48076 + C48075) * C47633 +
            (C48074 + C48073 + C48072) * C47632) *
               C153775) *
              C154092 +
          (((C48826 + C48827 + C48828) * C47632 +
            (C48829 + C48830 + C48831) * C47633 +
            (C49420 + C49421 + C49422) * C154074) *
               C153775 -
           (C49424 * C154074 + (C48828 + C48827 + C48826) * C47633 +
            (C436 * C154058 + C437 * C154087 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154106) *
                C47632) *
               C154022) *
              C154093 +
          ((((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C154106 +
             C438 * C154087 + C439 * C154058) *
                C47632 +
            (C50151 + C50152 + C50153) * C47633 +
            (C50154 + C50155 + C50156) * C154074) *
               C154022 -
           (((C134 * C6369 - C135 * C6363 - C134 * C6370 + C153792 * C6381) *
                 C154058 +
             (C134 * C6373 - C135 * C6365 - C134 * C6374 + C153792 * C6383) *
                 C154087 +
             (C134 * C6377 - C135 * C6367 - C134 * C6378 + C153792 * C6385) *
                 C154106) *
                C154074 +
            (C50156 + C50155 + C50154) * C47633 +
            (C50153 + C50152 + C50151) * C47632) *
               C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C153638 * C47632 +
            (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
               C154022 -
           ((C52133 + C52134 + C52135) * C153638 * C154074 +
            (C52132 + C52131 + C52130) * C153638 * C47633 +
            (C52129 + C52128 + C52127) * C153638 * C47632) *
               C153775) *
              C154092 +
          (((C52922 + C52923 + C52924) * C153638 * C47632 +
            (C52925 + C52926 + C52927) * C153638 * C47633 +
            (C53534 + C53535 + C53536) * C153638 * C154074) *
               C153775 -
           (C53533 * C154074 + (C52924 + C52923 + C52922) * C153638 * C47633 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C153638 * C47632) *
               C154022) *
              C154093 +
          (((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
             C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
             C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                C153638 * C47632 +
            (C54299 + C54300 + C54301) * C153638 * C47633 +
            (C54302 + C54303 + C54304) * C153638 * C154074) *
               C154022 -
           ((C2881 * C30184 - C2882 * C30182 - C2881 * C30185 +
             C154071 * C30188 + C2879 * C30186 - C2880 * C30183 -
             C2879 * C30187 + C154097 * C30189 + C2877 * C6377 - C2878 * C6367 -
             C2877 * C6378 + C154109 * C6385) *
                C153638 * C154074 +
            (C54304 + C54303 + C54302) * C153638 * C47633 +
            (C54301 + C54300 + C54299) * C153638 * C47632) *
               C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                    C122 +
                C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                   C153810 * C153711 * C1279 -
               (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
                (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                    C122) *
                   C153810 * C153711 * C153747) *
                  C1281 +
              ((C437 * C122 + C436 * C123 + C435 * C124 + C434 * C125 +
                C808 * C126) *
                   C153810 * C153711 * C153747 -
               (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
                C205 * C122) *
                   C153810 * C153711 * C1279) *
                  C1282 +
              ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125 +
                C210 * C126) *
                   C153810 * C153711 * C1279 -
               ((C134 * C798 - C135 * C797 - C134 * C799 + C153792 * C800) *
                    C126 +
                C808 * C125 + C434 * C124 + C435 * C123 + C436 * C122) *
                   C153810 * C153711 * C153747) *
                  C1283) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                   C122 +
               C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                  C153810 * C153711 * C1366 -
              (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
               (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                   C122) *
                  C153810 * C153711 * C1367 +
              ((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                   C122 +
               C438 * C123 + C439 * C124 + C440 * C125 + C441 * C126) *
                  C153810 * C153711 * C1368 -
              ((C134 * C1376 - C135 * C1371 - C134 * C1377 + C153792 * C1386) *
                   C126 +
               (C134 * C1378 - C135 * C1372 - C134 * C1379 + C153792 * C1387) *
                   C125 +
               (C134 * C1380 - C135 * C1373 - C134 * C1381 + C153792 * C1388) *
                   C124 +
               (C134 * C1382 - C135 * C1374 - C134 * C1383 + C153792 * C1389) *
                   C123 +
               (C134 * C1384 - C135 * C1375 - C134 * C1385 + C153792 * C1390) *
                   C122) *
                  C153810 * C153711 * C1369) *
             C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C563 -
           (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
            (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) * C122) *
               C153810 * C564 +
           ((C134 * C588 - C135 * C571 - C134 * C589 + C153792 * C607) * C122 +
            C667 * C123 + C668 * C124 + C669 * C125 + C670 * C126) *
               C153810 * C565) *
              C1279 +
          (((C134 * C1111 - C135 * C1105 - C134 * C1112 + C153792 * C1123) *
                C122 +
            C1154 * C123 + C1155 * C124 + C1156 * C125 + C1157 * C126) *
               C153810 * C564 -
           (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) * C122) *
               C153810 * C563 -
           ((C134 * C1518 - C135 * C1513 - C134 * C1519 + C153792 * C1528) *
                C126 +
            (C134 * C1520 - C135 * C1514 - C134 * C1521 + C153792 * C1529) *
                C125 +
            (C134 * C1522 - C135 * C1515 - C134 * C1523 + C153792 * C1530) *
                C124 +
            (C134 * C1524 - C135 * C1516 - C134 * C1525 + C153792 * C1531) *
                C123 +
            (C134 * C1526 - C135 * C1517 - C134 * C1527 + C153792 * C1532) *
                C122) *
               C153810 * C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C153711 * C1279 -
           (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C2874) *
               C153810 * C153711 * C153747) *
              C1281 +
          (((C3283 + C3282 + C3281) * C2874 + (C3280 + C3279 + C3278) * C2875 +
            (C3846 + C3847 + C3848) * C154058) *
               C153810 * C153711 * C153747 -
           (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
            (C2958 + C2957 + C2956) * C2874) *
               C153810 * C153711 * C1279) *
              C1282 +
          ((C2970 * C2874 + (C2964 + C2963 + C2962) * C2875 +
            (C2965 + C2966 + C2967) * C154058) *
               C153810 * C153711 * C1279 -
           ((C2881 * C1376 - C2882 * C1371 - C2881 * C1377 + C154071 * C1386 +
             C2879 * C367 - C2880 * C346 - C2879 * C368 + C154097 * C382 +
             C2877 * C349 - C2878 * C337 - C2877 * C350 + C154109 * C373) *
                C154058 +
            (C3848 + C3847 + C3846) * C2875 + C3839 * C2874) *
               C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
            C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
            C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
               C2874 +
           (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
              C153810 * C153711 * C1366 -
          (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
           (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
            C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
            C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
               C2874) *
              C153810 * C153711 * C1367 +
          ((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
            C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
            C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
               C2874 +
           (C3284 + C3285 + C3286) * C2875 +
           (C3287 + C3288 + C3289) * C154058) *
              C153810 * C153711 * C1368 -
          ((C2881 * C4804 - C2882 * C4801 - C2881 * C4805 + C154071 * C4810 +
            C2879 * C3197 - C2880 * C3191 - C2879 * C3198 + C154097 * C3203 +
            C2877 * C1380 - C2878 * C1373 - C2877 * C1381 + C154109 * C1388) *
               C154058 +
           (C2881 * C4806 - C2882 * C4802 - C2881 * C4807 + C154071 * C4811 +
            C2879 * C3195 - C2880 * C3190 - C2879 * C3196 + C154097 * C3202 +
            C2877 * C1382 - C2878 * C1374 - C2877 * C1383 + C154109 * C1389) *
               C2875 +
           (C2881 * C4808 - C2882 * C4803 - C2881 * C4809 + C154071 * C4812 +
            C2879 * C3193 - C2880 * C3189 - C2879 * C3194 + C154097 * C3201 +
            C2877 * C1384 - C2878 * C1375 - C2877 * C1385 + C154109 * C1390) *
               C2874) *
              C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C563 -
           (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
            (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
             C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
             C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                C2874) *
               C153810 * C564 +
           ((C2877 * C588 - C2878 * C571 - C2877 * C589 + C154109 * C607 +
             C2879 * C1526 - C2880 * C1517 - C2879 * C1527 + C154097 * C1532 +
             C2881 * C3511 - C2882 * C3507 - C2881 * C3512 + C154071 * C3519) *
                C2874 +
            (C3602 + C3603 + C3604) * C2875 +
            (C3605 + C3606 + C3607) * C154058) *
               C153810 * C565) *
              C1279 +
          (((C2877 * C1111 - C2878 * C1105 - C2877 * C1112 + C154109 * C1123 +
             C2879 * C1957 - C2880 * C1948 - C2879 * C1958 + C154097 * C1963 +
             C2881 * C4383 - C2882 * C4379 - C2881 * C4384 + C154071 * C4391) *
                C2874 +
            (C4432 + C4433 + C4434) * C2875 +
            (C4435 + C4436 + C4437) * C154058) *
               C153810 * C564 -
           (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C2874) *
               C153810 * C563 -
           ((C2881 * C5034 - C2882 * C5031 - C2881 * C5035 + C154071 * C5040 +
             C2879 * C3515 - C2880 * C3509 - C2879 * C3516 + C154097 * C3521 +
             C2877 * C1522 - C2878 * C1515 - C2877 * C1523 + C154109 * C1530) *
                C154058 +
            (C2881 * C5036 - C2882 * C5032 - C2881 * C5037 + C154071 * C5041 +
             C2879 * C3513 - C2880 * C3508 - C2879 * C3514 + C154097 * C3520 +
             C2877 * C1524 - C2878 * C1516 - C2877 * C1525 + C154109 * C1531) *
                C2875 +
            (C2881 * C5038 - C2882 * C5033 - C2881 * C5039 + C154071 * C5042 +
             C2879 * C3511 - C2880 * C3507 - C2879 * C3512 + C154097 * C3519 +
             C2877 * C1526 - C2878 * C1517 - C2877 * C1527 + C154109 * C1532) *
                C2874) *
               C153810 * C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C153711 * C1279 -
           (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C153711 * C153747) *
              C1281 +
          (((C24602 + C24601 + C24600) * C154106 +
            (C24599 + C24598 + C24597) * C154087 +
            (C25149 + C25150 + C25151) * C154058) *
               C153810 * C153711 * C153747 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C153711 * C1279) *
              C1282 +
          ((C24305 * C154106 + (C24299 + C24298 + C24297) * C154087 +
            (C24300 + C24301 + C24302) * C154058) *
               C153810 * C153711 * C1279 -
           ((C24216 * C1376 - C24217 * C1371 - C24216 * C1377 +
             C154071 * C1386 + C24214 * C367 - C24215 * C346 - C24214 * C368 +
             C24207 * C382 + C24212 * C349 - C24213 * C337 - C24212 * C350 +
             C24206 * C373) *
                C154058 +
            (C25151 + C25150 + C25149) * C154087 + C25142 * C154106) *
               C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
            C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
            C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
               C154106 +
           (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
              C153810 * C153711 * C1366 -
          (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
           (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 + C154071 * C1390 +
            C24214 * C359 - C24215 * C342 - C24214 * C360 + C24207 * C378 +
            C24212 * C357 - C24213 * C341 - C24212 * C358 + C24206 * C377) *
               C154106) *
              C153810 * C153711 * C1367 +
          ((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
            C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
            C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
            C154071 * C3201) *
               C154106 +
           (C24603 + C24604 + C24605) * C154087 +
           (C24606 + C24607 + C24608) * C154058) *
              C153810 * C153711 * C1368 -
          ((C24216 * C4804 - C24217 * C4801 - C24216 * C4805 + C154071 * C4810 +
            C24214 * C3197 - C24215 * C3191 - C24214 * C3198 + C24207 * C3203 +
            C24212 * C1380 - C24213 * C1373 - C24212 * C1381 + C24206 * C1388) *
               C154058 +
           (C24216 * C4806 - C24217 * C4802 - C24216 * C4807 + C154071 * C4811 +
            C24214 * C3195 - C24215 * C3190 - C24214 * C3196 + C24207 * C3202 +
            C24212 * C1382 - C24213 * C1374 - C24212 * C1383 + C24206 * C1389) *
               C154087 +
           (C24216 * C4808 - C24217 * C4803 - C24216 * C4809 + C154071 * C4812 +
            C24214 * C3193 - C24215 * C3189 - C24214 * C3194 + C24207 * C3201 +
            C24212 * C1384 - C24213 * C1375 - C24212 * C1385 + C24206 * C1390) *
               C154106) *
              C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C563 -
           (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C564 +
           ((C24212 * C588 - C24213 * C571 - C24212 * C589 + C24206 * C607 +
             C24214 * C1526 - C24215 * C1517 - C24214 * C1527 + C24207 * C1532 +
             C24216 * C3511 - C24217 * C3507 - C24216 * C3512 +
             C154071 * C3519) *
                C154106 +
            (C24905 + C24906 + C24907) * C154087 +
            (C24908 + C24909 + C24910) * C154058) *
               C153810 * C565) *
              C1279 +
          (((C24212 * C1111 - C24213 * C1105 - C24212 * C1112 + C24206 * C1123 +
             C24214 * C1957 - C24215 * C1948 - C24214 * C1958 + C24207 * C1963 +
             C24216 * C4383 - C24217 * C4379 - C24216 * C4384 +
             C154071 * C4391) *
                C154106 +
            (C25719 + C25720 + C25721) * C154087 +
            (C25722 + C25723 + C25724) * C154058) *
               C153810 * C564 -
           (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C563 -
           ((C24216 * C5034 - C24217 * C5031 - C24216 * C5035 +
             C154071 * C5040 + C24214 * C3515 - C24215 * C3509 -
             C24214 * C3516 + C24207 * C3521 + C24212 * C1522 - C24213 * C1515 -
             C24212 * C1523 + C24206 * C1530) *
                C154058 +
            (C24216 * C5036 - C24217 * C5032 - C24216 * C5037 +
             C154071 * C5041 + C24214 * C3513 - C24215 * C3508 -
             C24214 * C3514 + C24207 * C3520 + C24212 * C1524 - C24213 * C1516 -
             C24212 * C1525 + C24206 * C1531) *
                C154087 +
            (C24216 * C5038 - C24217 * C5033 - C24216 * C5039 +
             C154071 * C5042 + C24214 * C3511 - C24215 * C3507 -
             C24214 * C3512 + C24207 * C3519 + C24212 * C1526 - C24213 * C1517 -
             C24212 * C1527 + C24206 * C1532) *
                C154106) *
               C153810 * C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C153711 * C1279 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C153711 * C153747) *
              C1281 +
          ((C28428 * C355 - C28429 * C340 - C28428 * C356 + C28422 * C376 +
            C28430 * C361 - C28431 * C343 - C28430 * C362 + C28423 * C379 +
            C28432 * C1382 - C28433 * C1374 - C28432 * C1383 + C28424 * C1389 +
            C28434 * C3195 - C28435 * C3190 - C28434 * C3196 + C28425 * C3202 +
            C28436 * C4806 - C28437 * C4802 - C28436 * C4807 + C28426 * C4811) *
               C153638 * C153810 * C153711 * C153747 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C153711 * C1279) *
              C1282 +
          ((C28428 * C148 - C28429 * C138 - C28428 * C149 + C28422 * C162 +
            C28430 * C353 - C28431 * C339 - C28430 * C354 + C28423 * C375 +
            C28432 * C363 - C28433 * C344 - C28432 * C364 + C28424 * C380 +
            C28434 * C1380 - C28435 * C1373 - C28434 * C1381 + C28425 * C1388 +
            C28436 * C3197 - C28437 * C3191 - C28436 * C3198 + C28426 * C3203) *
               C153638 * C153810 * C153711 * C1279 -
           (C28436 * C4804 - C28437 * C4801 - C28436 * C4805 + C28426 * C4810 +
            C28434 * C3197 - C28435 * C3191 - C28434 * C3198 + C28425 * C3203 +
            C28432 * C1380 - C28433 * C1373 - C28432 * C1381 + C28424 * C1388 +
            C28430 * C363 - C28431 * C344 - C28430 * C364 + C28423 * C380 +
            C28428 * C353 - C28429 * C339 - C28428 * C354 + C28422 * C375) *
               C153638 * C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
           C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
           C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
           C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
           C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
              C153638 * C153810 * C153711 * C1366 -
          (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
           C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
           C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
           C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
           C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
              C153638 * C153810 * C153711 * C1367 +
          (C28428 * C359 - C28429 * C342 - C28428 * C360 + C28422 * C378 +
           C28430 * C1384 - C28431 * C1375 - C28430 * C1385 + C28423 * C1390 +
           C28432 * C3193 - C28433 * C3189 - C28432 * C3194 + C28424 * C3201 +
           C28434 * C4808 - C28435 * C4803 - C28434 * C4809 + C28425 * C4812 +
           C28436 * C28562 - C28437 * C28560 - C28436 * C28563 +
           C28426 * C28566) *
              C153638 * C153810 * C153711 * C1368 -
          (C28436 * C29317 - C28437 * C29316 - C28436 * C29318 +
           C28426 * C29319 + C28434 * C28562 - C28435 * C28560 -
           C28434 * C28563 + C28425 * C28566 + C28432 * C4808 - C28433 * C4803 -
           C28432 * C4809 + C28424 * C4812 + C28430 * C3193 - C28431 * C3189 -
           C28430 * C3194 + C28423 * C3201 + C28428 * C1384 - C28429 * C1375 -
           C28428 * C1385 + C28422 * C1390) *
              C153638 * C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C563 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C564 +
           (C28428 * C588 - C28429 * C571 - C28428 * C589 + C28422 * C607 +
            C28430 * C1526 - C28431 * C1517 - C28430 * C1527 + C28423 * C1532 +
            C28432 * C3511 - C28433 * C3507 - C28432 * C3512 + C28424 * C3519 +
            C28434 * C5038 - C28435 * C5033 - C28434 * C5039 + C28425 * C5042 +
            C28436 * C28692 - C28437 * C28690 - C28436 * C28693 +
            C28426 * C28696) *
               C153638 * C153810 * C565) *
              C1279 +
          ((C28428 * C1111 - C28429 * C1105 - C28428 * C1112 + C28422 * C1123 +
            C28430 * C1957 - C28431 * C1948 - C28430 * C1958 + C28423 * C1963 +
            C28432 * C4383 - C28433 * C4379 - C28432 * C4384 + C28424 * C4391 +
            C28434 * C5776 - C28435 * C5771 - C28434 * C5777 + C28425 * C5780 +
            C28436 * C29106 - C28437 * C29104 - C28436 * C29107 +
            C28426 * C29110) *
               C153638 * C153810 * C564 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C563 -
           (C28436 * C29443 - C28437 * C29442 - C28436 * C29444 +
            C28426 * C29445 + C28434 * C28692 - C28435 * C28690 -
            C28434 * C28693 + C28425 * C28696 + C28432 * C5038 -
            C28433 * C5033 - C28432 * C5039 + C28424 * C5042 + C28430 * C3511 -
            C28431 * C3507 - C28430 * C3512 + C28423 * C3519 + C28428 * C1526 -
            C28429 * C1517 - C28428 * C1527 + C28422 * C1532) *
               C153638 * C153810 * C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154106 +
             C205 * C154087 + C206 * C154058) *
                C47632 +
            (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
               C153711 * C1279 -
           ((C48831 + C48830 + C48829) * C154074 +
            (C48828 + C48827 + C48826) * C47633 +
            (C436 * C154058 + C437 * C154087 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154106) *
                C47632) *
               C153711 * C153747) *
              C1281 +
          (((C437 * C154106 + C436 * C154087 + C435 * C154058) * C47632 +
            (C48832 + C48833 + C48834) * C47633 +
            (C48835 + C48836 + C48837) * C154074) *
               C153711 * C153747 -
           (C48093 * C154074 + (C48083 + C48082 + C48081) * C47633 +
            (C207 * C154058 + C206 * C154087 + C205 * C154106) * C47632) *
               C153711 * C1279) *
              C1282 +
          (((C206 * C154106 + C207 * C154087 + C208 * C154058) * C47632 +
            (C48530 + C48531 + C48532) * C47633 +
            (C48533 + C48534 + C48535) * C154074) *
               C153711 * C1279 -
           (((C134 * C1518 - C135 * C1513 - C134 * C1519 + C153792 * C1528) *
                 C154058 +
             C8059 * C154087 + C7517 * C154106) *
                C154074 +
            (C1157 * C154058 + C1156 * C154087 + C1155 * C154106) * C47633 +
            (C434 * C154058 + C435 * C154087 + C436 * C154106) * C47632) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C154106 +
            C205 * C154087 + C206 * C154058) *
               C47632 +
           (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
              C153711 * C1366 -
          ((C48831 + C48830 + C48829) * C154074 +
           (C48828 + C48827 + C48826) * C47633 +
           (C436 * C154058 + C437 * C154087 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                C154106) *
               C47632) *
              C153711 * C1367 +
          (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                C154106 +
            C438 * C154087 + C439 * C154058) *
               C47632 +
           (C9966 * C154106 + C7519 * C154087 + C7520 * C154058) * C47633 +
           (C9967 * C154106 + C7521 * C154087 + C7522 * C154058) * C154074) *
              C153711 * C1368 -
          (((C134 * C5034 - C135 * C5031 - C134 * C5035 + C153792 * C5040) *
                C154058 +
            (C134 * C5036 - C135 * C5032 - C134 * C5037 + C153792 * C5041) *
                C154087 +
            (C134 * C5038 - C135 * C5033 - C134 * C5039 + C153792 * C5042) *
                C154106) *
               C154074 +
           ((C134 * C4387 - C135 * C4381 - C134 * C4388 + C153792 * C4393) *
                C154058 +
            (C134 * C4385 - C135 * C4380 - C134 * C4386 + C153792 * C4392) *
                C154087 +
            (C134 * C4383 - C135 * C4379 - C134 * C4384 + C153792 * C4391) *
                C154106) *
               C47633 +
           ((C134 * C1380 - C135 * C1373 - C134 * C1381 + C153792 * C1388) *
                C154058 +
            (C134 * C1382 - C135 * C1374 - C134 * C1383 + C153792 * C1389) *
                C154087 +
            (C134 * C1384 - C135 * C1375 - C134 * C1385 + C153792 * C1390) *
                C154106) *
               C47632) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154106 +
             C205 * C154087 + C206 * C154058) *
                C47632 +
            (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
               C563 -
           ((C48078 + C48079 + C48080) * C154074 +
            (C48077 + C48076 + C48075) * C47633 +
            (C48074 + C48073 + C48072) * C47632) *
               C564 +
           (C48092 * C47632 + (C48080 + C48079 + C48078) * C47633 +
            (C10574 * C154106 + C7822 * C154087 + C7823 * C154058) * C154074) *
               C565) *
              C1279 +
          (((C48826 + C48827 + C48828) * C47632 +
            (C48829 + C48830 + C48831) * C47633 +
            (C49420 + C49421 + C49422) * C154074) *
               C564 -
           (C49424 * C154074 + (C48828 + C48827 + C48826) * C47633 +
            (C436 * C154058 + C437 * C154087 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154106) *
                C47632) *
               C563 -
           (((C134 * C9202 - C135 * C9199 - C134 * C9203 + C153792 * C9208) *
                 C154058 +
             (C134 * C9204 - C135 * C9200 - C134 * C9205 + C153792 * C9209) *
                 C154087 +
             (C134 * C9206 - C135 * C9201 - C134 * C9207 + C153792 * C9210) *
                 C154106) *
                C154074 +
            (C49422 + C49421 + C49420) * C47633 + C49424 * C47632) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C153638 * C47632 +
            (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
               C153711 * C1279 -
           ((C52927 + C52926 + C52925) * C153638 * C154074 +
            (C52924 + C52923 + C52922) * C153638 * C47633 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C153638 * C47632) *
               C153711 * C153747) *
              C1281 +
          (((C3283 + C3282 + C3281) * C153638 * C47632 +
            (C4432 + C4433 + C4434) * C153638 * C47633 +
            (C52928 + C52929 + C52930) * C153638 * C154074) *
               C153711 * C153747 -
           (C52126 * C154074 + (C3599 + C3600 + C3601) * C153638 * C47633 +
            (C2958 + C2957 + C2956) * C153638 * C47632) *
               C153711 * C1279) *
              C1282 +
          ((C2970 * C153638 * C47632 +
            (C3598 + C3597 + C3596) * C153638 * C47633 +
            (C3605 + C3606 + C3607) * C153638 * C154074) *
               C153711 * C1279 -
           ((C2881 * C5034 - C2882 * C5031 - C2881 * C5035 + C154071 * C5040 +
             C2879 * C3515 - C2880 * C3509 - C2879 * C3516 + C154097 * C3521 +
             C2877 * C1522 - C2878 * C1515 - C2877 * C1523 + C154109 * C1530) *
                C153638 * C154074 +
            (C4437 + C4436 + C4435) * C153638 * C47633 +
            C3839 * C153638 * C47632) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
            C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
            C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
               C153638 * C47632 +
           (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
              C153711 * C1366 -
          ((C52927 + C52926 + C52925) * C153638 * C154074 +
           (C52924 + C52923 + C52922) * C153638 * C47633 +
           (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
            C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
            C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
               C153638 * C47632) *
              C153711 * C1367 +
          ((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
            C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
            C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
               C153638 * C47632 +
           (C2877 * C1957 - C2878 * C1948 - C2877 * C1958 + C154109 * C1963 +
            C2879 * C4383 - C2880 * C4379 - C2879 * C4384 + C154097 * C4391 +
            C2881 * C5776 - C2882 * C5771 - C2881 * C5777 + C154071 * C5780) *
               C153638 * C47633 +
           (C2877 * C3511 - C2878 * C3507 - C2877 * C3512 + C154109 * C3519 +
            C2879 * C5038 - C2880 * C5033 - C2879 * C5039 + C154097 * C5042 +
            C2881 * C28692 - C2882 * C28690 - C2881 * C28693 +
            C154071 * C28696) *
               C153638 * C154074) *
              C153711 * C1368 -
          ((C2881 * C29443 - C2882 * C29442 - C2881 * C29444 +
            C154071 * C29445 + C2879 * C28692 - C2880 * C28690 -
            C2879 * C28693 + C154097 * C28696 + C2877 * C5038 - C2878 * C5033 -
            C2877 * C5039 + C154109 * C5042) *
               C153638 * C154074 +
           (C2881 * C29106 - C2882 * C29104 - C2881 * C29107 +
            C154071 * C29110 + C2879 * C5776 - C2880 * C5771 - C2879 * C5777 +
            C154097 * C5780 + C2877 * C4383 - C2878 * C4379 - C2877 * C4384 +
            C154109 * C4391) *
               C153638 * C47633 +
           (C2881 * C4808 - C2882 * C4803 - C2881 * C4809 + C154071 * C4812 +
            C2879 * C3193 - C2880 * C3189 - C2879 * C3194 + C154097 * C3201 +
            C2877 * C1384 - C2878 * C1375 - C2877 * C1385 + C154109 * C1390) *
               C153638 * C47632) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C153638 * C47632 +
            (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
               C563 -
           ((C52133 + C52134 + C52135) * C153638 * C154074 +
            (C52132 + C52131 + C52130) * C153638 * C47633 +
            (C52129 + C52128 + C52127) * C153638 * C47632) *
               C564 +
           (C52141 * C47632 + (C52135 + C52134 + C52133) * C153638 * C47633 +
            (C2877 * C7744 - C2878 * C7740 - C2877 * C7745 + C154109 * C7752 +
             C2879 * C9206 - C2880 * C9201 - C2879 * C9207 + C154097 * C9210 +
             C2881 * C31180 - C2882 * C31178 - C2881 * C31181 +
             C154071 * C31184) *
                C153638 * C154074) *
               C565) *
              C1279 +
          (((C52922 + C52923 + C52924) * C153638 * C47632 +
            (C52925 + C52926 + C52927) * C153638 * C47633 +
            (C53534 + C53535 + C53536) * C153638 * C154074) *
               C564 -
           (C53533 * C154074 + (C52924 + C52923 + C52922) * C153638 * C47633 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C153638 * C47632) *
               C563 -
           ((C2881 * C32652 - C2882 * C32651 - C2881 * C32653 +
             C154071 * C32654 + C2879 * C31180 - C2880 * C31178 -
             C2879 * C31181 + C154097 * C31184 + C2877 * C9206 - C2878 * C9201 -
             C2877 * C9207 + C154109 * C9210) *
                C153638 * C154074 +
            (C53536 + C53535 + C53534) * C153638 * C47633 + C53533 * C47632) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C2874 +
             (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
                C153810 * C154022 -
            (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
             (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
              C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
              C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                 C2874) *
                C153810 * C153775) *
               C1279 +
           (((C2877 * C1111 - C2878 * C1105 - C2877 * C1112 + C154109 * C1123 +
              C2879 * C1957 - C2880 * C1948 - C2879 * C1958 + C154097 * C1963 +
              C2881 * C4383 - C2882 * C4379 - C2881 * C4384 + C154071 * C4391) *
                 C2874 +
             (C4432 + C4433 + C4434) * C2875 +
             (C4435 + C4436 + C4437) * C154058) *
                C153810 * C153775 -
            (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C2874) *
                C153810 * C154022) *
               C153747) *
              C154013 +
          ((((C3601 + C3600 + C3599) * C2874 + (C3598 + C3597 + C3596) * C2875 +
             (C4087 + C4088 + C4089) * C154058) *
                C153810 * C153775 -
            (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
             (C2958 + C2957 + C2956) * C2874) *
                C153810 * C154022) *
               C1279 +
           (((C3283 + C3282 + C3281) * C2874 + (C3280 + C3279 + C3278) * C2875 +
             (C3846 + C3847 + C3848) * C154058) *
                C153810 * C154022 -
            ((C2881 * C4389 - C2882 * C4382 - C2881 * C4390 + C154071 * C4394 +
              C2879 * C1951 - C2880 * C1945 - C2879 * C1952 + C154097 * C1960 +
              C2877 * C1117 - C2878 * C1108 - C2877 * C1118 + C154109 * C1126) *
                 C154058 +
             (C4437 + C4436 + C4435) * C2875 +
             (C4434 + C4433 + C4432) * C2874) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                C153810 * C154022 -
            (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
             (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) *
                 C122) *
                C153810 * C153775) *
               C1279 +
           (((C134 * C1111 - C135 * C1105 - C134 * C1112 + C153792 * C1123) *
                 C122 +
             C1154 * C123 + C1155 * C124 + C1156 * C125 + C1157 * C126) *
                C153810 * C153775 -
            (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C122) *
                C153810 * C154022) *
               C153747) *
              C154013 +
          (((C666 * C122 + C665 * C123 + C664 * C124 + C663 * C125 +
             C943 * C126) *
                C153810 * C153775 -
            (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
             C205 * C122) *
                C153810 * C154022) *
               C1279 +
           ((C437 * C122 + C436 * C123 + C435 * C124 + C434 * C125 +
             C808 * C126) *
                C153810 * C154022 -
            ((C134 * C1121 - C135 * C1110 - C134 * C1122 + C153792 * C1128) *
                 C126 +
             C1157 * C125 + C1156 * C124 + C1155 * C123 + C1154 * C122) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154106 +
             (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
                C153810 * C154022 -
            (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
             (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
              C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
              C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
              C24212 * C587 + C24206 * C606) *
                 C154106) *
                C153810 * C153775) *
               C1279 +
           (((C24212 * C1111 - C24213 * C1105 - C24212 * C1112 +
              C24206 * C1123 + C24214 * C1957 - C24215 * C1948 -
              C24214 * C1958 + C24207 * C1963 + C24216 * C4383 -
              C24217 * C4379 - C24216 * C4384 + C154071 * C4391) *
                 C154106 +
             (C25719 + C25720 + C25721) * C154087 +
             (C25722 + C25723 + C25724) * C154058) *
                C153810 * C153775 -
            (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C154106) *
                C153810 * C154022) *
               C153747) *
              C154013 +
          ((((C24904 + C24903 + C24902) * C154106 +
             (C24901 + C24900 + C24899) * C154087 +
             (C25390 + C25391 + C25392) * C154058) *
                C153810 * C153775 -
            (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
             (C24293 + C24292 + C24291) * C154106) *
                C153810 * C154022) *
               C1279 +
           (((C24602 + C24601 + C24600) * C154106 +
             (C24599 + C24598 + C24597) * C154087 +
             (C25149 + C25150 + C25151) * C154058) *
                C153810 * C154022 -
            ((C24216 * C4389 - C24217 * C4382 - C24216 * C4390 +
              C154071 * C4394 + C24214 * C1951 - C24215 * C1945 -
              C24214 * C1952 + C24207 * C1960 + C24212 * C1117 -
              C24213 * C1108 - C24212 * C1118 + C24206 * C1126) *
                 C154058 +
             (C25724 + C25723 + C25722) * C154087 +
             (C25721 + C25720 + C25719) * C154106) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
             C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
             C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
             C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
             C28436 * C3193 - C28437 * C3189 - C28436 * C3194 +
             C28426 * C3201) *
                C153638 * C153810 * C154022 -
            (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
             C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
             C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
             C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
             C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
                C153638 * C153810 * C153775) *
               C1279 +
           ((C28428 * C1111 - C28429 * C1105 - C28428 * C1112 + C28422 * C1123 +
             C28430 * C1957 - C28431 * C1948 - C28430 * C1958 + C28423 * C1963 +
             C28432 * C4383 - C28433 * C4379 - C28432 * C4384 + C28424 * C4391 +
             C28434 * C5776 - C28435 * C5771 - C28434 * C5777 + C28425 * C5780 +
             C28436 * C29106 - C28437 * C29104 - C28436 * C29107 +
             C28426 * C29110) *
                C153638 * C153810 * C153775 -
            (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
             C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
             C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
             C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
             C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
                C153638 * C153810 * C154022) *
               C153747) *
              C154013 +
          (((C28428 * C584 - C28429 * C569 - C28428 * C585 + C28422 * C605 +
             C28430 * C1113 - C28431 * C1106 - C28430 * C1114 + C28423 * C1124 +
             C28432 * C1955 - C28433 * C1947 - C28432 * C1956 + C28424 * C1962 +
             C28434 * C4385 - C28435 * C4380 - C28434 * C4386 + C28425 * C4392 +
             C28436 * C5774 - C28437 * C5770 - C28436 * C5775 +
             C28426 * C5779) *
                C153638 * C153810 * C153775 -
            (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
             C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
             C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
             C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
             C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
                C153638 * C153810 * C154022) *
               C1279 +
           ((C28428 * C355 - C28429 * C340 - C28428 * C356 + C28422 * C376 +
             C28430 * C361 - C28431 * C343 - C28430 * C362 + C28423 * C379 +
             C28432 * C1382 - C28433 * C1374 - C28432 * C1383 + C28424 * C1389 +
             C28434 * C3195 - C28435 * C3190 - C28434 * C3196 + C28425 * C3202 +
             C28436 * C4806 - C28437 * C4802 - C28436 * C4807 +
             C28426 * C4811) *
                C153638 * C153810 * C154022 -
            (C28436 * C29108 - C28437 * C29105 - C28436 * C29109 +
             C28426 * C29111 + C28434 * C5774 - C28435 * C5770 -
             C28434 * C5775 + C28425 * C5779 + C28432 * C4385 - C28433 * C4380 -
             C28432 * C4386 + C28424 * C4392 + C28430 * C1955 - C28431 * C1947 -
             C28430 * C1956 + C28423 * C1962 + C28428 * C1113 - C28429 * C1106 -
             C28428 * C1114 + C28422 * C1124) *
                C153638 * C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                  C154106 +
              C205 * C154087 + C206 * C154058) *
                 C47632 +
             (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
                C154022 -
            ((C48078 + C48079 + C48080) * C154074 +
             (C48077 + C48076 + C48075) * C47633 +
             (C48074 + C48073 + C48072) * C47632) *
                C153775) *
               C1279 +
           (((C48826 + C48827 + C48828) * C47632 +
             (C48829 + C48830 + C48831) * C47633 +
             (C49420 + C49421 + C49422) * C154074) *
                C153775 -
            (C49424 * C154074 + (C48828 + C48827 + C48826) * C47633 +
             (C436 * C154058 + C437 * C154087 +
              (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                  C154106) *
                 C47632) *
                C154022) *
               C153747) *
              C154013 +
          ((((C48081 + C48082 + C48083) * C47632 +
             (C48084 + C48085 + C48086) * C47633 +
             (C48087 + C48088 + C48089) * C154074) *
                C153775 -
            (C48093 * C154074 + (C48083 + C48082 + C48081) * C47633 +
             (C207 * C154058 + C206 * C154087 + C205 * C154106) * C47632) *
                C154022) *
               C1279 +
           (((C437 * C154106 + C436 * C154087 + C435 * C154058) * C47632 +
             (C48832 + C48833 + C48834) * C47633 +
             (C48835 + C48836 + C48837) * C154074) *
                C154022 -
            (((C134 * C8574 - C135 * C8573 - C134 * C8575 + C153792 * C8576) *
                  C154058 +
              C8615 * C154087 + C8614 * C154106) *
                 C154074 +
             (C48837 + C48836 + C48835) * C47633 +
             (C48834 + C48833 + C48832) * C47632) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C153638 * C47632 +
             (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
                C154022 -
            ((C52133 + C52134 + C52135) * C153638 * C154074 +
             (C52132 + C52131 + C52130) * C153638 * C47633 +
             (C52129 + C52128 + C52127) * C153638 * C47632) *
                C153775) *
               C1279 +
           (((C52922 + C52923 + C52924) * C153638 * C47632 +
             (C52925 + C52926 + C52927) * C153638 * C47633 +
             (C53534 + C53535 + C53536) * C153638 * C154074) *
                C153775 -
            (C53533 * C154074 + (C52924 + C52923 + C52922) * C153638 * C47633 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C153638 * C47632) *
                C154022) *
               C153747) *
              C154013 +
          ((((C3601 + C3600 + C3599) * C153638 * C47632 +
             (C3602 + C3603 + C3604) * C153638 * C47633 +
             (C52136 + C52137 + C52138) * C153638 * C154074) *
                C153775 -
            (C52126 * C154074 + (C3599 + C3600 + C3601) * C153638 * C47633 +
             (C2958 + C2957 + C2956) * C153638 * C47632) *
                C154022) *
               C1279 +
           (((C3283 + C3282 + C3281) * C153638 * C47632 +
             (C4432 + C4433 + C4434) * C153638 * C47633 +
             (C52928 + C52929 + C52930) * C153638 * C154074) *
                C154022 -
            ((C2881 * C32003 - C2882 * C32002 - C2881 * C32004 +
              C154071 * C32005 + C2879 * C6373 - C2880 * C6365 - C2879 * C6374 +
              C154097 * C6383 + C2877 * C6375 - C2878 * C6366 - C2877 * C6376 +
              C154109 * C6384) *
                 C153638 * C154074 +
             (C52930 + C52929 + C52928) * C153638 * C47633 +
             (C4434 + C4433 + C4432) * C153638 * C47632) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
           C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
              C153810 * C153711 * C1366 -
          (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
           (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) * C122) *
              C153810 * C153711 * C1367 +
          ((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) * C122 +
           C438 * C123 + C439 * C124 + C440 * C125 + C441 * C126) *
              C153810 * C153711 * C1368 -
          ((C134 * C1376 - C135 * C1371 - C134 * C1377 + C153792 * C1386) *
               C126 +
           (C134 * C1378 - C135 * C1372 - C134 * C1379 + C153792 * C1387) *
               C125 +
           (C134 * C1380 - C135 * C1373 - C134 * C1381 + C153792 * C1388) *
               C124 +
           (C134 * C1382 - C135 * C1374 - C134 * C1383 + C153792 * C1389) *
               C123 +
           (C134 * C1384 - C135 * C1375 - C134 * C1385 + C153792 * C1390) *
               C122) *
              C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C153711 * C1279 -
           (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) * C122) *
               C153810 * C153711 * C153747) *
              C1281 +
          ((C437 * C122 + C436 * C123 + C435 * C124 + C434 * C125 +
            C808 * C126) *
               C153810 * C153711 * C153747 -
           (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
            C205 * C122) *
               C153810 * C153711 * C1279) *
              C1282 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125 +
            C210 * C126) *
               C153810 * C153711 * C1279 -
           ((C134 * C798 - C135 * C797 - C134 * C799 + C153792 * C800) * C126 +
            C808 * C125 + C434 * C124 + C435 * C123 + C436 * C122) *
               C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C153711 * C1279 -
           (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C2874) *
               C153810 * C153711 * C153747) *
              C1281 +
          (((C3283 + C3282 + C3281) * C2874 + (C3280 + C3279 + C3278) * C2875 +
            (C3846 + C3847 + C3848) * C154058) *
               C153810 * C153711 * C153747 -
           (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
            (C2958 + C2957 + C2956) * C2874) *
               C153810 * C153711 * C1279) *
              C1282 +
          ((C2970 * C2874 + (C2964 + C2963 + C2962) * C2875 +
            (C2965 + C2966 + C2967) * C154058) *
               C153810 * C153711 * C1279 -
           ((C2881 * C1376 - C2882 * C1371 - C2881 * C1377 + C154071 * C1386 +
             C2879 * C367 - C2880 * C346 - C2879 * C368 + C154097 * C382 +
             C2877 * C349 - C2878 * C337 - C2877 * C350 + C154109 * C373) *
                C154058 +
            (C3848 + C3847 + C3846) * C2875 + C3839 * C2874) *
               C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
            C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
            C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
               C2874 +
           (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
              C153810 * C153711 * C1366 -
          (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
           (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
            C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
            C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
               C2874) *
              C153810 * C153711 * C1367 +
          ((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
            C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
            C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
               C2874 +
           (C3284 + C3285 + C3286) * C2875 +
           (C3287 + C3288 + C3289) * C154058) *
              C153810 * C153711 * C1368 -
          ((C2881 * C4804 - C2882 * C4801 - C2881 * C4805 + C154071 * C4810 +
            C2879 * C3197 - C2880 * C3191 - C2879 * C3198 + C154097 * C3203 +
            C2877 * C1380 - C2878 * C1373 - C2877 * C1381 + C154109 * C1388) *
               C154058 +
           (C2881 * C4806 - C2882 * C4802 - C2881 * C4807 + C154071 * C4811 +
            C2879 * C3195 - C2880 * C3190 - C2879 * C3196 + C154097 * C3202 +
            C2877 * C1382 - C2878 * C1374 - C2877 * C1383 + C154109 * C1389) *
               C2875 +
           (C2881 * C4808 - C2882 * C4803 - C2881 * C4809 + C154071 * C4812 +
            C2879 * C3193 - C2880 * C3189 - C2879 * C3194 + C154097 * C3201 +
            C2877 * C1384 - C2878 * C1375 - C2877 * C1385 + C154109 * C1390) *
               C2874) *
              C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C153711 * C1279 -
           (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C153711 * C153747) *
              C1281 +
          (((C24602 + C24601 + C24600) * C154106 +
            (C24599 + C24598 + C24597) * C154087 +
            (C25149 + C25150 + C25151) * C154058) *
               C153810 * C153711 * C153747 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C153711 * C1279) *
              C1282 +
          ((C24305 * C154106 + (C24299 + C24298 + C24297) * C154087 +
            (C24300 + C24301 + C24302) * C154058) *
               C153810 * C153711 * C1279 -
           ((C24216 * C1376 - C24217 * C1371 - C24216 * C1377 +
             C154071 * C1386 + C24214 * C367 - C24215 * C346 - C24214 * C368 +
             C24207 * C382 + C24212 * C349 - C24213 * C337 - C24212 * C350 +
             C24206 * C373) *
                C154058 +
            (C25151 + C25150 + C25149) * C154087 + C25142 * C154106) *
               C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
            C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
            C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
               C154106 +
           (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
              C153810 * C153711 * C1366 -
          (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
           (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 + C154071 * C1390 +
            C24214 * C359 - C24215 * C342 - C24214 * C360 + C24207 * C378 +
            C24212 * C357 - C24213 * C341 - C24212 * C358 + C24206 * C377) *
               C154106) *
              C153810 * C153711 * C1367 +
          ((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
            C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
            C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
            C154071 * C3201) *
               C154106 +
           (C24603 + C24604 + C24605) * C154087 +
           (C24606 + C24607 + C24608) * C154058) *
              C153810 * C153711 * C1368 -
          ((C24216 * C4804 - C24217 * C4801 - C24216 * C4805 + C154071 * C4810 +
            C24214 * C3197 - C24215 * C3191 - C24214 * C3198 + C24207 * C3203 +
            C24212 * C1380 - C24213 * C1373 - C24212 * C1381 + C24206 * C1388) *
               C154058 +
           (C24216 * C4806 - C24217 * C4802 - C24216 * C4807 + C154071 * C4811 +
            C24214 * C3195 - C24215 * C3190 - C24214 * C3196 + C24207 * C3202 +
            C24212 * C1382 - C24213 * C1374 - C24212 * C1383 + C24206 * C1389) *
               C154087 +
           (C24216 * C4808 - C24217 * C4803 - C24216 * C4809 + C154071 * C4812 +
            C24214 * C3193 - C24215 * C3189 - C24214 * C3194 + C24207 * C3201 +
            C24212 * C1384 - C24213 * C1375 - C24212 * C1385 + C24206 * C1390) *
               C154106) *
              C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C153711 * C1279 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C153711 * C153747) *
              C1281 +
          ((C28428 * C355 - C28429 * C340 - C28428 * C356 + C28422 * C376 +
            C28430 * C361 - C28431 * C343 - C28430 * C362 + C28423 * C379 +
            C28432 * C1382 - C28433 * C1374 - C28432 * C1383 + C28424 * C1389 +
            C28434 * C3195 - C28435 * C3190 - C28434 * C3196 + C28425 * C3202 +
            C28436 * C4806 - C28437 * C4802 - C28436 * C4807 + C28426 * C4811) *
               C153638 * C153810 * C153711 * C153747 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C153711 * C1279) *
              C1282 +
          ((C28428 * C148 - C28429 * C138 - C28428 * C149 + C28422 * C162 +
            C28430 * C353 - C28431 * C339 - C28430 * C354 + C28423 * C375 +
            C28432 * C363 - C28433 * C344 - C28432 * C364 + C28424 * C380 +
            C28434 * C1380 - C28435 * C1373 - C28434 * C1381 + C28425 * C1388 +
            C28436 * C3197 - C28437 * C3191 - C28436 * C3198 + C28426 * C3203) *
               C153638 * C153810 * C153711 * C1279 -
           (C28436 * C4804 - C28437 * C4801 - C28436 * C4805 + C28426 * C4810 +
            C28434 * C3197 - C28435 * C3191 - C28434 * C3198 + C28425 * C3203 +
            C28432 * C1380 - C28433 * C1373 - C28432 * C1381 + C28424 * C1388 +
            C28430 * C363 - C28431 * C344 - C28430 * C364 + C28423 * C380 +
            C28428 * C353 - C28429 * C339 - C28428 * C354 + C28422 * C375) *
               C153638 * C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
           C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
           C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
           C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
           C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
              C153638 * C153810 * C153711 * C1366 -
          (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
           C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
           C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
           C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
           C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
              C153638 * C153810 * C153711 * C1367 +
          (C28428 * C359 - C28429 * C342 - C28428 * C360 + C28422 * C378 +
           C28430 * C1384 - C28431 * C1375 - C28430 * C1385 + C28423 * C1390 +
           C28432 * C3193 - C28433 * C3189 - C28432 * C3194 + C28424 * C3201 +
           C28434 * C4808 - C28435 * C4803 - C28434 * C4809 + C28425 * C4812 +
           C28436 * C28562 - C28437 * C28560 - C28436 * C28563 +
           C28426 * C28566) *
              C153638 * C153810 * C153711 * C1368 -
          (C28436 * C29317 - C28437 * C29316 - C28436 * C29318 +
           C28426 * C29319 + C28434 * C28562 - C28435 * C28560 -
           C28434 * C28563 + C28425 * C28566 + C28432 * C4808 - C28433 * C4803 -
           C28432 * C4809 + C28424 * C4812 + C28430 * C3193 - C28431 * C3189 -
           C28430 * C3194 + C28423 * C3201 + C28428 * C1384 - C28429 * C1375 -
           C28428 * C1385 + C28422 * C1390) *
              C153638 * C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154106 +
             C205 * C154087 + C206 * C154058) *
                C47632 +
            (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
               C153711 * C1279 -
           ((C48831 + C48830 + C48829) * C154074 +
            (C48828 + C48827 + C48826) * C47633 +
            (C436 * C154058 + C437 * C154087 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154106) *
                C47632) *
               C153711 * C153747) *
              C1281 +
          (((C437 * C154106 + C436 * C154087 + C435 * C154058) * C47632 +
            (C48832 + C48833 + C48834) * C47633 +
            (C48835 + C48836 + C48837) * C154074) *
               C153711 * C153747 -
           (C48093 * C154074 + (C48083 + C48082 + C48081) * C47633 +
            (C207 * C154058 + C206 * C154087 + C205 * C154106) * C47632) *
               C153711 * C1279) *
              C1282 +
          (((C206 * C154106 + C207 * C154087 + C208 * C154058) * C47632 +
            (C48530 + C48531 + C48532) * C47633 +
            (C48533 + C48534 + C48535) * C154074) *
               C153711 * C1279 -
           (((C134 * C1518 - C135 * C1513 - C134 * C1519 + C153792 * C1528) *
                 C154058 +
             C8059 * C154087 + C7517 * C154106) *
                C154074 +
            (C1157 * C154058 + C1156 * C154087 + C1155 * C154106) * C47633 +
            (C434 * C154058 + C435 * C154087 + C436 * C154106) * C47632) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C154106 +
            C205 * C154087 + C206 * C154058) *
               C47632 +
           (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
              C153711 * C1366 -
          ((C48831 + C48830 + C48829) * C154074 +
           (C48828 + C48827 + C48826) * C47633 +
           (C436 * C154058 + C437 * C154087 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                C154106) *
               C47632) *
              C153711 * C1367 +
          (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                C154106 +
            C438 * C154087 + C439 * C154058) *
               C47632 +
           (C9966 * C154106 + C7519 * C154087 + C7520 * C154058) * C47633 +
           (C9967 * C154106 + C7521 * C154087 + C7522 * C154058) * C154074) *
              C153711 * C1368 -
          (((C134 * C5034 - C135 * C5031 - C134 * C5035 + C153792 * C5040) *
                C154058 +
            (C134 * C5036 - C135 * C5032 - C134 * C5037 + C153792 * C5041) *
                C154087 +
            (C134 * C5038 - C135 * C5033 - C134 * C5039 + C153792 * C5042) *
                C154106) *
               C154074 +
           ((C134 * C4387 - C135 * C4381 - C134 * C4388 + C153792 * C4393) *
                C154058 +
            (C134 * C4385 - C135 * C4380 - C134 * C4386 + C153792 * C4392) *
                C154087 +
            (C134 * C4383 - C135 * C4379 - C134 * C4384 + C153792 * C4391) *
                C154106) *
               C47633 +
           ((C134 * C1380 - C135 * C1373 - C134 * C1381 + C153792 * C1388) *
                C154058 +
            (C134 * C1382 - C135 * C1374 - C134 * C1383 + C153792 * C1389) *
                C154087 +
            (C134 * C1384 - C135 * C1375 - C134 * C1385 + C153792 * C1390) *
                C154106) *
               C47632) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C153638 * C47632 +
            (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
               C153711 * C1279 -
           ((C52927 + C52926 + C52925) * C153638 * C154074 +
            (C52924 + C52923 + C52922) * C153638 * C47633 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C153638 * C47632) *
               C153711 * C153747) *
              C1281 +
          (((C3283 + C3282 + C3281) * C153638 * C47632 +
            (C4432 + C4433 + C4434) * C153638 * C47633 +
            (C52928 + C52929 + C52930) * C153638 * C154074) *
               C153711 * C153747 -
           (C52126 * C154074 + (C3599 + C3600 + C3601) * C153638 * C47633 +
            (C2958 + C2957 + C2956) * C153638 * C47632) *
               C153711 * C1279) *
              C1282 +
          ((C2970 * C153638 * C47632 +
            (C3598 + C3597 + C3596) * C153638 * C47633 +
            (C3605 + C3606 + C3607) * C153638 * C154074) *
               C153711 * C1279 -
           ((C2881 * C5034 - C2882 * C5031 - C2881 * C5035 + C154071 * C5040 +
             C2879 * C3515 - C2880 * C3509 - C2879 * C3516 + C154097 * C3521 +
             C2877 * C1522 - C2878 * C1515 - C2877 * C1523 + C154109 * C1530) *
                C153638 * C154074 +
            (C4437 + C4436 + C4435) * C153638 * C47633 +
            C3839 * C153638 * C47632) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
            C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
            C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
               C153638 * C47632 +
           (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
              C153711 * C1366 -
          ((C52927 + C52926 + C52925) * C153638 * C154074 +
           (C52924 + C52923 + C52922) * C153638 * C47633 +
           (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
            C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
            C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
               C153638 * C47632) *
              C153711 * C1367 +
          ((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
            C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
            C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
               C153638 * C47632 +
           (C2877 * C1957 - C2878 * C1948 - C2877 * C1958 + C154109 * C1963 +
            C2879 * C4383 - C2880 * C4379 - C2879 * C4384 + C154097 * C4391 +
            C2881 * C5776 - C2882 * C5771 - C2881 * C5777 + C154071 * C5780) *
               C153638 * C47633 +
           (C2877 * C3511 - C2878 * C3507 - C2877 * C3512 + C154109 * C3519 +
            C2879 * C5038 - C2880 * C5033 - C2879 * C5039 + C154097 * C5042 +
            C2881 * C28692 - C2882 * C28690 - C2881 * C28693 +
            C154071 * C28696) *
               C153638 * C154074) *
              C153711 * C1368 -
          ((C2881 * C29443 - C2882 * C29442 - C2881 * C29444 +
            C154071 * C29445 + C2879 * C28692 - C2880 * C28690 -
            C2879 * C28693 + C154097 * C28696 + C2877 * C5038 - C2878 * C5033 -
            C2877 * C5039 + C154109 * C5042) *
               C153638 * C154074 +
           (C2881 * C29106 - C2882 * C29104 - C2881 * C29107 +
            C154071 * C29110 + C2879 * C5776 - C2880 * C5771 - C2879 * C5777 +
            C154097 * C5780 + C2877 * C4383 - C2878 * C4379 - C2877 * C4384 +
            C154109 * C4391) *
               C153638 * C47633 +
           (C2881 * C4808 - C2882 * C4803 - C2881 * C4809 + C154071 * C4812 +
            C2879 * C3193 - C2880 * C3189 - C2879 * C3194 + C154097 * C3201 +
            C2877 * C1384 - C2878 * C1375 - C2877 * C1385 + C154109 * C1390) *
               C153638 * C47632) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C2874 +
             (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
                C153810 * C2086 -
            (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
             (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
              C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
              C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                 C2874) *
                C153810 * C153775) *
               C154021 +
           (((C2877 * C1111 - C2878 * C1105 - C2877 * C1112 + C154109 * C1123 +
              C2879 * C1957 - C2880 * C1948 - C2879 * C1958 + C154097 * C1963 +
              C2881 * C4383 - C2882 * C4379 - C2881 * C4384 + C154071 * C4391) *
                 C2874 +
             (C4432 + C4433 + C4434) * C2875 +
             (C4435 + C4436 + C4437) * C154058) *
                C153810 * C153775 -
            (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C2874) *
                C153810 * C2086) *
               C153747) *
              C154013 +
          ((((C3601 + C3600 + C3599) * C2874 + (C3598 + C3597 + C3596) * C2875 +
             (C4087 + C4088 + C4089) * C154058) *
                C153810 * C153775 -
            (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
             (C2958 + C2957 + C2956) * C2874) *
                C153810 * C2086) *
               C154021 +
           (((C3283 + C3282 + C3281) * C2874 + (C3280 + C3279 + C3278) * C2875 +
             (C3846 + C3847 + C3848) * C154058) *
                C153810 * C2086 -
            ((C2881 * C4389 - C2882 * C4382 - C2881 * C4390 + C154071 * C4394 +
              C2879 * C1951 - C2880 * C1945 - C2879 * C1952 + C154097 * C1960 +
              C2877 * C1117 - C2878 * C1108 - C2877 * C1118 + C154109 * C1126) *
                 C154058 +
             (C4437 + C4436 + C4435) * C2875 +
             (C4434 + C4433 + C4432) * C2874) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                C153810 * C2086 -
            (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
             (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) *
                 C122) *
                C153810 * C153775) *
               C154021 +
           (((C134 * C1111 - C135 * C1105 - C134 * C1112 + C153792 * C1123) *
                 C122 +
             C1154 * C123 + C1155 * C124 + C1156 * C125 + C1157 * C126) *
                C153810 * C153775 -
            (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C122) *
                C153810 * C2086) *
               C153747) *
              C154013 +
          (((C666 * C122 + C665 * C123 + C664 * C124 + C663 * C125 +
             C943 * C126) *
                C153810 * C153775 -
            (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
             C205 * C122) *
                C153810 * C2086) *
               C154021 +
           ((C437 * C122 + C436 * C123 + C435 * C124 + C434 * C125 +
             C808 * C126) *
                C153810 * C2086 -
            ((C134 * C1121 - C135 * C1110 - C134 * C1122 + C153792 * C1128) *
                 C126 +
             C1157 * C125 + C1156 * C124 + C1155 * C123 + C1154 * C122) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154106 +
             (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
                C153810 * C2086 -
            (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
             (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
              C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
              C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
              C24212 * C587 + C24206 * C606) *
                 C154106) *
                C153810 * C153775) *
               C154021 +
           (((C24212 * C1111 - C24213 * C1105 - C24212 * C1112 +
              C24206 * C1123 + C24214 * C1957 - C24215 * C1948 -
              C24214 * C1958 + C24207 * C1963 + C24216 * C4383 -
              C24217 * C4379 - C24216 * C4384 + C154071 * C4391) *
                 C154106 +
             (C25719 + C25720 + C25721) * C154087 +
             (C25722 + C25723 + C25724) * C154058) *
                C153810 * C153775 -
            (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C154106) *
                C153810 * C2086) *
               C153747) *
              C154013 +
          ((((C24904 + C24903 + C24902) * C154106 +
             (C24901 + C24900 + C24899) * C154087 +
             (C25390 + C25391 + C25392) * C154058) *
                C153810 * C153775 -
            (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
             (C24293 + C24292 + C24291) * C154106) *
                C153810 * C2086) *
               C154021 +
           (((C24602 + C24601 + C24600) * C154106 +
             (C24599 + C24598 + C24597) * C154087 +
             (C25149 + C25150 + C25151) * C154058) *
                C153810 * C2086 -
            ((C24216 * C4389 - C24217 * C4382 - C24216 * C4390 +
              C154071 * C4394 + C24214 * C1951 - C24215 * C1945 -
              C24214 * C1952 + C24207 * C1960 + C24212 * C1117 -
              C24213 * C1108 - C24212 * C1118 + C24206 * C1126) *
                 C154058 +
             (C25724 + C25723 + C25722) * C154087 +
             (C25721 + C25720 + C25719) * C154106) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
             C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
             C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
             C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
             C28436 * C3193 - C28437 * C3189 - C28436 * C3194 +
             C28426 * C3201) *
                C153638 * C153810 * C2086 -
            (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
             C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
             C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
             C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
             C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
                C153638 * C153810 * C153775) *
               C154021 +
           ((C28428 * C1111 - C28429 * C1105 - C28428 * C1112 + C28422 * C1123 +
             C28430 * C1957 - C28431 * C1948 - C28430 * C1958 + C28423 * C1963 +
             C28432 * C4383 - C28433 * C4379 - C28432 * C4384 + C28424 * C4391 +
             C28434 * C5776 - C28435 * C5771 - C28434 * C5777 + C28425 * C5780 +
             C28436 * C29106 - C28437 * C29104 - C28436 * C29107 +
             C28426 * C29110) *
                C153638 * C153810 * C153775 -
            (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
             C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
             C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
             C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
             C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
                C153638 * C153810 * C2086) *
               C153747) *
              C154013 +
          (((C28428 * C584 - C28429 * C569 - C28428 * C585 + C28422 * C605 +
             C28430 * C1113 - C28431 * C1106 - C28430 * C1114 + C28423 * C1124 +
             C28432 * C1955 - C28433 * C1947 - C28432 * C1956 + C28424 * C1962 +
             C28434 * C4385 - C28435 * C4380 - C28434 * C4386 + C28425 * C4392 +
             C28436 * C5774 - C28437 * C5770 - C28436 * C5775 +
             C28426 * C5779) *
                C153638 * C153810 * C153775 -
            (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
             C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
             C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
             C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
             C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
                C153638 * C153810 * C2086) *
               C154021 +
           ((C28428 * C355 - C28429 * C340 - C28428 * C356 + C28422 * C376 +
             C28430 * C361 - C28431 * C343 - C28430 * C362 + C28423 * C379 +
             C28432 * C1382 - C28433 * C1374 - C28432 * C1383 + C28424 * C1389 +
             C28434 * C3195 - C28435 * C3190 - C28434 * C3196 + C28425 * C3202 +
             C28436 * C4806 - C28437 * C4802 - C28436 * C4807 +
             C28426 * C4811) *
                C153638 * C153810 * C2086 -
            (C28436 * C29108 - C28437 * C29105 - C28436 * C29109 +
             C28426 * C29111 + C28434 * C5774 - C28435 * C5770 -
             C28434 * C5775 + C28425 * C5779 + C28432 * C4385 - C28433 * C4380 -
             C28432 * C4386 + C28424 * C4392 + C28430 * C1955 - C28431 * C1947 -
             C28430 * C1956 + C28423 * C1962 + C28428 * C1113 - C28429 * C1106 -
             C28428 * C1114 + C28422 * C1124) *
                C153638 * C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                  C154106 +
              C205 * C154087 + C206 * C154058) *
                 C47632 +
             (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
                C2086 -
            (C50743 * C154074 + (C48077 + C48076 + C48075) * C47633 +
             (C48074 + C48073 + C48072) * C47632) *
                C153775) *
               C154021 +
           (((C48826 + C48827 + C48828) * C47632 +
             (C48829 + C48830 + C48831) * C47633 +
             (C49420 + C49421 + C49422) * C154074) *
                C153775 -
            (C49424 * C154074 + (C48828 + C48827 + C48826) * C47633 +
             (C436 * C154058 + C437 * C154087 +
              (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                  C154106) *
                 C47632) *
                C2086) *
               C153747) *
              C154013 +
          ((((C48081 + C48082 + C48083) * C47632 +
             (C48084 + C48085 + C48086) * C47633 +
             (C48087 + C48088 + C48089) * C154074) *
                C153775 -
            (C48093 * C154074 + (C48083 + C48082 + C48081) * C47633 +
             (C207 * C154058 + C206 * C154087 + C205 * C154106) * C47632) *
                C2086) *
               C154021 +
           (((C437 * C154106 + C436 * C154087 + C435 * C154058) * C47632 +
             (C48832 + C48833 + C48834) * C47633 +
             (C48835 + C48836 + C48837) * C154074) *
                C2086 -
            (((C134 * C8574 - C135 * C8573 - C134 * C8575 + C153792 * C8576) *
                  C154058 +
              C8615 * C154087 + C8614 * C154106) *
                 C154074 +
             (C48837 + C48836 + C48835) * C47633 +
             (C48834 + C48833 + C48832) * C47632) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C153638 * C47632 +
             (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
                C2086 -
            (C54904 * C154074 + (C52132 + C52131 + C52130) * C153638 * C47633 +
             (C52129 + C52128 + C52127) * C153638 * C47632) *
                C153775) *
               C154021 +
           (((C52922 + C52923 + C52924) * C153638 * C47632 +
             (C52925 + C52926 + C52927) * C153638 * C47633 +
             (C53534 + C53535 + C53536) * C153638 * C154074) *
                C153775 -
            (C53533 * C154074 + (C52924 + C52923 + C52922) * C153638 * C47633 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C153638 * C47632) *
                C2086) *
               C153747) *
              C154013 +
          ((((C3601 + C3600 + C3599) * C153638 * C47632 +
             (C3602 + C3603 + C3604) * C153638 * C47633 +
             (C52136 + C52137 + C52138) * C153638 * C154074) *
                C153775 -
            (C52126 * C154074 + (C3599 + C3600 + C3601) * C153638 * C47633 +
             (C2958 + C2957 + C2956) * C153638 * C47632) *
                C2086) *
               C154021 +
           (((C3283 + C3282 + C3281) * C153638 * C47632 +
             (C4432 + C4433 + C4434) * C153638 * C47633 +
             (C52928 + C52929 + C52930) * C153638 * C154074) *
                C2086 -
            ((C2881 * C32003 - C2882 * C32002 - C2881 * C32004 +
              C154071 * C32005 + C2879 * C6373 - C2880 * C6365 - C2879 * C6374 +
              C154097 * C6383 + C2877 * C6375 - C2878 * C6366 - C2877 * C6376 +
              C154109 * C6384) *
                 C153638 * C154074 +
             (C52930 + C52929 + C52928) * C153638 * C47633 +
             (C4434 + C4433 + C4432) * C153638 * C47632) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C154094 -
           (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
            (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
             C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
             C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                C2874) *
               C153810 * C154095 +
           ((C2877 * C588 - C2878 * C571 - C2877 * C589 + C154109 * C607 +
             C2879 * C1526 - C2880 * C1517 - C2879 * C1527 + C154097 * C1532 +
             C2881 * C3511 - C2882 * C3507 - C2881 * C3512 + C154071 * C3519) *
                C2874 +
            (C3602 + C3603 + C3604) * C2875 +
            (C3605 + C3606 + C3607) * C154058) *
               C153810 * C2602) *
              C154021 +
          (((C2877 * C1111 - C2878 * C1105 - C2877 * C1112 + C154109 * C1123 +
             C2879 * C1957 - C2880 * C1948 - C2879 * C1958 + C154097 * C1963 +
             C2881 * C4383 - C2882 * C4379 - C2881 * C4384 + C154071 * C4391) *
                C2874 +
            (C4432 + C4433 + C4434) * C2875 +
            (C4435 + C4436 + C4437) * C154058) *
               C153810 * C154095 -
           (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C2874) *
               C153810 * C154094 -
           ((C2881 * C5034 - C2882 * C5031 - C2881 * C5035 + C154071 * C5040 +
             C2879 * C3515 - C2880 * C3509 - C2879 * C3516 + C154097 * C3521 +
             C2877 * C1522 - C2878 * C1515 - C2877 * C1523 + C154109 * C1530) *
                C154058 +
            (C2881 * C5036 - C2882 * C5032 - C2881 * C5037 + C154071 * C5041 +
             C2879 * C3513 - C2880 * C3508 - C2879 * C3514 + C154097 * C3520 +
             C2877 * C1524 - C2878 * C1516 - C2877 * C1525 + C154109 * C1531) *
                C2875 +
            (C2881 * C5038 - C2882 * C5033 - C2881 * C5039 + C154071 * C5042 +
             C2879 * C3511 - C2880 * C3507 - C2879 * C3512 + C154097 * C3519 +
             C2877 * C1526 - C2878 * C1517 - C2877 * C1527 + C154109 * C1532) *
                C2874) *
               C153810 * C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C154094 -
           (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
            (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) * C122) *
               C153810 * C154095 +
           ((C134 * C588 - C135 * C571 - C134 * C589 + C153792 * C607) * C122 +
            C667 * C123 + C668 * C124 + C669 * C125 + C670 * C126) *
               C153810 * C2602) *
              C154021 +
          (((C134 * C1111 - C135 * C1105 - C134 * C1112 + C153792 * C1123) *
                C122 +
            C1154 * C123 + C1155 * C124 + C1156 * C125 + C1157 * C126) *
               C153810 * C154095 -
           (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) * C122) *
               C153810 * C154094 -
           ((C134 * C1518 - C135 * C1513 - C134 * C1519 + C153792 * C1528) *
                C126 +
            (C134 * C1520 - C135 * C1514 - C134 * C1521 + C153792 * C1529) *
                C125 +
            (C134 * C1522 - C135 * C1515 - C134 * C1523 + C153792 * C1530) *
                C124 +
            (C134 * C1524 - C135 * C1516 - C134 * C1525 + C153792 * C1531) *
                C123 +
            (C134 * C1526 - C135 * C1517 - C134 * C1527 + C153792 * C1532) *
                C122) *
               C153810 * C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C154094 -
           (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C154095 +
           ((C24212 * C588 - C24213 * C571 - C24212 * C589 + C24206 * C607 +
             C24214 * C1526 - C24215 * C1517 - C24214 * C1527 + C24207 * C1532 +
             C24216 * C3511 - C24217 * C3507 - C24216 * C3512 +
             C154071 * C3519) *
                C154106 +
            (C24905 + C24906 + C24907) * C154087 +
            (C24908 + C24909 + C24910) * C154058) *
               C153810 * C2602) *
              C154021 +
          (((C24212 * C1111 - C24213 * C1105 - C24212 * C1112 + C24206 * C1123 +
             C24214 * C1957 - C24215 * C1948 - C24214 * C1958 + C24207 * C1963 +
             C24216 * C4383 - C24217 * C4379 - C24216 * C4384 +
             C154071 * C4391) *
                C154106 +
            (C25719 + C25720 + C25721) * C154087 +
            (C25722 + C25723 + C25724) * C154058) *
               C153810 * C154095 -
           (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C154094 -
           ((C24216 * C5034 - C24217 * C5031 - C24216 * C5035 +
             C154071 * C5040 + C24214 * C3515 - C24215 * C3509 -
             C24214 * C3516 + C24207 * C3521 + C24212 * C1522 - C24213 * C1515 -
             C24212 * C1523 + C24206 * C1530) *
                C154058 +
            (C24216 * C5036 - C24217 * C5032 - C24216 * C5037 +
             C154071 * C5041 + C24214 * C3513 - C24215 * C3508 -
             C24214 * C3514 + C24207 * C3520 + C24212 * C1524 - C24213 * C1516 -
             C24212 * C1525 + C24206 * C1531) *
                C154087 +
            (C24216 * C5038 - C24217 * C5033 - C24216 * C5039 +
             C154071 * C5042 + C24214 * C3511 - C24215 * C3507 -
             C24214 * C3512 + C24207 * C3519 + C24212 * C1526 - C24213 * C1517 -
             C24212 * C1527 + C24206 * C1532) *
                C154106) *
               C153810 * C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C154094 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C154095 +
           (C28428 * C588 - C28429 * C571 - C28428 * C589 + C28422 * C607 +
            C28430 * C1526 - C28431 * C1517 - C28430 * C1527 + C28423 * C1532 +
            C28432 * C3511 - C28433 * C3507 - C28432 * C3512 + C28424 * C3519 +
            C28434 * C5038 - C28435 * C5033 - C28434 * C5039 + C28425 * C5042 +
            C28436 * C28692 - C28437 * C28690 - C28436 * C28693 +
            C28426 * C28696) *
               C153638 * C153810 * C2602) *
              C154021 +
          ((C28428 * C1111 - C28429 * C1105 - C28428 * C1112 + C28422 * C1123 +
            C28430 * C1957 - C28431 * C1948 - C28430 * C1958 + C28423 * C1963 +
            C28432 * C4383 - C28433 * C4379 - C28432 * C4384 + C28424 * C4391 +
            C28434 * C5776 - C28435 * C5771 - C28434 * C5777 + C28425 * C5780 +
            C28436 * C29106 - C28437 * C29104 - C28436 * C29107 +
            C28426 * C29110) *
               C153638 * C153810 * C154095 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C154094 -
           (C28436 * C29443 - C28437 * C29442 - C28436 * C29444 +
            C28426 * C29445 + C28434 * C28692 - C28435 * C28690 -
            C28434 * C28693 + C28425 * C28696 + C28432 * C5038 -
            C28433 * C5033 - C28432 * C5039 + C28424 * C5042 + C28430 * C3511 -
            C28431 * C3507 - C28430 * C3512 + C28423 * C3519 + C28428 * C1526 -
            C28429 * C1517 - C28428 * C1527 + C28422 * C1532) *
               C153638 * C153810 * C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154106 +
             C205 * C154087 + C206 * C154058) *
                C47632 +
            (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
               C154094 -
           (C50743 * C154074 + (C48077 + C48076 + C48075) * C47633 +
            (C48074 + C48073 + C48072) * C47632) *
               C154095 +
           (C48092 * C47632 + (C48080 + C48079 + C48078) * C47633 +
            (C50740 + C50741 + C50742) * C154074) *
               C2602) *
              C154021 +
          (((C48826 + C48827 + C48828) * C47632 +
            (C48829 + C48830 + C48831) * C47633 +
            (C49420 + C49421 + C49422) * C154074) *
               C154095 -
           (C49424 * C154074 + (C48828 + C48827 + C48826) * C47633 +
            (C436 * C154058 + C437 * C154087 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154106) *
                C47632) *
               C154094 -
           (((C134 * C9202 - C135 * C9199 - C134 * C9203 + C153792 * C9208) *
                 C154058 +
             (C134 * C9204 - C135 * C9200 - C134 * C9205 + C153792 * C9209) *
                 C154087 +
             (C134 * C9206 - C135 * C9201 - C134 * C9207 + C153792 * C9210) *
                 C154106) *
                C154074 +
            (C49422 + C49421 + C49420) * C47633 + C49424 * C47632) *
               C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C153638 * C47632 +
            (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
               C154094 -
           (C54904 * C154074 + (C52132 + C52131 + C52130) * C153638 * C47633 +
            (C52129 + C52128 + C52127) * C153638 * C47632) *
               C154095 +
           (C52141 * C47632 + (C52135 + C52134 + C52133) * C153638 * C47633 +
            (C54908 + C54909 + C54910) * C153638 * C154074) *
               C2602) *
              C154021 +
          (((C52922 + C52923 + C52924) * C153638 * C47632 +
            (C52925 + C52926 + C52927) * C153638 * C47633 +
            (C53534 + C53535 + C53536) * C153638 * C154074) *
               C154095 -
           (C53533 * C154074 + (C52924 + C52923 + C52922) * C153638 * C47633 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C153638 * C47632) *
               C154094 -
           ((C2881 * C32652 - C2882 * C32651 - C2881 * C32653 +
             C154071 * C32654 + C2879 * C31180 - C2880 * C31178 -
             C2879 * C31181 + C154097 * C31184 + C2877 * C9206 - C2878 * C9201 -
             C2877 * C9207 + C154109 * C9210) *
                C153638 * C154074 +
            (C53536 + C53535 + C53534) * C153638 * C47633 + C53533 * C47632) *
               C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                    C122 +
                C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                   C153810 * C2086 -
               (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
                (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) *
                    C122) *
                   C153810 * C153775) *
                  C153695 * C1281 +
              ((C666 * C122 + C665 * C123 + C664 * C124 + C663 * C125 +
                C943 * C126) *
                   C153810 * C153775 -
               (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
                C205 * C122) *
                   C153810 * C2086) *
                  C153695 * C1282 +
              ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125 +
                C210 * C126) *
                   C153810 * C2086 -
               ((C134 * C933 - C135 * C932 - C134 * C934 + C153792 * C935) *
                    C126 +
                C943 * C125 + C663 * C124 + C664 * C123 + C665 * C122) *
                   C153810 * C153775) *
                  C153695 * C1283) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                    C122 +
                C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                   C153810 * C2086 -
               (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
                (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) *
                    C122) *
                   C153810 * C153775) *
                  C332 +
              (((C134 * C1111 - C135 * C1105 - C134 * C1112 + C153792 * C1123) *
                    C122 +
                C1154 * C123 + C1155 * C124 + C1156 * C125 + C1157 * C126) *
                   C153810 * C153775 -
               (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
                (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                    C122) *
                   C153810 * C2086) *
                  C333 +
              (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                    C122 +
                C438 * C123 + C439 * C124 + C440 * C125 + C441 * C126) *
                   C153810 * C2086 -
               ((C134 * C1949 - C135 * C1944 - C134 * C1950 + C153792 * C1959) *
                    C126 +
                (C134 * C1951 - C135 * C1945 - C134 * C1952 + C153792 * C1960) *
                    C125 +
                (C134 * C1953 - C135 * C1946 - C134 * C1954 + C153792 * C1961) *
                    C124 +
                (C134 * C1955 - C135 * C1947 - C134 * C1956 + C153792 * C1962) *
                    C123 +
                (C134 * C1957 - C135 * C1948 - C134 * C1958 + C153792 * C1963) *
                    C122) *
                   C153810 * C153775) *
                  C334) *
             C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
           C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
              C153810 * C2292 -
          (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
           (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) * C122) *
              C153810 * C2293 +
          ((C134 * C588 - C135 * C571 - C134 * C589 + C153792 * C607) * C122 +
           C667 * C123 + C668 * C124 + C669 * C125 + C670 * C126) *
              C153810 * C2294 -
          ((C134 * C2301 - C135 * C2296 - C134 * C2302 + C153792 * C2311) *
               C126 +
           (C134 * C2303 - C135 * C2297 - C134 * C2304 + C153792 * C2312) *
               C125 +
           (C134 * C2305 - C135 * C2298 - C134 * C2306 + C153792 * C2313) *
               C124 +
           (C134 * C2307 - C135 * C2299 - C134 * C2308 + C153792 * C2314) *
               C123 +
           (C134 * C2309 - C135 * C2300 - C134 * C2310 + C153792 * C2315) *
               C122) *
              C153810 * C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C2086 -
           (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
            (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
             C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
             C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                C2874) *
               C153810 * C153775) *
              C153695 * C1281 +
          (((C3601 + C3600 + C3599) * C2874 + (C3598 + C3597 + C3596) * C2875 +
            (C4087 + C4088 + C4089) * C154058) *
               C153810 * C153775 -
           (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
            (C2958 + C2957 + C2956) * C2874) *
               C153810 * C2086) *
              C153695 * C1282 +
          ((C2970 * C2874 + (C2964 + C2963 + C2962) * C2875 +
            (C2965 + C2966 + C2967) * C154058) *
               C153810 * C2086 -
           ((C2881 * C1949 - C2882 * C1944 - C2881 * C1950 + C154071 * C1959 +
             C2879 * C1119 - C2880 * C1109 - C2879 * C1120 + C154097 * C1127 +
             C2877 * C578 - C2878 * C566 - C2877 * C579 + C154109 * C602) *
                C154058 +
            (C4089 + C4088 + C4087) * C2875 + C4080 * C2874) *
               C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C2086 -
           (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
            (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
             C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
             C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                C2874) *
               C153810 * C153775) *
              C332 +
          (((C2877 * C1111 - C2878 * C1105 - C2877 * C1112 + C154109 * C1123 +
             C2879 * C1957 - C2880 * C1948 - C2879 * C1958 + C154097 * C1963 +
             C2881 * C4383 - C2882 * C4379 - C2881 * C4384 + C154071 * C4391) *
                C2874 +
            (C4432 + C4433 + C4434) * C2875 +
            (C4435 + C4436 + C4437) * C154058) *
               C153810 * C153775 -
           (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C2874) *
               C153810 * C2086) *
              C333 +
          (((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
             C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
             C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                C2874 +
            (C3284 + C3285 + C3286) * C2875 +
            (C3287 + C3288 + C3289) * C154058) *
               C153810 * C2086 -
           ((C2881 * C5772 - C2882 * C5769 - C2881 * C5773 + C154071 * C5778 +
             C2879 * C4387 - C2880 * C4381 - C2879 * C4388 + C154097 * C4393 +
             C2877 * C1953 - C2878 * C1946 - C2877 * C1954 + C154109 * C1961) *
                C154058 +
            (C2881 * C5774 - C2882 * C5770 - C2881 * C5775 + C154071 * C5779 +
             C2879 * C4385 - C2880 * C4380 - C2879 * C4386 + C154097 * C4392 +
             C2877 * C1955 - C2878 * C1947 - C2877 * C1956 + C154109 * C1962) *
                C2875 +
            (C2881 * C5776 - C2882 * C5771 - C2881 * C5777 + C154071 * C5780 +
             C2879 * C4383 - C2880 * C4379 - C2879 * C4384 + C154097 * C4391 +
             C2877 * C1957 - C2878 * C1948 - C2877 * C1958 + C154109 * C1963) *
                C2874) *
               C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
            C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
            C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
               C2874 +
           (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
              C153810 * C2292 -
          (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
           (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
            C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
            C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
               C2874) *
              C153810 * C2293 +
          ((C2877 * C588 - C2878 * C571 - C2877 * C589 + C154109 * C607 +
            C2879 * C1526 - C2880 * C1517 - C2879 * C1527 + C154097 * C1532 +
            C2881 * C3511 - C2882 * C3507 - C2881 * C3512 + C154071 * C3519) *
               C2874 +
           (C3602 + C3603 + C3604) * C2875 +
           (C3605 + C3606 + C3607) * C154058) *
              C153810 * C2294 -
          ((C2881 * C6369 - C2882 * C6363 - C2881 * C6370 + C154071 * C6381 +
            C2879 * C6371 - C2880 * C6364 - C2879 * C6372 + C154097 * C6382 +
            C2877 * C2305 - C2878 * C2298 - C2877 * C2306 + C154109 * C2313) *
               C154058 +
           (C2881 * C6373 - C2882 * C6365 - C2881 * C6374 + C154071 * C6383 +
            C2879 * C6375 - C2880 * C6366 - C2879 * C6376 + C154097 * C6384 +
            C2877 * C2307 - C2878 * C2299 - C2877 * C2308 + C154109 * C2314) *
               C2875 +
           (C2881 * C6377 - C2882 * C6367 - C2881 * C6378 + C154071 * C6385 +
            C2879 * C6379 - C2880 * C6368 - C2879 * C6380 + C154097 * C6386 +
            C2877 * C2309 - C2878 * C2300 - C2877 * C2310 + C154109 * C2315) *
               C2874) *
              C153810 * C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C2086 -
           (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C153775) *
              C153695 * C1281 +
          (((C24904 + C24903 + C24902) * C154106 +
            (C24901 + C24900 + C24899) * C154087 +
            (C25390 + C25391 + C25392) * C154058) *
               C153810 * C153775 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C2086) *
              C153695 * C1282 +
          ((C24305 * C154106 + (C24299 + C24298 + C24297) * C154087 +
            (C24300 + C24301 + C24302) * C154058) *
               C153810 * C2086 -
           ((C24216 * C1949 - C24217 * C1944 - C24216 * C1950 +
             C154071 * C1959 + C24214 * C1119 - C24215 * C1109 -
             C24214 * C1120 + C24207 * C1127 + C24212 * C578 - C24213 * C566 -
             C24212 * C579 + C24206 * C602) *
                C154058 +
            (C25392 + C25391 + C25390) * C154087 + C25383 * C154106) *
               C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C2086 -
           (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C153775) *
              C332 +
          (((C24212 * C1111 - C24213 * C1105 - C24212 * C1112 + C24206 * C1123 +
             C24214 * C1957 - C24215 * C1948 - C24214 * C1958 + C24207 * C1963 +
             C24216 * C4383 - C24217 * C4379 - C24216 * C4384 +
             C154071 * C4391) *
                C154106 +
            (C25719 + C25720 + C25721) * C154087 +
            (C25722 + C25723 + C25724) * C154058) *
               C153810 * C153775 -
           (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C2086) *
              C333 +
          (((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C154106 +
            (C24603 + C24604 + C24605) * C154087 +
            (C24606 + C24607 + C24608) * C154058) *
               C153810 * C2086 -
           ((C24216 * C5772 - C24217 * C5769 - C24216 * C5773 +
             C154071 * C5778 + C24214 * C4387 - C24215 * C4381 -
             C24214 * C4388 + C24207 * C4393 + C24212 * C1953 - C24213 * C1946 -
             C24212 * C1954 + C24206 * C1961) *
                C154058 +
            (C24216 * C5774 - C24217 * C5770 - C24216 * C5775 +
             C154071 * C5779 + C24214 * C4385 - C24215 * C4380 -
             C24214 * C4386 + C24207 * C4392 + C24212 * C1955 - C24213 * C1947 -
             C24212 * C1956 + C24206 * C1962) *
                C154087 +
            (C24216 * C5776 - C24217 * C5771 - C24216 * C5777 +
             C154071 * C5780 + C24214 * C4383 - C24215 * C4379 -
             C24214 * C4384 + C24207 * C4391 + C24212 * C1957 - C24213 * C1948 -
             C24212 * C1958 + C24206 * C1963) *
                C154106) *
               C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
            C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
            C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
               C154106 +
           (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
              C153810 * C2292 -
          (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
           (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 + C154071 * C1963 +
            C24214 * C1111 - C24215 * C1105 - C24214 * C1112 + C24207 * C1123 +
            C24212 * C586 - C24213 * C570 - C24212 * C587 + C24206 * C606) *
               C154106) *
              C153810 * C2293 +
          ((C24212 * C588 - C24213 * C571 - C24212 * C589 + C24206 * C607 +
            C24214 * C1526 - C24215 * C1517 - C24214 * C1527 + C24207 * C1532 +
            C24216 * C3511 - C24217 * C3507 - C24216 * C3512 +
            C154071 * C3519) *
               C154106 +
           (C24905 + C24906 + C24907) * C154087 +
           (C24908 + C24909 + C24910) * C154058) *
              C153810 * C2294 -
          ((C24216 * C6369 - C24217 * C6363 - C24216 * C6370 + C154071 * C6381 +
            C24214 * C6371 - C24215 * C6364 - C24214 * C6372 + C24207 * C6382 +
            C24212 * C2305 - C24213 * C2298 - C24212 * C2306 + C24206 * C2313) *
               C154058 +
           (C24216 * C6373 - C24217 * C6365 - C24216 * C6374 + C154071 * C6383 +
            C24214 * C6375 - C24215 * C6366 - C24214 * C6376 + C24207 * C6384 +
            C24212 * C2307 - C24213 * C2299 - C24212 * C2308 + C24206 * C2314) *
               C154087 +
           (C24216 * C6377 - C24217 * C6367 - C24216 * C6378 + C154071 * C6385 +
            C24214 * C6379 - C24215 * C6368 - C24214 * C6380 + C24207 * C6386 +
            C24212 * C2309 - C24213 * C2300 - C24212 * C2310 + C24206 * C2315) *
               C154106) *
              C153810 * C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C2086 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C153775) *
              C153695 * C1281 +
          ((C28428 * C584 - C28429 * C569 - C28428 * C585 + C28422 * C605 +
            C28430 * C1113 - C28431 * C1106 - C28430 * C1114 + C28423 * C1124 +
            C28432 * C1955 - C28433 * C1947 - C28432 * C1956 + C28424 * C1962 +
            C28434 * C4385 - C28435 * C4380 - C28434 * C4386 + C28425 * C4392 +
            C28436 * C5774 - C28437 * C5770 - C28436 * C5775 + C28426 * C5779) *
               C153638 * C153810 * C153775 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C2086) *
              C153695 * C1282 +
          ((C28428 * C148 - C28429 * C138 - C28428 * C149 + C28422 * C162 +
            C28430 * C353 - C28431 * C339 - C28430 * C354 + C28423 * C375 +
            C28432 * C363 - C28433 * C344 - C28432 * C364 + C28424 * C380 +
            C28434 * C1380 - C28435 * C1373 - C28434 * C1381 + C28425 * C1388 +
            C28436 * C3197 - C28437 * C3191 - C28436 * C3198 + C28426 * C3203) *
               C153638 * C153810 * C2086 -
           (C28436 * C5772 - C28437 * C5769 - C28436 * C5773 + C28426 * C5778 +
            C28434 * C4387 - C28435 * C4381 - C28434 * C4388 + C28425 * C4393 +
            C28432 * C1953 - C28433 * C1946 - C28432 * C1954 + C28424 * C1961 +
            C28430 * C1115 - C28431 * C1107 - C28430 * C1116 + C28423 * C1125 +
            C28428 * C582 - C28429 * C568 - C28428 * C583 + C28422 * C604) *
               C153638 * C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C2086 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C153775) *
              C332 +
          ((C28428 * C1111 - C28429 * C1105 - C28428 * C1112 + C28422 * C1123 +
            C28430 * C1957 - C28431 * C1948 - C28430 * C1958 + C28423 * C1963 +
            C28432 * C4383 - C28433 * C4379 - C28432 * C4384 + C28424 * C4391 +
            C28434 * C5776 - C28435 * C5771 - C28434 * C5777 + C28425 * C5780 +
            C28436 * C29106 - C28437 * C29104 - C28436 * C29107 +
            C28426 * C29110) *
               C153638 * C153810 * C153775 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C2086) *
              C333 +
          ((C28428 * C359 - C28429 * C342 - C28428 * C360 + C28422 * C378 +
            C28430 * C1384 - C28431 * C1375 - C28430 * C1385 + C28423 * C1390 +
            C28432 * C3193 - C28433 * C3189 - C28432 * C3194 + C28424 * C3201 +
            C28434 * C4808 - C28435 * C4803 - C28434 * C4809 + C28425 * C4812 +
            C28436 * C28562 - C28437 * C28560 - C28436 * C28563 +
            C28426 * C28566) *
               C153638 * C153810 * C2086 -
           (C28436 * C29853 - C28437 * C29852 - C28436 * C29854 +
            C28426 * C29855 + C28434 * C29106 - C28435 * C29104 -
            C28434 * C29107 + C28425 * C29110 + C28432 * C5776 -
            C28433 * C5771 - C28432 * C5777 + C28424 * C5780 + C28430 * C4383 -
            C28431 * C4379 - C28430 * C4384 + C28423 * C4391 + C28428 * C1957 -
            C28429 * C1948 - C28428 * C1958 + C28422 * C1963) *
               C153638 * C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
           C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
           C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
           C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
           C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
              C153638 * C153810 * C2292 -
          (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
           C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
           C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
           C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
           C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
              C153638 * C153810 * C2293 +
          (C28428 * C588 - C28429 * C571 - C28428 * C589 + C28422 * C607 +
           C28430 * C1526 - C28431 * C1517 - C28430 * C1527 + C28423 * C1532 +
           C28432 * C3511 - C28433 * C3507 - C28432 * C3512 + C28424 * C3519 +
           C28434 * C5038 - C28435 * C5033 - C28434 * C5039 + C28425 * C5042 +
           C28436 * C28692 - C28437 * C28690 - C28436 * C28693 +
           C28426 * C28696) *
              C153638 * C153810 * C2294 -
          (C28436 * C30184 - C28437 * C30182 - C28436 * C30185 +
           C28426 * C30188 + C28434 * C30186 - C28435 * C30183 -
           C28434 * C30187 + C28425 * C30189 + C28432 * C6377 - C28433 * C6367 -
           C28432 * C6378 + C28424 * C6385 + C28430 * C6379 - C28431 * C6368 -
           C28430 * C6380 + C28423 * C6386 + C28428 * C2309 - C28429 * C2300 -
           C28428 * C2310 + C28422 * C2315) *
              C153638 * C153810 * C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154106 +
             C205 * C154087 + C206 * C154058) *
                C47632 +
            (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
               C2086 -
           ((C48078 + C48079 + C48080) * C154074 +
            (C48077 + C48076 + C48075) * C47633 +
            (C48074 + C48073 + C48072) * C47632) *
               C153775) *
              C153695 * C1281 +
          (((C48081 + C48082 + C48083) * C47632 +
            (C48084 + C48085 + C48086) * C47633 +
            (C48087 + C48088 + C48089) * C154074) *
               C153775 -
           (C48093 * C154074 + (C48083 + C48082 + C48081) * C47633 +
            (C207 * C154058 + C206 * C154087 + C205 * C154106) * C47632) *
               C2086) *
              C153695 * C1282 +
          (((C206 * C154106 + C207 * C154087 + C208 * C154058) * C47632 +
            (C48530 + C48531 + C48532) * C47633 +
            (C48533 + C48534 + C48535) * C154074) *
               C2086 -
           (((C134 * C2301 - C135 * C2296 - C134 * C2302 + C153792 * C2311) *
                 C154058 +
             C7824 * C154087 + C7819 * C154106) *
                C154074 +
            (C48535 + C48534 + C48533) * C47633 +
            (C48532 + C48531 + C48530) * C47632) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154106 +
             C205 * C154087 + C206 * C154058) *
                C47632 +
            (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
               C2086 -
           ((C48078 + C48079 + C48080) * C154074 +
            (C48077 + C48076 + C48075) * C47633 +
            (C48074 + C48073 + C48072) * C47632) *
               C153775) *
              C332 +
          (((C48826 + C48827 + C48828) * C47632 +
            (C48829 + C48830 + C48831) * C47633 +
            (C49420 + C49421 + C49422) * C154074) *
               C153775 -
           (C49424 * C154074 + (C48828 + C48827 + C48826) * C47633 +
            (C436 * C154058 + C437 * C154087 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154106) *
                C47632) *
               C2086) *
              C333 +
          ((((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C154106 +
             C438 * C154087 + C439 * C154058) *
                C47632 +
            (C50151 + C50152 + C50153) * C47633 +
            (C50154 + C50155 + C50156) * C154074) *
               C2086 -
           (((C134 * C6369 - C135 * C6363 - C134 * C6370 + C153792 * C6381) *
                 C154058 +
             (C134 * C6373 - C135 * C6365 - C134 * C6374 + C153792 * C6383) *
                 C154087 +
             (C134 * C6377 - C135 * C6367 - C134 * C6378 + C153792 * C6385) *
                 C154106) *
                C154074 +
            (C50156 + C50155 + C50154) * C47633 +
            (C50153 + C50152 + C50151) * C47632) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C154106 +
            C205 * C154087 + C206 * C154058) *
               C47632 +
           (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
              C2292 -
          (C50743 * C154074 + (C48077 + C48076 + C48075) * C47633 +
           (C48074 + C48073 + C48072) * C47632) *
              C2293 +
          (C48092 * C47632 + (C48080 + C48079 + C48078) * C47633 +
           (C50740 + C50741 + C50742) * C154074) *
              C2294 -
          (((C134 * C10554 - C135 * C10551 - C134 * C10555 + C153792 * C10560) *
                C154058 +
            (C134 * C10556 - C135 * C10552 - C134 * C10557 + C153792 * C10561) *
                C154087 +
            (C134 * C10558 - C135 * C10553 - C134 * C10559 + C153792 * C10562) *
                C154106) *
               C154074 +
           (C50742 + C50741 + C50740) * C47633 + C50743 * C47632) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C153638 * C47632 +
            (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
               C2086 -
           ((C52133 + C52134 + C52135) * C153638 * C154074 +
            (C52132 + C52131 + C52130) * C153638 * C47633 +
            (C52129 + C52128 + C52127) * C153638 * C47632) *
               C153775) *
              C153695 * C1281 +
          (((C3601 + C3600 + C3599) * C153638 * C47632 +
            (C3602 + C3603 + C3604) * C153638 * C47633 +
            (C52136 + C52137 + C52138) * C153638 * C154074) *
               C153775 -
           (C52126 * C154074 + (C3599 + C3600 + C3601) * C153638 * C47633 +
            (C2958 + C2957 + C2956) * C153638 * C47632) *
               C2086) *
              C153695 * C1282 +
          ((C2970 * C153638 * C47632 +
            (C3598 + C3597 + C3596) * C153638 * C47633 +
            (C3605 + C3606 + C3607) * C153638 * C154074) *
               C2086 -
           ((C2881 * C6369 - C2882 * C6363 - C2881 * C6370 + C154071 * C6381 +
             C2879 * C6371 - C2880 * C6364 - C2879 * C6372 + C154097 * C6382 +
             C2877 * C2305 - C2878 * C2298 - C2877 * C2306 + C154109 * C2313) *
                C153638 * C154074 +
            (C3607 + C3606 + C3605) * C153638 * C47633 +
            C4080 * C153638 * C47632) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C153638 * C47632 +
            (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
               C2086 -
           ((C52133 + C52134 + C52135) * C153638 * C154074 +
            (C52132 + C52131 + C52130) * C153638 * C47633 +
            (C52129 + C52128 + C52127) * C153638 * C47632) *
               C153775) *
              C332 +
          (((C52922 + C52923 + C52924) * C153638 * C47632 +
            (C52925 + C52926 + C52927) * C153638 * C47633 +
            (C53534 + C53535 + C53536) * C153638 * C154074) *
               C153775 -
           (C53533 * C154074 + (C52924 + C52923 + C52922) * C153638 * C47633 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C153638 * C47632) *
               C2086) *
              C333 +
          (((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
             C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
             C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                C153638 * C47632 +
            (C54299 + C54300 + C54301) * C153638 * C47633 +
            (C54302 + C54303 + C54304) * C153638 * C154074) *
               C2086 -
           ((C2881 * C30184 - C2882 * C30182 - C2881 * C30185 +
             C154071 * C30188 + C2879 * C30186 - C2880 * C30183 -
             C2879 * C30187 + C154097 * C30189 + C2877 * C6377 - C2878 * C6367 -
             C2877 * C6378 + C154109 * C6385) *
                C153638 * C154074 +
            (C54304 + C54303 + C54302) * C153638 * C47633 +
            (C54301 + C54300 + C54299) * C153638 * C47632) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
            C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
            C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
               C153638 * C47632 +
           (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
              C2292 -
          (C54904 * C154074 + (C52132 + C52131 + C52130) * C153638 * C47633 +
           (C52129 + C52128 + C52127) * C153638 * C47632) *
              C2293 +
          (C52141 * C47632 + (C52135 + C52134 + C52133) * C153638 * C47633 +
           (C54908 + C54909 + C54910) * C153638 * C154074) *
              C2294 -
          ((C2881 * C34031 - C2882 * C34029 - C2881 * C34032 +
            C154071 * C34035 + C2879 * C34033 - C2880 * C34030 -
            C2879 * C34034 + C154097 * C34036 + C2877 * C10558 -
            C2878 * C10553 - C2877 * C10559 + C154109 * C10562) *
               C153638 * C154074 +
           (C54910 + C54909 + C54908) * C153638 * C47633 + C54904 * C47632) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C154094 -
           (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
            (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
             C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
             C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                C2874) *
               C153810 * C154095 +
           ((C2877 * C588 - C2878 * C571 - C2877 * C589 + C154109 * C607 +
             C2879 * C1526 - C2880 * C1517 - C2879 * C1527 + C154097 * C1532 +
             C2881 * C3511 - C2882 * C3507 - C2881 * C3512 + C154071 * C3519) *
                C2874 +
            (C3602 + C3603 + C3604) * C2875 +
            (C3605 + C3606 + C3607) * C154058) *
               C153810 * C2602) *
              C153695 * C154013 +
          (((C3601 + C3600 + C3599) * C2874 + (C3598 + C3597 + C3596) * C2875 +
            (C4087 + C4088 + C4089) * C154058) *
               C153810 * C154095 -
           (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
            (C2958 + C2957 + C2956) * C2874) *
               C153810 * C154094 -
           ((C2881 * C3517 - C2882 * C3510 - C2881 * C3518 + C154071 * C3522 +
             C2879 * C1520 - C2880 * C1514 - C2879 * C1521 + C154097 * C1529 +
             C2877 * C594 - C2878 * C574 - C2877 * C595 + C154109 * C610) *
                C154058 +
            (C3607 + C3606 + C3605) * C2875 + (C3604 + C3603 + C3602) * C2874) *
               C153810 * C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C154094 -
           (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
            (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) * C122) *
               C153810 * C154095 +
           ((C134 * C588 - C135 * C571 - C134 * C589 + C153792 * C607) * C122 +
            C667 * C123 + C668 * C124 + C669 * C125 + C670 * C126) *
               C153810 * C2602) *
              C153695 * C154013 +
          ((C666 * C122 + C665 * C123 + C664 * C124 + C663 * C125 +
            C943 * C126) *
               C153810 * C154095 -
           (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
            C205 * C122) *
               C153810 * C154094 -
           ((C134 * C600 - C135 * C577 - C134 * C601 + C153792 * C613) * C126 +
            C670 * C125 + C669 * C124 + C668 * C123 + C667 * C122) *
               C153810 * C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C154094 -
           (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C154095 +
           ((C24212 * C588 - C24213 * C571 - C24212 * C589 + C24206 * C607 +
             C24214 * C1526 - C24215 * C1517 - C24214 * C1527 + C24207 * C1532 +
             C24216 * C3511 - C24217 * C3507 - C24216 * C3512 +
             C154071 * C3519) *
                C154106 +
            (C24905 + C24906 + C24907) * C154087 +
            (C24908 + C24909 + C24910) * C154058) *
               C153810 * C2602) *
              C153695 * C154013 +
          (((C24904 + C24903 + C24902) * C154106 +
            (C24901 + C24900 + C24899) * C154087 +
            (C25390 + C25391 + C25392) * C154058) *
               C153810 * C154095 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C154094 -
           ((C24216 * C3517 - C24217 * C3510 - C24216 * C3518 +
             C154071 * C3522 + C24214 * C1520 - C24215 * C1514 -
             C24214 * C1521 + C24207 * C1529 + C24212 * C594 - C24213 * C574 -
             C24212 * C595 + C24206 * C610) *
                C154058 +
            (C24910 + C24909 + C24908) * C154087 +
            (C24907 + C24906 + C24905) * C154106) *
               C153810 * C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C154094 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C154095 +
           (C28428 * C588 - C28429 * C571 - C28428 * C589 + C28422 * C607 +
            C28430 * C1526 - C28431 * C1517 - C28430 * C1527 + C28423 * C1532 +
            C28432 * C3511 - C28433 * C3507 - C28432 * C3512 + C28424 * C3519 +
            C28434 * C5038 - C28435 * C5033 - C28434 * C5039 + C28425 * C5042 +
            C28436 * C28692 - C28437 * C28690 - C28436 * C28693 +
            C28426 * C28696) *
               C153638 * C153810 * C2602) *
              C153695 * C154013 +
          ((C28428 * C584 - C28429 * C569 - C28428 * C585 + C28422 * C605 +
            C28430 * C1113 - C28431 * C1106 - C28430 * C1114 + C28423 * C1124 +
            C28432 * C1955 - C28433 * C1947 - C28432 * C1956 + C28424 * C1962 +
            C28434 * C4385 - C28435 * C4380 - C28434 * C4386 + C28425 * C4392 +
            C28436 * C5774 - C28437 * C5770 - C28436 * C5775 + C28426 * C5779) *
               C153638 * C153810 * C154095 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C154094 -
           (C28436 * C28694 - C28437 * C28691 - C28436 * C28695 +
            C28426 * C28697 + C28434 * C5036 - C28435 * C5032 - C28434 * C5037 +
            C28425 * C5041 + C28432 * C3513 - C28433 * C3508 - C28432 * C3514 +
            C28424 * C3520 + C28430 * C1524 - C28431 * C1516 - C28430 * C1525 +
            C28423 * C1531 + C28428 * C590 - C28429 * C572 - C28428 * C591 +
            C28422 * C608) *
               C153638 * C153810 * C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154106 +
             C205 * C154087 + C206 * C154058) *
                C47632 +
            (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
               C154094 -
           (C50743 * C154074 + (C48077 + C48076 + C48075) * C47633 +
            (C48074 + C48073 + C48072) * C47632) *
               C154095 +
           (C48092 * C47632 + (C48080 + C48079 + C48078) * C47633 +
            (C50740 + C50741 + C50742) * C154074) *
               C2602) *
              C153695 * C154013 +
          (((C48081 + C48082 + C48083) * C47632 +
            (C48084 + C48085 + C48086) * C47633 +
            (C48087 + C48088 + C48089) * C154074) *
               C154095 -
           (C48093 * C154074 + (C48083 + C48082 + C48081) * C47633 +
            (C207 * C154058 + C206 * C154087 + C205 * C154106) * C47632) *
               C154094 -
           (((C134 * C7750 - C135 * C7743 - C134 * C7751 + C153792 * C7755) *
                 C154058 +
             C7823 * C154087 + C7822 * C154106) *
                C154074 +
            (C48089 + C48088 + C48087) * C47633 + C48093 * C47632) *
               C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C153638 * C47632 +
            (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
               C154094 -
           (C54904 * C154074 + (C52132 + C52131 + C52130) * C153638 * C47633 +
            (C52129 + C52128 + C52127) * C153638 * C47632) *
               C154095 +
           (C52141 * C47632 + (C52135 + C52134 + C52133) * C153638 * C47633 +
            (C54908 + C54909 + C54910) * C153638 * C154074) *
               C2602) *
              C153695 * C154013 +
          (((C3601 + C3600 + C3599) * C153638 * C47632 +
            (C3602 + C3603 + C3604) * C153638 * C47633 +
            (C52136 + C52137 + C52138) * C153638 * C154074) *
               C154095 -
           (C52126 * C154074 + (C3599 + C3600 + C3601) * C153638 * C47633 +
            (C2958 + C2957 + C2956) * C153638 * C47632) *
               C154094 -
           ((C2881 * C31182 - C2882 * C31179 - C2881 * C31183 +
             C154071 * C31185 + C2879 * C9204 - C2880 * C9200 - C2879 * C9205 +
             C154097 * C9209 + C2877 * C7746 - C2878 * C7741 - C2877 * C7747 +
             C154109 * C7753) *
                C153638 * C154074 +
            (C52138 + C52137 + C52136) * C153638 * C47633 + C52126 * C47632) *
               C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C2086 -
           (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
            (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) * C122) *
               C153810 * C153775) *
              C332 +
          (((C134 * C1111 - C135 * C1105 - C134 * C1112 + C153792 * C1123) *
                C122 +
            C1154 * C123 + C1155 * C124 + C1156 * C125 + C1157 * C126) *
               C153810 * C153775 -
           (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) * C122) *
               C153810 * C2086) *
              C333 +
          (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) * C122 +
            C438 * C123 + C439 * C124 + C440 * C125 + C441 * C126) *
               C153810 * C2086 -
           ((C134 * C1949 - C135 * C1944 - C134 * C1950 + C153792 * C1959) *
                C126 +
            (C134 * C1951 - C135 * C1945 - C134 * C1952 + C153792 * C1960) *
                C125 +
            (C134 * C1953 - C135 * C1946 - C134 * C1954 + C153792 * C1961) *
                C124 +
            (C134 * C1955 - C135 * C1947 - C134 * C1956 + C153792 * C1962) *
                C123 +
            (C134 * C1957 - C135 * C1948 - C134 * C1958 + C153792 * C1963) *
                C122) *
               C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C2086 -
           (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
            (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) * C122) *
               C153810 * C153775) *
              C153695 * C1281 +
          ((C666 * C122 + C665 * C123 + C664 * C124 + C663 * C125 +
            C943 * C126) *
               C153810 * C153775 -
           (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
            C205 * C122) *
               C153810 * C2086) *
              C153695 * C1282 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125 +
            C210 * C126) *
               C153810 * C2086 -
           ((C134 * C933 - C135 * C932 - C134 * C934 + C153792 * C935) * C126 +
            C943 * C125 + C663 * C124 + C664 * C123 + C665 * C122) *
               C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C2086 -
           (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
            (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
             C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
             C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                C2874) *
               C153810 * C153775) *
              C153695 * C1281 +
          (((C3601 + C3600 + C3599) * C2874 + (C3598 + C3597 + C3596) * C2875 +
            (C4087 + C4088 + C4089) * C154058) *
               C153810 * C153775 -
           (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
            (C2958 + C2957 + C2956) * C2874) *
               C153810 * C2086) *
              C153695 * C1282 +
          ((C2970 * C2874 + (C2964 + C2963 + C2962) * C2875 +
            (C2965 + C2966 + C2967) * C154058) *
               C153810 * C2086 -
           ((C2881 * C1949 - C2882 * C1944 - C2881 * C1950 + C154071 * C1959 +
             C2879 * C1119 - C2880 * C1109 - C2879 * C1120 + C154097 * C1127 +
             C2877 * C578 - C2878 * C566 - C2877 * C579 + C154109 * C602) *
                C154058 +
            (C4089 + C4088 + C4087) * C2875 + C4080 * C2874) *
               C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C2086 -
           (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
            (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
             C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
             C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                C2874) *
               C153810 * C153775) *
              C332 +
          (((C2877 * C1111 - C2878 * C1105 - C2877 * C1112 + C154109 * C1123 +
             C2879 * C1957 - C2880 * C1948 - C2879 * C1958 + C154097 * C1963 +
             C2881 * C4383 - C2882 * C4379 - C2881 * C4384 + C154071 * C4391) *
                C2874 +
            (C4432 + C4433 + C4434) * C2875 +
            (C4435 + C4436 + C4437) * C154058) *
               C153810 * C153775 -
           (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C2874) *
               C153810 * C2086) *
              C333 +
          (((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
             C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
             C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                C2874 +
            (C3284 + C3285 + C3286) * C2875 +
            (C3287 + C3288 + C3289) * C154058) *
               C153810 * C2086 -
           ((C2881 * C5772 - C2882 * C5769 - C2881 * C5773 + C154071 * C5778 +
             C2879 * C4387 - C2880 * C4381 - C2879 * C4388 + C154097 * C4393 +
             C2877 * C1953 - C2878 * C1946 - C2877 * C1954 + C154109 * C1961) *
                C154058 +
            (C2881 * C5774 - C2882 * C5770 - C2881 * C5775 + C154071 * C5779 +
             C2879 * C4385 - C2880 * C4380 - C2879 * C4386 + C154097 * C4392 +
             C2877 * C1955 - C2878 * C1947 - C2877 * C1956 + C154109 * C1962) *
                C2875 +
            (C2881 * C5776 - C2882 * C5771 - C2881 * C5777 + C154071 * C5780 +
             C2879 * C4383 - C2880 * C4379 - C2879 * C4384 + C154097 * C4391 +
             C2877 * C1957 - C2878 * C1948 - C2877 * C1958 + C154109 * C1963) *
                C2874) *
               C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C2086 -
           (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C153775) *
              C153695 * C1281 +
          (((C24904 + C24903 + C24902) * C154106 +
            (C24901 + C24900 + C24899) * C154087 +
            (C25390 + C25391 + C25392) * C154058) *
               C153810 * C153775 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C2086) *
              C153695 * C1282 +
          ((C24305 * C154106 + (C24299 + C24298 + C24297) * C154087 +
            (C24300 + C24301 + C24302) * C154058) *
               C153810 * C2086 -
           ((C24216 * C1949 - C24217 * C1944 - C24216 * C1950 +
             C154071 * C1959 + C24214 * C1119 - C24215 * C1109 -
             C24214 * C1120 + C24207 * C1127 + C24212 * C578 - C24213 * C566 -
             C24212 * C579 + C24206 * C602) *
                C154058 +
            (C25392 + C25391 + C25390) * C154087 + C25383 * C154106) *
               C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C2086 -
           (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C153775) *
              C332 +
          (((C24212 * C1111 - C24213 * C1105 - C24212 * C1112 + C24206 * C1123 +
             C24214 * C1957 - C24215 * C1948 - C24214 * C1958 + C24207 * C1963 +
             C24216 * C4383 - C24217 * C4379 - C24216 * C4384 +
             C154071 * C4391) *
                C154106 +
            (C25719 + C25720 + C25721) * C154087 +
            (C25722 + C25723 + C25724) * C154058) *
               C153810 * C153775 -
           (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C2086) *
              C333 +
          (((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C154106 +
            (C24603 + C24604 + C24605) * C154087 +
            (C24606 + C24607 + C24608) * C154058) *
               C153810 * C2086 -
           ((C24216 * C5772 - C24217 * C5769 - C24216 * C5773 +
             C154071 * C5778 + C24214 * C4387 - C24215 * C4381 -
             C24214 * C4388 + C24207 * C4393 + C24212 * C1953 - C24213 * C1946 -
             C24212 * C1954 + C24206 * C1961) *
                C154058 +
            (C24216 * C5774 - C24217 * C5770 - C24216 * C5775 +
             C154071 * C5779 + C24214 * C4385 - C24215 * C4380 -
             C24214 * C4386 + C24207 * C4392 + C24212 * C1955 - C24213 * C1947 -
             C24212 * C1956 + C24206 * C1962) *
                C154087 +
            (C24216 * C5776 - C24217 * C5771 - C24216 * C5777 +
             C154071 * C5780 + C24214 * C4383 - C24215 * C4379 -
             C24214 * C4384 + C24207 * C4391 + C24212 * C1957 - C24213 * C1948 -
             C24212 * C1958 + C24206 * C1963) *
                C154106) *
               C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C2086 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C153775) *
              C153695 * C1281 +
          ((C28428 * C584 - C28429 * C569 - C28428 * C585 + C28422 * C605 +
            C28430 * C1113 - C28431 * C1106 - C28430 * C1114 + C28423 * C1124 +
            C28432 * C1955 - C28433 * C1947 - C28432 * C1956 + C28424 * C1962 +
            C28434 * C4385 - C28435 * C4380 - C28434 * C4386 + C28425 * C4392 +
            C28436 * C5774 - C28437 * C5770 - C28436 * C5775 + C28426 * C5779) *
               C153638 * C153810 * C153775 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C2086) *
              C153695 * C1282 +
          ((C28428 * C148 - C28429 * C138 - C28428 * C149 + C28422 * C162 +
            C28430 * C353 - C28431 * C339 - C28430 * C354 + C28423 * C375 +
            C28432 * C363 - C28433 * C344 - C28432 * C364 + C28424 * C380 +
            C28434 * C1380 - C28435 * C1373 - C28434 * C1381 + C28425 * C1388 +
            C28436 * C3197 - C28437 * C3191 - C28436 * C3198 + C28426 * C3203) *
               C153638 * C153810 * C2086 -
           (C28436 * C5772 - C28437 * C5769 - C28436 * C5773 + C28426 * C5778 +
            C28434 * C4387 - C28435 * C4381 - C28434 * C4388 + C28425 * C4393 +
            C28432 * C1953 - C28433 * C1946 - C28432 * C1954 + C28424 * C1961 +
            C28430 * C1115 - C28431 * C1107 - C28430 * C1116 + C28423 * C1125 +
            C28428 * C582 - C28429 * C568 - C28428 * C583 + C28422 * C604) *
               C153638 * C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C2086 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C153775) *
              C332 +
          ((C28428 * C1111 - C28429 * C1105 - C28428 * C1112 + C28422 * C1123 +
            C28430 * C1957 - C28431 * C1948 - C28430 * C1958 + C28423 * C1963 +
            C28432 * C4383 - C28433 * C4379 - C28432 * C4384 + C28424 * C4391 +
            C28434 * C5776 - C28435 * C5771 - C28434 * C5777 + C28425 * C5780 +
            C28436 * C29106 - C28437 * C29104 - C28436 * C29107 +
            C28426 * C29110) *
               C153638 * C153810 * C153775 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C2086) *
              C333 +
          ((C28428 * C359 - C28429 * C342 - C28428 * C360 + C28422 * C378 +
            C28430 * C1384 - C28431 * C1375 - C28430 * C1385 + C28423 * C1390 +
            C28432 * C3193 - C28433 * C3189 - C28432 * C3194 + C28424 * C3201 +
            C28434 * C4808 - C28435 * C4803 - C28434 * C4809 + C28425 * C4812 +
            C28436 * C28562 - C28437 * C28560 - C28436 * C28563 +
            C28426 * C28566) *
               C153638 * C153810 * C2086 -
           (C28436 * C29853 - C28437 * C29852 - C28436 * C29854 +
            C28426 * C29855 + C28434 * C29106 - C28435 * C29104 -
            C28434 * C29107 + C28425 * C29110 + C28432 * C5776 -
            C28433 * C5771 - C28432 * C5777 + C28424 * C5780 + C28430 * C4383 -
            C28431 * C4379 - C28430 * C4384 + C28423 * C4391 + C28428 * C1957 -
            C28429 * C1948 - C28428 * C1958 + C28422 * C1963) *
               C153638 * C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154106 +
             C205 * C154087 + C206 * C154058) *
                C47632 +
            (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
               C2086 -
           ((C48078 + C48079 + C48080) * C154074 +
            (C48077 + C48076 + C48075) * C47633 +
            (C48074 + C48073 + C48072) * C47632) *
               C153775) *
              C153695 * C1281 +
          (((C48081 + C48082 + C48083) * C47632 +
            (C48084 + C48085 + C48086) * C47633 +
            (C48087 + C48088 + C48089) * C154074) *
               C153775 -
           (C48093 * C154074 + (C48083 + C48082 + C48081) * C47633 +
            (C207 * C154058 + C206 * C154087 + C205 * C154106) * C47632) *
               C2086) *
              C153695 * C1282 +
          (((C206 * C154106 + C207 * C154087 + C208 * C154058) * C47632 +
            (C48530 + C48531 + C48532) * C47633 +
            (C48533 + C48534 + C48535) * C154074) *
               C2086 -
           (((C134 * C2301 - C135 * C2296 - C134 * C2302 + C153792 * C2311) *
                 C154058 +
             C7824 * C154087 + C7819 * C154106) *
                C154074 +
            (C48535 + C48534 + C48533) * C47633 +
            (C48532 + C48531 + C48530) * C47632) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154106 +
             C205 * C154087 + C206 * C154058) *
                C47632 +
            (C48072 + C48073 + C48074) * C47633 + C48092 * C154074) *
               C2086 -
           ((C48078 + C48079 + C48080) * C154074 +
            (C48077 + C48076 + C48075) * C47633 +
            (C48074 + C48073 + C48072) * C47632) *
               C153775) *
              C332 +
          (((C48826 + C48827 + C48828) * C47632 +
            (C48829 + C48830 + C48831) * C47633 +
            (C49420 + C49421 + C49422) * C154074) *
               C153775 -
           (C49424 * C154074 + (C48828 + C48827 + C48826) * C47633 +
            (C436 * C154058 + C437 * C154087 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154106) *
                C47632) *
               C2086) *
              C333 +
          ((((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C154106 +
             C438 * C154087 + C439 * C154058) *
                C47632 +
            (C50151 + C50152 + C50153) * C47633 +
            (C50154 + C50155 + C50156) * C154074) *
               C2086 -
           (((C134 * C6369 - C135 * C6363 - C134 * C6370 + C153792 * C6381) *
                 C154058 +
             (C134 * C6373 - C135 * C6365 - C134 * C6374 + C153792 * C6383) *
                 C154087 +
             (C134 * C6377 - C135 * C6367 - C134 * C6378 + C153792 * C6385) *
                 C154106) *
                C154074 +
            (C50156 + C50155 + C50154) * C47633 +
            (C50153 + C50152 + C50151) * C47632) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C153638 * C47632 +
            (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
               C2086 -
           ((C52133 + C52134 + C52135) * C153638 * C154074 +
            (C52132 + C52131 + C52130) * C153638 * C47633 +
            (C52129 + C52128 + C52127) * C153638 * C47632) *
               C153775) *
              C153695 * C1281 +
          (((C3601 + C3600 + C3599) * C153638 * C47632 +
            (C3602 + C3603 + C3604) * C153638 * C47633 +
            (C52136 + C52137 + C52138) * C153638 * C154074) *
               C153775 -
           (C52126 * C154074 + (C3599 + C3600 + C3601) * C153638 * C47633 +
            (C2958 + C2957 + C2956) * C153638 * C47632) *
               C2086) *
              C153695 * C1282 +
          ((C2970 * C153638 * C47632 +
            (C3598 + C3597 + C3596) * C153638 * C47633 +
            (C3605 + C3606 + C3607) * C153638 * C154074) *
               C2086 -
           ((C2881 * C6369 - C2882 * C6363 - C2881 * C6370 + C154071 * C6381 +
             C2879 * C6371 - C2880 * C6364 - C2879 * C6372 + C154097 * C6382 +
             C2877 * C2305 - C2878 * C2298 - C2877 * C2306 + C154109 * C2313) *
                C153638 * C154074 +
            (C3607 + C3606 + C3605) * C153638 * C47633 +
            C4080 * C153638 * C47632) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C153638 * C47632 +
            (C52127 + C52128 + C52129) * C153638 * C47633 + C52141 * C154074) *
               C2086 -
           ((C52133 + C52134 + C52135) * C153638 * C154074 +
            (C52132 + C52131 + C52130) * C153638 * C47633 +
            (C52129 + C52128 + C52127) * C153638 * C47632) *
               C153775) *
              C332 +
          (((C52922 + C52923 + C52924) * C153638 * C47632 +
            (C52925 + C52926 + C52927) * C153638 * C47633 +
            (C53534 + C53535 + C53536) * C153638 * C154074) *
               C153775 -
           (C53533 * C154074 + (C52924 + C52923 + C52922) * C153638 * C47633 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C153638 * C47632) *
               C2086) *
              C333 +
          (((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
             C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
             C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                C153638 * C47632 +
            (C54299 + C54300 + C54301) * C153638 * C47633 +
            (C54302 + C54303 + C54304) * C153638 * C154074) *
               C2086 -
           ((C2881 * C30184 - C2882 * C30182 - C2881 * C30185 +
             C154071 * C30188 + C2879 * C30186 - C2880 * C30183 -
             C2879 * C30187 + C154097 * C30189 + C2877 * C6377 - C2878 * C6367 -
             C2877 * C6378 + C154109 * C6385) *
                C153638 * C154074 +
            (C54304 + C54303 + C54302) * C153638 * C47633 +
            (C54301 + C54300 + C54299) * C153638 * C47632) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[225] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C153643 +
             (C11502 + C11503) * C153651 + C11512 * C83605) *
                C98524 +
            ((C19518 + C19519) * C153643 + C19472 * C153651 + C18855 * C83605) *
                C153897) *
               C153711 * C154021 -
           ((C19816 * C83605 + C20520 * C153651 + (C20534 + C20533) * C153643) *
                C153897 +
            (C12267 * C83605 + (C11786 + C11787) * C153651 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C153643) *
                C98524) *
               C153711 * C153747) *
              C154090 +
          ((((C11787 + C11786) * C153643 + (C11785 + C11784) * C153651 +
             (C11783 + C11782) * C83605) *
                C98524 +
            (C20502 * C153643 + C20503 * C153651 + (C12790 + C12791) * C83605) *
                C153897) *
               C153711 * C153747 -
           ((C12476 * C83605 + C12477 * C153651 + C19483 * C153643) * C153897 +
            (C11515 * C83605 + (C11505 + C11504) * C153651 +
             (C11503 + C11502) * C153643) *
                C98524) *
               C153711 * C154021) *
              C154091 +
          (((C11512 * C153643 + C11513 * C153651 + (C11509 + C11508) * C83605) *
                C98524 +
            (C18855 * C153643 + C20107 * C153651 + (C12490 + C12491) * C83605) *
                C153897) *
               C153711 * C154021 -
           (((C11439 * C1949 - C11440 * C1944 - C11439 * C1950 +
              C153855 * C1959 + C11437 * C1119 - C11438 * C1109 -
              C11437 * C1120 + C154035 * C1127) *
                 C83605 +
             (C12791 + C12790) * C153651 + C19816 * C153643) *
                C153897 +
            ((C12281 + C12280) * C83605 + C12266 * C153651 + C12267 * C153643) *
                C98524) *
               C153711 * C153747) *
              C796)) /
        (p * q * std::sqrt(p + q));
    d2ee[226] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
               C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                  C153643 +
              (C11502 + C11503) * C153651 + C11512 * C83605) *
                 C98524 +
             ((C19518 + C19519) * C153643 + C19472 * C153651 +
              C18855 * C83605) *
                 C153897) *
                C154022 -
            ((C19473 * C83605 + C19474 * C153651 +
              (C19520 + C19521) * C153643) *
                 C153897 +
             (C12477 * C83605 + C19483 * C153651 +
              (C19519 + C19518) * C153643) *
                 C98524) *
                C153775) *
               C154021 +
           ((((C20533 + C20534) * C153643 + C20502 * C153651 +
              C20503 * C83605) *
                 C98524 +
             ((C21325 + C21326) * C153643 + C59719 * C153651 +
              (C20537 + C20538) * C83605) *
                 C153897) *
                C153775 -
            ((C19816 * C83605 + C20520 * C153651 +
              (C20534 + C20533) * C153643) *
                 C153897 +
             (C12267 * C83605 + (C11786 + C11787) * C153651 +
              (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
               C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                  C153643) *
                 C98524) *
                C154022) *
               C153747) *
              C335 +
          ((((C19472 * C153643 + C18855 * C153651 + C20107 * C83605) * C98524 +
             (C19484 * C153643 + C19485 * C153651 +
              (C12070 + C12071) * C83605) *
                 C153897) *
                C153775 -
            ((C12476 * C83605 + C12477 * C153651 + C19483 * C153643) * C153897 +
             (C11515 * C83605 + (C11505 + C11504) * C153651 +
              (C11503 + C11502) * C153643) *
                 C98524) *
                C154022) *
               C154021 +
           ((((C11787 + C11786) * C153643 + (C11785 + C11784) * C153651 +
              (C11783 + C11782) * C83605) *
                 C98524 +
             (C20502 * C153643 + C20503 * C153651 +
              (C12790 + C12791) * C83605) *
                 C153897) *
                C154022 -
            (((C11439 * C3517 - C11440 * C3510 - C11439 * C3518 +
               C153855 * C3522 + C11437 * C1520 - C11438 * C1514 -
               C11437 * C1521 + C154035 * C1529) *
                  C83605 +
              (C20538 + C20537) * C153651 + C59728 * C153643) *
                 C153897 +
             ((C12791 + C12790) * C83605 + C19816 * C153651 +
              C20520 * C153643) *
                 C98524) *
                C153775) *
               C153747) *
              C153682)) /
        (p * q * std::sqrt(p + q));
    d2ee[227] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C153643 +
             (C11502 + C11503) * C153651 + C11512 * C83605) *
                C98524 +
            ((C19518 + C19519) * C153643 + C19472 * C153651 + C18855 * C83605) *
                C153897) *
               C153711 * C332 -
           ((C19816 * C83605 + C20520 * C153651 + (C20534 + C20533) * C153643) *
                C153897 +
            (C12267 * C83605 + (C11786 + C11787) * C153651 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C153643) *
                C98524) *
               C153711 * C333 +
           (((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
              C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
              C153855 * C1390) *
                 C153643 +
             (C11788 + C11789) * C153651 + (C11790 + C11791) * C83605) *
                C98524 +
            ((C22305 + C22306) * C153643 + (C19170 + C19171) * C153651 +
             (C19172 + C19173) * C83605) *
                C153897) *
               C153711 * C334) *
              C335 +
          ((((C11787 + C11786) * C153643 + (C11785 + C11784) * C153651 +
             (C11783 + C11782) * C83605) *
                C98524 +
            (C20502 * C153643 + C20503 * C153651 + (C12790 + C12791) * C83605) *
                C153897) *
               C153711 * C333 -
           ((C12476 * C83605 + C12477 * C153651 + C19483 * C153643) * C153897 +
            (C11515 * C83605 + (C11505 + C11504) * C153651 +
             (C11503 + C11502) * C153643) *
                C98524) *
               C153711 * C332 -
           (((C11439 * C4389 - C11440 * C4382 - C11439 * C4390 +
              C153855 * C4394 + C11437 * C1951 - C11438 * C1945 -
              C11437 * C1952 + C154035 * C1960) *
                 C83605 +
             (C19173 + C19172) * C153651 + (C19171 + C19170) * C153643) *
                C153897 +
            ((C11793 + C11792) * C83605 + (C11791 + C11790) * C153651 +
             (C11789 + C11788) * C153643) *
                C98524) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C153643 +
            (C11502 + C11503) * C153651 + C11512 * C83605) *
               C98524 +
           ((C19518 + C19519) * C153643 + C19472 * C153651 + C18855 * C83605) *
               C153897) *
              C153711 * C153695 * C130 -
          ((C12476 * C83605 + C12477 * C153651 + C19483 * C153643) * C153897 +
           (C11515 * C83605 + (C11505 + C11504) * C153651 +
            (C11503 + C11502) * C153643) *
               C98524) *
              C153711 * C153695 * C131 +
          ((C11512 * C153643 + C11513 * C153651 + (C11509 + C11508) * C83605) *
               C98524 +
           (C18855 * C153643 + C20107 * C153651 + (C12490 + C12491) * C83605) *
               C153897) *
              C153711 * C153695 * C132 -
          (((C11439 * C1121 - C11440 * C1110 - C11439 * C1122 +
             C153855 * C1128 + C11437 * C598 - C11438 * C576 - C11437 * C599 +
             C154035 * C612) *
                C83605 +
            (C12491 + C12490) * C153651 + C12476 * C153643) *
               C153897 +
           ((C11511 + C11510) * C83605 + C11514 * C153651 + C11515 * C153643) *
               C98524) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C153643 +
             (C11502 + C11503) * C153651 + C11512 * C83605) *
                C98524 +
            ((C19518 + C19519) * C153643 + C19472 * C153651 + C18855 * C83605) *
                C153897) *
               C563 -
           ((C19473 * C83605 + C19474 * C153651 + (C19520 + C19521) * C153643) *
                C153897 +
            (C12477 * C83605 + C19483 * C153651 + (C19519 + C19518) * C153643) *
                C98524) *
               C564 +
           ((C58730 * C153643 + C19484 * C153651 + C19485 * C83605) * C98524 +
            (C67339 * C153643 + C58733 * C153651 + (C19524 + C19525) * C83605) *
                C153897) *
               C565) *
              C153695 * C335 +
          (((C19472 * C153643 + C18855 * C153651 + C20107 * C83605) * C98524 +
            (C19484 * C153643 + C19485 * C153651 + (C12070 + C12071) * C83605) *
                C153897) *
               C564 -
           ((C12476 * C83605 + C12477 * C153651 + C19483 * C153643) * C153897 +
            (C11515 * C83605 + (C11505 + C11504) * C153651 +
             (C11503 + C11502) * C153643) *
                C98524) *
               C563 -
           (((C11439 * C8574 - C11440 * C8573 - C11439 * C8575 +
              C153855 * C8576 + C11437 * C2303 - C11438 * C2297 -
              C11437 * C2304 + C154035 * C2312) *
                 C83605 +
             (C19525 + C19524) * C153651 + C58732 * C153643) *
                C153897 +
            ((C12071 + C12070) * C83605 + C19473 * C153651 + C19474 * C153643) *
                C98524) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[228] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C153643 +
             (C11502 + C11503) * C153651 + C11512 * C83605) *
                C98524 +
            ((C19518 + C19519) * C153643 + C19472 * C153651 + C18855 * C83605) *
                C153897) *
               C154022 -
           ((C19473 * C83605 + C19474 * C153651 + (C19520 + C19521) * C153643) *
                C153897 +
            (C12477 * C83605 + C19483 * C153651 + (C19519 + C19518) * C153643) *
                C98524) *
               C153775) *
              C153695 * C154090 +
          (((C19472 * C153643 + C18855 * C153651 + C20107 * C83605) * C98524 +
            (C19484 * C153643 + C19485 * C153651 + (C12070 + C12071) * C83605) *
                C153897) *
               C153775 -
           ((C12476 * C83605 + C12477 * C153651 + C19483 * C153643) * C153897 +
            (C11515 * C83605 + (C11505 + C11504) * C153651 +
             (C11503 + C11502) * C153643) *
                C98524) *
               C154022) *
              C153695 * C154091 +
          (((C11512 * C153643 + C11513 * C153651 + (C11509 + C11508) * C83605) *
                C98524 +
            (C18855 * C153643 + C20107 * C153651 + (C12490 + C12491) * C83605) *
                C153897) *
               C154022 -
           (((C11439 * C1518 - C11440 * C1513 - C11439 * C1519 +
              C153855 * C1528 + C11437 * C596 - C11438 * C575 - C11437 * C597 +
              C154035 * C611) *
                 C83605 +
             (C12071 + C12070) * C153651 + C19473 * C153643) *
                C153897 +
            ((C12491 + C12490) * C83605 + C12476 * C153651 + C12477 * C153643) *
                C98524) *
               C153775) *
              C153695 * C796)) /
        (p * q * std::sqrt(p + q));
    d2ee[229] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C153643 +
            (C11502 + C11503) * C153651 + C11512 * C83605) *
               C98524 +
           ((C19518 + C19519) * C153643 + C19472 * C153651 + C18855 * C83605) *
               C153897) *
              C153711 * C153695 * C130 -
          ((C12476 * C83605 + C12477 * C153651 + C19483 * C153643) * C153897 +
           (C11515 * C83605 + (C11505 + C11504) * C153651 +
            (C11503 + C11502) * C153643) *
               C98524) *
              C153711 * C153695 * C131 +
          ((C11512 * C153643 + C11513 * C153651 + (C11509 + C11508) * C83605) *
               C98524 +
           (C18855 * C153643 + C20107 * C153651 + (C12490 + C12491) * C83605) *
               C153897) *
              C153711 * C153695 * C132 -
          (((C11439 * C1121 - C11440 * C1110 - C11439 * C1122 +
             C153855 * C1128 + C11437 * C598 - C11438 * C576 - C11437 * C599 +
             C154035 * C612) *
                C83605 +
            (C12491 + C12490) * C153651 + C12476 * C153643) *
               C153897 +
           ((C11511 + C11510) * C83605 + C11514 * C153651 + C11515 * C153643) *
               C98524) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C153643 +
             (C11502 + C11503) * C153651 + C11512 * C83605) *
                C98524 +
            ((C19518 + C19519) * C153643 + C19472 * C153651 + C18855 * C83605) *
                C153897) *
               C153711 * C332 -
           ((C19816 * C83605 + C20520 * C153651 + (C20534 + C20533) * C153643) *
                C153897 +
            (C12267 * C83605 + (C11786 + C11787) * C153651 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C153643) *
                C98524) *
               C153711 * C333 +
           (((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
              C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
              C153855 * C1390) *
                 C153643 +
             (C11788 + C11789) * C153651 + (C11790 + C11791) * C83605) *
                C98524 +
            ((C22305 + C22306) * C153643 + (C19170 + C19171) * C153651 +
             (C19172 + C19173) * C83605) *
                C153897) *
               C153711 * C334) *
              C335 +
          ((((C11787 + C11786) * C153643 + (C11785 + C11784) * C153651 +
             (C11783 + C11782) * C83605) *
                C98524 +
            (C20502 * C153643 + C20503 * C153651 + (C12790 + C12791) * C83605) *
                C153897) *
               C153711 * C333 -
           ((C12476 * C83605 + C12477 * C153651 + C19483 * C153643) * C153897 +
            (C11515 * C83605 + (C11505 + C11504) * C153651 +
             (C11503 + C11502) * C153643) *
                C98524) *
               C153711 * C332 -
           (((C11439 * C4389 - C11440 * C4382 - C11439 * C4390 +
              C153855 * C4394 + C11437 * C1951 - C11438 * C1945 -
              C11437 * C1952 + C154035 * C1960) *
                 C83605 +
             (C19173 + C19172) * C153651 + (C19171 + C19170) * C153643) *
                C153897 +
            ((C11793 + C11792) * C83605 + (C11791 + C11790) * C153651 +
             (C11789 + C11788) * C153643) *
                C98524) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[230] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C153643 +
             (C11502 + C11503) * C153651 + C11512 * C83605) *
                C98524 +
            ((C19518 + C19519) * C153643 + C19472 * C153651 + C18855 * C83605) *
                C153897) *
               C153711 * C154092 -
           ((C19816 * C83605 + C20520 * C153651 + (C20534 + C20533) * C153643) *
                C153897 +
            (C12267 * C83605 + (C11786 + C11787) * C153651 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C153643) *
                C98524) *
               C153711 * C154093 +
           (((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
              C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
              C153855 * C1390) *
                 C153643 +
             (C11788 + C11789) * C153651 + (C11790 + C11791) * C83605) *
                C98524 +
            ((C22305 + C22306) * C153643 + (C19170 + C19171) * C153651 +
             (C19172 + C19173) * C83605) *
                C153897) *
               C153711 * C1657) *
              C154013 +
          ((((C11787 + C11786) * C153643 + (C11785 + C11784) * C153651 +
             (C11783 + C11782) * C83605) *
                C98524 +
            (C20502 * C153643 + C20503 * C153651 + (C12790 + C12791) * C83605) *
                C153897) *
               C153711 * C154093 -
           ((C12476 * C83605 + C12477 * C153651 + C19483 * C153643) * C153897 +
            (C11515 * C83605 + (C11505 + C11504) * C153651 +
             (C11503 + C11502) * C153643) *
                C98524) *
               C153711 * C154092 -
           (((C11439 * C4389 - C11440 * C4382 - C11439 * C4390 +
              C153855 * C4394 + C11437 * C1951 - C11438 * C1945 -
              C11437 * C1952 + C154035 * C1960) *
                 C83605 +
             (C19173 + C19172) * C153651 + (C19171 + C19170) * C153643) *
                C153897 +
            ((C11793 + C11792) * C83605 + (C11791 + C11790) * C153651 +
             (C11789 + C11788) * C153643) *
                C98524) *
               C153711 * C1657) *
              C153682)) /
        (p * q * std::sqrt(p + q));
    d2ee[231] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C153643 +
             (C11502 + C11503) * C153651 + C11512 * C83605) *
                C98524 +
            ((C19518 + C19519) * C153643 + C19472 * C153651 + C18855 * C83605) *
                C153897) *
               C154022 -
           ((C19473 * C83605 + C19474 * C153651 + (C19520 + C19521) * C153643) *
                C153897 +
            (C12477 * C83605 + C19483 * C153651 + (C19519 + C19518) * C153643) *
                C98524) *
               C153775) *
              C154092 +
          ((((C20533 + C20534) * C153643 + C20502 * C153651 + C20503 * C83605) *
                C98524 +
            ((C21325 + C21326) * C153643 + C59719 * C153651 +
             (C20537 + C20538) * C83605) *
                C153897) *
               C153775 -
           ((C19816 * C83605 + C20520 * C153651 + (C20534 + C20533) * C153643) *
                C153897 +
            (C12267 * C83605 + (C11786 + C11787) * C153651 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C153643) *
                C98524) *
               C154022) *
              C154093 +
          ((((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
              C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
              C153855 * C1390) *
                 C153643 +
             (C11788 + C11789) * C153651 + (C11790 + C11791) * C83605) *
                C98524 +
            ((C22305 + C22306) * C153643 + (C19170 + C19171) * C153651 +
             (C19172 + C19173) * C83605) *
                C153897) *
               C154022 -
           (((C11439 * C5034 - C11440 * C5031 - C11439 * C5035 +
              C153855 * C5040 + C11437 * C3515 - C11438 * C3509 -
              C11437 * C3516 + C154035 * C3521) *
                 C83605 +
             (C58439 + C58438) * C153651 + (C61506 + C61505) * C153643) *
                C153897 +
            ((C19173 + C19172) * C83605 + (C19171 + C19170) * C153651 +
             (C22306 + C22305) * C153643) *
                C98524) *
               C153775) *
              C1657) *
         C153676) /
        (p * q * std::sqrt(p + q));
    d2ee[232] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C153643 +
            (C11502 + C11503) * C153651 + C11512 * C83605) *
               C98524 +
           ((C19518 + C19519) * C153643 + C19472 * C153651 + C18855 * C83605) *
               C153897) *
              C153711 * C1366 -
          ((C19816 * C83605 + C20520 * C153651 + (C20534 + C20533) * C153643) *
               C153897 +
           (C12267 * C83605 + (C11786 + C11787) * C153651 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C153643) *
               C98524) *
              C153711 * C1367 +
          (((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
             C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
             C153855 * C1390) *
                C153643 +
            (C11788 + C11789) * C153651 + (C11790 + C11791) * C83605) *
               C98524 +
           ((C22305 + C22306) * C153643 + (C19170 + C19171) * C153651 +
            (C19172 + C19173) * C83605) *
               C153897) *
              C153711 * C1368 -
          (((C11439 * C5772 - C11440 * C5769 - C11439 * C5773 +
             C153855 * C5778 + C11437 * C4387 - C11438 * C4381 -
             C11437 * C4388 + C154035 * C4393) *
                C83605 +
            (C11439 * C5774 - C11440 * C5770 - C11439 * C5775 +
             C153855 * C5779 + C11437 * C4385 - C11438 * C4380 -
             C11437 * C4386 + C154035 * C4392) *
                C153651 +
            (C11439 * C5776 - C11440 * C5771 - C11439 * C5777 +
             C153855 * C5780 + C11437 * C4383 - C11438 * C4379 -
             C11437 * C4384 + C154035 * C4391) *
                C153643) *
               C153897 +
           ((C11439 * C3197 - C11440 * C3191 - C11439 * C3198 +
             C153855 * C3203 + C11437 * C1380 - C11438 * C1373 -
             C11437 * C1381 + C154035 * C1388) *
                C83605 +
            (C11439 * C3195 - C11440 * C3190 - C11439 * C3196 +
             C153855 * C3202 + C11437 * C1382 - C11438 * C1374 -
             C11437 * C1383 + C154035 * C1389) *
                C153651 +
            (C11439 * C3193 - C11440 * C3189 - C11439 * C3194 +
             C153855 * C3201 + C11437 * C1384 - C11438 * C1375 -
             C11437 * C1385 + C154035 * C1390) *
                C153643) *
               C98524) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C153643 +
             (C11502 + C11503) * C153651 + C11512 * C83605) *
                C98524 +
            ((C19518 + C19519) * C153643 + C19472 * C153651 + C18855 * C83605) *
                C153897) *
               C153711 * C1279 -
           ((C19816 * C83605 + C20520 * C153651 + (C20534 + C20533) * C153643) *
                C153897 +
            (C12267 * C83605 + (C11786 + C11787) * C153651 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C153643) *
                C98524) *
               C153711 * C153747) *
              C1281 +
          ((((C11787 + C11786) * C153643 + (C11785 + C11784) * C153651 +
             (C11783 + C11782) * C83605) *
                C98524 +
            (C20502 * C153643 + C20503 * C153651 + (C12790 + C12791) * C83605) *
                C153897) *
               C153711 * C153747 -
           ((C12476 * C83605 + C12477 * C153651 + C19483 * C153643) * C153897 +
            (C11515 * C83605 + (C11505 + C11504) * C153651 +
             (C11503 + C11502) * C153643) *
                C98524) *
               C153711 * C1279) *
              C1282 +
          (((C11512 * C153643 + C11513 * C153651 + (C11509 + C11508) * C83605) *
                C98524 +
            (C18855 * C153643 + C20107 * C153651 + (C12490 + C12491) * C83605) *
                C153897) *
               C153711 * C1279 -
           (((C11439 * C1949 - C11440 * C1944 - C11439 * C1950 +
              C153855 * C1959 + C11437 * C1119 - C11438 * C1109 -
              C11437 * C1120 + C154035 * C1127) *
                 C83605 +
             (C12791 + C12790) * C153651 + C19816 * C153643) *
                C153897 +
            ((C12281 + C12280) * C83605 + C12266 * C153651 + C12267 * C153643) *
                C98524) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C153643 +
             (C11502 + C11503) * C153651 + C11512 * C83605) *
                C98524 +
            ((C19518 + C19519) * C153643 + C19472 * C153651 + C18855 * C83605) *
                C153897) *
               C563 -
           ((C19473 * C83605 + C19474 * C153651 + (C19520 + C19521) * C153643) *
                C153897 +
            (C12477 * C83605 + C19483 * C153651 + (C19519 + C19518) * C153643) *
                C98524) *
               C564 +
           ((C58730 * C153643 + C19484 * C153651 + C19485 * C83605) * C98524 +
            (C67339 * C153643 + C58733 * C153651 + (C19524 + C19525) * C83605) *
                C153897) *
               C565) *
              C1279 +
          ((((C20533 + C20534) * C153643 + C20502 * C153651 + C20503 * C83605) *
                C98524 +
            ((C21325 + C21326) * C153643 + C59719 * C153651 +
             (C20537 + C20538) * C83605) *
                C153897) *
               C564 -
           ((C19816 * C83605 + C20520 * C153651 + (C20534 + C20533) * C153643) *
                C153897 +
            (C12267 * C83605 + (C11786 + C11787) * C153651 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C153643) *
                C98524) *
               C563 -
           (((C11439 * C6369 - C11440 * C6363 - C11439 * C6370 +
              C153855 * C6381 + C11437 * C6371 - C11438 * C6364 -
              C11437 * C6372 + C154035 * C6382) *
                 C83605 +
             (C59734 + C59733) * C153651 + C68515 * C153643) *
                C153897 +
            ((C20538 + C20537) * C83605 + C59728 * C153651 + C60518 * C153643) *
                C98524) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[233] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
               C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                  C153643 +
              (C11502 + C11503) * C153651 + C11512 * C83605) *
                 C98524 +
             ((C19518 + C19519) * C153643 + C19472 * C153651 +
              C18855 * C83605) *
                 C153897) *
                C154022 -
            ((C19473 * C83605 + C19474 * C153651 +
              (C19520 + C19521) * C153643) *
                 C153897 +
             (C12477 * C83605 + C19483 * C153651 +
              (C19519 + C19518) * C153643) *
                 C98524) *
                C153775) *
               C1279 +
           ((((C20533 + C20534) * C153643 + C20502 * C153651 +
              C20503 * C83605) *
                 C98524 +
             ((C21325 + C21326) * C153643 + C59719 * C153651 +
              (C20537 + C20538) * C83605) *
                 C153897) *
                C153775 -
            ((C19816 * C83605 + C20520 * C153651 +
              (C20534 + C20533) * C153643) *
                 C153897 +
             (C12267 * C83605 + (C11786 + C11787) * C153651 +
              (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
               C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                  C153643) *
                 C98524) *
                C154022) *
               C153747) *
              C154013 +
          ((((C19472 * C153643 + C18855 * C153651 + C20107 * C83605) * C98524 +
             (C19484 * C153643 + C19485 * C153651 +
              (C12070 + C12071) * C83605) *
                 C153897) *
                C153775 -
            ((C12476 * C83605 + C12477 * C153651 + C19483 * C153643) * C153897 +
             (C11515 * C83605 + (C11505 + C11504) * C153651 +
              (C11503 + C11502) * C153643) *
                 C98524) *
                C154022) *
               C1279 +
           ((((C11787 + C11786) * C153643 + (C11785 + C11784) * C153651 +
              (C11783 + C11782) * C83605) *
                 C98524 +
             (C20502 * C153643 + C20503 * C153651 +
              (C12790 + C12791) * C83605) *
                 C153897) *
                C154022 -
            (((C11439 * C3517 - C11440 * C3510 - C11439 * C3518 +
               C153855 * C3522 + C11437 * C1520 - C11438 * C1514 -
               C11437 * C1521 + C154035 * C1529) *
                  C83605 +
              (C20538 + C20537) * C153651 + C59728 * C153643) *
                 C153897 +
             ((C12791 + C12790) * C83605 + C19816 * C153651 +
              C20520 * C153643) *
                 C98524) *
                C153775) *
               C153747) *
              C153682)) /
        (p * q * std::sqrt(p + q));
    d2ee[234] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C153643 +
             (C11502 + C11503) * C153651 + C11512 * C83605) *
                C98524 +
            ((C19518 + C19519) * C153643 + C19472 * C153651 + C18855 * C83605) *
                C153897) *
               C153711 * C1279 -
           ((C19816 * C83605 + C20520 * C153651 + (C20534 + C20533) * C153643) *
                C153897 +
            (C12267 * C83605 + (C11786 + C11787) * C153651 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C153643) *
                C98524) *
               C153711 * C153747) *
              C1281 +
          ((((C11787 + C11786) * C153643 + (C11785 + C11784) * C153651 +
             (C11783 + C11782) * C83605) *
                C98524 +
            (C20502 * C153643 + C20503 * C153651 + (C12790 + C12791) * C83605) *
                C153897) *
               C153711 * C153747 -
           ((C12476 * C83605 + C12477 * C153651 + C19483 * C153643) * C153897 +
            (C11515 * C83605 + (C11505 + C11504) * C153651 +
             (C11503 + C11502) * C153643) *
                C98524) *
               C153711 * C1279) *
              C1282 +
          (((C11512 * C153643 + C11513 * C153651 + (C11509 + C11508) * C83605) *
                C98524 +
            (C18855 * C153643 + C20107 * C153651 + (C12490 + C12491) * C83605) *
                C153897) *
               C153711 * C1279 -
           (((C11439 * C1949 - C11440 * C1944 - C11439 * C1950 +
              C153855 * C1959 + C11437 * C1119 - C11438 * C1109 -
              C11437 * C1120 + C154035 * C1127) *
                 C83605 +
             (C12791 + C12790) * C153651 + C19816 * C153643) *
                C153897 +
            ((C12281 + C12280) * C83605 + C12266 * C153651 + C12267 * C153643) *
                C98524) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C153643 +
            (C11502 + C11503) * C153651 + C11512 * C83605) *
               C98524 +
           ((C19518 + C19519) * C153643 + C19472 * C153651 + C18855 * C83605) *
               C153897) *
              C153711 * C1366 -
          ((C19816 * C83605 + C20520 * C153651 + (C20534 + C20533) * C153643) *
               C153897 +
           (C12267 * C83605 + (C11786 + C11787) * C153651 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C153643) *
               C98524) *
              C153711 * C1367 +
          (((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
             C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
             C153855 * C1390) *
                C153643 +
            (C11788 + C11789) * C153651 + (C11790 + C11791) * C83605) *
               C98524 +
           ((C22305 + C22306) * C153643 + (C19170 + C19171) * C153651 +
            (C19172 + C19173) * C83605) *
               C153897) *
              C153711 * C1368 -
          (((C11439 * C5772 - C11440 * C5769 - C11439 * C5773 +
             C153855 * C5778 + C11437 * C4387 - C11438 * C4381 -
             C11437 * C4388 + C154035 * C4393) *
                C83605 +
            (C11439 * C5774 - C11440 * C5770 - C11439 * C5775 +
             C153855 * C5779 + C11437 * C4385 - C11438 * C4380 -
             C11437 * C4386 + C154035 * C4392) *
                C153651 +
            (C11439 * C5776 - C11440 * C5771 - C11439 * C5777 +
             C153855 * C5780 + C11437 * C4383 - C11438 * C4379 -
             C11437 * C4384 + C154035 * C4391) *
                C153643) *
               C153897 +
           ((C11439 * C3197 - C11440 * C3191 - C11439 * C3198 +
             C153855 * C3203 + C11437 * C1380 - C11438 * C1373 -
             C11437 * C1381 + C154035 * C1388) *
                C83605 +
            (C11439 * C3195 - C11440 * C3190 - C11439 * C3196 +
             C153855 * C3202 + C11437 * C1382 - C11438 * C1374 -
             C11437 * C1383 + C154035 * C1389) *
                C153651 +
            (C11439 * C3193 - C11440 * C3189 - C11439 * C3194 +
             C153855 * C3201 + C11437 * C1384 - C11438 * C1375 -
             C11437 * C1385 + C154035 * C1390) *
                C153643) *
               C98524) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[235] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
               C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                  C153643 +
              (C11502 + C11503) * C153651 + C11512 * C83605) *
                 C98524 +
             ((C19518 + C19519) * C153643 + C19472 * C153651 +
              C18855 * C83605) *
                 C153897) *
                C2086 -
            ((C19473 * C83605 + C19474 * C153651 +
              (C19520 + C19521) * C153643) *
                 C153897 +
             (C12477 * C83605 + C19483 * C153651 +
              (C19519 + C19518) * C153643) *
                 C98524) *
                C153775) *
               C154021 +
           ((((C20533 + C20534) * C153643 + C20502 * C153651 +
              C20503 * C83605) *
                 C98524 +
             ((C21325 + C21326) * C153643 + C59719 * C153651 +
              (C20537 + C20538) * C83605) *
                 C153897) *
                C153775 -
            ((C19816 * C83605 + C20520 * C153651 +
              (C20534 + C20533) * C153643) *
                 C153897 +
             (C12267 * C83605 + (C11786 + C11787) * C153651 +
              (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
               C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                  C153643) *
                 C98524) *
                C2086) *
               C153747) *
              C154013 +
          ((((C19472 * C153643 + C18855 * C153651 + C20107 * C83605) * C98524 +
             (C19484 * C153643 + C19485 * C153651 +
              (C12070 + C12071) * C83605) *
                 C153897) *
                C153775 -
            ((C12476 * C83605 + C12477 * C153651 + C19483 * C153643) * C153897 +
             (C11515 * C83605 + (C11505 + C11504) * C153651 +
              (C11503 + C11502) * C153643) *
                 C98524) *
                C2086) *
               C154021 +
           ((((C11787 + C11786) * C153643 + (C11785 + C11784) * C153651 +
              (C11783 + C11782) * C83605) *
                 C98524 +
             (C20502 * C153643 + C20503 * C153651 +
              (C12790 + C12791) * C83605) *
                 C153897) *
                C2086 -
            (((C11439 * C3517 - C11440 * C3510 - C11439 * C3518 +
               C153855 * C3522 + C11437 * C1520 - C11438 * C1514 -
               C11437 * C1521 + C154035 * C1529) *
                  C83605 +
              (C20538 + C20537) * C153651 + C59728 * C153643) *
                 C153897 +
             ((C12791 + C12790) * C83605 + C19816 * C153651 +
              C20520 * C153643) *
                 C98524) *
                C153775) *
               C153747) *
              C153682)) /
        (p * q * std::sqrt(p + q));
    d2ee[236] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C153643 +
             (C11502 + C11503) * C153651 + C11512 * C83605) *
                C98524 +
            ((C19518 + C19519) * C153643 + C19472 * C153651 + C18855 * C83605) *
                C153897) *
               C154094 -
           ((C19473 * C83605 + C19474 * C153651 + (C19520 + C19521) * C153643) *
                C153897 +
            (C12477 * C83605 + C19483 * C153651 + (C19519 + C19518) * C153643) *
                C98524) *
               C154095 +
           ((C58730 * C153643 + C19484 * C153651 + C19485 * C83605) * C98524 +
            (C67339 * C153643 + C58733 * C153651 + (C19524 + C19525) * C83605) *
                C153897) *
               C2602) *
              C154021 +
          ((((C20533 + C20534) * C153643 + C20502 * C153651 + C20503 * C83605) *
                C98524 +
            ((C21325 + C21326) * C153643 + C59719 * C153651 +
             (C20537 + C20538) * C83605) *
                C153897) *
               C154095 -
           ((C19816 * C83605 + C20520 * C153651 + (C20534 + C20533) * C153643) *
                C153897 +
            (C12267 * C83605 + (C11786 + C11787) * C153651 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C153643) *
                C98524) *
               C154094 -
           (((C11439 * C6369 - C11440 * C6363 - C11439 * C6370 +
              C153855 * C6381 + C11437 * C6371 - C11438 * C6364 -
              C11437 * C6372 + C154035 * C6382) *
                 C83605 +
             (C59734 + C59733) * C153651 + C68515 * C153643) *
                C153897 +
            ((C20538 + C20537) * C83605 + C59728 * C153651 + C60518 * C153643) *
                C98524) *
               C2602) *
              C153747) *
         C153676) /
        (p * q * std::sqrt(p + q));
    d2ee[237] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C153643 +
             (C11502 + C11503) * C153651 + C11512 * C83605) *
                C98524 +
            ((C19518 + C19519) * C153643 + C19472 * C153651 + C18855 * C83605) *
                C153897) *
               C2086 -
           ((C19473 * C83605 + C19474 * C153651 + (C19520 + C19521) * C153643) *
                C153897 +
            (C12477 * C83605 + C19483 * C153651 + (C19519 + C19518) * C153643) *
                C98524) *
               C153775) *
              C332 +
          ((((C20533 + C20534) * C153643 + C20502 * C153651 + C20503 * C83605) *
                C98524 +
            ((C21325 + C21326) * C153643 + C59719 * C153651 +
             (C20537 + C20538) * C83605) *
                C153897) *
               C153775 -
           ((C19816 * C83605 + C20520 * C153651 + (C20534 + C20533) * C153643) *
                C153897 +
            (C12267 * C83605 + (C11786 + C11787) * C153651 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C153643) *
                C98524) *
               C2086) *
              C333 +
          ((((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
              C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
              C153855 * C1390) *
                 C153643 +
             (C11788 + C11789) * C153651 + (C11790 + C11791) * C83605) *
                C98524 +
            ((C22305 + C22306) * C153643 + (C19170 + C19171) * C153651 +
             (C19172 + C19173) * C83605) *
                C153897) *
               C2086 -
           (((C11439 * C5034 - C11440 * C5031 - C11439 * C5035 +
              C153855 * C5040 + C11437 * C3515 - C11438 * C3509 -
              C11437 * C3516 + C154035 * C3521) *
                 C83605 +
             (C58439 + C58438) * C153651 + (C61506 + C61505) * C153643) *
                C153897 +
            ((C19173 + C19172) * C83605 + (C19171 + C19170) * C153651 +
             (C22306 + C22305) * C153643) *
                C98524) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C153643 +
             (C11502 + C11503) * C153651 + C11512 * C83605) *
                C98524 +
            ((C19518 + C19519) * C153643 + C19472 * C153651 + C18855 * C83605) *
                C153897) *
               C2086 -
           ((C19473 * C83605 + C19474 * C153651 + (C19520 + C19521) * C153643) *
                C153897 +
            (C12477 * C83605 + C19483 * C153651 + (C19519 + C19518) * C153643) *
                C98524) *
               C153775) *
              C153695 * C1281 +
          (((C19472 * C153643 + C18855 * C153651 + C20107 * C83605) * C98524 +
            (C19484 * C153643 + C19485 * C153651 + (C12070 + C12071) * C83605) *
                C153897) *
               C153775 -
           ((C12476 * C83605 + C12477 * C153651 + C19483 * C153643) * C153897 +
            (C11515 * C83605 + (C11505 + C11504) * C153651 +
             (C11503 + C11502) * C153643) *
                C98524) *
               C2086) *
              C153695 * C1282 +
          (((C11512 * C153643 + C11513 * C153651 + (C11509 + C11508) * C83605) *
                C98524 +
            (C18855 * C153643 + C20107 * C153651 + (C12490 + C12491) * C83605) *
                C153897) *
               C2086 -
           (((C11439 * C1518 - C11440 * C1513 - C11439 * C1519 +
              C153855 * C1528 + C11437 * C596 - C11438 * C575 - C11437 * C597 +
              C154035 * C611) *
                 C83605 +
             (C12071 + C12070) * C153651 + C19473 * C153643) *
                C153897 +
            ((C12491 + C12490) * C83605 + C12476 * C153651 + C12477 * C153643) *
                C98524) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C153643 +
            (C11502 + C11503) * C153651 + C11512 * C83605) *
               C98524 +
           ((C19518 + C19519) * C153643 + C19472 * C153651 + C18855 * C83605) *
               C153897) *
              C2292 -
          ((C19473 * C83605 + C19474 * C153651 + (C19520 + C19521) * C153643) *
               C153897 +
           (C12477 * C83605 + C19483 * C153651 + (C19519 + C19518) * C153643) *
               C98524) *
              C2293 +
          ((C58730 * C153643 + C19484 * C153651 + C19485 * C83605) * C98524 +
           (C67339 * C153643 + C58733 * C153651 + (C19524 + C19525) * C83605) *
               C153897) *
              C2294 -
          (((C11439 * C9202 - C11440 * C9199 - C11439 * C9203 +
             C153855 * C9208 + C11437 * C7748 - C11438 * C7742 -
             C11437 * C7749 + C154035 * C7754) *
                C83605 +
            (C58752 + C58751) * C153651 + C69702 * C153643) *
               C153897 +
           ((C19525 + C19524) * C83605 + C58732 * C153651 + C62282 * C153643) *
               C98524) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[238] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C153643 +
             (C11502 + C11503) * C153651 + C11512 * C83605) *
                C98524 +
            ((C19518 + C19519) * C153643 + C19472 * C153651 + C18855 * C83605) *
                C153897) *
               C154094 -
           ((C19473 * C83605 + C19474 * C153651 + (C19520 + C19521) * C153643) *
                C153897 +
            (C12477 * C83605 + C19483 * C153651 + (C19519 + C19518) * C153643) *
                C98524) *
               C154095 +
           ((C58730 * C153643 + C19484 * C153651 + C19485 * C83605) * C98524 +
            (C67339 * C153643 + C58733 * C153651 + (C19524 + C19525) * C83605) *
                C153897) *
               C2602) *
              C153695 * C154013 +
          (((C19472 * C153643 + C18855 * C153651 + C20107 * C83605) * C98524 +
            (C19484 * C153643 + C19485 * C153651 + (C12070 + C12071) * C83605) *
                C153897) *
               C154095 -
           ((C12476 * C83605 + C12477 * C153651 + C19483 * C153643) * C153897 +
            (C11515 * C83605 + (C11505 + C11504) * C153651 +
             (C11503 + C11502) * C153643) *
                C98524) *
               C154094 -
           (((C11439 * C8574 - C11440 * C8573 - C11439 * C8575 +
              C153855 * C8576 + C11437 * C2303 - C11438 * C2297 -
              C11437 * C2304 + C154035 * C2312) *
                 C83605 +
             (C19525 + C19524) * C153651 + C58732 * C153643) *
                C153897 +
            ((C12071 + C12070) * C83605 + C19473 * C153651 + C19474 * C153643) *
                C98524) *
               C2602) *
              C153695 * C153682)) /
        (p * q * std::sqrt(p + q));
    d2ee[239] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C153643 +
             (C11502 + C11503) * C153651 + C11512 * C83605) *
                C98524 +
            ((C19518 + C19519) * C153643 + C19472 * C153651 + C18855 * C83605) *
                C153897) *
               C2086 -
           ((C19473 * C83605 + C19474 * C153651 + (C19520 + C19521) * C153643) *
                C153897 +
            (C12477 * C83605 + C19483 * C153651 + (C19519 + C19518) * C153643) *
                C98524) *
               C153775) *
              C153695 * C1281 +
          (((C19472 * C153643 + C18855 * C153651 + C20107 * C83605) * C98524 +
            (C19484 * C153643 + C19485 * C153651 + (C12070 + C12071) * C83605) *
                C153897) *
               C153775 -
           ((C12476 * C83605 + C12477 * C153651 + C19483 * C153643) * C153897 +
            (C11515 * C83605 + (C11505 + C11504) * C153651 +
             (C11503 + C11502) * C153643) *
                C98524) *
               C2086) *
              C153695 * C1282 +
          (((C11512 * C153643 + C11513 * C153651 + (C11509 + C11508) * C83605) *
                C98524 +
            (C18855 * C153643 + C20107 * C153651 + (C12490 + C12491) * C83605) *
                C153897) *
               C2086 -
           (((C11439 * C1518 - C11440 * C1513 - C11439 * C1519 +
              C153855 * C1528 + C11437 * C596 - C11438 * C575 - C11437 * C597 +
              C154035 * C611) *
                 C83605 +
             (C12071 + C12070) * C153651 + C19473 * C153643) *
                C153897 +
            ((C12491 + C12490) * C83605 + C12476 * C153651 + C12477 * C153643) *
                C98524) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C153643 +
             (C11502 + C11503) * C153651 + C11512 * C83605) *
                C98524 +
            ((C19518 + C19519) * C153643 + C19472 * C153651 + C18855 * C83605) *
                C153897) *
               C2086 -
           ((C19473 * C83605 + C19474 * C153651 + (C19520 + C19521) * C153643) *
                C153897 +
            (C12477 * C83605 + C19483 * C153651 + (C19519 + C19518) * C153643) *
                C98524) *
               C153775) *
              C332 +
          ((((C20533 + C20534) * C153643 + C20502 * C153651 + C20503 * C83605) *
                C98524 +
            ((C21325 + C21326) * C153643 + C59719 * C153651 +
             (C20537 + C20538) * C83605) *
                C153897) *
               C153775 -
           ((C19816 * C83605 + C20520 * C153651 + (C20534 + C20533) * C153643) *
                C153897 +
            (C12267 * C83605 + (C11786 + C11787) * C153651 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C153643) *
                C98524) *
               C2086) *
              C333 +
          ((((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
              C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
              C153855 * C1390) *
                 C153643 +
             (C11788 + C11789) * C153651 + (C11790 + C11791) * C83605) *
                C98524 +
            ((C22305 + C22306) * C153643 + (C19170 + C19171) * C153651 +
             (C19172 + C19173) * C83605) *
                C153897) *
               C2086 -
           (((C11439 * C5034 - C11440 * C5031 - C11439 * C5035 +
              C153855 * C5040 + C11437 * C3515 - C11438 * C3509 -
              C11437 * C3516 + C154035 * C3521) *
                 C83605 +
             (C58439 + C58438) * C153651 + (C61506 + C61505) * C153643) *
                C153897 +
            ((C19173 + C19172) * C83605 + (C19171 + C19170) * C153651 +
             (C22306 + C22305) * C153643) *
                C98524) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[240] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C74316 +
             (C11502 + C11503) * C153648) *
                C153893 +
            ((C19518 + C19519) * C74316 + C19472 * C153648) * C153900 +
            C120711 * C116097) *
               C153711 * C154021 -
           ((C59728 * C153648 + C60518 * C74316) * C116097 +
            (C20520 * C153648 + (C20534 + C20533) * C74316) * C153900 +
            ((C11786 + C11787) * C153648 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C74316) *
                C153893) *
               C153711 * C153747) *
              C154090 +
          ((((C11787 + C11786) * C74316 + (C11785 + C11784) * C153648) *
                C153893 +
            (C20502 * C74316 + C20503 * C153648) * C153900 +
            (C59719 * C74316 + (C20537 + C20538) * C153648) * C116097) *
               C153711 * C153747 -
           (C120712 * C116097 + (C12477 * C153648 + C19483 * C74316) * C153900 +
            ((C11505 + C11504) * C153648 + (C11503 + C11502) * C74316) *
                C153893) *
               C153711 * C154021) *
              C154091 +
          (((C11512 * C74316 + C11513 * C153648) * C153893 +
            (C18855 * C74316 + C20107 * C153648) * C153900 +
            (C19485 * C74316 + (C12070 + C12071) * C153648) * C116097) *
               C153711 * C154021 -
           (((C11439 * C3517 - C11440 * C3510 - C11439 * C3518 +
              C153855 * C3522 + C11437 * C1520 - C11438 * C1514 -
              C11437 * C1521 + C154035 * C1529) *
                 C153648 +
             (C20538 + C20537) * C74316) *
                C116097 +
            ((C12791 + C12790) * C153648 + C19816 * C74316) * C153900 +
            (C12266 * C153648 + C12267 * C74316) * C153893) *
               C153711 * C153747) *
              C796)) /
        (p * q * std::sqrt(p + q));
    d2ee[241] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
               C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                  C74316 +
              (C11502 + C11503) * C153648) *
                 C153893 +
             ((C19518 + C19519) * C74316 + C19472 * C153648) * C153900 +
             C120711 * C116097) *
                C154022 -
            ((C58732 * C153648 + C62282 * C74316) * C116097 +
             (C19474 * C153648 + (C19520 + C19521) * C74316) * C153900 +
             (C19483 * C153648 + (C19519 + C19518) * C74316) * C153893) *
                C153775) *
               C154021 +
           ((((C20533 + C20534) * C74316 + C20502 * C153648) * C153893 +
             ((C21325 + C21326) * C74316 + C59719 * C153648) * C153900 +
             ((C60525 + C60526) * C74316 + (C59733 + C59734) * C153648) *
                 C116097) *
                C153775 -
            ((C59728 * C153648 + C60518 * C74316) * C116097 +
             (C20520 * C153648 + (C20534 + C20533) * C74316) * C153900 +
             ((C11786 + C11787) * C153648 +
              (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
               C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                  C74316) *
                 C153893) *
                C154022) *
               C153747) *
              C335 +
          ((((C19472 * C74316 + C18855 * C153648) * C153893 +
             (C19484 * C74316 + C19485 * C153648) * C153900 +
             (C58733 * C74316 + (C19524 + C19525) * C153648) * C116097) *
                C153775 -
            (C120712 * C116097 +
             (C12477 * C153648 + C19483 * C74316) * C153900 +
             ((C11505 + C11504) * C153648 + (C11503 + C11502) * C74316) *
                 C153893) *
                C154022) *
               C154021 +
           ((((C11787 + C11786) * C74316 + (C11785 + C11784) * C153648) *
                 C153893 +
             (C20502 * C74316 + C20503 * C153648) * C153900 +
             (C59719 * C74316 + (C20537 + C20538) * C153648) * C116097) *
                C154022 -
            (((C11439 * C6369 - C11440 * C6363 - C11439 * C6370 +
               C153855 * C6381 + C11437 * C6371 - C11438 * C6364 -
               C11437 * C6372 + C154035 * C6382) *
                  C153648 +
              (C59734 + C59733) * C74316) *
                 C116097 +
             ((C20538 + C20537) * C153648 + C59728 * C74316) * C153900 +
             (C19816 * C153648 + C20520 * C74316) * C153893) *
                C153775) *
               C153747) *
              C153682)) /
        (p * q * std::sqrt(p + q));
    d2ee[242] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C74316 +
             (C11502 + C11503) * C153648) *
                C153893 +
            ((C19518 + C19519) * C74316 + C19472 * C153648) * C153900 +
            (C58730 * C74316 + C19484 * C153648) * C116097) *
               C153711 * C332 -
           ((C59728 * C153648 + C60518 * C74316) * C116097 +
            (C20520 * C153648 + (C20534 + C20533) * C74316) * C153900 +
            ((C11786 + C11787) * C153648 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C74316) *
                C153893) *
               C153711 * C333 +
           (((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
              C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
              C153855 * C1390) *
                 C74316 +
             (C11788 + C11789) * C153648) *
                C153893 +
            ((C22305 + C22306) * C74316 + (C19170 + C19171) * C153648) *
                C153900 +
            ((C61505 + C61506) * C74316 + (C58438 + C58439) * C153648) *
                C116097) *
               C153711 * C334) *
              C335 +
          ((((C11787 + C11786) * C74316 + (C11785 + C11784) * C153648) *
                C153893 +
            (C20502 * C74316 + C20503 * C153648) * C153900 +
            (C59719 * C74316 + (C20537 + C20538) * C153648) * C116097) *
               C153711 * C333 -
           ((C19473 * C153648 + C19474 * C74316) * C116097 +
            (C12477 * C153648 + C19483 * C74316) * C153900 +
            ((C11505 + C11504) * C153648 + (C11503 + C11502) * C74316) *
                C153893) *
               C153711 * C332 -
           (((C11439 * C5034 - C11440 * C5031 - C11439 * C5035 +
              C153855 * C5040 + C11437 * C3515 - C11438 * C3509 -
              C11437 * C3516 + C154035 * C3521) *
                 C153648 +
             (C58439 + C58438) * C74316) *
                C116097 +
            ((C19173 + C19172) * C153648 + (C19171 + C19170) * C74316) *
                C153900 +
            ((C11791 + C11790) * C153648 + (C11789 + C11788) * C74316) *
                C153893) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C74316 +
            (C11502 + C11503) * C153648) *
               C153893 +
           ((C19518 + C19519) * C74316 + C19472 * C153648) * C153900 +
           (C58730 * C74316 + C19484 * C153648) * C116097) *
              C153711 * C153695 * C130 -
          ((C19473 * C153648 + C19474 * C74316) * C116097 +
           (C12477 * C153648 + C19483 * C74316) * C153900 +
           ((C11505 + C11504) * C153648 + (C11503 + C11502) * C74316) *
               C153893) *
              C153711 * C153695 * C131 +
          ((C11512 * C74316 + C11513 * C153648) * C153893 +
           (C18855 * C74316 + C20107 * C153648) * C153900 +
           (C19485 * C74316 + (C12070 + C12071) * C153648) * C116097) *
              C153711 * C153695 * C132 -
          (((C11439 * C1518 - C11440 * C1513 - C11439 * C1519 +
             C153855 * C1528 + C11437 * C596 - C11438 * C575 - C11437 * C597 +
             C154035 * C611) *
                C153648 +
            (C12071 + C12070) * C74316) *
               C116097 +
           ((C12491 + C12490) * C153648 + C12476 * C74316) * C153900 +
           (C11514 * C153648 + C11515 * C74316) * C153893) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C74316 +
             (C11502 + C11503) * C153648) *
                C153893 +
            ((C19518 + C19519) * C74316 + C19472 * C153648) * C153900 +
            C120711 * C116097) *
               C563 -
           ((C58732 * C153648 + C62282 * C74316) * C116097 +
            (C19474 * C153648 + (C19520 + C19521) * C74316) * C153900 +
            (C19483 * C153648 + (C19519 + C19518) * C74316) * C153893) *
               C564 +
           (C120711 * C153893 + (C67339 * C74316 + C58733 * C153648) * C153900 +
            ((C62297 + C62298) * C74316 + (C58751 + C58752) * C153648) *
                C116097) *
               C565) *
              C153695 * C335 +
          (((C19472 * C74316 + C18855 * C153648) * C153893 +
            (C19484 * C74316 + C19485 * C153648) * C153900 +
            (C58733 * C74316 + (C19524 + C19525) * C153648) * C116097) *
               C564 -
           (C120712 * C116097 + (C12477 * C153648 + C19483 * C74316) * C153900 +
            ((C11505 + C11504) * C153648 + (C11503 + C11502) * C74316) *
                C153893) *
               C563 -
           (((C11439 * C9202 - C11440 * C9199 - C11439 * C9203 +
              C153855 * C9208 + C11437 * C7748 - C11438 * C7742 -
              C11437 * C7749 + C154035 * C7754) *
                 C153648 +
             (C58752 + C58751) * C74316) *
                C116097 +
            ((C19525 + C19524) * C153648 + C58732 * C74316) * C153900 +
            C120712 * C153893) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[243] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C74316 +
             (C11502 + C11503) * C153648) *
                C153893 +
            ((C19518 + C19519) * C74316 + C19472 * C153648) * C153900 +
            C120711 * C116097) *
               C154022 -
           ((C58732 * C153648 + C62282 * C74316) * C116097 +
            (C19474 * C153648 + (C19520 + C19521) * C74316) * C153900 +
            (C19483 * C153648 + (C19519 + C19518) * C74316) * C153893) *
               C153775) *
              C153695 * C154090 +
          (((C19472 * C74316 + C18855 * C153648) * C153893 +
            (C19484 * C74316 + C19485 * C153648) * C153900 +
            (C58733 * C74316 + (C19524 + C19525) * C153648) * C116097) *
               C153775 -
           (C120712 * C116097 + (C12477 * C153648 + C19483 * C74316) * C153900 +
            ((C11505 + C11504) * C153648 + (C11503 + C11502) * C74316) *
                C153893) *
               C154022) *
              C153695 * C154091 +
          (((C11512 * C74316 + C11513 * C153648) * C153893 +
            (C18855 * C74316 + C20107 * C153648) * C153900 +
            (C19485 * C74316 + (C12070 + C12071) * C153648) * C116097) *
               C154022 -
           (((C11439 * C8574 - C11440 * C8573 - C11439 * C8575 +
              C153855 * C8576 + C11437 * C2303 - C11438 * C2297 -
              C11437 * C2304 + C154035 * C2312) *
                 C153648 +
             (C19525 + C19524) * C74316) *
                C116097 +
            ((C12071 + C12070) * C153648 + C19473 * C74316) * C153900 +
            (C12476 * C153648 + C12477 * C74316) * C153893) *
               C153775) *
              C153695 * C796)) /
        (p * q * std::sqrt(p + q));
    d2ee[244] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C74316 +
            (C11502 + C11503) * C153648) *
               C153893 +
           ((C19518 + C19519) * C74316 + C19472 * C153648) * C153900 +
           (C58730 * C74316 + C19484 * C153648) * C116097) *
              C153711 * C153695 * C130 -
          ((C19473 * C153648 + C19474 * C74316) * C116097 +
           (C12477 * C153648 + C19483 * C74316) * C153900 +
           ((C11505 + C11504) * C153648 + (C11503 + C11502) * C74316) *
               C153893) *
              C153711 * C153695 * C131 +
          ((C11512 * C74316 + C11513 * C153648) * C153893 +
           (C18855 * C74316 + C20107 * C153648) * C153900 +
           (C19485 * C74316 + (C12070 + C12071) * C153648) * C116097) *
              C153711 * C153695 * C132 -
          (((C11439 * C1518 - C11440 * C1513 - C11439 * C1519 +
             C153855 * C1528 + C11437 * C596 - C11438 * C575 - C11437 * C597 +
             C154035 * C611) *
                C153648 +
            (C12071 + C12070) * C74316) *
               C116097 +
           ((C12491 + C12490) * C153648 + C12476 * C74316) * C153900 +
           (C11514 * C153648 + C11515 * C74316) * C153893) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C74316 +
             (C11502 + C11503) * C153648) *
                C153893 +
            ((C19518 + C19519) * C74316 + C19472 * C153648) * C153900 +
            (C58730 * C74316 + C19484 * C153648) * C116097) *
               C153711 * C332 -
           ((C59728 * C153648 + C60518 * C74316) * C116097 +
            (C20520 * C153648 + (C20534 + C20533) * C74316) * C153900 +
            ((C11786 + C11787) * C153648 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C74316) *
                C153893) *
               C153711 * C333 +
           (((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
              C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
              C153855 * C1390) *
                 C74316 +
             (C11788 + C11789) * C153648) *
                C153893 +
            ((C22305 + C22306) * C74316 + (C19170 + C19171) * C153648) *
                C153900 +
            ((C61505 + C61506) * C74316 + (C58438 + C58439) * C153648) *
                C116097) *
               C153711 * C334) *
              C335 +
          ((((C11787 + C11786) * C74316 + (C11785 + C11784) * C153648) *
                C153893 +
            (C20502 * C74316 + C20503 * C153648) * C153900 +
            (C59719 * C74316 + (C20537 + C20538) * C153648) * C116097) *
               C153711 * C333 -
           ((C19473 * C153648 + C19474 * C74316) * C116097 +
            (C12477 * C153648 + C19483 * C74316) * C153900 +
            ((C11505 + C11504) * C153648 + (C11503 + C11502) * C74316) *
                C153893) *
               C153711 * C332 -
           (((C11439 * C5034 - C11440 * C5031 - C11439 * C5035 +
              C153855 * C5040 + C11437 * C3515 - C11438 * C3509 -
              C11437 * C3516 + C154035 * C3521) *
                 C153648 +
             (C58439 + C58438) * C74316) *
                C116097 +
            ((C19173 + C19172) * C153648 + (C19171 + C19170) * C74316) *
                C153900 +
            ((C11791 + C11790) * C153648 + (C11789 + C11788) * C74316) *
                C153893) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[245] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C74316 +
             (C11502 + C11503) * C153648) *
                C153893 +
            ((C19518 + C19519) * C74316 + C19472 * C153648) * C153900 +
            C120711 * C116097) *
               C153711 * C154092 -
           (C122455 * C116097 +
            (C20520 * C153648 + (C20534 + C20533) * C74316) * C153900 +
            ((C11786 + C11787) * C153648 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C74316) *
                C153893) *
               C153711 * C154093 +
           (((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
              C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
              C153855 * C1390) *
                 C74316 +
             (C11788 + C11789) * C153648) *
                C153893 +
            ((C22305 + C22306) * C74316 + (C19170 + C19171) * C153648) *
                C153900 +
            ((C61505 + C61506) * C74316 + (C58438 + C58439) * C153648) *
                C116097) *
               C153711 * C1657) *
              C154013 +
          ((((C11787 + C11786) * C74316 + (C11785 + C11784) * C153648) *
                C153893 +
            (C20502 * C74316 + C20503 * C153648) * C153900 +
            (C59719 * C74316 + (C20537 + C20538) * C153648) * C116097) *
               C153711 * C154093 -
           (C120712 * C116097 + (C12477 * C153648 + C19483 * C74316) * C153900 +
            ((C11505 + C11504) * C153648 + (C11503 + C11502) * C74316) *
                C153893) *
               C153711 * C154092 -
           (((C11439 * C5034 - C11440 * C5031 - C11439 * C5035 +
              C153855 * C5040 + C11437 * C3515 - C11438 * C3509 -
              C11437 * C3516 + C154035 * C3521) *
                 C153648 +
             (C58439 + C58438) * C74316) *
                C116097 +
            ((C19173 + C19172) * C153648 + (C19171 + C19170) * C74316) *
                C153900 +
            ((C11791 + C11790) * C153648 + (C11789 + C11788) * C74316) *
                C153893) *
               C153711 * C1657) *
              C153682)) /
        (p * q * std::sqrt(p + q));
    d2ee[246] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C74316 +
             (C11502 + C11503) * C153648) *
                C153893 +
            ((C19518 + C19519) * C74316 + C19472 * C153648) * C153900 +
            C120711 * C116097) *
               C154022 -
           ((C58732 * C153648 + C62282 * C74316) * C116097 +
            (C19474 * C153648 + (C19520 + C19521) * C74316) * C153900 +
            (C19483 * C153648 + (C19519 + C19518) * C74316) * C153893) *
               C153775) *
              C154092 +
          ((((C20533 + C20534) * C74316 + C20502 * C153648) * C153893 +
            ((C21325 + C21326) * C74316 + C59719 * C153648) * C153900 +
            ((C60525 + C60526) * C74316 + (C59733 + C59734) * C153648) *
                C116097) *
               C153775 -
           (C122455 * C116097 +
            (C20520 * C153648 + (C20534 + C20533) * C74316) * C153900 +
            ((C11786 + C11787) * C153648 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C74316) *
                C153893) *
               C154022) *
              C154093 +
          ((((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
              C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
              C153855 * C1390) *
                 C74316 +
             (C11788 + C11789) * C153648) *
                C153893 +
            ((C22305 + C22306) * C74316 + (C19170 + C19171) * C153648) *
                C153900 +
            ((C61505 + C61506) * C74316 + (C58438 + C58439) * C153648) *
                C116097) *
               C154022 -
           (((C11439 * C32003 - C11440 * C32002 - C11439 * C32004 +
              C153855 * C32005 + C11437 * C6373 - C11438 * C6365 -
              C11437 * C6374 + C154035 * C6383) *
                 C153648 +
             (C69183 + C69182) * C74316) *
                C116097 +
            ((C58439 + C58438) * C153648 + (C61506 + C61505) * C74316) *
                C153900 +
            ((C19171 + C19170) * C153648 + (C22306 + C22305) * C74316) *
                C153893) *
               C153775) *
              C1657) *
         C153676) /
        (p * q * std::sqrt(p + q));
    d2ee[247] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C74316 +
            (C11502 + C11503) * C153648) *
               C153893 +
           ((C19518 + C19519) * C74316 + C19472 * C153648) * C153900 +
           C120711 * C116097) *
              C153711 * C1366 -
          ((C59728 * C153648 + C60518 * C74316) * C116097 +
           (C20520 * C153648 + (C20534 + C20533) * C74316) * C153900 +
           ((C11786 + C11787) * C153648 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C74316) *
               C153893) *
              C153711 * C1367 +
          (((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
             C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
             C153855 * C1390) *
                C74316 +
            (C11788 + C11789) * C153648) *
               C153893 +
           ((C22305 + C22306) * C74316 + (C19170 + C19171) * C153648) *
               C153900 +
           ((C61505 + C61506) * C74316 + (C58438 + C58439) * C153648) *
               C116097) *
              C153711 * C1368 -
          (((C11439 * C28694 - C11440 * C28691 - C11439 * C28695 +
             C153855 * C28697 + C11437 * C5036 - C11438 * C5032 -
             C11437 * C5037 + C154035 * C5041) *
                C153648 +
            (C11439 * C28692 - C11440 * C28690 - C11439 * C28693 +
             C153855 * C28696 + C11437 * C5038 - C11438 * C5033 -
             C11437 * C5039 + C154035 * C5042) *
                C74316) *
               C116097 +
           ((C11439 * C5774 - C11440 * C5770 - C11439 * C5775 +
             C153855 * C5779 + C11437 * C4385 - C11438 * C4380 -
             C11437 * C4386 + C154035 * C4392) *
                C153648 +
            (C11439 * C5776 - C11440 * C5771 - C11439 * C5777 +
             C153855 * C5780 + C11437 * C4383 - C11438 * C4379 -
             C11437 * C4384 + C154035 * C4391) *
                C74316) *
               C153900 +
           ((C11439 * C3195 - C11440 * C3190 - C11439 * C3196 +
             C153855 * C3202 + C11437 * C1382 - C11438 * C1374 -
             C11437 * C1383 + C154035 * C1389) *
                C153648 +
            (C11439 * C3193 - C11440 * C3189 - C11439 * C3194 +
             C153855 * C3201 + C11437 * C1384 - C11438 * C1375 -
             C11437 * C1385 + C154035 * C1390) *
                C74316) *
               C153893) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C74316 +
             (C11502 + C11503) * C153648) *
                C153893 +
            ((C19518 + C19519) * C74316 + C19472 * C153648) * C153900 +
            C120711 * C116097) *
               C153711 * C1279 -
           ((C59728 * C153648 + C60518 * C74316) * C116097 +
            (C20520 * C153648 + (C20534 + C20533) * C74316) * C153900 +
            ((C11786 + C11787) * C153648 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C74316) *
                C153893) *
               C153711 * C153747) *
              C1281 +
          ((((C11787 + C11786) * C74316 + (C11785 + C11784) * C153648) *
                C153893 +
            (C20502 * C74316 + C20503 * C153648) * C153900 +
            (C59719 * C74316 + (C20537 + C20538) * C153648) * C116097) *
               C153711 * C153747 -
           (C120712 * C116097 + (C12477 * C153648 + C19483 * C74316) * C153900 +
            ((C11505 + C11504) * C153648 + (C11503 + C11502) * C74316) *
                C153893) *
               C153711 * C1279) *
              C1282 +
          (((C11512 * C74316 + C11513 * C153648) * C153893 +
            (C18855 * C74316 + C20107 * C153648) * C153900 +
            (C19485 * C74316 + (C12070 + C12071) * C153648) * C116097) *
               C153711 * C1279 -
           (((C11439 * C3517 - C11440 * C3510 - C11439 * C3518 +
              C153855 * C3522 + C11437 * C1520 - C11438 * C1514 -
              C11437 * C1521 + C154035 * C1529) *
                 C153648 +
             (C20538 + C20537) * C74316) *
                C116097 +
            ((C12791 + C12790) * C153648 + C19816 * C74316) * C153900 +
            (C12266 * C153648 + C12267 * C74316) * C153893) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C74316 +
             (C11502 + C11503) * C153648) *
                C153893 +
            ((C19518 + C19519) * C74316 + C19472 * C153648) * C153900 +
            C120711 * C116097) *
               C563 -
           ((C58732 * C153648 + C62282 * C74316) * C116097 +
            (C19474 * C153648 + (C19520 + C19521) * C74316) * C153900 +
            (C19483 * C153648 + (C19519 + C19518) * C74316) * C153893) *
               C564 +
           (C120711 * C153893 + (C67339 * C74316 + C58733 * C153648) * C153900 +
            ((C62297 + C62298) * C74316 + (C58751 + C58752) * C153648) *
                C116097) *
               C565) *
              C1279 +
          ((((C20533 + C20534) * C74316 + C20502 * C153648) * C153893 +
            ((C21325 + C21326) * C74316 + C59719 * C153648) * C153900 +
            ((C60525 + C60526) * C74316 + (C59733 + C59734) * C153648) *
                C116097) *
               C564 -
           (C122455 * C116097 +
            (C20520 * C153648 + (C20534 + C20533) * C74316) * C153900 +
            ((C11786 + C11787) * C153648 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C74316) *
                C153893) *
               C563 -
           (((C11439 * C31182 - C11440 * C31179 - C11439 * C31183 +
              C153855 * C31185 + C11437 * C9204 - C11438 * C9200 -
              C11437 * C9205 + C154035 * C9209) *
                 C153648 +
             (C68523 + C68522) * C74316) *
                C116097 +
            ((C59734 + C59733) * C153648 + C68515 * C74316) * C153900 +
            C122455 * C153893) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[248] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
               C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                  C74316 +
              (C11502 + C11503) * C153648) *
                 C153893 +
             ((C19518 + C19519) * C74316 + C19472 * C153648) * C153900 +
             C120711 * C116097) *
                C154022 -
            ((C58732 * C153648 + C62282 * C74316) * C116097 +
             (C19474 * C153648 + (C19520 + C19521) * C74316) * C153900 +
             (C19483 * C153648 + (C19519 + C19518) * C74316) * C153893) *
                C153775) *
               C1279 +
           ((((C20533 + C20534) * C74316 + C20502 * C153648) * C153893 +
             ((C21325 + C21326) * C74316 + C59719 * C153648) * C153900 +
             ((C60525 + C60526) * C74316 + (C59733 + C59734) * C153648) *
                 C116097) *
                C153775 -
            (C122455 * C116097 +
             (C20520 * C153648 + (C20534 + C20533) * C74316) * C153900 +
             ((C11786 + C11787) * C153648 +
              (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
               C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                  C74316) *
                 C153893) *
                C154022) *
               C153747) *
              C154013 +
          ((((C19472 * C74316 + C18855 * C153648) * C153893 +
             (C19484 * C74316 + C19485 * C153648) * C153900 +
             (C58733 * C74316 + (C19524 + C19525) * C153648) * C116097) *
                C153775 -
            (C120712 * C116097 +
             (C12477 * C153648 + C19483 * C74316) * C153900 +
             ((C11505 + C11504) * C153648 + (C11503 + C11502) * C74316) *
                 C153893) *
                C154022) *
               C1279 +
           ((((C11787 + C11786) * C74316 + (C11785 + C11784) * C153648) *
                 C153893 +
             (C20502 * C74316 + C20503 * C153648) * C153900 +
             (C59719 * C74316 + (C20537 + C20538) * C153648) * C116097) *
                C154022 -
            (((C11439 * C6369 - C11440 * C6363 - C11439 * C6370 +
               C153855 * C6381 + C11437 * C6371 - C11438 * C6364 -
               C11437 * C6372 + C154035 * C6382) *
                  C153648 +
              (C59734 + C59733) * C74316) *
                 C116097 +
             ((C20538 + C20537) * C153648 + C59728 * C74316) * C153900 +
             (C19816 * C153648 + C20520 * C74316) * C153893) *
                C153775) *
               C153747) *
              C153682)) /
        (p * q * std::sqrt(p + q));
    d2ee[249] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C74316 +
             (C11502 + C11503) * C153648) *
                C153893 +
            ((C19518 + C19519) * C74316 + C19472 * C153648) * C153900 +
            C120711 * C116097) *
               C153711 * C1279 -
           ((C59728 * C153648 + C60518 * C74316) * C116097 +
            (C20520 * C153648 + (C20534 + C20533) * C74316) * C153900 +
            ((C11786 + C11787) * C153648 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C74316) *
                C153893) *
               C153711 * C153747) *
              C1281 +
          ((((C11787 + C11786) * C74316 + (C11785 + C11784) * C153648) *
                C153893 +
            (C20502 * C74316 + C20503 * C153648) * C153900 +
            (C59719 * C74316 + (C20537 + C20538) * C153648) * C116097) *
               C153711 * C153747 -
           (C120712 * C116097 + (C12477 * C153648 + C19483 * C74316) * C153900 +
            ((C11505 + C11504) * C153648 + (C11503 + C11502) * C74316) *
                C153893) *
               C153711 * C1279) *
              C1282 +
          (((C11512 * C74316 + C11513 * C153648) * C153893 +
            (C18855 * C74316 + C20107 * C153648) * C153900 +
            (C19485 * C74316 + (C12070 + C12071) * C153648) * C116097) *
               C153711 * C1279 -
           (((C11439 * C3517 - C11440 * C3510 - C11439 * C3518 +
              C153855 * C3522 + C11437 * C1520 - C11438 * C1514 -
              C11437 * C1521 + C154035 * C1529) *
                 C153648 +
             (C20538 + C20537) * C74316) *
                C116097 +
            ((C12791 + C12790) * C153648 + C19816 * C74316) * C153900 +
            (C12266 * C153648 + C12267 * C74316) * C153893) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C74316 +
            (C11502 + C11503) * C153648) *
               C153893 +
           ((C19518 + C19519) * C74316 + C19472 * C153648) * C153900 +
           C120711 * C116097) *
              C153711 * C1366 -
          ((C59728 * C153648 + C60518 * C74316) * C116097 +
           (C20520 * C153648 + (C20534 + C20533) * C74316) * C153900 +
           ((C11786 + C11787) * C153648 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C74316) *
               C153893) *
              C153711 * C1367 +
          (((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
             C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
             C153855 * C1390) *
                C74316 +
            (C11788 + C11789) * C153648) *
               C153893 +
           ((C22305 + C22306) * C74316 + (C19170 + C19171) * C153648) *
               C153900 +
           ((C61505 + C61506) * C74316 + (C58438 + C58439) * C153648) *
               C116097) *
              C153711 * C1368 -
          (((C11439 * C28694 - C11440 * C28691 - C11439 * C28695 +
             C153855 * C28697 + C11437 * C5036 - C11438 * C5032 -
             C11437 * C5037 + C154035 * C5041) *
                C153648 +
            (C11439 * C28692 - C11440 * C28690 - C11439 * C28693 +
             C153855 * C28696 + C11437 * C5038 - C11438 * C5033 -
             C11437 * C5039 + C154035 * C5042) *
                C74316) *
               C116097 +
           ((C11439 * C5774 - C11440 * C5770 - C11439 * C5775 +
             C153855 * C5779 + C11437 * C4385 - C11438 * C4380 -
             C11437 * C4386 + C154035 * C4392) *
                C153648 +
            (C11439 * C5776 - C11440 * C5771 - C11439 * C5777 +
             C153855 * C5780 + C11437 * C4383 - C11438 * C4379 -
             C11437 * C4384 + C154035 * C4391) *
                C74316) *
               C153900 +
           ((C11439 * C3195 - C11440 * C3190 - C11439 * C3196 +
             C153855 * C3202 + C11437 * C1382 - C11438 * C1374 -
             C11437 * C1383 + C154035 * C1389) *
                C153648 +
            (C11439 * C3193 - C11440 * C3189 - C11439 * C3194 +
             C153855 * C3201 + C11437 * C1384 - C11438 * C1375 -
             C11437 * C1385 + C154035 * C1390) *
                C74316) *
               C153893) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[250] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
               C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                  C74316 +
              (C11502 + C11503) * C153648) *
                 C153893 +
             ((C19518 + C19519) * C74316 + C19472 * C153648) * C153900 +
             C120711 * C116097) *
                C2086 -
            (C124198 * C116097 +
             (C19474 * C153648 + (C19520 + C19521) * C74316) * C153900 +
             (C19483 * C153648 + (C19519 + C19518) * C74316) * C153893) *
                C153775) *
               C154021 +
           ((((C20533 + C20534) * C74316 + C20502 * C153648) * C153893 +
             ((C21325 + C21326) * C74316 + C59719 * C153648) * C153900 +
             ((C60525 + C60526) * C74316 + (C59733 + C59734) * C153648) *
                 C116097) *
                C153775 -
            (C122455 * C116097 +
             (C20520 * C153648 + (C20534 + C20533) * C74316) * C153900 +
             ((C11786 + C11787) * C153648 +
              (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
               C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                  C74316) *
                 C153893) *
                C2086) *
               C153747) *
              C154013 +
          ((((C19472 * C74316 + C18855 * C153648) * C153893 +
             (C19484 * C74316 + C19485 * C153648) * C153900 +
             (C58733 * C74316 + (C19524 + C19525) * C153648) * C116097) *
                C153775 -
            (C120712 * C116097 +
             (C12477 * C153648 + C19483 * C74316) * C153900 +
             ((C11505 + C11504) * C153648 + (C11503 + C11502) * C74316) *
                 C153893) *
                C2086) *
               C154021 +
           ((((C11787 + C11786) * C74316 + (C11785 + C11784) * C153648) *
                 C153893 +
             (C20502 * C74316 + C20503 * C153648) * C153900 +
             (C59719 * C74316 + (C20537 + C20538) * C153648) * C116097) *
                C2086 -
            (((C11439 * C6369 - C11440 * C6363 - C11439 * C6370 +
               C153855 * C6381 + C11437 * C6371 - C11438 * C6364 -
               C11437 * C6372 + C154035 * C6382) *
                  C153648 +
              (C59734 + C59733) * C74316) *
                 C116097 +
             ((C20538 + C20537) * C153648 + C59728 * C74316) * C153900 +
             (C19816 * C153648 + C20520 * C74316) * C153893) *
                C153775) *
               C153747) *
              C153682)) /
        (p * q * std::sqrt(p + q));
    d2ee[251] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C74316 +
             (C11502 + C11503) * C153648) *
                C153893 +
            ((C19518 + C19519) * C74316 + C19472 * C153648) * C153900 +
            C120711 * C116097) *
               C154094 -
           (C124198 * C116097 +
            (C19474 * C153648 + (C19520 + C19521) * C74316) * C153900 +
            (C19483 * C153648 + (C19519 + C19518) * C74316) * C153893) *
               C154095 +
           (C120711 * C153893 + (C67339 * C74316 + C58733 * C153648) * C153900 +
            ((C62297 + C62298) * C74316 + (C58751 + C58752) * C153648) *
                C116097) *
               C2602) *
              C154021 +
          ((((C20533 + C20534) * C74316 + C20502 * C153648) * C153893 +
            ((C21325 + C21326) * C74316 + C59719 * C153648) * C153900 +
            ((C60525 + C60526) * C74316 + (C59733 + C59734) * C153648) *
                C116097) *
               C154095 -
           (C122455 * C116097 +
            (C20520 * C153648 + (C20534 + C20533) * C74316) * C153900 +
            ((C11786 + C11787) * C153648 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C74316) *
                C153893) *
               C154094 -
           (((C11439 * C31182 - C11440 * C31179 - C11439 * C31183 +
              C153855 * C31185 + C11437 * C9204 - C11438 * C9200 -
              C11437 * C9205 + C154035 * C9209) *
                 C153648 +
             (C68523 + C68522) * C74316) *
                C116097 +
            ((C59734 + C59733) * C153648 + C68515 * C74316) * C153900 +
            C122455 * C153893) *
               C2602) *
              C153747) *
         C153676) /
        (p * q * std::sqrt(p + q));
    d2ee[252] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C74316 +
             (C11502 + C11503) * C153648) *
                C153893 +
            ((C19518 + C19519) * C74316 + C19472 * C153648) * C153900 +
            C120711 * C116097) *
               C2086 -
           ((C58732 * C153648 + C62282 * C74316) * C116097 +
            (C19474 * C153648 + (C19520 + C19521) * C74316) * C153900 +
            (C19483 * C153648 + (C19519 + C19518) * C74316) * C153893) *
               C153775) *
              C332 +
          ((((C20533 + C20534) * C74316 + C20502 * C153648) * C153893 +
            ((C21325 + C21326) * C74316 + C59719 * C153648) * C153900 +
            ((C60525 + C60526) * C74316 + (C59733 + C59734) * C153648) *
                C116097) *
               C153775 -
           (C122455 * C116097 +
            (C20520 * C153648 + (C20534 + C20533) * C74316) * C153900 +
            ((C11786 + C11787) * C153648 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C74316) *
                C153893) *
               C2086) *
              C333 +
          ((((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
              C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
              C153855 * C1390) *
                 C74316 +
             (C11788 + C11789) * C153648) *
                C153893 +
            ((C22305 + C22306) * C74316 + (C19170 + C19171) * C153648) *
                C153900 +
            ((C61505 + C61506) * C74316 + (C58438 + C58439) * C153648) *
                C116097) *
               C2086 -
           (((C11439 * C32003 - C11440 * C32002 - C11439 * C32004 +
              C153855 * C32005 + C11437 * C6373 - C11438 * C6365 -
              C11437 * C6374 + C154035 * C6383) *
                 C153648 +
             (C69183 + C69182) * C74316) *
                C116097 +
            ((C58439 + C58438) * C153648 + (C61506 + C61505) * C74316) *
                C153900 +
            ((C19171 + C19170) * C153648 + (C22306 + C22305) * C74316) *
                C153893) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C74316 +
             (C11502 + C11503) * C153648) *
                C153893 +
            ((C19518 + C19519) * C74316 + C19472 * C153648) * C153900 +
            C120711 * C116097) *
               C2086 -
           ((C58732 * C153648 + C62282 * C74316) * C116097 +
            (C19474 * C153648 + (C19520 + C19521) * C74316) * C153900 +
            (C19483 * C153648 + (C19519 + C19518) * C74316) * C153893) *
               C153775) *
              C153695 * C1281 +
          (((C19472 * C74316 + C18855 * C153648) * C153893 +
            (C19484 * C74316 + C19485 * C153648) * C153900 +
            (C58733 * C74316 + (C19524 + C19525) * C153648) * C116097) *
               C153775 -
           (C120712 * C116097 + (C12477 * C153648 + C19483 * C74316) * C153900 +
            ((C11505 + C11504) * C153648 + (C11503 + C11502) * C74316) *
                C153893) *
               C2086) *
              C153695 * C1282 +
          (((C11512 * C74316 + C11513 * C153648) * C153893 +
            (C18855 * C74316 + C20107 * C153648) * C153900 +
            (C19485 * C74316 + (C12070 + C12071) * C153648) * C116097) *
               C2086 -
           (((C11439 * C8574 - C11440 * C8573 - C11439 * C8575 +
              C153855 * C8576 + C11437 * C2303 - C11438 * C2297 -
              C11437 * C2304 + C154035 * C2312) *
                 C153648 +
             (C19525 + C19524) * C74316) *
                C116097 +
            ((C12071 + C12070) * C153648 + C19473 * C74316) * C153900 +
            (C12476 * C153648 + C12477 * C74316) * C153893) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C74316 +
            (C11502 + C11503) * C153648) *
               C153893 +
           ((C19518 + C19519) * C74316 + C19472 * C153648) * C153900 +
           C120711 * C116097) *
              C2292 -
          (C124198 * C116097 +
           (C19474 * C153648 + (C19520 + C19521) * C74316) * C153900 +
           (C19483 * C153648 + (C19519 + C19518) * C74316) * C153893) *
              C2293 +
          (C120711 * C153893 + (C67339 * C74316 + C58733 * C153648) * C153900 +
           ((C62297 + C62298) * C74316 + (C58751 + C58752) * C153648) *
               C116097) *
              C2294 -
          (((C11439 * C56410 - C11440 * C56409 - C11439 * C56411 +
             C153855 * C56412 + C11437 * C10556 - C11438 * C10552 -
             C11437 * C10557 + C154035 * C10561) *
                C153648 +
            (C69718 + C69717) * C74316) *
               C116097 +
           ((C58752 + C58751) * C153648 + C69702 * C74316) * C153900 +
           C124198 * C153893) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[253] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C74316 +
             (C11502 + C11503) * C153648) *
                C153893 +
            ((C19518 + C19519) * C74316 + C19472 * C153648) * C153900 +
            C120711 * C116097) *
               C154094 -
           (C124198 * C116097 +
            (C19474 * C153648 + (C19520 + C19521) * C74316) * C153900 +
            (C19483 * C153648 + (C19519 + C19518) * C74316) * C153893) *
               C154095 +
           (C120711 * C153893 + (C67339 * C74316 + C58733 * C153648) * C153900 +
            ((C62297 + C62298) * C74316 + (C58751 + C58752) * C153648) *
                C116097) *
               C2602) *
              C153695 * C154013 +
          (((C19472 * C74316 + C18855 * C153648) * C153893 +
            (C19484 * C74316 + C19485 * C153648) * C153900 +
            (C58733 * C74316 + (C19524 + C19525) * C153648) * C116097) *
               C154095 -
           (C120712 * C116097 + (C12477 * C153648 + C19483 * C74316) * C153900 +
            ((C11505 + C11504) * C153648 + (C11503 + C11502) * C74316) *
                C153893) *
               C154094 -
           (((C11439 * C9202 - C11440 * C9199 - C11439 * C9203 +
              C153855 * C9208 + C11437 * C7748 - C11438 * C7742 -
              C11437 * C7749 + C154035 * C7754) *
                 C153648 +
             (C58752 + C58751) * C74316) *
                C116097 +
            ((C19525 + C19524) * C153648 + C58732 * C74316) * C153900 +
            C120712 * C153893) *
               C2602) *
              C153695 * C153682)) /
        (p * q * std::sqrt(p + q));
    d2ee[254] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C74316 +
             (C11502 + C11503) * C153648) *
                C153893 +
            ((C19518 + C19519) * C74316 + C19472 * C153648) * C153900 +
            C120711 * C116097) *
               C2086 -
           ((C58732 * C153648 + C62282 * C74316) * C116097 +
            (C19474 * C153648 + (C19520 + C19521) * C74316) * C153900 +
            (C19483 * C153648 + (C19519 + C19518) * C74316) * C153893) *
               C153775) *
              C153695 * C1281 +
          (((C19472 * C74316 + C18855 * C153648) * C153893 +
            (C19484 * C74316 + C19485 * C153648) * C153900 +
            (C58733 * C74316 + (C19524 + C19525) * C153648) * C116097) *
               C153775 -
           (C120712 * C116097 + (C12477 * C153648 + C19483 * C74316) * C153900 +
            ((C11505 + C11504) * C153648 + (C11503 + C11502) * C74316) *
                C153893) *
               C2086) *
              C153695 * C1282 +
          (((C11512 * C74316 + C11513 * C153648) * C153893 +
            (C18855 * C74316 + C20107 * C153648) * C153900 +
            (C19485 * C74316 + (C12070 + C12071) * C153648) * C116097) *
               C2086 -
           (((C11439 * C8574 - C11440 * C8573 - C11439 * C8575 +
              C153855 * C8576 + C11437 * C2303 - C11438 * C2297 -
              C11437 * C2304 + C154035 * C2312) *
                 C153648 +
             (C19525 + C19524) * C74316) *
                C116097 +
            ((C12071 + C12070) * C153648 + C19473 * C74316) * C153900 +
            (C12476 * C153648 + C12477 * C74316) * C153893) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C74316 +
             (C11502 + C11503) * C153648) *
                C153893 +
            ((C19518 + C19519) * C74316 + C19472 * C153648) * C153900 +
            C120711 * C116097) *
               C2086 -
           ((C58732 * C153648 + C62282 * C74316) * C116097 +
            (C19474 * C153648 + (C19520 + C19521) * C74316) * C153900 +
            (C19483 * C153648 + (C19519 + C19518) * C74316) * C153893) *
               C153775) *
              C332 +
          ((((C20533 + C20534) * C74316 + C20502 * C153648) * C153893 +
            ((C21325 + C21326) * C74316 + C59719 * C153648) * C153900 +
            ((C60525 + C60526) * C74316 + (C59733 + C59734) * C153648) *
                C116097) *
               C153775 -
           (C122455 * C116097 +
            (C20520 * C153648 + (C20534 + C20533) * C74316) * C153900 +
            ((C11786 + C11787) * C153648 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C74316) *
                C153893) *
               C2086) *
              C333 +
          ((((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
              C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
              C153855 * C1390) *
                 C74316 +
             (C11788 + C11789) * C153648) *
                C153893 +
            ((C22305 + C22306) * C74316 + (C19170 + C19171) * C153648) *
                C153900 +
            ((C61505 + C61506) * C74316 + (C58438 + C58439) * C153648) *
                C116097) *
               C2086 -
           (((C11439 * C32003 - C11440 * C32002 - C11439 * C32004 +
              C153855 * C32005 + C11437 * C6373 - C11438 * C6365 -
              C11437 * C6374 + C154035 * C6383) *
                 C153648 +
             (C69183 + C69182) * C74316) *
                C116097 +
            ((C58439 + C58438) * C153648 + (C61506 + C61505) * C74316) *
                C153900 +
            ((C19171 + C19170) * C153648 + (C22306 + C22305) * C74316) *
                C153893) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[255] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C74316 +
             (C2956 + C2957 + C2958) * C153648) *
                C98524 +
            ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
                C153897) *
               C153711 * C154021 -
           (((C4434 + C4433 + C4432) * C153648 +
             (C52924 + C52923 + C52922) * C74316) *
                C153897 +
            ((C3281 + C3282 + C3283) * C153648 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C74316) *
                C98524) *
               C153711 * C153747) *
              C154090 +
          ((((C3283 + C3282 + C3281) * C74316 +
             (C3280 + C3279 + C3278) * C153648) *
                C98524 +
            ((C4432 + C4433 + C4434) * C74316 +
             (C4435 + C4436 + C4437) * C153648) *
                C153897) *
               C153711 * C153747 -
           ((C4080 * C153648 + C102728 * C74316) * C153897 +
            ((C2961 + C2960 + C2959) * C153648 +
             (C2958 + C2957 + C2956) * C74316) *
                C98524) *
               C153711 * C154021) *
              C154091 +
          (((C2970 * C74316 + (C2964 + C2963 + C2962) * C153648) * C98524 +
            ((C3598 + C3597 + C3596) * C74316 +
             (C4087 + C4088 + C4089) * C153648) *
                C153897) *
               C153711 * C154021 -
           (((C2881 * C4389 - C2882 * C4382 - C2881 * C4390 + C154071 * C4394 +
              C2879 * C1951 - C2880 * C1945 - C2879 * C1952 + C154097 * C1960 +
              C2877 * C1117 - C2878 * C1108 - C2877 * C1118 + C154109 * C1126) *
                 C153648 +
             (C4437 + C4436 + C4435) * C74316) *
                C153897 +
            ((C3848 + C3847 + C3846) * C153648 + C3839 * C74316) * C98524) *
               C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154115 +
             C205 * C154108 + C206 * C154089 + C207 * C154036) *
                C98524 +
            (C98915 + C98916 + C98917 + C98918) * C153897) *
               C153711 * C154021 -
           ((C1156 * C154036 + C1155 * C154089 + C1154 * C154108 +
             C8612 * C154115) *
                C153897 +
            (C435 * C154036 + C436 * C154089 + C437 * C154108 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154115) *
                C98524) *
               C153711 * C153747) *
              C154090 +
          (((C437 * C154115 + C436 * C154108 + C435 * C154089 +
             C434 * C154036) *
                C98524 +
            (C1154 * C154115 + C1155 * C154108 + C1156 * C154089 +
             C1157 * C154036) *
                C153897) *
               C153711 * C153747 -
           ((C98926 + C98925 + C98924 + C98923) * C153897 +
            (C208 * C154036 + C207 * C154089 + C206 * C154108 +
             C205 * C154115) *
                C98524) *
               C153711 * C154021) *
              C154091 +
          (((C206 * C154115 + C207 * C154108 + C208 * C154089 +
             C209 * C154036) *
                C98524 +
            (C665 * C154115 + C664 * C154108 + C663 * C154089 +
             C943 * C154036) *
                C153897) *
               C153711 * C154021 -
           (((C134 * C1121 - C135 * C1110 - C134 * C1122 + C153792 * C1128) *
                 C154036 +
             C1157 * C154089 + C1156 * C154108 + C1155 * C154115) *
                C153897 +
            (C808 * C154036 + C434 * C154089 + C435 * C154108 +
             C436 * C154115) *
                C98524) *
               C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C74316 +
             C205 * C153648) *
                C154117 +
            (C107704 + C107705) * C154114 + C107720 * C154105 +
            C107721 * C154051) *
               C153711 * C154021 -
           ((C8614 * C153648 + C9222 * C74316) * C154051 +
            (C7518 * C153648 + C8613 * C74316) * C154105 +
            (C1154 * C153648 + C8612 * C74316) * C154114 +
            (C437 * C153648 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C74316) *
                C154117) *
               C153711 * C153747) *
              C154090 +
          (((C437 * C74316 + C436 * C153648) * C154117 +
            (C1154 * C74316 + C1155 * C153648) * C154114 +
            (C7518 * C74316 + C7517 * C153648) * C154105 +
            (C8614 * C74316 + C8615 * C153648) * C154051) *
               C153711 * C153747 -
           (C107722 * C154051 + C107723 * C154105 +
            (C107713 + C107712) * C154114 +
            (C206 * C153648 + C205 * C74316) * C154117) *
               C153711 * C154021) *
              C154091 +
          (((C206 * C74316 + C207 * C153648) * C154117 +
            (C665 * C74316 + C664 * C153648) * C154114 +
            (C668 * C74316 + C669 * C153648) * C154105 +
            (C7819 * C74316 + C7824 * C153648) * C154051) *
               C153711 * C154021 -
           (((C134 * C8574 - C135 * C8573 - C134 * C8575 + C153792 * C8576) *
                 C153648 +
             C8615 * C74316) *
                C154051 +
            (C8059 * C153648 + C7517 * C74316) * C154105 +
            (C1156 * C153648 + C1155 * C74316) * C154114 +
            (C435 * C153648 + C436 * C74316) * C154117) *
               C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q));
    d2ee[256] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
               C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
               C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                  C74316 +
              (C2956 + C2957 + C2958) * C153648) *
                 C98524 +
             ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
                 C153897) *
                C154022 -
            ((C52113 * C153648 + (C52132 + C52131 + C52130) * C74316) *
                 C153897 +
             (C102728 * C153648 + (C52129 + C52128 + C52127) * C74316) *
                 C98524) *
                C153775) *
               C154021 +
           ((((C52922 + C52923 + C52924) * C74316 + C103700 * C153648) *
                 C98524 +
             ((C52925 + C52926 + C52927) * C74316 +
              (C52928 + C52929 + C52930) * C153648) *
                 C153897) *
                C153775 -
            ((C103701 * C153648 + (C52924 + C52923 + C52922) * C74316) *
                 C153897 +
             ((C3281 + C3282 + C3283) * C153648 +
              (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
               C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
               C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                  C74316) *
                 C98524) *
                C154022) *
               C153747) *
              C335 +
          ((((C102727 * C74316 + C103311 * C153648) * C98524 +
             (C102729 * C74316 + (C3605 + C3606 + C3607) * C153648) * C153897) *
                C153775 -
            ((C4080 * C153648 + C102728 * C74316) * C153897 +
             ((C2961 + C2960 + C2959) * C153648 +
              (C2958 + C2957 + C2956) * C74316) *
                 C98524) *
                C154022) *
               C154021 +
           ((((C3283 + C3282 + C3281) * C74316 +
              (C3280 + C3279 + C3278) * C153648) *
                 C98524 +
             (C103700 * C74316 + (C4435 + C4436 + C4437) * C153648) * C153897) *
                C154022 -
            (((C2881 * C5034 - C2882 * C5031 - C2881 * C5035 + C154071 * C5040 +
               C2879 * C3515 - C2880 * C3509 - C2879 * C3516 + C154097 * C3521 +
               C2877 * C1522 - C2878 * C1515 - C2877 * C1523 +
               C154109 * C1530) *
                  C153648 +
              (C52930 + C52929 + C52928) * C74316) *
                 C153897 +
             ((C4437 + C4436 + C4435) * C153648 + C103701 * C74316) * C98524) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                  C154115 +
              C205 * C154108 + C206 * C154089 + C207 * C154036) *
                 C98524 +
             (C98915 + C98916 + C98917 + C98918) * C153897) *
                C154022 -
            ((C98919 + C98920 + C98921 + C98922) * C153897 +
             (C98918 + C98917 + C98916 + C98915) * C98524) *
                C153775) *
               C154021 +
           (((C99581 + C99582 + C99583 + C99584) * C98524 +
             (C8613 * C154115 + C7518 * C154108 + C7517 * C154089 +
              C8059 * C154036) *
                 C153897) *
                C153775 -
            ((C99584 + C99583 + C99582 + C99581) * C153897 +
             (C435 * C154036 + C436 * C154089 + C437 * C154108 +
              (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                  C154115) *
                 C98524) *
                C154022) *
               C153747) *
              C335 +
          ((((C98923 + C98924 + C98925 + C98926) * C98524 +
             (C98927 + C98928 + C98929 + C98930) * C153897) *
                C153775 -
            ((C98926 + C98925 + C98924 + C98923) * C153897 +
             (C208 * C154036 + C207 * C154089 + C206 * C154108 +
              C205 * C154115) *
                 C98524) *
                C154022) *
               C154021 +
           (((C437 * C154115 + C436 * C154108 + C435 * C154089 +
              C434 * C154036) *
                 C98524 +
             (C99585 + C99586 + C99587 + C99588) * C153897) *
                C154022 -
            (((C134 * C1518 - C135 * C1513 - C134 * C1519 + C153792 * C1528) *
                  C154036 +
              C8059 * C154089 + C7517 * C154108 + C7518 * C154115) *
                 C153897 +
             (C99588 + C99587 + C99586 + C99585) * C98524) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                  C74316 +
              C205 * C153648) *
                 C154117 +
             (C107704 + C107705) * C154114 + C107720 * C154105 +
             C107721 * C154051) *
                C154022 -
            ((C107710 + C107711) * C154051 + (C107709 + C107708) * C154105 +
             (C107707 + C107706) * C154114 + (C107705 + C107704) * C154117) *
                C153775) *
               C154021 +
           (((C108376 + C108377) * C154117 + (C108378 + C108379) * C154114 +
             (C108380 + C108381) * C154105 +
             (C56432 * C74316 + C56433 * C153648) * C154051) *
                C153775 -
            ((C108381 + C108380) * C154051 + (C108379 + C108378) * C154105 +
             (C108377 + C108376) * C154114 +
             (C437 * C153648 +
              (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                  C74316) *
                 C154117) *
                C154022) *
               C153747) *
              C335 +
          ((((C107712 + C107713) * C154117 + (C107714 + C107715) * C154114 +
             (C107716 + C107717) * C154105 + (C107718 + C107719) * C154051) *
                C153775 -
            (C107722 * C154051 + C107723 * C154105 +
             (C107713 + C107712) * C154114 +
             (C206 * C153648 + C205 * C74316) * C154117) *
                C154022) *
               C154021 +
           (((C437 * C74316 + C436 * C153648) * C154117 +
             (C108382 + C108383) * C154114 + (C108384 + C108385) * C154105 +
             (C108386 + C108387) * C154051) *
                C154022 -
            (((C134 * C9202 - C135 * C9199 - C134 * C9203 + C153792 * C9208) *
                  C153648 +
              C56433 * C74316) *
                 C154051 +
             (C108387 + C108386) * C154105 + (C108385 + C108384) * C154114 +
             (C108383 + C108382) * C154117) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[257] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                    C154115 +
                C205 * C154108 + C206 * C154089 + C207 * C154036) *
                   C98524 +
               (C7817 * C154115 + C666 * C154108 + C665 * C154089 +
                C664 * C154036) *
                   C153897) *
                  C153711 * C153695 * C130 -
              ((C663 * C154036 + C664 * C154089 + C665 * C154108 +
                C666 * C154115) *
                   C153897 +
               (C208 * C154036 + C207 * C154089 + C206 * C154108 +
                C205 * C154115) *
                   C98524) *
                  C153711 * C153695 * C131 +
              ((C206 * C154115 + C207 * C154108 + C208 * C154089 +
                C209 * C154036) *
                   C98524 +
               (C665 * C154115 + C664 * C154108 + C663 * C154089 +
                C943 * C154036) *
                   C153897) *
                  C153711 * C153695 * C132 -
              (((C134 * C933 - C135 * C932 - C134 * C934 + C153792 * C935) *
                    C154036 +
                C943 * C154089 + C663 * C154108 + C664 * C154115) *
                   C153897 +
               (C210 * C154036 + C209 * C154089 + C208 * C154108 +
                C207 * C154115) *
                   C98524) *
                  C153711 * C153695 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                     C154115 +
                 C205 * C154108 + C206 * C154089 + C207 * C154036) *
                    C98524 +
                (C7817 * C154115 + C666 * C154108 + C665 * C154089 +
                 C664 * C154036) *
                    C153897) *
                   C153711 * C332 -
               ((C1156 * C154036 + C1155 * C154089 + C1154 * C154108 +
                 C8612 * C154115) *
                    C153897 +
                (C435 * C154036 + C436 * C154089 + C437 * C154108 +
                 (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                     C154115) *
                    C98524) *
                   C153711 * C333 +
               (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                     C154115 +
                 C438 * C154108 + C439 * C154089 + C440 * C154036) *
                    C98524 +
                (C9966 * C154115 + C7519 * C154108 + C7520 * C154089 +
                 C15452 * C154036) *
                    C153897) *
                   C153711 * C334) *
                  C335 +
              (((C437 * C154115 + C436 * C154108 + C435 * C154089 +
                 C434 * C154036) *
                    C98524 +
                (C1154 * C154115 + C1155 * C154108 + C1156 * C154089 +
                 C1157 * C154036) *
                    C153897) *
                   C153711 * C333 -
               ((C663 * C154036 + C664 * C154089 + C665 * C154108 +
                 C666 * C154115) *
                    C153897 +
                (C208 * C154036 + C207 * C154089 + C206 * C154108 +
                 C205 * C154115) *
                    C98524) *
                   C153711 * C332 -
               (((C134 * C1949 - C135 * C1944 - C134 * C1950 +
                  C153792 * C1959) *
                     C154036 +
                 C15452 * C154089 + C7520 * C154108 + C7519 * C154115) *
                    C153897 +
                (C441 * C154036 + C440 * C154089 + C439 * C154108 +
                 C438 * C154115) *
                    C98524) *
                   C153711 * C334) *
                  C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154115 +
             C205 * C154108 + C206 * C154089 + C207 * C154036) *
                C98524 +
            (C98915 + C98916 + C98917 + C98918) * C153897) *
               C563 -
           ((C98919 + C98920 + C98921 + C98922) * C153897 +
            (C98918 + C98917 + C98916 + C98915) * C98524) *
               C564 +
           ((C98922 + C98921 + C98920 + C98919) * C98524 +
            (C7821 * C154115 + C7820 * C154108 + C7819 * C154089 +
             C7824 * C154036) *
                C153897) *
               C565) *
              C153695 * C335 +
          (((C98923 + C98924 + C98925 + C98926) * C98524 +
            (C98927 + C98928 + C98929 + C98930) * C153897) *
               C564 -
           ((C98926 + C98925 + C98924 + C98923) * C153897 +
            (C208 * C154036 + C207 * C154089 + C206 * C154108 +
             C205 * C154115) *
                C98524) *
               C563 -
           (((C134 * C2301 - C135 * C2296 - C134 * C2302 + C153792 * C2311) *
                 C154036 +
             C7824 * C154089 + C7819 * C154108 + C7820 * C154115) *
                C153897 +
            (C98930 + C98929 + C98928 + C98927) * C98524) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C74316 +
            (C2956 + C2957 + C2958) * C153648) *
               C98524 +
           ((C52127 + C52128 + C52129) * C74316 +
            (C3601 + C3600 + C3599) * C153648) *
               C153897) *
              C153711 * C153695 * C130 -
          ((C4080 * C153648 + (C3599 + C3600 + C3601) * C74316) * C153897 +
           ((C2961 + C2960 + C2959) * C153648 +
            (C2958 + C2957 + C2956) * C74316) *
               C98524) *
              C153711 * C153695 * C131 +
          ((C2970 * C74316 + (C2964 + C2963 + C2962) * C153648) * C98524 +
           ((C3598 + C3597 + C3596) * C74316 +
            (C4087 + C4088 + C4089) * C153648) *
               C153897) *
              C153711 * C153695 * C132 -
          (((C2881 * C1949 - C2882 * C1944 - C2881 * C1950 + C154071 * C1959 +
             C2879 * C1119 - C2880 * C1109 - C2879 * C1120 + C154097 * C1127 +
             C2877 * C578 - C2878 * C566 - C2877 * C579 + C154109 * C602) *
                C153648 +
            (C4089 + C4088 + C4087) * C74316) *
               C153897 +
           ((C2967 + C2966 + C2965) * C153648 + C2971 * C74316) * C98524) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C74316 +
             (C2956 + C2957 + C2958) * C153648) *
                C98524 +
            ((C52127 + C52128 + C52129) * C74316 +
             (C3601 + C3600 + C3599) * C153648) *
                C153897) *
               C153711 * C332 -
           (((C4434 + C4433 + C4432) * C153648 +
             (C52924 + C52923 + C52922) * C74316) *
                C153897 +
            ((C3281 + C3282 + C3283) * C153648 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C74316) *
                C98524) *
               C153711 * C333 +
           (((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
              C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
              C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                 C74316 +
             (C3284 + C3285 + C3286) * C153648) *
                C98524 +
            ((C54299 + C54300 + C54301) * C74316 +
             (C102431 + C102432 + C102433) * C153648) *
                C153897) *
               C153711 * C334) *
              C335 +
          ((((C3283 + C3282 + C3281) * C74316 +
             (C3280 + C3279 + C3278) * C153648) *
                C98524 +
            ((C4432 + C4433 + C4434) * C74316 +
             (C4435 + C4436 + C4437) * C153648) *
                C153897) *
               C153711 * C333 -
           ((C4080 * C153648 + (C3599 + C3600 + C3601) * C74316) * C153897 +
            ((C2961 + C2960 + C2959) * C153648 +
             (C2958 + C2957 + C2956) * C74316) *
                C98524) *
               C153711 * C332 -
           (((C2881 * C5772 - C2882 * C5769 - C2881 * C5773 + C154071 * C5778 +
              C2879 * C4387 - C2880 * C4381 - C2879 * C4388 + C154097 * C4393 +
              C2877 * C1953 - C2878 * C1946 - C2877 * C1954 + C154109 * C1961) *
                 C153648 +
             (C102433 + C102432 + C102431) * C74316) *
                C153897 +
            ((C3289 + C3288 + C3287) * C153648 +
             (C3286 + C3285 + C3284) * C74316) *
                C98524) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C74316 +
             (C2956 + C2957 + C2958) * C153648) *
                C98524 +
            ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
                C153897) *
               C563 -
           ((C52113 * C153648 + (C52132 + C52131 + C52130) * C74316) * C153897 +
            (C102728 * C153648 + (C52129 + C52128 + C52127) * C74316) *
                C98524) *
               C564 +
           ((C52140 * C74316 + C102729 * C153648) * C98524 +
            ((C52135 + C52134 + C52133) * C74316 +
             (C52136 + C52137 + C52138) * C153648) *
                C153897) *
               C565) *
              C153695 * C335 +
          (((C102727 * C74316 + (C3598 + C3597 + C3596) * C153648) * C98524 +
            (C102729 * C74316 + (C3605 + C3606 + C3607) * C153648) * C153897) *
               C564 -
           ((C4080 * C153648 + C102728 * C74316) * C153897 +
            ((C2961 + C2960 + C2959) * C153648 +
             (C2958 + C2957 + C2956) * C74316) *
                C98524) *
               C563 -
           (((C2881 * C6369 - C2882 * C6363 - C2881 * C6370 + C154071 * C6381 +
              C2879 * C6371 - C2880 * C6364 - C2879 * C6372 + C154097 * C6382 +
              C2877 * C2305 - C2878 * C2298 - C2877 * C2306 + C154109 * C2313) *
                 C153648 +
             (C52138 + C52137 + C52136) * C74316) *
                C153897 +
            ((C3607 + C3606 + C3605) * C153648 + C52113 * C74316) * C98524) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C74316 +
            C205 * C153648) *
               C154117 +
           (C7817 * C74316 + C666 * C153648) * C154114 +
           (C7818 * C74316 + C667 * C153648) * C154105 +
           (C7821 * C74316 + C7820 * C153648) * C154051) *
              C153711 * C153695 * C130 -
          ((C7819 * C153648 + C7820 * C74316) * C154051 +
           (C668 * C153648 + C667 * C74316) * C154105 +
           (C665 * C153648 + C666 * C74316) * C154114 +
           (C206 * C153648 + C205 * C74316) * C154117) *
              C153711 * C153695 * C131 +
          ((C206 * C74316 + C207 * C153648) * C154117 +
           (C665 * C74316 + C664 * C153648) * C154114 +
           (C668 * C74316 + C669 * C153648) * C154105 +
           (C7819 * C74316 + C7824 * C153648) * C154051) *
              C153711 * C153695 * C132 -
          (((C134 * C2301 - C135 * C2296 - C134 * C2302 + C153792 * C2311) *
                C153648 +
            C7824 * C74316) *
               C154051 +
           (C670 * C153648 + C669 * C74316) * C154105 +
           (C663 * C153648 + C664 * C74316) * C154114 +
           (C208 * C153648 + C207 * C74316) * C154117) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C74316 +
             C205 * C153648) *
                C154117 +
            (C7817 * C74316 + C666 * C153648) * C154114 +
            (C7818 * C74316 + C667 * C153648) * C154105 +
            (C7821 * C74316 + C7820 * C153648) * C154051) *
               C153711 * C332 -
           ((C8614 * C153648 + C9222 * C74316) * C154051 +
            (C7518 * C153648 + C8613 * C74316) * C154105 +
            (C1154 * C153648 + C8612 * C74316) * C154114 +
            (C437 * C153648 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C74316) *
                C154117) *
               C153711 * C333 +
           (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C74316 +
             C438 * C153648) *
                C154117 +
            (C9966 * C74316 + C7519 * C153648) * C154114 +
            (C9967 * C74316 + C7521 * C153648) * C154105 +
            (C57194 * C74316 + C63599 * C153648) * C154051) *
               C153711 * C334) *
              C335 +
          (((C437 * C74316 + C436 * C153648) * C154117 +
            (C1154 * C74316 + C1155 * C153648) * C154114 +
            (C7518 * C74316 + C7517 * C153648) * C154105 +
            (C8614 * C74316 + C8615 * C153648) * C154051) *
               C153711 * C333 -
           ((C7819 * C153648 + C7820 * C74316) * C154051 +
            (C668 * C153648 + C667 * C74316) * C154105 +
            (C665 * C153648 + C666 * C74316) * C154114 +
            (C206 * C153648 + C205 * C74316) * C154117) *
               C153711 * C332 -
           (((C134 * C6369 - C135 * C6363 - C134 * C6370 + C153792 * C6381) *
                 C153648 +
             C63599 * C74316) *
                C154051 +
            (C7522 * C153648 + C7521 * C74316) * C154105 +
            (C7520 * C153648 + C7519 * C74316) * C154114 +
            (C439 * C153648 + C438 * C74316) * C154117) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C74316 +
             C205 * C153648) *
                C154117 +
            (C107704 + C107705) * C154114 + C107720 * C154105 +
            C107721 * C154051) *
               C563 -
           ((C107710 + C107711) * C154051 + (C107709 + C107708) * C154105 +
            (C107707 + C107706) * C154114 + (C107705 + C107704) * C154117) *
               C564 +
           (C107720 * C154117 + C107721 * C154114 +
            (C107711 + C107710) * C154105 +
            (C55996 * C74316 + C55997 * C153648) * C154051) *
               C565) *
              C153695 * C335 +
          (((C107712 + C107713) * C154117 + (C107714 + C107715) * C154114 +
            (C107716 + C107717) * C154105 + (C107718 + C107719) * C154051) *
               C564 -
           (C107722 * C154051 + C107723 * C154105 +
            (C107713 + C107712) * C154114 +
            (C206 * C153648 + C205 * C74316) * C154117) *
               C563 -
           (((C134 * C10554 - C135 * C10551 - C134 * C10555 +
              C153792 * C10560) *
                 C153648 +
             C55997 * C74316) *
                C154051 +
            (C107719 + C107718) * C154105 + C107722 * C154114 +
            C107723 * C154117) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[258] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C74316 +
             (C2956 + C2957 + C2958) * C153648) *
                C98524 +
            ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
                C153897) *
               C154022 -
           ((C52113 * C153648 + (C52132 + C52131 + C52130) * C74316) * C153897 +
            (C102728 * C153648 + (C52129 + C52128 + C52127) * C74316) *
                C98524) *
               C153775) *
              C153695 * C154090 +
          (((C102727 * C74316 + C103311 * C153648) * C98524 +
            (C102729 * C74316 + (C3605 + C3606 + C3607) * C153648) * C153897) *
               C153775 -
           ((C4080 * C153648 + C102728 * C74316) * C153897 +
            ((C2961 + C2960 + C2959) * C153648 +
             (C2958 + C2957 + C2956) * C74316) *
                C98524) *
               C154022) *
              C153695 * C154091 +
          (((C2970 * C74316 + (C2964 + C2963 + C2962) * C153648) * C98524 +
            (C103311 * C74316 + (C4087 + C4088 + C4089) * C153648) * C153897) *
               C154022 -
           (((C2881 * C3517 - C2882 * C3510 - C2881 * C3518 + C154071 * C3522 +
              C2879 * C1520 - C2880 * C1514 - C2879 * C1521 + C154097 * C1529 +
              C2877 * C594 - C2878 * C574 - C2877 * C595 + C154109 * C610) *
                 C153648 +
             (C3607 + C3606 + C3605) * C74316) *
                C153897 +
            ((C4089 + C4088 + C4087) * C153648 + C4080 * C74316) * C98524) *
               C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154115 +
             C205 * C154108 + C206 * C154089 + C207 * C154036) *
                C98524 +
            (C98915 + C98916 + C98917 + C98918) * C153897) *
               C154022 -
           ((C98919 + C98920 + C98921 + C98922) * C153897 +
            (C98918 + C98917 + C98916 + C98915) * C98524) *
               C153775) *
              C153695 * C154090 +
          (((C98923 + C98924 + C98925 + C98926) * C98524 +
            (C98927 + C98928 + C98929 + C98930) * C153897) *
               C153775 -
           ((C98926 + C98925 + C98924 + C98923) * C153897 +
            (C208 * C154036 + C207 * C154089 + C206 * C154108 +
             C205 * C154115) *
                C98524) *
               C154022) *
              C153695 * C154091 +
          (((C206 * C154115 + C207 * C154108 + C208 * C154089 +
             C209 * C154036) *
                C98524 +
            (C99319 + C99320 + C99321 + C99322) * C153897) *
               C154022 -
           (((C134 * C600 - C135 * C577 - C134 * C601 + C153792 * C613) *
                 C154036 +
             C670 * C154089 + C669 * C154108 + C668 * C154115) *
                C153897 +
            (C99322 + C99321 + C99320 + C99319) * C98524) *
               C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C74316 +
             C205 * C153648) *
                C154117 +
            (C107704 + C107705) * C154114 + C107720 * C154105 +
            C107721 * C154051) *
               C154022 -
           ((C107710 + C107711) * C154051 + (C107709 + C107708) * C154105 +
            (C107707 + C107706) * C154114 + (C107705 + C107704) * C154117) *
               C153775) *
              C153695 * C154090 +
          (((C107712 + C107713) * C154117 + (C107714 + C107715) * C154114 +
            (C107716 + C107717) * C154105 + (C107718 + C107719) * C154051) *
               C153775 -
           (C107722 * C154051 + C107723 * C154105 +
            (C107713 + C107712) * C154114 +
            (C206 * C153648 + C205 * C74316) * C154117) *
               C154022) *
              C153695 * C154091 +
          (((C206 * C74316 + C207 * C153648) * C154117 +
            (C108112 + C108113) * C154114 + (C108114 + C108115) * C154105 +
            (C108116 + C108117) * C154051) *
               C154022 -
           (((C134 * C7750 - C135 * C7743 - C134 * C7751 + C153792 * C7755) *
                 C153648 +
             C7823 * C74316) *
                C154051 +
            (C108117 + C108116) * C154105 + (C108115 + C108114) * C154114 +
            (C108113 + C108112) * C154117) *
               C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q));
    d2ee[259] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154115 +
             C205 * C154108 + C206 * C154089 + C207 * C154036) *
                C98524 +
            (C7817 * C154115 + C666 * C154108 + C665 * C154089 +
             C664 * C154036) *
                C153897) *
               C153711 * C332 -
           ((C1156 * C154036 + C1155 * C154089 + C1154 * C154108 +
             C8612 * C154115) *
                C153897 +
            (C435 * C154036 + C436 * C154089 + C437 * C154108 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154115) *
                C98524) *
               C153711 * C333 +
           (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C154115 +
             C438 * C154108 + C439 * C154089 + C440 * C154036) *
                C98524 +
            (C9966 * C154115 + C7519 * C154108 + C7520 * C154089 +
             C15452 * C154036) *
                C153897) *
               C153711 * C334) *
              C335 +
          (((C437 * C154115 + C436 * C154108 + C435 * C154089 +
             C434 * C154036) *
                C98524 +
            (C1154 * C154115 + C1155 * C154108 + C1156 * C154089 +
             C1157 * C154036) *
                C153897) *
               C153711 * C333 -
           ((C663 * C154036 + C664 * C154089 + C665 * C154108 +
             C666 * C154115) *
                C153897 +
            (C208 * C154036 + C207 * C154089 + C206 * C154108 +
             C205 * C154115) *
                C98524) *
               C153711 * C332 -
           (((C134 * C1949 - C135 * C1944 - C134 * C1950 + C153792 * C1959) *
                 C154036 +
             C15452 * C154089 + C7520 * C154108 + C7519 * C154115) *
                C153897 +
            (C441 * C154036 + C440 * C154089 + C439 * C154108 +
             C438 * C154115) *
                C98524) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C154115 +
            C205 * C154108 + C206 * C154089 + C207 * C154036) *
               C98524 +
           (C7817 * C154115 + C666 * C154108 + C665 * C154089 +
            C664 * C154036) *
               C153897) *
              C153711 * C153695 * C130 -
          ((C663 * C154036 + C664 * C154089 + C665 * C154108 + C666 * C154115) *
               C153897 +
           (C208 * C154036 + C207 * C154089 + C206 * C154108 + C205 * C154115) *
               C98524) *
              C153711 * C153695 * C131 +
          ((C206 * C154115 + C207 * C154108 + C208 * C154089 + C209 * C154036) *
               C98524 +
           (C665 * C154115 + C664 * C154108 + C663 * C154089 + C943 * C154036) *
               C153897) *
              C153711 * C153695 * C132 -
          (((C134 * C933 - C135 * C932 - C134 * C934 + C153792 * C935) *
                C154036 +
            C943 * C154089 + C663 * C154108 + C664 * C154115) *
               C153897 +
           (C210 * C154036 + C209 * C154089 + C208 * C154108 + C207 * C154115) *
               C98524) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C74316 +
            (C2956 + C2957 + C2958) * C153648) *
               C98524 +
           ((C52127 + C52128 + C52129) * C74316 +
            (C3601 + C3600 + C3599) * C153648) *
               C153897) *
              C153711 * C153695 * C130 -
          ((C4080 * C153648 + (C3599 + C3600 + C3601) * C74316) * C153897 +
           ((C2961 + C2960 + C2959) * C153648 +
            (C2958 + C2957 + C2956) * C74316) *
               C98524) *
              C153711 * C153695 * C131 +
          ((C2970 * C74316 + (C2964 + C2963 + C2962) * C153648) * C98524 +
           ((C3598 + C3597 + C3596) * C74316 +
            (C4087 + C4088 + C4089) * C153648) *
               C153897) *
              C153711 * C153695 * C132 -
          (((C2881 * C1949 - C2882 * C1944 - C2881 * C1950 + C154071 * C1959 +
             C2879 * C1119 - C2880 * C1109 - C2879 * C1120 + C154097 * C1127 +
             C2877 * C578 - C2878 * C566 - C2877 * C579 + C154109 * C602) *
                C153648 +
            (C4089 + C4088 + C4087) * C74316) *
               C153897 +
           ((C2967 + C2966 + C2965) * C153648 + C2971 * C74316) * C98524) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C74316 +
             (C2956 + C2957 + C2958) * C153648) *
                C98524 +
            ((C52127 + C52128 + C52129) * C74316 +
             (C3601 + C3600 + C3599) * C153648) *
                C153897) *
               C153711 * C332 -
           (((C4434 + C4433 + C4432) * C153648 +
             (C52924 + C52923 + C52922) * C74316) *
                C153897 +
            ((C3281 + C3282 + C3283) * C153648 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C74316) *
                C98524) *
               C153711 * C333 +
           (((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
              C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
              C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                 C74316 +
             (C3284 + C3285 + C3286) * C153648) *
                C98524 +
            ((C54299 + C54300 + C54301) * C74316 +
             (C102431 + C102432 + C102433) * C153648) *
                C153897) *
               C153711 * C334) *
              C335 +
          ((((C3283 + C3282 + C3281) * C74316 +
             (C3280 + C3279 + C3278) * C153648) *
                C98524 +
            ((C4432 + C4433 + C4434) * C74316 +
             (C4435 + C4436 + C4437) * C153648) *
                C153897) *
               C153711 * C333 -
           ((C4080 * C153648 + (C3599 + C3600 + C3601) * C74316) * C153897 +
            ((C2961 + C2960 + C2959) * C153648 +
             (C2958 + C2957 + C2956) * C74316) *
                C98524) *
               C153711 * C332 -
           (((C2881 * C5772 - C2882 * C5769 - C2881 * C5773 + C154071 * C5778 +
              C2879 * C4387 - C2880 * C4381 - C2879 * C4388 + C154097 * C4393 +
              C2877 * C1953 - C2878 * C1946 - C2877 * C1954 + C154109 * C1961) *
                 C153648 +
             (C102433 + C102432 + C102431) * C74316) *
                C153897 +
            ((C3289 + C3288 + C3287) * C153648 +
             (C3286 + C3285 + C3284) * C74316) *
                C98524) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C74316 +
            C205 * C153648) *
               C154117 +
           (C7817 * C74316 + C666 * C153648) * C154114 +
           (C7818 * C74316 + C667 * C153648) * C154105 +
           (C7821 * C74316 + C7820 * C153648) * C154051) *
              C153711 * C153695 * C130 -
          ((C7819 * C153648 + C7820 * C74316) * C154051 +
           (C668 * C153648 + C667 * C74316) * C154105 +
           (C665 * C153648 + C666 * C74316) * C154114 +
           (C206 * C153648 + C205 * C74316) * C154117) *
              C153711 * C153695 * C131 +
          ((C206 * C74316 + C207 * C153648) * C154117 +
           (C665 * C74316 + C664 * C153648) * C154114 +
           (C668 * C74316 + C669 * C153648) * C154105 +
           (C7819 * C74316 + C7824 * C153648) * C154051) *
              C153711 * C153695 * C132 -
          (((C134 * C2301 - C135 * C2296 - C134 * C2302 + C153792 * C2311) *
                C153648 +
            C7824 * C74316) *
               C154051 +
           (C670 * C153648 + C669 * C74316) * C154105 +
           (C663 * C153648 + C664 * C74316) * C154114 +
           (C208 * C153648 + C207 * C74316) * C154117) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C74316 +
             C205 * C153648) *
                C154117 +
            (C7817 * C74316 + C666 * C153648) * C154114 +
            (C7818 * C74316 + C667 * C153648) * C154105 +
            (C7821 * C74316 + C7820 * C153648) * C154051) *
               C153711 * C332 -
           ((C8614 * C153648 + C9222 * C74316) * C154051 +
            (C7518 * C153648 + C8613 * C74316) * C154105 +
            (C1154 * C153648 + C8612 * C74316) * C154114 +
            (C437 * C153648 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C74316) *
                C154117) *
               C153711 * C333 +
           (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C74316 +
             C438 * C153648) *
                C154117 +
            (C9966 * C74316 + C7519 * C153648) * C154114 +
            (C9967 * C74316 + C7521 * C153648) * C154105 +
            (C57194 * C74316 + C63599 * C153648) * C154051) *
               C153711 * C334) *
              C335 +
          (((C437 * C74316 + C436 * C153648) * C154117 +
            (C1154 * C74316 + C1155 * C153648) * C154114 +
            (C7518 * C74316 + C7517 * C153648) * C154105 +
            (C8614 * C74316 + C8615 * C153648) * C154051) *
               C153711 * C333 -
           ((C7819 * C153648 + C7820 * C74316) * C154051 +
            (C668 * C153648 + C667 * C74316) * C154105 +
            (C665 * C153648 + C666 * C74316) * C154114 +
            (C206 * C153648 + C205 * C74316) * C154117) *
               C153711 * C332 -
           (((C134 * C6369 - C135 * C6363 - C134 * C6370 + C153792 * C6381) *
                 C153648 +
             C63599 * C74316) *
                C154051 +
            (C7522 * C153648 + C7521 * C74316) * C154105 +
            (C7520 * C153648 + C7519 * C74316) * C154114 +
            (C439 * C153648 + C438 * C74316) * C154117) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[260] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C74316 +
             (C2956 + C2957 + C2958) * C153648) *
                C98524 +
            ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
                C153897) *
               C153711 * C154092 -
           ((C103701 * C153648 + (C52924 + C52923 + C52922) * C74316) *
                C153897 +
            ((C3281 + C3282 + C3283) * C153648 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C74316) *
                C98524) *
               C153711 * C154093 +
           (((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
              C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
              C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                 C74316 +
             (C3284 + C3285 + C3286) * C153648) *
                C98524 +
            ((C54299 + C54300 + C54301) * C74316 +
             (C102431 + C102432 + C102433) * C153648) *
                C153897) *
               C153711 * C1657) *
              C154013 +
          ((((C3283 + C3282 + C3281) * C74316 +
             (C3280 + C3279 + C3278) * C153648) *
                C98524 +
            (C103700 * C74316 + (C4435 + C4436 + C4437) * C153648) * C153897) *
               C153711 * C154093 -
           ((C4080 * C153648 + C102728 * C74316) * C153897 +
            ((C2961 + C2960 + C2959) * C153648 +
             (C2958 + C2957 + C2956) * C74316) *
                C98524) *
               C153711 * C154092 -
           (((C2881 * C5772 - C2882 * C5769 - C2881 * C5773 + C154071 * C5778 +
              C2879 * C4387 - C2880 * C4381 - C2879 * C4388 + C154097 * C4393 +
              C2877 * C1953 - C2878 * C1946 - C2877 * C1954 + C154109 * C1961) *
                 C153648 +
             (C102433 + C102432 + C102431) * C74316) *
                C153897 +
            ((C3289 + C3288 + C3287) * C153648 +
             (C3286 + C3285 + C3284) * C74316) *
                C98524) *
               C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154115 +
             C205 * C154108 + C206 * C154089 + C207 * C154036) *
                C98524 +
            (C98915 + C98916 + C98917 + C98918) * C153897) *
               C153711 * C154092 -
           ((C99584 + C99583 + C99582 + C99581) * C153897 +
            (C435 * C154036 + C436 * C154089 + C437 * C154108 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154115) *
                C98524) *
               C153711 * C154093 +
           (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C154115 +
             C438 * C154108 + C439 * C154089 + C440 * C154036) *
                C98524 +
            (C9966 * C154115 + C7519 * C154108 + C7520 * C154089 +
             C15452 * C154036) *
                C153897) *
               C153711 * C1657) *
              C154013 +
          (((C437 * C154115 + C436 * C154108 + C435 * C154089 +
             C434 * C154036) *
                C98524 +
            (C99585 + C99586 + C99587 + C99588) * C153897) *
               C153711 * C154093 -
           ((C98926 + C98925 + C98924 + C98923) * C153897 +
            (C208 * C154036 + C207 * C154089 + C206 * C154108 +
             C205 * C154115) *
                C98524) *
               C153711 * C154092 -
           (((C134 * C1949 - C135 * C1944 - C134 * C1950 + C153792 * C1959) *
                 C154036 +
             C15452 * C154089 + C7520 * C154108 + C7519 * C154115) *
                C153897 +
            (C441 * C154036 + C440 * C154089 + C439 * C154108 +
             C438 * C154115) *
                C98524) *
               C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C74316 +
             C205 * C153648) *
                C154117 +
            (C107704 + C107705) * C154114 + C107720 * C154105 +
            C107721 * C154051) *
               C153711 * C154092 -
           (C108908 * C154051 + C108909 * C154105 +
            (C108377 + C108376) * C154114 +
            (C437 * C153648 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C74316) *
                C154117) *
               C153711 * C154093 +
           (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C74316 +
             C438 * C153648) *
                C154117 +
            (C9966 * C74316 + C7519 * C153648) * C154114 +
            (C9967 * C74316 + C7521 * C153648) * C154105 +
            (C57194 * C74316 + C63599 * C153648) * C154051) *
               C153711 * C1657) *
              C154013 +
          (((C437 * C74316 + C436 * C153648) * C154117 +
            (C108382 + C108383) * C154114 + (C108384 + C108385) * C154105 +
            (C108386 + C108387) * C154051) *
               C153711 * C154093 -
           (C107722 * C154051 + C107723 * C154105 +
            (C107713 + C107712) * C154114 +
            (C206 * C153648 + C205 * C74316) * C154117) *
               C153711 * C154092 -
           (((C134 * C6369 - C135 * C6363 - C134 * C6370 + C153792 * C6381) *
                 C153648 +
             C63599 * C74316) *
                C154051 +
            (C7522 * C153648 + C7521 * C74316) * C154105 +
            (C7520 * C153648 + C7519 * C74316) * C154114 +
            (C439 * C153648 + C438 * C74316) * C154117) *
               C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[261] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C74316 +
             (C2956 + C2957 + C2958) * C153648) *
                C98524 +
            ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
                C153897) *
               C154022 -
           ((C52113 * C153648 + (C52132 + C52131 + C52130) * C74316) * C153897 +
            (C102728 * C153648 + (C52129 + C52128 + C52127) * C74316) *
                C98524) *
               C153775) *
              C154092 +
          ((((C52922 + C52923 + C52924) * C74316 + C103700 * C153648) * C98524 +
            ((C52925 + C52926 + C52927) * C74316 +
             (C52928 + C52929 + C52930) * C153648) *
                C153897) *
               C153775 -
           ((C103701 * C153648 + (C52924 + C52923 + C52922) * C74316) *
                C153897 +
            ((C3281 + C3282 + C3283) * C153648 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C74316) *
                C98524) *
               C154022) *
              C154093 +
          ((((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
              C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
              C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                 C74316 +
             (C3284 + C3285 + C3286) * C153648) *
                C98524 +
            ((C54299 + C54300 + C54301) * C74316 +
             (C102431 + C102432 + C102433) * C153648) *
                C153897) *
               C154022 -
           (((C2881 * C28694 - C2882 * C28691 - C2881 * C28695 +
              C154071 * C28697 + C2879 * C5036 - C2880 * C5032 - C2879 * C5037 +
              C154097 * C5041 + C2877 * C3513 - C2878 * C3508 - C2877 * C3514 +
              C154109 * C3520) *
                 C153648 +
             (C54304 + C54303 + C54302) * C74316) *
                C153897 +
            ((C102433 + C102432 + C102431) * C153648 +
             (C54301 + C54300 + C54299) * C74316) *
                C98524) *
               C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154115 +
             C205 * C154108 + C206 * C154089 + C207 * C154036) *
                C98524 +
            (C98915 + C98916 + C98917 + C98918) * C153897) *
               C154022 -
           ((C98919 + C98920 + C98921 + C98922) * C153897 +
            (C98918 + C98917 + C98916 + C98915) * C98524) *
               C153775) *
              C154092 +
          (((C99581 + C99582 + C99583 + C99584) * C98524 +
            (C100107 + C100108 + C100109 + C100110) * C153897) *
               C153775 -
           ((C99584 + C99583 + C99582 + C99581) * C153897 +
            (C435 * C154036 + C436 * C154089 + C437 * C154108 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154115) *
                C98524) *
               C154022) *
              C154093 +
          ((((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C154115 +
             C438 * C154108 + C439 * C154089 + C440 * C154036) *
                C98524 +
            (C100757 + C100758 + C100759 + C100760) * C153897) *
               C154022 -
           (((C134 * C3517 - C135 * C3510 - C134 * C3518 + C153792 * C3522) *
                 C154036 +
             C7522 * C154089 + C7521 * C154108 + C9967 * C154115) *
                C153897 +
            (C100760 + C100759 + C100758 + C100757) * C98524) *
               C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C74316 +
             C205 * C153648) *
                C154117 +
            (C107704 + C107705) * C154114 + C107720 * C154105 +
            C107721 * C154051) *
               C154022 -
           ((C107710 + C107711) * C154051 + (C107709 + C107708) * C154105 +
            (C107707 + C107706) * C154114 + (C107705 + C107704) * C154117) *
               C153775) *
              C154092 +
          (((C108376 + C108377) * C154117 + (C108378 + C108379) * C154114 +
            (C108380 + C108381) * C154105 + (C108906 + C108907) * C154051) *
               C153775 -
           (C108908 * C154051 + C108909 * C154105 +
            (C108377 + C108376) * C154114 +
            (C437 * C153648 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C74316) *
                C154117) *
               C154022) *
              C154093 +
          ((((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C74316 +
             C438 * C153648) *
                C154117 +
            (C109556 + C109557) * C154114 + (C109558 + C109559) * C154105 +
            (C109560 + C109561) * C154051) *
               C154022 -
           (((C134 * C31182 - C135 * C31179 - C134 * C31183 +
              C153792 * C31185) *
                 C153648 +
             C57195 * C74316) *
                C154051 +
            (C109561 + C109560) * C154105 + (C109559 + C109558) * C154114 +
            (C109557 + C109556) * C154117) *
               C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[262] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                     C154115 +
                 C205 * C154108 + C206 * C154089 + C207 * C154036) *
                    C98524 +
                (C98915 + C98916 + C98917 + C98918) * C153897) *
                   C153711 * C1279 -
               ((C99584 + C99583 + C99582 + C99581) * C153897 +
                (C435 * C154036 + C436 * C154089 + C437 * C154108 +
                 (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                     C154115) *
                    C98524) *
                   C153711 * C153747) *
                  C1281 +
              (((C437 * C154115 + C436 * C154108 + C435 * C154089 +
                 C434 * C154036) *
                    C98524 +
                (C99585 + C99586 + C99587 + C99588) * C153897) *
                   C153711 * C153747 -
               ((C98926 + C98925 + C98924 + C98923) * C153897 +
                (C208 * C154036 + C207 * C154089 + C206 * C154108 +
                 C205 * C154115) *
                    C98524) *
                   C153711 * C1279) *
                  C1282 +
              (((C206 * C154115 + C207 * C154108 + C208 * C154089 +
                 C209 * C154036) *
                    C98524 +
                (C99319 + C99320 + C99321 + C99322) * C153897) *
                   C153711 * C1279 -
               (((C134 * C1121 - C135 * C1110 - C134 * C1122 +
                  C153792 * C1128) *
                     C154036 +
                 C1157 * C154089 + C1156 * C154108 + C1155 * C154115) *
                    C153897 +
                (C808 * C154036 + C434 * C154089 + C435 * C154108 +
                 C436 * C154115) *
                    C98524) *
                   C153711 * C153747) *
                  C1283) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                    C154115 +
                C205 * C154108 + C206 * C154089 + C207 * C154036) *
                   C98524 +
               (C98915 + C98916 + C98917 + C98918) * C153897) *
                  C153711 * C1366 -
              ((C99584 + C99583 + C99582 + C99581) * C153897 +
               (C435 * C154036 + C436 * C154089 + C437 * C154108 +
                (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                    C154115) *
                   C98524) *
                  C153711 * C1367 +
              (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                    C154115 +
                C438 * C154108 + C439 * C154089 + C440 * C154036) *
                   C98524 +
               (C9966 * C154115 + C7519 * C154108 + C7520 * C154089 +
                C15452 * C154036) *
                   C153897) *
                  C153711 * C1368 -
              (((C134 * C4389 - C135 * C4382 - C134 * C4390 + C153792 * C4394) *
                    C154036 +
                (C134 * C4387 - C135 * C4381 - C134 * C4388 + C153792 * C4393) *
                    C154089 +
                (C134 * C4385 - C135 * C4380 - C134 * C4386 + C153792 * C4392) *
                    C154108 +
                (C134 * C4383 - C135 * C4379 - C134 * C4384 + C153792 * C4391) *
                    C154115) *
                   C153897 +
               ((C134 * C1378 - C135 * C1372 - C134 * C1379 + C153792 * C1387) *
                    C154036 +
                (C134 * C1380 - C135 * C1373 - C134 * C1381 + C153792 * C1388) *
                    C154089 +
                (C134 * C1382 - C135 * C1374 - C134 * C1383 + C153792 * C1389) *
                    C154108 +
                (C134 * C1384 - C135 * C1375 - C134 * C1385 + C153792 * C1390) *
                    C154115) *
                   C98524) *
                  C153711 * C1369) *
             C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154115 +
             C205 * C154108 + C206 * C154089 + C207 * C154036) *
                C98524 +
            (C98915 + C98916 + C98917 + C98918) * C153897) *
               C563 -
           ((C98919 + C98920 + C98921 + C98922) * C153897 +
            (C98918 + C98917 + C98916 + C98915) * C98524) *
               C564 +
           ((C98922 + C98921 + C98920 + C98919) * C98524 +
            (C7821 * C154115 + C7820 * C154108 + C7819 * C154089 +
             C7824 * C154036) *
                C153897) *
               C565) *
              C1279 +
          (((C99581 + C99582 + C99583 + C99584) * C98524 +
            (C100107 + C100108 + C100109 + C100110) * C153897) *
               C564 -
           ((C99584 + C99583 + C99582 + C99581) * C153897 +
            (C435 * C154036 + C436 * C154089 + C437 * C154108 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154115) *
                C98524) *
               C563 -
           (((C134 * C8574 - C135 * C8573 - C134 * C8575 + C153792 * C8576) *
                 C154036 +
             C8615 * C154089 + C8614 * C154108 + C9222 * C154115) *
                C153897 +
            (C100110 + C100109 + C100108 + C100107) * C98524) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C74316 +
             (C2956 + C2957 + C2958) * C153648) *
                C98524 +
            ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
                C153897) *
               C153711 * C1279 -
           ((C103701 * C153648 + (C52924 + C52923 + C52922) * C74316) *
                C153897 +
            ((C3281 + C3282 + C3283) * C153648 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C74316) *
                C98524) *
               C153711 * C153747) *
              C1281 +
          ((((C3283 + C3282 + C3281) * C74316 +
             (C3280 + C3279 + C3278) * C153648) *
                C98524 +
            (C103700 * C74316 + (C4435 + C4436 + C4437) * C153648) * C153897) *
               C153711 * C153747 -
           ((C4080 * C153648 + C102728 * C74316) * C153897 +
            ((C2961 + C2960 + C2959) * C153648 +
             (C2958 + C2957 + C2956) * C74316) *
                C98524) *
               C153711 * C1279) *
              C1282 +
          (((C2970 * C74316 + (C2964 + C2963 + C2962) * C153648) * C98524 +
            (C103311 * C74316 + (C4087 + C4088 + C4089) * C153648) * C153897) *
               C153711 * C1279 -
           (((C2881 * C4389 - C2882 * C4382 - C2881 * C4390 + C154071 * C4394 +
              C2879 * C1951 - C2880 * C1945 - C2879 * C1952 + C154097 * C1960 +
              C2877 * C1117 - C2878 * C1108 - C2877 * C1118 + C154109 * C1126) *
                 C153648 +
             (C4437 + C4436 + C4435) * C74316) *
                C153897 +
            ((C3848 + C3847 + C3846) * C153648 + C3839 * C74316) * C98524) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C74316 +
            (C2956 + C2957 + C2958) * C153648) *
               C98524 +
           ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
               C153897) *
              C153711 * C1366 -
          ((C103701 * C153648 + (C52924 + C52923 + C52922) * C74316) * C153897 +
           ((C3281 + C3282 + C3283) * C153648 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C74316) *
               C98524) *
              C153711 * C1367 +
          (((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
             C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
             C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                C74316 +
            (C3284 + C3285 + C3286) * C153648) *
               C98524 +
           ((C54299 + C54300 + C54301) * C74316 +
            (C102431 + C102432 + C102433) * C153648) *
               C153897) *
              C153711 * C1368 -
          (((C2881 * C29108 - C2882 * C29105 - C2881 * C29109 +
             C154071 * C29111 + C2879 * C5774 - C2880 * C5770 - C2879 * C5775 +
             C154097 * C5779 + C2877 * C4385 - C2878 * C4380 - C2877 * C4386 +
             C154109 * C4392) *
                C153648 +
            (C2881 * C29106 - C2882 * C29104 - C2881 * C29107 +
             C154071 * C29110 + C2879 * C5776 - C2880 * C5771 - C2879 * C5777 +
             C154097 * C5780 + C2877 * C4383 - C2878 * C4379 - C2877 * C4384 +
             C154109 * C4391) *
                C74316) *
               C153897 +
           ((C2881 * C4806 - C2882 * C4802 - C2881 * C4807 + C154071 * C4811 +
             C2879 * C3195 - C2880 * C3190 - C2879 * C3196 + C154097 * C3202 +
             C2877 * C1382 - C2878 * C1374 - C2877 * C1383 + C154109 * C1389) *
                C153648 +
            (C2881 * C4808 - C2882 * C4803 - C2881 * C4809 + C154071 * C4812 +
             C2879 * C3193 - C2880 * C3189 - C2879 * C3194 + C154097 * C3201 +
             C2877 * C1384 - C2878 * C1375 - C2877 * C1385 + C154109 * C1390) *
                C74316) *
               C98524) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C74316 +
             (C2956 + C2957 + C2958) * C153648) *
                C98524 +
            ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
                C153897) *
               C563 -
           ((C52113 * C153648 + (C52132 + C52131 + C52130) * C74316) * C153897 +
            (C102728 * C153648 + (C52129 + C52128 + C52127) * C74316) *
                C98524) *
               C564 +
           ((C52140 * C74316 + C102729 * C153648) * C98524 +
            ((C52135 + C52134 + C52133) * C74316 +
             (C52136 + C52137 + C52138) * C153648) *
                C153897) *
               C565) *
              C1279 +
          ((((C52922 + C52923 + C52924) * C74316 + C103700 * C153648) * C98524 +
            ((C52925 + C52926 + C52927) * C74316 +
             (C52928 + C52929 + C52930) * C153648) *
                C153897) *
               C564 -
           ((C103701 * C153648 + (C52924 + C52923 + C52922) * C74316) *
                C153897 +
            ((C3281 + C3282 + C3283) * C153648 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C74316) *
                C98524) *
               C563 -
           (((C2881 * C32003 - C2882 * C32002 - C2881 * C32004 +
              C154071 * C32005 + C2879 * C6373 - C2880 * C6365 - C2879 * C6374 +
              C154097 * C6383 + C2877 * C6375 - C2878 * C6366 - C2877 * C6376 +
              C154109 * C6384) *
                 C153648 +
             (C53536 + C53535 + C53534) * C74316) *
                C153897 +
            ((C52930 + C52929 + C52928) * C153648 + C53529 * C74316) * C98524) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C74316 +
             C205 * C153648) *
                C154117 +
            (C107704 + C107705) * C154114 + C107720 * C154105 +
            C107721 * C154051) *
               C153711 * C1279 -
           ((C108381 + C108380) * C154051 + (C108379 + C108378) * C154105 +
            (C108377 + C108376) * C154114 +
            (C437 * C153648 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C74316) *
                C154117) *
               C153711 * C153747) *
              C1281 +
          (((C437 * C74316 + C436 * C153648) * C154117 +
            (C108382 + C108383) * C154114 + (C108384 + C108385) * C154105 +
            (C108386 + C108387) * C154051) *
               C153711 * C153747 -
           (C107722 * C154051 + C107723 * C154105 +
            (C107713 + C107712) * C154114 +
            (C206 * C153648 + C205 * C74316) * C154117) *
               C153711 * C1279) *
              C1282 +
          (((C206 * C74316 + C207 * C153648) * C154117 +
            (C108112 + C108113) * C154114 + (C108114 + C108115) * C154105 +
            (C108116 + C108117) * C154051) *
               C153711 * C1279 -
           (((C134 * C8574 - C135 * C8573 - C134 * C8575 + C153792 * C8576) *
                 C153648 +
             C8615 * C74316) *
                C154051 +
            (C8059 * C153648 + C7517 * C74316) * C154105 +
            (C1156 * C153648 + C1155 * C74316) * C154114 +
            (C435 * C153648 + C436 * C74316) * C154117) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C74316 +
            C205 * C153648) *
               C154117 +
           (C107704 + C107705) * C154114 + C107720 * C154105 +
           C107721 * C154051) *
              C153711 * C1366 -
          ((C108381 + C108380) * C154051 + (C108379 + C108378) * C154105 +
           (C108377 + C108376) * C154114 +
           (C437 * C153648 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                C74316) *
               C154117) *
              C153711 * C1367 +
          (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                C74316 +
            C438 * C153648) *
               C154117 +
           (C9966 * C74316 + C7519 * C153648) * C154114 +
           (C9967 * C74316 + C7521 * C153648) * C154105 +
           (C57194 * C74316 + C63599 * C153648) * C154051) *
              C153711 * C1368 -
          (((C134 * C32003 - C135 * C32002 - C134 * C32004 + C153792 * C32005) *
                C153648 +
            (C134 * C30186 - C135 * C30183 - C134 * C30187 + C153792 * C30189) *
                C74316) *
               C154051 +
           ((C134 * C5036 - C135 * C5032 - C134 * C5037 + C153792 * C5041) *
                C153648 +
            (C134 * C5038 - C135 * C5033 - C134 * C5039 + C153792 * C5042) *
                C74316) *
               C154105 +
           ((C134 * C4385 - C135 * C4380 - C134 * C4386 + C153792 * C4392) *
                C153648 +
            (C134 * C4383 - C135 * C4379 - C134 * C4384 + C153792 * C4391) *
                C74316) *
               C154114 +
           ((C134 * C1382 - C135 * C1374 - C134 * C1383 + C153792 * C1389) *
                C153648 +
            (C134 * C1384 - C135 * C1375 - C134 * C1385 + C153792 * C1390) *
                C74316) *
               C154117) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C74316 +
             C205 * C153648) *
                C154117 +
            (C107704 + C107705) * C154114 + C107720 * C154105 +
            C107721 * C154051) *
               C563 -
           ((C107710 + C107711) * C154051 + (C107709 + C107708) * C154105 +
            (C107707 + C107706) * C154114 + (C107705 + C107704) * C154117) *
               C564 +
           (C107720 * C154117 + C107721 * C154114 +
            (C107711 + C107710) * C154105 +
            (C55996 * C74316 + C55997 * C153648) * C154051) *
               C565) *
              C1279 +
          (((C108376 + C108377) * C154117 + (C108378 + C108379) * C154114 +
            (C108380 + C108381) * C154105 + (C108906 + C108907) * C154051) *
               C564 -
           (C108908 * C154051 + C108909 * C154105 +
            (C108377 + C108376) * C154114 +
            (C437 * C153648 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C74316) *
                C154117) *
               C563 -
           (((C134 * C56410 - C135 * C56409 - C134 * C56411 +
              C153792 * C56412) *
                 C153648 +
             C56772 * C74316) *
                C154051 +
            (C108907 + C108906) * C154105 + C108908 * C154114 +
            C108909 * C154117) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[263] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
               C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
               C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                  C74316 +
              (C2956 + C2957 + C2958) * C153648) *
                 C98524 +
             ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
                 C153897) *
                C154022 -
            ((C52113 * C153648 + (C52132 + C52131 + C52130) * C74316) *
                 C153897 +
             (C102728 * C153648 + (C52129 + C52128 + C52127) * C74316) *
                 C98524) *
                C153775) *
               C1279 +
           ((((C52922 + C52923 + C52924) * C74316 + C103700 * C153648) *
                 C98524 +
             ((C52925 + C52926 + C52927) * C74316 +
              (C52928 + C52929 + C52930) * C153648) *
                 C153897) *
                C153775 -
            ((C103701 * C153648 + (C52924 + C52923 + C52922) * C74316) *
                 C153897 +
             ((C3281 + C3282 + C3283) * C153648 +
              (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
               C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
               C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                  C74316) *
                 C98524) *
                C154022) *
               C153747) *
              C154013 +
          ((((C102727 * C74316 + C103311 * C153648) * C98524 +
             (C102729 * C74316 + (C3605 + C3606 + C3607) * C153648) * C153897) *
                C153775 -
            ((C4080 * C153648 + C102728 * C74316) * C153897 +
             ((C2961 + C2960 + C2959) * C153648 +
              (C2958 + C2957 + C2956) * C74316) *
                 C98524) *
                C154022) *
               C1279 +
           ((((C3283 + C3282 + C3281) * C74316 +
              (C3280 + C3279 + C3278) * C153648) *
                 C98524 +
             (C103700 * C74316 + (C4435 + C4436 + C4437) * C153648) * C153897) *
                C154022 -
            (((C2881 * C5034 - C2882 * C5031 - C2881 * C5035 + C154071 * C5040 +
               C2879 * C3515 - C2880 * C3509 - C2879 * C3516 + C154097 * C3521 +
               C2877 * C1522 - C2878 * C1515 - C2877 * C1523 +
               C154109 * C1530) *
                  C153648 +
              (C52930 + C52929 + C52928) * C74316) *
                 C153897 +
             ((C4437 + C4436 + C4435) * C153648 + C103701 * C74316) * C98524) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                  C154115 +
              C205 * C154108 + C206 * C154089 + C207 * C154036) *
                 C98524 +
             (C98915 + C98916 + C98917 + C98918) * C153897) *
                C154022 -
            ((C98919 + C98920 + C98921 + C98922) * C153897 +
             (C98918 + C98917 + C98916 + C98915) * C98524) *
                C153775) *
               C1279 +
           (((C99581 + C99582 + C99583 + C99584) * C98524 +
             (C100107 + C100108 + C100109 + C100110) * C153897) *
                C153775 -
            ((C99584 + C99583 + C99582 + C99581) * C153897 +
             (C435 * C154036 + C436 * C154089 + C437 * C154108 +
              (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                  C154115) *
                 C98524) *
                C154022) *
               C153747) *
              C154013 +
          ((((C98923 + C98924 + C98925 + C98926) * C98524 +
             (C98927 + C98928 + C98929 + C98930) * C153897) *
                C153775 -
            ((C98926 + C98925 + C98924 + C98923) * C153897 +
             (C208 * C154036 + C207 * C154089 + C206 * C154108 +
              C205 * C154115) *
                 C98524) *
                C154022) *
               C1279 +
           (((C437 * C154115 + C436 * C154108 + C435 * C154089 +
              C434 * C154036) *
                 C98524 +
             (C99585 + C99586 + C99587 + C99588) * C153897) *
                C154022 -
            (((C134 * C1518 - C135 * C1513 - C134 * C1519 + C153792 * C1528) *
                  C154036 +
              C8059 * C154089 + C7517 * C154108 + C7518 * C154115) *
                 C153897 +
             (C99588 + C99587 + C99586 + C99585) * C98524) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                  C74316 +
              C205 * C153648) *
                 C154117 +
             (C107704 + C107705) * C154114 + C107720 * C154105 +
             C107721 * C154051) *
                C154022 -
            ((C107710 + C107711) * C154051 + (C107709 + C107708) * C154105 +
             (C107707 + C107706) * C154114 + (C107705 + C107704) * C154117) *
                C153775) *
               C1279 +
           (((C108376 + C108377) * C154117 + (C108378 + C108379) * C154114 +
             (C108380 + C108381) * C154105 + (C108906 + C108907) * C154051) *
                C153775 -
            (C108908 * C154051 + C108909 * C154105 +
             (C108377 + C108376) * C154114 +
             (C437 * C153648 +
              (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                  C74316) *
                 C154117) *
                C154022) *
               C153747) *
              C154013 +
          ((((C107712 + C107713) * C154117 + (C107714 + C107715) * C154114 +
             (C107716 + C107717) * C154105 + (C107718 + C107719) * C154051) *
                C153775 -
            (C107722 * C154051 + C107723 * C154105 +
             (C107713 + C107712) * C154114 +
             (C206 * C153648 + C205 * C74316) * C154117) *
                C154022) *
               C1279 +
           (((C437 * C74316 + C436 * C153648) * C154117 +
             (C108382 + C108383) * C154114 + (C108384 + C108385) * C154105 +
             (C108386 + C108387) * C154051) *
                C154022 -
            (((C134 * C9202 - C135 * C9199 - C134 * C9203 + C153792 * C9208) *
                  C153648 +
              C56433 * C74316) *
                 C154051 +
             (C108387 + C108386) * C154105 + (C108385 + C108384) * C154114 +
             (C108383 + C108382) * C154117) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[264] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C154115 +
            C205 * C154108 + C206 * C154089 + C207 * C154036) *
               C98524 +
           (C98915 + C98916 + C98917 + C98918) * C153897) *
              C153711 * C1366 -
          ((C99584 + C99583 + C99582 + C99581) * C153897 +
           (C435 * C154036 + C436 * C154089 + C437 * C154108 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                C154115) *
               C98524) *
              C153711 * C1367 +
          (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                C154115 +
            C438 * C154108 + C439 * C154089 + C440 * C154036) *
               C98524 +
           (C9966 * C154115 + C7519 * C154108 + C7520 * C154089 +
            C15452 * C154036) *
               C153897) *
              C153711 * C1368 -
          (((C134 * C4389 - C135 * C4382 - C134 * C4390 + C153792 * C4394) *
                C154036 +
            (C134 * C4387 - C135 * C4381 - C134 * C4388 + C153792 * C4393) *
                C154089 +
            (C134 * C4385 - C135 * C4380 - C134 * C4386 + C153792 * C4392) *
                C154108 +
            (C134 * C4383 - C135 * C4379 - C134 * C4384 + C153792 * C4391) *
                C154115) *
               C153897 +
           ((C134 * C1378 - C135 * C1372 - C134 * C1379 + C153792 * C1387) *
                C154036 +
            (C134 * C1380 - C135 * C1373 - C134 * C1381 + C153792 * C1388) *
                C154089 +
            (C134 * C1382 - C135 * C1374 - C134 * C1383 + C153792 * C1389) *
                C154108 +
            (C134 * C1384 - C135 * C1375 - C134 * C1385 + C153792 * C1390) *
                C154115) *
               C98524) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154115 +
             C205 * C154108 + C206 * C154089 + C207 * C154036) *
                C98524 +
            (C98915 + C98916 + C98917 + C98918) * C153897) *
               C153711 * C1279 -
           ((C99584 + C99583 + C99582 + C99581) * C153897 +
            (C435 * C154036 + C436 * C154089 + C437 * C154108 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154115) *
                C98524) *
               C153711 * C153747) *
              C1281 +
          (((C437 * C154115 + C436 * C154108 + C435 * C154089 +
             C434 * C154036) *
                C98524 +
            (C99585 + C99586 + C99587 + C99588) * C153897) *
               C153711 * C153747 -
           ((C98926 + C98925 + C98924 + C98923) * C153897 +
            (C208 * C154036 + C207 * C154089 + C206 * C154108 +
             C205 * C154115) *
                C98524) *
               C153711 * C1279) *
              C1282 +
          (((C206 * C154115 + C207 * C154108 + C208 * C154089 +
             C209 * C154036) *
                C98524 +
            (C99319 + C99320 + C99321 + C99322) * C153897) *
               C153711 * C1279 -
           (((C134 * C1121 - C135 * C1110 - C134 * C1122 + C153792 * C1128) *
                 C154036 +
             C1157 * C154089 + C1156 * C154108 + C1155 * C154115) *
                C153897 +
            (C808 * C154036 + C434 * C154089 + C435 * C154108 +
             C436 * C154115) *
                C98524) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C74316 +
             (C2956 + C2957 + C2958) * C153648) *
                C98524 +
            ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
                C153897) *
               C153711 * C1279 -
           ((C103701 * C153648 + (C52924 + C52923 + C52922) * C74316) *
                C153897 +
            ((C3281 + C3282 + C3283) * C153648 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C74316) *
                C98524) *
               C153711 * C153747) *
              C1281 +
          ((((C3283 + C3282 + C3281) * C74316 +
             (C3280 + C3279 + C3278) * C153648) *
                C98524 +
            (C103700 * C74316 + (C4435 + C4436 + C4437) * C153648) * C153897) *
               C153711 * C153747 -
           ((C4080 * C153648 + C102728 * C74316) * C153897 +
            ((C2961 + C2960 + C2959) * C153648 +
             (C2958 + C2957 + C2956) * C74316) *
                C98524) *
               C153711 * C1279) *
              C1282 +
          (((C2970 * C74316 + (C2964 + C2963 + C2962) * C153648) * C98524 +
            (C103311 * C74316 + (C4087 + C4088 + C4089) * C153648) * C153897) *
               C153711 * C1279 -
           (((C2881 * C4389 - C2882 * C4382 - C2881 * C4390 + C154071 * C4394 +
              C2879 * C1951 - C2880 * C1945 - C2879 * C1952 + C154097 * C1960 +
              C2877 * C1117 - C2878 * C1108 - C2877 * C1118 + C154109 * C1126) *
                 C153648 +
             (C4437 + C4436 + C4435) * C74316) *
                C153897 +
            ((C3848 + C3847 + C3846) * C153648 + C3839 * C74316) * C98524) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C74316 +
            (C2956 + C2957 + C2958) * C153648) *
               C98524 +
           ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
               C153897) *
              C153711 * C1366 -
          ((C103701 * C153648 + (C52924 + C52923 + C52922) * C74316) * C153897 +
           ((C3281 + C3282 + C3283) * C153648 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C74316) *
               C98524) *
              C153711 * C1367 +
          (((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
             C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
             C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                C74316 +
            (C3284 + C3285 + C3286) * C153648) *
               C98524 +
           ((C54299 + C54300 + C54301) * C74316 +
            (C102431 + C102432 + C102433) * C153648) *
               C153897) *
              C153711 * C1368 -
          (((C2881 * C29108 - C2882 * C29105 - C2881 * C29109 +
             C154071 * C29111 + C2879 * C5774 - C2880 * C5770 - C2879 * C5775 +
             C154097 * C5779 + C2877 * C4385 - C2878 * C4380 - C2877 * C4386 +
             C154109 * C4392) *
                C153648 +
            (C2881 * C29106 - C2882 * C29104 - C2881 * C29107 +
             C154071 * C29110 + C2879 * C5776 - C2880 * C5771 - C2879 * C5777 +
             C154097 * C5780 + C2877 * C4383 - C2878 * C4379 - C2877 * C4384 +
             C154109 * C4391) *
                C74316) *
               C153897 +
           ((C2881 * C4806 - C2882 * C4802 - C2881 * C4807 + C154071 * C4811 +
             C2879 * C3195 - C2880 * C3190 - C2879 * C3196 + C154097 * C3202 +
             C2877 * C1382 - C2878 * C1374 - C2877 * C1383 + C154109 * C1389) *
                C153648 +
            (C2881 * C4808 - C2882 * C4803 - C2881 * C4809 + C154071 * C4812 +
             C2879 * C3193 - C2880 * C3189 - C2879 * C3194 + C154097 * C3201 +
             C2877 * C1384 - C2878 * C1375 - C2877 * C1385 + C154109 * C1390) *
                C74316) *
               C98524) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C74316 +
             C205 * C153648) *
                C154117 +
            (C107704 + C107705) * C154114 + C107720 * C154105 +
            C107721 * C154051) *
               C153711 * C1279 -
           ((C108381 + C108380) * C154051 + (C108379 + C108378) * C154105 +
            (C108377 + C108376) * C154114 +
            (C437 * C153648 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C74316) *
                C154117) *
               C153711 * C153747) *
              C1281 +
          (((C437 * C74316 + C436 * C153648) * C154117 +
            (C108382 + C108383) * C154114 + (C108384 + C108385) * C154105 +
            (C108386 + C108387) * C154051) *
               C153711 * C153747 -
           (C107722 * C154051 + C107723 * C154105 +
            (C107713 + C107712) * C154114 +
            (C206 * C153648 + C205 * C74316) * C154117) *
               C153711 * C1279) *
              C1282 +
          (((C206 * C74316 + C207 * C153648) * C154117 +
            (C108112 + C108113) * C154114 + (C108114 + C108115) * C154105 +
            (C108116 + C108117) * C154051) *
               C153711 * C1279 -
           (((C134 * C8574 - C135 * C8573 - C134 * C8575 + C153792 * C8576) *
                 C153648 +
             C8615 * C74316) *
                C154051 +
            (C8059 * C153648 + C7517 * C74316) * C154105 +
            (C1156 * C153648 + C1155 * C74316) * C154114 +
            (C435 * C153648 + C436 * C74316) * C154117) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C74316 +
            C205 * C153648) *
               C154117 +
           (C107704 + C107705) * C154114 + C107720 * C154105 +
           C107721 * C154051) *
              C153711 * C1366 -
          ((C108381 + C108380) * C154051 + (C108379 + C108378) * C154105 +
           (C108377 + C108376) * C154114 +
           (C437 * C153648 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                C74316) *
               C154117) *
              C153711 * C1367 +
          (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                C74316 +
            C438 * C153648) *
               C154117 +
           (C9966 * C74316 + C7519 * C153648) * C154114 +
           (C9967 * C74316 + C7521 * C153648) * C154105 +
           (C57194 * C74316 + C63599 * C153648) * C154051) *
              C153711 * C1368 -
          (((C134 * C32003 - C135 * C32002 - C134 * C32004 + C153792 * C32005) *
                C153648 +
            (C134 * C30186 - C135 * C30183 - C134 * C30187 + C153792 * C30189) *
                C74316) *
               C154051 +
           ((C134 * C5036 - C135 * C5032 - C134 * C5037 + C153792 * C5041) *
                C153648 +
            (C134 * C5038 - C135 * C5033 - C134 * C5039 + C153792 * C5042) *
                C74316) *
               C154105 +
           ((C134 * C4385 - C135 * C4380 - C134 * C4386 + C153792 * C4392) *
                C153648 +
            (C134 * C4383 - C135 * C4379 - C134 * C4384 + C153792 * C4391) *
                C74316) *
               C154114 +
           ((C134 * C1382 - C135 * C1374 - C134 * C1383 + C153792 * C1389) *
                C153648 +
            (C134 * C1384 - C135 * C1375 - C134 * C1385 + C153792 * C1390) *
                C74316) *
               C154117) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[265] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
               C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
               C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                  C74316 +
              (C2956 + C2957 + C2958) * C153648) *
                 C98524 +
             ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
                 C153897) *
                C2086 -
            ((C52113 * C153648 + (C52132 + C52131 + C52130) * C74316) *
                 C153897 +
             (C102728 * C153648 + (C52129 + C52128 + C52127) * C74316) *
                 C98524) *
                C153775) *
               C154021 +
           ((((C52922 + C52923 + C52924) * C74316 + C103700 * C153648) *
                 C98524 +
             ((C52925 + C52926 + C52927) * C74316 +
              (C52928 + C52929 + C52930) * C153648) *
                 C153897) *
                C153775 -
            ((C103701 * C153648 + (C52924 + C52923 + C52922) * C74316) *
                 C153897 +
             ((C3281 + C3282 + C3283) * C153648 +
              (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
               C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
               C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                  C74316) *
                 C98524) *
                C2086) *
               C153747) *
              C154013 +
          ((((C102727 * C74316 + C103311 * C153648) * C98524 +
             (C102729 * C74316 + (C3605 + C3606 + C3607) * C153648) * C153897) *
                C153775 -
            ((C4080 * C153648 + C102728 * C74316) * C153897 +
             ((C2961 + C2960 + C2959) * C153648 +
              (C2958 + C2957 + C2956) * C74316) *
                 C98524) *
                C2086) *
               C154021 +
           ((((C3283 + C3282 + C3281) * C74316 +
              (C3280 + C3279 + C3278) * C153648) *
                 C98524 +
             (C103700 * C74316 + (C4435 + C4436 + C4437) * C153648) * C153897) *
                C2086 -
            (((C2881 * C5034 - C2882 * C5031 - C2881 * C5035 + C154071 * C5040 +
               C2879 * C3515 - C2880 * C3509 - C2879 * C3516 + C154097 * C3521 +
               C2877 * C1522 - C2878 * C1515 - C2877 * C1523 +
               C154109 * C1530) *
                  C153648 +
              (C52930 + C52929 + C52928) * C74316) *
                 C153897 +
             ((C4437 + C4436 + C4435) * C153648 + C103701 * C74316) * C98524) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                  C154115 +
              C205 * C154108 + C206 * C154089 + C207 * C154036) *
                 C98524 +
             (C98915 + C98916 + C98917 + C98918) * C153897) *
                C2086 -
            ((C98919 + C98920 + C98921 + C98922) * C153897 +
             (C98918 + C98917 + C98916 + C98915) * C98524) *
                C153775) *
               C154021 +
           (((C99581 + C99582 + C99583 + C99584) * C98524 +
             (C100107 + C100108 + C100109 + C100110) * C153897) *
                C153775 -
            ((C99584 + C99583 + C99582 + C99581) * C153897 +
             (C435 * C154036 + C436 * C154089 + C437 * C154108 +
              (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                  C154115) *
                 C98524) *
                C2086) *
               C153747) *
              C154013 +
          ((((C98923 + C98924 + C98925 + C98926) * C98524 +
             (C98927 + C98928 + C98929 + C98930) * C153897) *
                C153775 -
            ((C98926 + C98925 + C98924 + C98923) * C153897 +
             (C208 * C154036 + C207 * C154089 + C206 * C154108 +
              C205 * C154115) *
                 C98524) *
                C2086) *
               C154021 +
           (((C437 * C154115 + C436 * C154108 + C435 * C154089 +
              C434 * C154036) *
                 C98524 +
             (C99585 + C99586 + C99587 + C99588) * C153897) *
                C2086 -
            (((C134 * C1518 - C135 * C1513 - C134 * C1519 + C153792 * C1528) *
                  C154036 +
              C8059 * C154089 + C7517 * C154108 + C7518 * C154115) *
                 C153897 +
             (C99588 + C99587 + C99586 + C99585) * C98524) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                  C74316 +
              C205 * C153648) *
                 C154117 +
             (C107704 + C107705) * C154114 + C107720 * C154105 +
             C107721 * C154051) *
                C2086 -
            (C110080 * C154051 + C110081 * C154105 +
             (C107707 + C107706) * C154114 + (C107705 + C107704) * C154117) *
                C153775) *
               C154021 +
           (((C108376 + C108377) * C154117 + (C108378 + C108379) * C154114 +
             (C108380 + C108381) * C154105 + (C108906 + C108907) * C154051) *
                C153775 -
            (C108908 * C154051 + C108909 * C154105 +
             (C108377 + C108376) * C154114 +
             (C437 * C153648 +
              (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                  C74316) *
                 C154117) *
                C2086) *
               C153747) *
              C154013 +
          ((((C107712 + C107713) * C154117 + (C107714 + C107715) * C154114 +
             (C107716 + C107717) * C154105 + (C107718 + C107719) * C154051) *
                C153775 -
            (C107722 * C154051 + C107723 * C154105 +
             (C107713 + C107712) * C154114 +
             (C206 * C153648 + C205 * C74316) * C154117) *
                C2086) *
               C154021 +
           (((C437 * C74316 + C436 * C153648) * C154117 +
             (C108382 + C108383) * C154114 + (C108384 + C108385) * C154105 +
             (C108386 + C108387) * C154051) *
                C2086 -
            (((C134 * C9202 - C135 * C9199 - C134 * C9203 + C153792 * C9208) *
                  C153648 +
              C56433 * C74316) *
                 C154051 +
             (C108387 + C108386) * C154105 + (C108385 + C108384) * C154114 +
             (C108383 + C108382) * C154117) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[266] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C74316 +
             (C2956 + C2957 + C2958) * C153648) *
                C98524 +
            ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
                C153897) *
               C154094 -
           ((C52113 * C153648 + (C52132 + C52131 + C52130) * C74316) * C153897 +
            (C102728 * C153648 + (C52129 + C52128 + C52127) * C74316) *
                C98524) *
               C154095 +
           ((C52140 * C74316 + C102729 * C153648) * C98524 +
            ((C52135 + C52134 + C52133) * C74316 +
             (C52136 + C52137 + C52138) * C153648) *
                C153897) *
               C2602) *
              C154021 +
          ((((C52922 + C52923 + C52924) * C74316 + C103700 * C153648) * C98524 +
            ((C52925 + C52926 + C52927) * C74316 +
             (C52928 + C52929 + C52930) * C153648) *
                C153897) *
               C154095 -
           ((C103701 * C153648 + (C52924 + C52923 + C52922) * C74316) *
                C153897 +
            ((C3281 + C3282 + C3283) * C153648 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C74316) *
                C98524) *
               C154094 -
           (((C2881 * C32003 - C2882 * C32002 - C2881 * C32004 +
              C154071 * C32005 + C2879 * C6373 - C2880 * C6365 - C2879 * C6374 +
              C154097 * C6383 + C2877 * C6375 - C2878 * C6366 - C2877 * C6376 +
              C154109 * C6384) *
                 C153648 +
             (C53536 + C53535 + C53534) * C74316) *
                C153897 +
            ((C52930 + C52929 + C52928) * C153648 + C53529 * C74316) * C98524) *
               C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154115 +
             C205 * C154108 + C206 * C154089 + C207 * C154036) *
                C98524 +
            (C98915 + C98916 + C98917 + C98918) * C153897) *
               C154094 -
           ((C98919 + C98920 + C98921 + C98922) * C153897 +
            (C98918 + C98917 + C98916 + C98915) * C98524) *
               C154095 +
           ((C98922 + C98921 + C98920 + C98919) * C98524 +
            (C101279 + C101280 + C101281 + C101282) * C153897) *
               C2602) *
              C154021 +
          (((C99581 + C99582 + C99583 + C99584) * C98524 +
            (C100107 + C100108 + C100109 + C100110) * C153897) *
               C154095 -
           ((C99584 + C99583 + C99582 + C99581) * C153897 +
            (C435 * C154036 + C436 * C154089 + C437 * C154108 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154115) *
                C98524) *
               C154094 -
           (((C134 * C8574 - C135 * C8573 - C134 * C8575 + C153792 * C8576) *
                 C154036 +
             C8615 * C154089 + C8614 * C154108 + C9222 * C154115) *
                C153897 +
            (C100110 + C100109 + C100108 + C100107) * C98524) *
               C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C74316 +
             C205 * C153648) *
                C154117 +
            (C107704 + C107705) * C154114 + C107720 * C154105 +
            C107721 * C154051) *
               C154094 -
           (C110080 * C154051 + C110081 * C154105 +
            (C107707 + C107706) * C154114 + (C107705 + C107704) * C154117) *
               C154095 +
           (C107720 * C154117 + C107721 * C154114 +
            (C107711 + C107710) * C154105 + (C110082 + C110083) * C154051) *
               C2602) *
              C154021 +
          (((C108376 + C108377) * C154117 + (C108378 + C108379) * C154114 +
            (C108380 + C108381) * C154105 + (C108906 + C108907) * C154051) *
               C154095 -
           (C108908 * C154051 + C108909 * C154105 +
            (C108377 + C108376) * C154114 +
            (C437 * C153648 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C74316) *
                C154117) *
               C154094 -
           (((C134 * C56410 - C135 * C56409 - C134 * C56411 +
              C153792 * C56412) *
                 C153648 +
             C56772 * C74316) *
                C154051 +
            (C108907 + C108906) * C154105 + C108908 * C154114 +
            C108909 * C154117) *
               C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[267] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                     C154115 +
                 C205 * C154108 + C206 * C154089 + C207 * C154036) *
                    C98524 +
                (C98915 + C98916 + C98917 + C98918) * C153897) *
                   C2086 -
               ((C98919 + C98920 + C98921 + C98922) * C153897 +
                (C98918 + C98917 + C98916 + C98915) * C98524) *
                   C153775) *
                  C153695 * C1281 +
              (((C98923 + C98924 + C98925 + C98926) * C98524 +
                (C98927 + C98928 + C98929 + C98930) * C153897) *
                   C153775 -
               ((C98926 + C98925 + C98924 + C98923) * C153897 +
                (C208 * C154036 + C207 * C154089 + C206 * C154108 +
                 C205 * C154115) *
                    C98524) *
                   C2086) *
                  C153695 * C1282 +
              (((C206 * C154115 + C207 * C154108 + C208 * C154089 +
                 C209 * C154036) *
                    C98524 +
                (C99319 + C99320 + C99321 + C99322) * C153897) *
                   C2086 -
               (((C134 * C600 - C135 * C577 - C134 * C601 + C153792 * C613) *
                     C154036 +
                 C670 * C154089 + C669 * C154108 + C668 * C154115) *
                    C153897 +
                (C99322 + C99321 + C99320 + C99319) * C98524) *
                   C153775) *
                  C153695 * C1283) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                     C154115 +
                 C205 * C154108 + C206 * C154089 + C207 * C154036) *
                    C98524 +
                (C98915 + C98916 + C98917 + C98918) * C153897) *
                   C2086 -
               ((C98919 + C98920 + C98921 + C98922) * C153897 +
                (C98918 + C98917 + C98916 + C98915) * C98524) *
                   C153775) *
                  C332 +
              (((C99581 + C99582 + C99583 + C99584) * C98524 +
                (C100107 + C100108 + C100109 + C100110) * C153897) *
                   C153775 -
               ((C99584 + C99583 + C99582 + C99581) * C153897 +
                (C435 * C154036 + C436 * C154089 + C437 * C154108 +
                 (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                     C154115) *
                    C98524) *
                   C2086) *
                  C333 +
              ((((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                     C154115 +
                 C438 * C154108 + C439 * C154089 + C440 * C154036) *
                    C98524 +
                (C100757 + C100758 + C100759 + C100760) * C153897) *
                   C2086 -
               (((C134 * C3517 - C135 * C3510 - C134 * C3518 +
                  C153792 * C3522) *
                     C154036 +
                 C7522 * C154089 + C7521 * C154108 + C9967 * C154115) *
                    C153897 +
                (C100760 + C100759 + C100758 + C100757) * C98524) *
                   C153775) *
                  C334) *
             C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C154115 +
            C205 * C154108 + C206 * C154089 + C207 * C154036) *
               C98524 +
           (C98915 + C98916 + C98917 + C98918) * C153897) *
              C2292 -
          ((C98919 + C98920 + C98921 + C98922) * C153897 +
           (C98918 + C98917 + C98916 + C98915) * C98524) *
              C2293 +
          ((C98922 + C98921 + C98920 + C98919) * C98524 +
           (C101279 + C101280 + C101281 + C101282) * C153897) *
              C2294 -
          (((C134 * C7750 - C135 * C7743 - C134 * C7751 + C153792 * C7755) *
                C154036 +
            C7823 * C154089 + C7822 * C154108 + C10574 * C154115) *
               C153897 +
           (C101282 + C101281 + C101280 + C101279) * C98524) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C74316 +
             (C2956 + C2957 + C2958) * C153648) *
                C98524 +
            ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
                C153897) *
               C2086 -
           ((C52113 * C153648 + (C52132 + C52131 + C52130) * C74316) * C153897 +
            (C102728 * C153648 + (C52129 + C52128 + C52127) * C74316) *
                C98524) *
               C153775) *
              C153695 * C1281 +
          (((C102727 * C74316 + C103311 * C153648) * C98524 +
            (C102729 * C74316 + (C3605 + C3606 + C3607) * C153648) * C153897) *
               C153775 -
           ((C4080 * C153648 + C102728 * C74316) * C153897 +
            ((C2961 + C2960 + C2959) * C153648 +
             (C2958 + C2957 + C2956) * C74316) *
                C98524) *
               C2086) *
              C153695 * C1282 +
          (((C2970 * C74316 + (C2964 + C2963 + C2962) * C153648) * C98524 +
            (C103311 * C74316 + (C4087 + C4088 + C4089) * C153648) * C153897) *
               C2086 -
           (((C2881 * C3517 - C2882 * C3510 - C2881 * C3518 + C154071 * C3522 +
              C2879 * C1520 - C2880 * C1514 - C2879 * C1521 + C154097 * C1529 +
              C2877 * C594 - C2878 * C574 - C2877 * C595 + C154109 * C610) *
                 C153648 +
             (C3607 + C3606 + C3605) * C74316) *
                C153897 +
            ((C4089 + C4088 + C4087) * C153648 + C4080 * C74316) * C98524) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C74316 +
             (C2956 + C2957 + C2958) * C153648) *
                C98524 +
            ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
                C153897) *
               C2086 -
           ((C52113 * C153648 + (C52132 + C52131 + C52130) * C74316) * C153897 +
            (C102728 * C153648 + (C52129 + C52128 + C52127) * C74316) *
                C98524) *
               C153775) *
              C332 +
          ((((C52922 + C52923 + C52924) * C74316 + C103700 * C153648) * C98524 +
            ((C52925 + C52926 + C52927) * C74316 +
             (C52928 + C52929 + C52930) * C153648) *
                C153897) *
               C153775 -
           ((C103701 * C153648 + (C52924 + C52923 + C52922) * C74316) *
                C153897 +
            ((C3281 + C3282 + C3283) * C153648 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C74316) *
                C98524) *
               C2086) *
              C333 +
          ((((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
              C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
              C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                 C74316 +
             (C3284 + C3285 + C3286) * C153648) *
                C98524 +
            ((C54299 + C54300 + C54301) * C74316 +
             (C102431 + C102432 + C102433) * C153648) *
                C153897) *
               C2086 -
           (((C2881 * C28694 - C2882 * C28691 - C2881 * C28695 +
              C154071 * C28697 + C2879 * C5036 - C2880 * C5032 - C2879 * C5037 +
              C154097 * C5041 + C2877 * C3513 - C2878 * C3508 - C2877 * C3514 +
              C154109 * C3520) *
                 C153648 +
             (C54304 + C54303 + C54302) * C74316) *
                C153897 +
            ((C102433 + C102432 + C102431) * C153648 +
             (C54301 + C54300 + C54299) * C74316) *
                C98524) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C74316 +
            (C2956 + C2957 + C2958) * C153648) *
               C98524 +
           ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
               C153897) *
              C2292 -
          ((C52113 * C153648 + (C52132 + C52131 + C52130) * C74316) * C153897 +
           (C102728 * C153648 + (C52129 + C52128 + C52127) * C74316) * C98524) *
              C2293 +
          ((C52140 * C74316 + C102729 * C153648) * C98524 +
           ((C52135 + C52134 + C52133) * C74316 +
            (C52136 + C52137 + C52138) * C153648) *
               C153897) *
              C2294 -
          (((C2881 * C31182 - C2882 * C31179 - C2881 * C31183 +
             C154071 * C31185 + C2879 * C9204 - C2880 * C9200 - C2879 * C9205 +
             C154097 * C9209 + C2877 * C7746 - C2878 * C7741 - C2877 * C7747 +
             C154109 * C7753) *
                C153648 +
            (C54910 + C54909 + C54908) * C74316) *
               C153897 +
           ((C52138 + C52137 + C52136) * C153648 + C54900 * C74316) * C98524) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C74316 +
             C205 * C153648) *
                C154117 +
            (C107704 + C107705) * C154114 + C107720 * C154105 +
            C107721 * C154051) *
               C2086 -
           ((C107710 + C107711) * C154051 + (C107709 + C107708) * C154105 +
            (C107707 + C107706) * C154114 + (C107705 + C107704) * C154117) *
               C153775) *
              C153695 * C1281 +
          (((C107712 + C107713) * C154117 + (C107714 + C107715) * C154114 +
            (C107716 + C107717) * C154105 + (C107718 + C107719) * C154051) *
               C153775 -
           (C107722 * C154051 + C107723 * C154105 +
            (C107713 + C107712) * C154114 +
            (C206 * C153648 + C205 * C74316) * C154117) *
               C2086) *
              C153695 * C1282 +
          (((C206 * C74316 + C207 * C153648) * C154117 +
            (C108112 + C108113) * C154114 + (C108114 + C108115) * C154105 +
            (C108116 + C108117) * C154051) *
               C2086 -
           (((C134 * C7750 - C135 * C7743 - C134 * C7751 + C153792 * C7755) *
                 C153648 +
             C7823 * C74316) *
                C154051 +
            (C108117 + C108116) * C154105 + (C108115 + C108114) * C154114 +
            (C108113 + C108112) * C154117) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C74316 +
             C205 * C153648) *
                C154117 +
            (C107704 + C107705) * C154114 + C107720 * C154105 +
            C107721 * C154051) *
               C2086 -
           ((C107710 + C107711) * C154051 + (C107709 + C107708) * C154105 +
            (C107707 + C107706) * C154114 + (C107705 + C107704) * C154117) *
               C153775) *
              C332 +
          (((C108376 + C108377) * C154117 + (C108378 + C108379) * C154114 +
            (C108380 + C108381) * C154105 + (C108906 + C108907) * C154051) *
               C153775 -
           (C108908 * C154051 + C108909 * C154105 +
            (C108377 + C108376) * C154114 +
            (C437 * C153648 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C74316) *
                C154117) *
               C2086) *
              C333 +
          ((((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C74316 +
             C438 * C153648) *
                C154117 +
            (C109556 + C109557) * C154114 + (C109558 + C109559) * C154105 +
            (C109560 + C109561) * C154051) *
               C2086 -
           (((C134 * C31182 - C135 * C31179 - C134 * C31183 +
              C153792 * C31185) *
                 C153648 +
             C57195 * C74316) *
                C154051 +
            (C109561 + C109560) * C154105 + (C109559 + C109558) * C154114 +
            (C109557 + C109556) * C154117) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C74316 +
            C205 * C153648) *
               C154117 +
           (C107704 + C107705) * C154114 + C107720 * C154105 +
           C107721 * C154051) *
              C2292 -
          (C110080 * C154051 + C110081 * C154105 +
           (C107707 + C107706) * C154114 + (C107705 + C107704) * C154117) *
              C2293 +
          (C107720 * C154117 + C107721 * C154114 +
           (C107711 + C107710) * C154105 + (C110082 + C110083) * C154051) *
              C2294 -
          (((C134 * C55971 - C135 * C55968 - C134 * C55972 + C153792 * C55974) *
                C153648 +
            C57534 * C74316) *
               C154051 +
           (C110083 + C110082) * C154105 + C110080 * C154114 +
           C110081 * C154117) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[268] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C74316 +
             (C2956 + C2957 + C2958) * C153648) *
                C98524 +
            ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
                C153897) *
               C154094 -
           ((C52113 * C153648 + (C52132 + C52131 + C52130) * C74316) * C153897 +
            (C102728 * C153648 + (C52129 + C52128 + C52127) * C74316) *
                C98524) *
               C154095 +
           ((C52140 * C74316 + C102729 * C153648) * C98524 +
            ((C52135 + C52134 + C52133) * C74316 +
             (C52136 + C52137 + C52138) * C153648) *
                C153897) *
               C2602) *
              C153695 * C154013 +
          (((C102727 * C74316 + C103311 * C153648) * C98524 +
            (C102729 * C74316 + (C3605 + C3606 + C3607) * C153648) * C153897) *
               C154095 -
           ((C4080 * C153648 + C102728 * C74316) * C153897 +
            ((C2961 + C2960 + C2959) * C153648 +
             (C2958 + C2957 + C2956) * C74316) *
                C98524) *
               C154094 -
           (((C2881 * C6369 - C2882 * C6363 - C2881 * C6370 + C154071 * C6381 +
              C2879 * C6371 - C2880 * C6364 - C2879 * C6372 + C154097 * C6382 +
              C2877 * C2305 - C2878 * C2298 - C2877 * C2306 + C154109 * C2313) *
                 C153648 +
             (C52138 + C52137 + C52136) * C74316) *
                C153897 +
            ((C3607 + C3606 + C3605) * C153648 + C52113 * C74316) * C98524) *
               C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154115 +
             C205 * C154108 + C206 * C154089 + C207 * C154036) *
                C98524 +
            (C98915 + C98916 + C98917 + C98918) * C153897) *
               C154094 -
           ((C98919 + C98920 + C98921 + C98922) * C153897 +
            (C98918 + C98917 + C98916 + C98915) * C98524) *
               C154095 +
           ((C98922 + C98921 + C98920 + C98919) * C98524 +
            (C101279 + C101280 + C101281 + C101282) * C153897) *
               C2602) *
              C153695 * C154013 +
          (((C98923 + C98924 + C98925 + C98926) * C98524 +
            (C98927 + C98928 + C98929 + C98930) * C153897) *
               C154095 -
           ((C98926 + C98925 + C98924 + C98923) * C153897 +
            (C208 * C154036 + C207 * C154089 + C206 * C154108 +
             C205 * C154115) *
                C98524) *
               C154094 -
           (((C134 * C2301 - C135 * C2296 - C134 * C2302 + C153792 * C2311) *
                 C154036 +
             C7824 * C154089 + C7819 * C154108 + C7820 * C154115) *
                C153897 +
            (C98930 + C98929 + C98928 + C98927) * C98524) *
               C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C74316 +
             C205 * C153648) *
                C154117 +
            (C107704 + C107705) * C154114 + C107720 * C154105 +
            C107721 * C154051) *
               C154094 -
           (C110080 * C154051 + C110081 * C154105 +
            (C107707 + C107706) * C154114 + (C107705 + C107704) * C154117) *
               C154095 +
           (C107720 * C154117 + C107721 * C154114 +
            (C107711 + C107710) * C154105 + (C110082 + C110083) * C154051) *
               C2602) *
              C153695 * C154013 +
          (((C107712 + C107713) * C154117 + (C107714 + C107715) * C154114 +
            (C107716 + C107717) * C154105 + (C107718 + C107719) * C154051) *
               C154095 -
           (C107722 * C154051 + C107723 * C154105 +
            (C107713 + C107712) * C154114 +
            (C206 * C153648 + C205 * C74316) * C154117) *
               C154094 -
           (((C134 * C10554 - C135 * C10551 - C134 * C10555 +
              C153792 * C10560) *
                 C153648 +
             C55997 * C74316) *
                C154051 +
            (C107719 + C107718) * C154105 + C107722 * C154114 +
            C107723 * C154117) *
               C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[269] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154115 +
             C205 * C154108 + C206 * C154089 + C207 * C154036) *
                C98524 +
            (C98915 + C98916 + C98917 + C98918) * C153897) *
               C2086 -
           ((C98919 + C98920 + C98921 + C98922) * C153897 +
            (C98918 + C98917 + C98916 + C98915) * C98524) *
               C153775) *
              C332 +
          (((C99581 + C99582 + C99583 + C99584) * C98524 +
            (C100107 + C100108 + C100109 + C100110) * C153897) *
               C153775 -
           ((C99584 + C99583 + C99582 + C99581) * C153897 +
            (C435 * C154036 + C436 * C154089 + C437 * C154108 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154115) *
                C98524) *
               C2086) *
              C333 +
          ((((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C154115 +
             C438 * C154108 + C439 * C154089 + C440 * C154036) *
                C98524 +
            (C100757 + C100758 + C100759 + C100760) * C153897) *
               C2086 -
           (((C134 * C3517 - C135 * C3510 - C134 * C3518 + C153792 * C3522) *
                 C154036 +
             C7522 * C154089 + C7521 * C154108 + C9967 * C154115) *
                C153897 +
            (C100760 + C100759 + C100758 + C100757) * C98524) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154115 +
             C205 * C154108 + C206 * C154089 + C207 * C154036) *
                C98524 +
            (C98915 + C98916 + C98917 + C98918) * C153897) *
               C2086 -
           ((C98919 + C98920 + C98921 + C98922) * C153897 +
            (C98918 + C98917 + C98916 + C98915) * C98524) *
               C153775) *
              C153695 * C1281 +
          (((C98923 + C98924 + C98925 + C98926) * C98524 +
            (C98927 + C98928 + C98929 + C98930) * C153897) *
               C153775 -
           ((C98926 + C98925 + C98924 + C98923) * C153897 +
            (C208 * C154036 + C207 * C154089 + C206 * C154108 +
             C205 * C154115) *
                C98524) *
               C2086) *
              C153695 * C1282 +
          (((C206 * C154115 + C207 * C154108 + C208 * C154089 +
             C209 * C154036) *
                C98524 +
            (C99319 + C99320 + C99321 + C99322) * C153897) *
               C2086 -
           (((C134 * C600 - C135 * C577 - C134 * C601 + C153792 * C613) *
                 C154036 +
             C670 * C154089 + C669 * C154108 + C668 * C154115) *
                C153897 +
            (C99322 + C99321 + C99320 + C99319) * C98524) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C74316 +
             (C2956 + C2957 + C2958) * C153648) *
                C98524 +
            ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
                C153897) *
               C2086 -
           ((C52113 * C153648 + (C52132 + C52131 + C52130) * C74316) * C153897 +
            (C102728 * C153648 + (C52129 + C52128 + C52127) * C74316) *
                C98524) *
               C153775) *
              C153695 * C1281 +
          (((C102727 * C74316 + C103311 * C153648) * C98524 +
            (C102729 * C74316 + (C3605 + C3606 + C3607) * C153648) * C153897) *
               C153775 -
           ((C4080 * C153648 + C102728 * C74316) * C153897 +
            ((C2961 + C2960 + C2959) * C153648 +
             (C2958 + C2957 + C2956) * C74316) *
                C98524) *
               C2086) *
              C153695 * C1282 +
          (((C2970 * C74316 + (C2964 + C2963 + C2962) * C153648) * C98524 +
            (C103311 * C74316 + (C4087 + C4088 + C4089) * C153648) * C153897) *
               C2086 -
           (((C2881 * C3517 - C2882 * C3510 - C2881 * C3518 + C154071 * C3522 +
              C2879 * C1520 - C2880 * C1514 - C2879 * C1521 + C154097 * C1529 +
              C2877 * C594 - C2878 * C574 - C2877 * C595 + C154109 * C610) *
                 C153648 +
             (C3607 + C3606 + C3605) * C74316) *
                C153897 +
            ((C4089 + C4088 + C4087) * C153648 + C4080 * C74316) * C98524) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C74316 +
             (C2956 + C2957 + C2958) * C153648) *
                C98524 +
            ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
                C153897) *
               C2086 -
           ((C52113 * C153648 + (C52132 + C52131 + C52130) * C74316) * C153897 +
            (C102728 * C153648 + (C52129 + C52128 + C52127) * C74316) *
                C98524) *
               C153775) *
              C332 +
          ((((C52922 + C52923 + C52924) * C74316 + C103700 * C153648) * C98524 +
            ((C52925 + C52926 + C52927) * C74316 +
             (C52928 + C52929 + C52930) * C153648) *
                C153897) *
               C153775 -
           ((C103701 * C153648 + (C52924 + C52923 + C52922) * C74316) *
                C153897 +
            ((C3281 + C3282 + C3283) * C153648 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C74316) *
                C98524) *
               C2086) *
              C333 +
          ((((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
              C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
              C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                 C74316 +
             (C3284 + C3285 + C3286) * C153648) *
                C98524 +
            ((C54299 + C54300 + C54301) * C74316 +
             (C102431 + C102432 + C102433) * C153648) *
                C153897) *
               C2086 -
           (((C2881 * C28694 - C2882 * C28691 - C2881 * C28695 +
              C154071 * C28697 + C2879 * C5036 - C2880 * C5032 - C2879 * C5037 +
              C154097 * C5041 + C2877 * C3513 - C2878 * C3508 - C2877 * C3514 +
              C154109 * C3520) *
                 C153648 +
             (C54304 + C54303 + C54302) * C74316) *
                C153897 +
            ((C102433 + C102432 + C102431) * C153648 +
             (C54301 + C54300 + C54299) * C74316) *
                C98524) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C74316 +
             C205 * C153648) *
                C154117 +
            (C107704 + C107705) * C154114 + C107720 * C154105 +
            C107721 * C154051) *
               C2086 -
           ((C107710 + C107711) * C154051 + (C107709 + C107708) * C154105 +
            (C107707 + C107706) * C154114 + (C107705 + C107704) * C154117) *
               C153775) *
              C153695 * C1281 +
          (((C107712 + C107713) * C154117 + (C107714 + C107715) * C154114 +
            (C107716 + C107717) * C154105 + (C107718 + C107719) * C154051) *
               C153775 -
           (C107722 * C154051 + C107723 * C154105 +
            (C107713 + C107712) * C154114 +
            (C206 * C153648 + C205 * C74316) * C154117) *
               C2086) *
              C153695 * C1282 +
          (((C206 * C74316 + C207 * C153648) * C154117 +
            (C108112 + C108113) * C154114 + (C108114 + C108115) * C154105 +
            (C108116 + C108117) * C154051) *
               C2086 -
           (((C134 * C7750 - C135 * C7743 - C134 * C7751 + C153792 * C7755) *
                 C153648 +
             C7823 * C74316) *
                C154051 +
            (C108117 + C108116) * C154105 + (C108115 + C108114) * C154114 +
            (C108113 + C108112) * C154117) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C74316 +
             C205 * C153648) *
                C154117 +
            (C107704 + C107705) * C154114 + C107720 * C154105 +
            C107721 * C154051) *
               C2086 -
           ((C107710 + C107711) * C154051 + (C107709 + C107708) * C154105 +
            (C107707 + C107706) * C154114 + (C107705 + C107704) * C154117) *
               C153775) *
              C332 +
          (((C108376 + C108377) * C154117 + (C108378 + C108379) * C154114 +
            (C108380 + C108381) * C154105 + (C108906 + C108907) * C154051) *
               C153775 -
           (C108908 * C154051 + C108909 * C154105 +
            (C108377 + C108376) * C154114 +
            (C437 * C153648 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C74316) *
                C154117) *
               C2086) *
              C333 +
          ((((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C74316 +
             C438 * C153648) *
                C154117 +
            (C109556 + C109557) * C154114 + (C109558 + C109559) * C154105 +
            (C109560 + C109561) * C154051) *
               C2086 -
           (((C134 * C31182 - C135 * C31179 - C134 * C31183 +
              C153792 * C31185) *
                 C153648 +
             C57195 * C74316) *
                C154051 +
            (C109561 + C109560) * C154105 + (C109559 + C109558) * C154114 +
            (C109557 + C109556) * C154117) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[270] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C153643 +
             C205 * C153651 + C206 * C83605) *
                C153893 +
            (C116535 + C116536 + C116537) * C153900 + C116555 * C116097) *
               C153711 * C154021 -
           ((C7517 * C83605 + C7518 * C153651 + C8613 * C153643) * C116097 +
            (C1155 * C83605 + C1154 * C153651 + C8612 * C153643) * C153900 +
            (C436 * C83605 + C437 * C153651 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C153643) *
                C153893) *
               C153711 * C153747) *
              C154090 +
          (((C437 * C153643 + C436 * C153651 + C435 * C83605) * C153893 +
            (C1154 * C153643 + C1155 * C153651 + C1156 * C83605) * C153900 +
            (C7518 * C153643 + C7517 * C153651 + C8059 * C83605) * C116097) *
               C153711 * C153747 -
           (C116556 * C116097 + (C116546 + C116545 + C116544) * C153900 +
            (C207 * C83605 + C206 * C153651 + C205 * C153643) * C153893) *
               C153711 * C154021) *
              C154091 +
          (((C206 * C153643 + C207 * C153651 + C208 * C83605) * C153893 +
            (C665 * C153643 + C664 * C153651 + C663 * C83605) * C153900 +
            (C668 * C153643 + C669 * C153651 + C670 * C83605) * C116097) *
               C153711 * C154021 -
           (((C134 * C1518 - C135 * C1513 - C134 * C1519 + C153792 * C1528) *
                 C83605 +
             C8059 * C153651 + C7517 * C153643) *
                C116097 +
            (C1157 * C83605 + C1156 * C153651 + C1155 * C153643) * C153900 +
            (C434 * C83605 + C435 * C153651 + C436 * C153643) * C153893) *
               C153711 * C153747) *
              C796)) /
        (p * q * std::sqrt(p + q));
    d2ee[271] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                  C153643 +
              C205 * C153651 + C206 * C83605) *
                 C153893 +
             (C116535 + C116536 + C116537) * C153900 + C116555 * C116097) *
                C154022 -
            ((C116541 + C116542 + C116543) * C116097 +
             (C116540 + C116539 + C116538) * C153900 +
             (C116537 + C116536 + C116535) * C153893) *
                C153775) *
               C154021 +
           (((C117289 + C117290 + C117291) * C153893 +
             (C117292 + C117293 + C117294) * C153900 +
             (C9222 * C153643 + C8614 * C153651 + C8615 * C83605) * C116097) *
                C153775 -
            ((C117294 + C117293 + C117292) * C116097 +
             (C117291 + C117290 + C117289) * C153900 +
             (C436 * C83605 + C437 * C153651 +
              (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                  C153643) *
                 C153893) *
                C154022) *
               C153747) *
              C335 +
          ((((C116544 + C116545 + C116546) * C153893 +
             (C116547 + C116548 + C116549) * C153900 +
             (C116550 + C116551 + C116552) * C116097) *
                C153775 -
            (C116556 * C116097 + (C116546 + C116545 + C116544) * C153900 +
             (C207 * C83605 + C206 * C153651 + C205 * C153643) * C153893) *
                C154022) *
               C154021 +
           (((C437 * C153643 + C436 * C153651 + C435 * C83605) * C153893 +
             (C117295 + C117296 + C117297) * C153900 +
             (C117298 + C117299 + C117300) * C116097) *
                C154022 -
            (((C134 * C8574 - C135 * C8573 - C134 * C8575 + C153792 * C8576) *
                  C83605 +
              C8615 * C153651 + C8614 * C153643) *
                 C116097 +
             (C117300 + C117299 + C117298) * C153900 +
             (C117297 + C117296 + C117295) * C153893) *
                C153775) *
               C153747) *
              C153682)) /
        (p * q * std::sqrt(p + q));
    d2ee[272] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C153643 +
             C205 * C153651 + C206 * C83605) *
                C153893 +
            (C7817 * C153643 + C666 * C153651 + C665 * C83605) * C153900 +
            (C7818 * C153643 + C667 * C153651 + C668 * C83605) * C116097) *
               C153711 * C332 -
           ((C7517 * C83605 + C7518 * C153651 + C8613 * C153643) * C116097 +
            (C1155 * C83605 + C1154 * C153651 + C8612 * C153643) * C153900 +
            (C436 * C83605 + C437 * C153651 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C153643) *
                C153893) *
               C153711 * C333 +
           (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C153643 +
             C438 * C153651 + C439 * C83605) *
                C153893 +
            (C9966 * C153643 + C7519 * C153651 + C7520 * C83605) * C153900 +
            (C9967 * C153643 + C7521 * C153651 + C7522 * C83605) * C116097) *
               C153711 * C334) *
              C335 +
          (((C437 * C153643 + C436 * C153651 + C435 * C83605) * C153893 +
            (C1154 * C153643 + C1155 * C153651 + C1156 * C83605) * C153900 +
            (C7518 * C153643 + C7517 * C153651 + C8059 * C83605) * C116097) *
               C153711 * C333 -
           ((C669 * C83605 + C668 * C153651 + C667 * C153643) * C116097 +
            (C664 * C83605 + C665 * C153651 + C666 * C153643) * C153900 +
            (C207 * C83605 + C206 * C153651 + C205 * C153643) * C153893) *
               C153711 * C332 -
           (((C134 * C3517 - C135 * C3510 - C134 * C3518 + C153792 * C3522) *
                 C83605 +
             C7522 * C153651 + C7521 * C153643) *
                C116097 +
            (C15452 * C83605 + C7520 * C153651 + C7519 * C153643) * C153900 +
            (C440 * C83605 + C439 * C153651 + C438 * C153643) * C153893) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C153643 +
            C205 * C153651 + C206 * C83605) *
               C153893 +
           (C7817 * C153643 + C666 * C153651 + C665 * C83605) * C153900 +
           (C7818 * C153643 + C667 * C153651 + C668 * C83605) * C116097) *
              C153711 * C153695 * C130 -
          ((C669 * C83605 + C668 * C153651 + C667 * C153643) * C116097 +
           (C664 * C83605 + C665 * C153651 + C666 * C153643) * C153900 +
           (C207 * C83605 + C206 * C153651 + C205 * C153643) * C153893) *
              C153711 * C153695 * C131 +
          ((C206 * C153643 + C207 * C153651 + C208 * C83605) * C153893 +
           (C665 * C153643 + C664 * C153651 + C663 * C83605) * C153900 +
           (C668 * C153643 + C669 * C153651 + C670 * C83605) * C116097) *
              C153711 * C153695 * C132 -
          (((C134 * C600 - C135 * C577 - C134 * C601 + C153792 * C613) *
                C83605 +
            C670 * C153651 + C669 * C153643) *
               C116097 +
           (C943 * C83605 + C663 * C153651 + C664 * C153643) * C153900 +
           (C209 * C83605 + C208 * C153651 + C207 * C153643) * C153893) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C153643 +
             C205 * C153651 + C206 * C83605) *
                C153893 +
            (C116535 + C116536 + C116537) * C153900 + C116555 * C116097) *
               C563 -
           ((C116541 + C116542 + C116543) * C116097 +
            (C116540 + C116539 + C116538) * C153900 +
            (C116537 + C116536 + C116535) * C153893) *
               C564 +
           (C116555 * C153893 + (C116543 + C116542 + C116541) * C153900 +
            (C10574 * C153643 + C7822 * C153651 + C7823 * C83605) * C116097) *
               C565) *
              C153695 * C335 +
          (((C116544 + C116545 + C116546) * C153893 +
            (C116547 + C116548 + C116549) * C153900 +
            (C116550 + C116551 + C116552) * C116097) *
               C564 -
           (C116556 * C116097 + (C116546 + C116545 + C116544) * C153900 +
            (C207 * C83605 + C206 * C153651 + C205 * C153643) * C153893) *
               C563 -
           (((C134 * C7750 - C135 * C7743 - C134 * C7751 + C153792 * C7755) *
                 C83605 +
             C7823 * C153651 + C7822 * C153643) *
                C116097 +
            (C116552 + C116551 + C116550) * C153900 + C116556 * C153893) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[273] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C153643 +
             C205 * C153651 + C206 * C83605) *
                C153893 +
            (C116535 + C116536 + C116537) * C153900 + C116555 * C116097) *
               C154022 -
           ((C116541 + C116542 + C116543) * C116097 +
            (C116540 + C116539 + C116538) * C153900 +
            (C116537 + C116536 + C116535) * C153893) *
               C153775) *
              C153695 * C154090 +
          (((C116544 + C116545 + C116546) * C153893 +
            (C116547 + C116548 + C116549) * C153900 +
            (C116550 + C116551 + C116552) * C116097) *
               C153775 -
           (C116556 * C116097 + (C116546 + C116545 + C116544) * C153900 +
            (C207 * C83605 + C206 * C153651 + C205 * C153643) * C153893) *
               C154022) *
              C153695 * C154091 +
          (((C206 * C153643 + C207 * C153651 + C208 * C83605) * C153893 +
            (C116993 + C116994 + C116995) * C153900 +
            (C116996 + C116997 + C116998) * C116097) *
               C154022 -
           (((C134 * C2301 - C135 * C2296 - C134 * C2302 + C153792 * C2311) *
                 C83605 +
             C7824 * C153651 + C7819 * C153643) *
                C116097 +
            (C116998 + C116997 + C116996) * C153900 +
            (C116995 + C116994 + C116993) * C153893) *
               C153775) *
              C153695 * C796)) /
        (p * q * std::sqrt(p + q));
    d2ee[274] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C153643 +
            C205 * C153651 + C206 * C83605) *
               C153893 +
           (C7817 * C153643 + C666 * C153651 + C665 * C83605) * C153900 +
           (C7818 * C153643 + C667 * C153651 + C668 * C83605) * C116097) *
              C153711 * C153695 * C130 -
          ((C669 * C83605 + C668 * C153651 + C667 * C153643) * C116097 +
           (C664 * C83605 + C665 * C153651 + C666 * C153643) * C153900 +
           (C207 * C83605 + C206 * C153651 + C205 * C153643) * C153893) *
              C153711 * C153695 * C131 +
          ((C206 * C153643 + C207 * C153651 + C208 * C83605) * C153893 +
           (C665 * C153643 + C664 * C153651 + C663 * C83605) * C153900 +
           (C668 * C153643 + C669 * C153651 + C670 * C83605) * C116097) *
              C153711 * C153695 * C132 -
          (((C134 * C600 - C135 * C577 - C134 * C601 + C153792 * C613) *
                C83605 +
            C670 * C153651 + C669 * C153643) *
               C116097 +
           (C943 * C83605 + C663 * C153651 + C664 * C153643) * C153900 +
           (C209 * C83605 + C208 * C153651 + C207 * C153643) * C153893) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C153643 +
             C205 * C153651 + C206 * C83605) *
                C153893 +
            (C7817 * C153643 + C666 * C153651 + C665 * C83605) * C153900 +
            (C7818 * C153643 + C667 * C153651 + C668 * C83605) * C116097) *
               C153711 * C332 -
           ((C7517 * C83605 + C7518 * C153651 + C8613 * C153643) * C116097 +
            (C1155 * C83605 + C1154 * C153651 + C8612 * C153643) * C153900 +
            (C436 * C83605 + C437 * C153651 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C153643) *
                C153893) *
               C153711 * C333 +
           (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C153643 +
             C438 * C153651 + C439 * C83605) *
                C153893 +
            (C9966 * C153643 + C7519 * C153651 + C7520 * C83605) * C153900 +
            (C9967 * C153643 + C7521 * C153651 + C7522 * C83605) * C116097) *
               C153711 * C334) *
              C335 +
          (((C437 * C153643 + C436 * C153651 + C435 * C83605) * C153893 +
            (C1154 * C153643 + C1155 * C153651 + C1156 * C83605) * C153900 +
            (C7518 * C153643 + C7517 * C153651 + C8059 * C83605) * C116097) *
               C153711 * C333 -
           ((C669 * C83605 + C668 * C153651 + C667 * C153643) * C116097 +
            (C664 * C83605 + C665 * C153651 + C666 * C153643) * C153900 +
            (C207 * C83605 + C206 * C153651 + C205 * C153643) * C153893) *
               C153711 * C332 -
           (((C134 * C3517 - C135 * C3510 - C134 * C3518 + C153792 * C3522) *
                 C83605 +
             C7522 * C153651 + C7521 * C153643) *
                C116097 +
            (C15452 * C83605 + C7520 * C153651 + C7519 * C153643) * C153900 +
            (C440 * C83605 + C439 * C153651 + C438 * C153643) * C153893) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[275] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C153643 +
             C205 * C153651 + C206 * C83605) *
                C153893 +
            (C116535 + C116536 + C116537) * C153900 + C116555 * C116097) *
               C153711 * C154092 -
           (C117887 * C116097 + (C117291 + C117290 + C117289) * C153900 +
            (C436 * C83605 + C437 * C153651 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C153643) *
                C153893) *
               C153711 * C154093 +
           (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C153643 +
             C438 * C153651 + C439 * C83605) *
                C153893 +
            (C9966 * C153643 + C7519 * C153651 + C7520 * C83605) * C153900 +
            (C9967 * C153643 + C7521 * C153651 + C7522 * C83605) * C116097) *
               C153711 * C1657) *
              C154013 +
          (((C437 * C153643 + C436 * C153651 + C435 * C83605) * C153893 +
            (C117295 + C117296 + C117297) * C153900 +
            (C117298 + C117299 + C117300) * C116097) *
               C153711 * C154093 -
           (C116556 * C116097 + (C116546 + C116545 + C116544) * C153900 +
            (C207 * C83605 + C206 * C153651 + C205 * C153643) * C153893) *
               C153711 * C154092 -
           (((C134 * C3517 - C135 * C3510 - C134 * C3518 + C153792 * C3522) *
                 C83605 +
             C7522 * C153651 + C7521 * C153643) *
                C116097 +
            (C15452 * C83605 + C7520 * C153651 + C7519 * C153643) * C153900 +
            (C440 * C83605 + C439 * C153651 + C438 * C153643) * C153893) *
               C153711 * C1657) *
              C153682)) /
        (p * q * std::sqrt(p + q));
    d2ee[276] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C153643 +
             C205 * C153651 + C206 * C83605) *
                C153893 +
            (C116535 + C116536 + C116537) * C153900 + C116555 * C116097) *
               C154022 -
           ((C116541 + C116542 + C116543) * C116097 +
            (C116540 + C116539 + C116538) * C153900 +
            (C116537 + C116536 + C116535) * C153893) *
               C153775) *
              C154092 +
          (((C117289 + C117290 + C117291) * C153893 +
            (C117292 + C117293 + C117294) * C153900 +
            (C117883 + C117884 + C117885) * C116097) *
               C153775 -
           (C117887 * C116097 + (C117291 + C117290 + C117289) * C153900 +
            (C436 * C83605 + C437 * C153651 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C153643) *
                C153893) *
               C154022) *
              C154093 +
          ((((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C153643 +
             C438 * C153651 + C439 * C83605) *
                C153893 +
            (C118614 + C118615 + C118616) * C153900 +
            (C118617 + C118618 + C118619) * C116097) *
               C154022 -
           (((C134 * C6369 - C135 * C6363 - C134 * C6370 + C153792 * C6381) *
                 C83605 +
             C63599 * C153651 + C57194 * C153643) *
                C116097 +
            (C118619 + C118618 + C118617) * C153900 +
            (C118616 + C118615 + C118614) * C153893) *
               C153775) *
              C1657) *
         C153676) /
        (p * q * std::sqrt(p + q));
    d2ee[277] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C153643 +
            C205 * C153651 + C206 * C83605) *
               C153893 +
           (C116535 + C116536 + C116537) * C153900 + C116555 * C116097) *
              C153711 * C1366 -
          ((C117294 + C117293 + C117292) * C116097 +
           (C117291 + C117290 + C117289) * C153900 +
           (C436 * C83605 + C437 * C153651 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                C153643) *
               C153893) *
              C153711 * C1367 +
          (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                C153643 +
            C438 * C153651 + C439 * C83605) *
               C153893 +
           (C9966 * C153643 + C7519 * C153651 + C7520 * C83605) * C153900 +
           (C9967 * C153643 + C7521 * C153651 + C7522 * C83605) * C116097) *
              C153711 * C1368 -
          (((C134 * C5034 - C135 * C5031 - C134 * C5035 + C153792 * C5040) *
                C83605 +
            (C134 * C5036 - C135 * C5032 - C134 * C5037 + C153792 * C5041) *
                C153651 +
            (C134 * C5038 - C135 * C5033 - C134 * C5039 + C153792 * C5042) *
                C153643) *
               C116097 +
           ((C134 * C4387 - C135 * C4381 - C134 * C4388 + C153792 * C4393) *
                C83605 +
            (C134 * C4385 - C135 * C4380 - C134 * C4386 + C153792 * C4392) *
                C153651 +
            (C134 * C4383 - C135 * C4379 - C134 * C4384 + C153792 * C4391) *
                C153643) *
               C153900 +
           ((C134 * C1380 - C135 * C1373 - C134 * C1381 + C153792 * C1388) *
                C83605 +
            (C134 * C1382 - C135 * C1374 - C134 * C1383 + C153792 * C1389) *
                C153651 +
            (C134 * C1384 - C135 * C1375 - C134 * C1385 + C153792 * C1390) *
                C153643) *
               C153893) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C153643 +
             C205 * C153651 + C206 * C83605) *
                C153893 +
            (C116535 + C116536 + C116537) * C153900 + C116555 * C116097) *
               C153711 * C1279 -
           ((C117294 + C117293 + C117292) * C116097 +
            (C117291 + C117290 + C117289) * C153900 +
            (C436 * C83605 + C437 * C153651 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C153643) *
                C153893) *
               C153711 * C153747) *
              C1281 +
          (((C437 * C153643 + C436 * C153651 + C435 * C83605) * C153893 +
            (C117295 + C117296 + C117297) * C153900 +
            (C117298 + C117299 + C117300) * C116097) *
               C153711 * C153747 -
           (C116556 * C116097 + (C116546 + C116545 + C116544) * C153900 +
            (C207 * C83605 + C206 * C153651 + C205 * C153643) * C153893) *
               C153711 * C1279) *
              C1282 +
          (((C206 * C153643 + C207 * C153651 + C208 * C83605) * C153893 +
            (C116993 + C116994 + C116995) * C153900 +
            (C116996 + C116997 + C116998) * C116097) *
               C153711 * C1279 -
           (((C134 * C1518 - C135 * C1513 - C134 * C1519 + C153792 * C1528) *
                 C83605 +
             C8059 * C153651 + C7517 * C153643) *
                C116097 +
            (C1157 * C83605 + C1156 * C153651 + C1155 * C153643) * C153900 +
            (C434 * C83605 + C435 * C153651 + C436 * C153643) * C153893) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C153643 +
             C205 * C153651 + C206 * C83605) *
                C153893 +
            (C116535 + C116536 + C116537) * C153900 + C116555 * C116097) *
               C563 -
           ((C116541 + C116542 + C116543) * C116097 +
            (C116540 + C116539 + C116538) * C153900 +
            (C116537 + C116536 + C116535) * C153893) *
               C564 +
           (C116555 * C153893 + (C116543 + C116542 + C116541) * C153900 +
            (C10574 * C153643 + C7822 * C153651 + C7823 * C83605) * C116097) *
               C565) *
              C1279 +
          (((C117289 + C117290 + C117291) * C153893 +
            (C117292 + C117293 + C117294) * C153900 +
            (C117883 + C117884 + C117885) * C116097) *
               C564 -
           (C117887 * C116097 + (C117291 + C117290 + C117289) * C153900 +
            (C436 * C83605 + C437 * C153651 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C153643) *
                C153893) *
               C563 -
           (((C134 * C9202 - C135 * C9199 - C134 * C9203 + C153792 * C9208) *
                 C83605 +
             C56433 * C153651 + C56432 * C153643) *
                C116097 +
            (C117885 + C117884 + C117883) * C153900 + C117887 * C153893) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[278] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                  C153643 +
              C205 * C153651 + C206 * C83605) *
                 C153893 +
             (C116535 + C116536 + C116537) * C153900 + C116555 * C116097) *
                C154022 -
            ((C116541 + C116542 + C116543) * C116097 +
             (C116540 + C116539 + C116538) * C153900 +
             (C116537 + C116536 + C116535) * C153893) *
                C153775) *
               C1279 +
           (((C117289 + C117290 + C117291) * C153893 +
             (C117292 + C117293 + C117294) * C153900 +
             (C117883 + C117884 + C117885) * C116097) *
                C153775 -
            (C117887 * C116097 + (C117291 + C117290 + C117289) * C153900 +
             (C436 * C83605 + C437 * C153651 +
              (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                  C153643) *
                 C153893) *
                C154022) *
               C153747) *
              C154013 +
          ((((C116544 + C116545 + C116546) * C153893 +
             (C116547 + C116548 + C116549) * C153900 +
             (C116550 + C116551 + C116552) * C116097) *
                C153775 -
            (C116556 * C116097 + (C116546 + C116545 + C116544) * C153900 +
             (C207 * C83605 + C206 * C153651 + C205 * C153643) * C153893) *
                C154022) *
               C1279 +
           (((C437 * C153643 + C436 * C153651 + C435 * C83605) * C153893 +
             (C117295 + C117296 + C117297) * C153900 +
             (C117298 + C117299 + C117300) * C116097) *
                C154022 -
            (((C134 * C8574 - C135 * C8573 - C134 * C8575 + C153792 * C8576) *
                  C83605 +
              C8615 * C153651 + C8614 * C153643) *
                 C116097 +
             (C117300 + C117299 + C117298) * C153900 +
             (C117297 + C117296 + C117295) * C153893) *
                C153775) *
               C153747) *
              C153682)) /
        (p * q * std::sqrt(p + q));
    d2ee[279] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C153643 +
             C205 * C153651 + C206 * C83605) *
                C153893 +
            (C116535 + C116536 + C116537) * C153900 + C116555 * C116097) *
               C153711 * C1279 -
           ((C117294 + C117293 + C117292) * C116097 +
            (C117291 + C117290 + C117289) * C153900 +
            (C436 * C83605 + C437 * C153651 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C153643) *
                C153893) *
               C153711 * C153747) *
              C1281 +
          (((C437 * C153643 + C436 * C153651 + C435 * C83605) * C153893 +
            (C117295 + C117296 + C117297) * C153900 +
            (C117298 + C117299 + C117300) * C116097) *
               C153711 * C153747 -
           (C116556 * C116097 + (C116546 + C116545 + C116544) * C153900 +
            (C207 * C83605 + C206 * C153651 + C205 * C153643) * C153893) *
               C153711 * C1279) *
              C1282 +
          (((C206 * C153643 + C207 * C153651 + C208 * C83605) * C153893 +
            (C116993 + C116994 + C116995) * C153900 +
            (C116996 + C116997 + C116998) * C116097) *
               C153711 * C1279 -
           (((C134 * C1518 - C135 * C1513 - C134 * C1519 + C153792 * C1528) *
                 C83605 +
             C8059 * C153651 + C7517 * C153643) *
                C116097 +
            (C1157 * C83605 + C1156 * C153651 + C1155 * C153643) * C153900 +
            (C434 * C83605 + C435 * C153651 + C436 * C153643) * C153893) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C153643 +
            C205 * C153651 + C206 * C83605) *
               C153893 +
           (C116535 + C116536 + C116537) * C153900 + C116555 * C116097) *
              C153711 * C1366 -
          ((C117294 + C117293 + C117292) * C116097 +
           (C117291 + C117290 + C117289) * C153900 +
           (C436 * C83605 + C437 * C153651 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                C153643) *
               C153893) *
              C153711 * C1367 +
          (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                C153643 +
            C438 * C153651 + C439 * C83605) *
               C153893 +
           (C9966 * C153643 + C7519 * C153651 + C7520 * C83605) * C153900 +
           (C9967 * C153643 + C7521 * C153651 + C7522 * C83605) * C116097) *
              C153711 * C1368 -
          (((C134 * C5034 - C135 * C5031 - C134 * C5035 + C153792 * C5040) *
                C83605 +
            (C134 * C5036 - C135 * C5032 - C134 * C5037 + C153792 * C5041) *
                C153651 +
            (C134 * C5038 - C135 * C5033 - C134 * C5039 + C153792 * C5042) *
                C153643) *
               C116097 +
           ((C134 * C4387 - C135 * C4381 - C134 * C4388 + C153792 * C4393) *
                C83605 +
            (C134 * C4385 - C135 * C4380 - C134 * C4386 + C153792 * C4392) *
                C153651 +
            (C134 * C4383 - C135 * C4379 - C134 * C4384 + C153792 * C4391) *
                C153643) *
               C153900 +
           ((C134 * C1380 - C135 * C1373 - C134 * C1381 + C153792 * C1388) *
                C83605 +
            (C134 * C1382 - C135 * C1374 - C134 * C1383 + C153792 * C1389) *
                C153651 +
            (C134 * C1384 - C135 * C1375 - C134 * C1385 + C153792 * C1390) *
                C153643) *
               C153893) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[280] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                  C153643 +
              C205 * C153651 + C206 * C83605) *
                 C153893 +
             (C116535 + C116536 + C116537) * C153900 + C116555 * C116097) *
                C2086 -
            (C119206 * C116097 + (C116540 + C116539 + C116538) * C153900 +
             (C116537 + C116536 + C116535) * C153893) *
                C153775) *
               C154021 +
           (((C117289 + C117290 + C117291) * C153893 +
             (C117292 + C117293 + C117294) * C153900 +
             (C117883 + C117884 + C117885) * C116097) *
                C153775 -
            (C117887 * C116097 + (C117291 + C117290 + C117289) * C153900 +
             (C436 * C83605 + C437 * C153651 +
              (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                  C153643) *
                 C153893) *
                C2086) *
               C153747) *
              C154013 +
          ((((C116544 + C116545 + C116546) * C153893 +
             (C116547 + C116548 + C116549) * C153900 +
             (C116550 + C116551 + C116552) * C116097) *
                C153775 -
            (C116556 * C116097 + (C116546 + C116545 + C116544) * C153900 +
             (C207 * C83605 + C206 * C153651 + C205 * C153643) * C153893) *
                C2086) *
               C154021 +
           (((C437 * C153643 + C436 * C153651 + C435 * C83605) * C153893 +
             (C117295 + C117296 + C117297) * C153900 +
             (C117298 + C117299 + C117300) * C116097) *
                C2086 -
            (((C134 * C8574 - C135 * C8573 - C134 * C8575 + C153792 * C8576) *
                  C83605 +
              C8615 * C153651 + C8614 * C153643) *
                 C116097 +
             (C117300 + C117299 + C117298) * C153900 +
             (C117297 + C117296 + C117295) * C153893) *
                C153775) *
               C153747) *
              C153682)) /
        (p * q * std::sqrt(p + q));
    d2ee[281] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C153643 +
             C205 * C153651 + C206 * C83605) *
                C153893 +
            (C116535 + C116536 + C116537) * C153900 + C116555 * C116097) *
               C154094 -
           (C119206 * C116097 + (C116540 + C116539 + C116538) * C153900 +
            (C116537 + C116536 + C116535) * C153893) *
               C154095 +
           (C116555 * C153893 + (C116543 + C116542 + C116541) * C153900 +
            (C119203 + C119204 + C119205) * C116097) *
               C2602) *
              C154021 +
          (((C117289 + C117290 + C117291) * C153893 +
            (C117292 + C117293 + C117294) * C153900 +
            (C117883 + C117884 + C117885) * C116097) *
               C154095 -
           (C117887 * C116097 + (C117291 + C117290 + C117289) * C153900 +
            (C436 * C83605 + C437 * C153651 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C153643) *
                C153893) *
               C154094 -
           (((C134 * C9202 - C135 * C9199 - C134 * C9203 + C153792 * C9208) *
                 C83605 +
             C56433 * C153651 + C56432 * C153643) *
                C116097 +
            (C117885 + C117884 + C117883) * C153900 + C117887 * C153893) *
               C2602) *
              C153747) *
         C153676) /
        (p * q * std::sqrt(p + q));
    d2ee[282] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C153643 +
             C205 * C153651 + C206 * C83605) *
                C153893 +
            (C116535 + C116536 + C116537) * C153900 + C116555 * C116097) *
               C2086 -
           ((C116541 + C116542 + C116543) * C116097 +
            (C116540 + C116539 + C116538) * C153900 +
            (C116537 + C116536 + C116535) * C153893) *
               C153775) *
              C332 +
          (((C117289 + C117290 + C117291) * C153893 +
            (C117292 + C117293 + C117294) * C153900 +
            (C117883 + C117884 + C117885) * C116097) *
               C153775 -
           (C117887 * C116097 + (C117291 + C117290 + C117289) * C153900 +
            (C436 * C83605 + C437 * C153651 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C153643) *
                C153893) *
               C2086) *
              C333 +
          ((((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C153643 +
             C438 * C153651 + C439 * C83605) *
                C153893 +
            (C118614 + C118615 + C118616) * C153900 +
            (C118617 + C118618 + C118619) * C116097) *
               C2086 -
           (((C134 * C6369 - C135 * C6363 - C134 * C6370 + C153792 * C6381) *
                 C83605 +
             C63599 * C153651 + C57194 * C153643) *
                C116097 +
            (C118619 + C118618 + C118617) * C153900 +
            (C118616 + C118615 + C118614) * C153893) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C153643 +
             C205 * C153651 + C206 * C83605) *
                C153893 +
            (C116535 + C116536 + C116537) * C153900 + C116555 * C116097) *
               C2086 -
           ((C116541 + C116542 + C116543) * C116097 +
            (C116540 + C116539 + C116538) * C153900 +
            (C116537 + C116536 + C116535) * C153893) *
               C153775) *
              C153695 * C1281 +
          (((C116544 + C116545 + C116546) * C153893 +
            (C116547 + C116548 + C116549) * C153900 +
            (C116550 + C116551 + C116552) * C116097) *
               C153775 -
           (C116556 * C116097 + (C116546 + C116545 + C116544) * C153900 +
            (C207 * C83605 + C206 * C153651 + C205 * C153643) * C153893) *
               C2086) *
              C153695 * C1282 +
          (((C206 * C153643 + C207 * C153651 + C208 * C83605) * C153893 +
            (C116993 + C116994 + C116995) * C153900 +
            (C116996 + C116997 + C116998) * C116097) *
               C2086 -
           (((C134 * C2301 - C135 * C2296 - C134 * C2302 + C153792 * C2311) *
                 C83605 +
             C7824 * C153651 + C7819 * C153643) *
                C116097 +
            (C116998 + C116997 + C116996) * C153900 +
            (C116995 + C116994 + C116993) * C153893) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C153643 +
            C205 * C153651 + C206 * C83605) *
               C153893 +
           (C116535 + C116536 + C116537) * C153900 + C116555 * C116097) *
              C2292 -
          (C119206 * C116097 + (C116540 + C116539 + C116538) * C153900 +
           (C116537 + C116536 + C116535) * C153893) *
              C2293 +
          (C116555 * C153893 + (C116543 + C116542 + C116541) * C153900 +
           (C119203 + C119204 + C119205) * C116097) *
              C2294 -
          (((C134 * C10554 - C135 * C10551 - C134 * C10555 + C153792 * C10560) *
                C83605 +
            C55997 * C153651 + C55996 * C153643) *
               C116097 +
           (C119205 + C119204 + C119203) * C153900 + C119206 * C153893) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[283] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C153643 +
             C205 * C153651 + C206 * C83605) *
                C153893 +
            (C116535 + C116536 + C116537) * C153900 + C116555 * C116097) *
               C154094 -
           (C119206 * C116097 + (C116540 + C116539 + C116538) * C153900 +
            (C116537 + C116536 + C116535) * C153893) *
               C154095 +
           (C116555 * C153893 + (C116543 + C116542 + C116541) * C153900 +
            (C119203 + C119204 + C119205) * C116097) *
               C2602) *
              C153695 * C154013 +
          (((C116544 + C116545 + C116546) * C153893 +
            (C116547 + C116548 + C116549) * C153900 +
            (C116550 + C116551 + C116552) * C116097) *
               C154095 -
           (C116556 * C116097 + (C116546 + C116545 + C116544) * C153900 +
            (C207 * C83605 + C206 * C153651 + C205 * C153643) * C153893) *
               C154094 -
           (((C134 * C7750 - C135 * C7743 - C134 * C7751 + C153792 * C7755) *
                 C83605 +
             C7823 * C153651 + C7822 * C153643) *
                C116097 +
            (C116552 + C116551 + C116550) * C153900 + C116556 * C153893) *
               C2602) *
              C153695 * C153682)) /
        (p * q * std::sqrt(p + q));
    d2ee[284] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C153643 +
             C205 * C153651 + C206 * C83605) *
                C153893 +
            (C116535 + C116536 + C116537) * C153900 + C116555 * C116097) *
               C2086 -
           ((C116541 + C116542 + C116543) * C116097 +
            (C116540 + C116539 + C116538) * C153900 +
            (C116537 + C116536 + C116535) * C153893) *
               C153775) *
              C153695 * C1281 +
          (((C116544 + C116545 + C116546) * C153893 +
            (C116547 + C116548 + C116549) * C153900 +
            (C116550 + C116551 + C116552) * C116097) *
               C153775 -
           (C116556 * C116097 + (C116546 + C116545 + C116544) * C153900 +
            (C207 * C83605 + C206 * C153651 + C205 * C153643) * C153893) *
               C2086) *
              C153695 * C1282 +
          (((C206 * C153643 + C207 * C153651 + C208 * C83605) * C153893 +
            (C116993 + C116994 + C116995) * C153900 +
            (C116996 + C116997 + C116998) * C116097) *
               C2086 -
           (((C134 * C2301 - C135 * C2296 - C134 * C2302 + C153792 * C2311) *
                 C83605 +
             C7824 * C153651 + C7819 * C153643) *
                C116097 +
            (C116998 + C116997 + C116996) * C153900 +
            (C116995 + C116994 + C116993) * C153893) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C153643 +
             C205 * C153651 + C206 * C83605) *
                C153893 +
            (C116535 + C116536 + C116537) * C153900 + C116555 * C116097) *
               C2086 -
           ((C116541 + C116542 + C116543) * C116097 +
            (C116540 + C116539 + C116538) * C153900 +
            (C116537 + C116536 + C116535) * C153893) *
               C153775) *
              C332 +
          (((C117289 + C117290 + C117291) * C153893 +
            (C117292 + C117293 + C117294) * C153900 +
            (C117883 + C117884 + C117885) * C116097) *
               C153775 -
           (C117887 * C116097 + (C117291 + C117290 + C117289) * C153900 +
            (C436 * C83605 + C437 * C153651 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C153643) *
                C153893) *
               C2086) *
              C333 +
          ((((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C153643 +
             C438 * C153651 + C439 * C83605) *
                C153893 +
            (C118614 + C118615 + C118616) * C153900 +
            (C118617 + C118618 + C118619) * C116097) *
               C2086 -
           (((C134 * C6369 - C135 * C6363 - C134 * C6370 + C153792 * C6381) *
                 C83605 +
             C63599 * C153651 + C57194 * C153643) *
                C116097 +
            (C118619 + C118618 + C118617) * C153900 +
            (C118616 + C118615 + C118614) * C153893) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[285] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154115 +
             C205 * C154108 + C206 * C154089 + C207 * C154036) *
                C98524 +
            (C98915 + C98916 + C98917 + C98918) * C153897) *
               C153711 * C154021 -
           ((C1156 * C154036 + C1155 * C154089 + C1154 * C154108 +
             C8612 * C154115) *
                C153897 +
            (C435 * C154036 + C436 * C154089 + C437 * C154108 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154115) *
                C98524) *
               C153711 * C153747) *
              C154090 +
          (((C437 * C154115 + C436 * C154108 + C435 * C154089 +
             C434 * C154036) *
                C98524 +
            (C1154 * C154115 + C1155 * C154108 + C1156 * C154089 +
             C1157 * C154036) *
                C153897) *
               C153711 * C153747 -
           ((C98926 + C98925 + C98924 + C98923) * C153897 +
            (C208 * C154036 + C207 * C154089 + C206 * C154108 +
             C205 * C154115) *
                C98524) *
               C153711 * C154021) *
              C154091 +
          (((C206 * C154115 + C207 * C154108 + C208 * C154089 +
             C209 * C154036) *
                C98524 +
            (C665 * C154115 + C664 * C154108 + C663 * C154089 +
             C943 * C154036) *
                C153897) *
               C153711 * C154021 -
           (((C134 * C1121 - C135 * C1110 - C134 * C1122 + C153792 * C1128) *
                 C154036 +
             C1157 * C154089 + C1156 * C154108 + C1155 * C154115) *
                C153897 +
            (C808 * C154036 + C434 * C154089 + C435 * C154108 +
             C436 * C154115) *
                C98524) *
               C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C74316 +
             (C2956 + C2957 + C2958) * C153648) *
                C98524 +
            ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
                C153897) *
               C153711 * C154021 -
           (((C4434 + C4433 + C4432) * C153648 +
             (C52924 + C52923 + C52922) * C74316) *
                C153897 +
            ((C3281 + C3282 + C3283) * C153648 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C74316) *
                C98524) *
               C153711 * C153747) *
              C154090 +
          ((((C3283 + C3282 + C3281) * C74316 +
             (C3280 + C3279 + C3278) * C153648) *
                C98524 +
            ((C4432 + C4433 + C4434) * C74316 +
             (C4435 + C4436 + C4437) * C153648) *
                C153897) *
               C153711 * C153747 -
           ((C4080 * C153648 + C102728 * C74316) * C153897 +
            ((C2961 + C2960 + C2959) * C153648 +
             (C2958 + C2957 + C2956) * C74316) *
                C98524) *
               C153711 * C154021) *
              C154091 +
          (((C2970 * C74316 + (C2964 + C2963 + C2962) * C153648) * C98524 +
            ((C3598 + C3597 + C3596) * C74316 +
             (C4087 + C4088 + C4089) * C153648) *
                C153897) *
               C153711 * C154021 -
           (((C2881 * C4389 - C2882 * C4382 - C2881 * C4390 + C154071 * C4394 +
              C2879 * C1951 - C2880 * C1945 - C2879 * C1952 + C154097 * C1960 +
              C2877 * C1117 - C2878 * C1108 - C2877 * C1118 + C154109 * C1126) *
                 C153648 +
             (C4437 + C4436 + C4435) * C74316) *
                C153897 +
            ((C3848 + C3847 + C3846) * C153648 + C3839 * C74316) * C98524) *
               C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q));
    d2ee[286] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                  C154115 +
              C205 * C154108 + C206 * C154089 + C207 * C154036) *
                 C98524 +
             (C98915 + C98916 + C98917 + C98918) * C153897) *
                C154022 -
            ((C98919 + C98920 + C98921 + C98922) * C153897 +
             (C98918 + C98917 + C98916 + C98915) * C98524) *
                C153775) *
               C154021 +
           (((C99581 + C99582 + C99583 + C99584) * C98524 +
             (C8613 * C154115 + C7518 * C154108 + C7517 * C154089 +
              C8059 * C154036) *
                 C153897) *
                C153775 -
            ((C99584 + C99583 + C99582 + C99581) * C153897 +
             (C435 * C154036 + C436 * C154089 + C437 * C154108 +
              (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                  C154115) *
                 C98524) *
                C154022) *
               C153747) *
              C335 +
          ((((C98923 + C98924 + C98925 + C98926) * C98524 +
             (C98927 + C98928 + C98929 + C98930) * C153897) *
                C153775 -
            ((C98926 + C98925 + C98924 + C98923) * C153897 +
             (C208 * C154036 + C207 * C154089 + C206 * C154108 +
              C205 * C154115) *
                 C98524) *
                C154022) *
               C154021 +
           (((C437 * C154115 + C436 * C154108 + C435 * C154089 +
              C434 * C154036) *
                 C98524 +
             (C99585 + C99586 + C99587 + C99588) * C153897) *
                C154022 -
            (((C134 * C1518 - C135 * C1513 - C134 * C1519 + C153792 * C1528) *
                  C154036 +
              C8059 * C154089 + C7517 * C154108 + C7518 * C154115) *
                 C153897 +
             (C99588 + C99587 + C99586 + C99585) * C98524) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
               C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
               C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                  C74316 +
              (C2956 + C2957 + C2958) * C153648) *
                 C98524 +
             ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
                 C153897) *
                C154022 -
            ((C52113 * C153648 + (C52132 + C52131 + C52130) * C74316) *
                 C153897 +
             (C102728 * C153648 + (C52129 + C52128 + C52127) * C74316) *
                 C98524) *
                C153775) *
               C154021 +
           ((((C52922 + C52923 + C52924) * C74316 + C103700 * C153648) *
                 C98524 +
             ((C52925 + C52926 + C52927) * C74316 +
              (C52928 + C52929 + C52930) * C153648) *
                 C153897) *
                C153775 -
            ((C103701 * C153648 + (C52924 + C52923 + C52922) * C74316) *
                 C153897 +
             ((C3281 + C3282 + C3283) * C153648 +
              (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
               C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
               C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                  C74316) *
                 C98524) *
                C154022) *
               C153747) *
              C335 +
          ((((C102727 * C74316 + C103311 * C153648) * C98524 +
             (C102729 * C74316 + (C3605 + C3606 + C3607) * C153648) * C153897) *
                C153775 -
            ((C4080 * C153648 + C102728 * C74316) * C153897 +
             ((C2961 + C2960 + C2959) * C153648 +
              (C2958 + C2957 + C2956) * C74316) *
                 C98524) *
                C154022) *
               C154021 +
           ((((C3283 + C3282 + C3281) * C74316 +
              (C3280 + C3279 + C3278) * C153648) *
                 C98524 +
             (C103700 * C74316 + (C4435 + C4436 + C4437) * C153648) * C153897) *
                C154022 -
            (((C2881 * C5034 - C2882 * C5031 - C2881 * C5035 + C154071 * C5040 +
               C2879 * C3515 - C2880 * C3509 - C2879 * C3516 + C154097 * C3521 +
               C2877 * C1522 - C2878 * C1515 - C2877 * C1523 +
               C154109 * C1530) *
                  C153648 +
              (C52930 + C52929 + C52928) * C74316) *
                 C153897 +
             ((C4437 + C4436 + C4435) * C153648 + C103701 * C74316) * C98524) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[287] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154115 +
             C205 * C154108 + C206 * C154089 + C207 * C154036) *
                C98524 +
            (C7817 * C154115 + C666 * C154108 + C665 * C154089 +
             C664 * C154036) *
                C153897) *
               C153711 * C332 -
           ((C1156 * C154036 + C1155 * C154089 + C1154 * C154108 +
             C8612 * C154115) *
                C153897 +
            (C435 * C154036 + C436 * C154089 + C437 * C154108 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154115) *
                C98524) *
               C153711 * C333 +
           (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C154115 +
             C438 * C154108 + C439 * C154089 + C440 * C154036) *
                C98524 +
            (C9966 * C154115 + C7519 * C154108 + C7520 * C154089 +
             C15452 * C154036) *
                C153897) *
               C153711 * C334) *
              C335 +
          (((C437 * C154115 + C436 * C154108 + C435 * C154089 +
             C434 * C154036) *
                C98524 +
            (C1154 * C154115 + C1155 * C154108 + C1156 * C154089 +
             C1157 * C154036) *
                C153897) *
               C153711 * C333 -
           ((C663 * C154036 + C664 * C154089 + C665 * C154108 +
             C666 * C154115) *
                C153897 +
            (C208 * C154036 + C207 * C154089 + C206 * C154108 +
             C205 * C154115) *
                C98524) *
               C153711 * C332 -
           (((C134 * C1949 - C135 * C1944 - C134 * C1950 + C153792 * C1959) *
                 C154036 +
             C15452 * C154089 + C7520 * C154108 + C7519 * C154115) *
                C153897 +
            (C441 * C154036 + C440 * C154089 + C439 * C154108 +
             C438 * C154115) *
                C98524) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C154115 +
            C205 * C154108 + C206 * C154089 + C207 * C154036) *
               C98524 +
           (C7817 * C154115 + C666 * C154108 + C665 * C154089 +
            C664 * C154036) *
               C153897) *
              C153711 * C153695 * C130 -
          ((C663 * C154036 + C664 * C154089 + C665 * C154108 + C666 * C154115) *
               C153897 +
           (C208 * C154036 + C207 * C154089 + C206 * C154108 + C205 * C154115) *
               C98524) *
              C153711 * C153695 * C131 +
          ((C206 * C154115 + C207 * C154108 + C208 * C154089 + C209 * C154036) *
               C98524 +
           (C665 * C154115 + C664 * C154108 + C663 * C154089 + C943 * C154036) *
               C153897) *
              C153711 * C153695 * C132 -
          (((C134 * C933 - C135 * C932 - C134 * C934 + C153792 * C935) *
                C154036 +
            C943 * C154089 + C663 * C154108 + C664 * C154115) *
               C153897 +
           (C210 * C154036 + C209 * C154089 + C208 * C154108 + C207 * C154115) *
               C98524) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154115 +
             C205 * C154108 + C206 * C154089 + C207 * C154036) *
                C98524 +
            (C98915 + C98916 + C98917 + C98918) * C153897) *
               C563 -
           ((C98919 + C98920 + C98921 + C98922) * C153897 +
            (C98918 + C98917 + C98916 + C98915) * C98524) *
               C564 +
           ((C98922 + C98921 + C98920 + C98919) * C98524 +
            (C7821 * C154115 + C7820 * C154108 + C7819 * C154089 +
             C7824 * C154036) *
                C153897) *
               C565) *
              C153695 * C335 +
          (((C98923 + C98924 + C98925 + C98926) * C98524 +
            (C98927 + C98928 + C98929 + C98930) * C153897) *
               C564 -
           ((C98926 + C98925 + C98924 + C98923) * C153897 +
            (C208 * C154036 + C207 * C154089 + C206 * C154108 +
             C205 * C154115) *
                C98524) *
               C563 -
           (((C134 * C2301 - C135 * C2296 - C134 * C2302 + C153792 * C2311) *
                 C154036 +
             C7824 * C154089 + C7819 * C154108 + C7820 * C154115) *
                C153897 +
            (C98930 + C98929 + C98928 + C98927) * C98524) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C74316 +
            (C2956 + C2957 + C2958) * C153648) *
               C98524 +
           ((C52127 + C52128 + C52129) * C74316 +
            (C3601 + C3600 + C3599) * C153648) *
               C153897) *
              C153711 * C153695 * C130 -
          ((C4080 * C153648 + (C3599 + C3600 + C3601) * C74316) * C153897 +
           ((C2961 + C2960 + C2959) * C153648 +
            (C2958 + C2957 + C2956) * C74316) *
               C98524) *
              C153711 * C153695 * C131 +
          ((C2970 * C74316 + (C2964 + C2963 + C2962) * C153648) * C98524 +
           ((C3598 + C3597 + C3596) * C74316 +
            (C4087 + C4088 + C4089) * C153648) *
               C153897) *
              C153711 * C153695 * C132 -
          (((C2881 * C1949 - C2882 * C1944 - C2881 * C1950 + C154071 * C1959 +
             C2879 * C1119 - C2880 * C1109 - C2879 * C1120 + C154097 * C1127 +
             C2877 * C578 - C2878 * C566 - C2877 * C579 + C154109 * C602) *
                C153648 +
            (C4089 + C4088 + C4087) * C74316) *
               C153897 +
           ((C2967 + C2966 + C2965) * C153648 + C2971 * C74316) * C98524) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C74316 +
             (C2956 + C2957 + C2958) * C153648) *
                C98524 +
            ((C52127 + C52128 + C52129) * C74316 +
             (C3601 + C3600 + C3599) * C153648) *
                C153897) *
               C153711 * C332 -
           (((C4434 + C4433 + C4432) * C153648 +
             (C52924 + C52923 + C52922) * C74316) *
                C153897 +
            ((C3281 + C3282 + C3283) * C153648 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C74316) *
                C98524) *
               C153711 * C333 +
           (((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
              C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
              C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                 C74316 +
             (C3284 + C3285 + C3286) * C153648) *
                C98524 +
            ((C54299 + C54300 + C54301) * C74316 +
             (C102431 + C102432 + C102433) * C153648) *
                C153897) *
               C153711 * C334) *
              C335 +
          ((((C3283 + C3282 + C3281) * C74316 +
             (C3280 + C3279 + C3278) * C153648) *
                C98524 +
            ((C4432 + C4433 + C4434) * C74316 +
             (C4435 + C4436 + C4437) * C153648) *
                C153897) *
               C153711 * C333 -
           ((C4080 * C153648 + (C3599 + C3600 + C3601) * C74316) * C153897 +
            ((C2961 + C2960 + C2959) * C153648 +
             (C2958 + C2957 + C2956) * C74316) *
                C98524) *
               C153711 * C332 -
           (((C2881 * C5772 - C2882 * C5769 - C2881 * C5773 + C154071 * C5778 +
              C2879 * C4387 - C2880 * C4381 - C2879 * C4388 + C154097 * C4393 +
              C2877 * C1953 - C2878 * C1946 - C2877 * C1954 + C154109 * C1961) *
                 C153648 +
             (C102433 + C102432 + C102431) * C74316) *
                C153897 +
            ((C3289 + C3288 + C3287) * C153648 +
             (C3286 + C3285 + C3284) * C74316) *
                C98524) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C74316 +
             (C2956 + C2957 + C2958) * C153648) *
                C98524 +
            ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
                C153897) *
               C563 -
           ((C52113 * C153648 + (C52132 + C52131 + C52130) * C74316) * C153897 +
            (C102728 * C153648 + (C52129 + C52128 + C52127) * C74316) *
                C98524) *
               C564 +
           ((C52140 * C74316 + C102729 * C153648) * C98524 +
            ((C52135 + C52134 + C52133) * C74316 +
             (C52136 + C52137 + C52138) * C153648) *
                C153897) *
               C565) *
              C153695 * C335 +
          (((C102727 * C74316 + (C3598 + C3597 + C3596) * C153648) * C98524 +
            (C102729 * C74316 + (C3605 + C3606 + C3607) * C153648) * C153897) *
               C564 -
           ((C4080 * C153648 + C102728 * C74316) * C153897 +
            ((C2961 + C2960 + C2959) * C153648 +
             (C2958 + C2957 + C2956) * C74316) *
                C98524) *
               C563 -
           (((C2881 * C6369 - C2882 * C6363 - C2881 * C6370 + C154071 * C6381 +
              C2879 * C6371 - C2880 * C6364 - C2879 * C6372 + C154097 * C6382 +
              C2877 * C2305 - C2878 * C2298 - C2877 * C2306 + C154109 * C2313) *
                 C153648 +
             (C52138 + C52137 + C52136) * C74316) *
                C153897 +
            ((C3607 + C3606 + C3605) * C153648 + C52113 * C74316) * C98524) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[288] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154115 +
             C205 * C154108 + C206 * C154089 + C207 * C154036) *
                C98524 +
            (C98915 + C98916 + C98917 + C98918) * C153897) *
               C154022 -
           ((C98919 + C98920 + C98921 + C98922) * C153897 +
            (C98918 + C98917 + C98916 + C98915) * C98524) *
               C153775) *
              C153695 * C154090 +
          (((C98923 + C98924 + C98925 + C98926) * C98524 +
            (C98927 + C98928 + C98929 + C98930) * C153897) *
               C153775 -
           ((C98926 + C98925 + C98924 + C98923) * C153897 +
            (C208 * C154036 + C207 * C154089 + C206 * C154108 +
             C205 * C154115) *
                C98524) *
               C154022) *
              C153695 * C154091 +
          (((C206 * C154115 + C207 * C154108 + C208 * C154089 +
             C209 * C154036) *
                C98524 +
            (C99319 + C99320 + C99321 + C99322) * C153897) *
               C154022 -
           (((C134 * C600 - C135 * C577 - C134 * C601 + C153792 * C613) *
                 C154036 +
             C670 * C154089 + C669 * C154108 + C668 * C154115) *
                C153897 +
            (C99322 + C99321 + C99320 + C99319) * C98524) *
               C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C74316 +
             (C2956 + C2957 + C2958) * C153648) *
                C98524 +
            ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
                C153897) *
               C154022 -
           ((C52113 * C153648 + (C52132 + C52131 + C52130) * C74316) * C153897 +
            (C102728 * C153648 + (C52129 + C52128 + C52127) * C74316) *
                C98524) *
               C153775) *
              C153695 * C154090 +
          (((C102727 * C74316 + C103311 * C153648) * C98524 +
            (C102729 * C74316 + (C3605 + C3606 + C3607) * C153648) * C153897) *
               C153775 -
           ((C4080 * C153648 + C102728 * C74316) * C153897 +
            ((C2961 + C2960 + C2959) * C153648 +
             (C2958 + C2957 + C2956) * C74316) *
                C98524) *
               C154022) *
              C153695 * C154091 +
          (((C2970 * C74316 + (C2964 + C2963 + C2962) * C153648) * C98524 +
            (C103311 * C74316 + (C4087 + C4088 + C4089) * C153648) * C153897) *
               C154022 -
           (((C2881 * C3517 - C2882 * C3510 - C2881 * C3518 + C154071 * C3522 +
              C2879 * C1520 - C2880 * C1514 - C2879 * C1521 + C154097 * C1529 +
              C2877 * C594 - C2878 * C574 - C2877 * C595 + C154109 * C610) *
                 C153648 +
             (C3607 + C3606 + C3605) * C74316) *
                C153897 +
            ((C4089 + C4088 + C4087) * C153648 + C4080 * C74316) * C98524) *
               C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q));
    d2ee[289] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C154115 +
            C205 * C154108 + C206 * C154089 + C207 * C154036) *
               C98524 +
           (C7817 * C154115 + C666 * C154108 + C665 * C154089 +
            C664 * C154036) *
               C153897) *
              C153711 * C153695 * C130 -
          ((C663 * C154036 + C664 * C154089 + C665 * C154108 + C666 * C154115) *
               C153897 +
           (C208 * C154036 + C207 * C154089 + C206 * C154108 + C205 * C154115) *
               C98524) *
              C153711 * C153695 * C131 +
          ((C206 * C154115 + C207 * C154108 + C208 * C154089 + C209 * C154036) *
               C98524 +
           (C665 * C154115 + C664 * C154108 + C663 * C154089 + C943 * C154036) *
               C153897) *
              C153711 * C153695 * C132 -
          (((C134 * C933 - C135 * C932 - C134 * C934 + C153792 * C935) *
                C154036 +
            C943 * C154089 + C663 * C154108 + C664 * C154115) *
               C153897 +
           (C210 * C154036 + C209 * C154089 + C208 * C154108 + C207 * C154115) *
               C98524) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154115 +
             C205 * C154108 + C206 * C154089 + C207 * C154036) *
                C98524 +
            (C7817 * C154115 + C666 * C154108 + C665 * C154089 +
             C664 * C154036) *
                C153897) *
               C153711 * C332 -
           ((C1156 * C154036 + C1155 * C154089 + C1154 * C154108 +
             C8612 * C154115) *
                C153897 +
            (C435 * C154036 + C436 * C154089 + C437 * C154108 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154115) *
                C98524) *
               C153711 * C333 +
           (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C154115 +
             C438 * C154108 + C439 * C154089 + C440 * C154036) *
                C98524 +
            (C9966 * C154115 + C7519 * C154108 + C7520 * C154089 +
             C15452 * C154036) *
                C153897) *
               C153711 * C334) *
              C335 +
          (((C437 * C154115 + C436 * C154108 + C435 * C154089 +
             C434 * C154036) *
                C98524 +
            (C1154 * C154115 + C1155 * C154108 + C1156 * C154089 +
             C1157 * C154036) *
                C153897) *
               C153711 * C333 -
           ((C663 * C154036 + C664 * C154089 + C665 * C154108 +
             C666 * C154115) *
                C153897 +
            (C208 * C154036 + C207 * C154089 + C206 * C154108 +
             C205 * C154115) *
                C98524) *
               C153711 * C332 -
           (((C134 * C1949 - C135 * C1944 - C134 * C1950 + C153792 * C1959) *
                 C154036 +
             C15452 * C154089 + C7520 * C154108 + C7519 * C154115) *
                C153897 +
            (C441 * C154036 + C440 * C154089 + C439 * C154108 +
             C438 * C154115) *
                C98524) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C74316 +
            (C2956 + C2957 + C2958) * C153648) *
               C98524 +
           ((C52127 + C52128 + C52129) * C74316 +
            (C3601 + C3600 + C3599) * C153648) *
               C153897) *
              C153711 * C153695 * C130 -
          ((C4080 * C153648 + (C3599 + C3600 + C3601) * C74316) * C153897 +
           ((C2961 + C2960 + C2959) * C153648 +
            (C2958 + C2957 + C2956) * C74316) *
               C98524) *
              C153711 * C153695 * C131 +
          ((C2970 * C74316 + (C2964 + C2963 + C2962) * C153648) * C98524 +
           ((C3598 + C3597 + C3596) * C74316 +
            (C4087 + C4088 + C4089) * C153648) *
               C153897) *
              C153711 * C153695 * C132 -
          (((C2881 * C1949 - C2882 * C1944 - C2881 * C1950 + C154071 * C1959 +
             C2879 * C1119 - C2880 * C1109 - C2879 * C1120 + C154097 * C1127 +
             C2877 * C578 - C2878 * C566 - C2877 * C579 + C154109 * C602) *
                C153648 +
            (C4089 + C4088 + C4087) * C74316) *
               C153897 +
           ((C2967 + C2966 + C2965) * C153648 + C2971 * C74316) * C98524) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C74316 +
             (C2956 + C2957 + C2958) * C153648) *
                C98524 +
            ((C52127 + C52128 + C52129) * C74316 +
             (C3601 + C3600 + C3599) * C153648) *
                C153897) *
               C153711 * C332 -
           (((C4434 + C4433 + C4432) * C153648 +
             (C52924 + C52923 + C52922) * C74316) *
                C153897 +
            ((C3281 + C3282 + C3283) * C153648 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C74316) *
                C98524) *
               C153711 * C333 +
           (((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
              C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
              C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                 C74316 +
             (C3284 + C3285 + C3286) * C153648) *
                C98524 +
            ((C54299 + C54300 + C54301) * C74316 +
             (C102431 + C102432 + C102433) * C153648) *
                C153897) *
               C153711 * C334) *
              C335 +
          ((((C3283 + C3282 + C3281) * C74316 +
             (C3280 + C3279 + C3278) * C153648) *
                C98524 +
            ((C4432 + C4433 + C4434) * C74316 +
             (C4435 + C4436 + C4437) * C153648) *
                C153897) *
               C153711 * C333 -
           ((C4080 * C153648 + (C3599 + C3600 + C3601) * C74316) * C153897 +
            ((C2961 + C2960 + C2959) * C153648 +
             (C2958 + C2957 + C2956) * C74316) *
                C98524) *
               C153711 * C332 -
           (((C2881 * C5772 - C2882 * C5769 - C2881 * C5773 + C154071 * C5778 +
              C2879 * C4387 - C2880 * C4381 - C2879 * C4388 + C154097 * C4393 +
              C2877 * C1953 - C2878 * C1946 - C2877 * C1954 + C154109 * C1961) *
                 C153648 +
             (C102433 + C102432 + C102431) * C74316) *
                C153897 +
            ((C3289 + C3288 + C3287) * C153648 +
             (C3286 + C3285 + C3284) * C74316) *
                C98524) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[290] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154115 +
             C205 * C154108 + C206 * C154089 + C207 * C154036) *
                C98524 +
            (C98915 + C98916 + C98917 + C98918) * C153897) *
               C153711 * C154092 -
           ((C99584 + C99583 + C99582 + C99581) * C153897 +
            (C435 * C154036 + C436 * C154089 + C437 * C154108 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154115) *
                C98524) *
               C153711 * C154093 +
           (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C154115 +
             C438 * C154108 + C439 * C154089 + C440 * C154036) *
                C98524 +
            (C9966 * C154115 + C7519 * C154108 + C7520 * C154089 +
             C15452 * C154036) *
                C153897) *
               C153711 * C1657) *
              C154013 +
          (((C437 * C154115 + C436 * C154108 + C435 * C154089 +
             C434 * C154036) *
                C98524 +
            (C99585 + C99586 + C99587 + C99588) * C153897) *
               C153711 * C154093 -
           ((C98926 + C98925 + C98924 + C98923) * C153897 +
            (C208 * C154036 + C207 * C154089 + C206 * C154108 +
             C205 * C154115) *
                C98524) *
               C153711 * C154092 -
           (((C134 * C1949 - C135 * C1944 - C134 * C1950 + C153792 * C1959) *
                 C154036 +
             C15452 * C154089 + C7520 * C154108 + C7519 * C154115) *
                C153897 +
            (C441 * C154036 + C440 * C154089 + C439 * C154108 +
             C438 * C154115) *
                C98524) *
               C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C74316 +
             (C2956 + C2957 + C2958) * C153648) *
                C98524 +
            ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
                C153897) *
               C153711 * C154092 -
           ((C103701 * C153648 + (C52924 + C52923 + C52922) * C74316) *
                C153897 +
            ((C3281 + C3282 + C3283) * C153648 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C74316) *
                C98524) *
               C153711 * C154093 +
           (((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
              C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
              C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                 C74316 +
             (C3284 + C3285 + C3286) * C153648) *
                C98524 +
            ((C54299 + C54300 + C54301) * C74316 +
             (C102431 + C102432 + C102433) * C153648) *
                C153897) *
               C153711 * C1657) *
              C154013 +
          ((((C3283 + C3282 + C3281) * C74316 +
             (C3280 + C3279 + C3278) * C153648) *
                C98524 +
            (C103700 * C74316 + (C4435 + C4436 + C4437) * C153648) * C153897) *
               C153711 * C154093 -
           ((C4080 * C153648 + C102728 * C74316) * C153897 +
            ((C2961 + C2960 + C2959) * C153648 +
             (C2958 + C2957 + C2956) * C74316) *
                C98524) *
               C153711 * C154092 -
           (((C2881 * C5772 - C2882 * C5769 - C2881 * C5773 + C154071 * C5778 +
              C2879 * C4387 - C2880 * C4381 - C2879 * C4388 + C154097 * C4393 +
              C2877 * C1953 - C2878 * C1946 - C2877 * C1954 + C154109 * C1961) *
                 C153648 +
             (C102433 + C102432 + C102431) * C74316) *
                C153897 +
            ((C3289 + C3288 + C3287) * C153648 +
             (C3286 + C3285 + C3284) * C74316) *
                C98524) *
               C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[291] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154115 +
             C205 * C154108 + C206 * C154089 + C207 * C154036) *
                C98524 +
            (C98915 + C98916 + C98917 + C98918) * C153897) *
               C154022 -
           ((C98919 + C98920 + C98921 + C98922) * C153897 +
            (C98918 + C98917 + C98916 + C98915) * C98524) *
               C153775) *
              C154092 +
          (((C99581 + C99582 + C99583 + C99584) * C98524 +
            (C100107 + C100108 + C100109 + C100110) * C153897) *
               C153775 -
           ((C99584 + C99583 + C99582 + C99581) * C153897 +
            (C435 * C154036 + C436 * C154089 + C437 * C154108 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154115) *
                C98524) *
               C154022) *
              C154093 +
          ((((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C154115 +
             C438 * C154108 + C439 * C154089 + C440 * C154036) *
                C98524 +
            (C100757 + C100758 + C100759 + C100760) * C153897) *
               C154022 -
           (((C134 * C3517 - C135 * C3510 - C134 * C3518 + C153792 * C3522) *
                 C154036 +
             C7522 * C154089 + C7521 * C154108 + C9967 * C154115) *
                C153897 +
            (C100760 + C100759 + C100758 + C100757) * C98524) *
               C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C74316 +
             (C2956 + C2957 + C2958) * C153648) *
                C98524 +
            ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
                C153897) *
               C154022 -
           ((C52113 * C153648 + (C52132 + C52131 + C52130) * C74316) * C153897 +
            (C102728 * C153648 + (C52129 + C52128 + C52127) * C74316) *
                C98524) *
               C153775) *
              C154092 +
          ((((C52922 + C52923 + C52924) * C74316 + C103700 * C153648) * C98524 +
            ((C52925 + C52926 + C52927) * C74316 +
             (C52928 + C52929 + C52930) * C153648) *
                C153897) *
               C153775 -
           ((C103701 * C153648 + (C52924 + C52923 + C52922) * C74316) *
                C153897 +
            ((C3281 + C3282 + C3283) * C153648 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C74316) *
                C98524) *
               C154022) *
              C154093 +
          ((((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
              C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
              C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                 C74316 +
             (C3284 + C3285 + C3286) * C153648) *
                C98524 +
            ((C54299 + C54300 + C54301) * C74316 +
             (C102431 + C102432 + C102433) * C153648) *
                C153897) *
               C154022 -
           (((C2881 * C28694 - C2882 * C28691 - C2881 * C28695 +
              C154071 * C28697 + C2879 * C5036 - C2880 * C5032 - C2879 * C5037 +
              C154097 * C5041 + C2877 * C3513 - C2878 * C3508 - C2877 * C3514 +
              C154109 * C3520) *
                 C153648 +
             (C54304 + C54303 + C54302) * C74316) *
                C153897 +
            ((C102433 + C102432 + C102431) * C153648 +
             (C54301 + C54300 + C54299) * C74316) *
                C98524) *
               C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[292] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C154115 +
            C205 * C154108 + C206 * C154089 + C207 * C154036) *
               C98524 +
           (C98915 + C98916 + C98917 + C98918) * C153897) *
              C153711 * C1366 -
          ((C99584 + C99583 + C99582 + C99581) * C153897 +
           (C435 * C154036 + C436 * C154089 + C437 * C154108 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                C154115) *
               C98524) *
              C153711 * C1367 +
          (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                C154115 +
            C438 * C154108 + C439 * C154089 + C440 * C154036) *
               C98524 +
           (C9966 * C154115 + C7519 * C154108 + C7520 * C154089 +
            C15452 * C154036) *
               C153897) *
              C153711 * C1368 -
          (((C134 * C4389 - C135 * C4382 - C134 * C4390 + C153792 * C4394) *
                C154036 +
            (C134 * C4387 - C135 * C4381 - C134 * C4388 + C153792 * C4393) *
                C154089 +
            (C134 * C4385 - C135 * C4380 - C134 * C4386 + C153792 * C4392) *
                C154108 +
            (C134 * C4383 - C135 * C4379 - C134 * C4384 + C153792 * C4391) *
                C154115) *
               C153897 +
           ((C134 * C1378 - C135 * C1372 - C134 * C1379 + C153792 * C1387) *
                C154036 +
            (C134 * C1380 - C135 * C1373 - C134 * C1381 + C153792 * C1388) *
                C154089 +
            (C134 * C1382 - C135 * C1374 - C134 * C1383 + C153792 * C1389) *
                C154108 +
            (C134 * C1384 - C135 * C1375 - C134 * C1385 + C153792 * C1390) *
                C154115) *
               C98524) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154115 +
             C205 * C154108 + C206 * C154089 + C207 * C154036) *
                C98524 +
            (C98915 + C98916 + C98917 + C98918) * C153897) *
               C153711 * C1279 -
           ((C99584 + C99583 + C99582 + C99581) * C153897 +
            (C435 * C154036 + C436 * C154089 + C437 * C154108 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154115) *
                C98524) *
               C153711 * C153747) *
              C1281 +
          (((C437 * C154115 + C436 * C154108 + C435 * C154089 +
             C434 * C154036) *
                C98524 +
            (C99585 + C99586 + C99587 + C99588) * C153897) *
               C153711 * C153747 -
           ((C98926 + C98925 + C98924 + C98923) * C153897 +
            (C208 * C154036 + C207 * C154089 + C206 * C154108 +
             C205 * C154115) *
                C98524) *
               C153711 * C1279) *
              C1282 +
          (((C206 * C154115 + C207 * C154108 + C208 * C154089 +
             C209 * C154036) *
                C98524 +
            (C99319 + C99320 + C99321 + C99322) * C153897) *
               C153711 * C1279 -
           (((C134 * C1121 - C135 * C1110 - C134 * C1122 + C153792 * C1128) *
                 C154036 +
             C1157 * C154089 + C1156 * C154108 + C1155 * C154115) *
                C153897 +
            (C808 * C154036 + C434 * C154089 + C435 * C154108 +
             C436 * C154115) *
                C98524) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154115 +
             C205 * C154108 + C206 * C154089 + C207 * C154036) *
                C98524 +
            (C98915 + C98916 + C98917 + C98918) * C153897) *
               C563 -
           ((C98919 + C98920 + C98921 + C98922) * C153897 +
            (C98918 + C98917 + C98916 + C98915) * C98524) *
               C564 +
           ((C98922 + C98921 + C98920 + C98919) * C98524 +
            (C7821 * C154115 + C7820 * C154108 + C7819 * C154089 +
             C7824 * C154036) *
                C153897) *
               C565) *
              C1279 +
          (((C99581 + C99582 + C99583 + C99584) * C98524 +
            (C100107 + C100108 + C100109 + C100110) * C153897) *
               C564 -
           ((C99584 + C99583 + C99582 + C99581) * C153897 +
            (C435 * C154036 + C436 * C154089 + C437 * C154108 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154115) *
                C98524) *
               C563 -
           (((C134 * C8574 - C135 * C8573 - C134 * C8575 + C153792 * C8576) *
                 C154036 +
             C8615 * C154089 + C8614 * C154108 + C9222 * C154115) *
                C153897 +
            (C100110 + C100109 + C100108 + C100107) * C98524) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C74316 +
             (C2956 + C2957 + C2958) * C153648) *
                C98524 +
            ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
                C153897) *
               C153711 * C1279 -
           ((C103701 * C153648 + (C52924 + C52923 + C52922) * C74316) *
                C153897 +
            ((C3281 + C3282 + C3283) * C153648 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C74316) *
                C98524) *
               C153711 * C153747) *
              C1281 +
          ((((C3283 + C3282 + C3281) * C74316 +
             (C3280 + C3279 + C3278) * C153648) *
                C98524 +
            (C103700 * C74316 + (C4435 + C4436 + C4437) * C153648) * C153897) *
               C153711 * C153747 -
           ((C4080 * C153648 + C102728 * C74316) * C153897 +
            ((C2961 + C2960 + C2959) * C153648 +
             (C2958 + C2957 + C2956) * C74316) *
                C98524) *
               C153711 * C1279) *
              C1282 +
          (((C2970 * C74316 + (C2964 + C2963 + C2962) * C153648) * C98524 +
            (C103311 * C74316 + (C4087 + C4088 + C4089) * C153648) * C153897) *
               C153711 * C1279 -
           (((C2881 * C4389 - C2882 * C4382 - C2881 * C4390 + C154071 * C4394 +
              C2879 * C1951 - C2880 * C1945 - C2879 * C1952 + C154097 * C1960 +
              C2877 * C1117 - C2878 * C1108 - C2877 * C1118 + C154109 * C1126) *
                 C153648 +
             (C4437 + C4436 + C4435) * C74316) *
                C153897 +
            ((C3848 + C3847 + C3846) * C153648 + C3839 * C74316) * C98524) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C74316 +
            (C2956 + C2957 + C2958) * C153648) *
               C98524 +
           ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
               C153897) *
              C153711 * C1366 -
          ((C103701 * C153648 + (C52924 + C52923 + C52922) * C74316) * C153897 +
           ((C3281 + C3282 + C3283) * C153648 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C74316) *
               C98524) *
              C153711 * C1367 +
          (((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
             C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
             C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                C74316 +
            (C3284 + C3285 + C3286) * C153648) *
               C98524 +
           ((C54299 + C54300 + C54301) * C74316 +
            (C102431 + C102432 + C102433) * C153648) *
               C153897) *
              C153711 * C1368 -
          (((C2881 * C29108 - C2882 * C29105 - C2881 * C29109 +
             C154071 * C29111 + C2879 * C5774 - C2880 * C5770 - C2879 * C5775 +
             C154097 * C5779 + C2877 * C4385 - C2878 * C4380 - C2877 * C4386 +
             C154109 * C4392) *
                C153648 +
            (C2881 * C29106 - C2882 * C29104 - C2881 * C29107 +
             C154071 * C29110 + C2879 * C5776 - C2880 * C5771 - C2879 * C5777 +
             C154097 * C5780 + C2877 * C4383 - C2878 * C4379 - C2877 * C4384 +
             C154109 * C4391) *
                C74316) *
               C153897 +
           ((C2881 * C4806 - C2882 * C4802 - C2881 * C4807 + C154071 * C4811 +
             C2879 * C3195 - C2880 * C3190 - C2879 * C3196 + C154097 * C3202 +
             C2877 * C1382 - C2878 * C1374 - C2877 * C1383 + C154109 * C1389) *
                C153648 +
            (C2881 * C4808 - C2882 * C4803 - C2881 * C4809 + C154071 * C4812 +
             C2879 * C3193 - C2880 * C3189 - C2879 * C3194 + C154097 * C3201 +
             C2877 * C1384 - C2878 * C1375 - C2877 * C1385 + C154109 * C1390) *
                C74316) *
               C98524) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C74316 +
             (C2956 + C2957 + C2958) * C153648) *
                C98524 +
            ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
                C153897) *
               C563 -
           ((C52113 * C153648 + (C52132 + C52131 + C52130) * C74316) * C153897 +
            (C102728 * C153648 + (C52129 + C52128 + C52127) * C74316) *
                C98524) *
               C564 +
           ((C52140 * C74316 + C102729 * C153648) * C98524 +
            ((C52135 + C52134 + C52133) * C74316 +
             (C52136 + C52137 + C52138) * C153648) *
                C153897) *
               C565) *
              C1279 +
          ((((C52922 + C52923 + C52924) * C74316 + C103700 * C153648) * C98524 +
            ((C52925 + C52926 + C52927) * C74316 +
             (C52928 + C52929 + C52930) * C153648) *
                C153897) *
               C564 -
           ((C103701 * C153648 + (C52924 + C52923 + C52922) * C74316) *
                C153897 +
            ((C3281 + C3282 + C3283) * C153648 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C74316) *
                C98524) *
               C563 -
           (((C2881 * C32003 - C2882 * C32002 - C2881 * C32004 +
              C154071 * C32005 + C2879 * C6373 - C2880 * C6365 - C2879 * C6374 +
              C154097 * C6383 + C2877 * C6375 - C2878 * C6366 - C2877 * C6376 +
              C154109 * C6384) *
                 C153648 +
             (C53536 + C53535 + C53534) * C74316) *
                C153897 +
            ((C52930 + C52929 + C52928) * C153648 + C53529 * C74316) * C98524) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[293] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                  C154115 +
              C205 * C154108 + C206 * C154089 + C207 * C154036) *
                 C98524 +
             (C98915 + C98916 + C98917 + C98918) * C153897) *
                C154022 -
            ((C98919 + C98920 + C98921 + C98922) * C153897 +
             (C98918 + C98917 + C98916 + C98915) * C98524) *
                C153775) *
               C1279 +
           (((C99581 + C99582 + C99583 + C99584) * C98524 +
             (C100107 + C100108 + C100109 + C100110) * C153897) *
                C153775 -
            ((C99584 + C99583 + C99582 + C99581) * C153897 +
             (C435 * C154036 + C436 * C154089 + C437 * C154108 +
              (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                  C154115) *
                 C98524) *
                C154022) *
               C153747) *
              C154013 +
          ((((C98923 + C98924 + C98925 + C98926) * C98524 +
             (C98927 + C98928 + C98929 + C98930) * C153897) *
                C153775 -
            ((C98926 + C98925 + C98924 + C98923) * C153897 +
             (C208 * C154036 + C207 * C154089 + C206 * C154108 +
              C205 * C154115) *
                 C98524) *
                C154022) *
               C1279 +
           (((C437 * C154115 + C436 * C154108 + C435 * C154089 +
              C434 * C154036) *
                 C98524 +
             (C99585 + C99586 + C99587 + C99588) * C153897) *
                C154022 -
            (((C134 * C1518 - C135 * C1513 - C134 * C1519 + C153792 * C1528) *
                  C154036 +
              C8059 * C154089 + C7517 * C154108 + C7518 * C154115) *
                 C153897 +
             (C99588 + C99587 + C99586 + C99585) * C98524) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
               C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
               C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                  C74316 +
              (C2956 + C2957 + C2958) * C153648) *
                 C98524 +
             ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
                 C153897) *
                C154022 -
            ((C52113 * C153648 + (C52132 + C52131 + C52130) * C74316) *
                 C153897 +
             (C102728 * C153648 + (C52129 + C52128 + C52127) * C74316) *
                 C98524) *
                C153775) *
               C1279 +
           ((((C52922 + C52923 + C52924) * C74316 + C103700 * C153648) *
                 C98524 +
             ((C52925 + C52926 + C52927) * C74316 +
              (C52928 + C52929 + C52930) * C153648) *
                 C153897) *
                C153775 -
            ((C103701 * C153648 + (C52924 + C52923 + C52922) * C74316) *
                 C153897 +
             ((C3281 + C3282 + C3283) * C153648 +
              (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
               C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
               C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                  C74316) *
                 C98524) *
                C154022) *
               C153747) *
              C154013 +
          ((((C102727 * C74316 + C103311 * C153648) * C98524 +
             (C102729 * C74316 + (C3605 + C3606 + C3607) * C153648) * C153897) *
                C153775 -
            ((C4080 * C153648 + C102728 * C74316) * C153897 +
             ((C2961 + C2960 + C2959) * C153648 +
              (C2958 + C2957 + C2956) * C74316) *
                 C98524) *
                C154022) *
               C1279 +
           ((((C3283 + C3282 + C3281) * C74316 +
              (C3280 + C3279 + C3278) * C153648) *
                 C98524 +
             (C103700 * C74316 + (C4435 + C4436 + C4437) * C153648) * C153897) *
                C154022 -
            (((C2881 * C5034 - C2882 * C5031 - C2881 * C5035 + C154071 * C5040 +
               C2879 * C3515 - C2880 * C3509 - C2879 * C3516 + C154097 * C3521 +
               C2877 * C1522 - C2878 * C1515 - C2877 * C1523 +
               C154109 * C1530) *
                  C153648 +
              (C52930 + C52929 + C52928) * C74316) *
                 C153897 +
             ((C4437 + C4436 + C4435) * C153648 + C103701 * C74316) * C98524) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[294] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154115 +
             C205 * C154108 + C206 * C154089 + C207 * C154036) *
                C98524 +
            (C98915 + C98916 + C98917 + C98918) * C153897) *
               C153711 * C1279 -
           ((C99584 + C99583 + C99582 + C99581) * C153897 +
            (C435 * C154036 + C436 * C154089 + C437 * C154108 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154115) *
                C98524) *
               C153711 * C153747) *
              C1281 +
          (((C437 * C154115 + C436 * C154108 + C435 * C154089 +
             C434 * C154036) *
                C98524 +
            (C99585 + C99586 + C99587 + C99588) * C153897) *
               C153711 * C153747 -
           ((C98926 + C98925 + C98924 + C98923) * C153897 +
            (C208 * C154036 + C207 * C154089 + C206 * C154108 +
             C205 * C154115) *
                C98524) *
               C153711 * C1279) *
              C1282 +
          (((C206 * C154115 + C207 * C154108 + C208 * C154089 +
             C209 * C154036) *
                C98524 +
            (C99319 + C99320 + C99321 + C99322) * C153897) *
               C153711 * C1279 -
           (((C134 * C1121 - C135 * C1110 - C134 * C1122 + C153792 * C1128) *
                 C154036 +
             C1157 * C154089 + C1156 * C154108 + C1155 * C154115) *
                C153897 +
            (C808 * C154036 + C434 * C154089 + C435 * C154108 +
             C436 * C154115) *
                C98524) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C154115 +
            C205 * C154108 + C206 * C154089 + C207 * C154036) *
               C98524 +
           (C98915 + C98916 + C98917 + C98918) * C153897) *
              C153711 * C1366 -
          ((C99584 + C99583 + C99582 + C99581) * C153897 +
           (C435 * C154036 + C436 * C154089 + C437 * C154108 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                C154115) *
               C98524) *
              C153711 * C1367 +
          (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                C154115 +
            C438 * C154108 + C439 * C154089 + C440 * C154036) *
               C98524 +
           (C9966 * C154115 + C7519 * C154108 + C7520 * C154089 +
            C15452 * C154036) *
               C153897) *
              C153711 * C1368 -
          (((C134 * C4389 - C135 * C4382 - C134 * C4390 + C153792 * C4394) *
                C154036 +
            (C134 * C4387 - C135 * C4381 - C134 * C4388 + C153792 * C4393) *
                C154089 +
            (C134 * C4385 - C135 * C4380 - C134 * C4386 + C153792 * C4392) *
                C154108 +
            (C134 * C4383 - C135 * C4379 - C134 * C4384 + C153792 * C4391) *
                C154115) *
               C153897 +
           ((C134 * C1378 - C135 * C1372 - C134 * C1379 + C153792 * C1387) *
                C154036 +
            (C134 * C1380 - C135 * C1373 - C134 * C1381 + C153792 * C1388) *
                C154089 +
            (C134 * C1382 - C135 * C1374 - C134 * C1383 + C153792 * C1389) *
                C154108 +
            (C134 * C1384 - C135 * C1375 - C134 * C1385 + C153792 * C1390) *
                C154115) *
               C98524) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C74316 +
             (C2956 + C2957 + C2958) * C153648) *
                C98524 +
            ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
                C153897) *
               C153711 * C1279 -
           ((C103701 * C153648 + (C52924 + C52923 + C52922) * C74316) *
                C153897 +
            ((C3281 + C3282 + C3283) * C153648 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C74316) *
                C98524) *
               C153711 * C153747) *
              C1281 +
          ((((C3283 + C3282 + C3281) * C74316 +
             (C3280 + C3279 + C3278) * C153648) *
                C98524 +
            (C103700 * C74316 + (C4435 + C4436 + C4437) * C153648) * C153897) *
               C153711 * C153747 -
           ((C4080 * C153648 + C102728 * C74316) * C153897 +
            ((C2961 + C2960 + C2959) * C153648 +
             (C2958 + C2957 + C2956) * C74316) *
                C98524) *
               C153711 * C1279) *
              C1282 +
          (((C2970 * C74316 + (C2964 + C2963 + C2962) * C153648) * C98524 +
            (C103311 * C74316 + (C4087 + C4088 + C4089) * C153648) * C153897) *
               C153711 * C1279 -
           (((C2881 * C4389 - C2882 * C4382 - C2881 * C4390 + C154071 * C4394 +
              C2879 * C1951 - C2880 * C1945 - C2879 * C1952 + C154097 * C1960 +
              C2877 * C1117 - C2878 * C1108 - C2877 * C1118 + C154109 * C1126) *
                 C153648 +
             (C4437 + C4436 + C4435) * C74316) *
                C153897 +
            ((C3848 + C3847 + C3846) * C153648 + C3839 * C74316) * C98524) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C74316 +
            (C2956 + C2957 + C2958) * C153648) *
               C98524 +
           ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
               C153897) *
              C153711 * C1366 -
          ((C103701 * C153648 + (C52924 + C52923 + C52922) * C74316) * C153897 +
           ((C3281 + C3282 + C3283) * C153648 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C74316) *
               C98524) *
              C153711 * C1367 +
          (((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
             C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
             C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                C74316 +
            (C3284 + C3285 + C3286) * C153648) *
               C98524 +
           ((C54299 + C54300 + C54301) * C74316 +
            (C102431 + C102432 + C102433) * C153648) *
               C153897) *
              C153711 * C1368 -
          (((C2881 * C29108 - C2882 * C29105 - C2881 * C29109 +
             C154071 * C29111 + C2879 * C5774 - C2880 * C5770 - C2879 * C5775 +
             C154097 * C5779 + C2877 * C4385 - C2878 * C4380 - C2877 * C4386 +
             C154109 * C4392) *
                C153648 +
            (C2881 * C29106 - C2882 * C29104 - C2881 * C29107 +
             C154071 * C29110 + C2879 * C5776 - C2880 * C5771 - C2879 * C5777 +
             C154097 * C5780 + C2877 * C4383 - C2878 * C4379 - C2877 * C4384 +
             C154109 * C4391) *
                C74316) *
               C153897 +
           ((C2881 * C4806 - C2882 * C4802 - C2881 * C4807 + C154071 * C4811 +
             C2879 * C3195 - C2880 * C3190 - C2879 * C3196 + C154097 * C3202 +
             C2877 * C1382 - C2878 * C1374 - C2877 * C1383 + C154109 * C1389) *
                C153648 +
            (C2881 * C4808 - C2882 * C4803 - C2881 * C4809 + C154071 * C4812 +
             C2879 * C3193 - C2880 * C3189 - C2879 * C3194 + C154097 * C3201 +
             C2877 * C1384 - C2878 * C1375 - C2877 * C1385 + C154109 * C1390) *
                C74316) *
               C98524) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[295] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                  C154115 +
              C205 * C154108 + C206 * C154089 + C207 * C154036) *
                 C98524 +
             (C98915 + C98916 + C98917 + C98918) * C153897) *
                C2086 -
            ((C98919 + C98920 + C98921 + C98922) * C153897 +
             (C98918 + C98917 + C98916 + C98915) * C98524) *
                C153775) *
               C154021 +
           (((C99581 + C99582 + C99583 + C99584) * C98524 +
             (C100107 + C100108 + C100109 + C100110) * C153897) *
                C153775 -
            ((C99584 + C99583 + C99582 + C99581) * C153897 +
             (C435 * C154036 + C436 * C154089 + C437 * C154108 +
              (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                  C154115) *
                 C98524) *
                C2086) *
               C153747) *
              C154013 +
          ((((C98923 + C98924 + C98925 + C98926) * C98524 +
             (C98927 + C98928 + C98929 + C98930) * C153897) *
                C153775 -
            ((C98926 + C98925 + C98924 + C98923) * C153897 +
             (C208 * C154036 + C207 * C154089 + C206 * C154108 +
              C205 * C154115) *
                 C98524) *
                C2086) *
               C154021 +
           (((C437 * C154115 + C436 * C154108 + C435 * C154089 +
              C434 * C154036) *
                 C98524 +
             (C99585 + C99586 + C99587 + C99588) * C153897) *
                C2086 -
            (((C134 * C1518 - C135 * C1513 - C134 * C1519 + C153792 * C1528) *
                  C154036 +
              C8059 * C154089 + C7517 * C154108 + C7518 * C154115) *
                 C153897 +
             (C99588 + C99587 + C99586 + C99585) * C98524) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
               C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
               C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                  C74316 +
              (C2956 + C2957 + C2958) * C153648) *
                 C98524 +
             ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
                 C153897) *
                C2086 -
            ((C52113 * C153648 + (C52132 + C52131 + C52130) * C74316) *
                 C153897 +
             (C102728 * C153648 + (C52129 + C52128 + C52127) * C74316) *
                 C98524) *
                C153775) *
               C154021 +
           ((((C52922 + C52923 + C52924) * C74316 + C103700 * C153648) *
                 C98524 +
             ((C52925 + C52926 + C52927) * C74316 +
              (C52928 + C52929 + C52930) * C153648) *
                 C153897) *
                C153775 -
            ((C103701 * C153648 + (C52924 + C52923 + C52922) * C74316) *
                 C153897 +
             ((C3281 + C3282 + C3283) * C153648 +
              (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
               C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
               C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                  C74316) *
                 C98524) *
                C2086) *
               C153747) *
              C154013 +
          ((((C102727 * C74316 + C103311 * C153648) * C98524 +
             (C102729 * C74316 + (C3605 + C3606 + C3607) * C153648) * C153897) *
                C153775 -
            ((C4080 * C153648 + C102728 * C74316) * C153897 +
             ((C2961 + C2960 + C2959) * C153648 +
              (C2958 + C2957 + C2956) * C74316) *
                 C98524) *
                C2086) *
               C154021 +
           ((((C3283 + C3282 + C3281) * C74316 +
              (C3280 + C3279 + C3278) * C153648) *
                 C98524 +
             (C103700 * C74316 + (C4435 + C4436 + C4437) * C153648) * C153897) *
                C2086 -
            (((C2881 * C5034 - C2882 * C5031 - C2881 * C5035 + C154071 * C5040 +
               C2879 * C3515 - C2880 * C3509 - C2879 * C3516 + C154097 * C3521 +
               C2877 * C1522 - C2878 * C1515 - C2877 * C1523 +
               C154109 * C1530) *
                  C153648 +
              (C52930 + C52929 + C52928) * C74316) *
                 C153897 +
             ((C4437 + C4436 + C4435) * C153648 + C103701 * C74316) * C98524) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[296] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154115 +
             C205 * C154108 + C206 * C154089 + C207 * C154036) *
                C98524 +
            (C98915 + C98916 + C98917 + C98918) * C153897) *
               C154094 -
           ((C98919 + C98920 + C98921 + C98922) * C153897 +
            (C98918 + C98917 + C98916 + C98915) * C98524) *
               C154095 +
           ((C98922 + C98921 + C98920 + C98919) * C98524 +
            (C101279 + C101280 + C101281 + C101282) * C153897) *
               C2602) *
              C154021 +
          (((C99581 + C99582 + C99583 + C99584) * C98524 +
            (C100107 + C100108 + C100109 + C100110) * C153897) *
               C154095 -
           ((C99584 + C99583 + C99582 + C99581) * C153897 +
            (C435 * C154036 + C436 * C154089 + C437 * C154108 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154115) *
                C98524) *
               C154094 -
           (((C134 * C8574 - C135 * C8573 - C134 * C8575 + C153792 * C8576) *
                 C154036 +
             C8615 * C154089 + C8614 * C154108 + C9222 * C154115) *
                C153897 +
            (C100110 + C100109 + C100108 + C100107) * C98524) *
               C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C74316 +
             (C2956 + C2957 + C2958) * C153648) *
                C98524 +
            ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
                C153897) *
               C154094 -
           ((C52113 * C153648 + (C52132 + C52131 + C52130) * C74316) * C153897 +
            (C102728 * C153648 + (C52129 + C52128 + C52127) * C74316) *
                C98524) *
               C154095 +
           ((C52140 * C74316 + C102729 * C153648) * C98524 +
            ((C52135 + C52134 + C52133) * C74316 +
             (C52136 + C52137 + C52138) * C153648) *
                C153897) *
               C2602) *
              C154021 +
          ((((C52922 + C52923 + C52924) * C74316 + C103700 * C153648) * C98524 +
            ((C52925 + C52926 + C52927) * C74316 +
             (C52928 + C52929 + C52930) * C153648) *
                C153897) *
               C154095 -
           ((C103701 * C153648 + (C52924 + C52923 + C52922) * C74316) *
                C153897 +
            ((C3281 + C3282 + C3283) * C153648 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C74316) *
                C98524) *
               C154094 -
           (((C2881 * C32003 - C2882 * C32002 - C2881 * C32004 +
              C154071 * C32005 + C2879 * C6373 - C2880 * C6365 - C2879 * C6374 +
              C154097 * C6383 + C2877 * C6375 - C2878 * C6366 - C2877 * C6376 +
              C154109 * C6384) *
                 C153648 +
             (C53536 + C53535 + C53534) * C74316) *
                C153897 +
            ((C52930 + C52929 + C52928) * C153648 + C53529 * C74316) * C98524) *
               C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[297] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154115 +
             C205 * C154108 + C206 * C154089 + C207 * C154036) *
                C98524 +
            (C98915 + C98916 + C98917 + C98918) * C153897) *
               C2086 -
           ((C98919 + C98920 + C98921 + C98922) * C153897 +
            (C98918 + C98917 + C98916 + C98915) * C98524) *
               C153775) *
              C332 +
          (((C99581 + C99582 + C99583 + C99584) * C98524 +
            (C100107 + C100108 + C100109 + C100110) * C153897) *
               C153775 -
           ((C99584 + C99583 + C99582 + C99581) * C153897 +
            (C435 * C154036 + C436 * C154089 + C437 * C154108 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154115) *
                C98524) *
               C2086) *
              C333 +
          ((((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C154115 +
             C438 * C154108 + C439 * C154089 + C440 * C154036) *
                C98524 +
            (C100757 + C100758 + C100759 + C100760) * C153897) *
               C2086 -
           (((C134 * C3517 - C135 * C3510 - C134 * C3518 + C153792 * C3522) *
                 C154036 +
             C7522 * C154089 + C7521 * C154108 + C9967 * C154115) *
                C153897 +
            (C100760 + C100759 + C100758 + C100757) * C98524) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154115 +
             C205 * C154108 + C206 * C154089 + C207 * C154036) *
                C98524 +
            (C98915 + C98916 + C98917 + C98918) * C153897) *
               C2086 -
           ((C98919 + C98920 + C98921 + C98922) * C153897 +
            (C98918 + C98917 + C98916 + C98915) * C98524) *
               C153775) *
              C153695 * C1281 +
          (((C98923 + C98924 + C98925 + C98926) * C98524 +
            (C98927 + C98928 + C98929 + C98930) * C153897) *
               C153775 -
           ((C98926 + C98925 + C98924 + C98923) * C153897 +
            (C208 * C154036 + C207 * C154089 + C206 * C154108 +
             C205 * C154115) *
                C98524) *
               C2086) *
              C153695 * C1282 +
          (((C206 * C154115 + C207 * C154108 + C208 * C154089 +
             C209 * C154036) *
                C98524 +
            (C99319 + C99320 + C99321 + C99322) * C153897) *
               C2086 -
           (((C134 * C600 - C135 * C577 - C134 * C601 + C153792 * C613) *
                 C154036 +
             C670 * C154089 + C669 * C154108 + C668 * C154115) *
                C153897 +
            (C99322 + C99321 + C99320 + C99319) * C98524) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C154115 +
            C205 * C154108 + C206 * C154089 + C207 * C154036) *
               C98524 +
           (C98915 + C98916 + C98917 + C98918) * C153897) *
              C2292 -
          ((C98919 + C98920 + C98921 + C98922) * C153897 +
           (C98918 + C98917 + C98916 + C98915) * C98524) *
              C2293 +
          ((C98922 + C98921 + C98920 + C98919) * C98524 +
           (C101279 + C101280 + C101281 + C101282) * C153897) *
              C2294 -
          (((C134 * C7750 - C135 * C7743 - C134 * C7751 + C153792 * C7755) *
                C154036 +
            C7823 * C154089 + C7822 * C154108 + C10574 * C154115) *
               C153897 +
           (C101282 + C101281 + C101280 + C101279) * C98524) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C74316 +
             (C2956 + C2957 + C2958) * C153648) *
                C98524 +
            ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
                C153897) *
               C2086 -
           ((C52113 * C153648 + (C52132 + C52131 + C52130) * C74316) * C153897 +
            (C102728 * C153648 + (C52129 + C52128 + C52127) * C74316) *
                C98524) *
               C153775) *
              C153695 * C1281 +
          (((C102727 * C74316 + C103311 * C153648) * C98524 +
            (C102729 * C74316 + (C3605 + C3606 + C3607) * C153648) * C153897) *
               C153775 -
           ((C4080 * C153648 + C102728 * C74316) * C153897 +
            ((C2961 + C2960 + C2959) * C153648 +
             (C2958 + C2957 + C2956) * C74316) *
                C98524) *
               C2086) *
              C153695 * C1282 +
          (((C2970 * C74316 + (C2964 + C2963 + C2962) * C153648) * C98524 +
            (C103311 * C74316 + (C4087 + C4088 + C4089) * C153648) * C153897) *
               C2086 -
           (((C2881 * C3517 - C2882 * C3510 - C2881 * C3518 + C154071 * C3522 +
              C2879 * C1520 - C2880 * C1514 - C2879 * C1521 + C154097 * C1529 +
              C2877 * C594 - C2878 * C574 - C2877 * C595 + C154109 * C610) *
                 C153648 +
             (C3607 + C3606 + C3605) * C74316) *
                C153897 +
            ((C4089 + C4088 + C4087) * C153648 + C4080 * C74316) * C98524) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C74316 +
             (C2956 + C2957 + C2958) * C153648) *
                C98524 +
            ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
                C153897) *
               C2086 -
           ((C52113 * C153648 + (C52132 + C52131 + C52130) * C74316) * C153897 +
            (C102728 * C153648 + (C52129 + C52128 + C52127) * C74316) *
                C98524) *
               C153775) *
              C332 +
          ((((C52922 + C52923 + C52924) * C74316 + C103700 * C153648) * C98524 +
            ((C52925 + C52926 + C52927) * C74316 +
             (C52928 + C52929 + C52930) * C153648) *
                C153897) *
               C153775 -
           ((C103701 * C153648 + (C52924 + C52923 + C52922) * C74316) *
                C153897 +
            ((C3281 + C3282 + C3283) * C153648 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C74316) *
                C98524) *
               C2086) *
              C333 +
          ((((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
              C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
              C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                 C74316 +
             (C3284 + C3285 + C3286) * C153648) *
                C98524 +
            ((C54299 + C54300 + C54301) * C74316 +
             (C102431 + C102432 + C102433) * C153648) *
                C153897) *
               C2086 -
           (((C2881 * C28694 - C2882 * C28691 - C2881 * C28695 +
              C154071 * C28697 + C2879 * C5036 - C2880 * C5032 - C2879 * C5037 +
              C154097 * C5041 + C2877 * C3513 - C2878 * C3508 - C2877 * C3514 +
              C154109 * C3520) *
                 C153648 +
             (C54304 + C54303 + C54302) * C74316) *
                C153897 +
            ((C102433 + C102432 + C102431) * C153648 +
             (C54301 + C54300 + C54299) * C74316) *
                C98524) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C74316 +
            (C2956 + C2957 + C2958) * C153648) *
               C98524 +
           ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
               C153897) *
              C2292 -
          ((C52113 * C153648 + (C52132 + C52131 + C52130) * C74316) * C153897 +
           (C102728 * C153648 + (C52129 + C52128 + C52127) * C74316) * C98524) *
              C2293 +
          ((C52140 * C74316 + C102729 * C153648) * C98524 +
           ((C52135 + C52134 + C52133) * C74316 +
            (C52136 + C52137 + C52138) * C153648) *
               C153897) *
              C2294 -
          (((C2881 * C31182 - C2882 * C31179 - C2881 * C31183 +
             C154071 * C31185 + C2879 * C9204 - C2880 * C9200 - C2879 * C9205 +
             C154097 * C9209 + C2877 * C7746 - C2878 * C7741 - C2877 * C7747 +
             C154109 * C7753) *
                C153648 +
            (C54910 + C54909 + C54908) * C74316) *
               C153897 +
           ((C52138 + C52137 + C52136) * C153648 + C54900 * C74316) * C98524) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[298] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154115 +
             C205 * C154108 + C206 * C154089 + C207 * C154036) *
                C98524 +
            (C98915 + C98916 + C98917 + C98918) * C153897) *
               C154094 -
           ((C98919 + C98920 + C98921 + C98922) * C153897 +
            (C98918 + C98917 + C98916 + C98915) * C98524) *
               C154095 +
           ((C98922 + C98921 + C98920 + C98919) * C98524 +
            (C101279 + C101280 + C101281 + C101282) * C153897) *
               C2602) *
              C153695 * C154013 +
          (((C98923 + C98924 + C98925 + C98926) * C98524 +
            (C98927 + C98928 + C98929 + C98930) * C153897) *
               C154095 -
           ((C98926 + C98925 + C98924 + C98923) * C153897 +
            (C208 * C154036 + C207 * C154089 + C206 * C154108 +
             C205 * C154115) *
                C98524) *
               C154094 -
           (((C134 * C2301 - C135 * C2296 - C134 * C2302 + C153792 * C2311) *
                 C154036 +
             C7824 * C154089 + C7819 * C154108 + C7820 * C154115) *
                C153897 +
            (C98930 + C98929 + C98928 + C98927) * C98524) *
               C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C74316 +
             (C2956 + C2957 + C2958) * C153648) *
                C98524 +
            ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
                C153897) *
               C154094 -
           ((C52113 * C153648 + (C52132 + C52131 + C52130) * C74316) * C153897 +
            (C102728 * C153648 + (C52129 + C52128 + C52127) * C74316) *
                C98524) *
               C154095 +
           ((C52140 * C74316 + C102729 * C153648) * C98524 +
            ((C52135 + C52134 + C52133) * C74316 +
             (C52136 + C52137 + C52138) * C153648) *
                C153897) *
               C2602) *
              C153695 * C154013 +
          (((C102727 * C74316 + C103311 * C153648) * C98524 +
            (C102729 * C74316 + (C3605 + C3606 + C3607) * C153648) * C153897) *
               C154095 -
           ((C4080 * C153648 + C102728 * C74316) * C153897 +
            ((C2961 + C2960 + C2959) * C153648 +
             (C2958 + C2957 + C2956) * C74316) *
                C98524) *
               C154094 -
           (((C2881 * C6369 - C2882 * C6363 - C2881 * C6370 + C154071 * C6381 +
              C2879 * C6371 - C2880 * C6364 - C2879 * C6372 + C154097 * C6382 +
              C2877 * C2305 - C2878 * C2298 - C2877 * C2306 + C154109 * C2313) *
                 C153648 +
             (C52138 + C52137 + C52136) * C74316) *
                C153897 +
            ((C3607 + C3606 + C3605) * C153648 + C52113 * C74316) * C98524) *
               C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[299] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154115 +
             C205 * C154108 + C206 * C154089 + C207 * C154036) *
                C98524 +
            (C98915 + C98916 + C98917 + C98918) * C153897) *
               C2086 -
           ((C98919 + C98920 + C98921 + C98922) * C153897 +
            (C98918 + C98917 + C98916 + C98915) * C98524) *
               C153775) *
              C153695 * C1281 +
          (((C98923 + C98924 + C98925 + C98926) * C98524 +
            (C98927 + C98928 + C98929 + C98930) * C153897) *
               C153775 -
           ((C98926 + C98925 + C98924 + C98923) * C153897 +
            (C208 * C154036 + C207 * C154089 + C206 * C154108 +
             C205 * C154115) *
                C98524) *
               C2086) *
              C153695 * C1282 +
          (((C206 * C154115 + C207 * C154108 + C208 * C154089 +
             C209 * C154036) *
                C98524 +
            (C99319 + C99320 + C99321 + C99322) * C153897) *
               C2086 -
           (((C134 * C600 - C135 * C577 - C134 * C601 + C153792 * C613) *
                 C154036 +
             C670 * C154089 + C669 * C154108 + C668 * C154115) *
                C153897 +
            (C99322 + C99321 + C99320 + C99319) * C98524) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C154115 +
             C205 * C154108 + C206 * C154089 + C207 * C154036) *
                C98524 +
            (C98915 + C98916 + C98917 + C98918) * C153897) *
               C2086 -
           ((C98919 + C98920 + C98921 + C98922) * C153897 +
            (C98918 + C98917 + C98916 + C98915) * C98524) *
               C153775) *
              C332 +
          (((C99581 + C99582 + C99583 + C99584) * C98524 +
            (C100107 + C100108 + C100109 + C100110) * C153897) *
               C153775 -
           ((C99584 + C99583 + C99582 + C99581) * C153897 +
            (C435 * C154036 + C436 * C154089 + C437 * C154108 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C154115) *
                C98524) *
               C2086) *
              C333 +
          ((((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C154115 +
             C438 * C154108 + C439 * C154089 + C440 * C154036) *
                C98524 +
            (C100757 + C100758 + C100759 + C100760) * C153897) *
               C2086 -
           (((C134 * C3517 - C135 * C3510 - C134 * C3518 + C153792 * C3522) *
                 C154036 +
             C7522 * C154089 + C7521 * C154108 + C9967 * C154115) *
                C153897 +
            (C100760 + C100759 + C100758 + C100757) * C98524) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C74316 +
             (C2956 + C2957 + C2958) * C153648) *
                C98524 +
            ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
                C153897) *
               C2086 -
           ((C52113 * C153648 + (C52132 + C52131 + C52130) * C74316) * C153897 +
            (C102728 * C153648 + (C52129 + C52128 + C52127) * C74316) *
                C98524) *
               C153775) *
              C153695 * C1281 +
          (((C102727 * C74316 + C103311 * C153648) * C98524 +
            (C102729 * C74316 + (C3605 + C3606 + C3607) * C153648) * C153897) *
               C153775 -
           ((C4080 * C153648 + C102728 * C74316) * C153897 +
            ((C2961 + C2960 + C2959) * C153648 +
             (C2958 + C2957 + C2956) * C74316) *
                C98524) *
               C2086) *
              C153695 * C1282 +
          (((C2970 * C74316 + (C2964 + C2963 + C2962) * C153648) * C98524 +
            (C103311 * C74316 + (C4087 + C4088 + C4089) * C153648) * C153897) *
               C2086 -
           (((C2881 * C3517 - C2882 * C3510 - C2881 * C3518 + C154071 * C3522 +
              C2879 * C1520 - C2880 * C1514 - C2879 * C1521 + C154097 * C1529 +
              C2877 * C594 - C2878 * C574 - C2877 * C595 + C154109 * C610) *
                 C153648 +
             (C3607 + C3606 + C3605) * C74316) *
                C153897 +
            ((C4089 + C4088 + C4087) * C153648 + C4080 * C74316) * C98524) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C74316 +
             (C2956 + C2957 + C2958) * C153648) *
                C98524 +
            ((C52127 + C52128 + C52129) * C74316 + C102727 * C153648) *
                C153897) *
               C2086 -
           ((C52113 * C153648 + (C52132 + C52131 + C52130) * C74316) * C153897 +
            (C102728 * C153648 + (C52129 + C52128 + C52127) * C74316) *
                C98524) *
               C153775) *
              C332 +
          ((((C52922 + C52923 + C52924) * C74316 + C103700 * C153648) * C98524 +
            ((C52925 + C52926 + C52927) * C74316 +
             (C52928 + C52929 + C52930) * C153648) *
                C153897) *
               C153775 -
           ((C103701 * C153648 + (C52924 + C52923 + C52922) * C74316) *
                C153897 +
            ((C3281 + C3282 + C3283) * C153648 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C74316) *
                C98524) *
               C2086) *
              C333 +
          ((((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
              C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
              C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                 C74316 +
             (C3284 + C3285 + C3286) * C153648) *
                C98524 +
            ((C54299 + C54300 + C54301) * C74316 +
             (C102431 + C102432 + C102433) * C153648) *
                C153897) *
               C2086 -
           (((C2881 * C28694 - C2882 * C28691 - C2881 * C28695 +
              C154071 * C28697 + C2879 * C5036 - C2880 * C5032 - C2879 * C5037 +
              C154097 * C5041 + C2877 * C3513 - C2878 * C3508 - C2877 * C3514 +
              C154109 * C3520) *
                 C153648 +
             (C54304 + C54303 + C54302) * C74316) *
                C153897 +
            ((C102433 + C102432 + C102431) * C153648 +
             (C54301 + C54300 + C54299) * C74316) *
                C98524) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[300] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C11433 +
            (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
               C153810 * C153711 * C154021 -
           (C12266 * C154036 + C12267 * C11435 + (C11786 + C11787) * C11434 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C11433) *
               C153810 * C153711 * C153747) *
              C154090 +
          (((C11787 + C11786) * C11433 + (C11785 + C11784) * C11434 +
            (C11783 + C11782) * C11435 + (C12280 + C12281) * C154036) *
               C153810 * C153711 * C153747 -
           (C11514 * C154036 + C11515 * C11435 + (C11505 + C11504) * C11434 +
            (C11503 + C11502) * C11433) *
               C153810 * C153711 * C154021) *
              C154091 +
          ((C11512 * C11433 + C11513 * C11434 + (C11509 + C11508) * C11435 +
            (C11510 + C11511) * C154036) *
               C153810 * C153711 * C154021 -
           ((C11439 * C371 - C11440 * C348 - C11439 * C372 + C153855 * C384 +
             C11437 * C369 - C11438 * C347 - C11437 * C370 + C154035 * C383) *
                C154036 +
            (C12281 + C12280) * C11435 + C12266 * C11434 + C12267 * C11433) *
               C153810 * C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C154002 +
            (C35004 + C35005 + C35006 + C35007) * C153648) *
               C153810 * C153711 * C154021 -
           ((C35258 + C35259 + C35260 + C35261) * C153648 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C154002) *
               C153810 * C153711 * C153747) *
              C154090 +
          (((C35261 + C35260 + C35259 + C35258) * C154002 +
            (C35734 + C35735 + C35736 + C35737) * C153648) *
               C153810 * C153711 * C153747 -
           ((C35008 + C35009 + C35010 + C35011) * C153648 +
            (C35007 + C35006 + C35005 + C35004) * C154002) *
               C153810 * C153711 * C154021) *
              C154091 +
          (((C35011 + C35010 + C35009 + C35008) * C154002 +
            (C35012 + C35013 + C35014 + C35015) * C153648) *
               C153810 * C153711 * C154021 -
           ((C34929 * C3199 - C34930 * C3192 - C34929 * C3200 +
             C154044 * C3204 + C34927 * C1378 - C34928 * C1372 -
             C34927 * C1379 + C34919 * C1387 + C34925 * C365 - C34926 * C345 -
             C34925 * C366 + C34918 * C381 + C34923 * C351 - C34924 * C338 -
             C34923 * C352 + C34917 * C374) *
                C153648 +
            (C35737 + C35736 + C35735 + C35734) * C154002) *
               C153810 * C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q));
    d2ee[301] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C11433 +
             (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
                C153810 * C154022 -
            (C12476 * C154036 + C12477 * C11435 + (C12064 + C12065) * C11434 +
             (C11439 * C1111 - C11440 * C1105 - C11439 * C1112 +
              C153855 * C1123 + C11437 * C586 - C11438 * C570 - C11437 * C587 +
              C154035 * C606) *
                 C11433) *
                C153810 * C153775) *
               C154021 +
           (((C11437 * C1111 - C11438 * C1105 - C11437 * C1112 +
              C154035 * C1123 + C11439 * C1957 - C11440 * C1948 -
              C11439 * C1958 + C153855 * C1963) *
                 C11433 +
             (C12786 + C12787) * C11434 + (C12788 + C12789) * C11435 +
             (C12790 + C12791) * C154036) *
                C153810 * C153775 -
            (C12266 * C154036 + C12267 * C11435 + (C11786 + C11787) * C11434 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C11433) *
                C153810 * C154022) *
               C153747) *
              C335 +
          ((((C12065 + C12064) * C11433 + (C12063 + C12062) * C11434 +
             (C12061 + C12060) * C11435 + (C12490 + C12491) * C154036) *
                C153810 * C153775 -
            (C11514 * C154036 + C11515 * C11435 + (C11505 + C11504) * C11434 +
             (C11503 + C11502) * C11433) *
                C153810 * C154022) *
               C154021 +
           (((C11787 + C11786) * C11433 + (C11785 + C11784) * C11434 +
             (C11783 + C11782) * C11435 + (C12280 + C12281) * C154036) *
                C153810 * C154022 -
            ((C11439 * C1949 - C11440 * C1944 - C11439 * C1950 +
              C153855 * C1959 + C11437 * C1119 - C11438 * C1109 -
              C11437 * C1120 + C154035 * C1127) *
                 C154036 +
             (C12791 + C12790) * C11435 + (C12789 + C12788) * C11434 +
             (C12787 + C12786) * C11433) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
              C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
              C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
              C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
              C154044 * C1390) *
                 C154002 +
             (C35004 + C35005 + C35006 + C35007) * C153648) *
                C153810 * C154022 -
            ((C35508 + C35509 + C35510 + C35511) * C153648 +
             (C34929 * C4383 - C34930 * C4379 - C34929 * C4384 +
              C154044 * C4391 + C34927 * C1957 - C34928 * C1948 -
              C34927 * C1958 + C34919 * C1963 + C34925 * C1111 -
              C34926 * C1105 - C34925 * C1112 + C34918 * C1123 + C34923 * C586 -
              C34924 * C570 - C34923 * C587 + C34917 * C606) *
                 C154002) *
                C153810 * C153775) *
               C154021 +
           (((C34923 * C1111 - C34924 * C1105 - C34923 * C1112 +
              C34917 * C1123 + C34925 * C1957 - C34926 * C1948 -
              C34925 * C1958 + C34918 * C1963 + C34927 * C4383 -
              C34928 * C4379 - C34927 * C4384 + C34919 * C4391 +
              C34929 * C5776 - C34930 * C5771 - C34929 * C5777 +
              C154044 * C5780) *
                 C154002 +
             (C36242 + C36243 + C36244 + C36245) * C153648) *
                C153810 * C153775 -
            ((C35258 + C35259 + C35260 + C35261) * C153648 +
             (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
              C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
              C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
              C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
              C34923 * C358 + C34917 * C377) *
                 C154002) *
                C153810 * C154022) *
               C153747) *
              C335 +
          ((((C35511 + C35510 + C35509 + C35508) * C154002 +
             (C35956 + C35957 + C35958 + C35959) * C153648) *
                C153810 * C153775 -
            ((C35008 + C35009 + C35010 + C35011) * C153648 +
             (C35007 + C35006 + C35005 + C35004) * C154002) *
                C153810 * C154022) *
               C154021 +
           (((C35261 + C35260 + C35259 + C35258) * C154002 +
             (C35734 + C35735 + C35736 + C35737) * C153648) *
                C153810 * C154022 -
            ((C34929 * C5772 - C34930 * C5769 - C34929 * C5773 +
              C154044 * C5778 + C34927 * C4387 - C34928 * C4381 -
              C34927 * C4388 + C34919 * C4393 + C34925 * C1953 -
              C34926 * C1946 - C34925 * C1954 + C34918 * C1961 +
              C34923 * C1115 - C34924 * C1107 - C34923 * C1116 +
              C34917 * C1125) *
                 C153648 +
             (C36245 + C36244 + C36243 + C36242) * C154002) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[302] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C11433 +
            (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
               C153810 * C153711 * C332 -
           ((C11782 + C11783) * C154036 + (C11784 + C11785) * C11435 +
            (C11786 + C11787) * C11434 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C11433) *
               C153810 * C153711 * C333 +
           ((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
             C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
             C153855 * C1390) *
                C11433 +
            (C11788 + C11789) * C11434 + (C11790 + C11791) * C11435 +
            (C11792 + C11793) * C154036) *
               C153810 * C153711 * C334) *
              C335 +
          (((C11787 + C11786) * C11433 + (C11785 + C11784) * C11434 +
            (C11783 + C11782) * C11435 +
            (C11437 * C349 - C11438 * C337 - C11437 * C350 + C154035 * C373 +
             C11439 * C367 - C11440 * C346 - C11439 * C368 + C153855 * C382) *
                C154036) *
               C153810 * C153711 * C333 -
           (C11514 * C154036 + C11515 * C11435 + (C11505 + C11504) * C11434 +
            (C11503 + C11502) * C11433) *
               C153810 * C153711 * C332 -
           ((C11439 * C1376 - C11440 * C1371 - C11439 * C1377 +
             C153855 * C1386 + C11437 * C367 - C11438 * C346 - C11437 * C368 +
             C154035 * C382) *
                C154036 +
            (C11793 + C11792) * C11435 + (C11791 + C11790) * C11434 +
            (C11789 + C11788) * C11433) *
               C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
            C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
               C11433 +
           (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
              C153810 * C153711 * C153695 * C130 -
          (C11514 * C154036 + C11515 * C11435 + (C11505 + C11504) * C11434 +
           (C11503 + C11502) * C11433) *
              C153810 * C153711 * C153695 * C131 +
          (C11512 * C11433 + C11513 * C11434 + (C11509 + C11508) * C11435 +
           (C11510 + C11511) * C154036) *
              C153810 * C153711 * C153695 * C132 -
          ((C11439 * C798 - C11440 * C797 - C11439 * C799 + C153855 * C800 +
            C11437 * C156 - C11438 * C142 - C11437 * C157 + C154035 * C166) *
               C154036 +
           (C11511 + C11510) * C11435 + C11514 * C11434 + C11515 * C11433) *
              C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C11433 +
            (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
               C153810 * C563 -
           ((C12060 + C12061) * C154036 + (C12062 + C12063) * C11435 +
            (C12064 + C12065) * C11434 +
            (C11439 * C1111 - C11440 * C1105 - C11439 * C1112 +
             C153855 * C1123 + C11437 * C586 - C11438 * C570 - C11437 * C587 +
             C154035 * C606) *
                C11433) *
               C153810 * C564 +
           ((C11437 * C588 - C11438 * C571 - C11437 * C589 + C154035 * C607 +
             C11439 * C1526 - C11440 * C1517 - C11439 * C1527 +
             C153855 * C1532) *
                C11433 +
            (C12066 + C12067) * C11434 + (C12068 + C12069) * C11435 +
            (C12070 + C12071) * C154036) *
               C153810 * C565) *
              C153695 * C335 +
          (((C12065 + C12064) * C11433 + (C12063 + C12062) * C11434 +
            (C12061 + C12060) * C11435 +
            (C11437 * C578 - C11438 * C566 - C11437 * C579 + C154035 * C602 +
             C11439 * C1119 - C11440 * C1109 - C11439 * C1120 +
             C153855 * C1127) *
                C154036) *
               C153810 * C564 -
           (C11514 * C154036 + C11515 * C11435 + (C11505 + C11504) * C11434 +
            (C11503 + C11502) * C11433) *
               C153810 * C563 -
           ((C11439 * C1518 - C11440 * C1513 - C11439 * C1519 +
             C153855 * C1528 + C11437 * C596 - C11438 * C575 - C11437 * C597 +
             C154035 * C611) *
                C154036 +
            (C12071 + C12070) * C11435 + (C12069 + C12068) * C11434 +
            (C12067 + C12066) * C11433) *
               C153810 * C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
            C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
            C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
            C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
            C154044 * C1390) *
               C154002 +
           (C35004 + C35005 + C35006 + C35007) * C153648) *
              C153810 * C153711 * C153695 * C130 -
          ((C35008 + C35009 + C35010 + C35011) * C153648 +
           (C35007 + C35006 + C35005 + C35004) * C154002) *
              C153810 * C153711 * C153695 * C131 +
          ((C35011 + C35010 + C35009 + C35008) * C154002 +
           (C35012 + C35013 + C35014 + C35015) * C153648) *
              C153810 * C153711 * C153695 * C132 -
          ((C34929 * C1376 - C34930 * C1371 - C34929 * C1377 + C154044 * C1386 +
            C34927 * C367 - C34928 * C346 - C34927 * C368 + C34919 * C382 +
            C34925 * C349 - C34926 * C337 - C34925 * C350 + C34918 * C373 +
            C34923 * C152 - C34924 * C140 - C34923 * C153 + C34917 * C164) *
               C153648 +
           (C35015 + C35014 + C35013 + C35012) * C154002) *
              C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C154002 +
            (C35004 + C35005 + C35006 + C35007) * C153648) *
               C153810 * C153711 * C332 -
           ((C35258 + C35259 + C35260 + C35261) * C153648 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C154002) *
               C153810 * C153711 * C333 +
           ((C34923 * C359 - C34924 * C342 - C34923 * C360 + C34917 * C378 +
             C34925 * C1384 - C34926 * C1375 - C34925 * C1385 + C34918 * C1390 +
             C34927 * C3193 - C34928 * C3189 - C34927 * C3194 + C34919 * C3201 +
             C34929 * C4808 - C34930 * C4803 - C34929 * C4809 +
             C154044 * C4812) *
                C154002 +
            (C35262 + C35263 + C35264 + C35265) * C153648) *
               C153810 * C153711 * C334) *
              C335 +
          (((C35261 + C35260 + C35259 + C35258) * C154002 +
            (C34923 * C353 - C34924 * C339 - C34923 * C354 + C34917 * C375 +
             C34925 * C363 - C34926 * C344 - C34925 * C364 + C34918 * C380 +
             C34927 * C1380 - C34928 * C1373 - C34927 * C1381 + C34919 * C1388 +
             C34929 * C3197 - C34930 * C3191 - C34929 * C3198 +
             C154044 * C3203) *
                C153648) *
               C153810 * C153711 * C333 -
           ((C35008 + C35009 + C35010 + C35011) * C153648 +
            (C35007 + C35006 + C35005 + C35004) * C154002) *
               C153810 * C153711 * C332 -
           ((C34929 * C4804 - C34930 * C4801 - C34929 * C4805 +
             C154044 * C4810 + C34927 * C3197 - C34928 * C3191 -
             C34927 * C3198 + C34919 * C3203 + C34925 * C1380 - C34926 * C1373 -
             C34925 * C1381 + C34918 * C1388 + C34923 * C363 - C34924 * C344 -
             C34923 * C364 + C34917 * C380) *
                C153648 +
            (C35265 + C35264 + C35263 + C35262) * C154002) *
               C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C154002 +
            (C35004 + C35005 + C35006 + C35007) * C153648) *
               C153810 * C563 -
           ((C35508 + C35509 + C35510 + C35511) * C153648 +
            (C34929 * C4383 - C34930 * C4379 - C34929 * C4384 +
             C154044 * C4391 + C34927 * C1957 - C34928 * C1948 -
             C34927 * C1958 + C34919 * C1963 + C34925 * C1111 - C34926 * C1105 -
             C34925 * C1112 + C34918 * C1123 + C34923 * C586 - C34924 * C570 -
             C34923 * C587 + C34917 * C606) *
                C154002) *
               C153810 * C564 +
           ((C34923 * C588 - C34924 * C571 - C34923 * C589 + C34917 * C607 +
             C34925 * C1526 - C34926 * C1517 - C34925 * C1527 + C34918 * C1532 +
             C34927 * C3511 - C34928 * C3507 - C34927 * C3512 + C34919 * C3519 +
             C34929 * C5038 - C34930 * C5033 - C34929 * C5039 +
             C154044 * C5042) *
                C154002 +
            (C35512 + C35513 + C35514 + C35515) * C153648) *
               C153810 * C565) *
              C153695 * C335 +
          (((C35511 + C35510 + C35509 + C35508) * C154002 +
            (C34923 * C582 - C34924 * C568 - C34923 * C583 + C34917 * C604 +
             C34925 * C1115 - C34926 * C1107 - C34925 * C1116 + C34918 * C1125 +
             C34927 * C1953 - C34928 * C1946 - C34927 * C1954 + C34919 * C1961 +
             C34929 * C4387 - C34930 * C4381 - C34929 * C4388 +
             C154044 * C4393) *
                C153648) *
               C153810 * C564 -
           ((C35008 + C35009 + C35010 + C35011) * C153648 +
            (C35007 + C35006 + C35005 + C35004) * C154002) *
               C153810 * C563 -
           ((C34929 * C5034 - C34930 * C5031 - C34929 * C5035 +
             C154044 * C5040 + C34927 * C3515 - C34928 * C3509 -
             C34927 * C3516 + C34919 * C3521 + C34925 * C1522 - C34926 * C1515 -
             C34925 * C1523 + C34918 * C1530 + C34923 * C592 - C34924 * C573 -
             C34923 * C593 + C34917 * C609) *
                C153648 +
            (C35515 + C35514 + C35513 + C35512) * C154002) *
               C153810 * C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[303] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C11433 +
            (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
               C153810 * C154022 -
           (C12476 * C154036 + C12477 * C11435 + (C12064 + C12065) * C11434 +
            (C11439 * C1111 - C11440 * C1105 - C11439 * C1112 +
             C153855 * C1123 + C11437 * C586 - C11438 * C570 - C11437 * C587 +
             C154035 * C606) *
                C11433) *
               C153810 * C153775) *
              C153695 * C154090 +
          (((C12065 + C12064) * C11433 + (C12063 + C12062) * C11434 +
            (C12061 + C12060) * C11435 + (C12490 + C12491) * C154036) *
               C153810 * C153775 -
           (C11514 * C154036 + C11515 * C11435 + (C11505 + C11504) * C11434 +
            (C11503 + C11502) * C11433) *
               C153810 * C154022) *
              C153695 * C154091 +
          ((C11512 * C11433 + C11513 * C11434 + (C11509 + C11508) * C11435 +
            (C11510 + C11511) * C154036) *
               C153810 * C154022 -
           ((C11439 * C1121 - C11440 * C1110 - C11439 * C1122 +
             C153855 * C1128 + C11437 * C598 - C11438 * C576 - C11437 * C599 +
             C154035 * C612) *
                C154036 +
            (C12491 + C12490) * C11435 + C12476 * C11434 + C12477 * C11433) *
               C153810 * C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C154002 +
            (C35004 + C35005 + C35006 + C35007) * C153648) *
               C153810 * C154022 -
           ((C35508 + C35509 + C35510 + C35511) * C153648 +
            (C34929 * C4383 - C34930 * C4379 - C34929 * C4384 +
             C154044 * C4391 + C34927 * C1957 - C34928 * C1948 -
             C34927 * C1958 + C34919 * C1963 + C34925 * C1111 - C34926 * C1105 -
             C34925 * C1112 + C34918 * C1123 + C34923 * C586 - C34924 * C570 -
             C34923 * C587 + C34917 * C606) *
                C154002) *
               C153810 * C153775) *
              C153695 * C154090 +
          (((C35511 + C35510 + C35509 + C35508) * C154002 +
            (C35956 + C35957 + C35958 + C35959) * C153648) *
               C153810 * C153775 -
           ((C35008 + C35009 + C35010 + C35011) * C153648 +
            (C35007 + C35006 + C35005 + C35004) * C154002) *
               C153810 * C154022) *
              C153695 * C154091 +
          (((C35011 + C35010 + C35009 + C35008) * C154002 +
            (C35012 + C35013 + C35014 + C35015) * C153648) *
               C153810 * C154022 -
           ((C34929 * C4389 - C34930 * C4382 - C34929 * C4390 +
             C154044 * C4394 + C34927 * C1951 - C34928 * C1945 -
             C34927 * C1952 + C34919 * C1960 + C34925 * C1117 - C34926 * C1108 -
             C34925 * C1118 + C34918 * C1126 + C34923 * C580 - C34924 * C567 -
             C34923 * C581 + C34917 * C603) *
                C153648 +
            (C35959 + C35958 + C35957 + C35956) * C154002) *
               C153810 * C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q));
    d2ee[304] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
            C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
               C11433 +
           (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
              C153810 * C153711 * C153695 * C130 -
          (C11514 * C154036 + C11515 * C11435 + (C11505 + C11504) * C11434 +
           (C11503 + C11502) * C11433) *
              C153810 * C153711 * C153695 * C131 +
          (C11512 * C11433 + C11513 * C11434 + (C11509 + C11508) * C11435 +
           (C11510 + C11511) * C154036) *
              C153810 * C153711 * C153695 * C132 -
          ((C11439 * C798 - C11440 * C797 - C11439 * C799 + C153855 * C800 +
            C11437 * C156 - C11438 * C142 - C11437 * C157 + C154035 * C166) *
               C154036 +
           (C11511 + C11510) * C11435 + C11514 * C11434 + C11515 * C11433) *
              C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C11433 +
            (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
               C153810 * C153711 * C332 -
           ((C11782 + C11783) * C154036 + (C11784 + C11785) * C11435 +
            (C11786 + C11787) * C11434 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C11433) *
               C153810 * C153711 * C333 +
           ((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
             C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
             C153855 * C1390) *
                C11433 +
            (C11788 + C11789) * C11434 + (C11790 + C11791) * C11435 +
            (C11792 + C11793) * C154036) *
               C153810 * C153711 * C334) *
              C335 +
          (((C11787 + C11786) * C11433 + (C11785 + C11784) * C11434 +
            (C11783 + C11782) * C11435 +
            (C11437 * C349 - C11438 * C337 - C11437 * C350 + C154035 * C373 +
             C11439 * C367 - C11440 * C346 - C11439 * C368 + C153855 * C382) *
                C154036) *
               C153810 * C153711 * C333 -
           (C11514 * C154036 + C11515 * C11435 + (C11505 + C11504) * C11434 +
            (C11503 + C11502) * C11433) *
               C153810 * C153711 * C332 -
           ((C11439 * C1376 - C11440 * C1371 - C11439 * C1377 +
             C153855 * C1386 + C11437 * C367 - C11438 * C346 - C11437 * C368 +
             C154035 * C382) *
                C154036 +
            (C11793 + C11792) * C11435 + (C11791 + C11790) * C11434 +
            (C11789 + C11788) * C11433) *
               C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
            C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
            C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
            C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
            C154044 * C1390) *
               C154002 +
           (C35004 + C35005 + C35006 + C35007) * C153648) *
              C153810 * C153711 * C153695 * C130 -
          ((C35008 + C35009 + C35010 + C35011) * C153648 +
           (C35007 + C35006 + C35005 + C35004) * C154002) *
              C153810 * C153711 * C153695 * C131 +
          ((C35011 + C35010 + C35009 + C35008) * C154002 +
           (C35012 + C35013 + C35014 + C35015) * C153648) *
              C153810 * C153711 * C153695 * C132 -
          ((C34929 * C1376 - C34930 * C1371 - C34929 * C1377 + C154044 * C1386 +
            C34927 * C367 - C34928 * C346 - C34927 * C368 + C34919 * C382 +
            C34925 * C349 - C34926 * C337 - C34925 * C350 + C34918 * C373 +
            C34923 * C152 - C34924 * C140 - C34923 * C153 + C34917 * C164) *
               C153648 +
           (C35015 + C35014 + C35013 + C35012) * C154002) *
              C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C154002 +
            (C35004 + C35005 + C35006 + C35007) * C153648) *
               C153810 * C153711 * C332 -
           ((C35258 + C35259 + C35260 + C35261) * C153648 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C154002) *
               C153810 * C153711 * C333 +
           ((C34923 * C359 - C34924 * C342 - C34923 * C360 + C34917 * C378 +
             C34925 * C1384 - C34926 * C1375 - C34925 * C1385 + C34918 * C1390 +
             C34927 * C3193 - C34928 * C3189 - C34927 * C3194 + C34919 * C3201 +
             C34929 * C4808 - C34930 * C4803 - C34929 * C4809 +
             C154044 * C4812) *
                C154002 +
            (C35262 + C35263 + C35264 + C35265) * C153648) *
               C153810 * C153711 * C334) *
              C335 +
          (((C35261 + C35260 + C35259 + C35258) * C154002 +
            (C34923 * C353 - C34924 * C339 - C34923 * C354 + C34917 * C375 +
             C34925 * C363 - C34926 * C344 - C34925 * C364 + C34918 * C380 +
             C34927 * C1380 - C34928 * C1373 - C34927 * C1381 + C34919 * C1388 +
             C34929 * C3197 - C34930 * C3191 - C34929 * C3198 +
             C154044 * C3203) *
                C153648) *
               C153810 * C153711 * C333 -
           ((C35008 + C35009 + C35010 + C35011) * C153648 +
            (C35007 + C35006 + C35005 + C35004) * C154002) *
               C153810 * C153711 * C332 -
           ((C34929 * C4804 - C34930 * C4801 - C34929 * C4805 +
             C154044 * C4810 + C34927 * C3197 - C34928 * C3191 -
             C34927 * C3198 + C34919 * C3203 + C34925 * C1380 - C34926 * C1373 -
             C34925 * C1381 + C34918 * C1388 + C34923 * C363 - C34924 * C344 -
             C34923 * C364 + C34917 * C380) *
                C153648 +
            (C35265 + C35264 + C35263 + C35262) * C154002) *
               C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[305] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C11433 +
            (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
               C153810 * C153711 * C154092 -
           (C12266 * C154036 + C12267 * C11435 + (C11786 + C11787) * C11434 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C11433) *
               C153810 * C153711 * C154093 +
           ((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
             C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
             C153855 * C1390) *
                C11433 +
            (C11788 + C11789) * C11434 + (C11790 + C11791) * C11435 +
            (C11792 + C11793) * C154036) *
               C153810 * C153711 * C1657) *
              C154013 +
          (((C11787 + C11786) * C11433 + (C11785 + C11784) * C11434 +
            (C11783 + C11782) * C11435 + (C12280 + C12281) * C154036) *
               C153810 * C153711 * C154093 -
           (C11514 * C154036 + C11515 * C11435 + (C11505 + C11504) * C11434 +
            (C11503 + C11502) * C11433) *
               C153810 * C153711 * C154092 -
           ((C11439 * C1376 - C11440 * C1371 - C11439 * C1377 +
             C153855 * C1386 + C11437 * C367 - C11438 * C346 - C11437 * C368 +
             C154035 * C382) *
                C154036 +
            (C11793 + C11792) * C11435 + (C11791 + C11790) * C11434 +
            (C11789 + C11788) * C11433) *
               C153810 * C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C154002 +
            (C35004 + C35005 + C35006 + C35007) * C153648) *
               C153810 * C153711 * C154092 -
           ((C35258 + C35259 + C35260 + C35261) * C153648 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C154002) *
               C153810 * C153711 * C154093 +
           ((C34923 * C359 - C34924 * C342 - C34923 * C360 + C34917 * C378 +
             C34925 * C1384 - C34926 * C1375 - C34925 * C1385 + C34918 * C1390 +
             C34927 * C3193 - C34928 * C3189 - C34927 * C3194 + C34919 * C3201 +
             C34929 * C4808 - C34930 * C4803 - C34929 * C4809 +
             C154044 * C4812) *
                C154002 +
            (C35262 + C35263 + C35264 + C35265) * C153648) *
               C153810 * C153711 * C1657) *
              C154013 +
          (((C35261 + C35260 + C35259 + C35258) * C154002 +
            (C35734 + C35735 + C35736 + C35737) * C153648) *
               C153810 * C153711 * C154093 -
           ((C35008 + C35009 + C35010 + C35011) * C153648 +
            (C35007 + C35006 + C35005 + C35004) * C154002) *
               C153810 * C153711 * C154092 -
           ((C34929 * C4804 - C34930 * C4801 - C34929 * C4805 +
             C154044 * C4810 + C34927 * C3197 - C34928 * C3191 -
             C34927 * C3198 + C34919 * C3203 + C34925 * C1380 - C34926 * C1373 -
             C34925 * C1381 + C34918 * C1388 + C34923 * C363 - C34924 * C344 -
             C34923 * C364 + C34917 * C380) *
                C153648 +
            (C35265 + C35264 + C35263 + C35262) * C154002) *
               C153810 * C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[306] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C11433 +
            (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
               C153810 * C154022 -
           (C12476 * C154036 + C12477 * C11435 + (C12064 + C12065) * C11434 +
            (C11439 * C1111 - C11440 * C1105 - C11439 * C1112 +
             C153855 * C1123 + C11437 * C586 - C11438 * C570 - C11437 * C587 +
             C154035 * C606) *
                C11433) *
               C153810 * C153775) *
              C154092 +
          (((C11437 * C1111 - C11438 * C1105 - C11437 * C1112 +
             C154035 * C1123 + C11439 * C1957 - C11440 * C1948 -
             C11439 * C1958 + C153855 * C1963) *
                C11433 +
            (C12786 + C12787) * C11434 + (C12788 + C12789) * C11435 +
            (C12790 + C12791) * C154036) *
               C153810 * C153775 -
           (C12266 * C154036 + C12267 * C11435 + (C11786 + C11787) * C11434 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C11433) *
               C153810 * C154022) *
              C154093 +
          (((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
             C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
             C153855 * C1390) *
                C11433 +
            (C11788 + C11789) * C11434 + (C11790 + C11791) * C11435 +
            (C11792 + C11793) * C154036) *
               C153810 * C154022 -
           ((C11439 * C4389 - C11440 * C4382 - C11439 * C4390 +
             C153855 * C4394 + C11437 * C1951 - C11438 * C1945 -
             C11437 * C1952 + C154035 * C1960) *
                C154036 +
            (C11439 * C4387 - C11440 * C4381 - C11439 * C4388 +
             C153855 * C4393 + C11437 * C1953 - C11438 * C1946 -
             C11437 * C1954 + C154035 * C1961) *
                C11435 +
            (C11439 * C4385 - C11440 * C4380 - C11439 * C4386 +
             C153855 * C4392 + C11437 * C1955 - C11438 * C1947 -
             C11437 * C1956 + C154035 * C1962) *
                C11434 +
            (C11439 * C4383 - C11440 * C4379 - C11439 * C4384 +
             C153855 * C4391 + C11437 * C1957 - C11438 * C1948 -
             C11437 * C1958 + C154035 * C1963) *
                C11433) *
               C153810 * C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C154002 +
            (C35004 + C35005 + C35006 + C35007) * C153648) *
               C153810 * C154022 -
           ((C35508 + C35509 + C35510 + C35511) * C153648 +
            (C34929 * C4383 - C34930 * C4379 - C34929 * C4384 +
             C154044 * C4391 + C34927 * C1957 - C34928 * C1948 -
             C34927 * C1958 + C34919 * C1963 + C34925 * C1111 - C34926 * C1105 -
             C34925 * C1112 + C34918 * C1123 + C34923 * C586 - C34924 * C570 -
             C34923 * C587 + C34917 * C606) *
                C154002) *
               C153810 * C153775) *
              C154092 +
          (((C34923 * C1111 - C34924 * C1105 - C34923 * C1112 + C34917 * C1123 +
             C34925 * C1957 - C34926 * C1948 - C34925 * C1958 + C34918 * C1963 +
             C34927 * C4383 - C34928 * C4379 - C34927 * C4384 + C34919 * C4391 +
             C34929 * C5776 - C34930 * C5771 - C34929 * C5777 +
             C154044 * C5780) *
                C154002 +
            (C36242 + C36243 + C36244 + C36245) * C153648) *
               C153810 * C153775 -
           ((C35258 + C35259 + C35260 + C35261) * C153648 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C154002) *
               C153810 * C154022) *
              C154093 +
          (((C34923 * C359 - C34924 * C342 - C34923 * C360 + C34917 * C378 +
             C34925 * C1384 - C34926 * C1375 - C34925 * C1385 + C34918 * C1390 +
             C34927 * C3193 - C34928 * C3189 - C34927 * C3194 + C34919 * C3201 +
             C34929 * C4808 - C34930 * C4803 - C34929 * C4809 +
             C154044 * C4812) *
                C154002 +
            (C35262 + C35263 + C35264 + C35265) * C153648) *
               C153810 * C154022 -
           ((C34929 * C29108 - C34930 * C29105 - C34929 * C29109 +
             C154044 * C29111 + C34927 * C5774 - C34928 * C5770 -
             C34927 * C5775 + C34919 * C5779 + C34925 * C4385 - C34926 * C4380 -
             C34925 * C4386 + C34918 * C4392 + C34923 * C1955 - C34924 * C1947 -
             C34923 * C1956 + C34917 * C1962) *
                C153648 +
            (C34929 * C29106 - C34930 * C29104 - C34929 * C29107 +
             C154044 * C29110 + C34927 * C5776 - C34928 * C5771 -
             C34927 * C5777 + C34919 * C5780 + C34925 * C4383 - C34926 * C4379 -
             C34925 * C4384 + C34918 * C4391 + C34923 * C1957 - C34924 * C1948 -
             C34923 * C1958 + C34917 * C1963) *
                C154002) *
               C153810 * C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[307] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
            C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
               C11433 +
           (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
              C153810 * C153711 * C1366 -
          (C12266 * C154036 + C12267 * C11435 + (C11786 + C11787) * C11434 +
           (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
            C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
               C11433) *
              C153810 * C153711 * C1367 +
          ((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
            C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
            C153855 * C1390) *
               C11433 +
           (C11788 + C11789) * C11434 + (C11790 + C11791) * C11435 +
           (C11792 + C11793) * C154036) *
              C153810 * C153711 * C1368 -
          ((C11439 * C3199 - C11440 * C3192 - C11439 * C3200 + C153855 * C3204 +
            C11437 * C1378 - C11438 * C1372 - C11437 * C1379 +
            C154035 * C1387) *
               C154036 +
           (C11439 * C3197 - C11440 * C3191 - C11439 * C3198 + C153855 * C3203 +
            C11437 * C1380 - C11438 * C1373 - C11437 * C1381 +
            C154035 * C1388) *
               C11435 +
           (C11439 * C3195 - C11440 * C3190 - C11439 * C3196 + C153855 * C3202 +
            C11437 * C1382 - C11438 * C1374 - C11437 * C1383 +
            C154035 * C1389) *
               C11434 +
           (C11439 * C3193 - C11440 * C3189 - C11439 * C3194 + C153855 * C3201 +
            C11437 * C1384 - C11438 * C1375 - C11437 * C1385 +
            C154035 * C1390) *
               C11433) *
              C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C11433 +
            (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
               C153810 * C153711 * C1279 -
           (C12266 * C154036 + C12267 * C11435 + (C11786 + C11787) * C11434 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C11433) *
               C153810 * C153711 * C153747) *
              C1281 +
          (((C11787 + C11786) * C11433 + (C11785 + C11784) * C11434 +
            (C11783 + C11782) * C11435 + (C12280 + C12281) * C154036) *
               C153810 * C153711 * C153747 -
           (C11514 * C154036 + C11515 * C11435 + (C11505 + C11504) * C11434 +
            (C11503 + C11502) * C11433) *
               C153810 * C153711 * C1279) *
              C1282 +
          ((C11512 * C11433 + C11513 * C11434 + (C11509 + C11508) * C11435 +
            (C11510 + C11511) * C154036) *
               C153810 * C153711 * C1279 -
           ((C11439 * C371 - C11440 * C348 - C11439 * C372 + C153855 * C384 +
             C11437 * C369 - C11438 * C347 - C11437 * C370 + C154035 * C383) *
                C154036 +
            (C12281 + C12280) * C11435 + C12266 * C11434 + C12267 * C11433) *
               C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C11433 +
            (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
               C153810 * C563 -
           (C12476 * C154036 + C12477 * C11435 + (C12064 + C12065) * C11434 +
            (C11439 * C1111 - C11440 * C1105 - C11439 * C1112 +
             C153855 * C1123 + C11437 * C586 - C11438 * C570 - C11437 * C587 +
             C154035 * C606) *
                C11433) *
               C153810 * C564 +
           ((C11437 * C588 - C11438 * C571 - C11437 * C589 + C154035 * C607 +
             C11439 * C1526 - C11440 * C1517 - C11439 * C1527 +
             C153855 * C1532) *
                C11433 +
            (C12066 + C12067) * C11434 + (C12068 + C12069) * C11435 +
            (C12070 + C12071) * C154036) *
               C153810 * C565) *
              C1279 +
          (((C11437 * C1111 - C11438 * C1105 - C11437 * C1112 +
             C154035 * C1123 + C11439 * C1957 - C11440 * C1948 -
             C11439 * C1958 + C153855 * C1963) *
                C11433 +
            (C12786 + C12787) * C11434 + (C12788 + C12789) * C11435 +
            (C12790 + C12791) * C154036) *
               C153810 * C564 -
           (C12266 * C154036 + C12267 * C11435 + (C11786 + C11787) * C11434 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C11433) *
               C153810 * C563 -
           ((C11439 * C3517 - C11440 * C3510 - C11439 * C3518 +
             C153855 * C3522 + C11437 * C1520 - C11438 * C1514 -
             C11437 * C1521 + C154035 * C1529) *
                C154036 +
            (C11439 * C3515 - C11440 * C3509 - C11439 * C3516 +
             C153855 * C3521 + C11437 * C1522 - C11438 * C1515 -
             C11437 * C1523 + C154035 * C1530) *
                C11435 +
            (C11439 * C3513 - C11440 * C3508 - C11439 * C3514 +
             C153855 * C3520 + C11437 * C1524 - C11438 * C1516 -
             C11437 * C1525 + C154035 * C1531) *
                C11434 +
            (C11439 * C3511 - C11440 * C3507 - C11439 * C3512 +
             C153855 * C3519 + C11437 * C1526 - C11438 * C1517 -
             C11437 * C1527 + C154035 * C1532) *
                C11433) *
               C153810 * C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C154002 +
            (C35004 + C35005 + C35006 + C35007) * C153648) *
               C153810 * C153711 * C1279 -
           ((C35258 + C35259 + C35260 + C35261) * C153648 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C154002) *
               C153810 * C153711 * C153747) *
              C1281 +
          (((C35261 + C35260 + C35259 + C35258) * C154002 +
            (C35734 + C35735 + C35736 + C35737) * C153648) *
               C153810 * C153711 * C153747 -
           ((C35008 + C35009 + C35010 + C35011) * C153648 +
            (C35007 + C35006 + C35005 + C35004) * C154002) *
               C153810 * C153711 * C1279) *
              C1282 +
          (((C35011 + C35010 + C35009 + C35008) * C154002 +
            (C35012 + C35013 + C35014 + C35015) * C153648) *
               C153810 * C153711 * C1279 -
           ((C34929 * C3199 - C34930 * C3192 - C34929 * C3200 +
             C154044 * C3204 + C34927 * C1378 - C34928 * C1372 -
             C34927 * C1379 + C34919 * C1387 + C34925 * C365 - C34926 * C345 -
             C34925 * C366 + C34918 * C381 + C34923 * C351 - C34924 * C338 -
             C34923 * C352 + C34917 * C374) *
                C153648 +
            (C35737 + C35736 + C35735 + C35734) * C154002) *
               C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
            C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
            C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
            C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
            C154044 * C1390) *
               C154002 +
           (C35004 + C35005 + C35006 + C35007) * C153648) *
              C153810 * C153711 * C1366 -
          ((C35258 + C35259 + C35260 + C35261) * C153648 +
           (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 + C154044 * C3201 +
            C34927 * C1384 - C34928 * C1375 - C34927 * C1385 + C34919 * C1390 +
            C34925 * C359 - C34926 * C342 - C34925 * C360 + C34918 * C378 +
            C34923 * C357 - C34924 * C341 - C34923 * C358 + C34917 * C377) *
               C154002) *
              C153810 * C153711 * C1367 +
          ((C34923 * C359 - C34924 * C342 - C34923 * C360 + C34917 * C378 +
            C34925 * C1384 - C34926 * C1375 - C34925 * C1385 + C34918 * C1390 +
            C34927 * C3193 - C34928 * C3189 - C34927 * C3194 + C34919 * C3201 +
            C34929 * C4808 - C34930 * C4803 - C34929 * C4809 +
            C154044 * C4812) *
               C154002 +
           (C35262 + C35263 + C35264 + C35265) * C153648) *
              C153810 * C153711 * C1368 -
          ((C34929 * C28564 - C34930 * C28561 - C34929 * C28565 +
            C154044 * C28567 + C34927 * C4806 - C34928 * C4802 -
            C34927 * C4807 + C34919 * C4811 + C34925 * C3195 - C34926 * C3190 -
            C34925 * C3196 + C34918 * C3202 + C34923 * C1382 - C34924 * C1374 -
            C34923 * C1383 + C34917 * C1389) *
               C153648 +
           (C34929 * C28562 - C34930 * C28560 - C34929 * C28563 +
            C154044 * C28566 + C34927 * C4808 - C34928 * C4803 -
            C34927 * C4809 + C34919 * C4812 + C34925 * C3193 - C34926 * C3189 -
            C34925 * C3194 + C34918 * C3201 + C34923 * C1384 - C34924 * C1375 -
            C34923 * C1385 + C34917 * C1390) *
               C154002) *
              C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C154002 +
            (C35004 + C35005 + C35006 + C35007) * C153648) *
               C153810 * C563 -
           ((C35508 + C35509 + C35510 + C35511) * C153648 +
            (C34929 * C4383 - C34930 * C4379 - C34929 * C4384 +
             C154044 * C4391 + C34927 * C1957 - C34928 * C1948 -
             C34927 * C1958 + C34919 * C1963 + C34925 * C1111 - C34926 * C1105 -
             C34925 * C1112 + C34918 * C1123 + C34923 * C586 - C34924 * C570 -
             C34923 * C587 + C34917 * C606) *
                C154002) *
               C153810 * C564 +
           ((C34923 * C588 - C34924 * C571 - C34923 * C589 + C34917 * C607 +
             C34925 * C1526 - C34926 * C1517 - C34925 * C1527 + C34918 * C1532 +
             C34927 * C3511 - C34928 * C3507 - C34927 * C3512 + C34919 * C3519 +
             C34929 * C5038 - C34930 * C5033 - C34929 * C5039 +
             C154044 * C5042) *
                C154002 +
            (C35512 + C35513 + C35514 + C35515) * C153648) *
               C153810 * C565) *
              C1279 +
          (((C34923 * C1111 - C34924 * C1105 - C34923 * C1112 + C34917 * C1123 +
             C34925 * C1957 - C34926 * C1948 - C34925 * C1958 + C34918 * C1963 +
             C34927 * C4383 - C34928 * C4379 - C34927 * C4384 + C34919 * C4391 +
             C34929 * C5776 - C34930 * C5771 - C34929 * C5777 +
             C154044 * C5780) *
                C154002 +
            (C36242 + C36243 + C36244 + C36245) * C153648) *
               C153810 * C564 -
           ((C35258 + C35259 + C35260 + C35261) * C153648 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C154002) *
               C153810 * C563 -
           ((C34929 * C28694 - C34930 * C28691 - C34929 * C28695 +
             C154044 * C28697 + C34927 * C5036 - C34928 * C5032 -
             C34927 * C5037 + C34919 * C5041 + C34925 * C3513 - C34926 * C3508 -
             C34925 * C3514 + C34918 * C3520 + C34923 * C1524 - C34924 * C1516 -
             C34923 * C1525 + C34917 * C1531) *
                C153648 +
            (C34929 * C28692 - C34930 * C28690 - C34929 * C28693 +
             C154044 * C28696 + C34927 * C5038 - C34928 * C5033 -
             C34927 * C5039 + C34919 * C5042 + C34925 * C3511 - C34926 * C3507 -
             C34925 * C3512 + C34918 * C3519 + C34923 * C1526 - C34924 * C1517 -
             C34923 * C1527 + C34917 * C1532) *
                C154002) *
               C153810 * C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[308] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C11433 +
             (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
                C153810 * C154022 -
            (C12476 * C154036 + C12477 * C11435 + (C12064 + C12065) * C11434 +
             (C11439 * C1111 - C11440 * C1105 - C11439 * C1112 +
              C153855 * C1123 + C11437 * C586 - C11438 * C570 - C11437 * C587 +
              C154035 * C606) *
                 C11433) *
                C153810 * C153775) *
               C1279 +
           (((C11437 * C1111 - C11438 * C1105 - C11437 * C1112 +
              C154035 * C1123 + C11439 * C1957 - C11440 * C1948 -
              C11439 * C1958 + C153855 * C1963) *
                 C11433 +
             (C12786 + C12787) * C11434 + (C12788 + C12789) * C11435 +
             (C12790 + C12791) * C154036) *
                C153810 * C153775 -
            (C12266 * C154036 + C12267 * C11435 + (C11786 + C11787) * C11434 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C11433) *
                C153810 * C154022) *
               C153747) *
              C154013 +
          ((((C12065 + C12064) * C11433 + (C12063 + C12062) * C11434 +
             (C12061 + C12060) * C11435 + (C12490 + C12491) * C154036) *
                C153810 * C153775 -
            (C11514 * C154036 + C11515 * C11435 + (C11505 + C11504) * C11434 +
             (C11503 + C11502) * C11433) *
                C153810 * C154022) *
               C1279 +
           (((C11787 + C11786) * C11433 + (C11785 + C11784) * C11434 +
             (C11783 + C11782) * C11435 + (C12280 + C12281) * C154036) *
                C153810 * C154022 -
            ((C11439 * C1949 - C11440 * C1944 - C11439 * C1950 +
              C153855 * C1959 + C11437 * C1119 - C11438 * C1109 -
              C11437 * C1120 + C154035 * C1127) *
                 C154036 +
             (C12791 + C12790) * C11435 + (C12789 + C12788) * C11434 +
             (C12787 + C12786) * C11433) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
              C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
              C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
              C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
              C154044 * C1390) *
                 C154002 +
             (C35004 + C35005 + C35006 + C35007) * C153648) *
                C153810 * C154022 -
            ((C35508 + C35509 + C35510 + C35511) * C153648 +
             (C34929 * C4383 - C34930 * C4379 - C34929 * C4384 +
              C154044 * C4391 + C34927 * C1957 - C34928 * C1948 -
              C34927 * C1958 + C34919 * C1963 + C34925 * C1111 -
              C34926 * C1105 - C34925 * C1112 + C34918 * C1123 + C34923 * C586 -
              C34924 * C570 - C34923 * C587 + C34917 * C606) *
                 C154002) *
                C153810 * C153775) *
               C1279 +
           (((C34923 * C1111 - C34924 * C1105 - C34923 * C1112 +
              C34917 * C1123 + C34925 * C1957 - C34926 * C1948 -
              C34925 * C1958 + C34918 * C1963 + C34927 * C4383 -
              C34928 * C4379 - C34927 * C4384 + C34919 * C4391 +
              C34929 * C5776 - C34930 * C5771 - C34929 * C5777 +
              C154044 * C5780) *
                 C154002 +
             (C36242 + C36243 + C36244 + C36245) * C153648) *
                C153810 * C153775 -
            ((C35258 + C35259 + C35260 + C35261) * C153648 +
             (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
              C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
              C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
              C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
              C34923 * C358 + C34917 * C377) *
                 C154002) *
                C153810 * C154022) *
               C153747) *
              C154013 +
          ((((C35511 + C35510 + C35509 + C35508) * C154002 +
             (C35956 + C35957 + C35958 + C35959) * C153648) *
                C153810 * C153775 -
            ((C35008 + C35009 + C35010 + C35011) * C153648 +
             (C35007 + C35006 + C35005 + C35004) * C154002) *
                C153810 * C154022) *
               C1279 +
           (((C35261 + C35260 + C35259 + C35258) * C154002 +
             (C35734 + C35735 + C35736 + C35737) * C153648) *
                C153810 * C154022 -
            ((C34929 * C5772 - C34930 * C5769 - C34929 * C5773 +
              C154044 * C5778 + C34927 * C4387 - C34928 * C4381 -
              C34927 * C4388 + C34919 * C4393 + C34925 * C1953 -
              C34926 * C1946 - C34925 * C1954 + C34918 * C1961 +
              C34923 * C1115 - C34924 * C1107 - C34923 * C1116 +
              C34917 * C1125) *
                 C153648 +
             (C36245 + C36244 + C36243 + C36242) * C154002) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[309] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C11433 +
            (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
               C153810 * C153711 * C1279 -
           (C12266 * C154036 + C12267 * C11435 + (C11786 + C11787) * C11434 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C11433) *
               C153810 * C153711 * C153747) *
              C1281 +
          (((C11787 + C11786) * C11433 + (C11785 + C11784) * C11434 +
            (C11783 + C11782) * C11435 + (C12280 + C12281) * C154036) *
               C153810 * C153711 * C153747 -
           (C11514 * C154036 + C11515 * C11435 + (C11505 + C11504) * C11434 +
            (C11503 + C11502) * C11433) *
               C153810 * C153711 * C1279) *
              C1282 +
          ((C11512 * C11433 + C11513 * C11434 + (C11509 + C11508) * C11435 +
            (C11510 + C11511) * C154036) *
               C153810 * C153711 * C1279 -
           ((C11439 * C371 - C11440 * C348 - C11439 * C372 + C153855 * C384 +
             C11437 * C369 - C11438 * C347 - C11437 * C370 + C154035 * C383) *
                C154036 +
            (C12281 + C12280) * C11435 + C12266 * C11434 + C12267 * C11433) *
               C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
            C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
               C11433 +
           (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
              C153810 * C153711 * C1366 -
          (C12266 * C154036 + C12267 * C11435 + (C11786 + C11787) * C11434 +
           (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
            C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
               C11433) *
              C153810 * C153711 * C1367 +
          ((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
            C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
            C153855 * C1390) *
               C11433 +
           (C11788 + C11789) * C11434 + (C11790 + C11791) * C11435 +
           (C11792 + C11793) * C154036) *
              C153810 * C153711 * C1368 -
          ((C11439 * C3199 - C11440 * C3192 - C11439 * C3200 + C153855 * C3204 +
            C11437 * C1378 - C11438 * C1372 - C11437 * C1379 +
            C154035 * C1387) *
               C154036 +
           (C11439 * C3197 - C11440 * C3191 - C11439 * C3198 + C153855 * C3203 +
            C11437 * C1380 - C11438 * C1373 - C11437 * C1381 +
            C154035 * C1388) *
               C11435 +
           (C11439 * C3195 - C11440 * C3190 - C11439 * C3196 + C153855 * C3202 +
            C11437 * C1382 - C11438 * C1374 - C11437 * C1383 +
            C154035 * C1389) *
               C11434 +
           (C11439 * C3193 - C11440 * C3189 - C11439 * C3194 + C153855 * C3201 +
            C11437 * C1384 - C11438 * C1375 - C11437 * C1385 +
            C154035 * C1390) *
               C11433) *
              C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C154002 +
            (C35004 + C35005 + C35006 + C35007) * C153648) *
               C153810 * C153711 * C1279 -
           ((C35258 + C35259 + C35260 + C35261) * C153648 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C154002) *
               C153810 * C153711 * C153747) *
              C1281 +
          (((C35261 + C35260 + C35259 + C35258) * C154002 +
            (C35734 + C35735 + C35736 + C35737) * C153648) *
               C153810 * C153711 * C153747 -
           ((C35008 + C35009 + C35010 + C35011) * C153648 +
            (C35007 + C35006 + C35005 + C35004) * C154002) *
               C153810 * C153711 * C1279) *
              C1282 +
          (((C35011 + C35010 + C35009 + C35008) * C154002 +
            (C35012 + C35013 + C35014 + C35015) * C153648) *
               C153810 * C153711 * C1279 -
           ((C34929 * C3199 - C34930 * C3192 - C34929 * C3200 +
             C154044 * C3204 + C34927 * C1378 - C34928 * C1372 -
             C34927 * C1379 + C34919 * C1387 + C34925 * C365 - C34926 * C345 -
             C34925 * C366 + C34918 * C381 + C34923 * C351 - C34924 * C338 -
             C34923 * C352 + C34917 * C374) *
                C153648 +
            (C35737 + C35736 + C35735 + C35734) * C154002) *
               C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
            C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
            C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
            C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
            C154044 * C1390) *
               C154002 +
           (C35004 + C35005 + C35006 + C35007) * C153648) *
              C153810 * C153711 * C1366 -
          ((C35258 + C35259 + C35260 + C35261) * C153648 +
           (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 + C154044 * C3201 +
            C34927 * C1384 - C34928 * C1375 - C34927 * C1385 + C34919 * C1390 +
            C34925 * C359 - C34926 * C342 - C34925 * C360 + C34918 * C378 +
            C34923 * C357 - C34924 * C341 - C34923 * C358 + C34917 * C377) *
               C154002) *
              C153810 * C153711 * C1367 +
          ((C34923 * C359 - C34924 * C342 - C34923 * C360 + C34917 * C378 +
            C34925 * C1384 - C34926 * C1375 - C34925 * C1385 + C34918 * C1390 +
            C34927 * C3193 - C34928 * C3189 - C34927 * C3194 + C34919 * C3201 +
            C34929 * C4808 - C34930 * C4803 - C34929 * C4809 +
            C154044 * C4812) *
               C154002 +
           (C35262 + C35263 + C35264 + C35265) * C153648) *
              C153810 * C153711 * C1368 -
          ((C34929 * C28564 - C34930 * C28561 - C34929 * C28565 +
            C154044 * C28567 + C34927 * C4806 - C34928 * C4802 -
            C34927 * C4807 + C34919 * C4811 + C34925 * C3195 - C34926 * C3190 -
            C34925 * C3196 + C34918 * C3202 + C34923 * C1382 - C34924 * C1374 -
            C34923 * C1383 + C34917 * C1389) *
               C153648 +
           (C34929 * C28562 - C34930 * C28560 - C34929 * C28563 +
            C154044 * C28566 + C34927 * C4808 - C34928 * C4803 -
            C34927 * C4809 + C34919 * C4812 + C34925 * C3193 - C34926 * C3189 -
            C34925 * C3194 + C34918 * C3201 + C34923 * C1384 - C34924 * C1375 -
            C34923 * C1385 + C34917 * C1390) *
               C154002) *
              C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[310] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C11433 +
             (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
                C153810 * C2086 -
            (C12476 * C154036 + C12477 * C11435 + (C12064 + C12065) * C11434 +
             (C11439 * C1111 - C11440 * C1105 - C11439 * C1112 +
              C153855 * C1123 + C11437 * C586 - C11438 * C570 - C11437 * C587 +
              C154035 * C606) *
                 C11433) *
                C153810 * C153775) *
               C154021 +
           (((C11437 * C1111 - C11438 * C1105 - C11437 * C1112 +
              C154035 * C1123 + C11439 * C1957 - C11440 * C1948 -
              C11439 * C1958 + C153855 * C1963) *
                 C11433 +
             (C12786 + C12787) * C11434 + (C12788 + C12789) * C11435 +
             (C12790 + C12791) * C154036) *
                C153810 * C153775 -
            (C12266 * C154036 + C12267 * C11435 + (C11786 + C11787) * C11434 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C11433) *
                C153810 * C2086) *
               C153747) *
              C154013 +
          ((((C12065 + C12064) * C11433 + (C12063 + C12062) * C11434 +
             (C12061 + C12060) * C11435 + (C12490 + C12491) * C154036) *
                C153810 * C153775 -
            (C11514 * C154036 + C11515 * C11435 + (C11505 + C11504) * C11434 +
             (C11503 + C11502) * C11433) *
                C153810 * C2086) *
               C154021 +
           (((C11787 + C11786) * C11433 + (C11785 + C11784) * C11434 +
             (C11783 + C11782) * C11435 + (C12280 + C12281) * C154036) *
                C153810 * C2086 -
            ((C11439 * C1949 - C11440 * C1944 - C11439 * C1950 +
              C153855 * C1959 + C11437 * C1119 - C11438 * C1109 -
              C11437 * C1120 + C154035 * C1127) *
                 C154036 +
             (C12791 + C12790) * C11435 + (C12789 + C12788) * C11434 +
             (C12787 + C12786) * C11433) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
              C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
              C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
              C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
              C154044 * C1390) *
                 C154002 +
             (C35004 + C35005 + C35006 + C35007) * C153648) *
                C153810 * C2086 -
            ((C35508 + C35509 + C35510 + C35511) * C153648 +
             (C34929 * C4383 - C34930 * C4379 - C34929 * C4384 +
              C154044 * C4391 + C34927 * C1957 - C34928 * C1948 -
              C34927 * C1958 + C34919 * C1963 + C34925 * C1111 -
              C34926 * C1105 - C34925 * C1112 + C34918 * C1123 + C34923 * C586 -
              C34924 * C570 - C34923 * C587 + C34917 * C606) *
                 C154002) *
                C153810 * C153775) *
               C154021 +
           (((C34923 * C1111 - C34924 * C1105 - C34923 * C1112 +
              C34917 * C1123 + C34925 * C1957 - C34926 * C1948 -
              C34925 * C1958 + C34918 * C1963 + C34927 * C4383 -
              C34928 * C4379 - C34927 * C4384 + C34919 * C4391 +
              C34929 * C5776 - C34930 * C5771 - C34929 * C5777 +
              C154044 * C5780) *
                 C154002 +
             (C36242 + C36243 + C36244 + C36245) * C153648) *
                C153810 * C153775 -
            ((C35258 + C35259 + C35260 + C35261) * C153648 +
             (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
              C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
              C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
              C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
              C34923 * C358 + C34917 * C377) *
                 C154002) *
                C153810 * C2086) *
               C153747) *
              C154013 +
          ((((C35511 + C35510 + C35509 + C35508) * C154002 +
             (C35956 + C35957 + C35958 + C35959) * C153648) *
                C153810 * C153775 -
            ((C35008 + C35009 + C35010 + C35011) * C153648 +
             (C35007 + C35006 + C35005 + C35004) * C154002) *
                C153810 * C2086) *
               C154021 +
           (((C35261 + C35260 + C35259 + C35258) * C154002 +
             (C35734 + C35735 + C35736 + C35737) * C153648) *
                C153810 * C2086 -
            ((C34929 * C5772 - C34930 * C5769 - C34929 * C5773 +
              C154044 * C5778 + C34927 * C4387 - C34928 * C4381 -
              C34927 * C4388 + C34919 * C4393 + C34925 * C1953 -
              C34926 * C1946 - C34925 * C1954 + C34918 * C1961 +
              C34923 * C1115 - C34924 * C1107 - C34923 * C1116 +
              C34917 * C1125) *
                 C153648 +
             (C36245 + C36244 + C36243 + C36242) * C154002) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[311] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C11433 +
            (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
               C153810 * C154094 -
           (C12476 * C154036 + C12477 * C11435 + (C12064 + C12065) * C11434 +
            (C11439 * C1111 - C11440 * C1105 - C11439 * C1112 +
             C153855 * C1123 + C11437 * C586 - C11438 * C570 - C11437 * C587 +
             C154035 * C606) *
                C11433) *
               C153810 * C154095 +
           ((C11437 * C588 - C11438 * C571 - C11437 * C589 + C154035 * C607 +
             C11439 * C1526 - C11440 * C1517 - C11439 * C1527 +
             C153855 * C1532) *
                C11433 +
            (C12066 + C12067) * C11434 + (C12068 + C12069) * C11435 +
            (C12070 + C12071) * C154036) *
               C153810 * C2602) *
              C154021 +
          (((C11437 * C1111 - C11438 * C1105 - C11437 * C1112 +
             C154035 * C1123 + C11439 * C1957 - C11440 * C1948 -
             C11439 * C1958 + C153855 * C1963) *
                C11433 +
            (C12786 + C12787) * C11434 + (C12788 + C12789) * C11435 +
            (C12790 + C12791) * C154036) *
               C153810 * C154095 -
           (C12266 * C154036 + C12267 * C11435 + (C11786 + C11787) * C11434 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C11433) *
               C153810 * C154094 -
           ((C11439 * C3517 - C11440 * C3510 - C11439 * C3518 +
             C153855 * C3522 + C11437 * C1520 - C11438 * C1514 -
             C11437 * C1521 + C154035 * C1529) *
                C154036 +
            (C11439 * C3515 - C11440 * C3509 - C11439 * C3516 +
             C153855 * C3521 + C11437 * C1522 - C11438 * C1515 -
             C11437 * C1523 + C154035 * C1530) *
                C11435 +
            (C11439 * C3513 - C11440 * C3508 - C11439 * C3514 +
             C153855 * C3520 + C11437 * C1524 - C11438 * C1516 -
             C11437 * C1525 + C154035 * C1531) *
                C11434 +
            (C11439 * C3511 - C11440 * C3507 - C11439 * C3512 +
             C153855 * C3519 + C11437 * C1526 - C11438 * C1517 -
             C11437 * C1527 + C154035 * C1532) *
                C11433) *
               C153810 * C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C154002 +
            (C35004 + C35005 + C35006 + C35007) * C153648) *
               C153810 * C154094 -
           ((C35508 + C35509 + C35510 + C35511) * C153648 +
            (C34929 * C4383 - C34930 * C4379 - C34929 * C4384 +
             C154044 * C4391 + C34927 * C1957 - C34928 * C1948 -
             C34927 * C1958 + C34919 * C1963 + C34925 * C1111 - C34926 * C1105 -
             C34925 * C1112 + C34918 * C1123 + C34923 * C586 - C34924 * C570 -
             C34923 * C587 + C34917 * C606) *
                C154002) *
               C153810 * C154095 +
           ((C34923 * C588 - C34924 * C571 - C34923 * C589 + C34917 * C607 +
             C34925 * C1526 - C34926 * C1517 - C34925 * C1527 + C34918 * C1532 +
             C34927 * C3511 - C34928 * C3507 - C34927 * C3512 + C34919 * C3519 +
             C34929 * C5038 - C34930 * C5033 - C34929 * C5039 +
             C154044 * C5042) *
                C154002 +
            (C35512 + C35513 + C35514 + C35515) * C153648) *
               C153810 * C2602) *
              C154021 +
          (((C34923 * C1111 - C34924 * C1105 - C34923 * C1112 + C34917 * C1123 +
             C34925 * C1957 - C34926 * C1948 - C34925 * C1958 + C34918 * C1963 +
             C34927 * C4383 - C34928 * C4379 - C34927 * C4384 + C34919 * C4391 +
             C34929 * C5776 - C34930 * C5771 - C34929 * C5777 +
             C154044 * C5780) *
                C154002 +
            (C36242 + C36243 + C36244 + C36245) * C153648) *
               C153810 * C154095 -
           ((C35258 + C35259 + C35260 + C35261) * C153648 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C154002) *
               C153810 * C154094 -
           ((C34929 * C28694 - C34930 * C28691 - C34929 * C28695 +
             C154044 * C28697 + C34927 * C5036 - C34928 * C5032 -
             C34927 * C5037 + C34919 * C5041 + C34925 * C3513 - C34926 * C3508 -
             C34925 * C3514 + C34918 * C3520 + C34923 * C1524 - C34924 * C1516 -
             C34923 * C1525 + C34917 * C1531) *
                C153648 +
            (C34929 * C28692 - C34930 * C28690 - C34929 * C28693 +
             C154044 * C28696 + C34927 * C5038 - C34928 * C5033 -
             C34927 * C5039 + C34919 * C5042 + C34925 * C3511 - C34926 * C3507 -
             C34925 * C3512 + C34918 * C3519 + C34923 * C1526 - C34924 * C1517 -
             C34923 * C1527 + C34917 * C1532) *
                C154002) *
               C153810 * C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[312] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C11433 +
            (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
               C153810 * C2086 -
           (C12476 * C154036 + C12477 * C11435 + (C12064 + C12065) * C11434 +
            (C11439 * C1111 - C11440 * C1105 - C11439 * C1112 +
             C153855 * C1123 + C11437 * C586 - C11438 * C570 - C11437 * C587 +
             C154035 * C606) *
                C11433) *
               C153810 * C153775) *
              C332 +
          (((C11437 * C1111 - C11438 * C1105 - C11437 * C1112 +
             C154035 * C1123 + C11439 * C1957 - C11440 * C1948 -
             C11439 * C1958 + C153855 * C1963) *
                C11433 +
            (C12786 + C12787) * C11434 + (C12788 + C12789) * C11435 +
            (C12790 + C12791) * C154036) *
               C153810 * C153775 -
           (C12266 * C154036 + C12267 * C11435 + (C11786 + C11787) * C11434 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C11433) *
               C153810 * C2086) *
              C333 +
          (((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
             C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
             C153855 * C1390) *
                C11433 +
            (C11788 + C11789) * C11434 + (C11790 + C11791) * C11435 +
            (C11792 + C11793) * C154036) *
               C153810 * C2086 -
           ((C11439 * C4389 - C11440 * C4382 - C11439 * C4390 +
             C153855 * C4394 + C11437 * C1951 - C11438 * C1945 -
             C11437 * C1952 + C154035 * C1960) *
                C154036 +
            (C11439 * C4387 - C11440 * C4381 - C11439 * C4388 +
             C153855 * C4393 + C11437 * C1953 - C11438 * C1946 -
             C11437 * C1954 + C154035 * C1961) *
                C11435 +
            (C11439 * C4385 - C11440 * C4380 - C11439 * C4386 +
             C153855 * C4392 + C11437 * C1955 - C11438 * C1947 -
             C11437 * C1956 + C154035 * C1962) *
                C11434 +
            (C11439 * C4383 - C11440 * C4379 - C11439 * C4384 +
             C153855 * C4391 + C11437 * C1957 - C11438 * C1948 -
             C11437 * C1958 + C154035 * C1963) *
                C11433) *
               C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C11433 +
            (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
               C153810 * C2086 -
           (C12476 * C154036 + C12477 * C11435 + (C12064 + C12065) * C11434 +
            (C11439 * C1111 - C11440 * C1105 - C11439 * C1112 +
             C153855 * C1123 + C11437 * C586 - C11438 * C570 - C11437 * C587 +
             C154035 * C606) *
                C11433) *
               C153810 * C153775) *
              C153695 * C1281 +
          (((C12065 + C12064) * C11433 + (C12063 + C12062) * C11434 +
            (C12061 + C12060) * C11435 + (C12490 + C12491) * C154036) *
               C153810 * C153775 -
           (C11514 * C154036 + C11515 * C11435 + (C11505 + C11504) * C11434 +
            (C11503 + C11502) * C11433) *
               C153810 * C2086) *
              C153695 * C1282 +
          ((C11512 * C11433 + C11513 * C11434 + (C11509 + C11508) * C11435 +
            (C11510 + C11511) * C154036) *
               C153810 * C2086 -
           ((C11439 * C1121 - C11440 * C1110 - C11439 * C1122 +
             C153855 * C1128 + C11437 * C598 - C11438 * C576 - C11437 * C599 +
             C154035 * C612) *
                C154036 +
            (C12491 + C12490) * C11435 + C12476 * C11434 + C12477 * C11433) *
               C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
            C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
               C11433 +
           (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
              C153810 * C2292 -
          (C12476 * C154036 + C12477 * C11435 + (C12064 + C12065) * C11434 +
           (C11439 * C1111 - C11440 * C1105 - C11439 * C1112 + C153855 * C1123 +
            C11437 * C586 - C11438 * C570 - C11437 * C587 + C154035 * C606) *
               C11433) *
              C153810 * C2293 +
          ((C11437 * C588 - C11438 * C571 - C11437 * C589 + C154035 * C607 +
            C11439 * C1526 - C11440 * C1517 - C11439 * C1527 +
            C153855 * C1532) *
               C11433 +
           (C12066 + C12067) * C11434 + (C12068 + C12069) * C11435 +
           (C12070 + C12071) * C154036) *
              C153810 * C2294 -
          ((C11439 * C8574 - C11440 * C8573 - C11439 * C8575 + C153855 * C8576 +
            C11437 * C2303 - C11438 * C2297 - C11437 * C2304 +
            C154035 * C2312) *
               C154036 +
           (C11439 * C6371 - C11440 * C6364 - C11439 * C6372 + C153855 * C6382 +
            C11437 * C2305 - C11438 * C2298 - C11437 * C2306 +
            C154035 * C2313) *
               C11435 +
           (C11439 * C6375 - C11440 * C6366 - C11439 * C6376 + C153855 * C6384 +
            C11437 * C2307 - C11438 * C2299 - C11437 * C2308 +
            C154035 * C2314) *
               C11434 +
           (C11439 * C6379 - C11440 * C6368 - C11439 * C6380 + C153855 * C6386 +
            C11437 * C2309 - C11438 * C2300 - C11437 * C2310 +
            C154035 * C2315) *
               C11433) *
              C153810 * C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C154002 +
            (C35004 + C35005 + C35006 + C35007) * C153648) *
               C153810 * C2086 -
           ((C35508 + C35509 + C35510 + C35511) * C153648 +
            (C34929 * C4383 - C34930 * C4379 - C34929 * C4384 +
             C154044 * C4391 + C34927 * C1957 - C34928 * C1948 -
             C34927 * C1958 + C34919 * C1963 + C34925 * C1111 - C34926 * C1105 -
             C34925 * C1112 + C34918 * C1123 + C34923 * C586 - C34924 * C570 -
             C34923 * C587 + C34917 * C606) *
                C154002) *
               C153810 * C153775) *
              C153695 * C1281 +
          (((C35511 + C35510 + C35509 + C35508) * C154002 +
            (C35956 + C35957 + C35958 + C35959) * C153648) *
               C153810 * C153775 -
           ((C35008 + C35009 + C35010 + C35011) * C153648 +
            (C35007 + C35006 + C35005 + C35004) * C154002) *
               C153810 * C2086) *
              C153695 * C1282 +
          (((C35011 + C35010 + C35009 + C35008) * C154002 +
            (C35012 + C35013 + C35014 + C35015) * C153648) *
               C153810 * C2086 -
           ((C34929 * C4389 - C34930 * C4382 - C34929 * C4390 +
             C154044 * C4394 + C34927 * C1951 - C34928 * C1945 -
             C34927 * C1952 + C34919 * C1960 + C34925 * C1117 - C34926 * C1108 -
             C34925 * C1118 + C34918 * C1126 + C34923 * C580 - C34924 * C567 -
             C34923 * C581 + C34917 * C603) *
                C153648 +
            (C35959 + C35958 + C35957 + C35956) * C154002) *
               C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C154002 +
            (C35004 + C35005 + C35006 + C35007) * C153648) *
               C153810 * C2086 -
           ((C35508 + C35509 + C35510 + C35511) * C153648 +
            (C34929 * C4383 - C34930 * C4379 - C34929 * C4384 +
             C154044 * C4391 + C34927 * C1957 - C34928 * C1948 -
             C34927 * C1958 + C34919 * C1963 + C34925 * C1111 - C34926 * C1105 -
             C34925 * C1112 + C34918 * C1123 + C34923 * C586 - C34924 * C570 -
             C34923 * C587 + C34917 * C606) *
                C154002) *
               C153810 * C153775) *
              C332 +
          (((C34923 * C1111 - C34924 * C1105 - C34923 * C1112 + C34917 * C1123 +
             C34925 * C1957 - C34926 * C1948 - C34925 * C1958 + C34918 * C1963 +
             C34927 * C4383 - C34928 * C4379 - C34927 * C4384 + C34919 * C4391 +
             C34929 * C5776 - C34930 * C5771 - C34929 * C5777 +
             C154044 * C5780) *
                C154002 +
            (C36242 + C36243 + C36244 + C36245) * C153648) *
               C153810 * C153775 -
           ((C35258 + C35259 + C35260 + C35261) * C153648 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C154002) *
               C153810 * C2086) *
              C333 +
          (((C34923 * C359 - C34924 * C342 - C34923 * C360 + C34917 * C378 +
             C34925 * C1384 - C34926 * C1375 - C34925 * C1385 + C34918 * C1390 +
             C34927 * C3193 - C34928 * C3189 - C34927 * C3194 + C34919 * C3201 +
             C34929 * C4808 - C34930 * C4803 - C34929 * C4809 +
             C154044 * C4812) *
                C154002 +
            (C35262 + C35263 + C35264 + C35265) * C153648) *
               C153810 * C2086 -
           ((C34929 * C29108 - C34930 * C29105 - C34929 * C29109 +
             C154044 * C29111 + C34927 * C5774 - C34928 * C5770 -
             C34927 * C5775 + C34919 * C5779 + C34925 * C4385 - C34926 * C4380 -
             C34925 * C4386 + C34918 * C4392 + C34923 * C1955 - C34924 * C1947 -
             C34923 * C1956 + C34917 * C1962) *
                C153648 +
            (C34929 * C29106 - C34930 * C29104 - C34929 * C29107 +
             C154044 * C29110 + C34927 * C5776 - C34928 * C5771 -
             C34927 * C5777 + C34919 * C5780 + C34925 * C4383 - C34926 * C4379 -
             C34925 * C4384 + C34918 * C4391 + C34923 * C1957 - C34924 * C1948 -
             C34923 * C1958 + C34917 * C1963) *
                C154002) *
               C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
            C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
            C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
            C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
            C154044 * C1390) *
               C154002 +
           (C35004 + C35005 + C35006 + C35007) * C153648) *
              C153810 * C2292 -
          ((C35508 + C35509 + C35510 + C35511) * C153648 +
           (C34929 * C4383 - C34930 * C4379 - C34929 * C4384 + C154044 * C4391 +
            C34927 * C1957 - C34928 * C1948 - C34927 * C1958 + C34919 * C1963 +
            C34925 * C1111 - C34926 * C1105 - C34925 * C1112 + C34918 * C1123 +
            C34923 * C586 - C34924 * C570 - C34923 * C587 + C34917 * C606) *
               C154002) *
              C153810 * C2293 +
          ((C34923 * C588 - C34924 * C571 - C34923 * C589 + C34917 * C607 +
            C34925 * C1526 - C34926 * C1517 - C34925 * C1527 + C34918 * C1532 +
            C34927 * C3511 - C34928 * C3507 - C34927 * C3512 + C34919 * C3519 +
            C34929 * C5038 - C34930 * C5033 - C34929 * C5039 +
            C154044 * C5042) *
               C154002 +
           (C35512 + C35513 + C35514 + C35515) * C153648) *
              C153810 * C2294 -
          ((C34929 * C32003 - C34930 * C32002 - C34929 * C32004 +
            C154044 * C32005 + C34927 * C6373 - C34928 * C6365 -
            C34927 * C6374 + C34919 * C6383 + C34925 * C6375 - C34926 * C6366 -
            C34925 * C6376 + C34918 * C6384 + C34923 * C2307 - C34924 * C2299 -
            C34923 * C2308 + C34917 * C2314) *
               C153648 +
           (C34929 * C30186 - C34930 * C30183 - C34929 * C30187 +
            C154044 * C30189 + C34927 * C6377 - C34928 * C6367 -
            C34927 * C6378 + C34919 * C6385 + C34925 * C6379 - C34926 * C6368 -
            C34925 * C6380 + C34918 * C6386 + C34923 * C2309 - C34924 * C2300 -
            C34923 * C2310 + C34917 * C2315) *
               C154002) *
              C153810 * C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[313] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C11433 +
            (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
               C153810 * C154094 -
           (C12476 * C154036 + C12477 * C11435 + (C12064 + C12065) * C11434 +
            (C11439 * C1111 - C11440 * C1105 - C11439 * C1112 +
             C153855 * C1123 + C11437 * C586 - C11438 * C570 - C11437 * C587 +
             C154035 * C606) *
                C11433) *
               C153810 * C154095 +
           ((C11437 * C588 - C11438 * C571 - C11437 * C589 + C154035 * C607 +
             C11439 * C1526 - C11440 * C1517 - C11439 * C1527 +
             C153855 * C1532) *
                C11433 +
            (C12066 + C12067) * C11434 + (C12068 + C12069) * C11435 +
            (C12070 + C12071) * C154036) *
               C153810 * C2602) *
              C153695 * C154013 +
          (((C12065 + C12064) * C11433 + (C12063 + C12062) * C11434 +
            (C12061 + C12060) * C11435 + (C12490 + C12491) * C154036) *
               C153810 * C154095 -
           (C11514 * C154036 + C11515 * C11435 + (C11505 + C11504) * C11434 +
            (C11503 + C11502) * C11433) *
               C153810 * C154094 -
           ((C11439 * C1518 - C11440 * C1513 - C11439 * C1519 +
             C153855 * C1528 + C11437 * C596 - C11438 * C575 - C11437 * C597 +
             C154035 * C611) *
                C154036 +
            (C12071 + C12070) * C11435 + (C12069 + C12068) * C11434 +
            (C12067 + C12066) * C11433) *
               C153810 * C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C154002 +
            (C35004 + C35005 + C35006 + C35007) * C153648) *
               C153810 * C154094 -
           ((C35508 + C35509 + C35510 + C35511) * C153648 +
            (C34929 * C4383 - C34930 * C4379 - C34929 * C4384 +
             C154044 * C4391 + C34927 * C1957 - C34928 * C1948 -
             C34927 * C1958 + C34919 * C1963 + C34925 * C1111 - C34926 * C1105 -
             C34925 * C1112 + C34918 * C1123 + C34923 * C586 - C34924 * C570 -
             C34923 * C587 + C34917 * C606) *
                C154002) *
               C153810 * C154095 +
           ((C34923 * C588 - C34924 * C571 - C34923 * C589 + C34917 * C607 +
             C34925 * C1526 - C34926 * C1517 - C34925 * C1527 + C34918 * C1532 +
             C34927 * C3511 - C34928 * C3507 - C34927 * C3512 + C34919 * C3519 +
             C34929 * C5038 - C34930 * C5033 - C34929 * C5039 +
             C154044 * C5042) *
                C154002 +
            (C35512 + C35513 + C35514 + C35515) * C153648) *
               C153810 * C2602) *
              C153695 * C154013 +
          (((C35511 + C35510 + C35509 + C35508) * C154002 +
            (C35956 + C35957 + C35958 + C35959) * C153648) *
               C153810 * C154095 -
           ((C35008 + C35009 + C35010 + C35011) * C153648 +
            (C35007 + C35006 + C35005 + C35004) * C154002) *
               C153810 * C154094 -
           ((C34929 * C5034 - C34930 * C5031 - C34929 * C5035 +
             C154044 * C5040 + C34927 * C3515 - C34928 * C3509 -
             C34927 * C3516 + C34919 * C3521 + C34925 * C1522 - C34926 * C1515 -
             C34925 * C1523 + C34918 * C1530 + C34923 * C592 - C34924 * C573 -
             C34923 * C593 + C34917 * C609) *
                C153648 +
            (C35515 + C35514 + C35513 + C35512) * C154002) *
               C153810 * C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[314] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C11433 +
            (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
               C153810 * C2086 -
           (C12476 * C154036 + C12477 * C11435 + (C12064 + C12065) * C11434 +
            (C11439 * C1111 - C11440 * C1105 - C11439 * C1112 +
             C153855 * C1123 + C11437 * C586 - C11438 * C570 - C11437 * C587 +
             C154035 * C606) *
                C11433) *
               C153810 * C153775) *
              C153695 * C1281 +
          (((C12065 + C12064) * C11433 + (C12063 + C12062) * C11434 +
            (C12061 + C12060) * C11435 + (C12490 + C12491) * C154036) *
               C153810 * C153775 -
           (C11514 * C154036 + C11515 * C11435 + (C11505 + C11504) * C11434 +
            (C11503 + C11502) * C11433) *
               C153810 * C2086) *
              C153695 * C1282 +
          ((C11512 * C11433 + C11513 * C11434 + (C11509 + C11508) * C11435 +
            (C11510 + C11511) * C154036) *
               C153810 * C2086 -
           ((C11439 * C1121 - C11440 * C1110 - C11439 * C1122 +
             C153855 * C1128 + C11437 * C598 - C11438 * C576 - C11437 * C599 +
             C154035 * C612) *
                C154036 +
            (C12491 + C12490) * C11435 + C12476 * C11434 + C12477 * C11433) *
               C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C11433 +
            (C11502 + C11503) * C11434 + C11512 * C11435 + C11513 * C154036) *
               C153810 * C2086 -
           (C12476 * C154036 + C12477 * C11435 + (C12064 + C12065) * C11434 +
            (C11439 * C1111 - C11440 * C1105 - C11439 * C1112 +
             C153855 * C1123 + C11437 * C586 - C11438 * C570 - C11437 * C587 +
             C154035 * C606) *
                C11433) *
               C153810 * C153775) *
              C332 +
          (((C11437 * C1111 - C11438 * C1105 - C11437 * C1112 +
             C154035 * C1123 + C11439 * C1957 - C11440 * C1948 -
             C11439 * C1958 + C153855 * C1963) *
                C11433 +
            (C12786 + C12787) * C11434 + (C12788 + C12789) * C11435 +
            (C12790 + C12791) * C154036) *
               C153810 * C153775 -
           (C12266 * C154036 + C12267 * C11435 + (C11786 + C11787) * C11434 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C11433) *
               C153810 * C2086) *
              C333 +
          (((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
             C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
             C153855 * C1390) *
                C11433 +
            (C11788 + C11789) * C11434 + (C11790 + C11791) * C11435 +
            (C11792 + C11793) * C154036) *
               C153810 * C2086 -
           ((C11439 * C4389 - C11440 * C4382 - C11439 * C4390 +
             C153855 * C4394 + C11437 * C1951 - C11438 * C1945 -
             C11437 * C1952 + C154035 * C1960) *
                C154036 +
            (C11439 * C4387 - C11440 * C4381 - C11439 * C4388 +
             C153855 * C4393 + C11437 * C1953 - C11438 * C1946 -
             C11437 * C1954 + C154035 * C1961) *
                C11435 +
            (C11439 * C4385 - C11440 * C4380 - C11439 * C4386 +
             C153855 * C4392 + C11437 * C1955 - C11438 * C1947 -
             C11437 * C1956 + C154035 * C1962) *
                C11434 +
            (C11439 * C4383 - C11440 * C4379 - C11439 * C4384 +
             C153855 * C4391 + C11437 * C1957 - C11438 * C1948 -
             C11437 * C1958 + C154035 * C1963) *
                C11433) *
               C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C154002 +
            (C35004 + C35005 + C35006 + C35007) * C153648) *
               C153810 * C2086 -
           ((C35508 + C35509 + C35510 + C35511) * C153648 +
            (C34929 * C4383 - C34930 * C4379 - C34929 * C4384 +
             C154044 * C4391 + C34927 * C1957 - C34928 * C1948 -
             C34927 * C1958 + C34919 * C1963 + C34925 * C1111 - C34926 * C1105 -
             C34925 * C1112 + C34918 * C1123 + C34923 * C586 - C34924 * C570 -
             C34923 * C587 + C34917 * C606) *
                C154002) *
               C153810 * C153775) *
              C153695 * C1281 +
          (((C35511 + C35510 + C35509 + C35508) * C154002 +
            (C35956 + C35957 + C35958 + C35959) * C153648) *
               C153810 * C153775 -
           ((C35008 + C35009 + C35010 + C35011) * C153648 +
            (C35007 + C35006 + C35005 + C35004) * C154002) *
               C153810 * C2086) *
              C153695 * C1282 +
          (((C35011 + C35010 + C35009 + C35008) * C154002 +
            (C35012 + C35013 + C35014 + C35015) * C153648) *
               C153810 * C2086 -
           ((C34929 * C4389 - C34930 * C4382 - C34929 * C4390 +
             C154044 * C4394 + C34927 * C1951 - C34928 * C1945 -
             C34927 * C1952 + C34919 * C1960 + C34925 * C1117 - C34926 * C1108 -
             C34925 * C1118 + C34918 * C1126 + C34923 * C580 - C34924 * C567 -
             C34923 * C581 + C34917 * C603) *
                C153648 +
            (C35959 + C35958 + C35957 + C35956) * C154002) *
               C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C154002 +
            (C35004 + C35005 + C35006 + C35007) * C153648) *
               C153810 * C2086 -
           ((C35508 + C35509 + C35510 + C35511) * C153648 +
            (C34929 * C4383 - C34930 * C4379 - C34929 * C4384 +
             C154044 * C4391 + C34927 * C1957 - C34928 * C1948 -
             C34927 * C1958 + C34919 * C1963 + C34925 * C1111 - C34926 * C1105 -
             C34925 * C1112 + C34918 * C1123 + C34923 * C586 - C34924 * C570 -
             C34923 * C587 + C34917 * C606) *
                C154002) *
               C153810 * C153775) *
              C332 +
          (((C34923 * C1111 - C34924 * C1105 - C34923 * C1112 + C34917 * C1123 +
             C34925 * C1957 - C34926 * C1948 - C34925 * C1958 + C34918 * C1963 +
             C34927 * C4383 - C34928 * C4379 - C34927 * C4384 + C34919 * C4391 +
             C34929 * C5776 - C34930 * C5771 - C34929 * C5777 +
             C154044 * C5780) *
                C154002 +
            (C36242 + C36243 + C36244 + C36245) * C153648) *
               C153810 * C153775 -
           ((C35258 + C35259 + C35260 + C35261) * C153648 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C154002) *
               C153810 * C2086) *
              C333 +
          (((C34923 * C359 - C34924 * C342 - C34923 * C360 + C34917 * C378 +
             C34925 * C1384 - C34926 * C1375 - C34925 * C1385 + C34918 * C1390 +
             C34927 * C3193 - C34928 * C3189 - C34927 * C3194 + C34919 * C3201 +
             C34929 * C4808 - C34930 * C4803 - C34929 * C4809 +
             C154044 * C4812) *
                C154002 +
            (C35262 + C35263 + C35264 + C35265) * C153648) *
               C153810 * C2086 -
           ((C34929 * C29108 - C34930 * C29105 - C34929 * C29109 +
             C154044 * C29111 + C34927 * C5774 - C34928 * C5770 -
             C34927 * C5775 + C34919 * C5779 + C34925 * C4385 - C34926 * C4380 -
             C34925 * C4386 + C34918 * C4392 + C34923 * C1955 - C34924 * C1947 -
             C34923 * C1956 + C34917 * C1962) *
                C153648 +
            (C34929 * C29106 - C34930 * C29104 - C34929 * C29107 +
             C154044 * C29110 + C34927 * C5776 - C34928 * C5771 -
             C34927 * C5777 + C34919 * C5780 + C34925 * C4383 - C34926 * C4379 -
             C34925 * C4384 + C34918 * C4391 + C34923 * C1957 - C34924 * C1948 -
             C34923 * C1958 + C34917 * C1963) *
                C154002) *
               C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[315] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C2874 +
             (C11502 + C11503) * C2875 + C11512 * C154058) *
                C154037 +
            ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
                C153897) *
               C153711 * C154021 -
           ((C19816 * C154058 + (C12787 + C12786) * C2875 +
             (C11439 * C1957 - C11440 * C1948 - C11439 * C1958 +
              C153855 * C1963 + C11437 * C1111 - C11438 * C1105 -
              C11437 * C1112 + C154035 * C1123) *
                 C2874) *
                C153897 +
            (C12267 * C154058 + (C11786 + C11787) * C2875 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C2874) *
                C154037) *
               C153711 * C153747) *
              C154090 +
          ((((C11787 + C11786) * C2874 + (C11785 + C11784) * C2875 +
             (C11783 + C11782) * C154058) *
                C154037 +
            ((C12786 + C12787) * C2874 + (C12788 + C12789) * C2875 +
             (C12790 + C12791) * C154058) *
                C153897) *
               C153711 * C153747 -
           ((C12476 * C154058 + C12477 * C2875 + C19483 * C2874) * C153897 +
            (C11515 * C154058 + (C11505 + C11504) * C2875 +
             (C11503 + C11502) * C2874) *
                C154037) *
               C153711 * C154021) *
              C154091 +
          (((C11512 * C2874 + C11513 * C2875 + (C11509 + C11508) * C154058) *
                C154037 +
            (C18855 * C2874 + (C12061 + C12060) * C2875 +
             (C12490 + C12491) * C154058) *
                C153897) *
               C153711 * C154021 -
           (((C11439 * C1949 - C11440 * C1944 - C11439 * C1950 +
              C153855 * C1959 + C11437 * C1119 - C11438 * C1109 -
              C11437 * C1120 + C154035 * C1127) *
                 C154058 +
             (C12791 + C12790) * C2875 + C19816 * C2874) *
                C153897 +
            ((C12281 + C12280) * C154058 + C12266 * C2875 + C12267 * C2874) *
                C154037) *
               C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C153638 * C154037 +
            (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
               C153711 * C154021 -
           ((C34929 * C5776 - C34930 * C5771 - C34929 * C5777 +
             C154044 * C5780 + C34927 * C4383 - C34928 * C4379 -
             C34927 * C4384 + C34919 * C4391 + C34925 * C1957 - C34926 * C1948 -
             C34925 * C1958 + C34918 * C1963 + C34923 * C1111 - C34924 * C1105 -
             C34923 * C1112 + C34917 * C1123) *
                C153638 * C153897 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C153638 * C154037) *
               C153711 * C153747) *
              C154090 +
          (((C35261 + C35260 + C35259 + C35258) * C153638 * C154037 +
            (C36242 + C36243 + C36244 + C36245) * C153638 * C153897) *
               C153711 * C153747 -
           ((C35508 + C35509 + C35510 + C35511) * C153638 * C153897 +
            (C35007 + C35006 + C35005 + C35004) * C153638 * C154037) *
               C153711 * C154021) *
              C154091 +
          (((C35011 + C35010 + C35009 + C35008) * C153638 * C154037 +
            (C35956 + C35957 + C35958 + C35959) * C153638 * C153897) *
               C153711 * C154021 -
           ((C34929 * C5772 - C34930 * C5769 - C34929 * C5773 +
             C154044 * C5778 + C34927 * C4387 - C34928 * C4381 -
             C34927 * C4388 + C34919 * C4393 + C34925 * C1953 - C34926 * C1946 -
             C34925 * C1954 + C34918 * C1961 + C34923 * C1115 - C34924 * C1107 -
             C34923 * C1116 + C34917 * C1125) *
                C153638 * C153897 +
            (C35737 + C35736 + C35735 + C35734) * C153638 * C154037) *
               C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q));
    d2ee[316] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
               C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                  C2874 +
              (C11502 + C11503) * C2875 + C11512 * C154058) *
                 C154037 +
             ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
                 C153897) *
                C154022 -
            ((C19473 * C154058 + C19474 * C2875 + (C19520 + C19521) * C2874) *
                 C153897 +
             (C12477 * C154058 + C19483 * C2875 + (C19519 + C19518) * C2874) *
                 C154037) *
                C153775) *
               C154021 +
           ((((C20533 + C20534) * C2874 + C20502 * C2875 + C20503 * C154058) *
                 C154037 +
             ((C11437 * C1526 - C11438 * C1517 - C11437 * C1527 +
               C154035 * C1532 + C11439 * C3511 - C11440 * C3507 -
               C11439 * C3512 + C153855 * C3519) *
                  C2874 +
              (C20535 + C20536) * C2875 + (C20537 + C20538) * C154058) *
                 C153897) *
                C153775 -
            ((C19816 * C154058 + C20520 * C2875 + (C20534 + C20533) * C2874) *
                 C153897 +
             (C12267 * C154058 + (C11786 + C11787) * C2875 +
              (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
               C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                  C2874) *
                 C154037) *
                C154022) *
               C153747) *
              C335 +
          ((((C19472 * C2874 + C18855 * C2875 + C20107 * C154058) * C154037 +
             (C19484 * C2874 + C19485 * C2875 + (C12070 + C12071) * C154058) *
                 C153897) *
                C153775 -
            ((C12476 * C154058 + C12477 * C2875 + C19483 * C2874) * C153897 +
             (C11515 * C154058 + (C11505 + C11504) * C2875 +
              (C11503 + C11502) * C2874) *
                 C154037) *
                C154022) *
               C154021 +
           ((((C11787 + C11786) * C2874 + (C11785 + C11784) * C2875 +
              (C11783 + C11782) * C154058) *
                 C154037 +
             (C20502 * C2874 + C20503 * C2875 + (C12790 + C12791) * C154058) *
                 C153897) *
                C154022 -
            (((C11439 * C3517 - C11440 * C3510 - C11439 * C3518 +
               C153855 * C3522 + C11437 * C1520 - C11438 * C1514 -
               C11437 * C1521 + C154035 * C1529) *
                  C154058 +
              (C20538 + C20537) * C2875 + (C20536 + C20535) * C2874) *
                 C153897 +
             ((C12791 + C12790) * C154058 + C19816 * C2875 + C20520 * C2874) *
                 C154037) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
              C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
              C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
              C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
              C154044 * C1390) *
                 C153638 * C154037 +
             (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
                C154022 -
            ((C44397 + C44398 + C44399 + C44400) * C153638 * C153897 +
             (C44396 + C44395 + C44394 + C44393) * C153638 * C154037) *
                C153775) *
               C154021 +
           (((C45071 + C45072 + C45073 + C45074) * C153638 * C154037 +
             (C34923 * C1526 - C34924 * C1517 - C34923 * C1527 +
              C34917 * C1532 + C34925 * C3511 - C34926 * C3507 -
              C34925 * C3512 + C34918 * C3519 + C34927 * C5038 -
              C34928 * C5033 - C34927 * C5039 + C34919 * C5042 +
              C34929 * C28692 - C34930 * C28690 - C34929 * C28693 +
              C154044 * C28696) *
                 C153638 * C153897) *
                C153775 -
            ((C45074 + C45073 + C45072 + C45071) * C153638 * C153897 +
             (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
              C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
              C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
              C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
              C34923 * C358 + C34917 * C377) *
                 C153638 * C154037) *
                C154022) *
               C153747) *
              C335 +
          ((((C35511 + C35510 + C35509 + C35508) * C153638 * C154037 +
             (C35512 + C35513 + C35514 + C35515) * C153638 * C153897) *
                C153775 -
            ((C35508 + C35509 + C35510 + C35511) * C153638 * C153897 +
             (C35007 + C35006 + C35005 + C35004) * C153638 * C154037) *
                C154022) *
               C154021 +
           (((C35261 + C35260 + C35259 + C35258) * C153638 * C154037 +
             (C36242 + C36243 + C36244 + C36245) * C153638 * C153897) *
                C154022 -
            ((C34929 * C28694 - C34930 * C28691 - C34929 * C28695 +
              C154044 * C28697 + C34927 * C5036 - C34928 * C5032 -
              C34927 * C5037 + C34919 * C5041 + C34925 * C3513 -
              C34926 * C3508 - C34925 * C3514 + C34918 * C3520 +
              C34923 * C1524 - C34924 * C1516 - C34923 * C1525 +
              C34917 * C1531) *
                 C153638 * C153897 +
             (C36245 + C36244 + C36243 + C36242) * C153638 * C154037) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[317] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C2874 +
             (C11502 + C11503) * C2875 + C11512 * C154058) *
                C154037 +
            ((C11437 * C586 - C11438 * C570 - C11437 * C587 + C154035 * C606 +
              C11439 * C1111 - C11440 * C1105 - C11439 * C1112 +
              C153855 * C1123) *
                 C2874 +
             (C12065 + C12064) * C2875 + C18855 * C154058) *
                C153897) *
               C153711 * C332 -
           (((C12789 + C12788) * C154058 + (C12787 + C12786) * C2875 +
             (C11439 * C1957 - C11440 * C1948 - C11439 * C1958 +
              C153855 * C1963 + C11437 * C1111 - C11438 * C1105 -
              C11437 * C1112 + C154035 * C1123) *
                 C2874) *
                C153897 +
            (C12267 * C154058 + (C11786 + C11787) * C2875 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C2874) *
                C154037) *
               C153711 * C333 +
           (((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
              C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
              C153855 * C1390) *
                 C2874 +
             (C11788 + C11789) * C2875 + (C11790 + C11791) * C154058) *
                C154037 +
            ((C11437 * C1957 - C11438 * C1948 - C11437 * C1958 +
              C154035 * C1963 + C11439 * C4383 - C11440 * C4379 -
              C11439 * C4384 + C153855 * C4391) *
                 C2874 +
             (C19170 + C19171) * C2875 + (C19172 + C19173) * C154058) *
                C153897) *
               C153711 * C334) *
              C335 +
          ((((C11787 + C11786) * C2874 + (C11785 + C11784) * C2875 +
             (C11783 + C11782) * C154058) *
                C154037 +
            ((C12786 + C12787) * C2874 + (C12788 + C12789) * C2875 +
             (C12790 + C12791) * C154058) *
                C153897) *
               C153711 * C333 -
           ((C12476 * C154058 + C12477 * C2875 + (C12064 + C12065) * C2874) *
                C153897 +
            (C11515 * C154058 + (C11505 + C11504) * C2875 +
             (C11503 + C11502) * C2874) *
                C154037) *
               C153711 * C332 -
           (((C11439 * C4389 - C11440 * C4382 - C11439 * C4390 +
              C153855 * C4394 + C11437 * C1951 - C11438 * C1945 -
              C11437 * C1952 + C154035 * C1960) *
                 C154058 +
             (C19173 + C19172) * C2875 + (C19171 + C19170) * C2874) *
                C153897 +
            ((C11793 + C11792) * C154058 + (C11791 + C11790) * C2875 +
             (C11789 + C11788) * C2874) *
                C154037) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C2874 +
            (C11502 + C11503) * C2875 + C11512 * C154058) *
               C154037 +
           ((C11437 * C586 - C11438 * C570 - C11437 * C587 + C154035 * C606 +
             C11439 * C1111 - C11440 * C1105 - C11439 * C1112 +
             C153855 * C1123) *
                C2874 +
            (C12065 + C12064) * C2875 + C18855 * C154058) *
               C153897) *
              C153711 * C153695 * C130 -
          ((C12476 * C154058 + C12477 * C2875 + (C12064 + C12065) * C2874) *
               C153897 +
           (C11515 * C154058 + (C11505 + C11504) * C2875 +
            (C11503 + C11502) * C2874) *
               C154037) *
              C153711 * C153695 * C131 +
          ((C11512 * C2874 + C11513 * C2875 + (C11509 + C11508) * C154058) *
               C154037 +
           (C18855 * C2874 + (C12061 + C12060) * C2875 +
            (C12490 + C12491) * C154058) *
               C153897) *
              C153711 * C153695 * C132 -
          (((C11439 * C1121 - C11440 * C1110 - C11439 * C1122 +
             C153855 * C1128 + C11437 * C598 - C11438 * C576 - C11437 * C599 +
             C154035 * C612) *
                C154058 +
            (C12491 + C12490) * C2875 + C12476 * C2874) *
               C153897 +
           ((C11511 + C11510) * C154058 + C11514 * C2875 + C11515 * C2874) *
               C154037) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C2874 +
             (C11502 + C11503) * C2875 + C11512 * C154058) *
                C154037 +
            ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
                C153897) *
               C563 -
           ((C19473 * C154058 + C19474 * C2875 + (C19520 + C19521) * C2874) *
                C153897 +
            (C12477 * C154058 + C19483 * C2875 + (C19519 + C19518) * C2874) *
                C154037) *
               C564 +
           (((C19521 + C19520) * C2874 + C19484 * C2875 + C19485 * C154058) *
                C154037 +
            ((C11437 * C2309 - C11438 * C2300 - C11437 * C2310 +
              C154035 * C2315 + C11439 * C6379 - C11440 * C6368 -
              C11439 * C6380 + C153855 * C6386) *
                 C2874 +
             (C19522 + C19523) * C2875 + (C19524 + C19525) * C154058) *
                C153897) *
               C565) *
              C153695 * C335 +
          (((C19472 * C2874 + C18855 * C2875 + (C12061 + C12060) * C154058) *
                C154037 +
            (C19484 * C2874 + C19485 * C2875 + (C12070 + C12071) * C154058) *
                C153897) *
               C564 -
           ((C12476 * C154058 + C12477 * C2875 + C19483 * C2874) * C153897 +
            (C11515 * C154058 + (C11505 + C11504) * C2875 +
             (C11503 + C11502) * C2874) *
                C154037) *
               C563 -
           (((C11439 * C8574 - C11440 * C8573 - C11439 * C8575 +
              C153855 * C8576 + C11437 * C2303 - C11438 * C2297 -
              C11437 * C2304 + C154035 * C2312) *
                 C154058 +
             (C19525 + C19524) * C2875 + (C19523 + C19522) * C2874) *
                C153897 +
            ((C12071 + C12070) * C154058 + C19473 * C2875 + C19474 * C2874) *
                C154037) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
            C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
            C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
            C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
            C154044 * C1390) *
               C153638 * C154037 +
           (C34923 * C586 - C34924 * C570 - C34923 * C587 + C34917 * C606 +
            C34925 * C1111 - C34926 * C1105 - C34925 * C1112 + C34918 * C1123 +
            C34927 * C1957 - C34928 * C1948 - C34927 * C1958 + C34919 * C1963 +
            C34929 * C4383 - C34930 * C4379 - C34929 * C4384 +
            C154044 * C4391) *
               C153638 * C153897) *
              C153711 * C153695 * C130 -
          ((C35508 + C35509 + C35510 + C35511) * C153638 * C153897 +
           (C35007 + C35006 + C35005 + C35004) * C153638 * C154037) *
              C153711 * C153695 * C131 +
          ((C35011 + C35010 + C35009 + C35008) * C153638 * C154037 +
           (C35956 + C35957 + C35958 + C35959) * C153638 * C153897) *
              C153711 * C153695 * C132 -
          ((C34929 * C4389 - C34930 * C4382 - C34929 * C4390 + C154044 * C4394 +
            C34927 * C1951 - C34928 * C1945 - C34927 * C1952 + C34919 * C1960 +
            C34925 * C1117 - C34926 * C1108 - C34925 * C1118 + C34918 * C1126 +
            C34923 * C580 - C34924 * C567 - C34923 * C581 + C34917 * C603) *
               C153638 * C153897 +
           (C35015 + C35014 + C35013 + C35012) * C153638 * C154037) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C153638 * C154037 +
            (C34923 * C586 - C34924 * C570 - C34923 * C587 + C34917 * C606 +
             C34925 * C1111 - C34926 * C1105 - C34925 * C1112 + C34918 * C1123 +
             C34927 * C1957 - C34928 * C1948 - C34927 * C1958 + C34919 * C1963 +
             C34929 * C4383 - C34930 * C4379 - C34929 * C4384 +
             C154044 * C4391) *
                C153638 * C153897) *
               C153711 * C332 -
           ((C34929 * C5776 - C34930 * C5771 - C34929 * C5777 +
             C154044 * C5780 + C34927 * C4383 - C34928 * C4379 -
             C34927 * C4384 + C34919 * C4391 + C34925 * C1957 - C34926 * C1948 -
             C34925 * C1958 + C34918 * C1963 + C34923 * C1111 - C34924 * C1105 -
             C34923 * C1112 + C34917 * C1123) *
                C153638 * C153897 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C153638 * C154037) *
               C153711 * C333 +
           ((C34923 * C359 - C34924 * C342 - C34923 * C360 + C34917 * C378 +
             C34925 * C1384 - C34926 * C1375 - C34925 * C1385 + C34918 * C1390 +
             C34927 * C3193 - C34928 * C3189 - C34927 * C3194 + C34919 * C3201 +
             C34929 * C4808 - C34930 * C4803 - C34929 * C4809 +
             C154044 * C4812) *
                C153638 * C154037 +
            (C34923 * C1957 - C34924 * C1948 - C34923 * C1958 + C34917 * C1963 +
             C34925 * C4383 - C34926 * C4379 - C34925 * C4384 + C34918 * C4391 +
             C34927 * C5776 - C34928 * C5771 - C34927 * C5777 + C34919 * C5780 +
             C34929 * C29106 - C34930 * C29104 - C34929 * C29107 +
             C154044 * C29110) *
                C153638 * C153897) *
               C153711 * C334) *
              C335 +
          (((C35261 + C35260 + C35259 + C35258) * C153638 * C154037 +
            (C36242 + C36243 + C36244 + C36245) * C153638 * C153897) *
               C153711 * C333 -
           ((C35508 + C35509 + C35510 + C35511) * C153638 * C153897 +
            (C35007 + C35006 + C35005 + C35004) * C153638 * C154037) *
               C153711 * C332 -
           ((C34929 * C29108 - C34930 * C29105 - C34929 * C29109 +
             C154044 * C29111 + C34927 * C5774 - C34928 * C5770 -
             C34927 * C5775 + C34919 * C5779 + C34925 * C4385 - C34926 * C4380 -
             C34925 * C4386 + C34918 * C4392 + C34923 * C1955 - C34924 * C1947 -
             C34923 * C1956 + C34917 * C1962) *
                C153638 * C153897 +
            (C35265 + C35264 + C35263 + C35262) * C153638 * C154037) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C153638 * C154037 +
            (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
               C563 -
           ((C44397 + C44398 + C44399 + C44400) * C153638 * C153897 +
            (C44396 + C44395 + C44394 + C44393) * C153638 * C154037) *
               C564 +
           ((C44400 + C44399 + C44398 + C44397) * C153638 * C154037 +
            (C34923 * C2309 - C34924 * C2300 - C34923 * C2310 + C34917 * C2315 +
             C34925 * C6379 - C34926 * C6368 - C34925 * C6380 + C34918 * C6386 +
             C34927 * C6377 - C34928 * C6367 - C34927 * C6378 + C34919 * C6385 +
             C34929 * C30186 - C34930 * C30183 - C34929 * C30187 +
             C154044 * C30189) *
                C153638 * C153897) *
               C565) *
              C153695 * C335 +
          (((C35511 + C35510 + C35509 + C35508) * C153638 * C154037 +
            (C35512 + C35513 + C35514 + C35515) * C153638 * C153897) *
               C564 -
           ((C35508 + C35509 + C35510 + C35511) * C153638 * C153897 +
            (C35007 + C35006 + C35005 + C35004) * C153638 * C154037) *
               C563 -
           ((C34929 * C32003 - C34930 * C32002 - C34929 * C32004 +
             C154044 * C32005 + C34927 * C6373 - C34928 * C6365 -
             C34927 * C6374 + C34919 * C6383 + C34925 * C6375 - C34926 * C6366 -
             C34925 * C6376 + C34918 * C6384 + C34923 * C2307 - C34924 * C2299 -
             C34923 * C2308 + C34917 * C2314) *
                C153638 * C153897 +
            (C35515 + C35514 + C35513 + C35512) * C153638 * C154037) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[318] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C2874 +
             (C11502 + C11503) * C2875 + C11512 * C154058) *
                C154037 +
            ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
                C153897) *
               C154022 -
           ((C19473 * C154058 + C19474 * C2875 + (C19520 + C19521) * C2874) *
                C153897 +
            (C12477 * C154058 + C19483 * C2875 + (C19519 + C19518) * C2874) *
                C154037) *
               C153775) *
              C153695 * C154090 +
          (((C19472 * C2874 + C18855 * C2875 + C20107 * C154058) * C154037 +
            (C19484 * C2874 + C19485 * C2875 + (C12070 + C12071) * C154058) *
                C153897) *
               C153775 -
           ((C12476 * C154058 + C12477 * C2875 + C19483 * C2874) * C153897 +
            (C11515 * C154058 + (C11505 + C11504) * C2875 +
             (C11503 + C11502) * C2874) *
                C154037) *
               C154022) *
              C153695 * C154091 +
          (((C11512 * C2874 + C11513 * C2875 + (C11509 + C11508) * C154058) *
                C154037 +
            (C18855 * C2874 + C20107 * C2875 + (C12490 + C12491) * C154058) *
                C153897) *
               C154022 -
           (((C11439 * C1518 - C11440 * C1513 - C11439 * C1519 +
              C153855 * C1528 + C11437 * C596 - C11438 * C575 - C11437 * C597 +
              C154035 * C611) *
                 C154058 +
             (C12071 + C12070) * C2875 + C19473 * C2874) *
                C153897 +
            ((C12491 + C12490) * C154058 + C12476 * C2875 + C12477 * C2874) *
                C154037) *
               C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C153638 * C154037 +
            (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
               C154022 -
           ((C44397 + C44398 + C44399 + C44400) * C153638 * C153897 +
            (C44396 + C44395 + C44394 + C44393) * C153638 * C154037) *
               C153775) *
              C153695 * C154090 +
          (((C35511 + C35510 + C35509 + C35508) * C153638 * C154037 +
            (C35512 + C35513 + C35514 + C35515) * C153638 * C153897) *
               C153775 -
           ((C35508 + C35509 + C35510 + C35511) * C153638 * C153897 +
            (C35007 + C35006 + C35005 + C35004) * C153638 * C154037) *
               C154022) *
              C153695 * C154091 +
          (((C35011 + C35010 + C35009 + C35008) * C153638 * C154037 +
            (C35956 + C35957 + C35958 + C35959) * C153638 * C153897) *
               C154022 -
           ((C34929 * C5034 - C34930 * C5031 - C34929 * C5035 +
             C154044 * C5040 + C34927 * C3515 - C34928 * C3509 -
             C34927 * C3516 + C34919 * C3521 + C34925 * C1522 - C34926 * C1515 -
             C34925 * C1523 + C34918 * C1530 + C34923 * C592 - C34924 * C573 -
             C34923 * C593 + C34917 * C609) *
                C153638 * C153897 +
            (C35959 + C35958 + C35957 + C35956) * C153638 * C154037) *
               C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q));
    d2ee[319] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C2874 +
            (C11502 + C11503) * C2875 + C11512 * C154058) *
               C154037 +
           ((C11437 * C586 - C11438 * C570 - C11437 * C587 + C154035 * C606 +
             C11439 * C1111 - C11440 * C1105 - C11439 * C1112 +
             C153855 * C1123) *
                C2874 +
            (C12065 + C12064) * C2875 + C18855 * C154058) *
               C153897) *
              C153711 * C153695 * C130 -
          ((C12476 * C154058 + C12477 * C2875 + (C12064 + C12065) * C2874) *
               C153897 +
           (C11515 * C154058 + (C11505 + C11504) * C2875 +
            (C11503 + C11502) * C2874) *
               C154037) *
              C153711 * C153695 * C131 +
          ((C11512 * C2874 + C11513 * C2875 + (C11509 + C11508) * C154058) *
               C154037 +
           (C18855 * C2874 + (C12061 + C12060) * C2875 +
            (C12490 + C12491) * C154058) *
               C153897) *
              C153711 * C153695 * C132 -
          (((C11439 * C1121 - C11440 * C1110 - C11439 * C1122 +
             C153855 * C1128 + C11437 * C598 - C11438 * C576 - C11437 * C599 +
             C154035 * C612) *
                C154058 +
            (C12491 + C12490) * C2875 + C12476 * C2874) *
               C153897 +
           ((C11511 + C11510) * C154058 + C11514 * C2875 + C11515 * C2874) *
               C154037) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C2874 +
             (C11502 + C11503) * C2875 + C11512 * C154058) *
                C154037 +
            ((C11437 * C586 - C11438 * C570 - C11437 * C587 + C154035 * C606 +
              C11439 * C1111 - C11440 * C1105 - C11439 * C1112 +
              C153855 * C1123) *
                 C2874 +
             (C12065 + C12064) * C2875 + C18855 * C154058) *
                C153897) *
               C153711 * C332 -
           (((C12789 + C12788) * C154058 + (C12787 + C12786) * C2875 +
             (C11439 * C1957 - C11440 * C1948 - C11439 * C1958 +
              C153855 * C1963 + C11437 * C1111 - C11438 * C1105 -
              C11437 * C1112 + C154035 * C1123) *
                 C2874) *
                C153897 +
            (C12267 * C154058 + (C11786 + C11787) * C2875 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C2874) *
                C154037) *
               C153711 * C333 +
           (((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
              C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
              C153855 * C1390) *
                 C2874 +
             (C11788 + C11789) * C2875 + (C11790 + C11791) * C154058) *
                C154037 +
            ((C11437 * C1957 - C11438 * C1948 - C11437 * C1958 +
              C154035 * C1963 + C11439 * C4383 - C11440 * C4379 -
              C11439 * C4384 + C153855 * C4391) *
                 C2874 +
             (C19170 + C19171) * C2875 + (C19172 + C19173) * C154058) *
                C153897) *
               C153711 * C334) *
              C335 +
          ((((C11787 + C11786) * C2874 + (C11785 + C11784) * C2875 +
             (C11783 + C11782) * C154058) *
                C154037 +
            ((C12786 + C12787) * C2874 + (C12788 + C12789) * C2875 +
             (C12790 + C12791) * C154058) *
                C153897) *
               C153711 * C333 -
           ((C12476 * C154058 + C12477 * C2875 + (C12064 + C12065) * C2874) *
                C153897 +
            (C11515 * C154058 + (C11505 + C11504) * C2875 +
             (C11503 + C11502) * C2874) *
                C154037) *
               C153711 * C332 -
           (((C11439 * C4389 - C11440 * C4382 - C11439 * C4390 +
              C153855 * C4394 + C11437 * C1951 - C11438 * C1945 -
              C11437 * C1952 + C154035 * C1960) *
                 C154058 +
             (C19173 + C19172) * C2875 + (C19171 + C19170) * C2874) *
                C153897 +
            ((C11793 + C11792) * C154058 + (C11791 + C11790) * C2875 +
             (C11789 + C11788) * C2874) *
                C154037) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
            C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
            C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
            C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
            C154044 * C1390) *
               C153638 * C154037 +
           (C34923 * C586 - C34924 * C570 - C34923 * C587 + C34917 * C606 +
            C34925 * C1111 - C34926 * C1105 - C34925 * C1112 + C34918 * C1123 +
            C34927 * C1957 - C34928 * C1948 - C34927 * C1958 + C34919 * C1963 +
            C34929 * C4383 - C34930 * C4379 - C34929 * C4384 +
            C154044 * C4391) *
               C153638 * C153897) *
              C153711 * C153695 * C130 -
          ((C35508 + C35509 + C35510 + C35511) * C153638 * C153897 +
           (C35007 + C35006 + C35005 + C35004) * C153638 * C154037) *
              C153711 * C153695 * C131 +
          ((C35011 + C35010 + C35009 + C35008) * C153638 * C154037 +
           (C35956 + C35957 + C35958 + C35959) * C153638 * C153897) *
              C153711 * C153695 * C132 -
          ((C34929 * C4389 - C34930 * C4382 - C34929 * C4390 + C154044 * C4394 +
            C34927 * C1951 - C34928 * C1945 - C34927 * C1952 + C34919 * C1960 +
            C34925 * C1117 - C34926 * C1108 - C34925 * C1118 + C34918 * C1126 +
            C34923 * C580 - C34924 * C567 - C34923 * C581 + C34917 * C603) *
               C153638 * C153897 +
           (C35015 + C35014 + C35013 + C35012) * C153638 * C154037) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C153638 * C154037 +
            (C34923 * C586 - C34924 * C570 - C34923 * C587 + C34917 * C606 +
             C34925 * C1111 - C34926 * C1105 - C34925 * C1112 + C34918 * C1123 +
             C34927 * C1957 - C34928 * C1948 - C34927 * C1958 + C34919 * C1963 +
             C34929 * C4383 - C34930 * C4379 - C34929 * C4384 +
             C154044 * C4391) *
                C153638 * C153897) *
               C153711 * C332 -
           ((C34929 * C5776 - C34930 * C5771 - C34929 * C5777 +
             C154044 * C5780 + C34927 * C4383 - C34928 * C4379 -
             C34927 * C4384 + C34919 * C4391 + C34925 * C1957 - C34926 * C1948 -
             C34925 * C1958 + C34918 * C1963 + C34923 * C1111 - C34924 * C1105 -
             C34923 * C1112 + C34917 * C1123) *
                C153638 * C153897 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C153638 * C154037) *
               C153711 * C333 +
           ((C34923 * C359 - C34924 * C342 - C34923 * C360 + C34917 * C378 +
             C34925 * C1384 - C34926 * C1375 - C34925 * C1385 + C34918 * C1390 +
             C34927 * C3193 - C34928 * C3189 - C34927 * C3194 + C34919 * C3201 +
             C34929 * C4808 - C34930 * C4803 - C34929 * C4809 +
             C154044 * C4812) *
                C153638 * C154037 +
            (C34923 * C1957 - C34924 * C1948 - C34923 * C1958 + C34917 * C1963 +
             C34925 * C4383 - C34926 * C4379 - C34925 * C4384 + C34918 * C4391 +
             C34927 * C5776 - C34928 * C5771 - C34927 * C5777 + C34919 * C5780 +
             C34929 * C29106 - C34930 * C29104 - C34929 * C29107 +
             C154044 * C29110) *
                C153638 * C153897) *
               C153711 * C334) *
              C335 +
          (((C35261 + C35260 + C35259 + C35258) * C153638 * C154037 +
            (C36242 + C36243 + C36244 + C36245) * C153638 * C153897) *
               C153711 * C333 -
           ((C35508 + C35509 + C35510 + C35511) * C153638 * C153897 +
            (C35007 + C35006 + C35005 + C35004) * C153638 * C154037) *
               C153711 * C332 -
           ((C34929 * C29108 - C34930 * C29105 - C34929 * C29109 +
             C154044 * C29111 + C34927 * C5774 - C34928 * C5770 -
             C34927 * C5775 + C34919 * C5779 + C34925 * C4385 - C34926 * C4380 -
             C34925 * C4386 + C34918 * C4392 + C34923 * C1955 - C34924 * C1947 -
             C34923 * C1956 + C34917 * C1962) *
                C153638 * C153897 +
            (C35265 + C35264 + C35263 + C35262) * C153638 * C154037) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[320] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C2874 +
             (C11502 + C11503) * C2875 + C11512 * C154058) *
                C154037 +
            ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
                C153897) *
               C153711 * C154092 -
           ((C19816 * C154058 + C20520 * C2875 + (C20534 + C20533) * C2874) *
                C153897 +
            (C12267 * C154058 + (C11786 + C11787) * C2875 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C2874) *
                C154037) *
               C153711 * C154093 +
           (((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
              C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
              C153855 * C1390) *
                 C2874 +
             (C11788 + C11789) * C2875 + (C11790 + C11791) * C154058) *
                C154037 +
            ((C11437 * C1957 - C11438 * C1948 - C11437 * C1958 +
              C154035 * C1963 + C11439 * C4383 - C11440 * C4379 -
              C11439 * C4384 + C153855 * C4391) *
                 C2874 +
             (C19170 + C19171) * C2875 + (C19172 + C19173) * C154058) *
                C153897) *
               C153711 * C1657) *
              C154013 +
          ((((C11787 + C11786) * C2874 + (C11785 + C11784) * C2875 +
             (C11783 + C11782) * C154058) *
                C154037 +
            (C20502 * C2874 + C20503 * C2875 + (C12790 + C12791) * C154058) *
                C153897) *
               C153711 * C154093 -
           ((C12476 * C154058 + C12477 * C2875 + C19483 * C2874) * C153897 +
            (C11515 * C154058 + (C11505 + C11504) * C2875 +
             (C11503 + C11502) * C2874) *
                C154037) *
               C153711 * C154092 -
           (((C11439 * C4389 - C11440 * C4382 - C11439 * C4390 +
              C153855 * C4394 + C11437 * C1951 - C11438 * C1945 -
              C11437 * C1952 + C154035 * C1960) *
                 C154058 +
             (C19173 + C19172) * C2875 + (C19171 + C19170) * C2874) *
                C153897 +
            ((C11793 + C11792) * C154058 + (C11791 + C11790) * C2875 +
             (C11789 + C11788) * C2874) *
                C154037) *
               C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C153638 * C154037 +
            (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
               C153711 * C154092 -
           ((C45074 + C45073 + C45072 + C45071) * C153638 * C153897 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C153638 * C154037) *
               C153711 * C154093 +
           ((C34923 * C359 - C34924 * C342 - C34923 * C360 + C34917 * C378 +
             C34925 * C1384 - C34926 * C1375 - C34925 * C1385 + C34918 * C1390 +
             C34927 * C3193 - C34928 * C3189 - C34927 * C3194 + C34919 * C3201 +
             C34929 * C4808 - C34930 * C4803 - C34929 * C4809 +
             C154044 * C4812) *
                C153638 * C154037 +
            (C34923 * C1957 - C34924 * C1948 - C34923 * C1958 + C34917 * C1963 +
             C34925 * C4383 - C34926 * C4379 - C34925 * C4384 + C34918 * C4391 +
             C34927 * C5776 - C34928 * C5771 - C34927 * C5777 + C34919 * C5780 +
             C34929 * C29106 - C34930 * C29104 - C34929 * C29107 +
             C154044 * C29110) *
                C153638 * C153897) *
               C153711 * C1657) *
              C154013 +
          (((C35261 + C35260 + C35259 + C35258) * C153638 * C154037 +
            (C36242 + C36243 + C36244 + C36245) * C153638 * C153897) *
               C153711 * C154093 -
           ((C35508 + C35509 + C35510 + C35511) * C153638 * C153897 +
            (C35007 + C35006 + C35005 + C35004) * C153638 * C154037) *
               C153711 * C154092 -
           ((C34929 * C29108 - C34930 * C29105 - C34929 * C29109 +
             C154044 * C29111 + C34927 * C5774 - C34928 * C5770 -
             C34927 * C5775 + C34919 * C5779 + C34925 * C4385 - C34926 * C4380 -
             C34925 * C4386 + C34918 * C4392 + C34923 * C1955 - C34924 * C1947 -
             C34923 * C1956 + C34917 * C1962) *
                C153638 * C153897 +
            (C35265 + C35264 + C35263 + C35262) * C153638 * C154037) *
               C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[321] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C2874 +
             (C11502 + C11503) * C2875 + C11512 * C154058) *
                C154037 +
            ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
                C153897) *
               C154022 -
           ((C19473 * C154058 + C19474 * C2875 + (C19520 + C19521) * C2874) *
                C153897 +
            (C12477 * C154058 + C19483 * C2875 + (C19519 + C19518) * C2874) *
                C154037) *
               C153775) *
              C154092 +
          ((((C20533 + C20534) * C2874 + C20502 * C2875 + C20503 * C154058) *
                C154037 +
            ((C21325 + C21326) * C2874 + (C20535 + C20536) * C2875 +
             (C20537 + C20538) * C154058) *
                C153897) *
               C153775 -
           ((C19816 * C154058 + C20520 * C2875 + (C20534 + C20533) * C2874) *
                C153897 +
            (C12267 * C154058 + (C11786 + C11787) * C2875 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C2874) *
                C154037) *
               C154022) *
              C154093 +
          ((((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
              C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
              C153855 * C1390) *
                 C2874 +
             (C11788 + C11789) * C2875 + (C11790 + C11791) * C154058) *
                C154037 +
            ((C22305 + C22306) * C2874 + (C19170 + C19171) * C2875 +
             (C19172 + C19173) * C154058) *
                C153897) *
               C154022 -
           (((C11439 * C5034 - C11440 * C5031 - C11439 * C5035 +
              C153855 * C5040 + C11437 * C3515 - C11438 * C3509 -
              C11437 * C3516 + C154035 * C3521) *
                 C154058 +
             (C11439 * C5036 - C11440 * C5032 - C11439 * C5037 +
              C153855 * C5041 + C11437 * C3513 - C11438 * C3508 -
              C11437 * C3514 + C154035 * C3520) *
                 C2875 +
             (C11439 * C5038 - C11440 * C5033 - C11439 * C5039 +
              C153855 * C5042 + C11437 * C3511 - C11438 * C3507 -
              C11437 * C3512 + C154035 * C3519) *
                 C2874) *
                C153897 +
            ((C19173 + C19172) * C154058 + (C19171 + C19170) * C2875 +
             (C22306 + C22305) * C2874) *
                C154037) *
               C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C153638 * C154037 +
            (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
               C154022 -
           ((C44397 + C44398 + C44399 + C44400) * C153638 * C153897 +
            (C44396 + C44395 + C44394 + C44393) * C153638 * C154037) *
               C153775) *
              C154092 +
          (((C45071 + C45072 + C45073 + C45074) * C153638 * C154037 +
            (C45617 + C45618 + C45619 + C45620) * C153638 * C153897) *
               C153775 -
           ((C45074 + C45073 + C45072 + C45071) * C153638 * C153897 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C153638 * C154037) *
               C154022) *
              C154093 +
          (((C34923 * C359 - C34924 * C342 - C34923 * C360 + C34917 * C378 +
             C34925 * C1384 - C34926 * C1375 - C34925 * C1385 + C34918 * C1390 +
             C34927 * C3193 - C34928 * C3189 - C34927 * C3194 + C34919 * C3201 +
             C34929 * C4808 - C34930 * C4803 - C34929 * C4809 +
             C154044 * C4812) *
                C153638 * C154037 +
            (C46291 + C46292 + C46293 + C46294) * C153638 * C153897) *
               C154022 -
           ((C34929 * C29443 - C34930 * C29442 - C34929 * C29444 +
             C154044 * C29445 + C34927 * C28692 - C34928 * C28690 -
             C34927 * C28693 + C34919 * C28696 + C34925 * C5038 -
             C34926 * C5033 - C34925 * C5039 + C34918 * C5042 + C34923 * C3511 -
             C34924 * C3507 - C34923 * C3512 + C34917 * C3519) *
                C153638 * C153897 +
            (C46294 + C46293 + C46292 + C46291) * C153638 * C154037) *
               C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[322] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C2874 +
            (C11502 + C11503) * C2875 + C11512 * C154058) *
               C154037 +
           ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
               C153897) *
              C153711 * C1366 -
          ((C19816 * C154058 + C20520 * C2875 + (C20534 + C20533) * C2874) *
               C153897 +
           (C12267 * C154058 + (C11786 + C11787) * C2875 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C2874) *
               C154037) *
              C153711 * C1367 +
          (((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
             C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
             C153855 * C1390) *
                C2874 +
            (C11788 + C11789) * C2875 + (C11790 + C11791) * C154058) *
               C154037 +
           ((C11437 * C1957 - C11438 * C1948 - C11437 * C1958 +
             C154035 * C1963 + C11439 * C4383 - C11440 * C4379 -
             C11439 * C4384 + C153855 * C4391) *
                C2874 +
            (C19170 + C19171) * C2875 + (C19172 + C19173) * C154058) *
               C153897) *
              C153711 * C1368 -
          (((C11439 * C5772 - C11440 * C5769 - C11439 * C5773 +
             C153855 * C5778 + C11437 * C4387 - C11438 * C4381 -
             C11437 * C4388 + C154035 * C4393) *
                C154058 +
            (C11439 * C5774 - C11440 * C5770 - C11439 * C5775 +
             C153855 * C5779 + C11437 * C4385 - C11438 * C4380 -
             C11437 * C4386 + C154035 * C4392) *
                C2875 +
            (C11439 * C5776 - C11440 * C5771 - C11439 * C5777 +
             C153855 * C5780 + C11437 * C4383 - C11438 * C4379 -
             C11437 * C4384 + C154035 * C4391) *
                C2874) *
               C153897 +
           ((C11439 * C3197 - C11440 * C3191 - C11439 * C3198 +
             C153855 * C3203 + C11437 * C1380 - C11438 * C1373 -
             C11437 * C1381 + C154035 * C1388) *
                C154058 +
            (C11439 * C3195 - C11440 * C3190 - C11439 * C3196 +
             C153855 * C3202 + C11437 * C1382 - C11438 * C1374 -
             C11437 * C1383 + C154035 * C1389) *
                C2875 +
            (C11439 * C3193 - C11440 * C3189 - C11439 * C3194 +
             C153855 * C3201 + C11437 * C1384 - C11438 * C1375 -
             C11437 * C1385 + C154035 * C1390) *
                C2874) *
               C154037) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C2874 +
             (C11502 + C11503) * C2875 + C11512 * C154058) *
                C154037 +
            ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
                C153897) *
               C153711 * C1279 -
           ((C19816 * C154058 + C20520 * C2875 + (C20534 + C20533) * C2874) *
                C153897 +
            (C12267 * C154058 + (C11786 + C11787) * C2875 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C2874) *
                C154037) *
               C153711 * C153747) *
              C1281 +
          ((((C11787 + C11786) * C2874 + (C11785 + C11784) * C2875 +
             (C11783 + C11782) * C154058) *
                C154037 +
            (C20502 * C2874 + C20503 * C2875 + (C12790 + C12791) * C154058) *
                C153897) *
               C153711 * C153747 -
           ((C12476 * C154058 + C12477 * C2875 + C19483 * C2874) * C153897 +
            (C11515 * C154058 + (C11505 + C11504) * C2875 +
             (C11503 + C11502) * C2874) *
                C154037) *
               C153711 * C1279) *
              C1282 +
          (((C11512 * C2874 + C11513 * C2875 + (C11509 + C11508) * C154058) *
                C154037 +
            (C18855 * C2874 + C20107 * C2875 + (C12490 + C12491) * C154058) *
                C153897) *
               C153711 * C1279 -
           (((C11439 * C1949 - C11440 * C1944 - C11439 * C1950 +
              C153855 * C1959 + C11437 * C1119 - C11438 * C1109 -
              C11437 * C1120 + C154035 * C1127) *
                 C154058 +
             (C12791 + C12790) * C2875 + C19816 * C2874) *
                C153897 +
            ((C12281 + C12280) * C154058 + C12266 * C2875 + C12267 * C2874) *
                C154037) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C2874 +
             (C11502 + C11503) * C2875 + C11512 * C154058) *
                C154037 +
            ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
                C153897) *
               C563 -
           ((C19473 * C154058 + C19474 * C2875 + (C19520 + C19521) * C2874) *
                C153897 +
            (C12477 * C154058 + C19483 * C2875 + (C19519 + C19518) * C2874) *
                C154037) *
               C564 +
           (((C19521 + C19520) * C2874 + C19484 * C2875 + C19485 * C154058) *
                C154037 +
            ((C11437 * C2309 - C11438 * C2300 - C11437 * C2310 +
              C154035 * C2315 + C11439 * C6379 - C11440 * C6368 -
              C11439 * C6380 + C153855 * C6386) *
                 C2874 +
             (C19522 + C19523) * C2875 + (C19524 + C19525) * C154058) *
                C153897) *
               C565) *
              C1279 +
          ((((C20533 + C20534) * C2874 + C20502 * C2875 + C20503 * C154058) *
                C154037 +
            ((C21325 + C21326) * C2874 + (C20535 + C20536) * C2875 +
             (C20537 + C20538) * C154058) *
                C153897) *
               C564 -
           ((C19816 * C154058 + C20520 * C2875 + (C20534 + C20533) * C2874) *
                C153897 +
            (C12267 * C154058 + (C11786 + C11787) * C2875 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C2874) *
                C154037) *
               C563 -
           (((C11439 * C6369 - C11440 * C6363 - C11439 * C6370 +
              C153855 * C6381 + C11437 * C6371 - C11438 * C6364 -
              C11437 * C6372 + C154035 * C6382) *
                 C154058 +
             (C11439 * C6373 - C11440 * C6365 - C11439 * C6374 +
              C153855 * C6383 + C11437 * C6375 - C11438 * C6366 -
              C11437 * C6376 + C154035 * C6384) *
                 C2875 +
             (C11439 * C6377 - C11440 * C6367 - C11439 * C6378 +
              C153855 * C6385 + C11437 * C6379 - C11438 * C6368 -
              C11437 * C6380 + C154035 * C6386) *
                 C2874) *
                C153897 +
            ((C20538 + C20537) * C154058 + (C20536 + C20535) * C2875 +
             (C21326 + C21325) * C2874) *
                C154037) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C153638 * C154037 +
            (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
               C153711 * C1279 -
           ((C45074 + C45073 + C45072 + C45071) * C153638 * C153897 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C153638 * C154037) *
               C153711 * C153747) *
              C1281 +
          (((C35261 + C35260 + C35259 + C35258) * C153638 * C154037 +
            (C36242 + C36243 + C36244 + C36245) * C153638 * C153897) *
               C153711 * C153747 -
           ((C35508 + C35509 + C35510 + C35511) * C153638 * C153897 +
            (C35007 + C35006 + C35005 + C35004) * C153638 * C154037) *
               C153711 * C1279) *
              C1282 +
          (((C35011 + C35010 + C35009 + C35008) * C153638 * C154037 +
            (C35956 + C35957 + C35958 + C35959) * C153638 * C153897) *
               C153711 * C1279 -
           ((C34929 * C5772 - C34930 * C5769 - C34929 * C5773 +
             C154044 * C5778 + C34927 * C4387 - C34928 * C4381 -
             C34927 * C4388 + C34919 * C4393 + C34925 * C1953 - C34926 * C1946 -
             C34925 * C1954 + C34918 * C1961 + C34923 * C1115 - C34924 * C1107 -
             C34923 * C1116 + C34917 * C1125) *
                C153638 * C153897 +
            (C35737 + C35736 + C35735 + C35734) * C153638 * C154037) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
            C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
            C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
            C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
            C154044 * C1390) *
               C153638 * C154037 +
           (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
              C153711 * C1366 -
          ((C45074 + C45073 + C45072 + C45071) * C153638 * C153897 +
           (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 + C154044 * C3201 +
            C34927 * C1384 - C34928 * C1375 - C34927 * C1385 + C34919 * C1390 +
            C34925 * C359 - C34926 * C342 - C34925 * C360 + C34918 * C378 +
            C34923 * C357 - C34924 * C341 - C34923 * C358 + C34917 * C377) *
               C153638 * C154037) *
              C153711 * C1367 +
          ((C34923 * C359 - C34924 * C342 - C34923 * C360 + C34917 * C378 +
            C34925 * C1384 - C34926 * C1375 - C34925 * C1385 + C34918 * C1390 +
            C34927 * C3193 - C34928 * C3189 - C34927 * C3194 + C34919 * C3201 +
            C34929 * C4808 - C34930 * C4803 - C34929 * C4809 +
            C154044 * C4812) *
               C153638 * C154037 +
           (C34923 * C1957 - C34924 * C1948 - C34923 * C1958 + C34917 * C1963 +
            C34925 * C4383 - C34926 * C4379 - C34925 * C4384 + C34918 * C4391 +
            C34927 * C5776 - C34928 * C5771 - C34927 * C5777 + C34919 * C5780 +
            C34929 * C29106 - C34930 * C29104 - C34929 * C29107 +
            C154044 * C29110) *
               C153638 * C153897) *
              C153711 * C1368 -
          ((C34929 * C29853 - C34930 * C29852 - C34929 * C29854 +
            C154044 * C29855 + C34927 * C29106 - C34928 * C29104 -
            C34927 * C29107 + C34919 * C29110 + C34925 * C5776 -
            C34926 * C5771 - C34925 * C5777 + C34918 * C5780 + C34923 * C4383 -
            C34924 * C4379 - C34923 * C4384 + C34917 * C4391) *
               C153638 * C153897 +
           (C34929 * C28562 - C34930 * C28560 - C34929 * C28563 +
            C154044 * C28566 + C34927 * C4808 - C34928 * C4803 -
            C34927 * C4809 + C34919 * C4812 + C34925 * C3193 - C34926 * C3189 -
            C34925 * C3194 + C34918 * C3201 + C34923 * C1384 - C34924 * C1375 -
            C34923 * C1385 + C34917 * C1390) *
               C153638 * C154037) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C153638 * C154037 +
            (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
               C563 -
           ((C44397 + C44398 + C44399 + C44400) * C153638 * C153897 +
            (C44396 + C44395 + C44394 + C44393) * C153638 * C154037) *
               C564 +
           ((C44400 + C44399 + C44398 + C44397) * C153638 * C154037 +
            (C34923 * C2309 - C34924 * C2300 - C34923 * C2310 + C34917 * C2315 +
             C34925 * C6379 - C34926 * C6368 - C34925 * C6380 + C34918 * C6386 +
             C34927 * C6377 - C34928 * C6367 - C34927 * C6378 + C34919 * C6385 +
             C34929 * C30186 - C34930 * C30183 - C34929 * C30187 +
             C154044 * C30189) *
                C153638 * C153897) *
               C565) *
              C1279 +
          (((C45071 + C45072 + C45073 + C45074) * C153638 * C154037 +
            (C45617 + C45618 + C45619 + C45620) * C153638 * C153897) *
               C564 -
           ((C45074 + C45073 + C45072 + C45071) * C153638 * C153897 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C153638 * C154037) *
               C563 -
           ((C34929 * C30184 - C34930 * C30182 - C34929 * C30185 +
             C154044 * C30188 + C34927 * C30186 - C34928 * C30183 -
             C34927 * C30187 + C34919 * C30189 + C34925 * C6377 -
             C34926 * C6367 - C34925 * C6378 + C34918 * C6385 + C34923 * C6379 -
             C34924 * C6368 - C34923 * C6380 + C34917 * C6386) *
                C153638 * C153897 +
            (C45620 + C45619 + C45618 + C45617) * C153638 * C154037) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[323] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
               C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                  C2874 +
              (C11502 + C11503) * C2875 + C11512 * C154058) *
                 C154037 +
             ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
                 C153897) *
                C154022 -
            ((C19473 * C154058 + C19474 * C2875 + (C19520 + C19521) * C2874) *
                 C153897 +
             (C12477 * C154058 + C19483 * C2875 + (C19519 + C19518) * C2874) *
                 C154037) *
                C153775) *
               C1279 +
           ((((C20533 + C20534) * C2874 + C20502 * C2875 + C20503 * C154058) *
                 C154037 +
             ((C21325 + C21326) * C2874 + (C20535 + C20536) * C2875 +
              (C20537 + C20538) * C154058) *
                 C153897) *
                C153775 -
            ((C19816 * C154058 + C20520 * C2875 + (C20534 + C20533) * C2874) *
                 C153897 +
             (C12267 * C154058 + (C11786 + C11787) * C2875 +
              (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
               C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                  C2874) *
                 C154037) *
                C154022) *
               C153747) *
              C154013 +
          ((((C19472 * C2874 + C18855 * C2875 + C20107 * C154058) * C154037 +
             (C19484 * C2874 + C19485 * C2875 + (C12070 + C12071) * C154058) *
                 C153897) *
                C153775 -
            ((C12476 * C154058 + C12477 * C2875 + C19483 * C2874) * C153897 +
             (C11515 * C154058 + (C11505 + C11504) * C2875 +
              (C11503 + C11502) * C2874) *
                 C154037) *
                C154022) *
               C1279 +
           ((((C11787 + C11786) * C2874 + (C11785 + C11784) * C2875 +
              (C11783 + C11782) * C154058) *
                 C154037 +
             (C20502 * C2874 + C20503 * C2875 + (C12790 + C12791) * C154058) *
                 C153897) *
                C154022 -
            (((C11439 * C3517 - C11440 * C3510 - C11439 * C3518 +
               C153855 * C3522 + C11437 * C1520 - C11438 * C1514 -
               C11437 * C1521 + C154035 * C1529) *
                  C154058 +
              (C20538 + C20537) * C2875 + (C20536 + C20535) * C2874) *
                 C153897 +
             ((C12791 + C12790) * C154058 + C19816 * C2875 + C20520 * C2874) *
                 C154037) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
              C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
              C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
              C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
              C154044 * C1390) *
                 C153638 * C154037 +
             (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
                C154022 -
            ((C44397 + C44398 + C44399 + C44400) * C153638 * C153897 +
             (C44396 + C44395 + C44394 + C44393) * C153638 * C154037) *
                C153775) *
               C1279 +
           (((C45071 + C45072 + C45073 + C45074) * C153638 * C154037 +
             (C45617 + C45618 + C45619 + C45620) * C153638 * C153897) *
                C153775 -
            ((C45074 + C45073 + C45072 + C45071) * C153638 * C153897 +
             (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
              C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
              C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
              C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
              C34923 * C358 + C34917 * C377) *
                 C153638 * C154037) *
                C154022) *
               C153747) *
              C154013 +
          ((((C35511 + C35510 + C35509 + C35508) * C153638 * C154037 +
             (C35512 + C35513 + C35514 + C35515) * C153638 * C153897) *
                C153775 -
            ((C35508 + C35509 + C35510 + C35511) * C153638 * C153897 +
             (C35007 + C35006 + C35005 + C35004) * C153638 * C154037) *
                C154022) *
               C1279 +
           (((C35261 + C35260 + C35259 + C35258) * C153638 * C154037 +
             (C36242 + C36243 + C36244 + C36245) * C153638 * C153897) *
                C154022 -
            ((C34929 * C28694 - C34930 * C28691 - C34929 * C28695 +
              C154044 * C28697 + C34927 * C5036 - C34928 * C5032 -
              C34927 * C5037 + C34919 * C5041 + C34925 * C3513 -
              C34926 * C3508 - C34925 * C3514 + C34918 * C3520 +
              C34923 * C1524 - C34924 * C1516 - C34923 * C1525 +
              C34917 * C1531) *
                 C153638 * C153897 +
             (C36245 + C36244 + C36243 + C36242) * C153638 * C154037) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[324] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C2874 +
             (C11502 + C11503) * C2875 + C11512 * C154058) *
                C154037 +
            ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
                C153897) *
               C153711 * C1279 -
           ((C19816 * C154058 + C20520 * C2875 + (C20534 + C20533) * C2874) *
                C153897 +
            (C12267 * C154058 + (C11786 + C11787) * C2875 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C2874) *
                C154037) *
               C153711 * C153747) *
              C1281 +
          ((((C11787 + C11786) * C2874 + (C11785 + C11784) * C2875 +
             (C11783 + C11782) * C154058) *
                C154037 +
            (C20502 * C2874 + C20503 * C2875 + (C12790 + C12791) * C154058) *
                C153897) *
               C153711 * C153747 -
           ((C12476 * C154058 + C12477 * C2875 + C19483 * C2874) * C153897 +
            (C11515 * C154058 + (C11505 + C11504) * C2875 +
             (C11503 + C11502) * C2874) *
                C154037) *
               C153711 * C1279) *
              C1282 +
          (((C11512 * C2874 + C11513 * C2875 + (C11509 + C11508) * C154058) *
                C154037 +
            (C18855 * C2874 + C20107 * C2875 + (C12490 + C12491) * C154058) *
                C153897) *
               C153711 * C1279 -
           (((C11439 * C1949 - C11440 * C1944 - C11439 * C1950 +
              C153855 * C1959 + C11437 * C1119 - C11438 * C1109 -
              C11437 * C1120 + C154035 * C1127) *
                 C154058 +
             (C12791 + C12790) * C2875 + C19816 * C2874) *
                C153897 +
            ((C12281 + C12280) * C154058 + C12266 * C2875 + C12267 * C2874) *
                C154037) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C2874 +
            (C11502 + C11503) * C2875 + C11512 * C154058) *
               C154037 +
           ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
               C153897) *
              C153711 * C1366 -
          ((C19816 * C154058 + C20520 * C2875 + (C20534 + C20533) * C2874) *
               C153897 +
           (C12267 * C154058 + (C11786 + C11787) * C2875 +
            (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
             C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                C2874) *
               C154037) *
              C153711 * C1367 +
          (((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
             C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
             C153855 * C1390) *
                C2874 +
            (C11788 + C11789) * C2875 + (C11790 + C11791) * C154058) *
               C154037 +
           ((C11437 * C1957 - C11438 * C1948 - C11437 * C1958 +
             C154035 * C1963 + C11439 * C4383 - C11440 * C4379 -
             C11439 * C4384 + C153855 * C4391) *
                C2874 +
            (C19170 + C19171) * C2875 + (C19172 + C19173) * C154058) *
               C153897) *
              C153711 * C1368 -
          (((C11439 * C5772 - C11440 * C5769 - C11439 * C5773 +
             C153855 * C5778 + C11437 * C4387 - C11438 * C4381 -
             C11437 * C4388 + C154035 * C4393) *
                C154058 +
            (C11439 * C5774 - C11440 * C5770 - C11439 * C5775 +
             C153855 * C5779 + C11437 * C4385 - C11438 * C4380 -
             C11437 * C4386 + C154035 * C4392) *
                C2875 +
            (C11439 * C5776 - C11440 * C5771 - C11439 * C5777 +
             C153855 * C5780 + C11437 * C4383 - C11438 * C4379 -
             C11437 * C4384 + C154035 * C4391) *
                C2874) *
               C153897 +
           ((C11439 * C3197 - C11440 * C3191 - C11439 * C3198 +
             C153855 * C3203 + C11437 * C1380 - C11438 * C1373 -
             C11437 * C1381 + C154035 * C1388) *
                C154058 +
            (C11439 * C3195 - C11440 * C3190 - C11439 * C3196 +
             C153855 * C3202 + C11437 * C1382 - C11438 * C1374 -
             C11437 * C1383 + C154035 * C1389) *
                C2875 +
            (C11439 * C3193 - C11440 * C3189 - C11439 * C3194 +
             C153855 * C3201 + C11437 * C1384 - C11438 * C1375 -
             C11437 * C1385 + C154035 * C1390) *
                C2874) *
               C154037) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C153638 * C154037 +
            (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
               C153711 * C1279 -
           ((C45074 + C45073 + C45072 + C45071) * C153638 * C153897 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C153638 * C154037) *
               C153711 * C153747) *
              C1281 +
          (((C35261 + C35260 + C35259 + C35258) * C153638 * C154037 +
            (C36242 + C36243 + C36244 + C36245) * C153638 * C153897) *
               C153711 * C153747 -
           ((C35508 + C35509 + C35510 + C35511) * C153638 * C153897 +
            (C35007 + C35006 + C35005 + C35004) * C153638 * C154037) *
               C153711 * C1279) *
              C1282 +
          (((C35011 + C35010 + C35009 + C35008) * C153638 * C154037 +
            (C35956 + C35957 + C35958 + C35959) * C153638 * C153897) *
               C153711 * C1279 -
           ((C34929 * C5772 - C34930 * C5769 - C34929 * C5773 +
             C154044 * C5778 + C34927 * C4387 - C34928 * C4381 -
             C34927 * C4388 + C34919 * C4393 + C34925 * C1953 - C34926 * C1946 -
             C34925 * C1954 + C34918 * C1961 + C34923 * C1115 - C34924 * C1107 -
             C34923 * C1116 + C34917 * C1125) *
                C153638 * C153897 +
            (C35737 + C35736 + C35735 + C35734) * C153638 * C154037) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
            C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
            C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
            C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
            C154044 * C1390) *
               C153638 * C154037 +
           (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
              C153711 * C1366 -
          ((C45074 + C45073 + C45072 + C45071) * C153638 * C153897 +
           (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 + C154044 * C3201 +
            C34927 * C1384 - C34928 * C1375 - C34927 * C1385 + C34919 * C1390 +
            C34925 * C359 - C34926 * C342 - C34925 * C360 + C34918 * C378 +
            C34923 * C357 - C34924 * C341 - C34923 * C358 + C34917 * C377) *
               C153638 * C154037) *
              C153711 * C1367 +
          ((C34923 * C359 - C34924 * C342 - C34923 * C360 + C34917 * C378 +
            C34925 * C1384 - C34926 * C1375 - C34925 * C1385 + C34918 * C1390 +
            C34927 * C3193 - C34928 * C3189 - C34927 * C3194 + C34919 * C3201 +
            C34929 * C4808 - C34930 * C4803 - C34929 * C4809 +
            C154044 * C4812) *
               C153638 * C154037 +
           (C34923 * C1957 - C34924 * C1948 - C34923 * C1958 + C34917 * C1963 +
            C34925 * C4383 - C34926 * C4379 - C34925 * C4384 + C34918 * C4391 +
            C34927 * C5776 - C34928 * C5771 - C34927 * C5777 + C34919 * C5780 +
            C34929 * C29106 - C34930 * C29104 - C34929 * C29107 +
            C154044 * C29110) *
               C153638 * C153897) *
              C153711 * C1368 -
          ((C34929 * C29853 - C34930 * C29852 - C34929 * C29854 +
            C154044 * C29855 + C34927 * C29106 - C34928 * C29104 -
            C34927 * C29107 + C34919 * C29110 + C34925 * C5776 -
            C34926 * C5771 - C34925 * C5777 + C34918 * C5780 + C34923 * C4383 -
            C34924 * C4379 - C34923 * C4384 + C34917 * C4391) *
               C153638 * C153897 +
           (C34929 * C28562 - C34930 * C28560 - C34929 * C28563 +
            C154044 * C28566 + C34927 * C4808 - C34928 * C4803 -
            C34927 * C4809 + C34919 * C4812 + C34925 * C3193 - C34926 * C3189 -
            C34925 * C3194 + C34918 * C3201 + C34923 * C1384 - C34924 * C1375 -
            C34923 * C1385 + C34917 * C1390) *
               C153638 * C154037) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[325] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
               C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                  C2874 +
              (C11502 + C11503) * C2875 + C11512 * C154058) *
                 C154037 +
             ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
                 C153897) *
                C2086 -
            ((C19473 * C154058 + C19474 * C2875 + (C19520 + C19521) * C2874) *
                 C153897 +
             (C12477 * C154058 + C19483 * C2875 + (C19519 + C19518) * C2874) *
                 C154037) *
                C153775) *
               C154021 +
           ((((C20533 + C20534) * C2874 + C20502 * C2875 + C20503 * C154058) *
                 C154037 +
             ((C21325 + C21326) * C2874 + (C20535 + C20536) * C2875 +
              (C20537 + C20538) * C154058) *
                 C153897) *
                C153775 -
            ((C19816 * C154058 + C20520 * C2875 + (C20534 + C20533) * C2874) *
                 C153897 +
             (C12267 * C154058 + (C11786 + C11787) * C2875 +
              (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
               C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                  C2874) *
                 C154037) *
                C2086) *
               C153747) *
              C154013 +
          ((((C19472 * C2874 + C18855 * C2875 + C20107 * C154058) * C154037 +
             (C19484 * C2874 + C19485 * C2875 + (C12070 + C12071) * C154058) *
                 C153897) *
                C153775 -
            ((C12476 * C154058 + C12477 * C2875 + C19483 * C2874) * C153897 +
             (C11515 * C154058 + (C11505 + C11504) * C2875 +
              (C11503 + C11502) * C2874) *
                 C154037) *
                C2086) *
               C154021 +
           ((((C11787 + C11786) * C2874 + (C11785 + C11784) * C2875 +
              (C11783 + C11782) * C154058) *
                 C154037 +
             (C20502 * C2874 + C20503 * C2875 + (C12790 + C12791) * C154058) *
                 C153897) *
                C2086 -
            (((C11439 * C3517 - C11440 * C3510 - C11439 * C3518 +
               C153855 * C3522 + C11437 * C1520 - C11438 * C1514 -
               C11437 * C1521 + C154035 * C1529) *
                  C154058 +
              (C20538 + C20537) * C2875 + (C20536 + C20535) * C2874) *
                 C153897 +
             ((C12791 + C12790) * C154058 + C19816 * C2875 + C20520 * C2874) *
                 C154037) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
              C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
              C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
              C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
              C154044 * C1390) *
                 C153638 * C154037 +
             (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
                C2086 -
            ((C44397 + C44398 + C44399 + C44400) * C153638 * C153897 +
             (C44396 + C44395 + C44394 + C44393) * C153638 * C154037) *
                C153775) *
               C154021 +
           (((C45071 + C45072 + C45073 + C45074) * C153638 * C154037 +
             (C45617 + C45618 + C45619 + C45620) * C153638 * C153897) *
                C153775 -
            ((C45074 + C45073 + C45072 + C45071) * C153638 * C153897 +
             (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
              C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
              C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
              C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
              C34923 * C358 + C34917 * C377) *
                 C153638 * C154037) *
                C2086) *
               C153747) *
              C154013 +
          ((((C35511 + C35510 + C35509 + C35508) * C153638 * C154037 +
             (C35512 + C35513 + C35514 + C35515) * C153638 * C153897) *
                C153775 -
            ((C35508 + C35509 + C35510 + C35511) * C153638 * C153897 +
             (C35007 + C35006 + C35005 + C35004) * C153638 * C154037) *
                C2086) *
               C154021 +
           (((C35261 + C35260 + C35259 + C35258) * C153638 * C154037 +
             (C36242 + C36243 + C36244 + C36245) * C153638 * C153897) *
                C2086 -
            ((C34929 * C28694 - C34930 * C28691 - C34929 * C28695 +
              C154044 * C28697 + C34927 * C5036 - C34928 * C5032 -
              C34927 * C5037 + C34919 * C5041 + C34925 * C3513 -
              C34926 * C3508 - C34925 * C3514 + C34918 * C3520 +
              C34923 * C1524 - C34924 * C1516 - C34923 * C1525 +
              C34917 * C1531) *
                 C153638 * C153897 +
             (C36245 + C36244 + C36243 + C36242) * C153638 * C154037) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[326] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C2874 +
             (C11502 + C11503) * C2875 + C11512 * C154058) *
                C154037 +
            ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
                C153897) *
               C154094 -
           ((C19473 * C154058 + C19474 * C2875 + (C19520 + C19521) * C2874) *
                C153897 +
            (C12477 * C154058 + C19483 * C2875 + (C19519 + C19518) * C2874) *
                C154037) *
               C154095 +
           (((C19521 + C19520) * C2874 + C19484 * C2875 + C19485 * C154058) *
                C154037 +
            ((C23093 + C23094) * C2874 + (C19522 + C19523) * C2875 +
             (C19524 + C19525) * C154058) *
                C153897) *
               C2602) *
              C154021 +
          ((((C20533 + C20534) * C2874 + C20502 * C2875 + C20503 * C154058) *
                C154037 +
            ((C21325 + C21326) * C2874 + (C20535 + C20536) * C2875 +
             (C20537 + C20538) * C154058) *
                C153897) *
               C154095 -
           ((C19816 * C154058 + C20520 * C2875 + (C20534 + C20533) * C2874) *
                C153897 +
            (C12267 * C154058 + (C11786 + C11787) * C2875 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C2874) *
                C154037) *
               C154094 -
           (((C11439 * C6369 - C11440 * C6363 - C11439 * C6370 +
              C153855 * C6381 + C11437 * C6371 - C11438 * C6364 -
              C11437 * C6372 + C154035 * C6382) *
                 C154058 +
             (C11439 * C6373 - C11440 * C6365 - C11439 * C6374 +
              C153855 * C6383 + C11437 * C6375 - C11438 * C6366 -
              C11437 * C6376 + C154035 * C6384) *
                 C2875 +
             (C11439 * C6377 - C11440 * C6367 - C11439 * C6378 +
              C153855 * C6385 + C11437 * C6379 - C11438 * C6368 -
              C11437 * C6380 + C154035 * C6386) *
                 C2874) *
                C153897 +
            ((C20538 + C20537) * C154058 + (C20536 + C20535) * C2875 +
             (C21326 + C21325) * C2874) *
                C154037) *
               C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C153638 * C154037 +
            (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
               C154094 -
           ((C44397 + C44398 + C44399 + C44400) * C153638 * C153897 +
            (C44396 + C44395 + C44394 + C44393) * C153638 * C154037) *
               C154095 +
           ((C44400 + C44399 + C44398 + C44397) * C153638 * C154037 +
            (C46837 + C46838 + C46839 + C46840) * C153638 * C153897) *
               C2602) *
              C154021 +
          (((C45071 + C45072 + C45073 + C45074) * C153638 * C154037 +
            (C45617 + C45618 + C45619 + C45620) * C153638 * C153897) *
               C154095 -
           ((C45074 + C45073 + C45072 + C45071) * C153638 * C153897 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C153638 * C154037) *
               C154094 -
           ((C34929 * C30184 - C34930 * C30182 - C34929 * C30185 +
             C154044 * C30188 + C34927 * C30186 - C34928 * C30183 -
             C34927 * C30187 + C34919 * C30189 + C34925 * C6377 -
             C34926 * C6367 - C34925 * C6378 + C34918 * C6385 + C34923 * C6379 -
             C34924 * C6368 - C34923 * C6380 + C34917 * C6386) *
                C153638 * C153897 +
            (C45620 + C45619 + C45618 + C45617) * C153638 * C154037) *
               C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[327] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C2874 +
             (C11502 + C11503) * C2875 + C11512 * C154058) *
                C154037 +
            ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
                C153897) *
               C2086 -
           ((C19473 * C154058 + C19474 * C2875 + (C19520 + C19521) * C2874) *
                C153897 +
            (C12477 * C154058 + C19483 * C2875 + (C19519 + C19518) * C2874) *
                C154037) *
               C153775) *
              C332 +
          ((((C20533 + C20534) * C2874 + C20502 * C2875 + C20503 * C154058) *
                C154037 +
            ((C21325 + C21326) * C2874 + (C20535 + C20536) * C2875 +
             (C20537 + C20538) * C154058) *
                C153897) *
               C153775 -
           ((C19816 * C154058 + C20520 * C2875 + (C20534 + C20533) * C2874) *
                C153897 +
            (C12267 * C154058 + (C11786 + C11787) * C2875 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C2874) *
                C154037) *
               C2086) *
              C333 +
          ((((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
              C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
              C153855 * C1390) *
                 C2874 +
             (C11788 + C11789) * C2875 + (C11790 + C11791) * C154058) *
                C154037 +
            ((C22305 + C22306) * C2874 + (C19170 + C19171) * C2875 +
             (C19172 + C19173) * C154058) *
                C153897) *
               C2086 -
           (((C11439 * C5034 - C11440 * C5031 - C11439 * C5035 +
              C153855 * C5040 + C11437 * C3515 - C11438 * C3509 -
              C11437 * C3516 + C154035 * C3521) *
                 C154058 +
             (C11439 * C5036 - C11440 * C5032 - C11439 * C5037 +
              C153855 * C5041 + C11437 * C3513 - C11438 * C3508 -
              C11437 * C3514 + C154035 * C3520) *
                 C2875 +
             (C11439 * C5038 - C11440 * C5033 - C11439 * C5039 +
              C153855 * C5042 + C11437 * C3511 - C11438 * C3507 -
              C11437 * C3512 + C154035 * C3519) *
                 C2874) *
                C153897 +
            ((C19173 + C19172) * C154058 + (C19171 + C19170) * C2875 +
             (C22306 + C22305) * C2874) *
                C154037) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C2874 +
             (C11502 + C11503) * C2875 + C11512 * C154058) *
                C154037 +
            ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
                C153897) *
               C2086 -
           ((C19473 * C154058 + C19474 * C2875 + (C19520 + C19521) * C2874) *
                C153897 +
            (C12477 * C154058 + C19483 * C2875 + (C19519 + C19518) * C2874) *
                C154037) *
               C153775) *
              C153695 * C1281 +
          (((C19472 * C2874 + C18855 * C2875 + C20107 * C154058) * C154037 +
            (C19484 * C2874 + C19485 * C2875 + (C12070 + C12071) * C154058) *
                C153897) *
               C153775 -
           ((C12476 * C154058 + C12477 * C2875 + C19483 * C2874) * C153897 +
            (C11515 * C154058 + (C11505 + C11504) * C2875 +
             (C11503 + C11502) * C2874) *
                C154037) *
               C2086) *
              C153695 * C1282 +
          (((C11512 * C2874 + C11513 * C2875 + (C11509 + C11508) * C154058) *
                C154037 +
            (C18855 * C2874 + C20107 * C2875 + (C12490 + C12491) * C154058) *
                C153897) *
               C2086 -
           (((C11439 * C1518 - C11440 * C1513 - C11439 * C1519 +
              C153855 * C1528 + C11437 * C596 - C11438 * C575 - C11437 * C597 +
              C154035 * C611) *
                 C154058 +
             (C12071 + C12070) * C2875 + C19473 * C2874) *
                C153897 +
            ((C12491 + C12490) * C154058 + C12476 * C2875 + C12477 * C2874) *
                C154037) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
             C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                C2874 +
            (C11502 + C11503) * C2875 + C11512 * C154058) *
               C154037 +
           ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
               C153897) *
              C2292 -
          ((C19473 * C154058 + C19474 * C2875 + (C19520 + C19521) * C2874) *
               C153897 +
           (C12477 * C154058 + C19483 * C2875 + (C19519 + C19518) * C2874) *
               C154037) *
              C2293 +
          (((C19521 + C19520) * C2874 + C19484 * C2875 + C19485 * C154058) *
               C154037 +
           ((C23093 + C23094) * C2874 + (C19522 + C19523) * C2875 +
            (C19524 + C19525) * C154058) *
               C153897) *
              C2294 -
          (((C11439 * C9202 - C11440 * C9199 - C11439 * C9203 +
             C153855 * C9208 + C11437 * C7748 - C11438 * C7742 -
             C11437 * C7749 + C154035 * C7754) *
                C154058 +
            (C11439 * C9204 - C11440 * C9200 - C11439 * C9205 +
             C153855 * C9209 + C11437 * C7746 - C11438 * C7741 -
             C11437 * C7747 + C154035 * C7753) *
                C2875 +
            (C11439 * C9206 - C11440 * C9201 - C11439 * C9207 +
             C153855 * C9210 + C11437 * C7744 - C11438 * C7740 -
             C11437 * C7745 + C154035 * C7752) *
                C2874) *
               C153897 +
           ((C19525 + C19524) * C154058 + (C19523 + C19522) * C2875 +
            (C23094 + C23093) * C2874) *
               C154037) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C153638 * C154037 +
            (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
               C2086 -
           ((C44397 + C44398 + C44399 + C44400) * C153638 * C153897 +
            (C44396 + C44395 + C44394 + C44393) * C153638 * C154037) *
               C153775) *
              C153695 * C1281 +
          (((C35511 + C35510 + C35509 + C35508) * C153638 * C154037 +
            (C35512 + C35513 + C35514 + C35515) * C153638 * C153897) *
               C153775 -
           ((C35508 + C35509 + C35510 + C35511) * C153638 * C153897 +
            (C35007 + C35006 + C35005 + C35004) * C153638 * C154037) *
               C2086) *
              C153695 * C1282 +
          (((C35011 + C35010 + C35009 + C35008) * C153638 * C154037 +
            (C35956 + C35957 + C35958 + C35959) * C153638 * C153897) *
               C2086 -
           ((C34929 * C5034 - C34930 * C5031 - C34929 * C5035 +
             C154044 * C5040 + C34927 * C3515 - C34928 * C3509 -
             C34927 * C3516 + C34919 * C3521 + C34925 * C1522 - C34926 * C1515 -
             C34925 * C1523 + C34918 * C1530 + C34923 * C592 - C34924 * C573 -
             C34923 * C593 + C34917 * C609) *
                C153638 * C153897 +
            (C35959 + C35958 + C35957 + C35956) * C153638 * C154037) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C153638 * C154037 +
            (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
               C2086 -
           ((C44397 + C44398 + C44399 + C44400) * C153638 * C153897 +
            (C44396 + C44395 + C44394 + C44393) * C153638 * C154037) *
               C153775) *
              C332 +
          (((C45071 + C45072 + C45073 + C45074) * C153638 * C154037 +
            (C45617 + C45618 + C45619 + C45620) * C153638 * C153897) *
               C153775 -
           ((C45074 + C45073 + C45072 + C45071) * C153638 * C153897 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C153638 * C154037) *
               C2086) *
              C333 +
          (((C34923 * C359 - C34924 * C342 - C34923 * C360 + C34917 * C378 +
             C34925 * C1384 - C34926 * C1375 - C34925 * C1385 + C34918 * C1390 +
             C34927 * C3193 - C34928 * C3189 - C34927 * C3194 + C34919 * C3201 +
             C34929 * C4808 - C34930 * C4803 - C34929 * C4809 +
             C154044 * C4812) *
                C153638 * C154037 +
            (C46291 + C46292 + C46293 + C46294) * C153638 * C153897) *
               C2086 -
           ((C34929 * C29443 - C34930 * C29442 - C34929 * C29444 +
             C154044 * C29445 + C34927 * C28692 - C34928 * C28690 -
             C34927 * C28693 + C34919 * C28696 + C34925 * C5038 -
             C34926 * C5033 - C34925 * C5039 + C34918 * C5042 + C34923 * C3511 -
             C34924 * C3507 - C34923 * C3512 + C34917 * C3519) *
                C153638 * C153897 +
            (C46294 + C46293 + C46292 + C46291) * C153638 * C154037) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
            C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
            C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
            C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
            C154044 * C1390) *
               C153638 * C154037 +
           (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
              C2292 -
          ((C44397 + C44398 + C44399 + C44400) * C153638 * C153897 +
           (C44396 + C44395 + C44394 + C44393) * C153638 * C154037) *
              C2293 +
          ((C44400 + C44399 + C44398 + C44397) * C153638 * C154037 +
           (C46837 + C46838 + C46839 + C46840) * C153638 * C153897) *
              C2294 -
          ((C34929 * C32652 - C34930 * C32651 - C34929 * C32653 +
            C154044 * C32654 + C34927 * C31180 - C34928 * C31178 -
            C34927 * C31181 + C34919 * C31184 + C34925 * C9206 -
            C34926 * C9201 - C34925 * C9207 + C34918 * C9210 + C34923 * C7744 -
            C34924 * C7740 - C34923 * C7745 + C34917 * C7752) *
               C153638 * C153897 +
           (C46840 + C46839 + C46838 + C46837) * C153638 * C154037) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[328] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C2874 +
             (C11502 + C11503) * C2875 + C11512 * C154058) *
                C154037 +
            ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
                C153897) *
               C154094 -
           ((C19473 * C154058 + C19474 * C2875 + (C19520 + C19521) * C2874) *
                C153897 +
            (C12477 * C154058 + C19483 * C2875 + (C19519 + C19518) * C2874) *
                C154037) *
               C154095 +
           (((C19521 + C19520) * C2874 + C19484 * C2875 + C19485 * C154058) *
                C154037 +
            ((C23093 + C23094) * C2874 + (C19522 + C19523) * C2875 +
             (C19524 + C19525) * C154058) *
                C153897) *
               C2602) *
              C153695 * C154013 +
          (((C19472 * C2874 + C18855 * C2875 + C20107 * C154058) * C154037 +
            (C19484 * C2874 + C19485 * C2875 + (C12070 + C12071) * C154058) *
                C153897) *
               C154095 -
           ((C12476 * C154058 + C12477 * C2875 + C19483 * C2874) * C153897 +
            (C11515 * C154058 + (C11505 + C11504) * C2875 +
             (C11503 + C11502) * C2874) *
                C154037) *
               C154094 -
           (((C11439 * C8574 - C11440 * C8573 - C11439 * C8575 +
              C153855 * C8576 + C11437 * C2303 - C11438 * C2297 -
              C11437 * C2304 + C154035 * C2312) *
                 C154058 +
             (C19525 + C19524) * C2875 + (C19523 + C19522) * C2874) *
                C153897 +
            ((C12071 + C12070) * C154058 + C19473 * C2875 + C19474 * C2874) *
                C154037) *
               C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C153638 * C154037 +
            (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
               C154094 -
           ((C44397 + C44398 + C44399 + C44400) * C153638 * C153897 +
            (C44396 + C44395 + C44394 + C44393) * C153638 * C154037) *
               C154095 +
           ((C44400 + C44399 + C44398 + C44397) * C153638 * C154037 +
            (C46837 + C46838 + C46839 + C46840) * C153638 * C153897) *
               C2602) *
              C153695 * C154013 +
          (((C35511 + C35510 + C35509 + C35508) * C153638 * C154037 +
            (C35512 + C35513 + C35514 + C35515) * C153638 * C153897) *
               C154095 -
           ((C35508 + C35509 + C35510 + C35511) * C153638 * C153897 +
            (C35007 + C35006 + C35005 + C35004) * C153638 * C154037) *
               C154094 -
           ((C34929 * C32003 - C34930 * C32002 - C34929 * C32004 +
             C154044 * C32005 + C34927 * C6373 - C34928 * C6365 -
             C34927 * C6374 + C34919 * C6383 + C34925 * C6375 - C34926 * C6366 -
             C34925 * C6376 + C34918 * C6384 + C34923 * C2307 - C34924 * C2299 -
             C34923 * C2308 + C34917 * C2314) *
                C153638 * C153897 +
            (C35515 + C35514 + C35513 + C35512) * C153638 * C154037) *
               C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[329] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C2874 +
             (C11502 + C11503) * C2875 + C11512 * C154058) *
                C154037 +
            ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
                C153897) *
               C2086 -
           ((C19473 * C154058 + C19474 * C2875 + (C19520 + C19521) * C2874) *
                C153897 +
            (C12477 * C154058 + C19483 * C2875 + (C19519 + C19518) * C2874) *
                C154037) *
               C153775) *
              C153695 * C1281 +
          (((C19472 * C2874 + C18855 * C2875 + C20107 * C154058) * C154037 +
            (C19484 * C2874 + C19485 * C2875 + (C12070 + C12071) * C154058) *
                C153897) *
               C153775 -
           ((C12476 * C154058 + C12477 * C2875 + C19483 * C2874) * C153897 +
            (C11515 * C154058 + (C11505 + C11504) * C2875 +
             (C11503 + C11502) * C2874) *
                C154037) *
               C2086) *
              C153695 * C1282 +
          (((C11512 * C2874 + C11513 * C2875 + (C11509 + C11508) * C154058) *
                C154037 +
            (C18855 * C2874 + C20107 * C2875 + (C12490 + C12491) * C154058) *
                C153897) *
               C2086 -
           (((C11439 * C1518 - C11440 * C1513 - C11439 * C1519 +
              C153855 * C1528 + C11437 * C596 - C11438 * C575 - C11437 * C597 +
              C154035 * C611) *
                 C154058 +
             (C12071 + C12070) * C2875 + C19473 * C2874) *
                C153897 +
            ((C12491 + C12490) * C154058 + C12476 * C2875 + C12477 * C2874) *
                C154037) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C11437 * C144 - C11438 * C136 - C11437 * C145 + C154035 * C160 +
              C11439 * C357 - C11440 * C341 - C11439 * C358 + C153855 * C377) *
                 C2874 +
             (C11502 + C11503) * C2875 + C11512 * C154058) *
                C154037 +
            ((C19518 + C19519) * C2874 + C19472 * C2875 + C18855 * C154058) *
                C153897) *
               C2086 -
           ((C19473 * C154058 + C19474 * C2875 + (C19520 + C19521) * C2874) *
                C153897 +
            (C12477 * C154058 + C19483 * C2875 + (C19519 + C19518) * C2874) *
                C154037) *
               C153775) *
              C332 +
          ((((C20533 + C20534) * C2874 + C20502 * C2875 + C20503 * C154058) *
                C154037 +
            ((C21325 + C21326) * C2874 + (C20535 + C20536) * C2875 +
             (C20537 + C20538) * C154058) *
                C153897) *
               C153775 -
           ((C19816 * C154058 + C20520 * C2875 + (C20534 + C20533) * C2874) *
                C153897 +
            (C12267 * C154058 + (C11786 + C11787) * C2875 +
             (C11439 * C359 - C11440 * C342 - C11439 * C360 + C153855 * C378 +
              C11437 * C357 - C11438 * C341 - C11437 * C358 + C154035 * C377) *
                 C2874) *
                C154037) *
               C2086) *
              C333 +
          ((((C11437 * C359 - C11438 * C342 - C11437 * C360 + C154035 * C378 +
              C11439 * C1384 - C11440 * C1375 - C11439 * C1385 +
              C153855 * C1390) *
                 C2874 +
             (C11788 + C11789) * C2875 + (C11790 + C11791) * C154058) *
                C154037 +
            ((C22305 + C22306) * C2874 + (C19170 + C19171) * C2875 +
             (C19172 + C19173) * C154058) *
                C153897) *
               C2086 -
           (((C11439 * C5034 - C11440 * C5031 - C11439 * C5035 +
              C153855 * C5040 + C11437 * C3515 - C11438 * C3509 -
              C11437 * C3516 + C154035 * C3521) *
                 C154058 +
             (C11439 * C5036 - C11440 * C5032 - C11439 * C5037 +
              C153855 * C5041 + C11437 * C3513 - C11438 * C3508 -
              C11437 * C3514 + C154035 * C3520) *
                 C2875 +
             (C11439 * C5038 - C11440 * C5033 - C11439 * C5039 +
              C153855 * C5042 + C11437 * C3511 - C11438 * C3507 -
              C11437 * C3512 + C154035 * C3519) *
                 C2874) *
                C153897 +
            ((C19173 + C19172) * C154058 + (C19171 + C19170) * C2875 +
             (C22306 + C22305) * C2874) *
                C154037) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C153638 * C154037 +
            (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
               C2086 -
           ((C44397 + C44398 + C44399 + C44400) * C153638 * C153897 +
            (C44396 + C44395 + C44394 + C44393) * C153638 * C154037) *
               C153775) *
              C153695 * C1281 +
          (((C35511 + C35510 + C35509 + C35508) * C153638 * C154037 +
            (C35512 + C35513 + C35514 + C35515) * C153638 * C153897) *
               C153775 -
           ((C35508 + C35509 + C35510 + C35511) * C153638 * C153897 +
            (C35007 + C35006 + C35005 + C35004) * C153638 * C154037) *
               C2086) *
              C153695 * C1282 +
          (((C35011 + C35010 + C35009 + C35008) * C153638 * C154037 +
            (C35956 + C35957 + C35958 + C35959) * C153638 * C153897) *
               C2086 -
           ((C34929 * C5034 - C34930 * C5031 - C34929 * C5035 +
             C154044 * C5040 + C34927 * C3515 - C34928 * C3509 -
             C34927 * C3516 + C34919 * C3521 + C34925 * C1522 - C34926 * C1515 -
             C34925 * C1523 + C34918 * C1530 + C34923 * C592 - C34924 * C573 -
             C34923 * C593 + C34917 * C609) *
                C153638 * C153897 +
            (C35959 + C35958 + C35957 + C35956) * C153638 * C154037) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C34923 * C144 - C34924 * C136 - C34923 * C145 + C34917 * C160 +
             C34925 * C357 - C34926 * C341 - C34925 * C358 + C34918 * C377 +
             C34927 * C359 - C34928 * C342 - C34927 * C360 + C34919 * C378 +
             C34929 * C1384 - C34930 * C1375 - C34929 * C1385 +
             C154044 * C1390) *
                C153638 * C154037 +
            (C44393 + C44394 + C44395 + C44396) * C153638 * C153897) *
               C2086 -
           ((C44397 + C44398 + C44399 + C44400) * C153638 * C153897 +
            (C44396 + C44395 + C44394 + C44393) * C153638 * C154037) *
               C153775) *
              C332 +
          (((C45071 + C45072 + C45073 + C45074) * C153638 * C154037 +
            (C45617 + C45618 + C45619 + C45620) * C153638 * C153897) *
               C153775 -
           ((C45074 + C45073 + C45072 + C45071) * C153638 * C153897 +
            (C34929 * C3193 - C34930 * C3189 - C34929 * C3194 +
             C154044 * C3201 + C34927 * C1384 - C34928 * C1375 -
             C34927 * C1385 + C34919 * C1390 + C34925 * C359 - C34926 * C342 -
             C34925 * C360 + C34918 * C378 + C34923 * C357 - C34924 * C341 -
             C34923 * C358 + C34917 * C377) *
                C153638 * C154037) *
               C2086) *
              C333 +
          (((C34923 * C359 - C34924 * C342 - C34923 * C360 + C34917 * C378 +
             C34925 * C1384 - C34926 * C1375 - C34925 * C1385 + C34918 * C1390 +
             C34927 * C3193 - C34928 * C3189 - C34927 * C3194 + C34919 * C3201 +
             C34929 * C4808 - C34930 * C4803 - C34929 * C4809 +
             C154044 * C4812) *
                C153638 * C154037 +
            (C46291 + C46292 + C46293 + C46294) * C153638 * C153897) *
               C2086 -
           ((C34929 * C29443 - C34930 * C29442 - C34929 * C29444 +
             C154044 * C29445 + C34927 * C28692 - C34928 * C28690 -
             C34927 * C28693 + C34919 * C28696 + C34925 * C5038 -
             C34926 * C5033 - C34925 * C5039 + C34918 * C5042 + C34923 * C3511 -
             C34924 * C3507 - C34923 * C3512 + C34917 * C3519) *
                C153638 * C153897 +
            (C46294 + C46293 + C46292 + C46291) * C153638 * C154037) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[330] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C153711 * C154021 -
           (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C2874) *
               C153810 * C153711 * C153747) *
              C154090 +
          (((C3283 + C3282 + C3281) * C2874 + (C3280 + C3279 + C3278) * C2875 +
            (C3846 + C3847 + C3848) * C154058) *
               C153810 * C153711 * C153747 -
           (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
            (C2958 + C2957 + C2956) * C2874) *
               C153810 * C153711 * C154021) *
              C154091 +
          ((C2970 * C2874 + (C2964 + C2963 + C2962) * C2875 +
            (C2965 + C2966 + C2967) * C154058) *
               C153810 * C153711 * C154021 -
           ((C2881 * C1376 - C2882 * C1371 - C2881 * C1377 + C154071 * C1386 +
             C2879 * C367 - C2880 * C346 - C2879 * C368 + C154097 * C382 +
             C2877 * C349 - C2878 * C337 - C2877 * C350 + C154109 * C373) *
                C154058 +
            (C3848 + C3847 + C3846) * C2875 + C3839 * C2874) *
               C153810 * C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C153711 * C154021 -
           (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) * C122) *
               C153810 * C153711 * C153747) *
              C154090 +
          ((C437 * C122 + C436 * C123 + C435 * C124 + C434 * C125 +
            C808 * C126) *
               C153810 * C153711 * C153747 -
           (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
            C205 * C122) *
               C153810 * C153711 * C154021) *
              C154091 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125 +
            C210 * C126) *
               C153810 * C153711 * C154021 -
           ((C134 * C798 - C135 * C797 - C134 * C799 + C153792 * C800) * C126 +
            C808 * C125 + C434 * C124 + C435 * C123 + C436 * C122) *
               C153810 * C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C2874 +
             C205 * C2875 + C206 * C154058) *
                C154110 +
            (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
               C153711 * C154021 -
           ((C7517 * C154058 + C7518 * C2875 +
             (C134 * C1526 - C135 * C1517 - C134 * C1527 + C153792 * C1532) *
                 C2874) *
                C154074 +
            (C1155 * C154058 + C1154 * C2875 +
             (C134 * C1111 - C135 * C1105 - C134 * C1112 + C153792 * C1123) *
                 C2874) *
                C154099 +
            (C436 * C154058 + C437 * C2875 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C2874) *
                C154110) *
               C153711 * C153747) *
              C154090 +
          (((C437 * C2874 + C436 * C2875 + C435 * C154058) * C154110 +
            (C1154 * C2874 + C1155 * C2875 + C1156 * C154058) * C154099 +
            (C7518 * C2874 + C7517 * C2875 + C8059 * C154058) * C154074) *
               C153711 * C153747 -
           (C7816 * C154074 + (C7791 + C7790 + C7789) * C154099 +
            (C207 * C154058 + C206 * C2875 + C205 * C2874) * C154110) *
               C153711 * C154021) *
              C154091 +
          (((C206 * C2874 + C207 * C2875 + C208 * C154058) * C154110 +
            (C665 * C2874 + C664 * C2875 + C663 * C154058) * C154099 +
            (C668 * C2874 + C669 * C2875 + C670 * C154058) * C154074) *
               C153711 * C154021 -
           (((C134 * C1518 - C135 * C1513 - C134 * C1519 + C153792 * C1528) *
                 C154058 +
             C8059 * C2875 + C7517 * C2874) *
                C154074 +
            (C1157 * C154058 + C1156 * C2875 + C1155 * C2874) * C154099 +
            (C434 * C154058 + C435 * C2875 + C436 * C2874) * C154110) *
               C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C153711 * C154021 -
           (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C153711 * C153747) *
              C154090 +
          (((C24602 + C24601 + C24600) * C154106 +
            (C24599 + C24598 + C24597) * C154087 +
            (C25149 + C25150 + C25151) * C154058) *
               C153810 * C153711 * C153747 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C153711 * C154021) *
              C154091 +
          ((C24305 * C154106 + (C24299 + C24298 + C24297) * C154087 +
            (C24300 + C24301 + C24302) * C154058) *
               C153810 * C153711 * C154021 -
           ((C24216 * C1376 - C24217 * C1371 - C24216 * C1377 +
             C154071 * C1386 + C24214 * C367 - C24215 * C346 - C24214 * C368 +
             C24207 * C382 + C24212 * C349 - C24213 * C337 - C24212 * C350 +
             C24206 * C373) *
                C154058 +
            (C25151 + C25150 + C25149) * C154087 + C25142 * C154106) *
               C153810 * C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C153711 * C154021 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C153711 * C153747) *
              C154090 +
          ((C28428 * C355 - C28429 * C340 - C28428 * C356 + C28422 * C376 +
            C28430 * C361 - C28431 * C343 - C28430 * C362 + C28423 * C379 +
            C28432 * C1382 - C28433 * C1374 - C28432 * C1383 + C28424 * C1389 +
            C28434 * C3195 - C28435 * C3190 - C28434 * C3196 + C28425 * C3202 +
            C28436 * C4806 - C28437 * C4802 - C28436 * C4807 + C28426 * C4811) *
               C153638 * C153810 * C153711 * C153747 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C153711 * C154021) *
              C154091 +
          ((C28428 * C148 - C28429 * C138 - C28428 * C149 + C28422 * C162 +
            C28430 * C353 - C28431 * C339 - C28430 * C354 + C28423 * C375 +
            C28432 * C363 - C28433 * C344 - C28432 * C364 + C28424 * C380 +
            C28434 * C1380 - C28435 * C1373 - C28434 * C1381 + C28425 * C1388 +
            C28436 * C3197 - C28437 * C3191 - C28436 * C3198 + C28426 * C3203) *
               C153638 * C153810 * C153711 * C154021 -
           (C28436 * C4804 - C28437 * C4801 - C28436 * C4805 + C28426 * C4810 +
            C28434 * C3197 - C28435 * C3191 - C28434 * C3198 + C28425 * C3203 +
            C28432 * C1380 - C28433 * C1373 - C28432 * C1381 + C28424 * C1388 +
            C28430 * C363 - C28431 * C344 - C28430 * C364 + C28423 * C380 +
            C28428 * C353 - C28429 * C339 - C28428 * C354 + C28422 * C375) *
               C153638 * C153810 * C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C153638 * C154110 +
            (C31262 + C31263 + C31264) * C153638 * C154099 + C31276 * C154074) *
               C153711 * C154021 -
           ((C24216 * C5038 - C24217 * C5033 - C24216 * C5039 +
             C154071 * C5042 + C24214 * C3511 - C24215 * C3507 -
             C24214 * C3512 + C24207 * C3519 + C24212 * C1526 - C24213 * C1517 -
             C24212 * C1527 + C24206 * C1532) *
                C153638 * C154074 +
            (C24216 * C4383 - C24217 * C4379 - C24216 * C4384 +
             C154071 * C4391 + C24214 * C1957 - C24215 * C1948 -
             C24214 * C1958 + C24207 * C1963 + C24212 * C1111 - C24213 * C1105 -
             C24212 * C1112 + C24206 * C1123) *
                C153638 * C154099 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C153638 * C154110) *
               C153711 * C153747) *
              C154090 +
          (((C24602 + C24601 + C24600) * C153638 * C154110 +
            (C25719 + C25720 + C25721) * C153638 * C154099 +
            (C24212 * C1524 - C24213 * C1516 - C24212 * C1525 + C24206 * C1531 +
             C24214 * C3513 - C24215 * C3508 - C24214 * C3514 + C24207 * C3520 +
             C24216 * C5036 - C24217 * C5032 - C24216 * C5037 +
             C154071 * C5041) *
                C153638 * C154074) *
               C153711 * C153747 -
           (C31261 * C154074 + (C24902 + C24903 + C24904) * C153638 * C154099 +
            (C24293 + C24292 + C24291) * C153638 * C154110) *
               C153711 * C154021) *
              C154091 +
          ((C24305 * C153638 * C154110 +
            (C24901 + C24900 + C24899) * C153638 * C154099 +
            (C24908 + C24909 + C24910) * C153638 * C154074) *
               C153711 * C154021 -
           ((C24216 * C5034 - C24217 * C5031 - C24216 * C5035 +
             C154071 * C5040 + C24214 * C3515 - C24215 * C3509 -
             C24214 * C3516 + C24207 * C3521 + C24212 * C1522 - C24213 * C1515 -
             C24212 * C1523 + C24206 * C1530) *
                C153638 * C154074 +
            (C25724 + C25723 + C25722) * C153638 * C154099 +
            C25142 * C153638 * C154110) *
               C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q));
    d2ee[331] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C2874 +
             (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
                C153810 * C154022 -
            (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
             (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
              C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
              C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                 C2874) *
                C153810 * C153775) *
               C154021 +
           (((C2877 * C1111 - C2878 * C1105 - C2877 * C1112 + C154109 * C1123 +
              C2879 * C1957 - C2880 * C1948 - C2879 * C1958 + C154097 * C1963 +
              C2881 * C4383 - C2882 * C4379 - C2881 * C4384 + C154071 * C4391) *
                 C2874 +
             (C4432 + C4433 + C4434) * C2875 +
             (C4435 + C4436 + C4437) * C154058) *
                C153810 * C153775 -
            (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C2874) *
                C153810 * C154022) *
               C153747) *
              C335 +
          ((((C3601 + C3600 + C3599) * C2874 + (C3598 + C3597 + C3596) * C2875 +
             (C4087 + C4088 + C4089) * C154058) *
                C153810 * C153775 -
            (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
             (C2958 + C2957 + C2956) * C2874) *
                C153810 * C154022) *
               C154021 +
           (((C3283 + C3282 + C3281) * C2874 + (C3280 + C3279 + C3278) * C2875 +
             (C3846 + C3847 + C3848) * C154058) *
                C153810 * C154022 -
            ((C2881 * C4389 - C2882 * C4382 - C2881 * C4390 + C154071 * C4394 +
              C2879 * C1951 - C2880 * C1945 - C2879 * C1952 + C154097 * C1960 +
              C2877 * C1117 - C2878 * C1108 - C2877 * C1118 + C154109 * C1126) *
                 C154058 +
             (C4437 + C4436 + C4435) * C2875 +
             (C4434 + C4433 + C4432) * C2874) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                C153810 * C154022 -
            (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
             (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) *
                 C122) *
                C153810 * C153775) *
               C154021 +
           (((C134 * C1111 - C135 * C1105 - C134 * C1112 + C153792 * C1123) *
                 C122 +
             C1154 * C123 + C1155 * C124 + C1156 * C125 + C1157 * C126) *
                C153810 * C153775 -
            (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C122) *
                C153810 * C154022) *
               C153747) *
              C335 +
          (((C666 * C122 + C665 * C123 + C664 * C124 + C663 * C125 +
             C943 * C126) *
                C153810 * C153775 -
            (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
             C205 * C122) *
                C153810 * C154022) *
               C154021 +
           ((C437 * C122 + C436 * C123 + C435 * C124 + C434 * C125 +
             C808 * C126) *
                C153810 * C154022 -
            ((C134 * C1121 - C135 * C1110 - C134 * C1122 + C153792 * C1128) *
                 C126 +
             C1157 * C125 + C1156 * C124 + C1155 * C123 + C1154 * C122) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                  C2874 +
              C205 * C2875 + C206 * C154058) *
                 C154110 +
             (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
                C154022 -
            ((C7827 + C7828 + C7829) * C154074 +
             (C7768 + C7767 + C7826) * C154099 +
             (C7762 + C7761 + C7825) * C154110) *
                C153775) *
               C154021 +
           (((C8616 + C8582 + C8583) * C154110 +
             (C8617 + C8588 + C8589) * C154099 +
             ((C134 * C6379 - C135 * C6368 - C134 * C6380 + C153792 * C6386) *
                  C2874 +
              C8614 * C2875 + C8615 * C154058) *
                 C154074) *
                C153775 -
            ((C8589 + C8588 + C8617) * C154074 +
             (C8583 + C8582 + C8616) * C154099 +
             (C436 * C154058 + C437 * C2875 +
              (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                  C2874) *
                 C154110) *
                C154022) *
               C153747) *
              C335 +
          ((((C7789 + C7790 + C7791) * C154110 +
             (C7792 + C7793 + C7794) * C154099 +
             (C7830 + C7831 + C7832) * C154074) *
                C153775 -
            (C7816 * C154074 + (C7791 + C7790 + C7789) * C154099 +
             (C207 * C154058 + C206 * C2875 + C205 * C2874) * C154110) *
                C154022) *
               C154021 +
           (((C437 * C2874 + C436 * C2875 + C435 * C154058) * C154110 +
             (C8598 + C8599 + C8600) * C154099 +
             (C8601 + C8602 + C8603) * C154074) *
                C154022 -
            (((C134 * C8574 - C135 * C8573 - C134 * C8575 + C153792 * C8576) *
                  C154058 +
              C8615 * C2875 + C8614 * C2874) *
                 C154074 +
             (C8603 + C8602 + C8601) * C154099 +
             (C8600 + C8599 + C8598) * C154110) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154106 +
             (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
                C153810 * C154022 -
            (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
             (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
              C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
              C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
              C24212 * C587 + C24206 * C606) *
                 C154106) *
                C153810 * C153775) *
               C154021 +
           (((C24212 * C1111 - C24213 * C1105 - C24212 * C1112 +
              C24206 * C1123 + C24214 * C1957 - C24215 * C1948 -
              C24214 * C1958 + C24207 * C1963 + C24216 * C4383 -
              C24217 * C4379 - C24216 * C4384 + C154071 * C4391) *
                 C154106 +
             (C25719 + C25720 + C25721) * C154087 +
             (C25722 + C25723 + C25724) * C154058) *
                C153810 * C153775 -
            (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C154106) *
                C153810 * C154022) *
               C153747) *
              C335 +
          ((((C24904 + C24903 + C24902) * C154106 +
             (C24901 + C24900 + C24899) * C154087 +
             (C25390 + C25391 + C25392) * C154058) *
                C153810 * C153775 -
            (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
             (C24293 + C24292 + C24291) * C154106) *
                C153810 * C154022) *
               C154021 +
           (((C24602 + C24601 + C24600) * C154106 +
             (C24599 + C24598 + C24597) * C154087 +
             (C25149 + C25150 + C25151) * C154058) *
                C153810 * C154022 -
            ((C24216 * C4389 - C24217 * C4382 - C24216 * C4390 +
              C154071 * C4394 + C24214 * C1951 - C24215 * C1945 -
              C24214 * C1952 + C24207 * C1960 + C24212 * C1117 -
              C24213 * C1108 - C24212 * C1118 + C24206 * C1126) *
                 C154058 +
             (C25724 + C25723 + C25722) * C154087 +
             (C25721 + C25720 + C25719) * C154106) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
             C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
             C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
             C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
             C28436 * C3193 - C28437 * C3189 - C28436 * C3194 +
             C28426 * C3201) *
                C153638 * C153810 * C154022 -
            (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
             C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
             C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
             C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
             C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
                C153638 * C153810 * C153775) *
               C154021 +
           ((C28428 * C1111 - C28429 * C1105 - C28428 * C1112 + C28422 * C1123 +
             C28430 * C1957 - C28431 * C1948 - C28430 * C1958 + C28423 * C1963 +
             C28432 * C4383 - C28433 * C4379 - C28432 * C4384 + C28424 * C4391 +
             C28434 * C5776 - C28435 * C5771 - C28434 * C5777 + C28425 * C5780 +
             C28436 * C29106 - C28437 * C29104 - C28436 * C29107 +
             C28426 * C29110) *
                C153638 * C153810 * C153775 -
            (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
             C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
             C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
             C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
             C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
                C153638 * C153810 * C154022) *
               C153747) *
              C335 +
          (((C28428 * C584 - C28429 * C569 - C28428 * C585 + C28422 * C605 +
             C28430 * C1113 - C28431 * C1106 - C28430 * C1114 + C28423 * C1124 +
             C28432 * C1955 - C28433 * C1947 - C28432 * C1956 + C28424 * C1962 +
             C28434 * C4385 - C28435 * C4380 - C28434 * C4386 + C28425 * C4392 +
             C28436 * C5774 - C28437 * C5770 - C28436 * C5775 +
             C28426 * C5779) *
                C153638 * C153810 * C153775 -
            (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
             C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
             C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
             C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
             C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
                C153638 * C153810 * C154022) *
               C154021 +
           ((C28428 * C355 - C28429 * C340 - C28428 * C356 + C28422 * C376 +
             C28430 * C361 - C28431 * C343 - C28430 * C362 + C28423 * C379 +
             C28432 * C1382 - C28433 * C1374 - C28432 * C1383 + C28424 * C1389 +
             C28434 * C3195 - C28435 * C3190 - C28434 * C3196 + C28425 * C3202 +
             C28436 * C4806 - C28437 * C4802 - C28436 * C4807 +
             C28426 * C4811) *
                C153638 * C153810 * C154022 -
            (C28436 * C29108 - C28437 * C29105 - C28436 * C29109 +
             C28426 * C29111 + C28434 * C5774 - C28435 * C5770 -
             C28434 * C5775 + C28425 * C5779 + C28432 * C4385 - C28433 * C4380 -
             C28432 * C4386 + C28424 * C4392 + C28430 * C1955 - C28431 * C1947 -
             C28430 * C1956 + C28423 * C1962 + C28428 * C1113 - C28429 * C1106 -
             C28428 * C1114 + C28422 * C1124) *
                C153638 * C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C153638 * C154110 +
             (C31262 + C31263 + C31264) * C153638 * C154099 +
             C31276 * C154074) *
                C154022 -
            ((C31268 + C31269 + C31270) * C153638 * C154074 +
             (C31267 + C31266 + C31265) * C153638 * C154099 +
             (C31264 + C31263 + C31262) * C153638 * C154110) *
                C153775) *
               C154021 +
           (((C32061 + C32062 + C32063) * C153638 * C154110 +
             (C32064 + C32065 + C32066) * C153638 * C154099 +
             (C24212 * C6379 - C24213 * C6368 - C24212 * C6380 +
              C24206 * C6386 + C24214 * C6377 - C24215 * C6367 -
              C24214 * C6378 + C24207 * C6385 + C24216 * C30186 -
              C24217 * C30183 - C24216 * C30187 + C154071 * C30189) *
                 C153638 * C154074) *
                C153775 -
            ((C32066 + C32065 + C32064) * C153638 * C154074 +
             (C32063 + C32062 + C32061) * C153638 * C154099 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C153638 * C154110) *
                C154022) *
               C153747) *
              C335 +
          ((((C24904 + C24903 + C24902) * C153638 * C154110 +
             (C24905 + C24906 + C24907) * C153638 * C154099 +
             (C31271 + C31272 + C31273) * C153638 * C154074) *
                C153775 -
            (C31261 * C154074 + (C24902 + C24903 + C24904) * C153638 * C154099 +
             (C24293 + C24292 + C24291) * C153638 * C154110) *
                C154022) *
               C154021 +
           (((C24602 + C24601 + C24600) * C153638 * C154110 +
             (C25719 + C25720 + C25721) * C153638 * C154099 +
             (C32067 + C32068 + C32069) * C153638 * C154074) *
                C154022 -
            ((C24216 * C32003 - C24217 * C32002 - C24216 * C32004 +
              C154071 * C32005 + C24214 * C6373 - C24215 * C6365 -
              C24214 * C6374 + C24207 * C6383 + C24212 * C6375 -
              C24213 * C6366 - C24212 * C6376 + C24206 * C6384) *
                 C153638 * C154074 +
             (C32069 + C32068 + C32067) * C153638 * C154099 +
             (C25721 + C25720 + C25719) * C153638 * C154110) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[332] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                   C122 +
               C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                  C153810 * C153711 * C153695 * C130 -
              (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
               C205 * C122) *
                  C153810 * C153711 * C153695 * C131 +
              (C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125 +
               C210 * C126) *
                  C153810 * C153711 * C153695 * C132 -
              ((C134 * C158 - C135 * C143 - C134 * C159 + C153792 * C167) *
                   C126 +
               C210 * C125 + C209 * C124 + C208 * C123 + C207 * C122) *
                  C153810 * C153711 * C153695 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                    C122 +
                C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                   C153810 * C153711 * C332 -
               (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
                (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                    C122) *
                   C153810 * C153711 * C333 +
               ((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                    C122 +
                C438 * C123 + C439 * C124 + C440 * C125 + C441 * C126) *
                   C153810 * C153711 * C334) *
                  C335 +
              ((C437 * C122 + C436 * C123 + C435 * C124 + C434 * C125 +
                (C134 * C369 - C135 * C347 - C134 * C370 + C153792 * C383) *
                    C126) *
                   C153810 * C153711 * C333 -
               (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
                C205 * C122) *
                   C153810 * C153711 * C332 -
               ((C134 * C371 - C135 * C348 - C134 * C372 + C153792 * C384) *
                    C126 +
                C441 * C125 + C440 * C124 + C439 * C123 + C438 * C122) *
                   C153810 * C153711 * C334) *
                  C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C563 -
           (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
            (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) * C122) *
               C153810 * C564 +
           ((C134 * C588 - C135 * C571 - C134 * C589 + C153792 * C607) * C122 +
            C667 * C123 + C668 * C124 + C669 * C125 + C670 * C126) *
               C153810 * C565) *
              C153695 * C335 +
          ((C666 * C122 + C665 * C123 + C664 * C124 + C663 * C125 +
            (C134 * C598 - C135 * C576 - C134 * C599 + C153792 * C612) * C126) *
               C153810 * C564 -
           (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
            C205 * C122) *
               C153810 * C563 -
           ((C134 * C600 - C135 * C577 - C134 * C601 + C153792 * C613) * C126 +
            C670 * C125 + C669 * C124 + C668 * C123 + C667 * C122) *
               C153810 * C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
            C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
            C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
               C2874 +
           (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
              C153810 * C153711 * C153695 * C130 -
          (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
           (C2958 + C2957 + C2956) * C2874) *
              C153810 * C153711 * C153695 * C131 +
          (C2970 * C2874 + (C2964 + C2963 + C2962) * C2875 +
           (C2965 + C2966 + C2967) * C154058) *
              C153810 * C153711 * C153695 * C132 -
          ((C2881 * C371 - C2882 * C348 - C2881 * C372 + C154071 * C384 +
            C2879 * C369 - C2880 * C347 - C2879 * C370 + C154097 * C383 +
            C2877 * C154 - C2878 * C141 - C2877 * C155 + C154109 * C165) *
               C154058 +
           (C2967 + C2966 + C2965) * C2875 + C2971 * C2874) *
              C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C153711 * C332 -
           ((C3278 + C3279 + C3280) * C154058 +
            (C3281 + C3282 + C3283) * C2875 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C2874) *
               C153810 * C153711 * C333 +
           ((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
             C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
             C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                C2874 +
            (C3284 + C3285 + C3286) * C2875 +
            (C3287 + C3288 + C3289) * C154058) *
               C153810 * C153711 * C334) *
              C335 +
          (((C3283 + C3282 + C3281) * C2874 + (C3280 + C3279 + C3278) * C2875 +
            (C2877 * C351 - C2878 * C338 - C2877 * C352 + C154109 * C374 +
             C2879 * C365 - C2880 * C345 - C2879 * C366 + C154097 * C381 +
             C2881 * C1378 - C2882 * C1372 - C2881 * C1379 + C154071 * C1387) *
                C154058) *
               C153810 * C153711 * C333 -
           (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
            (C2958 + C2957 + C2956) * C2874) *
               C153810 * C153711 * C332 -
           ((C2881 * C3199 - C2882 * C3192 - C2881 * C3200 + C154071 * C3204 +
             C2879 * C1378 - C2880 * C1372 - C2879 * C1379 + C154097 * C1387 +
             C2877 * C365 - C2878 * C345 - C2877 * C366 + C154109 * C381) *
                C154058 +
            (C3289 + C3288 + C3287) * C2875 + (C3286 + C3285 + C3284) * C2874) *
               C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C563 -
           ((C3596 + C3597 + C3598) * C154058 +
            (C3599 + C3600 + C3601) * C2875 +
            (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
             C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
             C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                C2874) *
               C153810 * C564 +
           ((C2877 * C588 - C2878 * C571 - C2877 * C589 + C154109 * C607 +
             C2879 * C1526 - C2880 * C1517 - C2879 * C1527 + C154097 * C1532 +
             C2881 * C3511 - C2882 * C3507 - C2881 * C3512 + C154071 * C3519) *
                C2874 +
            (C3602 + C3603 + C3604) * C2875 +
            (C3605 + C3606 + C3607) * C154058) *
               C153810 * C565) *
              C153695 * C335 +
          (((C3601 + C3600 + C3599) * C2874 + (C3598 + C3597 + C3596) * C2875 +
            (C2877 * C580 - C2878 * C567 - C2877 * C581 + C154109 * C603 +
             C2879 * C1117 - C2880 * C1108 - C2879 * C1118 + C154097 * C1126 +
             C2881 * C1951 - C2882 * C1945 - C2881 * C1952 + C154071 * C1960) *
                C154058) *
               C153810 * C564 -
           (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
            (C2958 + C2957 + C2956) * C2874) *
               C153810 * C563 -
           ((C2881 * C3517 - C2882 * C3510 - C2881 * C3518 + C154071 * C3522 +
             C2879 * C1520 - C2880 * C1514 - C2879 * C1521 + C154097 * C1529 +
             C2877 * C594 - C2878 * C574 - C2877 * C595 + C154109 * C610) *
                C154058 +
            (C3607 + C3606 + C3605) * C2875 + (C3604 + C3603 + C3602) * C2874) *
               C153810 * C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C2874 +
            C205 * C2875 + C206 * C154058) *
               C154110 +
           ((C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) * C2874 +
            C666 * C2875 + C665 * C154058) *
               C154099 +
           ((C134 * C588 - C135 * C571 - C134 * C589 + C153792 * C607) * C2874 +
            C667 * C2875 + C668 * C154058) *
               C154074) *
              C153711 * C153695 * C130 -
          ((C669 * C154058 + C668 * C2875 + C667 * C2874) * C154074 +
           (C664 * C154058 + C665 * C2875 + C666 * C2874) * C154099 +
           (C207 * C154058 + C206 * C2875 + C205 * C2874) * C154110) *
              C153711 * C153695 * C131 +
          ((C206 * C2874 + C207 * C2875 + C208 * C154058) * C154110 +
           (C665 * C2874 + C664 * C2875 + C663 * C154058) * C154099 +
           (C668 * C2874 + C669 * C2875 + C670 * C154058) * C154074) *
              C153711 * C153695 * C132 -
          (((C134 * C600 - C135 * C577 - C134 * C601 + C153792 * C613) *
                C154058 +
            C670 * C2875 + C669 * C2874) *
               C154074 +
           (C943 * C154058 + C663 * C2875 + C664 * C2874) * C154099 +
           (C209 * C154058 + C208 * C2875 + C207 * C2874) * C154110) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C2874 +
             C205 * C2875 + C206 * C154058) *
                C154110 +
            ((C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) *
                 C2874 +
             C666 * C2875 + C665 * C154058) *
                C154099 +
            ((C134 * C588 - C135 * C571 - C134 * C589 + C153792 * C607) *
                 C2874 +
             C667 * C2875 + C668 * C154058) *
                C154074) *
               C153711 * C332 -
           ((C7517 * C154058 + C7518 * C2875 +
             (C134 * C1526 - C135 * C1517 - C134 * C1527 + C153792 * C1532) *
                 C2874) *
                C154074 +
            (C1155 * C154058 + C1154 * C2875 +
             (C134 * C1111 - C135 * C1105 - C134 * C1112 + C153792 * C1123) *
                 C2874) *
                C154099 +
            (C436 * C154058 + C437 * C2875 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C2874) *
                C154110) *
               C153711 * C333 +
           (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C2874 +
             C438 * C2875 + C439 * C154058) *
                C154110 +
            ((C134 * C1957 - C135 * C1948 - C134 * C1958 + C153792 * C1963) *
                 C2874 +
             C7519 * C2875 + C7520 * C154058) *
                C154099 +
            ((C134 * C3511 - C135 * C3507 - C134 * C3512 + C153792 * C3519) *
                 C2874 +
             C7521 * C2875 + C7522 * C154058) *
                C154074) *
               C153711 * C334) *
              C335 +
          (((C437 * C2874 + C436 * C2875 + C435 * C154058) * C154110 +
            (C1154 * C2874 + C1155 * C2875 + C1156 * C154058) * C154099 +
            (C7518 * C2874 + C7517 * C2875 +
             (C134 * C1520 - C135 * C1514 - C134 * C1521 + C153792 * C1529) *
                 C154058) *
                C154074) *
               C153711 * C333 -
           ((C669 * C154058 + C668 * C2875 + C667 * C2874) * C154074 +
            (C664 * C154058 + C665 * C2875 + C666 * C2874) * C154099 +
            (C207 * C154058 + C206 * C2875 + C205 * C2874) * C154110) *
               C153711 * C332 -
           (((C134 * C3517 - C135 * C3510 - C134 * C3518 + C153792 * C3522) *
                 C154058 +
             C7522 * C2875 + C7521 * C2874) *
                C154074 +
            ((C134 * C1951 - C135 * C1945 - C134 * C1952 + C153792 * C1960) *
                 C154058 +
             C7520 * C2875 + C7519 * C2874) *
                C154099 +
            (C440 * C154058 + C439 * C2875 + C438 * C2874) * C154110) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C2874 +
             C205 * C2875 + C206 * C154058) *
                C154110 +
            (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
               C563 -
           ((C7827 + C7828 + C7829) * C154074 +
            (C7768 + C7767 + C7826) * C154099 +
            (C7762 + C7761 + C7825) * C154110) *
               C564 +
           (C7834 * C154110 + (C7829 + C7828 + C7827) * C154099 +
            ((C134 * C7744 - C135 * C7740 - C134 * C7745 + C153792 * C7752) *
                 C2874 +
             C7822 * C2875 + C7823 * C154058) *
                C154074) *
               C565) *
              C153695 * C335 +
          (((C7789 + C7790 + C7791) * C154110 +
            (C7792 + C7793 + C7794) * C154099 +
            (C7830 + C7831 + C7832) * C154074) *
               C564 -
           (C7816 * C154074 + (C7791 + C7790 + C7789) * C154099 +
            (C207 * C154058 + C206 * C2875 + C205 * C2874) * C154110) *
               C563 -
           (((C134 * C7750 - C135 * C7743 - C134 * C7751 + C153792 * C7755) *
                 C154058 +
             C7823 * C2875 + C7822 * C2874) *
                C154074 +
            (C7832 + C7831 + C7830) * C154099 + C7816 * C154110) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
            C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
            C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
               C154106 +
           (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
              C153810 * C153711 * C153695 * C130 -
          (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
           (C24293 + C24292 + C24291) * C154106) *
              C153810 * C153711 * C153695 * C131 +
          (C24305 * C154106 + (C24299 + C24298 + C24297) * C154087 +
           (C24300 + C24301 + C24302) * C154058) *
              C153810 * C153711 * C153695 * C132 -
          ((C24216 * C371 - C24217 * C348 - C24216 * C372 + C154071 * C384 +
            C24214 * C369 - C24215 * C347 - C24214 * C370 + C24207 * C383 +
            C24212 * C154 - C24213 * C141 - C24212 * C155 + C24206 * C165) *
               C154058 +
           (C24302 + C24301 + C24300) * C154087 + C24306 * C154106) *
              C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C153711 * C332 -
           ((C24597 + C24598 + C24599) * C154058 +
            (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C153711 * C333 +
           ((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C154106 +
            (C24603 + C24604 + C24605) * C154087 +
            (C24606 + C24607 + C24608) * C154058) *
               C153810 * C153711 * C334) *
              C335 +
          (((C24602 + C24601 + C24600) * C154106 +
            (C24599 + C24598 + C24597) * C154087 +
            (C24212 * C351 - C24213 * C338 - C24212 * C352 + C24206 * C374 +
             C24214 * C365 - C24215 * C345 - C24214 * C366 + C24207 * C381 +
             C24216 * C1378 - C24217 * C1372 - C24216 * C1379 +
             C154071 * C1387) *
                C154058) *
               C153810 * C153711 * C333 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C153711 * C332 -
           ((C24216 * C3199 - C24217 * C3192 - C24216 * C3200 +
             C154071 * C3204 + C24214 * C1378 - C24215 * C1372 -
             C24214 * C1379 + C24207 * C1387 + C24212 * C365 - C24213 * C345 -
             C24212 * C366 + C24206 * C381) *
                C154058 +
            (C24608 + C24607 + C24606) * C154087 +
            (C24605 + C24604 + C24603) * C154106) *
               C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C563 -
           ((C24899 + C24900 + C24901) * C154058 +
            (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C564 +
           ((C24212 * C588 - C24213 * C571 - C24212 * C589 + C24206 * C607 +
             C24214 * C1526 - C24215 * C1517 - C24214 * C1527 + C24207 * C1532 +
             C24216 * C3511 - C24217 * C3507 - C24216 * C3512 +
             C154071 * C3519) *
                C154106 +
            (C24905 + C24906 + C24907) * C154087 +
            (C24908 + C24909 + C24910) * C154058) *
               C153810 * C565) *
              C153695 * C335 +
          (((C24904 + C24903 + C24902) * C154106 +
            (C24901 + C24900 + C24899) * C154087 +
            (C24212 * C580 - C24213 * C567 - C24212 * C581 + C24206 * C603 +
             C24214 * C1117 - C24215 * C1108 - C24214 * C1118 + C24207 * C1126 +
             C24216 * C1951 - C24217 * C1945 - C24216 * C1952 +
             C154071 * C1960) *
                C154058) *
               C153810 * C564 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C563 -
           ((C24216 * C3517 - C24217 * C3510 - C24216 * C3518 +
             C154071 * C3522 + C24214 * C1520 - C24215 * C1514 -
             C24214 * C1521 + C24207 * C1529 + C24212 * C594 - C24213 * C574 -
             C24212 * C595 + C24206 * C610) *
                C154058 +
            (C24910 + C24909 + C24908) * C154087 +
            (C24907 + C24906 + C24905) * C154106) *
               C153810 * C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
           C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
           C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
           C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
           C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
              C153638 * C153810 * C153711 * C153695 * C130 -
          (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
           C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
           C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
           C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
           C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
              C153638 * C153810 * C153711 * C153695 * C131 +
          (C28428 * C148 - C28429 * C138 - C28428 * C149 + C28422 * C162 +
           C28430 * C353 - C28431 * C339 - C28430 * C354 + C28423 * C375 +
           C28432 * C363 - C28433 * C344 - C28432 * C364 + C28424 * C380 +
           C28434 * C1380 - C28435 * C1373 - C28434 * C1381 + C28425 * C1388 +
           C28436 * C3197 - C28437 * C3191 - C28436 * C3198 + C28426 * C3203) *
              C153638 * C153810 * C153711 * C153695 * C132 -
          (C28436 * C3199 - C28437 * C3192 - C28436 * C3200 + C28426 * C3204 +
           C28434 * C1378 - C28435 * C1372 - C28434 * C1379 + C28425 * C1387 +
           C28432 * C365 - C28433 * C345 - C28432 * C366 + C28424 * C381 +
           C28430 * C351 - C28431 * C338 - C28430 * C352 + C28423 * C374 +
           C28428 * C150 - C28429 * C139 - C28428 * C151 + C28422 * C163) *
              C153638 * C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C153711 * C332 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C153711 * C333 +
           (C28428 * C359 - C28429 * C342 - C28428 * C360 + C28422 * C378 +
            C28430 * C1384 - C28431 * C1375 - C28430 * C1385 + C28423 * C1390 +
            C28432 * C3193 - C28433 * C3189 - C28432 * C3194 + C28424 * C3201 +
            C28434 * C4808 - C28435 * C4803 - C28434 * C4809 + C28425 * C4812 +
            C28436 * C28562 - C28437 * C28560 - C28436 * C28563 +
            C28426 * C28566) *
               C153638 * C153810 * C153711 * C334) *
              C335 +
          ((C28428 * C355 - C28429 * C340 - C28428 * C356 + C28422 * C376 +
            C28430 * C361 - C28431 * C343 - C28430 * C362 + C28423 * C379 +
            C28432 * C1382 - C28433 * C1374 - C28432 * C1383 + C28424 * C1389 +
            C28434 * C3195 - C28435 * C3190 - C28434 * C3196 + C28425 * C3202 +
            C28436 * C4806 - C28437 * C4802 - C28436 * C4807 + C28426 * C4811) *
               C153638 * C153810 * C153711 * C333 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C153711 * C332 -
           (C28436 * C28564 - C28437 * C28561 - C28436 * C28565 +
            C28426 * C28567 + C28434 * C4806 - C28435 * C4802 - C28434 * C4807 +
            C28425 * C4811 + C28432 * C3195 - C28433 * C3190 - C28432 * C3196 +
            C28424 * C3202 + C28430 * C1382 - C28431 * C1374 - C28430 * C1383 +
            C28423 * C1389 + C28428 * C361 - C28429 * C343 - C28428 * C362 +
            C28422 * C379) *
               C153638 * C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C563 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C564 +
           (C28428 * C588 - C28429 * C571 - C28428 * C589 + C28422 * C607 +
            C28430 * C1526 - C28431 * C1517 - C28430 * C1527 + C28423 * C1532 +
            C28432 * C3511 - C28433 * C3507 - C28432 * C3512 + C28424 * C3519 +
            C28434 * C5038 - C28435 * C5033 - C28434 * C5039 + C28425 * C5042 +
            C28436 * C28692 - C28437 * C28690 - C28436 * C28693 +
            C28426 * C28696) *
               C153638 * C153810 * C565) *
              C153695 * C335 +
          ((C28428 * C584 - C28429 * C569 - C28428 * C585 + C28422 * C605 +
            C28430 * C1113 - C28431 * C1106 - C28430 * C1114 + C28423 * C1124 +
            C28432 * C1955 - C28433 * C1947 - C28432 * C1956 + C28424 * C1962 +
            C28434 * C4385 - C28435 * C4380 - C28434 * C4386 + C28425 * C4392 +
            C28436 * C5774 - C28437 * C5770 - C28436 * C5775 + C28426 * C5779) *
               C153638 * C153810 * C564 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C563 -
           (C28436 * C28694 - C28437 * C28691 - C28436 * C28695 +
            C28426 * C28697 + C28434 * C5036 - C28435 * C5032 - C28434 * C5037 +
            C28425 * C5041 + C28432 * C3513 - C28433 * C3508 - C28432 * C3514 +
            C28424 * C3520 + C28430 * C1524 - C28431 * C1516 - C28430 * C1525 +
            C28423 * C1531 + C28428 * C590 - C28429 * C572 - C28428 * C591 +
            C28422 * C608) *
               C153638 * C153810 * C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
            C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
            C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
               C153638 * C154110 +
           (C24212 * C586 - C24213 * C570 - C24212 * C587 + C24206 * C606 +
            C24214 * C1111 - C24215 * C1105 - C24214 * C1112 + C24207 * C1123 +
            C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
            C154071 * C1963) *
               C153638 * C154099 +
           (C24212 * C588 - C24213 * C571 - C24212 * C589 + C24206 * C607 +
            C24214 * C1526 - C24215 * C1517 - C24214 * C1527 + C24207 * C1532 +
            C24216 * C3511 - C24217 * C3507 - C24216 * C3512 +
            C154071 * C3519) *
               C153638 * C154074) *
              C153711 * C153695 * C130 -
          ((C24907 + C24906 + C24905) * C153638 * C154074 +
           (C24902 + C24903 + C24904) * C153638 * C154099 +
           (C24293 + C24292 + C24291) * C153638 * C154110) *
              C153711 * C153695 * C131 +
          (C24305 * C153638 * C154110 +
           (C24901 + C24900 + C24899) * C153638 * C154099 +
           (C24908 + C24909 + C24910) * C153638 * C154074) *
              C153711 * C153695 * C132 -
          ((C24216 * C3517 - C24217 * C3510 - C24216 * C3518 + C154071 * C3522 +
            C24214 * C1520 - C24215 * C1514 - C24214 * C1521 + C24207 * C1529 +
            C24212 * C594 - C24213 * C574 - C24212 * C595 + C24206 * C610) *
               C153638 * C154074 +
           (C25392 + C25391 + C25390) * C153638 * C154099 +
           C24306 * C153638 * C154110) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C153638 * C154110 +
            (C24212 * C586 - C24213 * C570 - C24212 * C587 + C24206 * C606 +
             C24214 * C1111 - C24215 * C1105 - C24214 * C1112 + C24207 * C1123 +
             C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963) *
                C153638 * C154099 +
            (C24212 * C588 - C24213 * C571 - C24212 * C589 + C24206 * C607 +
             C24214 * C1526 - C24215 * C1517 - C24214 * C1527 + C24207 * C1532 +
             C24216 * C3511 - C24217 * C3507 - C24216 * C3512 +
             C154071 * C3519) *
                C153638 * C154074) *
               C153711 * C332 -
           ((C24216 * C5038 - C24217 * C5033 - C24216 * C5039 +
             C154071 * C5042 + C24214 * C3511 - C24215 * C3507 -
             C24214 * C3512 + C24207 * C3519 + C24212 * C1526 - C24213 * C1517 -
             C24212 * C1527 + C24206 * C1532) *
                C153638 * C154074 +
            (C24216 * C4383 - C24217 * C4379 - C24216 * C4384 +
             C154071 * C4391 + C24214 * C1957 - C24215 * C1948 -
             C24214 * C1958 + C24207 * C1963 + C24212 * C1111 - C24213 * C1105 -
             C24212 * C1112 + C24206 * C1123) *
                C153638 * C154099 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C153638 * C154110) *
               C153711 * C333 +
           ((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C153638 * C154110 +
            (C24212 * C1957 - C24213 * C1948 - C24212 * C1958 + C24206 * C1963 +
             C24214 * C4383 - C24215 * C4379 - C24214 * C4384 + C24207 * C4391 +
             C24216 * C5776 - C24217 * C5771 - C24216 * C5777 +
             C154071 * C5780) *
                C153638 * C154099 +
            (C24212 * C3511 - C24213 * C3507 - C24212 * C3512 + C24206 * C3519 +
             C24214 * C5038 - C24215 * C5033 - C24214 * C5039 + C24207 * C5042 +
             C24216 * C28692 - C24217 * C28690 - C24216 * C28693 +
             C154071 * C28696) *
                C153638 * C154074) *
               C153711 * C334) *
              C335 +
          (((C24602 + C24601 + C24600) * C153638 * C154110 +
            (C25719 + C25720 + C25721) * C153638 * C154099 +
            (C24212 * C1524 - C24213 * C1516 - C24212 * C1525 + C24206 * C1531 +
             C24214 * C3513 - C24215 * C3508 - C24214 * C3514 + C24207 * C3520 +
             C24216 * C5036 - C24217 * C5032 - C24216 * C5037 +
             C154071 * C5041) *
                C153638 * C154074) *
               C153711 * C333 -
           ((C24907 + C24906 + C24905) * C153638 * C154074 +
            (C24902 + C24903 + C24904) * C153638 * C154099 +
            (C24293 + C24292 + C24291) * C153638 * C154110) *
               C153711 * C332 -
           ((C24216 * C28694 - C24217 * C28691 - C24216 * C28695 +
             C154071 * C28697 + C24214 * C5036 - C24215 * C5032 -
             C24214 * C5037 + C24207 * C5041 + C24212 * C3513 - C24213 * C3508 -
             C24212 * C3514 + C24206 * C3520) *
                C153638 * C154074 +
            (C24216 * C5774 - C24217 * C5770 - C24216 * C5775 +
             C154071 * C5779 + C24214 * C4385 - C24215 * C4380 -
             C24214 * C4386 + C24207 * C4392 + C24212 * C1955 - C24213 * C1947 -
             C24212 * C1956 + C24206 * C1962) *
                C153638 * C154099 +
            (C24605 + C24604 + C24603) * C153638 * C154110) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C153638 * C154110 +
            (C31262 + C31263 + C31264) * C153638 * C154099 + C31276 * C154074) *
               C563 -
           ((C31268 + C31269 + C31270) * C153638 * C154074 +
            (C31267 + C31266 + C31265) * C153638 * C154099 +
            (C31264 + C31263 + C31262) * C153638 * C154110) *
               C564 +
           (C31276 * C154110 + (C31270 + C31269 + C31268) * C153638 * C154099 +
            (C24212 * C7744 - C24213 * C7740 - C24212 * C7745 + C24206 * C7752 +
             C24214 * C9206 - C24215 * C9201 - C24214 * C9207 + C24207 * C9210 +
             C24216 * C31180 - C24217 * C31178 - C24216 * C31181 +
             C154071 * C31184) *
                C153638 * C154074) *
               C565) *
              C153695 * C335 +
          (((C24904 + C24903 + C24902) * C153638 * C154110 +
            (C24905 + C24906 + C24907) * C153638 * C154099 +
            (C31271 + C31272 + C31273) * C153638 * C154074) *
               C564 -
           (C31261 * C154074 + (C24902 + C24903 + C24904) * C153638 * C154099 +
            (C24293 + C24292 + C24291) * C153638 * C154110) *
               C563 -
           ((C24216 * C31182 - C24217 * C31179 - C24216 * C31183 +
             C154071 * C31185 + C24214 * C9204 - C24215 * C9200 -
             C24214 * C9205 + C24207 * C9209 + C24212 * C7746 - C24213 * C7741 -
             C24212 * C7747 + C24206 * C7753) *
                C153638 * C154074 +
            (C31273 + C31272 + C31271) * C153638 * C154099 + C31261 * C154110) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[333] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C154022 -
           (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
            (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
             C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
             C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                C2874) *
               C153810 * C153775) *
              C153695 * C154090 +
          (((C3601 + C3600 + C3599) * C2874 + (C3598 + C3597 + C3596) * C2875 +
            (C4087 + C4088 + C4089) * C154058) *
               C153810 * C153775 -
           (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
            (C2958 + C2957 + C2956) * C2874) *
               C153810 * C154022) *
              C153695 * C154091 +
          ((C2970 * C2874 + (C2964 + C2963 + C2962) * C2875 +
            (C2965 + C2966 + C2967) * C154058) *
               C153810 * C154022 -
           ((C2881 * C1949 - C2882 * C1944 - C2881 * C1950 + C154071 * C1959 +
             C2879 * C1119 - C2880 * C1109 - C2879 * C1120 + C154097 * C1127 +
             C2877 * C578 - C2878 * C566 - C2877 * C579 + C154109 * C602) *
                C154058 +
            (C4089 + C4088 + C4087) * C2875 + C4080 * C2874) *
               C153810 * C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C154022 -
           (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
            (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) * C122) *
               C153810 * C153775) *
              C153695 * C154090 +
          ((C666 * C122 + C665 * C123 + C664 * C124 + C663 * C125 +
            C943 * C126) *
               C153810 * C153775 -
           (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
            C205 * C122) *
               C153810 * C154022) *
              C153695 * C154091 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125 +
            C210 * C126) *
               C153810 * C154022 -
           ((C134 * C933 - C135 * C932 - C134 * C934 + C153792 * C935) * C126 +
            C943 * C125 + C663 * C124 + C664 * C123 + C665 * C122) *
               C153810 * C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C2874 +
             C205 * C2875 + C206 * C154058) *
                C154110 +
            (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
               C154022 -
           ((C7827 + C7828 + C7829) * C154074 +
            (C7768 + C7767 + C7826) * C154099 +
            (C7762 + C7761 + C7825) * C154110) *
               C153775) *
              C153695 * C154090 +
          (((C7789 + C7790 + C7791) * C154110 +
            (C7792 + C7793 + C7794) * C154099 +
            (C7830 + C7831 + C7832) * C154074) *
               C153775 -
           (C7816 * C154074 + (C7791 + C7790 + C7789) * C154099 +
            (C207 * C154058 + C206 * C2875 + C205 * C2874) * C154110) *
               C154022) *
              C153695 * C154091 +
          (((C206 * C2874 + C207 * C2875 + C208 * C154058) * C154110 +
            (C8278 + C8279 + C8280) * C154099 +
            (C8281 + C8282 + C8283) * C154074) *
               C154022 -
           (((C134 * C2301 - C135 * C2296 - C134 * C2302 + C153792 * C2311) *
                 C154058 +
             C7824 * C2875 + C7819 * C2874) *
                C154074 +
            (C8283 + C8282 + C8281) * C154099 +
            (C8280 + C8279 + C8278) * C154110) *
               C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C154022 -
           (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C153775) *
              C153695 * C154090 +
          (((C24904 + C24903 + C24902) * C154106 +
            (C24901 + C24900 + C24899) * C154087 +
            (C25390 + C25391 + C25392) * C154058) *
               C153810 * C153775 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C154022) *
              C153695 * C154091 +
          ((C24305 * C154106 + (C24299 + C24298 + C24297) * C154087 +
            (C24300 + C24301 + C24302) * C154058) *
               C153810 * C154022 -
           ((C24216 * C1949 - C24217 * C1944 - C24216 * C1950 +
             C154071 * C1959 + C24214 * C1119 - C24215 * C1109 -
             C24214 * C1120 + C24207 * C1127 + C24212 * C578 - C24213 * C566 -
             C24212 * C579 + C24206 * C602) *
                C154058 +
            (C25392 + C25391 + C25390) * C154087 + C25383 * C154106) *
               C153810 * C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C154022 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C153775) *
              C153695 * C154090 +
          ((C28428 * C584 - C28429 * C569 - C28428 * C585 + C28422 * C605 +
            C28430 * C1113 - C28431 * C1106 - C28430 * C1114 + C28423 * C1124 +
            C28432 * C1955 - C28433 * C1947 - C28432 * C1956 + C28424 * C1962 +
            C28434 * C4385 - C28435 * C4380 - C28434 * C4386 + C28425 * C4392 +
            C28436 * C5774 - C28437 * C5770 - C28436 * C5775 + C28426 * C5779) *
               C153638 * C153810 * C153775 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C154022) *
              C153695 * C154091 +
          ((C28428 * C148 - C28429 * C138 - C28428 * C149 + C28422 * C162 +
            C28430 * C353 - C28431 * C339 - C28430 * C354 + C28423 * C375 +
            C28432 * C363 - C28433 * C344 - C28432 * C364 + C28424 * C380 +
            C28434 * C1380 - C28435 * C1373 - C28434 * C1381 + C28425 * C1388 +
            C28436 * C3197 - C28437 * C3191 - C28436 * C3198 + C28426 * C3203) *
               C153638 * C153810 * C154022 -
           (C28436 * C5772 - C28437 * C5769 - C28436 * C5773 + C28426 * C5778 +
            C28434 * C4387 - C28435 * C4381 - C28434 * C4388 + C28425 * C4393 +
            C28432 * C1953 - C28433 * C1946 - C28432 * C1954 + C28424 * C1961 +
            C28430 * C1115 - C28431 * C1107 - C28430 * C1116 + C28423 * C1125 +
            C28428 * C582 - C28429 * C568 - C28428 * C583 + C28422 * C604) *
               C153638 * C153810 * C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C153638 * C154110 +
            (C31262 + C31263 + C31264) * C153638 * C154099 + C31276 * C154074) *
               C154022 -
           ((C31268 + C31269 + C31270) * C153638 * C154074 +
            (C31267 + C31266 + C31265) * C153638 * C154099 +
            (C31264 + C31263 + C31262) * C153638 * C154110) *
               C153775) *
              C153695 * C154090 +
          (((C24904 + C24903 + C24902) * C153638 * C154110 +
            (C24905 + C24906 + C24907) * C153638 * C154099 +
            (C31271 + C31272 + C31273) * C153638 * C154074) *
               C153775 -
           (C31261 * C154074 + (C24902 + C24903 + C24904) * C153638 * C154099 +
            (C24293 + C24292 + C24291) * C153638 * C154110) *
               C154022) *
              C153695 * C154091 +
          ((C24305 * C153638 * C154110 +
            (C24901 + C24900 + C24899) * C153638 * C154099 +
            (C24908 + C24909 + C24910) * C153638 * C154074) *
               C154022 -
           ((C24216 * C6369 - C24217 * C6363 - C24216 * C6370 +
             C154071 * C6381 + C24214 * C6371 - C24215 * C6364 -
             C24214 * C6372 + C24207 * C6382 + C24212 * C2305 - C24213 * C2298 -
             C24212 * C2306 + C24206 * C2313) *
                C153638 * C154074 +
            (C24910 + C24909 + C24908) * C153638 * C154099 +
            C25383 * C153638 * C154110) *
               C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q));
    d2ee[334] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C153711 * C332 -
           (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) * C122) *
               C153810 * C153711 * C333 +
           ((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) * C122 +
            C438 * C123 + C439 * C124 + C440 * C125 + C441 * C126) *
               C153810 * C153711 * C334) *
              C335 +
          ((C437 * C122 + C436 * C123 + C435 * C124 + C434 * C125 +
            (C134 * C369 - C135 * C347 - C134 * C370 + C153792 * C383) * C126) *
               C153810 * C153711 * C333 -
           (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
            C205 * C122) *
               C153810 * C153711 * C332 -
           ((C134 * C371 - C135 * C348 - C134 * C372 + C153792 * C384) * C126 +
            C441 * C125 + C440 * C124 + C439 * C123 + C438 * C122) *
               C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
           C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
              C153810 * C153711 * C153695 * C130 -
          (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
           C205 * C122) *
              C153810 * C153711 * C153695 * C131 +
          (C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125 +
           C210 * C126) *
              C153810 * C153711 * C153695 * C132 -
          ((C134 * C158 - C135 * C143 - C134 * C159 + C153792 * C167) * C126 +
           C210 * C125 + C209 * C124 + C208 * C123 + C207 * C122) *
              C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
            C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
            C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
               C2874 +
           (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
              C153810 * C153711 * C153695 * C130 -
          (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
           (C2958 + C2957 + C2956) * C2874) *
              C153810 * C153711 * C153695 * C131 +
          (C2970 * C2874 + (C2964 + C2963 + C2962) * C2875 +
           (C2965 + C2966 + C2967) * C154058) *
              C153810 * C153711 * C153695 * C132 -
          ((C2881 * C371 - C2882 * C348 - C2881 * C372 + C154071 * C384 +
            C2879 * C369 - C2880 * C347 - C2879 * C370 + C154097 * C383 +
            C2877 * C154 - C2878 * C141 - C2877 * C155 + C154109 * C165) *
               C154058 +
           (C2967 + C2966 + C2965) * C2875 + C2971 * C2874) *
              C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C153711 * C332 -
           ((C3278 + C3279 + C3280) * C154058 +
            (C3281 + C3282 + C3283) * C2875 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C2874) *
               C153810 * C153711 * C333 +
           ((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
             C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
             C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                C2874 +
            (C3284 + C3285 + C3286) * C2875 +
            (C3287 + C3288 + C3289) * C154058) *
               C153810 * C153711 * C334) *
              C335 +
          (((C3283 + C3282 + C3281) * C2874 + (C3280 + C3279 + C3278) * C2875 +
            (C2877 * C351 - C2878 * C338 - C2877 * C352 + C154109 * C374 +
             C2879 * C365 - C2880 * C345 - C2879 * C366 + C154097 * C381 +
             C2881 * C1378 - C2882 * C1372 - C2881 * C1379 + C154071 * C1387) *
                C154058) *
               C153810 * C153711 * C333 -
           (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
            (C2958 + C2957 + C2956) * C2874) *
               C153810 * C153711 * C332 -
           ((C2881 * C3199 - C2882 * C3192 - C2881 * C3200 + C154071 * C3204 +
             C2879 * C1378 - C2880 * C1372 - C2879 * C1379 + C154097 * C1387 +
             C2877 * C365 - C2878 * C345 - C2877 * C366 + C154109 * C381) *
                C154058 +
            (C3289 + C3288 + C3287) * C2875 + (C3286 + C3285 + C3284) * C2874) *
               C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C2874 +
            C205 * C2875 + C206 * C154058) *
               C154110 +
           ((C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) * C2874 +
            C666 * C2875 + C665 * C154058) *
               C154099 +
           ((C134 * C588 - C135 * C571 - C134 * C589 + C153792 * C607) * C2874 +
            C667 * C2875 + C668 * C154058) *
               C154074) *
              C153711 * C153695 * C130 -
          ((C669 * C154058 + C668 * C2875 + C667 * C2874) * C154074 +
           (C664 * C154058 + C665 * C2875 + C666 * C2874) * C154099 +
           (C207 * C154058 + C206 * C2875 + C205 * C2874) * C154110) *
              C153711 * C153695 * C131 +
          ((C206 * C2874 + C207 * C2875 + C208 * C154058) * C154110 +
           (C665 * C2874 + C664 * C2875 + C663 * C154058) * C154099 +
           (C668 * C2874 + C669 * C2875 + C670 * C154058) * C154074) *
              C153711 * C153695 * C132 -
          (((C134 * C600 - C135 * C577 - C134 * C601 + C153792 * C613) *
                C154058 +
            C670 * C2875 + C669 * C2874) *
               C154074 +
           (C943 * C154058 + C663 * C2875 + C664 * C2874) * C154099 +
           (C209 * C154058 + C208 * C2875 + C207 * C2874) * C154110) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C2874 +
             C205 * C2875 + C206 * C154058) *
                C154110 +
            ((C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) *
                 C2874 +
             C666 * C2875 + C665 * C154058) *
                C154099 +
            ((C134 * C588 - C135 * C571 - C134 * C589 + C153792 * C607) *
                 C2874 +
             C667 * C2875 + C668 * C154058) *
                C154074) *
               C153711 * C332 -
           ((C7517 * C154058 + C7518 * C2875 +
             (C134 * C1526 - C135 * C1517 - C134 * C1527 + C153792 * C1532) *
                 C2874) *
                C154074 +
            (C1155 * C154058 + C1154 * C2875 +
             (C134 * C1111 - C135 * C1105 - C134 * C1112 + C153792 * C1123) *
                 C2874) *
                C154099 +
            (C436 * C154058 + C437 * C2875 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C2874) *
                C154110) *
               C153711 * C333 +
           (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C2874 +
             C438 * C2875 + C439 * C154058) *
                C154110 +
            ((C134 * C1957 - C135 * C1948 - C134 * C1958 + C153792 * C1963) *
                 C2874 +
             C7519 * C2875 + C7520 * C154058) *
                C154099 +
            ((C134 * C3511 - C135 * C3507 - C134 * C3512 + C153792 * C3519) *
                 C2874 +
             C7521 * C2875 + C7522 * C154058) *
                C154074) *
               C153711 * C334) *
              C335 +
          (((C437 * C2874 + C436 * C2875 + C435 * C154058) * C154110 +
            (C1154 * C2874 + C1155 * C2875 + C1156 * C154058) * C154099 +
            (C7518 * C2874 + C7517 * C2875 +
             (C134 * C1520 - C135 * C1514 - C134 * C1521 + C153792 * C1529) *
                 C154058) *
                C154074) *
               C153711 * C333 -
           ((C669 * C154058 + C668 * C2875 + C667 * C2874) * C154074 +
            (C664 * C154058 + C665 * C2875 + C666 * C2874) * C154099 +
            (C207 * C154058 + C206 * C2875 + C205 * C2874) * C154110) *
               C153711 * C332 -
           (((C134 * C3517 - C135 * C3510 - C134 * C3518 + C153792 * C3522) *
                 C154058 +
             C7522 * C2875 + C7521 * C2874) *
                C154074 +
            ((C134 * C1951 - C135 * C1945 - C134 * C1952 + C153792 * C1960) *
                 C154058 +
             C7520 * C2875 + C7519 * C2874) *
                C154099 +
            (C440 * C154058 + C439 * C2875 + C438 * C2874) * C154110) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
            C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
            C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
               C154106 +
           (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
              C153810 * C153711 * C153695 * C130 -
          (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
           (C24293 + C24292 + C24291) * C154106) *
              C153810 * C153711 * C153695 * C131 +
          (C24305 * C154106 + (C24299 + C24298 + C24297) * C154087 +
           (C24300 + C24301 + C24302) * C154058) *
              C153810 * C153711 * C153695 * C132 -
          ((C24216 * C371 - C24217 * C348 - C24216 * C372 + C154071 * C384 +
            C24214 * C369 - C24215 * C347 - C24214 * C370 + C24207 * C383 +
            C24212 * C154 - C24213 * C141 - C24212 * C155 + C24206 * C165) *
               C154058 +
           (C24302 + C24301 + C24300) * C154087 + C24306 * C154106) *
              C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C153711 * C332 -
           ((C24597 + C24598 + C24599) * C154058 +
            (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C153711 * C333 +
           ((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C154106 +
            (C24603 + C24604 + C24605) * C154087 +
            (C24606 + C24607 + C24608) * C154058) *
               C153810 * C153711 * C334) *
              C335 +
          (((C24602 + C24601 + C24600) * C154106 +
            (C24599 + C24598 + C24597) * C154087 +
            (C24212 * C351 - C24213 * C338 - C24212 * C352 + C24206 * C374 +
             C24214 * C365 - C24215 * C345 - C24214 * C366 + C24207 * C381 +
             C24216 * C1378 - C24217 * C1372 - C24216 * C1379 +
             C154071 * C1387) *
                C154058) *
               C153810 * C153711 * C333 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C153711 * C332 -
           ((C24216 * C3199 - C24217 * C3192 - C24216 * C3200 +
             C154071 * C3204 + C24214 * C1378 - C24215 * C1372 -
             C24214 * C1379 + C24207 * C1387 + C24212 * C365 - C24213 * C345 -
             C24212 * C366 + C24206 * C381) *
                C154058 +
            (C24608 + C24607 + C24606) * C154087 +
            (C24605 + C24604 + C24603) * C154106) *
               C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
           C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
           C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
           C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
           C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
              C153638 * C153810 * C153711 * C153695 * C130 -
          (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
           C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
           C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
           C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
           C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
              C153638 * C153810 * C153711 * C153695 * C131 +
          (C28428 * C148 - C28429 * C138 - C28428 * C149 + C28422 * C162 +
           C28430 * C353 - C28431 * C339 - C28430 * C354 + C28423 * C375 +
           C28432 * C363 - C28433 * C344 - C28432 * C364 + C28424 * C380 +
           C28434 * C1380 - C28435 * C1373 - C28434 * C1381 + C28425 * C1388 +
           C28436 * C3197 - C28437 * C3191 - C28436 * C3198 + C28426 * C3203) *
              C153638 * C153810 * C153711 * C153695 * C132 -
          (C28436 * C3199 - C28437 * C3192 - C28436 * C3200 + C28426 * C3204 +
           C28434 * C1378 - C28435 * C1372 - C28434 * C1379 + C28425 * C1387 +
           C28432 * C365 - C28433 * C345 - C28432 * C366 + C28424 * C381 +
           C28430 * C351 - C28431 * C338 - C28430 * C352 + C28423 * C374 +
           C28428 * C150 - C28429 * C139 - C28428 * C151 + C28422 * C163) *
              C153638 * C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C153711 * C332 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C153711 * C333 +
           (C28428 * C359 - C28429 * C342 - C28428 * C360 + C28422 * C378 +
            C28430 * C1384 - C28431 * C1375 - C28430 * C1385 + C28423 * C1390 +
            C28432 * C3193 - C28433 * C3189 - C28432 * C3194 + C28424 * C3201 +
            C28434 * C4808 - C28435 * C4803 - C28434 * C4809 + C28425 * C4812 +
            C28436 * C28562 - C28437 * C28560 - C28436 * C28563 +
            C28426 * C28566) *
               C153638 * C153810 * C153711 * C334) *
              C335 +
          ((C28428 * C355 - C28429 * C340 - C28428 * C356 + C28422 * C376 +
            C28430 * C361 - C28431 * C343 - C28430 * C362 + C28423 * C379 +
            C28432 * C1382 - C28433 * C1374 - C28432 * C1383 + C28424 * C1389 +
            C28434 * C3195 - C28435 * C3190 - C28434 * C3196 + C28425 * C3202 +
            C28436 * C4806 - C28437 * C4802 - C28436 * C4807 + C28426 * C4811) *
               C153638 * C153810 * C153711 * C333 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C153711 * C332 -
           (C28436 * C28564 - C28437 * C28561 - C28436 * C28565 +
            C28426 * C28567 + C28434 * C4806 - C28435 * C4802 - C28434 * C4807 +
            C28425 * C4811 + C28432 * C3195 - C28433 * C3190 - C28432 * C3196 +
            C28424 * C3202 + C28430 * C1382 - C28431 * C1374 - C28430 * C1383 +
            C28423 * C1389 + C28428 * C361 - C28429 * C343 - C28428 * C362 +
            C28422 * C379) *
               C153638 * C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
            C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
            C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
               C153638 * C154110 +
           (C24212 * C586 - C24213 * C570 - C24212 * C587 + C24206 * C606 +
            C24214 * C1111 - C24215 * C1105 - C24214 * C1112 + C24207 * C1123 +
            C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
            C154071 * C1963) *
               C153638 * C154099 +
           (C24212 * C588 - C24213 * C571 - C24212 * C589 + C24206 * C607 +
            C24214 * C1526 - C24215 * C1517 - C24214 * C1527 + C24207 * C1532 +
            C24216 * C3511 - C24217 * C3507 - C24216 * C3512 +
            C154071 * C3519) *
               C153638 * C154074) *
              C153711 * C153695 * C130 -
          ((C24907 + C24906 + C24905) * C153638 * C154074 +
           (C24902 + C24903 + C24904) * C153638 * C154099 +
           (C24293 + C24292 + C24291) * C153638 * C154110) *
              C153711 * C153695 * C131 +
          (C24305 * C153638 * C154110 +
           (C24901 + C24900 + C24899) * C153638 * C154099 +
           (C24908 + C24909 + C24910) * C153638 * C154074) *
              C153711 * C153695 * C132 -
          ((C24216 * C3517 - C24217 * C3510 - C24216 * C3518 + C154071 * C3522 +
            C24214 * C1520 - C24215 * C1514 - C24214 * C1521 + C24207 * C1529 +
            C24212 * C594 - C24213 * C574 - C24212 * C595 + C24206 * C610) *
               C153638 * C154074 +
           (C25392 + C25391 + C25390) * C153638 * C154099 +
           C24306 * C153638 * C154110) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C153638 * C154110 +
            (C24212 * C586 - C24213 * C570 - C24212 * C587 + C24206 * C606 +
             C24214 * C1111 - C24215 * C1105 - C24214 * C1112 + C24207 * C1123 +
             C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963) *
                C153638 * C154099 +
            (C24212 * C588 - C24213 * C571 - C24212 * C589 + C24206 * C607 +
             C24214 * C1526 - C24215 * C1517 - C24214 * C1527 + C24207 * C1532 +
             C24216 * C3511 - C24217 * C3507 - C24216 * C3512 +
             C154071 * C3519) *
                C153638 * C154074) *
               C153711 * C332 -
           ((C24216 * C5038 - C24217 * C5033 - C24216 * C5039 +
             C154071 * C5042 + C24214 * C3511 - C24215 * C3507 -
             C24214 * C3512 + C24207 * C3519 + C24212 * C1526 - C24213 * C1517 -
             C24212 * C1527 + C24206 * C1532) *
                C153638 * C154074 +
            (C24216 * C4383 - C24217 * C4379 - C24216 * C4384 +
             C154071 * C4391 + C24214 * C1957 - C24215 * C1948 -
             C24214 * C1958 + C24207 * C1963 + C24212 * C1111 - C24213 * C1105 -
             C24212 * C1112 + C24206 * C1123) *
                C153638 * C154099 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C153638 * C154110) *
               C153711 * C333 +
           ((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C153638 * C154110 +
            (C24212 * C1957 - C24213 * C1948 - C24212 * C1958 + C24206 * C1963 +
             C24214 * C4383 - C24215 * C4379 - C24214 * C4384 + C24207 * C4391 +
             C24216 * C5776 - C24217 * C5771 - C24216 * C5777 +
             C154071 * C5780) *
                C153638 * C154099 +
            (C24212 * C3511 - C24213 * C3507 - C24212 * C3512 + C24206 * C3519 +
             C24214 * C5038 - C24215 * C5033 - C24214 * C5039 + C24207 * C5042 +
             C24216 * C28692 - C24217 * C28690 - C24216 * C28693 +
             C154071 * C28696) *
                C153638 * C154074) *
               C153711 * C334) *
              C335 +
          (((C24602 + C24601 + C24600) * C153638 * C154110 +
            (C25719 + C25720 + C25721) * C153638 * C154099 +
            (C24212 * C1524 - C24213 * C1516 - C24212 * C1525 + C24206 * C1531 +
             C24214 * C3513 - C24215 * C3508 - C24214 * C3514 + C24207 * C3520 +
             C24216 * C5036 - C24217 * C5032 - C24216 * C5037 +
             C154071 * C5041) *
                C153638 * C154074) *
               C153711 * C333 -
           ((C24907 + C24906 + C24905) * C153638 * C154074 +
            (C24902 + C24903 + C24904) * C153638 * C154099 +
            (C24293 + C24292 + C24291) * C153638 * C154110) *
               C153711 * C332 -
           ((C24216 * C28694 - C24217 * C28691 - C24216 * C28695 +
             C154071 * C28697 + C24214 * C5036 - C24215 * C5032 -
             C24214 * C5037 + C24207 * C5041 + C24212 * C3513 - C24213 * C3508 -
             C24212 * C3514 + C24206 * C3520) *
                C153638 * C154074 +
            (C24216 * C5774 - C24217 * C5770 - C24216 * C5775 +
             C154071 * C5779 + C24214 * C4385 - C24215 * C4380 -
             C24214 * C4386 + C24207 * C4392 + C24212 * C1955 - C24213 * C1947 -
             C24212 * C1956 + C24206 * C1962) *
                C153638 * C154099 +
            (C24605 + C24604 + C24603) * C153638 * C154110) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[335] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C153711 * C154092 -
           (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C2874) *
               C153810 * C153711 * C154093 +
           ((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
             C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
             C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                C2874 +
            (C3284 + C3285 + C3286) * C2875 +
            (C3287 + C3288 + C3289) * C154058) *
               C153810 * C153711 * C1657) *
              C154013 +
          (((C3283 + C3282 + C3281) * C2874 + (C3280 + C3279 + C3278) * C2875 +
            (C3846 + C3847 + C3848) * C154058) *
               C153810 * C153711 * C154093 -
           (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
            (C2958 + C2957 + C2956) * C2874) *
               C153810 * C153711 * C154092 -
           ((C2881 * C3199 - C2882 * C3192 - C2881 * C3200 + C154071 * C3204 +
             C2879 * C1378 - C2880 * C1372 - C2879 * C1379 + C154097 * C1387 +
             C2877 * C365 - C2878 * C345 - C2877 * C366 + C154109 * C381) *
                C154058 +
            (C3289 + C3288 + C3287) * C2875 + (C3286 + C3285 + C3284) * C2874) *
               C153810 * C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C153711 * C154092 -
           (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) * C122) *
               C153810 * C153711 * C154093 +
           ((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) * C122 +
            C438 * C123 + C439 * C124 + C440 * C125 + C441 * C126) *
               C153810 * C153711 * C1657) *
              C154013 +
          ((C437 * C122 + C436 * C123 + C435 * C124 + C434 * C125 +
            C808 * C126) *
               C153810 * C153711 * C154093 -
           (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
            C205 * C122) *
               C153810 * C153711 * C154092 -
           ((C134 * C371 - C135 * C348 - C134 * C372 + C153792 * C384) * C126 +
            C441 * C125 + C440 * C124 + C439 * C123 + C438 * C122) *
               C153810 * C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C2874 +
             C205 * C2875 + C206 * C154058) *
                C154110 +
            (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
               C153711 * C154092 -
           (C9220 * C154074 + (C8583 + C8582 + C8616) * C154099 +
            (C436 * C154058 + C437 * C2875 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C2874) *
                C154110) *
               C153711 * C154093 +
           (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C2874 +
             C438 * C2875 + C439 * C154058) *
                C154110 +
            ((C134 * C1957 - C135 * C1948 - C134 * C1958 + C153792 * C1963) *
                 C2874 +
             C7519 * C2875 + C7520 * C154058) *
                C154099 +
            ((C134 * C3511 - C135 * C3507 - C134 * C3512 + C153792 * C3519) *
                 C2874 +
             C7521 * C2875 + C7522 * C154058) *
                C154074) *
               C153711 * C1657) *
              C154013 +
          (((C437 * C2874 + C436 * C2875 + C435 * C154058) * C154110 +
            (C8598 + C8599 + C8600) * C154099 +
            (C8601 + C8602 + C8603) * C154074) *
               C153711 * C154093 -
           (C7816 * C154074 + (C7791 + C7790 + C7789) * C154099 +
            (C207 * C154058 + C206 * C2875 + C205 * C2874) * C154110) *
               C153711 * C154092 -
           (((C134 * C3517 - C135 * C3510 - C134 * C3518 + C153792 * C3522) *
                 C154058 +
             C7522 * C2875 + C7521 * C2874) *
                C154074 +
            ((C134 * C1951 - C135 * C1945 - C134 * C1952 + C153792 * C1960) *
                 C154058 +
             C7520 * C2875 + C7519 * C2874) *
                C154099 +
            (C440 * C154058 + C439 * C2875 + C438 * C2874) * C154110) *
               C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C153711 * C154092 -
           (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C153711 * C154093 +
           ((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C154106 +
            (C24603 + C24604 + C24605) * C154087 +
            (C24606 + C24607 + C24608) * C154058) *
               C153810 * C153711 * C1657) *
              C154013 +
          (((C24602 + C24601 + C24600) * C154106 +
            (C24599 + C24598 + C24597) * C154087 +
            (C25149 + C25150 + C25151) * C154058) *
               C153810 * C153711 * C154093 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C153711 * C154092 -
           ((C24216 * C3199 - C24217 * C3192 - C24216 * C3200 +
             C154071 * C3204 + C24214 * C1378 - C24215 * C1372 -
             C24214 * C1379 + C24207 * C1387 + C24212 * C365 - C24213 * C345 -
             C24212 * C366 + C24206 * C381) *
                C154058 +
            (C24608 + C24607 + C24606) * C154087 +
            (C24605 + C24604 + C24603) * C154106) *
               C153810 * C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C153711 * C154092 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C153711 * C154093 +
           (C28428 * C359 - C28429 * C342 - C28428 * C360 + C28422 * C378 +
            C28430 * C1384 - C28431 * C1375 - C28430 * C1385 + C28423 * C1390 +
            C28432 * C3193 - C28433 * C3189 - C28432 * C3194 + C28424 * C3201 +
            C28434 * C4808 - C28435 * C4803 - C28434 * C4809 + C28425 * C4812 +
            C28436 * C28562 - C28437 * C28560 - C28436 * C28563 +
            C28426 * C28566) *
               C153638 * C153810 * C153711 * C1657) *
              C154013 +
          ((C28428 * C355 - C28429 * C340 - C28428 * C356 + C28422 * C376 +
            C28430 * C361 - C28431 * C343 - C28430 * C362 + C28423 * C379 +
            C28432 * C1382 - C28433 * C1374 - C28432 * C1383 + C28424 * C1389 +
            C28434 * C3195 - C28435 * C3190 - C28434 * C3196 + C28425 * C3202 +
            C28436 * C4806 - C28437 * C4802 - C28436 * C4807 + C28426 * C4811) *
               C153638 * C153810 * C153711 * C154093 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C153711 * C154092 -
           (C28436 * C28564 - C28437 * C28561 - C28436 * C28565 +
            C28426 * C28567 + C28434 * C4806 - C28435 * C4802 - C28434 * C4807 +
            C28425 * C4811 + C28432 * C3195 - C28433 * C3190 - C28432 * C3196 +
            C28424 * C3202 + C28430 * C1382 - C28431 * C1374 - C28430 * C1383 +
            C28423 * C1389 + C28428 * C361 - C28429 * C343 - C28428 * C362 +
            C28422 * C379) *
               C153638 * C153810 * C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C153638 * C154110 +
            (C31262 + C31263 + C31264) * C153638 * C154099 + C31276 * C154074) *
               C153711 * C154092 -
           (C32676 * C154074 + (C32063 + C32062 + C32061) * C153638 * C154099 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C153638 * C154110) *
               C153711 * C154093 +
           ((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C153638 * C154110 +
            (C24212 * C1957 - C24213 * C1948 - C24212 * C1958 + C24206 * C1963 +
             C24214 * C4383 - C24215 * C4379 - C24214 * C4384 + C24207 * C4391 +
             C24216 * C5776 - C24217 * C5771 - C24216 * C5777 +
             C154071 * C5780) *
                C153638 * C154099 +
            (C24212 * C3511 - C24213 * C3507 - C24212 * C3512 + C24206 * C3519 +
             C24214 * C5038 - C24215 * C5033 - C24214 * C5039 + C24207 * C5042 +
             C24216 * C28692 - C24217 * C28690 - C24216 * C28693 +
             C154071 * C28696) *
                C153638 * C154074) *
               C153711 * C1657) *
              C154013 +
          (((C24602 + C24601 + C24600) * C153638 * C154110 +
            (C25719 + C25720 + C25721) * C153638 * C154099 +
            (C32067 + C32068 + C32069) * C153638 * C154074) *
               C153711 * C154093 -
           (C31261 * C154074 + (C24902 + C24903 + C24904) * C153638 * C154099 +
            (C24293 + C24292 + C24291) * C153638 * C154110) *
               C153711 * C154092 -
           ((C24216 * C28694 - C24217 * C28691 - C24216 * C28695 +
             C154071 * C28697 + C24214 * C5036 - C24215 * C5032 -
             C24214 * C5037 + C24207 * C5041 + C24212 * C3513 - C24213 * C3508 -
             C24212 * C3514 + C24206 * C3520) *
                C153638 * C154074 +
            (C24216 * C5774 - C24217 * C5770 - C24216 * C5775 +
             C154071 * C5779 + C24214 * C4385 - C24215 * C4380 -
             C24214 * C4386 + C24207 * C4392 + C24212 * C1955 - C24213 * C1947 -
             C24212 * C1956 + C24206 * C1962) *
                C153638 * C154099 +
            (C24605 + C24604 + C24603) * C153638 * C154110) *
               C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[336] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C154022 -
           (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
            (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
             C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
             C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                C2874) *
               C153810 * C153775) *
              C154092 +
          (((C2877 * C1111 - C2878 * C1105 - C2877 * C1112 + C154109 * C1123 +
             C2879 * C1957 - C2880 * C1948 - C2879 * C1958 + C154097 * C1963 +
             C2881 * C4383 - C2882 * C4379 - C2881 * C4384 + C154071 * C4391) *
                C2874 +
            (C4432 + C4433 + C4434) * C2875 +
            (C4435 + C4436 + C4437) * C154058) *
               C153810 * C153775 -
           (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C2874) *
               C153810 * C154022) *
              C154093 +
          (((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
             C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
             C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                C2874 +
            (C3284 + C3285 + C3286) * C2875 +
            (C3287 + C3288 + C3289) * C154058) *
               C153810 * C154022 -
           ((C2881 * C5772 - C2882 * C5769 - C2881 * C5773 + C154071 * C5778 +
             C2879 * C4387 - C2880 * C4381 - C2879 * C4388 + C154097 * C4393 +
             C2877 * C1953 - C2878 * C1946 - C2877 * C1954 + C154109 * C1961) *
                C154058 +
            (C2881 * C5774 - C2882 * C5770 - C2881 * C5775 + C154071 * C5779 +
             C2879 * C4385 - C2880 * C4380 - C2879 * C4386 + C154097 * C4392 +
             C2877 * C1955 - C2878 * C1947 - C2877 * C1956 + C154109 * C1962) *
                C2875 +
            (C2881 * C5776 - C2882 * C5771 - C2881 * C5777 + C154071 * C5780 +
             C2879 * C4383 - C2880 * C4379 - C2879 * C4384 + C154097 * C4391 +
             C2877 * C1957 - C2878 * C1948 - C2877 * C1958 + C154109 * C1963) *
                C2874) *
               C153810 * C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C154022 -
           (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
            (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) * C122) *
               C153810 * C153775) *
              C154092 +
          (((C134 * C1111 - C135 * C1105 - C134 * C1112 + C153792 * C1123) *
                C122 +
            C1154 * C123 + C1155 * C124 + C1156 * C125 + C1157 * C126) *
               C153810 * C153775 -
           (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) * C122) *
               C153810 * C154022) *
              C154093 +
          (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) * C122 +
            C438 * C123 + C439 * C124 + C440 * C125 + C441 * C126) *
               C153810 * C154022 -
           ((C134 * C1949 - C135 * C1944 - C134 * C1950 + C153792 * C1959) *
                C126 +
            (C134 * C1951 - C135 * C1945 - C134 * C1952 + C153792 * C1960) *
                C125 +
            (C134 * C1953 - C135 * C1946 - C134 * C1954 + C153792 * C1961) *
                C124 +
            (C134 * C1955 - C135 * C1947 - C134 * C1956 + C153792 * C1962) *
                C123 +
            (C134 * C1957 - C135 * C1948 - C134 * C1958 + C153792 * C1963) *
                C122) *
               C153810 * C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C2874 +
             C205 * C2875 + C206 * C154058) *
                C154110 +
            (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
               C154022 -
           ((C7827 + C7828 + C7829) * C154074 +
            (C7768 + C7767 + C7826) * C154099 +
            (C7762 + C7761 + C7825) * C154110) *
               C153775) *
              C154092 +
          (((C8616 + C8582 + C8583) * C154110 +
            (C8617 + C8588 + C8589) * C154099 +
            (C9223 + C9216 + C9217) * C154074) *
               C153775 -
           (C9220 * C154074 + (C8583 + C8582 + C8616) * C154099 +
            (C436 * C154058 + C437 * C2875 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C2874) *
                C154110) *
               C154022) *
              C154093 +
          ((((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C2874 +
             C438 * C2875 + C439 * C154058) *
                C154110 +
            (C9968 + C9954 + C9955) * C154099 +
            (C9969 + C9960 + C9961) * C154074) *
               C154022 -
           (((C134 * C6369 - C135 * C6363 - C134 * C6370 + C153792 * C6381) *
                 C154058 +
             (C134 * C6373 - C135 * C6365 - C134 * C6374 + C153792 * C6383) *
                 C2875 +
             (C134 * C6377 - C135 * C6367 - C134 * C6378 + C153792 * C6385) *
                 C2874) *
                C154074 +
            (C9961 + C9960 + C9969) * C154099 +
            (C9955 + C9954 + C9968) * C154110) *
               C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C154022 -
           (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C153775) *
              C154092 +
          (((C24212 * C1111 - C24213 * C1105 - C24212 * C1112 + C24206 * C1123 +
             C24214 * C1957 - C24215 * C1948 - C24214 * C1958 + C24207 * C1963 +
             C24216 * C4383 - C24217 * C4379 - C24216 * C4384 +
             C154071 * C4391) *
                C154106 +
            (C25719 + C25720 + C25721) * C154087 +
            (C25722 + C25723 + C25724) * C154058) *
               C153810 * C153775 -
           (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C154022) *
              C154093 +
          (((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C154106 +
            (C24603 + C24604 + C24605) * C154087 +
            (C24606 + C24607 + C24608) * C154058) *
               C153810 * C154022 -
           ((C24216 * C5772 - C24217 * C5769 - C24216 * C5773 +
             C154071 * C5778 + C24214 * C4387 - C24215 * C4381 -
             C24214 * C4388 + C24207 * C4393 + C24212 * C1953 - C24213 * C1946 -
             C24212 * C1954 + C24206 * C1961) *
                C154058 +
            (C24216 * C5774 - C24217 * C5770 - C24216 * C5775 +
             C154071 * C5779 + C24214 * C4385 - C24215 * C4380 -
             C24214 * C4386 + C24207 * C4392 + C24212 * C1955 - C24213 * C1947 -
             C24212 * C1956 + C24206 * C1962) *
                C154087 +
            (C24216 * C5776 - C24217 * C5771 - C24216 * C5777 +
             C154071 * C5780 + C24214 * C4383 - C24215 * C4379 -
             C24214 * C4384 + C24207 * C4391 + C24212 * C1957 - C24213 * C1948 -
             C24212 * C1958 + C24206 * C1963) *
                C154106) *
               C153810 * C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C154022 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C153775) *
              C154092 +
          ((C28428 * C1111 - C28429 * C1105 - C28428 * C1112 + C28422 * C1123 +
            C28430 * C1957 - C28431 * C1948 - C28430 * C1958 + C28423 * C1963 +
            C28432 * C4383 - C28433 * C4379 - C28432 * C4384 + C28424 * C4391 +
            C28434 * C5776 - C28435 * C5771 - C28434 * C5777 + C28425 * C5780 +
            C28436 * C29106 - C28437 * C29104 - C28436 * C29107 +
            C28426 * C29110) *
               C153638 * C153810 * C153775 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C154022) *
              C154093 +
          ((C28428 * C359 - C28429 * C342 - C28428 * C360 + C28422 * C378 +
            C28430 * C1384 - C28431 * C1375 - C28430 * C1385 + C28423 * C1390 +
            C28432 * C3193 - C28433 * C3189 - C28432 * C3194 + C28424 * C3201 +
            C28434 * C4808 - C28435 * C4803 - C28434 * C4809 + C28425 * C4812 +
            C28436 * C28562 - C28437 * C28560 - C28436 * C28563 +
            C28426 * C28566) *
               C153638 * C153810 * C154022 -
           (C28436 * C29853 - C28437 * C29852 - C28436 * C29854 +
            C28426 * C29855 + C28434 * C29106 - C28435 * C29104 -
            C28434 * C29107 + C28425 * C29110 + C28432 * C5776 -
            C28433 * C5771 - C28432 * C5777 + C28424 * C5780 + C28430 * C4383 -
            C28431 * C4379 - C28430 * C4384 + C28423 * C4391 + C28428 * C1957 -
            C28429 * C1948 - C28428 * C1958 + C28422 * C1963) *
               C153638 * C153810 * C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C153638 * C154110 +
            (C31262 + C31263 + C31264) * C153638 * C154099 + C31276 * C154074) *
               C154022 -
           ((C31268 + C31269 + C31270) * C153638 * C154074 +
            (C31267 + C31266 + C31265) * C153638 * C154099 +
            (C31264 + C31263 + C31262) * C153638 * C154110) *
               C153775) *
              C154092 +
          (((C32061 + C32062 + C32063) * C153638 * C154110 +
            (C32064 + C32065 + C32066) * C153638 * C154099 +
            (C32677 + C32678 + C32679) * C153638 * C154074) *
               C153775 -
           (C32676 * C154074 + (C32063 + C32062 + C32061) * C153638 * C154099 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C153638 * C154110) *
               C154022) *
              C154093 +
          (((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C153638 * C154110 +
            (C33442 + C33443 + C33444) * C153638 * C154099 +
            (C33445 + C33446 + C33447) * C153638 * C154074) *
               C154022 -
           ((C24216 * C30184 - C24217 * C30182 - C24216 * C30185 +
             C154071 * C30188 + C24214 * C30186 - C24215 * C30183 -
             C24214 * C30187 + C24207 * C30189 + C24212 * C6377 -
             C24213 * C6367 - C24212 * C6378 + C24206 * C6385) *
                C153638 * C154074 +
            (C33447 + C33446 + C33445) * C153638 * C154099 +
            (C33444 + C33443 + C33442) * C153638 * C154110) *
               C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[337] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                    C122 +
                C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                   C153810 * C153711 * C1279 -
               (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
                (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                    C122) *
                   C153810 * C153711 * C153747) *
                  C1281 +
              ((C437 * C122 + C436 * C123 + C435 * C124 + C434 * C125 +
                C808 * C126) *
                   C153810 * C153711 * C153747 -
               (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
                C205 * C122) *
                   C153810 * C153711 * C1279) *
                  C1282 +
              ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125 +
                C210 * C126) *
                   C153810 * C153711 * C1279 -
               ((C134 * C798 - C135 * C797 - C134 * C799 + C153792 * C800) *
                    C126 +
                C808 * C125 + C434 * C124 + C435 * C123 + C436 * C122) *
                   C153810 * C153711 * C153747) *
                  C1283) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                   C122 +
               C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                  C153810 * C153711 * C1366 -
              (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
               (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                   C122) *
                  C153810 * C153711 * C1367 +
              ((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                   C122 +
               C438 * C123 + C439 * C124 + C440 * C125 + C441 * C126) *
                  C153810 * C153711 * C1368 -
              ((C134 * C1376 - C135 * C1371 - C134 * C1377 + C153792 * C1386) *
                   C126 +
               (C134 * C1378 - C135 * C1372 - C134 * C1379 + C153792 * C1387) *
                   C125 +
               (C134 * C1380 - C135 * C1373 - C134 * C1381 + C153792 * C1388) *
                   C124 +
               (C134 * C1382 - C135 * C1374 - C134 * C1383 + C153792 * C1389) *
                   C123 +
               (C134 * C1384 - C135 * C1375 - C134 * C1385 + C153792 * C1390) *
                   C122) *
                  C153810 * C153711 * C1369) *
             C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C563 -
           (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
            (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) * C122) *
               C153810 * C564 +
           ((C134 * C588 - C135 * C571 - C134 * C589 + C153792 * C607) * C122 +
            C667 * C123 + C668 * C124 + C669 * C125 + C670 * C126) *
               C153810 * C565) *
              C1279 +
          (((C134 * C1111 - C135 * C1105 - C134 * C1112 + C153792 * C1123) *
                C122 +
            C1154 * C123 + C1155 * C124 + C1156 * C125 + C1157 * C126) *
               C153810 * C564 -
           (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) * C122) *
               C153810 * C563 -
           ((C134 * C1518 - C135 * C1513 - C134 * C1519 + C153792 * C1528) *
                C126 +
            (C134 * C1520 - C135 * C1514 - C134 * C1521 + C153792 * C1529) *
                C125 +
            (C134 * C1522 - C135 * C1515 - C134 * C1523 + C153792 * C1530) *
                C124 +
            (C134 * C1524 - C135 * C1516 - C134 * C1525 + C153792 * C1531) *
                C123 +
            (C134 * C1526 - C135 * C1517 - C134 * C1527 + C153792 * C1532) *
                C122) *
               C153810 * C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C153711 * C1279 -
           (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C2874) *
               C153810 * C153711 * C153747) *
              C1281 +
          (((C3283 + C3282 + C3281) * C2874 + (C3280 + C3279 + C3278) * C2875 +
            (C3846 + C3847 + C3848) * C154058) *
               C153810 * C153711 * C153747 -
           (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
            (C2958 + C2957 + C2956) * C2874) *
               C153810 * C153711 * C1279) *
              C1282 +
          ((C2970 * C2874 + (C2964 + C2963 + C2962) * C2875 +
            (C2965 + C2966 + C2967) * C154058) *
               C153810 * C153711 * C1279 -
           ((C2881 * C1376 - C2882 * C1371 - C2881 * C1377 + C154071 * C1386 +
             C2879 * C367 - C2880 * C346 - C2879 * C368 + C154097 * C382 +
             C2877 * C349 - C2878 * C337 - C2877 * C350 + C154109 * C373) *
                C154058 +
            (C3848 + C3847 + C3846) * C2875 + C3839 * C2874) *
               C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
            C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
            C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
               C2874 +
           (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
              C153810 * C153711 * C1366 -
          (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
           (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
            C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
            C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
               C2874) *
              C153810 * C153711 * C1367 +
          ((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
            C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
            C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
               C2874 +
           (C3284 + C3285 + C3286) * C2875 +
           (C3287 + C3288 + C3289) * C154058) *
              C153810 * C153711 * C1368 -
          ((C2881 * C4804 - C2882 * C4801 - C2881 * C4805 + C154071 * C4810 +
            C2879 * C3197 - C2880 * C3191 - C2879 * C3198 + C154097 * C3203 +
            C2877 * C1380 - C2878 * C1373 - C2877 * C1381 + C154109 * C1388) *
               C154058 +
           (C2881 * C4806 - C2882 * C4802 - C2881 * C4807 + C154071 * C4811 +
            C2879 * C3195 - C2880 * C3190 - C2879 * C3196 + C154097 * C3202 +
            C2877 * C1382 - C2878 * C1374 - C2877 * C1383 + C154109 * C1389) *
               C2875 +
           (C2881 * C4808 - C2882 * C4803 - C2881 * C4809 + C154071 * C4812 +
            C2879 * C3193 - C2880 * C3189 - C2879 * C3194 + C154097 * C3201 +
            C2877 * C1384 - C2878 * C1375 - C2877 * C1385 + C154109 * C1390) *
               C2874) *
              C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C563 -
           (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
            (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
             C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
             C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                C2874) *
               C153810 * C564 +
           ((C2877 * C588 - C2878 * C571 - C2877 * C589 + C154109 * C607 +
             C2879 * C1526 - C2880 * C1517 - C2879 * C1527 + C154097 * C1532 +
             C2881 * C3511 - C2882 * C3507 - C2881 * C3512 + C154071 * C3519) *
                C2874 +
            (C3602 + C3603 + C3604) * C2875 +
            (C3605 + C3606 + C3607) * C154058) *
               C153810 * C565) *
              C1279 +
          (((C2877 * C1111 - C2878 * C1105 - C2877 * C1112 + C154109 * C1123 +
             C2879 * C1957 - C2880 * C1948 - C2879 * C1958 + C154097 * C1963 +
             C2881 * C4383 - C2882 * C4379 - C2881 * C4384 + C154071 * C4391) *
                C2874 +
            (C4432 + C4433 + C4434) * C2875 +
            (C4435 + C4436 + C4437) * C154058) *
               C153810 * C564 -
           (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C2874) *
               C153810 * C563 -
           ((C2881 * C5034 - C2882 * C5031 - C2881 * C5035 + C154071 * C5040 +
             C2879 * C3515 - C2880 * C3509 - C2879 * C3516 + C154097 * C3521 +
             C2877 * C1522 - C2878 * C1515 - C2877 * C1523 + C154109 * C1530) *
                C154058 +
            (C2881 * C5036 - C2882 * C5032 - C2881 * C5037 + C154071 * C5041 +
             C2879 * C3513 - C2880 * C3508 - C2879 * C3514 + C154097 * C3520 +
             C2877 * C1524 - C2878 * C1516 - C2877 * C1525 + C154109 * C1531) *
                C2875 +
            (C2881 * C5038 - C2882 * C5033 - C2881 * C5039 + C154071 * C5042 +
             C2879 * C3511 - C2880 * C3507 - C2879 * C3512 + C154097 * C3519 +
             C2877 * C1526 - C2878 * C1517 - C2877 * C1527 + C154109 * C1532) *
                C2874) *
               C153810 * C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C2874 +
             C205 * C2875 + C206 * C154058) *
                C154110 +
            (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
               C153711 * C1279 -
           ((C8589 + C8588 + C8617) * C154074 +
            (C8583 + C8582 + C8616) * C154099 +
            (C436 * C154058 + C437 * C2875 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C2874) *
                C154110) *
               C153711 * C153747) *
              C1281 +
          (((C437 * C2874 + C436 * C2875 + C435 * C154058) * C154110 +
            (C8598 + C8599 + C8600) * C154099 +
            (C8601 + C8602 + C8603) * C154074) *
               C153711 * C153747 -
           (C7816 * C154074 + (C7791 + C7790 + C7789) * C154099 +
            (C207 * C154058 + C206 * C2875 + C205 * C2874) * C154110) *
               C153711 * C1279) *
              C1282 +
          (((C206 * C2874 + C207 * C2875 + C208 * C154058) * C154110 +
            (C8278 + C8279 + C8280) * C154099 +
            (C8281 + C8282 + C8283) * C154074) *
               C153711 * C1279 -
           (((C134 * C1518 - C135 * C1513 - C134 * C1519 + C153792 * C1528) *
                 C154058 +
             C8059 * C2875 + C7517 * C2874) *
                C154074 +
            (C1157 * C154058 + C1156 * C2875 + C1155 * C2874) * C154099 +
            (C434 * C154058 + C435 * C2875 + C436 * C2874) * C154110) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C2874 +
            C205 * C2875 + C206 * C154058) *
               C154110 +
           (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
              C153711 * C1366 -
          ((C8589 + C8588 + C8617) * C154074 +
           (C8583 + C8582 + C8616) * C154099 +
           (C436 * C154058 + C437 * C2875 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                C2874) *
               C154110) *
              C153711 * C1367 +
          (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) * C2874 +
            C438 * C2875 + C439 * C154058) *
               C154110 +
           ((C134 * C1957 - C135 * C1948 - C134 * C1958 + C153792 * C1963) *
                C2874 +
            C7519 * C2875 + C7520 * C154058) *
               C154099 +
           ((C134 * C3511 - C135 * C3507 - C134 * C3512 + C153792 * C3519) *
                C2874 +
            C7521 * C2875 + C7522 * C154058) *
               C154074) *
              C153711 * C1368 -
          (((C134 * C5034 - C135 * C5031 - C134 * C5035 + C153792 * C5040) *
                C154058 +
            (C134 * C5036 - C135 * C5032 - C134 * C5037 + C153792 * C5041) *
                C2875 +
            (C134 * C5038 - C135 * C5033 - C134 * C5039 + C153792 * C5042) *
                C2874) *
               C154074 +
           ((C134 * C4387 - C135 * C4381 - C134 * C4388 + C153792 * C4393) *
                C154058 +
            (C134 * C4385 - C135 * C4380 - C134 * C4386 + C153792 * C4392) *
                C2875 +
            (C134 * C4383 - C135 * C4379 - C134 * C4384 + C153792 * C4391) *
                C2874) *
               C154099 +
           ((C134 * C1380 - C135 * C1373 - C134 * C1381 + C153792 * C1388) *
                C154058 +
            (C134 * C1382 - C135 * C1374 - C134 * C1383 + C153792 * C1389) *
                C2875 +
            (C134 * C1384 - C135 * C1375 - C134 * C1385 + C153792 * C1390) *
                C2874) *
               C154110) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C2874 +
             C205 * C2875 + C206 * C154058) *
                C154110 +
            (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
               C563 -
           ((C7827 + C7828 + C7829) * C154074 +
            (C7768 + C7767 + C7826) * C154099 +
            (C7762 + C7761 + C7825) * C154110) *
               C564 +
           (C7834 * C154110 + (C7829 + C7828 + C7827) * C154099 +
            ((C134 * C7744 - C135 * C7740 - C134 * C7745 + C153792 * C7752) *
                 C2874 +
             C7822 * C2875 + C7823 * C154058) *
                C154074) *
               C565) *
              C1279 +
          (((C8616 + C8582 + C8583) * C154110 +
            (C8617 + C8588 + C8589) * C154099 +
            (C9223 + C9216 + C9217) * C154074) *
               C564 -
           (C9220 * C154074 + (C8583 + C8582 + C8616) * C154099 +
            (C436 * C154058 + C437 * C2875 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C2874) *
                C154110) *
               C563 -
           (((C134 * C9202 - C135 * C9199 - C134 * C9203 + C153792 * C9208) *
                 C154058 +
             (C134 * C9204 - C135 * C9200 - C134 * C9205 + C153792 * C9209) *
                 C2875 +
             (C134 * C9206 - C135 * C9201 - C134 * C9207 + C153792 * C9210) *
                 C2874) *
                C154074 +
            (C9217 + C9216 + C9223) * C154099 + C9220 * C154110) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C153711 * C1279 -
           (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C153711 * C153747) *
              C1281 +
          (((C24602 + C24601 + C24600) * C154106 +
            (C24599 + C24598 + C24597) * C154087 +
            (C25149 + C25150 + C25151) * C154058) *
               C153810 * C153711 * C153747 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C153711 * C1279) *
              C1282 +
          ((C24305 * C154106 + (C24299 + C24298 + C24297) * C154087 +
            (C24300 + C24301 + C24302) * C154058) *
               C153810 * C153711 * C1279 -
           ((C24216 * C1376 - C24217 * C1371 - C24216 * C1377 +
             C154071 * C1386 + C24214 * C367 - C24215 * C346 - C24214 * C368 +
             C24207 * C382 + C24212 * C349 - C24213 * C337 - C24212 * C350 +
             C24206 * C373) *
                C154058 +
            (C25151 + C25150 + C25149) * C154087 + C25142 * C154106) *
               C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
            C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
            C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
               C154106 +
           (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
              C153810 * C153711 * C1366 -
          (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
           (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 + C154071 * C1390 +
            C24214 * C359 - C24215 * C342 - C24214 * C360 + C24207 * C378 +
            C24212 * C357 - C24213 * C341 - C24212 * C358 + C24206 * C377) *
               C154106) *
              C153810 * C153711 * C1367 +
          ((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
            C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
            C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
            C154071 * C3201) *
               C154106 +
           (C24603 + C24604 + C24605) * C154087 +
           (C24606 + C24607 + C24608) * C154058) *
              C153810 * C153711 * C1368 -
          ((C24216 * C4804 - C24217 * C4801 - C24216 * C4805 + C154071 * C4810 +
            C24214 * C3197 - C24215 * C3191 - C24214 * C3198 + C24207 * C3203 +
            C24212 * C1380 - C24213 * C1373 - C24212 * C1381 + C24206 * C1388) *
               C154058 +
           (C24216 * C4806 - C24217 * C4802 - C24216 * C4807 + C154071 * C4811 +
            C24214 * C3195 - C24215 * C3190 - C24214 * C3196 + C24207 * C3202 +
            C24212 * C1382 - C24213 * C1374 - C24212 * C1383 + C24206 * C1389) *
               C154087 +
           (C24216 * C4808 - C24217 * C4803 - C24216 * C4809 + C154071 * C4812 +
            C24214 * C3193 - C24215 * C3189 - C24214 * C3194 + C24207 * C3201 +
            C24212 * C1384 - C24213 * C1375 - C24212 * C1385 + C24206 * C1390) *
               C154106) *
              C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C563 -
           (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C564 +
           ((C24212 * C588 - C24213 * C571 - C24212 * C589 + C24206 * C607 +
             C24214 * C1526 - C24215 * C1517 - C24214 * C1527 + C24207 * C1532 +
             C24216 * C3511 - C24217 * C3507 - C24216 * C3512 +
             C154071 * C3519) *
                C154106 +
            (C24905 + C24906 + C24907) * C154087 +
            (C24908 + C24909 + C24910) * C154058) *
               C153810 * C565) *
              C1279 +
          (((C24212 * C1111 - C24213 * C1105 - C24212 * C1112 + C24206 * C1123 +
             C24214 * C1957 - C24215 * C1948 - C24214 * C1958 + C24207 * C1963 +
             C24216 * C4383 - C24217 * C4379 - C24216 * C4384 +
             C154071 * C4391) *
                C154106 +
            (C25719 + C25720 + C25721) * C154087 +
            (C25722 + C25723 + C25724) * C154058) *
               C153810 * C564 -
           (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C563 -
           ((C24216 * C5034 - C24217 * C5031 - C24216 * C5035 +
             C154071 * C5040 + C24214 * C3515 - C24215 * C3509 -
             C24214 * C3516 + C24207 * C3521 + C24212 * C1522 - C24213 * C1515 -
             C24212 * C1523 + C24206 * C1530) *
                C154058 +
            (C24216 * C5036 - C24217 * C5032 - C24216 * C5037 +
             C154071 * C5041 + C24214 * C3513 - C24215 * C3508 -
             C24214 * C3514 + C24207 * C3520 + C24212 * C1524 - C24213 * C1516 -
             C24212 * C1525 + C24206 * C1531) *
                C154087 +
            (C24216 * C5038 - C24217 * C5033 - C24216 * C5039 +
             C154071 * C5042 + C24214 * C3511 - C24215 * C3507 -
             C24214 * C3512 + C24207 * C3519 + C24212 * C1526 - C24213 * C1517 -
             C24212 * C1527 + C24206 * C1532) *
                C154106) *
               C153810 * C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C153711 * C1279 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C153711 * C153747) *
              C1281 +
          ((C28428 * C355 - C28429 * C340 - C28428 * C356 + C28422 * C376 +
            C28430 * C361 - C28431 * C343 - C28430 * C362 + C28423 * C379 +
            C28432 * C1382 - C28433 * C1374 - C28432 * C1383 + C28424 * C1389 +
            C28434 * C3195 - C28435 * C3190 - C28434 * C3196 + C28425 * C3202 +
            C28436 * C4806 - C28437 * C4802 - C28436 * C4807 + C28426 * C4811) *
               C153638 * C153810 * C153711 * C153747 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C153711 * C1279) *
              C1282 +
          ((C28428 * C148 - C28429 * C138 - C28428 * C149 + C28422 * C162 +
            C28430 * C353 - C28431 * C339 - C28430 * C354 + C28423 * C375 +
            C28432 * C363 - C28433 * C344 - C28432 * C364 + C28424 * C380 +
            C28434 * C1380 - C28435 * C1373 - C28434 * C1381 + C28425 * C1388 +
            C28436 * C3197 - C28437 * C3191 - C28436 * C3198 + C28426 * C3203) *
               C153638 * C153810 * C153711 * C1279 -
           (C28436 * C4804 - C28437 * C4801 - C28436 * C4805 + C28426 * C4810 +
            C28434 * C3197 - C28435 * C3191 - C28434 * C3198 + C28425 * C3203 +
            C28432 * C1380 - C28433 * C1373 - C28432 * C1381 + C28424 * C1388 +
            C28430 * C363 - C28431 * C344 - C28430 * C364 + C28423 * C380 +
            C28428 * C353 - C28429 * C339 - C28428 * C354 + C28422 * C375) *
               C153638 * C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
           C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
           C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
           C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
           C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
              C153638 * C153810 * C153711 * C1366 -
          (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
           C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
           C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
           C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
           C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
              C153638 * C153810 * C153711 * C1367 +
          (C28428 * C359 - C28429 * C342 - C28428 * C360 + C28422 * C378 +
           C28430 * C1384 - C28431 * C1375 - C28430 * C1385 + C28423 * C1390 +
           C28432 * C3193 - C28433 * C3189 - C28432 * C3194 + C28424 * C3201 +
           C28434 * C4808 - C28435 * C4803 - C28434 * C4809 + C28425 * C4812 +
           C28436 * C28562 - C28437 * C28560 - C28436 * C28563 +
           C28426 * C28566) *
              C153638 * C153810 * C153711 * C1368 -
          (C28436 * C29317 - C28437 * C29316 - C28436 * C29318 +
           C28426 * C29319 + C28434 * C28562 - C28435 * C28560 -
           C28434 * C28563 + C28425 * C28566 + C28432 * C4808 - C28433 * C4803 -
           C28432 * C4809 + C28424 * C4812 + C28430 * C3193 - C28431 * C3189 -
           C28430 * C3194 + C28423 * C3201 + C28428 * C1384 - C28429 * C1375 -
           C28428 * C1385 + C28422 * C1390) *
              C153638 * C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C563 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C564 +
           (C28428 * C588 - C28429 * C571 - C28428 * C589 + C28422 * C607 +
            C28430 * C1526 - C28431 * C1517 - C28430 * C1527 + C28423 * C1532 +
            C28432 * C3511 - C28433 * C3507 - C28432 * C3512 + C28424 * C3519 +
            C28434 * C5038 - C28435 * C5033 - C28434 * C5039 + C28425 * C5042 +
            C28436 * C28692 - C28437 * C28690 - C28436 * C28693 +
            C28426 * C28696) *
               C153638 * C153810 * C565) *
              C1279 +
          ((C28428 * C1111 - C28429 * C1105 - C28428 * C1112 + C28422 * C1123 +
            C28430 * C1957 - C28431 * C1948 - C28430 * C1958 + C28423 * C1963 +
            C28432 * C4383 - C28433 * C4379 - C28432 * C4384 + C28424 * C4391 +
            C28434 * C5776 - C28435 * C5771 - C28434 * C5777 + C28425 * C5780 +
            C28436 * C29106 - C28437 * C29104 - C28436 * C29107 +
            C28426 * C29110) *
               C153638 * C153810 * C564 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C563 -
           (C28436 * C29443 - C28437 * C29442 - C28436 * C29444 +
            C28426 * C29445 + C28434 * C28692 - C28435 * C28690 -
            C28434 * C28693 + C28425 * C28696 + C28432 * C5038 -
            C28433 * C5033 - C28432 * C5039 + C28424 * C5042 + C28430 * C3511 -
            C28431 * C3507 - C28430 * C3512 + C28423 * C3519 + C28428 * C1526 -
            C28429 * C1517 - C28428 * C1527 + C28422 * C1532) *
               C153638 * C153810 * C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C153638 * C154110 +
            (C31262 + C31263 + C31264) * C153638 * C154099 + C31276 * C154074) *
               C153711 * C1279 -
           ((C32066 + C32065 + C32064) * C153638 * C154074 +
            (C32063 + C32062 + C32061) * C153638 * C154099 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C153638 * C154110) *
               C153711 * C153747) *
              C1281 +
          (((C24602 + C24601 + C24600) * C153638 * C154110 +
            (C25719 + C25720 + C25721) * C153638 * C154099 +
            (C32067 + C32068 + C32069) * C153638 * C154074) *
               C153711 * C153747 -
           (C31261 * C154074 + (C24902 + C24903 + C24904) * C153638 * C154099 +
            (C24293 + C24292 + C24291) * C153638 * C154110) *
               C153711 * C1279) *
              C1282 +
          ((C24305 * C153638 * C154110 +
            (C24901 + C24900 + C24899) * C153638 * C154099 +
            (C24908 + C24909 + C24910) * C153638 * C154074) *
               C153711 * C1279 -
           ((C24216 * C5034 - C24217 * C5031 - C24216 * C5035 +
             C154071 * C5040 + C24214 * C3515 - C24215 * C3509 -
             C24214 * C3516 + C24207 * C3521 + C24212 * C1522 - C24213 * C1515 -
             C24212 * C1523 + C24206 * C1530) *
                C153638 * C154074 +
            (C25724 + C25723 + C25722) * C153638 * C154099 +
            C25142 * C153638 * C154110) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
            C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
            C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
               C153638 * C154110 +
           (C31262 + C31263 + C31264) * C153638 * C154099 + C31276 * C154074) *
              C153711 * C1366 -
          ((C32066 + C32065 + C32064) * C153638 * C154074 +
           (C32063 + C32062 + C32061) * C153638 * C154099 +
           (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 + C154071 * C1390 +
            C24214 * C359 - C24215 * C342 - C24214 * C360 + C24207 * C378 +
            C24212 * C357 - C24213 * C341 - C24212 * C358 + C24206 * C377) *
               C153638 * C154110) *
              C153711 * C1367 +
          ((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
            C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
            C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
            C154071 * C3201) *
               C153638 * C154110 +
           (C24212 * C1957 - C24213 * C1948 - C24212 * C1958 + C24206 * C1963 +
            C24214 * C4383 - C24215 * C4379 - C24214 * C4384 + C24207 * C4391 +
            C24216 * C5776 - C24217 * C5771 - C24216 * C5777 +
            C154071 * C5780) *
               C153638 * C154099 +
           (C24212 * C3511 - C24213 * C3507 - C24212 * C3512 + C24206 * C3519 +
            C24214 * C5038 - C24215 * C5033 - C24214 * C5039 + C24207 * C5042 +
            C24216 * C28692 - C24217 * C28690 - C24216 * C28693 +
            C154071 * C28696) *
               C153638 * C154074) *
              C153711 * C1368 -
          ((C24216 * C29443 - C24217 * C29442 - C24216 * C29444 +
            C154071 * C29445 + C24214 * C28692 - C24215 * C28690 -
            C24214 * C28693 + C24207 * C28696 + C24212 * C5038 -
            C24213 * C5033 - C24212 * C5039 + C24206 * C5042) *
               C153638 * C154074 +
           (C24216 * C29106 - C24217 * C29104 - C24216 * C29107 +
            C154071 * C29110 + C24214 * C5776 - C24215 * C5771 -
            C24214 * C5777 + C24207 * C5780 + C24212 * C4383 - C24213 * C4379 -
            C24212 * C4384 + C24206 * C4391) *
               C153638 * C154099 +
           (C24216 * C4808 - C24217 * C4803 - C24216 * C4809 + C154071 * C4812 +
            C24214 * C3193 - C24215 * C3189 - C24214 * C3194 + C24207 * C3201 +
            C24212 * C1384 - C24213 * C1375 - C24212 * C1385 + C24206 * C1390) *
               C153638 * C154110) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C153638 * C154110 +
            (C31262 + C31263 + C31264) * C153638 * C154099 + C31276 * C154074) *
               C563 -
           ((C31268 + C31269 + C31270) * C153638 * C154074 +
            (C31267 + C31266 + C31265) * C153638 * C154099 +
            (C31264 + C31263 + C31262) * C153638 * C154110) *
               C564 +
           (C31276 * C154110 + (C31270 + C31269 + C31268) * C153638 * C154099 +
            (C24212 * C7744 - C24213 * C7740 - C24212 * C7745 + C24206 * C7752 +
             C24214 * C9206 - C24215 * C9201 - C24214 * C9207 + C24207 * C9210 +
             C24216 * C31180 - C24217 * C31178 - C24216 * C31181 +
             C154071 * C31184) *
                C153638 * C154074) *
               C565) *
              C1279 +
          (((C32061 + C32062 + C32063) * C153638 * C154110 +
            (C32064 + C32065 + C32066) * C153638 * C154099 +
            (C32677 + C32678 + C32679) * C153638 * C154074) *
               C564 -
           (C32676 * C154074 + (C32063 + C32062 + C32061) * C153638 * C154099 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C153638 * C154110) *
               C563 -
           ((C24216 * C32652 - C24217 * C32651 - C24216 * C32653 +
             C154071 * C32654 + C24214 * C31180 - C24215 * C31178 -
             C24214 * C31181 + C24207 * C31184 + C24212 * C9206 -
             C24213 * C9201 - C24212 * C9207 + C24206 * C9210) *
                C153638 * C154074 +
            (C32679 + C32678 + C32677) * C153638 * C154099 + C32676 * C154110) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[338] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C2874 +
             (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
                C153810 * C154022 -
            (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
             (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
              C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
              C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                 C2874) *
                C153810 * C153775) *
               C1279 +
           (((C2877 * C1111 - C2878 * C1105 - C2877 * C1112 + C154109 * C1123 +
              C2879 * C1957 - C2880 * C1948 - C2879 * C1958 + C154097 * C1963 +
              C2881 * C4383 - C2882 * C4379 - C2881 * C4384 + C154071 * C4391) *
                 C2874 +
             (C4432 + C4433 + C4434) * C2875 +
             (C4435 + C4436 + C4437) * C154058) *
                C153810 * C153775 -
            (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C2874) *
                C153810 * C154022) *
               C153747) *
              C154013 +
          ((((C3601 + C3600 + C3599) * C2874 + (C3598 + C3597 + C3596) * C2875 +
             (C4087 + C4088 + C4089) * C154058) *
                C153810 * C153775 -
            (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
             (C2958 + C2957 + C2956) * C2874) *
                C153810 * C154022) *
               C1279 +
           (((C3283 + C3282 + C3281) * C2874 + (C3280 + C3279 + C3278) * C2875 +
             (C3846 + C3847 + C3848) * C154058) *
                C153810 * C154022 -
            ((C2881 * C4389 - C2882 * C4382 - C2881 * C4390 + C154071 * C4394 +
              C2879 * C1951 - C2880 * C1945 - C2879 * C1952 + C154097 * C1960 +
              C2877 * C1117 - C2878 * C1108 - C2877 * C1118 + C154109 * C1126) *
                 C154058 +
             (C4437 + C4436 + C4435) * C2875 +
             (C4434 + C4433 + C4432) * C2874) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                C153810 * C154022 -
            (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
             (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) *
                 C122) *
                C153810 * C153775) *
               C1279 +
           (((C134 * C1111 - C135 * C1105 - C134 * C1112 + C153792 * C1123) *
                 C122 +
             C1154 * C123 + C1155 * C124 + C1156 * C125 + C1157 * C126) *
                C153810 * C153775 -
            (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C122) *
                C153810 * C154022) *
               C153747) *
              C154013 +
          (((C666 * C122 + C665 * C123 + C664 * C124 + C663 * C125 +
             C943 * C126) *
                C153810 * C153775 -
            (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
             C205 * C122) *
                C153810 * C154022) *
               C1279 +
           ((C437 * C122 + C436 * C123 + C435 * C124 + C434 * C125 +
             C808 * C126) *
                C153810 * C154022 -
            ((C134 * C1121 - C135 * C1110 - C134 * C1122 + C153792 * C1128) *
                 C126 +
             C1157 * C125 + C1156 * C124 + C1155 * C123 + C1154 * C122) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                  C2874 +
              C205 * C2875 + C206 * C154058) *
                 C154110 +
             (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
                C154022 -
            ((C7827 + C7828 + C7829) * C154074 +
             (C7768 + C7767 + C7826) * C154099 +
             (C7762 + C7761 + C7825) * C154110) *
                C153775) *
               C1279 +
           (((C8616 + C8582 + C8583) * C154110 +
             (C8617 + C8588 + C8589) * C154099 +
             (C9223 + C9216 + C9217) * C154074) *
                C153775 -
            (C9220 * C154074 + (C8583 + C8582 + C8616) * C154099 +
             (C436 * C154058 + C437 * C2875 +
              (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                  C2874) *
                 C154110) *
                C154022) *
               C153747) *
              C154013 +
          ((((C7789 + C7790 + C7791) * C154110 +
             (C7792 + C7793 + C7794) * C154099 +
             (C7830 + C7831 + C7832) * C154074) *
                C153775 -
            (C7816 * C154074 + (C7791 + C7790 + C7789) * C154099 +
             (C207 * C154058 + C206 * C2875 + C205 * C2874) * C154110) *
                C154022) *
               C1279 +
           (((C437 * C2874 + C436 * C2875 + C435 * C154058) * C154110 +
             (C8598 + C8599 + C8600) * C154099 +
             (C8601 + C8602 + C8603) * C154074) *
                C154022 -
            (((C134 * C8574 - C135 * C8573 - C134 * C8575 + C153792 * C8576) *
                  C154058 +
              C8615 * C2875 + C8614 * C2874) *
                 C154074 +
             (C8603 + C8602 + C8601) * C154099 +
             (C8600 + C8599 + C8598) * C154110) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154106 +
             (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
                C153810 * C154022 -
            (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
             (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
              C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
              C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
              C24212 * C587 + C24206 * C606) *
                 C154106) *
                C153810 * C153775) *
               C1279 +
           (((C24212 * C1111 - C24213 * C1105 - C24212 * C1112 +
              C24206 * C1123 + C24214 * C1957 - C24215 * C1948 -
              C24214 * C1958 + C24207 * C1963 + C24216 * C4383 -
              C24217 * C4379 - C24216 * C4384 + C154071 * C4391) *
                 C154106 +
             (C25719 + C25720 + C25721) * C154087 +
             (C25722 + C25723 + C25724) * C154058) *
                C153810 * C153775 -
            (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C154106) *
                C153810 * C154022) *
               C153747) *
              C154013 +
          ((((C24904 + C24903 + C24902) * C154106 +
             (C24901 + C24900 + C24899) * C154087 +
             (C25390 + C25391 + C25392) * C154058) *
                C153810 * C153775 -
            (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
             (C24293 + C24292 + C24291) * C154106) *
                C153810 * C154022) *
               C1279 +
           (((C24602 + C24601 + C24600) * C154106 +
             (C24599 + C24598 + C24597) * C154087 +
             (C25149 + C25150 + C25151) * C154058) *
                C153810 * C154022 -
            ((C24216 * C4389 - C24217 * C4382 - C24216 * C4390 +
              C154071 * C4394 + C24214 * C1951 - C24215 * C1945 -
              C24214 * C1952 + C24207 * C1960 + C24212 * C1117 -
              C24213 * C1108 - C24212 * C1118 + C24206 * C1126) *
                 C154058 +
             (C25724 + C25723 + C25722) * C154087 +
             (C25721 + C25720 + C25719) * C154106) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
             C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
             C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
             C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
             C28436 * C3193 - C28437 * C3189 - C28436 * C3194 +
             C28426 * C3201) *
                C153638 * C153810 * C154022 -
            (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
             C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
             C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
             C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
             C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
                C153638 * C153810 * C153775) *
               C1279 +
           ((C28428 * C1111 - C28429 * C1105 - C28428 * C1112 + C28422 * C1123 +
             C28430 * C1957 - C28431 * C1948 - C28430 * C1958 + C28423 * C1963 +
             C28432 * C4383 - C28433 * C4379 - C28432 * C4384 + C28424 * C4391 +
             C28434 * C5776 - C28435 * C5771 - C28434 * C5777 + C28425 * C5780 +
             C28436 * C29106 - C28437 * C29104 - C28436 * C29107 +
             C28426 * C29110) *
                C153638 * C153810 * C153775 -
            (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
             C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
             C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
             C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
             C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
                C153638 * C153810 * C154022) *
               C153747) *
              C154013 +
          (((C28428 * C584 - C28429 * C569 - C28428 * C585 + C28422 * C605 +
             C28430 * C1113 - C28431 * C1106 - C28430 * C1114 + C28423 * C1124 +
             C28432 * C1955 - C28433 * C1947 - C28432 * C1956 + C28424 * C1962 +
             C28434 * C4385 - C28435 * C4380 - C28434 * C4386 + C28425 * C4392 +
             C28436 * C5774 - C28437 * C5770 - C28436 * C5775 +
             C28426 * C5779) *
                C153638 * C153810 * C153775 -
            (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
             C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
             C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
             C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
             C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
                C153638 * C153810 * C154022) *
               C1279 +
           ((C28428 * C355 - C28429 * C340 - C28428 * C356 + C28422 * C376 +
             C28430 * C361 - C28431 * C343 - C28430 * C362 + C28423 * C379 +
             C28432 * C1382 - C28433 * C1374 - C28432 * C1383 + C28424 * C1389 +
             C28434 * C3195 - C28435 * C3190 - C28434 * C3196 + C28425 * C3202 +
             C28436 * C4806 - C28437 * C4802 - C28436 * C4807 +
             C28426 * C4811) *
                C153638 * C153810 * C154022 -
            (C28436 * C29108 - C28437 * C29105 - C28436 * C29109 +
             C28426 * C29111 + C28434 * C5774 - C28435 * C5770 -
             C28434 * C5775 + C28425 * C5779 + C28432 * C4385 - C28433 * C4380 -
             C28432 * C4386 + C28424 * C4392 + C28430 * C1955 - C28431 * C1947 -
             C28430 * C1956 + C28423 * C1962 + C28428 * C1113 - C28429 * C1106 -
             C28428 * C1114 + C28422 * C1124) *
                C153638 * C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C153638 * C154110 +
             (C31262 + C31263 + C31264) * C153638 * C154099 +
             C31276 * C154074) *
                C154022 -
            ((C31268 + C31269 + C31270) * C153638 * C154074 +
             (C31267 + C31266 + C31265) * C153638 * C154099 +
             (C31264 + C31263 + C31262) * C153638 * C154110) *
                C153775) *
               C1279 +
           (((C32061 + C32062 + C32063) * C153638 * C154110 +
             (C32064 + C32065 + C32066) * C153638 * C154099 +
             (C32677 + C32678 + C32679) * C153638 * C154074) *
                C153775 -
            (C32676 * C154074 + (C32063 + C32062 + C32061) * C153638 * C154099 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C153638 * C154110) *
                C154022) *
               C153747) *
              C154013 +
          ((((C24904 + C24903 + C24902) * C153638 * C154110 +
             (C24905 + C24906 + C24907) * C153638 * C154099 +
             (C31271 + C31272 + C31273) * C153638 * C154074) *
                C153775 -
            (C31261 * C154074 + (C24902 + C24903 + C24904) * C153638 * C154099 +
             (C24293 + C24292 + C24291) * C153638 * C154110) *
                C154022) *
               C1279 +
           (((C24602 + C24601 + C24600) * C153638 * C154110 +
             (C25719 + C25720 + C25721) * C153638 * C154099 +
             (C32067 + C32068 + C32069) * C153638 * C154074) *
                C154022 -
            ((C24216 * C32003 - C24217 * C32002 - C24216 * C32004 +
              C154071 * C32005 + C24214 * C6373 - C24215 * C6365 -
              C24214 * C6374 + C24207 * C6383 + C24212 * C6375 -
              C24213 * C6366 - C24212 * C6376 + C24206 * C6384) *
                 C153638 * C154074 +
             (C32069 + C32068 + C32067) * C153638 * C154099 +
             (C25721 + C25720 + C25719) * C153638 * C154110) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[339] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
           C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
              C153810 * C153711 * C1366 -
          (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
           (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) * C122) *
              C153810 * C153711 * C1367 +
          ((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) * C122 +
           C438 * C123 + C439 * C124 + C440 * C125 + C441 * C126) *
              C153810 * C153711 * C1368 -
          ((C134 * C1376 - C135 * C1371 - C134 * C1377 + C153792 * C1386) *
               C126 +
           (C134 * C1378 - C135 * C1372 - C134 * C1379 + C153792 * C1387) *
               C125 +
           (C134 * C1380 - C135 * C1373 - C134 * C1381 + C153792 * C1388) *
               C124 +
           (C134 * C1382 - C135 * C1374 - C134 * C1383 + C153792 * C1389) *
               C123 +
           (C134 * C1384 - C135 * C1375 - C134 * C1385 + C153792 * C1390) *
               C122) *
              C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C153711 * C1279 -
           (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) * C122) *
               C153810 * C153711 * C153747) *
              C1281 +
          ((C437 * C122 + C436 * C123 + C435 * C124 + C434 * C125 +
            C808 * C126) *
               C153810 * C153711 * C153747 -
           (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
            C205 * C122) *
               C153810 * C153711 * C1279) *
              C1282 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125 +
            C210 * C126) *
               C153810 * C153711 * C1279 -
           ((C134 * C798 - C135 * C797 - C134 * C799 + C153792 * C800) * C126 +
            C808 * C125 + C434 * C124 + C435 * C123 + C436 * C122) *
               C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C153711 * C1279 -
           (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C2874) *
               C153810 * C153711 * C153747) *
              C1281 +
          (((C3283 + C3282 + C3281) * C2874 + (C3280 + C3279 + C3278) * C2875 +
            (C3846 + C3847 + C3848) * C154058) *
               C153810 * C153711 * C153747 -
           (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
            (C2958 + C2957 + C2956) * C2874) *
               C153810 * C153711 * C1279) *
              C1282 +
          ((C2970 * C2874 + (C2964 + C2963 + C2962) * C2875 +
            (C2965 + C2966 + C2967) * C154058) *
               C153810 * C153711 * C1279 -
           ((C2881 * C1376 - C2882 * C1371 - C2881 * C1377 + C154071 * C1386 +
             C2879 * C367 - C2880 * C346 - C2879 * C368 + C154097 * C382 +
             C2877 * C349 - C2878 * C337 - C2877 * C350 + C154109 * C373) *
                C154058 +
            (C3848 + C3847 + C3846) * C2875 + C3839 * C2874) *
               C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
            C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
            C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
               C2874 +
           (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
              C153810 * C153711 * C1366 -
          (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
           (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
            C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
            C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
               C2874) *
              C153810 * C153711 * C1367 +
          ((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
            C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
            C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
               C2874 +
           (C3284 + C3285 + C3286) * C2875 +
           (C3287 + C3288 + C3289) * C154058) *
              C153810 * C153711 * C1368 -
          ((C2881 * C4804 - C2882 * C4801 - C2881 * C4805 + C154071 * C4810 +
            C2879 * C3197 - C2880 * C3191 - C2879 * C3198 + C154097 * C3203 +
            C2877 * C1380 - C2878 * C1373 - C2877 * C1381 + C154109 * C1388) *
               C154058 +
           (C2881 * C4806 - C2882 * C4802 - C2881 * C4807 + C154071 * C4811 +
            C2879 * C3195 - C2880 * C3190 - C2879 * C3196 + C154097 * C3202 +
            C2877 * C1382 - C2878 * C1374 - C2877 * C1383 + C154109 * C1389) *
               C2875 +
           (C2881 * C4808 - C2882 * C4803 - C2881 * C4809 + C154071 * C4812 +
            C2879 * C3193 - C2880 * C3189 - C2879 * C3194 + C154097 * C3201 +
            C2877 * C1384 - C2878 * C1375 - C2877 * C1385 + C154109 * C1390) *
               C2874) *
              C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C2874 +
             C205 * C2875 + C206 * C154058) *
                C154110 +
            (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
               C153711 * C1279 -
           ((C8589 + C8588 + C8617) * C154074 +
            (C8583 + C8582 + C8616) * C154099 +
            (C436 * C154058 + C437 * C2875 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C2874) *
                C154110) *
               C153711 * C153747) *
              C1281 +
          (((C437 * C2874 + C436 * C2875 + C435 * C154058) * C154110 +
            (C8598 + C8599 + C8600) * C154099 +
            (C8601 + C8602 + C8603) * C154074) *
               C153711 * C153747 -
           (C7816 * C154074 + (C7791 + C7790 + C7789) * C154099 +
            (C207 * C154058 + C206 * C2875 + C205 * C2874) * C154110) *
               C153711 * C1279) *
              C1282 +
          (((C206 * C2874 + C207 * C2875 + C208 * C154058) * C154110 +
            (C8278 + C8279 + C8280) * C154099 +
            (C8281 + C8282 + C8283) * C154074) *
               C153711 * C1279 -
           (((C134 * C1518 - C135 * C1513 - C134 * C1519 + C153792 * C1528) *
                 C154058 +
             C8059 * C2875 + C7517 * C2874) *
                C154074 +
            (C1157 * C154058 + C1156 * C2875 + C1155 * C2874) * C154099 +
            (C434 * C154058 + C435 * C2875 + C436 * C2874) * C154110) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C2874 +
            C205 * C2875 + C206 * C154058) *
               C154110 +
           (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
              C153711 * C1366 -
          ((C8589 + C8588 + C8617) * C154074 +
           (C8583 + C8582 + C8616) * C154099 +
           (C436 * C154058 + C437 * C2875 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                C2874) *
               C154110) *
              C153711 * C1367 +
          (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) * C2874 +
            C438 * C2875 + C439 * C154058) *
               C154110 +
           ((C134 * C1957 - C135 * C1948 - C134 * C1958 + C153792 * C1963) *
                C2874 +
            C7519 * C2875 + C7520 * C154058) *
               C154099 +
           ((C134 * C3511 - C135 * C3507 - C134 * C3512 + C153792 * C3519) *
                C2874 +
            C7521 * C2875 + C7522 * C154058) *
               C154074) *
              C153711 * C1368 -
          (((C134 * C5034 - C135 * C5031 - C134 * C5035 + C153792 * C5040) *
                C154058 +
            (C134 * C5036 - C135 * C5032 - C134 * C5037 + C153792 * C5041) *
                C2875 +
            (C134 * C5038 - C135 * C5033 - C134 * C5039 + C153792 * C5042) *
                C2874) *
               C154074 +
           ((C134 * C4387 - C135 * C4381 - C134 * C4388 + C153792 * C4393) *
                C154058 +
            (C134 * C4385 - C135 * C4380 - C134 * C4386 + C153792 * C4392) *
                C2875 +
            (C134 * C4383 - C135 * C4379 - C134 * C4384 + C153792 * C4391) *
                C2874) *
               C154099 +
           ((C134 * C1380 - C135 * C1373 - C134 * C1381 + C153792 * C1388) *
                C154058 +
            (C134 * C1382 - C135 * C1374 - C134 * C1383 + C153792 * C1389) *
                C2875 +
            (C134 * C1384 - C135 * C1375 - C134 * C1385 + C153792 * C1390) *
                C2874) *
               C154110) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C153711 * C1279 -
           (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C153711 * C153747) *
              C1281 +
          (((C24602 + C24601 + C24600) * C154106 +
            (C24599 + C24598 + C24597) * C154087 +
            (C25149 + C25150 + C25151) * C154058) *
               C153810 * C153711 * C153747 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C153711 * C1279) *
              C1282 +
          ((C24305 * C154106 + (C24299 + C24298 + C24297) * C154087 +
            (C24300 + C24301 + C24302) * C154058) *
               C153810 * C153711 * C1279 -
           ((C24216 * C1376 - C24217 * C1371 - C24216 * C1377 +
             C154071 * C1386 + C24214 * C367 - C24215 * C346 - C24214 * C368 +
             C24207 * C382 + C24212 * C349 - C24213 * C337 - C24212 * C350 +
             C24206 * C373) *
                C154058 +
            (C25151 + C25150 + C25149) * C154087 + C25142 * C154106) *
               C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
            C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
            C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
               C154106 +
           (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
              C153810 * C153711 * C1366 -
          (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
           (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 + C154071 * C1390 +
            C24214 * C359 - C24215 * C342 - C24214 * C360 + C24207 * C378 +
            C24212 * C357 - C24213 * C341 - C24212 * C358 + C24206 * C377) *
               C154106) *
              C153810 * C153711 * C1367 +
          ((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
            C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
            C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
            C154071 * C3201) *
               C154106 +
           (C24603 + C24604 + C24605) * C154087 +
           (C24606 + C24607 + C24608) * C154058) *
              C153810 * C153711 * C1368 -
          ((C24216 * C4804 - C24217 * C4801 - C24216 * C4805 + C154071 * C4810 +
            C24214 * C3197 - C24215 * C3191 - C24214 * C3198 + C24207 * C3203 +
            C24212 * C1380 - C24213 * C1373 - C24212 * C1381 + C24206 * C1388) *
               C154058 +
           (C24216 * C4806 - C24217 * C4802 - C24216 * C4807 + C154071 * C4811 +
            C24214 * C3195 - C24215 * C3190 - C24214 * C3196 + C24207 * C3202 +
            C24212 * C1382 - C24213 * C1374 - C24212 * C1383 + C24206 * C1389) *
               C154087 +
           (C24216 * C4808 - C24217 * C4803 - C24216 * C4809 + C154071 * C4812 +
            C24214 * C3193 - C24215 * C3189 - C24214 * C3194 + C24207 * C3201 +
            C24212 * C1384 - C24213 * C1375 - C24212 * C1385 + C24206 * C1390) *
               C154106) *
              C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C153711 * C1279 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C153711 * C153747) *
              C1281 +
          ((C28428 * C355 - C28429 * C340 - C28428 * C356 + C28422 * C376 +
            C28430 * C361 - C28431 * C343 - C28430 * C362 + C28423 * C379 +
            C28432 * C1382 - C28433 * C1374 - C28432 * C1383 + C28424 * C1389 +
            C28434 * C3195 - C28435 * C3190 - C28434 * C3196 + C28425 * C3202 +
            C28436 * C4806 - C28437 * C4802 - C28436 * C4807 + C28426 * C4811) *
               C153638 * C153810 * C153711 * C153747 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C153711 * C1279) *
              C1282 +
          ((C28428 * C148 - C28429 * C138 - C28428 * C149 + C28422 * C162 +
            C28430 * C353 - C28431 * C339 - C28430 * C354 + C28423 * C375 +
            C28432 * C363 - C28433 * C344 - C28432 * C364 + C28424 * C380 +
            C28434 * C1380 - C28435 * C1373 - C28434 * C1381 + C28425 * C1388 +
            C28436 * C3197 - C28437 * C3191 - C28436 * C3198 + C28426 * C3203) *
               C153638 * C153810 * C153711 * C1279 -
           (C28436 * C4804 - C28437 * C4801 - C28436 * C4805 + C28426 * C4810 +
            C28434 * C3197 - C28435 * C3191 - C28434 * C3198 + C28425 * C3203 +
            C28432 * C1380 - C28433 * C1373 - C28432 * C1381 + C28424 * C1388 +
            C28430 * C363 - C28431 * C344 - C28430 * C364 + C28423 * C380 +
            C28428 * C353 - C28429 * C339 - C28428 * C354 + C28422 * C375) *
               C153638 * C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
           C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
           C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
           C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
           C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
              C153638 * C153810 * C153711 * C1366 -
          (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
           C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
           C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
           C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
           C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
              C153638 * C153810 * C153711 * C1367 +
          (C28428 * C359 - C28429 * C342 - C28428 * C360 + C28422 * C378 +
           C28430 * C1384 - C28431 * C1375 - C28430 * C1385 + C28423 * C1390 +
           C28432 * C3193 - C28433 * C3189 - C28432 * C3194 + C28424 * C3201 +
           C28434 * C4808 - C28435 * C4803 - C28434 * C4809 + C28425 * C4812 +
           C28436 * C28562 - C28437 * C28560 - C28436 * C28563 +
           C28426 * C28566) *
              C153638 * C153810 * C153711 * C1368 -
          (C28436 * C29317 - C28437 * C29316 - C28436 * C29318 +
           C28426 * C29319 + C28434 * C28562 - C28435 * C28560 -
           C28434 * C28563 + C28425 * C28566 + C28432 * C4808 - C28433 * C4803 -
           C28432 * C4809 + C28424 * C4812 + C28430 * C3193 - C28431 * C3189 -
           C28430 * C3194 + C28423 * C3201 + C28428 * C1384 - C28429 * C1375 -
           C28428 * C1385 + C28422 * C1390) *
              C153638 * C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C153638 * C154110 +
            (C31262 + C31263 + C31264) * C153638 * C154099 + C31276 * C154074) *
               C153711 * C1279 -
           ((C32066 + C32065 + C32064) * C153638 * C154074 +
            (C32063 + C32062 + C32061) * C153638 * C154099 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C153638 * C154110) *
               C153711 * C153747) *
              C1281 +
          (((C24602 + C24601 + C24600) * C153638 * C154110 +
            (C25719 + C25720 + C25721) * C153638 * C154099 +
            (C32067 + C32068 + C32069) * C153638 * C154074) *
               C153711 * C153747 -
           (C31261 * C154074 + (C24902 + C24903 + C24904) * C153638 * C154099 +
            (C24293 + C24292 + C24291) * C153638 * C154110) *
               C153711 * C1279) *
              C1282 +
          ((C24305 * C153638 * C154110 +
            (C24901 + C24900 + C24899) * C153638 * C154099 +
            (C24908 + C24909 + C24910) * C153638 * C154074) *
               C153711 * C1279 -
           ((C24216 * C5034 - C24217 * C5031 - C24216 * C5035 +
             C154071 * C5040 + C24214 * C3515 - C24215 * C3509 -
             C24214 * C3516 + C24207 * C3521 + C24212 * C1522 - C24213 * C1515 -
             C24212 * C1523 + C24206 * C1530) *
                C153638 * C154074 +
            (C25724 + C25723 + C25722) * C153638 * C154099 +
            C25142 * C153638 * C154110) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
            C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
            C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
               C153638 * C154110 +
           (C31262 + C31263 + C31264) * C153638 * C154099 + C31276 * C154074) *
              C153711 * C1366 -
          ((C32066 + C32065 + C32064) * C153638 * C154074 +
           (C32063 + C32062 + C32061) * C153638 * C154099 +
           (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 + C154071 * C1390 +
            C24214 * C359 - C24215 * C342 - C24214 * C360 + C24207 * C378 +
            C24212 * C357 - C24213 * C341 - C24212 * C358 + C24206 * C377) *
               C153638 * C154110) *
              C153711 * C1367 +
          ((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
            C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
            C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
            C154071 * C3201) *
               C153638 * C154110 +
           (C24212 * C1957 - C24213 * C1948 - C24212 * C1958 + C24206 * C1963 +
            C24214 * C4383 - C24215 * C4379 - C24214 * C4384 + C24207 * C4391 +
            C24216 * C5776 - C24217 * C5771 - C24216 * C5777 +
            C154071 * C5780) *
               C153638 * C154099 +
           (C24212 * C3511 - C24213 * C3507 - C24212 * C3512 + C24206 * C3519 +
            C24214 * C5038 - C24215 * C5033 - C24214 * C5039 + C24207 * C5042 +
            C24216 * C28692 - C24217 * C28690 - C24216 * C28693 +
            C154071 * C28696) *
               C153638 * C154074) *
              C153711 * C1368 -
          ((C24216 * C29443 - C24217 * C29442 - C24216 * C29444 +
            C154071 * C29445 + C24214 * C28692 - C24215 * C28690 -
            C24214 * C28693 + C24207 * C28696 + C24212 * C5038 -
            C24213 * C5033 - C24212 * C5039 + C24206 * C5042) *
               C153638 * C154074 +
           (C24216 * C29106 - C24217 * C29104 - C24216 * C29107 +
            C154071 * C29110 + C24214 * C5776 - C24215 * C5771 -
            C24214 * C5777 + C24207 * C5780 + C24212 * C4383 - C24213 * C4379 -
            C24212 * C4384 + C24206 * C4391) *
               C153638 * C154099 +
           (C24216 * C4808 - C24217 * C4803 - C24216 * C4809 + C154071 * C4812 +
            C24214 * C3193 - C24215 * C3189 - C24214 * C3194 + C24207 * C3201 +
            C24212 * C1384 - C24213 * C1375 - C24212 * C1385 + C24206 * C1390) *
               C153638 * C154110) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[340] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C2874 +
             (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
                C153810 * C2086 -
            (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
             (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
              C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
              C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                 C2874) *
                C153810 * C153775) *
               C154021 +
           (((C2877 * C1111 - C2878 * C1105 - C2877 * C1112 + C154109 * C1123 +
              C2879 * C1957 - C2880 * C1948 - C2879 * C1958 + C154097 * C1963 +
              C2881 * C4383 - C2882 * C4379 - C2881 * C4384 + C154071 * C4391) *
                 C2874 +
             (C4432 + C4433 + C4434) * C2875 +
             (C4435 + C4436 + C4437) * C154058) *
                C153810 * C153775 -
            (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C2874) *
                C153810 * C2086) *
               C153747) *
              C154013 +
          ((((C3601 + C3600 + C3599) * C2874 + (C3598 + C3597 + C3596) * C2875 +
             (C4087 + C4088 + C4089) * C154058) *
                C153810 * C153775 -
            (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
             (C2958 + C2957 + C2956) * C2874) *
                C153810 * C2086) *
               C154021 +
           (((C3283 + C3282 + C3281) * C2874 + (C3280 + C3279 + C3278) * C2875 +
             (C3846 + C3847 + C3848) * C154058) *
                C153810 * C2086 -
            ((C2881 * C4389 - C2882 * C4382 - C2881 * C4390 + C154071 * C4394 +
              C2879 * C1951 - C2880 * C1945 - C2879 * C1952 + C154097 * C1960 +
              C2877 * C1117 - C2878 * C1108 - C2877 * C1118 + C154109 * C1126) *
                 C154058 +
             (C4437 + C4436 + C4435) * C2875 +
             (C4434 + C4433 + C4432) * C2874) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                C153810 * C2086 -
            (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
             (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) *
                 C122) *
                C153810 * C153775) *
               C154021 +
           (((C134 * C1111 - C135 * C1105 - C134 * C1112 + C153792 * C1123) *
                 C122 +
             C1154 * C123 + C1155 * C124 + C1156 * C125 + C1157 * C126) *
                C153810 * C153775 -
            (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C122) *
                C153810 * C2086) *
               C153747) *
              C154013 +
          (((C666 * C122 + C665 * C123 + C664 * C124 + C663 * C125 +
             C943 * C126) *
                C153810 * C153775 -
            (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
             C205 * C122) *
                C153810 * C2086) *
               C154021 +
           ((C437 * C122 + C436 * C123 + C435 * C124 + C434 * C125 +
             C808 * C126) *
                C153810 * C2086 -
            ((C134 * C1121 - C135 * C1110 - C134 * C1122 + C153792 * C1128) *
                 C126 +
             C1157 * C125 + C1156 * C124 + C1155 * C123 + C1154 * C122) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                  C2874 +
              C205 * C2875 + C206 * C154058) *
                 C154110 +
             (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
                C2086 -
            (C10571 * C154074 + (C7768 + C7767 + C7826) * C154099 +
             (C7762 + C7761 + C7825) * C154110) *
                C153775) *
               C154021 +
           (((C8616 + C8582 + C8583) * C154110 +
             (C8617 + C8588 + C8589) * C154099 +
             (C9223 + C9216 + C9217) * C154074) *
                C153775 -
            (C9220 * C154074 + (C8583 + C8582 + C8616) * C154099 +
             (C436 * C154058 + C437 * C2875 +
              (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                  C2874) *
                 C154110) *
                C2086) *
               C153747) *
              C154013 +
          ((((C7789 + C7790 + C7791) * C154110 +
             (C7792 + C7793 + C7794) * C154099 +
             (C7830 + C7831 + C7832) * C154074) *
                C153775 -
            (C7816 * C154074 + (C7791 + C7790 + C7789) * C154099 +
             (C207 * C154058 + C206 * C2875 + C205 * C2874) * C154110) *
                C2086) *
               C154021 +
           (((C437 * C2874 + C436 * C2875 + C435 * C154058) * C154110 +
             (C8598 + C8599 + C8600) * C154099 +
             (C8601 + C8602 + C8603) * C154074) *
                C2086 -
            (((C134 * C8574 - C135 * C8573 - C134 * C8575 + C153792 * C8576) *
                  C154058 +
              C8615 * C2875 + C8614 * C2874) *
                 C154074 +
             (C8603 + C8602 + C8601) * C154099 +
             (C8600 + C8599 + C8598) * C154110) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154106 +
             (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
                C153810 * C2086 -
            (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
             (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
              C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
              C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
              C24212 * C587 + C24206 * C606) *
                 C154106) *
                C153810 * C153775) *
               C154021 +
           (((C24212 * C1111 - C24213 * C1105 - C24212 * C1112 +
              C24206 * C1123 + C24214 * C1957 - C24215 * C1948 -
              C24214 * C1958 + C24207 * C1963 + C24216 * C4383 -
              C24217 * C4379 - C24216 * C4384 + C154071 * C4391) *
                 C154106 +
             (C25719 + C25720 + C25721) * C154087 +
             (C25722 + C25723 + C25724) * C154058) *
                C153810 * C153775 -
            (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C154106) *
                C153810 * C2086) *
               C153747) *
              C154013 +
          ((((C24904 + C24903 + C24902) * C154106 +
             (C24901 + C24900 + C24899) * C154087 +
             (C25390 + C25391 + C25392) * C154058) *
                C153810 * C153775 -
            (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
             (C24293 + C24292 + C24291) * C154106) *
                C153810 * C2086) *
               C154021 +
           (((C24602 + C24601 + C24600) * C154106 +
             (C24599 + C24598 + C24597) * C154087 +
             (C25149 + C25150 + C25151) * C154058) *
                C153810 * C2086 -
            ((C24216 * C4389 - C24217 * C4382 - C24216 * C4390 +
              C154071 * C4394 + C24214 * C1951 - C24215 * C1945 -
              C24214 * C1952 + C24207 * C1960 + C24212 * C1117 -
              C24213 * C1108 - C24212 * C1118 + C24206 * C1126) *
                 C154058 +
             (C25724 + C25723 + C25722) * C154087 +
             (C25721 + C25720 + C25719) * C154106) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
             C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
             C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
             C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
             C28436 * C3193 - C28437 * C3189 - C28436 * C3194 +
             C28426 * C3201) *
                C153638 * C153810 * C2086 -
            (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
             C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
             C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
             C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
             C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
                C153638 * C153810 * C153775) *
               C154021 +
           ((C28428 * C1111 - C28429 * C1105 - C28428 * C1112 + C28422 * C1123 +
             C28430 * C1957 - C28431 * C1948 - C28430 * C1958 + C28423 * C1963 +
             C28432 * C4383 - C28433 * C4379 - C28432 * C4384 + C28424 * C4391 +
             C28434 * C5776 - C28435 * C5771 - C28434 * C5777 + C28425 * C5780 +
             C28436 * C29106 - C28437 * C29104 - C28436 * C29107 +
             C28426 * C29110) *
                C153638 * C153810 * C153775 -
            (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
             C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
             C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
             C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
             C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
                C153638 * C153810 * C2086) *
               C153747) *
              C154013 +
          (((C28428 * C584 - C28429 * C569 - C28428 * C585 + C28422 * C605 +
             C28430 * C1113 - C28431 * C1106 - C28430 * C1114 + C28423 * C1124 +
             C28432 * C1955 - C28433 * C1947 - C28432 * C1956 + C28424 * C1962 +
             C28434 * C4385 - C28435 * C4380 - C28434 * C4386 + C28425 * C4392 +
             C28436 * C5774 - C28437 * C5770 - C28436 * C5775 +
             C28426 * C5779) *
                C153638 * C153810 * C153775 -
            (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
             C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
             C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
             C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
             C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
                C153638 * C153810 * C2086) *
               C154021 +
           ((C28428 * C355 - C28429 * C340 - C28428 * C356 + C28422 * C376 +
             C28430 * C361 - C28431 * C343 - C28430 * C362 + C28423 * C379 +
             C28432 * C1382 - C28433 * C1374 - C28432 * C1383 + C28424 * C1389 +
             C28434 * C3195 - C28435 * C3190 - C28434 * C3196 + C28425 * C3202 +
             C28436 * C4806 - C28437 * C4802 - C28436 * C4807 +
             C28426 * C4811) *
                C153638 * C153810 * C2086 -
            (C28436 * C29108 - C28437 * C29105 - C28436 * C29109 +
             C28426 * C29111 + C28434 * C5774 - C28435 * C5770 -
             C28434 * C5775 + C28425 * C5779 + C28432 * C4385 - C28433 * C4380 -
             C28432 * C4386 + C28424 * C4392 + C28430 * C1955 - C28431 * C1947 -
             C28430 * C1956 + C28423 * C1962 + C28428 * C1113 - C28429 * C1106 -
             C28428 * C1114 + C28422 * C1124) *
                C153638 * C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C153638 * C154110 +
             (C31262 + C31263 + C31264) * C153638 * C154099 +
             C31276 * C154074) *
                C2086 -
            (C34055 * C154074 + (C31267 + C31266 + C31265) * C153638 * C154099 +
             (C31264 + C31263 + C31262) * C153638 * C154110) *
                C153775) *
               C154021 +
           (((C32061 + C32062 + C32063) * C153638 * C154110 +
             (C32064 + C32065 + C32066) * C153638 * C154099 +
             (C32677 + C32678 + C32679) * C153638 * C154074) *
                C153775 -
            (C32676 * C154074 + (C32063 + C32062 + C32061) * C153638 * C154099 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C153638 * C154110) *
                C2086) *
               C153747) *
              C154013 +
          ((((C24904 + C24903 + C24902) * C153638 * C154110 +
             (C24905 + C24906 + C24907) * C153638 * C154099 +
             (C31271 + C31272 + C31273) * C153638 * C154074) *
                C153775 -
            (C31261 * C154074 + (C24902 + C24903 + C24904) * C153638 * C154099 +
             (C24293 + C24292 + C24291) * C153638 * C154110) *
                C2086) *
               C154021 +
           (((C24602 + C24601 + C24600) * C153638 * C154110 +
             (C25719 + C25720 + C25721) * C153638 * C154099 +
             (C32067 + C32068 + C32069) * C153638 * C154074) *
                C2086 -
            ((C24216 * C32003 - C24217 * C32002 - C24216 * C32004 +
              C154071 * C32005 + C24214 * C6373 - C24215 * C6365 -
              C24214 * C6374 + C24207 * C6383 + C24212 * C6375 -
              C24213 * C6366 - C24212 * C6376 + C24206 * C6384) *
                 C153638 * C154074 +
             (C32069 + C32068 + C32067) * C153638 * C154099 +
             (C25721 + C25720 + C25719) * C153638 * C154110) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[341] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C154094 -
           (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
            (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
             C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
             C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                C2874) *
               C153810 * C154095 +
           ((C2877 * C588 - C2878 * C571 - C2877 * C589 + C154109 * C607 +
             C2879 * C1526 - C2880 * C1517 - C2879 * C1527 + C154097 * C1532 +
             C2881 * C3511 - C2882 * C3507 - C2881 * C3512 + C154071 * C3519) *
                C2874 +
            (C3602 + C3603 + C3604) * C2875 +
            (C3605 + C3606 + C3607) * C154058) *
               C153810 * C2602) *
              C154021 +
          (((C2877 * C1111 - C2878 * C1105 - C2877 * C1112 + C154109 * C1123 +
             C2879 * C1957 - C2880 * C1948 - C2879 * C1958 + C154097 * C1963 +
             C2881 * C4383 - C2882 * C4379 - C2881 * C4384 + C154071 * C4391) *
                C2874 +
            (C4432 + C4433 + C4434) * C2875 +
            (C4435 + C4436 + C4437) * C154058) *
               C153810 * C154095 -
           (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C2874) *
               C153810 * C154094 -
           ((C2881 * C5034 - C2882 * C5031 - C2881 * C5035 + C154071 * C5040 +
             C2879 * C3515 - C2880 * C3509 - C2879 * C3516 + C154097 * C3521 +
             C2877 * C1522 - C2878 * C1515 - C2877 * C1523 + C154109 * C1530) *
                C154058 +
            (C2881 * C5036 - C2882 * C5032 - C2881 * C5037 + C154071 * C5041 +
             C2879 * C3513 - C2880 * C3508 - C2879 * C3514 + C154097 * C3520 +
             C2877 * C1524 - C2878 * C1516 - C2877 * C1525 + C154109 * C1531) *
                C2875 +
            (C2881 * C5038 - C2882 * C5033 - C2881 * C5039 + C154071 * C5042 +
             C2879 * C3511 - C2880 * C3507 - C2879 * C3512 + C154097 * C3519 +
             C2877 * C1526 - C2878 * C1517 - C2877 * C1527 + C154109 * C1532) *
                C2874) *
               C153810 * C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C154094 -
           (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
            (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) * C122) *
               C153810 * C154095 +
           ((C134 * C588 - C135 * C571 - C134 * C589 + C153792 * C607) * C122 +
            C667 * C123 + C668 * C124 + C669 * C125 + C670 * C126) *
               C153810 * C2602) *
              C154021 +
          (((C134 * C1111 - C135 * C1105 - C134 * C1112 + C153792 * C1123) *
                C122 +
            C1154 * C123 + C1155 * C124 + C1156 * C125 + C1157 * C126) *
               C153810 * C154095 -
           (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) * C122) *
               C153810 * C154094 -
           ((C134 * C1518 - C135 * C1513 - C134 * C1519 + C153792 * C1528) *
                C126 +
            (C134 * C1520 - C135 * C1514 - C134 * C1521 + C153792 * C1529) *
                C125 +
            (C134 * C1522 - C135 * C1515 - C134 * C1523 + C153792 * C1530) *
                C124 +
            (C134 * C1524 - C135 * C1516 - C134 * C1525 + C153792 * C1531) *
                C123 +
            (C134 * C1526 - C135 * C1517 - C134 * C1527 + C153792 * C1532) *
                C122) *
               C153810 * C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C2874 +
             C205 * C2875 + C206 * C154058) *
                C154110 +
            (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
               C154094 -
           (C10571 * C154074 + (C7768 + C7767 + C7826) * C154099 +
            (C7762 + C7761 + C7825) * C154110) *
               C154095 +
           (C7834 * C154110 + (C7829 + C7828 + C7827) * C154099 +
            (C10575 + C10569 + C10570) * C154074) *
               C2602) *
              C154021 +
          (((C8616 + C8582 + C8583) * C154110 +
            (C8617 + C8588 + C8589) * C154099 +
            (C9223 + C9216 + C9217) * C154074) *
               C154095 -
           (C9220 * C154074 + (C8583 + C8582 + C8616) * C154099 +
            (C436 * C154058 + C437 * C2875 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C2874) *
                C154110) *
               C154094 -
           (((C134 * C9202 - C135 * C9199 - C134 * C9203 + C153792 * C9208) *
                 C154058 +
             (C134 * C9204 - C135 * C9200 - C134 * C9205 + C153792 * C9209) *
                 C2875 +
             (C134 * C9206 - C135 * C9201 - C134 * C9207 + C153792 * C9210) *
                 C2874) *
                C154074 +
            (C9217 + C9216 + C9223) * C154099 + C9220 * C154110) *
               C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C154094 -
           (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C154095 +
           ((C24212 * C588 - C24213 * C571 - C24212 * C589 + C24206 * C607 +
             C24214 * C1526 - C24215 * C1517 - C24214 * C1527 + C24207 * C1532 +
             C24216 * C3511 - C24217 * C3507 - C24216 * C3512 +
             C154071 * C3519) *
                C154106 +
            (C24905 + C24906 + C24907) * C154087 +
            (C24908 + C24909 + C24910) * C154058) *
               C153810 * C2602) *
              C154021 +
          (((C24212 * C1111 - C24213 * C1105 - C24212 * C1112 + C24206 * C1123 +
             C24214 * C1957 - C24215 * C1948 - C24214 * C1958 + C24207 * C1963 +
             C24216 * C4383 - C24217 * C4379 - C24216 * C4384 +
             C154071 * C4391) *
                C154106 +
            (C25719 + C25720 + C25721) * C154087 +
            (C25722 + C25723 + C25724) * C154058) *
               C153810 * C154095 -
           (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C154094 -
           ((C24216 * C5034 - C24217 * C5031 - C24216 * C5035 +
             C154071 * C5040 + C24214 * C3515 - C24215 * C3509 -
             C24214 * C3516 + C24207 * C3521 + C24212 * C1522 - C24213 * C1515 -
             C24212 * C1523 + C24206 * C1530) *
                C154058 +
            (C24216 * C5036 - C24217 * C5032 - C24216 * C5037 +
             C154071 * C5041 + C24214 * C3513 - C24215 * C3508 -
             C24214 * C3514 + C24207 * C3520 + C24212 * C1524 - C24213 * C1516 -
             C24212 * C1525 + C24206 * C1531) *
                C154087 +
            (C24216 * C5038 - C24217 * C5033 - C24216 * C5039 +
             C154071 * C5042 + C24214 * C3511 - C24215 * C3507 -
             C24214 * C3512 + C24207 * C3519 + C24212 * C1526 - C24213 * C1517 -
             C24212 * C1527 + C24206 * C1532) *
                C154106) *
               C153810 * C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C154094 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C154095 +
           (C28428 * C588 - C28429 * C571 - C28428 * C589 + C28422 * C607 +
            C28430 * C1526 - C28431 * C1517 - C28430 * C1527 + C28423 * C1532 +
            C28432 * C3511 - C28433 * C3507 - C28432 * C3512 + C28424 * C3519 +
            C28434 * C5038 - C28435 * C5033 - C28434 * C5039 + C28425 * C5042 +
            C28436 * C28692 - C28437 * C28690 - C28436 * C28693 +
            C28426 * C28696) *
               C153638 * C153810 * C2602) *
              C154021 +
          ((C28428 * C1111 - C28429 * C1105 - C28428 * C1112 + C28422 * C1123 +
            C28430 * C1957 - C28431 * C1948 - C28430 * C1958 + C28423 * C1963 +
            C28432 * C4383 - C28433 * C4379 - C28432 * C4384 + C28424 * C4391 +
            C28434 * C5776 - C28435 * C5771 - C28434 * C5777 + C28425 * C5780 +
            C28436 * C29106 - C28437 * C29104 - C28436 * C29107 +
            C28426 * C29110) *
               C153638 * C153810 * C154095 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C154094 -
           (C28436 * C29443 - C28437 * C29442 - C28436 * C29444 +
            C28426 * C29445 + C28434 * C28692 - C28435 * C28690 -
            C28434 * C28693 + C28425 * C28696 + C28432 * C5038 -
            C28433 * C5033 - C28432 * C5039 + C28424 * C5042 + C28430 * C3511 -
            C28431 * C3507 - C28430 * C3512 + C28423 * C3519 + C28428 * C1526 -
            C28429 * C1517 - C28428 * C1527 + C28422 * C1532) *
               C153638 * C153810 * C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C153638 * C154110 +
            (C31262 + C31263 + C31264) * C153638 * C154099 + C31276 * C154074) *
               C154094 -
           (C34055 * C154074 + (C31267 + C31266 + C31265) * C153638 * C154099 +
            (C31264 + C31263 + C31262) * C153638 * C154110) *
               C154095 +
           (C31276 * C154110 + (C31270 + C31269 + C31268) * C153638 * C154099 +
            (C34059 + C34060 + C34061) * C153638 * C154074) *
               C2602) *
              C154021 +
          (((C32061 + C32062 + C32063) * C153638 * C154110 +
            (C32064 + C32065 + C32066) * C153638 * C154099 +
            (C32677 + C32678 + C32679) * C153638 * C154074) *
               C154095 -
           (C32676 * C154074 + (C32063 + C32062 + C32061) * C153638 * C154099 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C153638 * C154110) *
               C154094 -
           ((C24216 * C32652 - C24217 * C32651 - C24216 * C32653 +
             C154071 * C32654 + C24214 * C31180 - C24215 * C31178 -
             C24214 * C31181 + C24207 * C31184 + C24212 * C9206 -
             C24213 * C9201 - C24212 * C9207 + C24206 * C9210) *
                C153638 * C154074 +
            (C32679 + C32678 + C32677) * C153638 * C154099 + C32676 * C154110) *
               C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[342] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                    C122 +
                C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                   C153810 * C2086 -
               (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
                (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) *
                    C122) *
                   C153810 * C153775) *
                  C153695 * C1281 +
              ((C666 * C122 + C665 * C123 + C664 * C124 + C663 * C125 +
                C943 * C126) *
                   C153810 * C153775 -
               (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
                C205 * C122) *
                   C153810 * C2086) *
                  C153695 * C1282 +
              ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125 +
                C210 * C126) *
                   C153810 * C2086 -
               ((C134 * C933 - C135 * C932 - C134 * C934 + C153792 * C935) *
                    C126 +
                C943 * C125 + C663 * C124 + C664 * C123 + C665 * C122) *
                   C153810 * C153775) *
                  C153695 * C1283) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                    C122 +
                C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                   C153810 * C2086 -
               (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
                (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) *
                    C122) *
                   C153810 * C153775) *
                  C332 +
              (((C134 * C1111 - C135 * C1105 - C134 * C1112 + C153792 * C1123) *
                    C122 +
                C1154 * C123 + C1155 * C124 + C1156 * C125 + C1157 * C126) *
                   C153810 * C153775 -
               (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
                (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                    C122) *
                   C153810 * C2086) *
                  C333 +
              (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                    C122 +
                C438 * C123 + C439 * C124 + C440 * C125 + C441 * C126) *
                   C153810 * C2086 -
               ((C134 * C1949 - C135 * C1944 - C134 * C1950 + C153792 * C1959) *
                    C126 +
                (C134 * C1951 - C135 * C1945 - C134 * C1952 + C153792 * C1960) *
                    C125 +
                (C134 * C1953 - C135 * C1946 - C134 * C1954 + C153792 * C1961) *
                    C124 +
                (C134 * C1955 - C135 * C1947 - C134 * C1956 + C153792 * C1962) *
                    C123 +
                (C134 * C1957 - C135 * C1948 - C134 * C1958 + C153792 * C1963) *
                    C122) *
                   C153810 * C153775) *
                  C334) *
             C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
           C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
              C153810 * C2292 -
          (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
           (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) * C122) *
              C153810 * C2293 +
          ((C134 * C588 - C135 * C571 - C134 * C589 + C153792 * C607) * C122 +
           C667 * C123 + C668 * C124 + C669 * C125 + C670 * C126) *
              C153810 * C2294 -
          ((C134 * C2301 - C135 * C2296 - C134 * C2302 + C153792 * C2311) *
               C126 +
           (C134 * C2303 - C135 * C2297 - C134 * C2304 + C153792 * C2312) *
               C125 +
           (C134 * C2305 - C135 * C2298 - C134 * C2306 + C153792 * C2313) *
               C124 +
           (C134 * C2307 - C135 * C2299 - C134 * C2308 + C153792 * C2314) *
               C123 +
           (C134 * C2309 - C135 * C2300 - C134 * C2310 + C153792 * C2315) *
               C122) *
              C153810 * C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C2086 -
           (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
            (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
             C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
             C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                C2874) *
               C153810 * C153775) *
              C153695 * C1281 +
          (((C3601 + C3600 + C3599) * C2874 + (C3598 + C3597 + C3596) * C2875 +
            (C4087 + C4088 + C4089) * C154058) *
               C153810 * C153775 -
           (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
            (C2958 + C2957 + C2956) * C2874) *
               C153810 * C2086) *
              C153695 * C1282 +
          ((C2970 * C2874 + (C2964 + C2963 + C2962) * C2875 +
            (C2965 + C2966 + C2967) * C154058) *
               C153810 * C2086 -
           ((C2881 * C1949 - C2882 * C1944 - C2881 * C1950 + C154071 * C1959 +
             C2879 * C1119 - C2880 * C1109 - C2879 * C1120 + C154097 * C1127 +
             C2877 * C578 - C2878 * C566 - C2877 * C579 + C154109 * C602) *
                C154058 +
            (C4089 + C4088 + C4087) * C2875 + C4080 * C2874) *
               C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C2086 -
           (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
            (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
             C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
             C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                C2874) *
               C153810 * C153775) *
              C332 +
          (((C2877 * C1111 - C2878 * C1105 - C2877 * C1112 + C154109 * C1123 +
             C2879 * C1957 - C2880 * C1948 - C2879 * C1958 + C154097 * C1963 +
             C2881 * C4383 - C2882 * C4379 - C2881 * C4384 + C154071 * C4391) *
                C2874 +
            (C4432 + C4433 + C4434) * C2875 +
            (C4435 + C4436 + C4437) * C154058) *
               C153810 * C153775 -
           (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C2874) *
               C153810 * C2086) *
              C333 +
          (((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
             C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
             C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                C2874 +
            (C3284 + C3285 + C3286) * C2875 +
            (C3287 + C3288 + C3289) * C154058) *
               C153810 * C2086 -
           ((C2881 * C5772 - C2882 * C5769 - C2881 * C5773 + C154071 * C5778 +
             C2879 * C4387 - C2880 * C4381 - C2879 * C4388 + C154097 * C4393 +
             C2877 * C1953 - C2878 * C1946 - C2877 * C1954 + C154109 * C1961) *
                C154058 +
            (C2881 * C5774 - C2882 * C5770 - C2881 * C5775 + C154071 * C5779 +
             C2879 * C4385 - C2880 * C4380 - C2879 * C4386 + C154097 * C4392 +
             C2877 * C1955 - C2878 * C1947 - C2877 * C1956 + C154109 * C1962) *
                C2875 +
            (C2881 * C5776 - C2882 * C5771 - C2881 * C5777 + C154071 * C5780 +
             C2879 * C4383 - C2880 * C4379 - C2879 * C4384 + C154097 * C4391 +
             C2877 * C1957 - C2878 * C1948 - C2877 * C1958 + C154109 * C1963) *
                C2874) *
               C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
            C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
            C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
               C2874 +
           (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
              C153810 * C2292 -
          (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
           (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
            C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
            C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
               C2874) *
              C153810 * C2293 +
          ((C2877 * C588 - C2878 * C571 - C2877 * C589 + C154109 * C607 +
            C2879 * C1526 - C2880 * C1517 - C2879 * C1527 + C154097 * C1532 +
            C2881 * C3511 - C2882 * C3507 - C2881 * C3512 + C154071 * C3519) *
               C2874 +
           (C3602 + C3603 + C3604) * C2875 +
           (C3605 + C3606 + C3607) * C154058) *
              C153810 * C2294 -
          ((C2881 * C6369 - C2882 * C6363 - C2881 * C6370 + C154071 * C6381 +
            C2879 * C6371 - C2880 * C6364 - C2879 * C6372 + C154097 * C6382 +
            C2877 * C2305 - C2878 * C2298 - C2877 * C2306 + C154109 * C2313) *
               C154058 +
           (C2881 * C6373 - C2882 * C6365 - C2881 * C6374 + C154071 * C6383 +
            C2879 * C6375 - C2880 * C6366 - C2879 * C6376 + C154097 * C6384 +
            C2877 * C2307 - C2878 * C2299 - C2877 * C2308 + C154109 * C2314) *
               C2875 +
           (C2881 * C6377 - C2882 * C6367 - C2881 * C6378 + C154071 * C6385 +
            C2879 * C6379 - C2880 * C6368 - C2879 * C6380 + C154097 * C6386 +
            C2877 * C2309 - C2878 * C2300 - C2877 * C2310 + C154109 * C2315) *
               C2874) *
              C153810 * C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C2874 +
             C205 * C2875 + C206 * C154058) *
                C154110 +
            (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
               C2086 -
           ((C7827 + C7828 + C7829) * C154074 +
            (C7768 + C7767 + C7826) * C154099 +
            (C7762 + C7761 + C7825) * C154110) *
               C153775) *
              C153695 * C1281 +
          (((C7789 + C7790 + C7791) * C154110 +
            (C7792 + C7793 + C7794) * C154099 +
            (C7830 + C7831 + C7832) * C154074) *
               C153775 -
           (C7816 * C154074 + (C7791 + C7790 + C7789) * C154099 +
            (C207 * C154058 + C206 * C2875 + C205 * C2874) * C154110) *
               C2086) *
              C153695 * C1282 +
          (((C206 * C2874 + C207 * C2875 + C208 * C154058) * C154110 +
            (C8278 + C8279 + C8280) * C154099 +
            (C8281 + C8282 + C8283) * C154074) *
               C2086 -
           (((C134 * C2301 - C135 * C2296 - C134 * C2302 + C153792 * C2311) *
                 C154058 +
             C7824 * C2875 + C7819 * C2874) *
                C154074 +
            (C8283 + C8282 + C8281) * C154099 +
            (C8280 + C8279 + C8278) * C154110) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C2874 +
             C205 * C2875 + C206 * C154058) *
                C154110 +
            (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
               C2086 -
           ((C7827 + C7828 + C7829) * C154074 +
            (C7768 + C7767 + C7826) * C154099 +
            (C7762 + C7761 + C7825) * C154110) *
               C153775) *
              C332 +
          (((C8616 + C8582 + C8583) * C154110 +
            (C8617 + C8588 + C8589) * C154099 +
            (C9223 + C9216 + C9217) * C154074) *
               C153775 -
           (C9220 * C154074 + (C8583 + C8582 + C8616) * C154099 +
            (C436 * C154058 + C437 * C2875 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C2874) *
                C154110) *
               C2086) *
              C333 +
          ((((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C2874 +
             C438 * C2875 + C439 * C154058) *
                C154110 +
            (C9968 + C9954 + C9955) * C154099 +
            (C9969 + C9960 + C9961) * C154074) *
               C2086 -
           (((C134 * C6369 - C135 * C6363 - C134 * C6370 + C153792 * C6381) *
                 C154058 +
             (C134 * C6373 - C135 * C6365 - C134 * C6374 + C153792 * C6383) *
                 C2875 +
             (C134 * C6377 - C135 * C6367 - C134 * C6378 + C153792 * C6385) *
                 C2874) *
                C154074 +
            (C9961 + C9960 + C9969) * C154099 +
            (C9955 + C9954 + C9968) * C154110) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C2874 +
            C205 * C2875 + C206 * C154058) *
               C154110 +
           (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
              C2292 -
          (C10571 * C154074 + (C7768 + C7767 + C7826) * C154099 +
           (C7762 + C7761 + C7825) * C154110) *
              C2293 +
          (C7834 * C154110 + (C7829 + C7828 + C7827) * C154099 +
           (C10575 + C10569 + C10570) * C154074) *
              C2294 -
          (((C134 * C10554 - C135 * C10551 - C134 * C10555 + C153792 * C10560) *
                C154058 +
            (C134 * C10556 - C135 * C10552 - C134 * C10557 + C153792 * C10561) *
                C2875 +
            (C134 * C10558 - C135 * C10553 - C134 * C10559 + C153792 * C10562) *
                C2874) *
               C154074 +
           (C10570 + C10569 + C10575) * C154099 + C10571 * C154110) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C2086 -
           (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C153775) *
              C153695 * C1281 +
          (((C24904 + C24903 + C24902) * C154106 +
            (C24901 + C24900 + C24899) * C154087 +
            (C25390 + C25391 + C25392) * C154058) *
               C153810 * C153775 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C2086) *
              C153695 * C1282 +
          ((C24305 * C154106 + (C24299 + C24298 + C24297) * C154087 +
            (C24300 + C24301 + C24302) * C154058) *
               C153810 * C2086 -
           ((C24216 * C1949 - C24217 * C1944 - C24216 * C1950 +
             C154071 * C1959 + C24214 * C1119 - C24215 * C1109 -
             C24214 * C1120 + C24207 * C1127 + C24212 * C578 - C24213 * C566 -
             C24212 * C579 + C24206 * C602) *
                C154058 +
            (C25392 + C25391 + C25390) * C154087 + C25383 * C154106) *
               C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C2086 -
           (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C153775) *
              C332 +
          (((C24212 * C1111 - C24213 * C1105 - C24212 * C1112 + C24206 * C1123 +
             C24214 * C1957 - C24215 * C1948 - C24214 * C1958 + C24207 * C1963 +
             C24216 * C4383 - C24217 * C4379 - C24216 * C4384 +
             C154071 * C4391) *
                C154106 +
            (C25719 + C25720 + C25721) * C154087 +
            (C25722 + C25723 + C25724) * C154058) *
               C153810 * C153775 -
           (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C2086) *
              C333 +
          (((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C154106 +
            (C24603 + C24604 + C24605) * C154087 +
            (C24606 + C24607 + C24608) * C154058) *
               C153810 * C2086 -
           ((C24216 * C5772 - C24217 * C5769 - C24216 * C5773 +
             C154071 * C5778 + C24214 * C4387 - C24215 * C4381 -
             C24214 * C4388 + C24207 * C4393 + C24212 * C1953 - C24213 * C1946 -
             C24212 * C1954 + C24206 * C1961) *
                C154058 +
            (C24216 * C5774 - C24217 * C5770 - C24216 * C5775 +
             C154071 * C5779 + C24214 * C4385 - C24215 * C4380 -
             C24214 * C4386 + C24207 * C4392 + C24212 * C1955 - C24213 * C1947 -
             C24212 * C1956 + C24206 * C1962) *
                C154087 +
            (C24216 * C5776 - C24217 * C5771 - C24216 * C5777 +
             C154071 * C5780 + C24214 * C4383 - C24215 * C4379 -
             C24214 * C4384 + C24207 * C4391 + C24212 * C1957 - C24213 * C1948 -
             C24212 * C1958 + C24206 * C1963) *
                C154106) *
               C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
            C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
            C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
               C154106 +
           (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
              C153810 * C2292 -
          (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
           (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 + C154071 * C1963 +
            C24214 * C1111 - C24215 * C1105 - C24214 * C1112 + C24207 * C1123 +
            C24212 * C586 - C24213 * C570 - C24212 * C587 + C24206 * C606) *
               C154106) *
              C153810 * C2293 +
          ((C24212 * C588 - C24213 * C571 - C24212 * C589 + C24206 * C607 +
            C24214 * C1526 - C24215 * C1517 - C24214 * C1527 + C24207 * C1532 +
            C24216 * C3511 - C24217 * C3507 - C24216 * C3512 +
            C154071 * C3519) *
               C154106 +
           (C24905 + C24906 + C24907) * C154087 +
           (C24908 + C24909 + C24910) * C154058) *
              C153810 * C2294 -
          ((C24216 * C6369 - C24217 * C6363 - C24216 * C6370 + C154071 * C6381 +
            C24214 * C6371 - C24215 * C6364 - C24214 * C6372 + C24207 * C6382 +
            C24212 * C2305 - C24213 * C2298 - C24212 * C2306 + C24206 * C2313) *
               C154058 +
           (C24216 * C6373 - C24217 * C6365 - C24216 * C6374 + C154071 * C6383 +
            C24214 * C6375 - C24215 * C6366 - C24214 * C6376 + C24207 * C6384 +
            C24212 * C2307 - C24213 * C2299 - C24212 * C2308 + C24206 * C2314) *
               C154087 +
           (C24216 * C6377 - C24217 * C6367 - C24216 * C6378 + C154071 * C6385 +
            C24214 * C6379 - C24215 * C6368 - C24214 * C6380 + C24207 * C6386 +
            C24212 * C2309 - C24213 * C2300 - C24212 * C2310 + C24206 * C2315) *
               C154106) *
              C153810 * C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C2086 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C153775) *
              C153695 * C1281 +
          ((C28428 * C584 - C28429 * C569 - C28428 * C585 + C28422 * C605 +
            C28430 * C1113 - C28431 * C1106 - C28430 * C1114 + C28423 * C1124 +
            C28432 * C1955 - C28433 * C1947 - C28432 * C1956 + C28424 * C1962 +
            C28434 * C4385 - C28435 * C4380 - C28434 * C4386 + C28425 * C4392 +
            C28436 * C5774 - C28437 * C5770 - C28436 * C5775 + C28426 * C5779) *
               C153638 * C153810 * C153775 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C2086) *
              C153695 * C1282 +
          ((C28428 * C148 - C28429 * C138 - C28428 * C149 + C28422 * C162 +
            C28430 * C353 - C28431 * C339 - C28430 * C354 + C28423 * C375 +
            C28432 * C363 - C28433 * C344 - C28432 * C364 + C28424 * C380 +
            C28434 * C1380 - C28435 * C1373 - C28434 * C1381 + C28425 * C1388 +
            C28436 * C3197 - C28437 * C3191 - C28436 * C3198 + C28426 * C3203) *
               C153638 * C153810 * C2086 -
           (C28436 * C5772 - C28437 * C5769 - C28436 * C5773 + C28426 * C5778 +
            C28434 * C4387 - C28435 * C4381 - C28434 * C4388 + C28425 * C4393 +
            C28432 * C1953 - C28433 * C1946 - C28432 * C1954 + C28424 * C1961 +
            C28430 * C1115 - C28431 * C1107 - C28430 * C1116 + C28423 * C1125 +
            C28428 * C582 - C28429 * C568 - C28428 * C583 + C28422 * C604) *
               C153638 * C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C2086 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C153775) *
              C332 +
          ((C28428 * C1111 - C28429 * C1105 - C28428 * C1112 + C28422 * C1123 +
            C28430 * C1957 - C28431 * C1948 - C28430 * C1958 + C28423 * C1963 +
            C28432 * C4383 - C28433 * C4379 - C28432 * C4384 + C28424 * C4391 +
            C28434 * C5776 - C28435 * C5771 - C28434 * C5777 + C28425 * C5780 +
            C28436 * C29106 - C28437 * C29104 - C28436 * C29107 +
            C28426 * C29110) *
               C153638 * C153810 * C153775 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C2086) *
              C333 +
          ((C28428 * C359 - C28429 * C342 - C28428 * C360 + C28422 * C378 +
            C28430 * C1384 - C28431 * C1375 - C28430 * C1385 + C28423 * C1390 +
            C28432 * C3193 - C28433 * C3189 - C28432 * C3194 + C28424 * C3201 +
            C28434 * C4808 - C28435 * C4803 - C28434 * C4809 + C28425 * C4812 +
            C28436 * C28562 - C28437 * C28560 - C28436 * C28563 +
            C28426 * C28566) *
               C153638 * C153810 * C2086 -
           (C28436 * C29853 - C28437 * C29852 - C28436 * C29854 +
            C28426 * C29855 + C28434 * C29106 - C28435 * C29104 -
            C28434 * C29107 + C28425 * C29110 + C28432 * C5776 -
            C28433 * C5771 - C28432 * C5777 + C28424 * C5780 + C28430 * C4383 -
            C28431 * C4379 - C28430 * C4384 + C28423 * C4391 + C28428 * C1957 -
            C28429 * C1948 - C28428 * C1958 + C28422 * C1963) *
               C153638 * C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
           C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
           C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
           C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
           C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
              C153638 * C153810 * C2292 -
          (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
           C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
           C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
           C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
           C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
              C153638 * C153810 * C2293 +
          (C28428 * C588 - C28429 * C571 - C28428 * C589 + C28422 * C607 +
           C28430 * C1526 - C28431 * C1517 - C28430 * C1527 + C28423 * C1532 +
           C28432 * C3511 - C28433 * C3507 - C28432 * C3512 + C28424 * C3519 +
           C28434 * C5038 - C28435 * C5033 - C28434 * C5039 + C28425 * C5042 +
           C28436 * C28692 - C28437 * C28690 - C28436 * C28693 +
           C28426 * C28696) *
              C153638 * C153810 * C2294 -
          (C28436 * C30184 - C28437 * C30182 - C28436 * C30185 +
           C28426 * C30188 + C28434 * C30186 - C28435 * C30183 -
           C28434 * C30187 + C28425 * C30189 + C28432 * C6377 - C28433 * C6367 -
           C28432 * C6378 + C28424 * C6385 + C28430 * C6379 - C28431 * C6368 -
           C28430 * C6380 + C28423 * C6386 + C28428 * C2309 - C28429 * C2300 -
           C28428 * C2310 + C28422 * C2315) *
              C153638 * C153810 * C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C153638 * C154110 +
            (C31262 + C31263 + C31264) * C153638 * C154099 + C31276 * C154074) *
               C2086 -
           ((C31268 + C31269 + C31270) * C153638 * C154074 +
            (C31267 + C31266 + C31265) * C153638 * C154099 +
            (C31264 + C31263 + C31262) * C153638 * C154110) *
               C153775) *
              C153695 * C1281 +
          (((C24904 + C24903 + C24902) * C153638 * C154110 +
            (C24905 + C24906 + C24907) * C153638 * C154099 +
            (C31271 + C31272 + C31273) * C153638 * C154074) *
               C153775 -
           (C31261 * C154074 + (C24902 + C24903 + C24904) * C153638 * C154099 +
            (C24293 + C24292 + C24291) * C153638 * C154110) *
               C2086) *
              C153695 * C1282 +
          ((C24305 * C153638 * C154110 +
            (C24901 + C24900 + C24899) * C153638 * C154099 +
            (C24908 + C24909 + C24910) * C153638 * C154074) *
               C2086 -
           ((C24216 * C6369 - C24217 * C6363 - C24216 * C6370 +
             C154071 * C6381 + C24214 * C6371 - C24215 * C6364 -
             C24214 * C6372 + C24207 * C6382 + C24212 * C2305 - C24213 * C2298 -
             C24212 * C2306 + C24206 * C2313) *
                C153638 * C154074 +
            (C24910 + C24909 + C24908) * C153638 * C154099 +
            C25383 * C153638 * C154110) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C153638 * C154110 +
            (C31262 + C31263 + C31264) * C153638 * C154099 + C31276 * C154074) *
               C2086 -
           ((C31268 + C31269 + C31270) * C153638 * C154074 +
            (C31267 + C31266 + C31265) * C153638 * C154099 +
            (C31264 + C31263 + C31262) * C153638 * C154110) *
               C153775) *
              C332 +
          (((C32061 + C32062 + C32063) * C153638 * C154110 +
            (C32064 + C32065 + C32066) * C153638 * C154099 +
            (C32677 + C32678 + C32679) * C153638 * C154074) *
               C153775 -
           (C32676 * C154074 + (C32063 + C32062 + C32061) * C153638 * C154099 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C153638 * C154110) *
               C2086) *
              C333 +
          (((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C153638 * C154110 +
            (C33442 + C33443 + C33444) * C153638 * C154099 +
            (C33445 + C33446 + C33447) * C153638 * C154074) *
               C2086 -
           ((C24216 * C30184 - C24217 * C30182 - C24216 * C30185 +
             C154071 * C30188 + C24214 * C30186 - C24215 * C30183 -
             C24214 * C30187 + C24207 * C30189 + C24212 * C6377 -
             C24213 * C6367 - C24212 * C6378 + C24206 * C6385) *
                C153638 * C154074 +
            (C33447 + C33446 + C33445) * C153638 * C154099 +
            (C33444 + C33443 + C33442) * C153638 * C154110) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
            C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
            C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
               C153638 * C154110 +
           (C31262 + C31263 + C31264) * C153638 * C154099 + C31276 * C154074) *
              C2292 -
          (C34055 * C154074 + (C31267 + C31266 + C31265) * C153638 * C154099 +
           (C31264 + C31263 + C31262) * C153638 * C154110) *
              C2293 +
          (C31276 * C154110 + (C31270 + C31269 + C31268) * C153638 * C154099 +
           (C34059 + C34060 + C34061) * C153638 * C154074) *
              C2294 -
          ((C24216 * C34031 - C24217 * C34029 - C24216 * C34032 +
            C154071 * C34035 + C24214 * C34033 - C24215 * C34030 -
            C24214 * C34034 + C24207 * C34036 + C24212 * C10558 -
            C24213 * C10553 - C24212 * C10559 + C24206 * C10562) *
               C153638 * C154074 +
           (C34061 + C34060 + C34059) * C153638 * C154099 + C34055 * C154110) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[343] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C154094 -
           (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
            (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
             C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
             C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                C2874) *
               C153810 * C154095 +
           ((C2877 * C588 - C2878 * C571 - C2877 * C589 + C154109 * C607 +
             C2879 * C1526 - C2880 * C1517 - C2879 * C1527 + C154097 * C1532 +
             C2881 * C3511 - C2882 * C3507 - C2881 * C3512 + C154071 * C3519) *
                C2874 +
            (C3602 + C3603 + C3604) * C2875 +
            (C3605 + C3606 + C3607) * C154058) *
               C153810 * C2602) *
              C153695 * C154013 +
          (((C3601 + C3600 + C3599) * C2874 + (C3598 + C3597 + C3596) * C2875 +
            (C4087 + C4088 + C4089) * C154058) *
               C153810 * C154095 -
           (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
            (C2958 + C2957 + C2956) * C2874) *
               C153810 * C154094 -
           ((C2881 * C3517 - C2882 * C3510 - C2881 * C3518 + C154071 * C3522 +
             C2879 * C1520 - C2880 * C1514 - C2879 * C1521 + C154097 * C1529 +
             C2877 * C594 - C2878 * C574 - C2877 * C595 + C154109 * C610) *
                C154058 +
            (C3607 + C3606 + C3605) * C2875 + (C3604 + C3603 + C3602) * C2874) *
               C153810 * C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C154094 -
           (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
            (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) * C122) *
               C153810 * C154095 +
           ((C134 * C588 - C135 * C571 - C134 * C589 + C153792 * C607) * C122 +
            C667 * C123 + C668 * C124 + C669 * C125 + C670 * C126) *
               C153810 * C2602) *
              C153695 * C154013 +
          ((C666 * C122 + C665 * C123 + C664 * C124 + C663 * C125 +
            C943 * C126) *
               C153810 * C154095 -
           (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
            C205 * C122) *
               C153810 * C154094 -
           ((C134 * C600 - C135 * C577 - C134 * C601 + C153792 * C613) * C126 +
            C670 * C125 + C669 * C124 + C668 * C123 + C667 * C122) *
               C153810 * C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C2874 +
             C205 * C2875 + C206 * C154058) *
                C154110 +
            (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
               C154094 -
           (C10571 * C154074 + (C7768 + C7767 + C7826) * C154099 +
            (C7762 + C7761 + C7825) * C154110) *
               C154095 +
           (C7834 * C154110 + (C7829 + C7828 + C7827) * C154099 +
            (C10575 + C10569 + C10570) * C154074) *
               C2602) *
              C153695 * C154013 +
          (((C7789 + C7790 + C7791) * C154110 +
            (C7792 + C7793 + C7794) * C154099 +
            (C7830 + C7831 + C7832) * C154074) *
               C154095 -
           (C7816 * C154074 + (C7791 + C7790 + C7789) * C154099 +
            (C207 * C154058 + C206 * C2875 + C205 * C2874) * C154110) *
               C154094 -
           (((C134 * C7750 - C135 * C7743 - C134 * C7751 + C153792 * C7755) *
                 C154058 +
             C7823 * C2875 + C7822 * C2874) *
                C154074 +
            (C7832 + C7831 + C7830) * C154099 + C7816 * C154110) *
               C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C154094 -
           (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C154095 +
           ((C24212 * C588 - C24213 * C571 - C24212 * C589 + C24206 * C607 +
             C24214 * C1526 - C24215 * C1517 - C24214 * C1527 + C24207 * C1532 +
             C24216 * C3511 - C24217 * C3507 - C24216 * C3512 +
             C154071 * C3519) *
                C154106 +
            (C24905 + C24906 + C24907) * C154087 +
            (C24908 + C24909 + C24910) * C154058) *
               C153810 * C2602) *
              C153695 * C154013 +
          (((C24904 + C24903 + C24902) * C154106 +
            (C24901 + C24900 + C24899) * C154087 +
            (C25390 + C25391 + C25392) * C154058) *
               C153810 * C154095 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C154094 -
           ((C24216 * C3517 - C24217 * C3510 - C24216 * C3518 +
             C154071 * C3522 + C24214 * C1520 - C24215 * C1514 -
             C24214 * C1521 + C24207 * C1529 + C24212 * C594 - C24213 * C574 -
             C24212 * C595 + C24206 * C610) *
                C154058 +
            (C24910 + C24909 + C24908) * C154087 +
            (C24907 + C24906 + C24905) * C154106) *
               C153810 * C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C154094 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C154095 +
           (C28428 * C588 - C28429 * C571 - C28428 * C589 + C28422 * C607 +
            C28430 * C1526 - C28431 * C1517 - C28430 * C1527 + C28423 * C1532 +
            C28432 * C3511 - C28433 * C3507 - C28432 * C3512 + C28424 * C3519 +
            C28434 * C5038 - C28435 * C5033 - C28434 * C5039 + C28425 * C5042 +
            C28436 * C28692 - C28437 * C28690 - C28436 * C28693 +
            C28426 * C28696) *
               C153638 * C153810 * C2602) *
              C153695 * C154013 +
          ((C28428 * C584 - C28429 * C569 - C28428 * C585 + C28422 * C605 +
            C28430 * C1113 - C28431 * C1106 - C28430 * C1114 + C28423 * C1124 +
            C28432 * C1955 - C28433 * C1947 - C28432 * C1956 + C28424 * C1962 +
            C28434 * C4385 - C28435 * C4380 - C28434 * C4386 + C28425 * C4392 +
            C28436 * C5774 - C28437 * C5770 - C28436 * C5775 + C28426 * C5779) *
               C153638 * C153810 * C154095 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C154094 -
           (C28436 * C28694 - C28437 * C28691 - C28436 * C28695 +
            C28426 * C28697 + C28434 * C5036 - C28435 * C5032 - C28434 * C5037 +
            C28425 * C5041 + C28432 * C3513 - C28433 * C3508 - C28432 * C3514 +
            C28424 * C3520 + C28430 * C1524 - C28431 * C1516 - C28430 * C1525 +
            C28423 * C1531 + C28428 * C590 - C28429 * C572 - C28428 * C591 +
            C28422 * C608) *
               C153638 * C153810 * C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C153638 * C154110 +
            (C31262 + C31263 + C31264) * C153638 * C154099 + C31276 * C154074) *
               C154094 -
           (C34055 * C154074 + (C31267 + C31266 + C31265) * C153638 * C154099 +
            (C31264 + C31263 + C31262) * C153638 * C154110) *
               C154095 +
           (C31276 * C154110 + (C31270 + C31269 + C31268) * C153638 * C154099 +
            (C34059 + C34060 + C34061) * C153638 * C154074) *
               C2602) *
              C153695 * C154013 +
          (((C24904 + C24903 + C24902) * C153638 * C154110 +
            (C24905 + C24906 + C24907) * C153638 * C154099 +
            (C31271 + C31272 + C31273) * C153638 * C154074) *
               C154095 -
           (C31261 * C154074 + (C24902 + C24903 + C24904) * C153638 * C154099 +
            (C24293 + C24292 + C24291) * C153638 * C154110) *
               C154094 -
           ((C24216 * C31182 - C24217 * C31179 - C24216 * C31183 +
             C154071 * C31185 + C24214 * C9204 - C24215 * C9200 -
             C24214 * C9205 + C24207 * C9209 + C24212 * C7746 - C24213 * C7741 -
             C24212 * C7747 + C24206 * C7753) *
                C153638 * C154074 +
            (C31273 + C31272 + C31271) * C153638 * C154099 + C31261 * C154110) *
               C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[344] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C2086 -
           (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
            (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) * C122) *
               C153810 * C153775) *
              C332 +
          (((C134 * C1111 - C135 * C1105 - C134 * C1112 + C153792 * C1123) *
                C122 +
            C1154 * C123 + C1155 * C124 + C1156 * C125 + C1157 * C126) *
               C153810 * C153775 -
           (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) * C122) *
               C153810 * C2086) *
              C333 +
          (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) * C122 +
            C438 * C123 + C439 * C124 + C440 * C125 + C441 * C126) *
               C153810 * C2086 -
           ((C134 * C1949 - C135 * C1944 - C134 * C1950 + C153792 * C1959) *
                C126 +
            (C134 * C1951 - C135 * C1945 - C134 * C1952 + C153792 * C1960) *
                C125 +
            (C134 * C1953 - C135 * C1946 - C134 * C1954 + C153792 * C1961) *
                C124 +
            (C134 * C1955 - C135 * C1947 - C134 * C1956 + C153792 * C1962) *
                C123 +
            (C134 * C1957 - C135 * C1948 - C134 * C1958 + C153792 * C1963) *
                C122) *
               C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C2086 -
           (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
            (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) * C122) *
               C153810 * C153775) *
              C153695 * C1281 +
          ((C666 * C122 + C665 * C123 + C664 * C124 + C663 * C125 +
            C943 * C126) *
               C153810 * C153775 -
           (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
            C205 * C122) *
               C153810 * C2086) *
              C153695 * C1282 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125 +
            C210 * C126) *
               C153810 * C2086 -
           ((C134 * C933 - C135 * C932 - C134 * C934 + C153792 * C935) * C126 +
            C943 * C125 + C663 * C124 + C664 * C123 + C665 * C122) *
               C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C2086 -
           (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
            (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
             C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
             C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                C2874) *
               C153810 * C153775) *
              C153695 * C1281 +
          (((C3601 + C3600 + C3599) * C2874 + (C3598 + C3597 + C3596) * C2875 +
            (C4087 + C4088 + C4089) * C154058) *
               C153810 * C153775 -
           (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
            (C2958 + C2957 + C2956) * C2874) *
               C153810 * C2086) *
              C153695 * C1282 +
          ((C2970 * C2874 + (C2964 + C2963 + C2962) * C2875 +
            (C2965 + C2966 + C2967) * C154058) *
               C153810 * C2086 -
           ((C2881 * C1949 - C2882 * C1944 - C2881 * C1950 + C154071 * C1959 +
             C2879 * C1119 - C2880 * C1109 - C2879 * C1120 + C154097 * C1127 +
             C2877 * C578 - C2878 * C566 - C2877 * C579 + C154109 * C602) *
                C154058 +
            (C4089 + C4088 + C4087) * C2875 + C4080 * C2874) *
               C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C2086 -
           (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
            (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
             C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
             C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                C2874) *
               C153810 * C153775) *
              C332 +
          (((C2877 * C1111 - C2878 * C1105 - C2877 * C1112 + C154109 * C1123 +
             C2879 * C1957 - C2880 * C1948 - C2879 * C1958 + C154097 * C1963 +
             C2881 * C4383 - C2882 * C4379 - C2881 * C4384 + C154071 * C4391) *
                C2874 +
            (C4432 + C4433 + C4434) * C2875 +
            (C4435 + C4436 + C4437) * C154058) *
               C153810 * C153775 -
           (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C2874) *
               C153810 * C2086) *
              C333 +
          (((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
             C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
             C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                C2874 +
            (C3284 + C3285 + C3286) * C2875 +
            (C3287 + C3288 + C3289) * C154058) *
               C153810 * C2086 -
           ((C2881 * C5772 - C2882 * C5769 - C2881 * C5773 + C154071 * C5778 +
             C2879 * C4387 - C2880 * C4381 - C2879 * C4388 + C154097 * C4393 +
             C2877 * C1953 - C2878 * C1946 - C2877 * C1954 + C154109 * C1961) *
                C154058 +
            (C2881 * C5774 - C2882 * C5770 - C2881 * C5775 + C154071 * C5779 +
             C2879 * C4385 - C2880 * C4380 - C2879 * C4386 + C154097 * C4392 +
             C2877 * C1955 - C2878 * C1947 - C2877 * C1956 + C154109 * C1962) *
                C2875 +
            (C2881 * C5776 - C2882 * C5771 - C2881 * C5777 + C154071 * C5780 +
             C2879 * C4383 - C2880 * C4379 - C2879 * C4384 + C154097 * C4391 +
             C2877 * C1957 - C2878 * C1948 - C2877 * C1958 + C154109 * C1963) *
                C2874) *
               C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C2874 +
             C205 * C2875 + C206 * C154058) *
                C154110 +
            (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
               C2086 -
           ((C7827 + C7828 + C7829) * C154074 +
            (C7768 + C7767 + C7826) * C154099 +
            (C7762 + C7761 + C7825) * C154110) *
               C153775) *
              C153695 * C1281 +
          (((C7789 + C7790 + C7791) * C154110 +
            (C7792 + C7793 + C7794) * C154099 +
            (C7830 + C7831 + C7832) * C154074) *
               C153775 -
           (C7816 * C154074 + (C7791 + C7790 + C7789) * C154099 +
            (C207 * C154058 + C206 * C2875 + C205 * C2874) * C154110) *
               C2086) *
              C153695 * C1282 +
          (((C206 * C2874 + C207 * C2875 + C208 * C154058) * C154110 +
            (C8278 + C8279 + C8280) * C154099 +
            (C8281 + C8282 + C8283) * C154074) *
               C2086 -
           (((C134 * C2301 - C135 * C2296 - C134 * C2302 + C153792 * C2311) *
                 C154058 +
             C7824 * C2875 + C7819 * C2874) *
                C154074 +
            (C8283 + C8282 + C8281) * C154099 +
            (C8280 + C8279 + C8278) * C154110) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C2874 +
             C205 * C2875 + C206 * C154058) *
                C154110 +
            (C7825 + C7761 + C7762) * C154099 + C7834 * C154074) *
               C2086 -
           ((C7827 + C7828 + C7829) * C154074 +
            (C7768 + C7767 + C7826) * C154099 +
            (C7762 + C7761 + C7825) * C154110) *
               C153775) *
              C332 +
          (((C8616 + C8582 + C8583) * C154110 +
            (C8617 + C8588 + C8589) * C154099 +
            (C9223 + C9216 + C9217) * C154074) *
               C153775 -
           (C9220 * C154074 + (C8583 + C8582 + C8616) * C154099 +
            (C436 * C154058 + C437 * C2875 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C2874) *
                C154110) *
               C2086) *
              C333 +
          ((((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C2874 +
             C438 * C2875 + C439 * C154058) *
                C154110 +
            (C9968 + C9954 + C9955) * C154099 +
            (C9969 + C9960 + C9961) * C154074) *
               C2086 -
           (((C134 * C6369 - C135 * C6363 - C134 * C6370 + C153792 * C6381) *
                 C154058 +
             (C134 * C6373 - C135 * C6365 - C134 * C6374 + C153792 * C6383) *
                 C2875 +
             (C134 * C6377 - C135 * C6367 - C134 * C6378 + C153792 * C6385) *
                 C2874) *
                C154074 +
            (C9961 + C9960 + C9969) * C154099 +
            (C9955 + C9954 + C9968) * C154110) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C2086 -
           (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C153775) *
              C153695 * C1281 +
          (((C24904 + C24903 + C24902) * C154106 +
            (C24901 + C24900 + C24899) * C154087 +
            (C25390 + C25391 + C25392) * C154058) *
               C153810 * C153775 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C2086) *
              C153695 * C1282 +
          ((C24305 * C154106 + (C24299 + C24298 + C24297) * C154087 +
            (C24300 + C24301 + C24302) * C154058) *
               C153810 * C2086 -
           ((C24216 * C1949 - C24217 * C1944 - C24216 * C1950 +
             C154071 * C1959 + C24214 * C1119 - C24215 * C1109 -
             C24214 * C1120 + C24207 * C1127 + C24212 * C578 - C24213 * C566 -
             C24212 * C579 + C24206 * C602) *
                C154058 +
            (C25392 + C25391 + C25390) * C154087 + C25383 * C154106) *
               C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C2086 -
           (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C153775) *
              C332 +
          (((C24212 * C1111 - C24213 * C1105 - C24212 * C1112 + C24206 * C1123 +
             C24214 * C1957 - C24215 * C1948 - C24214 * C1958 + C24207 * C1963 +
             C24216 * C4383 - C24217 * C4379 - C24216 * C4384 +
             C154071 * C4391) *
                C154106 +
            (C25719 + C25720 + C25721) * C154087 +
            (C25722 + C25723 + C25724) * C154058) *
               C153810 * C153775 -
           (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C2086) *
              C333 +
          (((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C154106 +
            (C24603 + C24604 + C24605) * C154087 +
            (C24606 + C24607 + C24608) * C154058) *
               C153810 * C2086 -
           ((C24216 * C5772 - C24217 * C5769 - C24216 * C5773 +
             C154071 * C5778 + C24214 * C4387 - C24215 * C4381 -
             C24214 * C4388 + C24207 * C4393 + C24212 * C1953 - C24213 * C1946 -
             C24212 * C1954 + C24206 * C1961) *
                C154058 +
            (C24216 * C5774 - C24217 * C5770 - C24216 * C5775 +
             C154071 * C5779 + C24214 * C4385 - C24215 * C4380 -
             C24214 * C4386 + C24207 * C4392 + C24212 * C1955 - C24213 * C1947 -
             C24212 * C1956 + C24206 * C1962) *
                C154087 +
            (C24216 * C5776 - C24217 * C5771 - C24216 * C5777 +
             C154071 * C5780 + C24214 * C4383 - C24215 * C4379 -
             C24214 * C4384 + C24207 * C4391 + C24212 * C1957 - C24213 * C1948 -
             C24212 * C1958 + C24206 * C1963) *
                C154106) *
               C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C2086 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C153775) *
              C153695 * C1281 +
          ((C28428 * C584 - C28429 * C569 - C28428 * C585 + C28422 * C605 +
            C28430 * C1113 - C28431 * C1106 - C28430 * C1114 + C28423 * C1124 +
            C28432 * C1955 - C28433 * C1947 - C28432 * C1956 + C28424 * C1962 +
            C28434 * C4385 - C28435 * C4380 - C28434 * C4386 + C28425 * C4392 +
            C28436 * C5774 - C28437 * C5770 - C28436 * C5775 + C28426 * C5779) *
               C153638 * C153810 * C153775 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C2086) *
              C153695 * C1282 +
          ((C28428 * C148 - C28429 * C138 - C28428 * C149 + C28422 * C162 +
            C28430 * C353 - C28431 * C339 - C28430 * C354 + C28423 * C375 +
            C28432 * C363 - C28433 * C344 - C28432 * C364 + C28424 * C380 +
            C28434 * C1380 - C28435 * C1373 - C28434 * C1381 + C28425 * C1388 +
            C28436 * C3197 - C28437 * C3191 - C28436 * C3198 + C28426 * C3203) *
               C153638 * C153810 * C2086 -
           (C28436 * C5772 - C28437 * C5769 - C28436 * C5773 + C28426 * C5778 +
            C28434 * C4387 - C28435 * C4381 - C28434 * C4388 + C28425 * C4393 +
            C28432 * C1953 - C28433 * C1946 - C28432 * C1954 + C28424 * C1961 +
            C28430 * C1115 - C28431 * C1107 - C28430 * C1116 + C28423 * C1125 +
            C28428 * C582 - C28429 * C568 - C28428 * C583 + C28422 * C604) *
               C153638 * C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C2086 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C153775) *
              C332 +
          ((C28428 * C1111 - C28429 * C1105 - C28428 * C1112 + C28422 * C1123 +
            C28430 * C1957 - C28431 * C1948 - C28430 * C1958 + C28423 * C1963 +
            C28432 * C4383 - C28433 * C4379 - C28432 * C4384 + C28424 * C4391 +
            C28434 * C5776 - C28435 * C5771 - C28434 * C5777 + C28425 * C5780 +
            C28436 * C29106 - C28437 * C29104 - C28436 * C29107 +
            C28426 * C29110) *
               C153638 * C153810 * C153775 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C2086) *
              C333 +
          ((C28428 * C359 - C28429 * C342 - C28428 * C360 + C28422 * C378 +
            C28430 * C1384 - C28431 * C1375 - C28430 * C1385 + C28423 * C1390 +
            C28432 * C3193 - C28433 * C3189 - C28432 * C3194 + C28424 * C3201 +
            C28434 * C4808 - C28435 * C4803 - C28434 * C4809 + C28425 * C4812 +
            C28436 * C28562 - C28437 * C28560 - C28436 * C28563 +
            C28426 * C28566) *
               C153638 * C153810 * C2086 -
           (C28436 * C29853 - C28437 * C29852 - C28436 * C29854 +
            C28426 * C29855 + C28434 * C29106 - C28435 * C29104 -
            C28434 * C29107 + C28425 * C29110 + C28432 * C5776 -
            C28433 * C5771 - C28432 * C5777 + C28424 * C5780 + C28430 * C4383 -
            C28431 * C4379 - C28430 * C4384 + C28423 * C4391 + C28428 * C1957 -
            C28429 * C1948 - C28428 * C1958 + C28422 * C1963) *
               C153638 * C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C153638 * C154110 +
            (C31262 + C31263 + C31264) * C153638 * C154099 + C31276 * C154074) *
               C2086 -
           ((C31268 + C31269 + C31270) * C153638 * C154074 +
            (C31267 + C31266 + C31265) * C153638 * C154099 +
            (C31264 + C31263 + C31262) * C153638 * C154110) *
               C153775) *
              C153695 * C1281 +
          (((C24904 + C24903 + C24902) * C153638 * C154110 +
            (C24905 + C24906 + C24907) * C153638 * C154099 +
            (C31271 + C31272 + C31273) * C153638 * C154074) *
               C153775 -
           (C31261 * C154074 + (C24902 + C24903 + C24904) * C153638 * C154099 +
            (C24293 + C24292 + C24291) * C153638 * C154110) *
               C2086) *
              C153695 * C1282 +
          ((C24305 * C153638 * C154110 +
            (C24901 + C24900 + C24899) * C153638 * C154099 +
            (C24908 + C24909 + C24910) * C153638 * C154074) *
               C2086 -
           ((C24216 * C6369 - C24217 * C6363 - C24216 * C6370 +
             C154071 * C6381 + C24214 * C6371 - C24215 * C6364 -
             C24214 * C6372 + C24207 * C6382 + C24212 * C2305 - C24213 * C2298 -
             C24212 * C2306 + C24206 * C2313) *
                C153638 * C154074 +
            (C24910 + C24909 + C24908) * C153638 * C154099 +
            C25383 * C153638 * C154110) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C153638 * C154110 +
            (C31262 + C31263 + C31264) * C153638 * C154099 + C31276 * C154074) *
               C2086 -
           ((C31268 + C31269 + C31270) * C153638 * C154074 +
            (C31267 + C31266 + C31265) * C153638 * C154099 +
            (C31264 + C31263 + C31262) * C153638 * C154110) *
               C153775) *
              C332 +
          (((C32061 + C32062 + C32063) * C153638 * C154110 +
            (C32064 + C32065 + C32066) * C153638 * C154099 +
            (C32677 + C32678 + C32679) * C153638 * C154074) *
               C153775 -
           (C32676 * C154074 + (C32063 + C32062 + C32061) * C153638 * C154099 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C153638 * C154110) *
               C2086) *
              C333 +
          (((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C153638 * C154110 +
            (C33442 + C33443 + C33444) * C153638 * C154099 +
            (C33445 + C33446 + C33447) * C153638 * C154074) *
               C2086 -
           ((C24216 * C30184 - C24217 * C30182 - C24216 * C30185 +
             C154071 * C30188 + C24214 * C30186 - C24215 * C30183 -
             C24214 * C30187 + C24207 * C30189 + C24212 * C6377 -
             C24213 * C6367 - C24212 * C6378 + C24206 * C6385) *
                C153638 * C154074 +
            (C33447 + C33446 + C33445) * C153638 * C154099 +
            (C33444 + C33443 + C33442) * C153638 * C154110) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[345] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C11433 +
             C205 * C11434 + C206 * C11435 + C207 * C154036) *
                C154037 +
            (C15647 + C15648 + C15649 + C15650) * C153897) *
               C153711 * C154021 -
           ((C1156 * C154036 + C1155 * C11435 + C1154 * C11434 +
             C8612 * C11433) *
                C153897 +
            (C435 * C154036 + C436 * C11435 + C437 * C11434 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C11433) *
                C154037) *
               C153711 * C153747) *
              C154090 +
          (((C437 * C11433 + C436 * C11434 + C435 * C11435 + C434 * C154036) *
                C154037 +
            (C1154 * C11433 + C1155 * C11434 + C1156 * C11435 +
             C1157 * C154036) *
                C153897) *
               C153711 * C153747 -
           ((C15658 + C15657 + C15656 + C15655) * C153897 +
            (C208 * C154036 + C207 * C11435 + C206 * C11434 + C205 * C11433) *
                C154037) *
               C153711 * C154021) *
              C154091 +
          (((C206 * C11433 + C207 * C11434 + C208 * C11435 + C209 * C154036) *
                C154037 +
            (C665 * C11433 + C664 * C11434 + C663 * C11435 + C943 * C154036) *
                C153897) *
               C153711 * C154021 -
           (((C134 * C1121 - C135 * C1110 - C134 * C1122 + C153792 * C1128) *
                 C154036 +
             C1157 * C11435 + C1156 * C11434 + C1155 * C11433) *
                C153897 +
            (C808 * C154036 + C434 * C11435 + C435 * C11434 + C436 * C11433) *
                C154037) *
               C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154002 +
             (C24291 + C24292 + C24293) * C153648) *
                C154037 +
            ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
                C153897) *
               C153711 * C154021 -
           (((C25721 + C25720 + C25719) * C153648 +
             (C32063 + C32062 + C32061) * C154002) *
                C153897 +
            ((C24600 + C24601 + C24602) * C153648 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C154002) *
                C154037) *
               C153711 * C153747) *
              C154090 +
          ((((C24602 + C24601 + C24600) * C154002 +
             (C24599 + C24598 + C24597) * C153648) *
                C154037 +
            ((C25719 + C25720 + C25721) * C154002 +
             (C25722 + C25723 + C25724) * C153648) *
                C153897) *
               C153711 * C153747 -
           ((C25383 * C153648 + C39373 * C154002) * C153897 +
            ((C24296 + C24295 + C24294) * C153648 +
             (C24293 + C24292 + C24291) * C154002) *
                C154037) *
               C153711 * C154021) *
              C154091 +
          (((C24305 * C154002 + (C24299 + C24298 + C24297) * C153648) *
                C154037 +
            ((C24901 + C24900 + C24899) * C154002 +
             (C25390 + C25391 + C25392) * C153648) *
                C153897) *
               C153711 * C154021 -
           (((C24216 * C4389 - C24217 * C4382 - C24216 * C4390 +
              C154071 * C4394 + C24214 * C1951 - C24215 * C1945 -
              C24214 * C1952 + C24207 * C1960 + C24212 * C1117 -
              C24213 * C1108 - C24212 * C1118 + C24206 * C1126) *
                 C153648 +
             (C25724 + C25723 + C25722) * C154002) *
                C153897 +
            ((C25151 + C25150 + C25149) * C153648 + C25142 * C154002) *
                C154037) *
               C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q));
    d2ee[346] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                  C11433 +
              C205 * C11434 + C206 * C11435 + C207 * C154036) *
                 C154037 +
             (C15647 + C15648 + C15649 + C15650) * C153897) *
                C154022 -
            ((C15651 + C15652 + C15653 + C15654) * C153897 +
             (C15650 + C15649 + C15648 + C15647) * C154037) *
                C153775) *
               C154021 +
           (((C16313 + C16314 + C16315 + C16316) * C154037 +
             (C8613 * C11433 + C7518 * C11434 + C7517 * C11435 +
              C8059 * C154036) *
                 C153897) *
                C153775 -
            ((C16316 + C16315 + C16314 + C16313) * C153897 +
             (C435 * C154036 + C436 * C11435 + C437 * C11434 +
              (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                  C11433) *
                 C154037) *
                C154022) *
               C153747) *
              C335 +
          ((((C15655 + C15656 + C15657 + C15658) * C154037 +
             (C15659 + C15660 + C15661 + C15662) * C153897) *
                C153775 -
            ((C15658 + C15657 + C15656 + C15655) * C153897 +
             (C208 * C154036 + C207 * C11435 + C206 * C11434 + C205 * C11433) *
                 C154037) *
                C154022) *
               C154021 +
           (((C437 * C11433 + C436 * C11434 + C435 * C11435 + C434 * C154036) *
                 C154037 +
             (C16317 + C16318 + C16319 + C16320) * C153897) *
                C154022 -
            (((C134 * C1518 - C135 * C1513 - C134 * C1519 + C153792 * C1528) *
                  C154036 +
              C8059 * C11435 + C7517 * C11434 + C7518 * C11433) *
                 C153897 +
             (C16320 + C16319 + C16318 + C16317) * C154037) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
               C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
               C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                  C154002 +
              (C24291 + C24292 + C24293) * C153648) *
                 C154037 +
             ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
                 C153897) *
                C154022 -
            ((C31248 * C153648 + (C31267 + C31266 + C31265) * C154002) *
                 C153897 +
             (C39373 * C153648 + (C31264 + C31263 + C31262) * C154002) *
                 C154037) *
                C153775) *
               C154021 +
           ((((C32061 + C32062 + C32063) * C154002 + C40345 * C153648) *
                 C154037 +
             ((C32064 + C32065 + C32066) * C154002 +
              (C32067 + C32068 + C32069) * C153648) *
                 C153897) *
                C153775 -
            ((C40346 * C153648 + (C32063 + C32062 + C32061) * C154002) *
                 C153897 +
             ((C24600 + C24601 + C24602) * C153648 +
              (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
               C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
               C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
               C24206 * C377) *
                  C154002) *
                 C154037) *
                C154022) *
               C153747) *
              C335 +
          ((((C39372 * C154002 + C39956 * C153648) * C154037 +
             (C39374 * C154002 + (C24908 + C24909 + C24910) * C153648) *
                 C153897) *
                C153775 -
            ((C25383 * C153648 + C39373 * C154002) * C153897 +
             ((C24296 + C24295 + C24294) * C153648 +
              (C24293 + C24292 + C24291) * C154002) *
                 C154037) *
                C154022) *
               C154021 +
           ((((C24602 + C24601 + C24600) * C154002 +
              (C24599 + C24598 + C24597) * C153648) *
                 C154037 +
             (C40345 * C154002 + (C25722 + C25723 + C25724) * C153648) *
                 C153897) *
                C154022 -
            (((C24216 * C5034 - C24217 * C5031 - C24216 * C5035 +
               C154071 * C5040 + C24214 * C3515 - C24215 * C3509 -
               C24214 * C3516 + C24207 * C3521 + C24212 * C1522 -
               C24213 * C1515 - C24212 * C1523 + C24206 * C1530) *
                  C153648 +
              (C32069 + C32068 + C32067) * C154002) *
                 C153897 +
             ((C25724 + C25723 + C25722) * C153648 + C40346 * C154002) *
                 C154037) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[347] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C11433 +
             C205 * C11434 + C206 * C11435 + C207 * C154036) *
                C154037 +
            (C7817 * C11433 + C666 * C11434 + C665 * C11435 + C664 * C154036) *
                C153897) *
               C153711 * C332 -
           ((C1156 * C154036 + C1155 * C11435 + C1154 * C11434 +
             C8612 * C11433) *
                C153897 +
            (C435 * C154036 + C436 * C11435 + C437 * C11434 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C11433) *
                C154037) *
               C153711 * C333 +
           (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C11433 +
             C438 * C11434 + C439 * C11435 + C440 * C154036) *
                C154037 +
            (C9966 * C11433 + C7519 * C11434 + C7520 * C11435 +
             C15452 * C154036) *
                C153897) *
               C153711 * C334) *
              C335 +
          (((C437 * C11433 + C436 * C11434 + C435 * C11435 + C434 * C154036) *
                C154037 +
            (C1154 * C11433 + C1155 * C11434 + C1156 * C11435 +
             C1157 * C154036) *
                C153897) *
               C153711 * C333 -
           ((C663 * C154036 + C664 * C11435 + C665 * C11434 + C666 * C11433) *
                C153897 +
            (C208 * C154036 + C207 * C11435 + C206 * C11434 + C205 * C11433) *
                C154037) *
               C153711 * C332 -
           (((C134 * C1949 - C135 * C1944 - C134 * C1950 + C153792 * C1959) *
                 C154036 +
             C15452 * C11435 + C7520 * C11434 + C7519 * C11433) *
                C153897 +
            (C441 * C154036 + C440 * C11435 + C439 * C11434 + C438 * C11433) *
                C154037) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C11433 +
            C205 * C11434 + C206 * C11435 + C207 * C154036) *
               C154037 +
           (C7817 * C11433 + C666 * C11434 + C665 * C11435 + C664 * C154036) *
               C153897) *
              C153711 * C153695 * C130 -
          ((C663 * C154036 + C664 * C11435 + C665 * C11434 + C666 * C11433) *
               C153897 +
           (C208 * C154036 + C207 * C11435 + C206 * C11434 + C205 * C11433) *
               C154037) *
              C153711 * C153695 * C131 +
          ((C206 * C11433 + C207 * C11434 + C208 * C11435 + C209 * C154036) *
               C154037 +
           (C665 * C11433 + C664 * C11434 + C663 * C11435 + C943 * C154036) *
               C153897) *
              C153711 * C153695 * C132 -
          (((C134 * C933 - C135 * C932 - C134 * C934 + C153792 * C935) *
                C154036 +
            C943 * C11435 + C663 * C11434 + C664 * C11433) *
               C153897 +
           (C210 * C154036 + C209 * C11435 + C208 * C11434 + C207 * C11433) *
               C154037) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C11433 +
             C205 * C11434 + C206 * C11435 + C207 * C154036) *
                C154037 +
            (C15647 + C15648 + C15649 + C15650) * C153897) *
               C563 -
           ((C15651 + C15652 + C15653 + C15654) * C153897 +
            (C15650 + C15649 + C15648 + C15647) * C154037) *
               C564 +
           ((C15654 + C15653 + C15652 + C15651) * C154037 +
            (C7821 * C11433 + C7820 * C11434 + C7819 * C11435 +
             C7824 * C154036) *
                C153897) *
               C565) *
              C153695 * C335 +
          (((C15655 + C15656 + C15657 + C15658) * C154037 +
            (C15659 + C15660 + C15661 + C15662) * C153897) *
               C564 -
           ((C15658 + C15657 + C15656 + C15655) * C153897 +
            (C208 * C154036 + C207 * C11435 + C206 * C11434 + C205 * C11433) *
                C154037) *
               C563 -
           (((C134 * C2301 - C135 * C2296 - C134 * C2302 + C153792 * C2311) *
                 C154036 +
             C7824 * C11435 + C7819 * C11434 + C7820 * C11433) *
                C153897 +
            (C15662 + C15661 + C15660 + C15659) * C154037) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154002 +
            (C24291 + C24292 + C24293) * C153648) *
               C154037 +
           ((C31262 + C31263 + C31264) * C154002 +
            (C24904 + C24903 + C24902) * C153648) *
               C153897) *
              C153711 * C153695 * C130 -
          ((C25383 * C153648 + (C24902 + C24903 + C24904) * C154002) * C153897 +
           ((C24296 + C24295 + C24294) * C153648 +
            (C24293 + C24292 + C24291) * C154002) *
               C154037) *
              C153711 * C153695 * C131 +
          ((C24305 * C154002 + (C24299 + C24298 + C24297) * C153648) * C154037 +
           ((C24901 + C24900 + C24899) * C154002 +
            (C25390 + C25391 + C25392) * C153648) *
               C153897) *
              C153711 * C153695 * C132 -
          (((C24216 * C1949 - C24217 * C1944 - C24216 * C1950 +
             C154071 * C1959 + C24214 * C1119 - C24215 * C1109 -
             C24214 * C1120 + C24207 * C1127 + C24212 * C578 - C24213 * C566 -
             C24212 * C579 + C24206 * C602) *
                C153648 +
            (C25392 + C25391 + C25390) * C154002) *
               C153897 +
           ((C24302 + C24301 + C24300) * C153648 + C24306 * C154002) *
               C154037) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154002 +
             (C24291 + C24292 + C24293) * C153648) *
                C154037 +
            ((C31262 + C31263 + C31264) * C154002 +
             (C24904 + C24903 + C24902) * C153648) *
                C153897) *
               C153711 * C332 -
           (((C25721 + C25720 + C25719) * C153648 +
             (C32063 + C32062 + C32061) * C154002) *
                C153897 +
            ((C24600 + C24601 + C24602) * C153648 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C154002) *
                C154037) *
               C153711 * C333 +
           (((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
              C24214 * C1384 - C24215 * C1375 - C24214 * C1385 +
              C24207 * C1390 + C24216 * C3193 - C24217 * C3189 -
              C24216 * C3194 + C154071 * C3201) *
                 C154002 +
             (C24603 + C24604 + C24605) * C153648) *
                C154037 +
            ((C33442 + C33443 + C33444) * C154002 +
             (C39076 + C39077 + C39078) * C153648) *
                C153897) *
               C153711 * C334) *
              C335 +
          ((((C24602 + C24601 + C24600) * C154002 +
             (C24599 + C24598 + C24597) * C153648) *
                C154037 +
            ((C25719 + C25720 + C25721) * C154002 +
             (C25722 + C25723 + C25724) * C153648) *
                C153897) *
               C153711 * C333 -
           ((C25383 * C153648 + (C24902 + C24903 + C24904) * C154002) *
                C153897 +
            ((C24296 + C24295 + C24294) * C153648 +
             (C24293 + C24292 + C24291) * C154002) *
                C154037) *
               C153711 * C332 -
           (((C24216 * C5772 - C24217 * C5769 - C24216 * C5773 +
              C154071 * C5778 + C24214 * C4387 - C24215 * C4381 -
              C24214 * C4388 + C24207 * C4393 + C24212 * C1953 -
              C24213 * C1946 - C24212 * C1954 + C24206 * C1961) *
                 C153648 +
             (C39078 + C39077 + C39076) * C154002) *
                C153897 +
            ((C24608 + C24607 + C24606) * C153648 +
             (C24605 + C24604 + C24603) * C154002) *
                C154037) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154002 +
             (C24291 + C24292 + C24293) * C153648) *
                C154037 +
            ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
                C153897) *
               C563 -
           ((C31248 * C153648 + (C31267 + C31266 + C31265) * C154002) *
                C153897 +
            (C39373 * C153648 + (C31264 + C31263 + C31262) * C154002) *
                C154037) *
               C564 +
           ((C31275 * C154002 + C39374 * C153648) * C154037 +
            ((C31270 + C31269 + C31268) * C154002 +
             (C31271 + C31272 + C31273) * C153648) *
                C153897) *
               C565) *
              C153695 * C335 +
          (((C39372 * C154002 + (C24901 + C24900 + C24899) * C153648) *
                C154037 +
            (C39374 * C154002 + (C24908 + C24909 + C24910) * C153648) *
                C153897) *
               C564 -
           ((C25383 * C153648 + C39373 * C154002) * C153897 +
            ((C24296 + C24295 + C24294) * C153648 +
             (C24293 + C24292 + C24291) * C154002) *
                C154037) *
               C563 -
           (((C24216 * C6369 - C24217 * C6363 - C24216 * C6370 +
              C154071 * C6381 + C24214 * C6371 - C24215 * C6364 -
              C24214 * C6372 + C24207 * C6382 + C24212 * C2305 -
              C24213 * C2298 - C24212 * C2306 + C24206 * C2313) *
                 C153648 +
             (C31273 + C31272 + C31271) * C154002) *
                C153897 +
            ((C24910 + C24909 + C24908) * C153648 + C31248 * C154002) *
                C154037) *
               C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[348] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C11433 +
             C205 * C11434 + C206 * C11435 + C207 * C154036) *
                C154037 +
            (C15647 + C15648 + C15649 + C15650) * C153897) *
               C154022 -
           ((C15651 + C15652 + C15653 + C15654) * C153897 +
            (C15650 + C15649 + C15648 + C15647) * C154037) *
               C153775) *
              C153695 * C154090 +
          (((C15655 + C15656 + C15657 + C15658) * C154037 +
            (C15659 + C15660 + C15661 + C15662) * C153897) *
               C153775 -
           ((C15658 + C15657 + C15656 + C15655) * C153897 +
            (C208 * C154036 + C207 * C11435 + C206 * C11434 + C205 * C11433) *
                C154037) *
               C154022) *
              C153695 * C154091 +
          (((C206 * C11433 + C207 * C11434 + C208 * C11435 + C209 * C154036) *
                C154037 +
            (C16051 + C16052 + C16053 + C16054) * C153897) *
               C154022 -
           (((C134 * C600 - C135 * C577 - C134 * C601 + C153792 * C613) *
                 C154036 +
             C670 * C11435 + C669 * C11434 + C668 * C11433) *
                C153897 +
            (C16054 + C16053 + C16052 + C16051) * C154037) *
               C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154002 +
             (C24291 + C24292 + C24293) * C153648) *
                C154037 +
            ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
                C153897) *
               C154022 -
           ((C31248 * C153648 + (C31267 + C31266 + C31265) * C154002) *
                C153897 +
            (C39373 * C153648 + (C31264 + C31263 + C31262) * C154002) *
                C154037) *
               C153775) *
              C153695 * C154090 +
          (((C39372 * C154002 + C39956 * C153648) * C154037 +
            (C39374 * C154002 + (C24908 + C24909 + C24910) * C153648) *
                C153897) *
               C153775 -
           ((C25383 * C153648 + C39373 * C154002) * C153897 +
            ((C24296 + C24295 + C24294) * C153648 +
             (C24293 + C24292 + C24291) * C154002) *
                C154037) *
               C154022) *
              C153695 * C154091 +
          (((C24305 * C154002 + (C24299 + C24298 + C24297) * C153648) *
                C154037 +
            (C39956 * C154002 + (C25390 + C25391 + C25392) * C153648) *
                C153897) *
               C154022 -
           (((C24216 * C3517 - C24217 * C3510 - C24216 * C3518 +
              C154071 * C3522 + C24214 * C1520 - C24215 * C1514 -
              C24214 * C1521 + C24207 * C1529 + C24212 * C594 - C24213 * C574 -
              C24212 * C595 + C24206 * C610) *
                 C153648 +
             (C24910 + C24909 + C24908) * C154002) *
                C153897 +
            ((C25392 + C25391 + C25390) * C153648 + C25383 * C154002) *
                C154037) *
               C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q));
    d2ee[349] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C11433 +
            C205 * C11434 + C206 * C11435 + C207 * C154036) *
               C154037 +
           (C7817 * C11433 + C666 * C11434 + C665 * C11435 + C664 * C154036) *
               C153897) *
              C153711 * C153695 * C130 -
          ((C663 * C154036 + C664 * C11435 + C665 * C11434 + C666 * C11433) *
               C153897 +
           (C208 * C154036 + C207 * C11435 + C206 * C11434 + C205 * C11433) *
               C154037) *
              C153711 * C153695 * C131 +
          ((C206 * C11433 + C207 * C11434 + C208 * C11435 + C209 * C154036) *
               C154037 +
           (C665 * C11433 + C664 * C11434 + C663 * C11435 + C943 * C154036) *
               C153897) *
              C153711 * C153695 * C132 -
          (((C134 * C933 - C135 * C932 - C134 * C934 + C153792 * C935) *
                C154036 +
            C943 * C11435 + C663 * C11434 + C664 * C11433) *
               C153897 +
           (C210 * C154036 + C209 * C11435 + C208 * C11434 + C207 * C11433) *
               C154037) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C11433 +
             C205 * C11434 + C206 * C11435 + C207 * C154036) *
                C154037 +
            (C7817 * C11433 + C666 * C11434 + C665 * C11435 + C664 * C154036) *
                C153897) *
               C153711 * C332 -
           ((C1156 * C154036 + C1155 * C11435 + C1154 * C11434 +
             C8612 * C11433) *
                C153897 +
            (C435 * C154036 + C436 * C11435 + C437 * C11434 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C11433) *
                C154037) *
               C153711 * C333 +
           (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C11433 +
             C438 * C11434 + C439 * C11435 + C440 * C154036) *
                C154037 +
            (C9966 * C11433 + C7519 * C11434 + C7520 * C11435 +
             C15452 * C154036) *
                C153897) *
               C153711 * C334) *
              C335 +
          (((C437 * C11433 + C436 * C11434 + C435 * C11435 + C434 * C154036) *
                C154037 +
            (C1154 * C11433 + C1155 * C11434 + C1156 * C11435 +
             C1157 * C154036) *
                C153897) *
               C153711 * C333 -
           ((C663 * C154036 + C664 * C11435 + C665 * C11434 + C666 * C11433) *
                C153897 +
            (C208 * C154036 + C207 * C11435 + C206 * C11434 + C205 * C11433) *
                C154037) *
               C153711 * C332 -
           (((C134 * C1949 - C135 * C1944 - C134 * C1950 + C153792 * C1959) *
                 C154036 +
             C15452 * C11435 + C7520 * C11434 + C7519 * C11433) *
                C153897 +
            (C441 * C154036 + C440 * C11435 + C439 * C11434 + C438 * C11433) *
                C154037) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154002 +
            (C24291 + C24292 + C24293) * C153648) *
               C154037 +
           ((C31262 + C31263 + C31264) * C154002 +
            (C24904 + C24903 + C24902) * C153648) *
               C153897) *
              C153711 * C153695 * C130 -
          ((C25383 * C153648 + (C24902 + C24903 + C24904) * C154002) * C153897 +
           ((C24296 + C24295 + C24294) * C153648 +
            (C24293 + C24292 + C24291) * C154002) *
               C154037) *
              C153711 * C153695 * C131 +
          ((C24305 * C154002 + (C24299 + C24298 + C24297) * C153648) * C154037 +
           ((C24901 + C24900 + C24899) * C154002 +
            (C25390 + C25391 + C25392) * C153648) *
               C153897) *
              C153711 * C153695 * C132 -
          (((C24216 * C1949 - C24217 * C1944 - C24216 * C1950 +
             C154071 * C1959 + C24214 * C1119 - C24215 * C1109 -
             C24214 * C1120 + C24207 * C1127 + C24212 * C578 - C24213 * C566 -
             C24212 * C579 + C24206 * C602) *
                C153648 +
            (C25392 + C25391 + C25390) * C154002) *
               C153897 +
           ((C24302 + C24301 + C24300) * C153648 + C24306 * C154002) *
               C154037) *
              C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154002 +
             (C24291 + C24292 + C24293) * C153648) *
                C154037 +
            ((C31262 + C31263 + C31264) * C154002 +
             (C24904 + C24903 + C24902) * C153648) *
                C153897) *
               C153711 * C332 -
           (((C25721 + C25720 + C25719) * C153648 +
             (C32063 + C32062 + C32061) * C154002) *
                C153897 +
            ((C24600 + C24601 + C24602) * C153648 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C154002) *
                C154037) *
               C153711 * C333 +
           (((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
              C24214 * C1384 - C24215 * C1375 - C24214 * C1385 +
              C24207 * C1390 + C24216 * C3193 - C24217 * C3189 -
              C24216 * C3194 + C154071 * C3201) *
                 C154002 +
             (C24603 + C24604 + C24605) * C153648) *
                C154037 +
            ((C33442 + C33443 + C33444) * C154002 +
             (C39076 + C39077 + C39078) * C153648) *
                C153897) *
               C153711 * C334) *
              C335 +
          ((((C24602 + C24601 + C24600) * C154002 +
             (C24599 + C24598 + C24597) * C153648) *
                C154037 +
            ((C25719 + C25720 + C25721) * C154002 +
             (C25722 + C25723 + C25724) * C153648) *
                C153897) *
               C153711 * C333 -
           ((C25383 * C153648 + (C24902 + C24903 + C24904) * C154002) *
                C153897 +
            ((C24296 + C24295 + C24294) * C153648 +
             (C24293 + C24292 + C24291) * C154002) *
                C154037) *
               C153711 * C332 -
           (((C24216 * C5772 - C24217 * C5769 - C24216 * C5773 +
              C154071 * C5778 + C24214 * C4387 - C24215 * C4381 -
              C24214 * C4388 + C24207 * C4393 + C24212 * C1953 -
              C24213 * C1946 - C24212 * C1954 + C24206 * C1961) *
                 C153648 +
             (C39078 + C39077 + C39076) * C154002) *
                C153897 +
            ((C24608 + C24607 + C24606) * C153648 +
             (C24605 + C24604 + C24603) * C154002) *
                C154037) *
               C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[350] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C11433 +
             C205 * C11434 + C206 * C11435 + C207 * C154036) *
                C154037 +
            (C15647 + C15648 + C15649 + C15650) * C153897) *
               C153711 * C154092 -
           ((C16316 + C16315 + C16314 + C16313) * C153897 +
            (C435 * C154036 + C436 * C11435 + C437 * C11434 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C11433) *
                C154037) *
               C153711 * C154093 +
           (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C11433 +
             C438 * C11434 + C439 * C11435 + C440 * C154036) *
                C154037 +
            (C9966 * C11433 + C7519 * C11434 + C7520 * C11435 +
             C15452 * C154036) *
                C153897) *
               C153711 * C1657) *
              C154013 +
          (((C437 * C11433 + C436 * C11434 + C435 * C11435 + C434 * C154036) *
                C154037 +
            (C16317 + C16318 + C16319 + C16320) * C153897) *
               C153711 * C154093 -
           ((C15658 + C15657 + C15656 + C15655) * C153897 +
            (C208 * C154036 + C207 * C11435 + C206 * C11434 + C205 * C11433) *
                C154037) *
               C153711 * C154092 -
           (((C134 * C1949 - C135 * C1944 - C134 * C1950 + C153792 * C1959) *
                 C154036 +
             C15452 * C11435 + C7520 * C11434 + C7519 * C11433) *
                C153897 +
            (C441 * C154036 + C440 * C11435 + C439 * C11434 + C438 * C11433) *
                C154037) *
               C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154002 +
             (C24291 + C24292 + C24293) * C153648) *
                C154037 +
            ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
                C153897) *
               C153711 * C154092 -
           ((C40346 * C153648 + (C32063 + C32062 + C32061) * C154002) *
                C153897 +
            ((C24600 + C24601 + C24602) * C153648 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C154002) *
                C154037) *
               C153711 * C154093 +
           (((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
              C24214 * C1384 - C24215 * C1375 - C24214 * C1385 +
              C24207 * C1390 + C24216 * C3193 - C24217 * C3189 -
              C24216 * C3194 + C154071 * C3201) *
                 C154002 +
             (C24603 + C24604 + C24605) * C153648) *
                C154037 +
            ((C33442 + C33443 + C33444) * C154002 +
             (C39076 + C39077 + C39078) * C153648) *
                C153897) *
               C153711 * C1657) *
              C154013 +
          ((((C24602 + C24601 + C24600) * C154002 +
             (C24599 + C24598 + C24597) * C153648) *
                C154037 +
            (C40345 * C154002 + (C25722 + C25723 + C25724) * C153648) *
                C153897) *
               C153711 * C154093 -
           ((C25383 * C153648 + C39373 * C154002) * C153897 +
            ((C24296 + C24295 + C24294) * C153648 +
             (C24293 + C24292 + C24291) * C154002) *
                C154037) *
               C153711 * C154092 -
           (((C24216 * C5772 - C24217 * C5769 - C24216 * C5773 +
              C154071 * C5778 + C24214 * C4387 - C24215 * C4381 -
              C24214 * C4388 + C24207 * C4393 + C24212 * C1953 -
              C24213 * C1946 - C24212 * C1954 + C24206 * C1961) *
                 C153648 +
             (C39078 + C39077 + C39076) * C154002) *
                C153897 +
            ((C24608 + C24607 + C24606) * C153648 +
             (C24605 + C24604 + C24603) * C154002) *
                C154037) *
               C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[351] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C11433 +
             C205 * C11434 + C206 * C11435 + C207 * C154036) *
                C154037 +
            (C15647 + C15648 + C15649 + C15650) * C153897) *
               C154022 -
           ((C15651 + C15652 + C15653 + C15654) * C153897 +
            (C15650 + C15649 + C15648 + C15647) * C154037) *
               C153775) *
              C154092 +
          (((C16313 + C16314 + C16315 + C16316) * C154037 +
            (C16839 + C16840 + C16841 + C16842) * C153897) *
               C153775 -
           ((C16316 + C16315 + C16314 + C16313) * C153897 +
            (C435 * C154036 + C436 * C11435 + C437 * C11434 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C11433) *
                C154037) *
               C154022) *
              C154093 +
          ((((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C11433 +
             C438 * C11434 + C439 * C11435 + C440 * C154036) *
                C154037 +
            (C17489 + C17490 + C17491 + C17492) * C153897) *
               C154022 -
           (((C134 * C3517 - C135 * C3510 - C134 * C3518 + C153792 * C3522) *
                 C154036 +
             C7522 * C11435 + C7521 * C11434 + C9967 * C11433) *
                C153897 +
            (C17492 + C17491 + C17490 + C17489) * C154037) *
               C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154002 +
             (C24291 + C24292 + C24293) * C153648) *
                C154037 +
            ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
                C153897) *
               C154022 -
           ((C31248 * C153648 + (C31267 + C31266 + C31265) * C154002) *
                C153897 +
            (C39373 * C153648 + (C31264 + C31263 + C31262) * C154002) *
                C154037) *
               C153775) *
              C154092 +
          ((((C32061 + C32062 + C32063) * C154002 + C40345 * C153648) *
                C154037 +
            ((C32064 + C32065 + C32066) * C154002 +
             (C32067 + C32068 + C32069) * C153648) *
                C153897) *
               C153775 -
           ((C40346 * C153648 + (C32063 + C32062 + C32061) * C154002) *
                C153897 +
            ((C24600 + C24601 + C24602) * C153648 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C154002) *
                C154037) *
               C154022) *
              C154093 +
          ((((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
              C24214 * C1384 - C24215 * C1375 - C24214 * C1385 +
              C24207 * C1390 + C24216 * C3193 - C24217 * C3189 -
              C24216 * C3194 + C154071 * C3201) *
                 C154002 +
             (C24603 + C24604 + C24605) * C153648) *
                C154037 +
            ((C33442 + C33443 + C33444) * C154002 +
             (C39076 + C39077 + C39078) * C153648) *
                C153897) *
               C154022 -
           (((C24216 * C28694 - C24217 * C28691 - C24216 * C28695 +
              C154071 * C28697 + C24214 * C5036 - C24215 * C5032 -
              C24214 * C5037 + C24207 * C5041 + C24212 * C3513 -
              C24213 * C3508 - C24212 * C3514 + C24206 * C3520) *
                 C153648 +
             (C33447 + C33446 + C33445) * C154002) *
                C153897 +
            ((C39078 + C39077 + C39076) * C153648 +
             (C33444 + C33443 + C33442) * C154002) *
                C154037) *
               C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[352] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C11433 +
            C205 * C11434 + C206 * C11435 + C207 * C154036) *
               C154037 +
           (C15647 + C15648 + C15649 + C15650) * C153897) *
              C153711 * C1366 -
          ((C16316 + C16315 + C16314 + C16313) * C153897 +
           (C435 * C154036 + C436 * C11435 + C437 * C11434 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                C11433) *
               C154037) *
              C153711 * C1367 +
          (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                C11433 +
            C438 * C11434 + C439 * C11435 + C440 * C154036) *
               C154037 +
           (C9966 * C11433 + C7519 * C11434 + C7520 * C11435 +
            C15452 * C154036) *
               C153897) *
              C153711 * C1368 -
          (((C134 * C4389 - C135 * C4382 - C134 * C4390 + C153792 * C4394) *
                C154036 +
            (C134 * C4387 - C135 * C4381 - C134 * C4388 + C153792 * C4393) *
                C11435 +
            (C134 * C4385 - C135 * C4380 - C134 * C4386 + C153792 * C4392) *
                C11434 +
            (C134 * C4383 - C135 * C4379 - C134 * C4384 + C153792 * C4391) *
                C11433) *
               C153897 +
           ((C134 * C1378 - C135 * C1372 - C134 * C1379 + C153792 * C1387) *
                C154036 +
            (C134 * C1380 - C135 * C1373 - C134 * C1381 + C153792 * C1388) *
                C11435 +
            (C134 * C1382 - C135 * C1374 - C134 * C1383 + C153792 * C1389) *
                C11434 +
            (C134 * C1384 - C135 * C1375 - C134 * C1385 + C153792 * C1390) *
                C11433) *
               C154037) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C11433 +
             C205 * C11434 + C206 * C11435 + C207 * C154036) *
                C154037 +
            (C15647 + C15648 + C15649 + C15650) * C153897) *
               C153711 * C1279 -
           ((C16316 + C16315 + C16314 + C16313) * C153897 +
            (C435 * C154036 + C436 * C11435 + C437 * C11434 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C11433) *
                C154037) *
               C153711 * C153747) *
              C1281 +
          (((C437 * C11433 + C436 * C11434 + C435 * C11435 + C434 * C154036) *
                C154037 +
            (C16317 + C16318 + C16319 + C16320) * C153897) *
               C153711 * C153747 -
           ((C15658 + C15657 + C15656 + C15655) * C153897 +
            (C208 * C154036 + C207 * C11435 + C206 * C11434 + C205 * C11433) *
                C154037) *
               C153711 * C1279) *
              C1282 +
          (((C206 * C11433 + C207 * C11434 + C208 * C11435 + C209 * C154036) *
                C154037 +
            (C16051 + C16052 + C16053 + C16054) * C153897) *
               C153711 * C1279 -
           (((C134 * C1121 - C135 * C1110 - C134 * C1122 + C153792 * C1128) *
                 C154036 +
             C1157 * C11435 + C1156 * C11434 + C1155 * C11433) *
                C153897 +
            (C808 * C154036 + C434 * C11435 + C435 * C11434 + C436 * C11433) *
                C154037) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C11433 +
             C205 * C11434 + C206 * C11435 + C207 * C154036) *
                C154037 +
            (C15647 + C15648 + C15649 + C15650) * C153897) *
               C563 -
           ((C15651 + C15652 + C15653 + C15654) * C153897 +
            (C15650 + C15649 + C15648 + C15647) * C154037) *
               C564 +
           ((C15654 + C15653 + C15652 + C15651) * C154037 +
            (C7821 * C11433 + C7820 * C11434 + C7819 * C11435 +
             C7824 * C154036) *
                C153897) *
               C565) *
              C1279 +
          (((C16313 + C16314 + C16315 + C16316) * C154037 +
            (C16839 + C16840 + C16841 + C16842) * C153897) *
               C564 -
           ((C16316 + C16315 + C16314 + C16313) * C153897 +
            (C435 * C154036 + C436 * C11435 + C437 * C11434 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C11433) *
                C154037) *
               C563 -
           (((C134 * C8574 - C135 * C8573 - C134 * C8575 + C153792 * C8576) *
                 C154036 +
             C8615 * C11435 + C8614 * C11434 + C9222 * C11433) *
                C153897 +
            (C16842 + C16841 + C16840 + C16839) * C154037) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154002 +
             (C24291 + C24292 + C24293) * C153648) *
                C154037 +
            ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
                C153897) *
               C153711 * C1279 -
           ((C40346 * C153648 + (C32063 + C32062 + C32061) * C154002) *
                C153897 +
            ((C24600 + C24601 + C24602) * C153648 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C154002) *
                C154037) *
               C153711 * C153747) *
              C1281 +
          ((((C24602 + C24601 + C24600) * C154002 +
             (C24599 + C24598 + C24597) * C153648) *
                C154037 +
            (C40345 * C154002 + (C25722 + C25723 + C25724) * C153648) *
                C153897) *
               C153711 * C153747 -
           ((C25383 * C153648 + C39373 * C154002) * C153897 +
            ((C24296 + C24295 + C24294) * C153648 +
             (C24293 + C24292 + C24291) * C154002) *
                C154037) *
               C153711 * C1279) *
              C1282 +
          (((C24305 * C154002 + (C24299 + C24298 + C24297) * C153648) *
                C154037 +
            (C39956 * C154002 + (C25390 + C25391 + C25392) * C153648) *
                C153897) *
               C153711 * C1279 -
           (((C24216 * C4389 - C24217 * C4382 - C24216 * C4390 +
              C154071 * C4394 + C24214 * C1951 - C24215 * C1945 -
              C24214 * C1952 + C24207 * C1960 + C24212 * C1117 -
              C24213 * C1108 - C24212 * C1118 + C24206 * C1126) *
                 C153648 +
             (C25724 + C25723 + C25722) * C154002) *
                C153897 +
            ((C25151 + C25150 + C25149) * C153648 + C25142 * C154002) *
                C154037) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154002 +
            (C24291 + C24292 + C24293) * C153648) *
               C154037 +
           ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
               C153897) *
              C153711 * C1366 -
          ((C40346 * C153648 + (C32063 + C32062 + C32061) * C154002) * C153897 +
           ((C24600 + C24601 + C24602) * C153648 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154002) *
               C154037) *
              C153711 * C1367 +
          (((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C154002 +
            (C24603 + C24604 + C24605) * C153648) *
               C154037 +
           ((C33442 + C33443 + C33444) * C154002 +
            (C39076 + C39077 + C39078) * C153648) *
               C153897) *
              C153711 * C1368 -
          (((C24216 * C29108 - C24217 * C29105 - C24216 * C29109 +
             C154071 * C29111 + C24214 * C5774 - C24215 * C5770 -
             C24214 * C5775 + C24207 * C5779 + C24212 * C4385 - C24213 * C4380 -
             C24212 * C4386 + C24206 * C4392) *
                C153648 +
            (C24216 * C29106 - C24217 * C29104 - C24216 * C29107 +
             C154071 * C29110 + C24214 * C5776 - C24215 * C5771 -
             C24214 * C5777 + C24207 * C5780 + C24212 * C4383 - C24213 * C4379 -
             C24212 * C4384 + C24206 * C4391) *
                C154002) *
               C153897 +
           ((C24216 * C4806 - C24217 * C4802 - C24216 * C4807 +
             C154071 * C4811 + C24214 * C3195 - C24215 * C3190 -
             C24214 * C3196 + C24207 * C3202 + C24212 * C1382 - C24213 * C1374 -
             C24212 * C1383 + C24206 * C1389) *
                C153648 +
            (C24216 * C4808 - C24217 * C4803 - C24216 * C4809 +
             C154071 * C4812 + C24214 * C3193 - C24215 * C3189 -
             C24214 * C3194 + C24207 * C3201 + C24212 * C1384 - C24213 * C1375 -
             C24212 * C1385 + C24206 * C1390) *
                C154002) *
               C154037) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154002 +
             (C24291 + C24292 + C24293) * C153648) *
                C154037 +
            ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
                C153897) *
               C563 -
           ((C31248 * C153648 + (C31267 + C31266 + C31265) * C154002) *
                C153897 +
            (C39373 * C153648 + (C31264 + C31263 + C31262) * C154002) *
                C154037) *
               C564 +
           ((C31275 * C154002 + C39374 * C153648) * C154037 +
            ((C31270 + C31269 + C31268) * C154002 +
             (C31271 + C31272 + C31273) * C153648) *
                C153897) *
               C565) *
              C1279 +
          ((((C32061 + C32062 + C32063) * C154002 + C40345 * C153648) *
                C154037 +
            ((C32064 + C32065 + C32066) * C154002 +
             (C32067 + C32068 + C32069) * C153648) *
                C153897) *
               C564 -
           ((C40346 * C153648 + (C32063 + C32062 + C32061) * C154002) *
                C153897 +
            ((C24600 + C24601 + C24602) * C153648 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C154002) *
                C154037) *
               C563 -
           (((C24216 * C32003 - C24217 * C32002 - C24216 * C32004 +
              C154071 * C32005 + C24214 * C6373 - C24215 * C6365 -
              C24214 * C6374 + C24207 * C6383 + C24212 * C6375 -
              C24213 * C6366 - C24212 * C6376 + C24206 * C6384) *
                 C153648 +
             (C32679 + C32678 + C32677) * C154002) *
                C153897 +
            ((C32069 + C32068 + C32067) * C153648 + C32672 * C154002) *
                C154037) *
               C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[353] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                  C11433 +
              C205 * C11434 + C206 * C11435 + C207 * C154036) *
                 C154037 +
             (C15647 + C15648 + C15649 + C15650) * C153897) *
                C154022 -
            ((C15651 + C15652 + C15653 + C15654) * C153897 +
             (C15650 + C15649 + C15648 + C15647) * C154037) *
                C153775) *
               C1279 +
           (((C16313 + C16314 + C16315 + C16316) * C154037 +
             (C16839 + C16840 + C16841 + C16842) * C153897) *
                C153775 -
            ((C16316 + C16315 + C16314 + C16313) * C153897 +
             (C435 * C154036 + C436 * C11435 + C437 * C11434 +
              (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                  C11433) *
                 C154037) *
                C154022) *
               C153747) *
              C154013 +
          ((((C15655 + C15656 + C15657 + C15658) * C154037 +
             (C15659 + C15660 + C15661 + C15662) * C153897) *
                C153775 -
            ((C15658 + C15657 + C15656 + C15655) * C153897 +
             (C208 * C154036 + C207 * C11435 + C206 * C11434 + C205 * C11433) *
                 C154037) *
                C154022) *
               C1279 +
           (((C437 * C11433 + C436 * C11434 + C435 * C11435 + C434 * C154036) *
                 C154037 +
             (C16317 + C16318 + C16319 + C16320) * C153897) *
                C154022 -
            (((C134 * C1518 - C135 * C1513 - C134 * C1519 + C153792 * C1528) *
                  C154036 +
              C8059 * C11435 + C7517 * C11434 + C7518 * C11433) *
                 C153897 +
             (C16320 + C16319 + C16318 + C16317) * C154037) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
               C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
               C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                  C154002 +
              (C24291 + C24292 + C24293) * C153648) *
                 C154037 +
             ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
                 C153897) *
                C154022 -
            ((C31248 * C153648 + (C31267 + C31266 + C31265) * C154002) *
                 C153897 +
             (C39373 * C153648 + (C31264 + C31263 + C31262) * C154002) *
                 C154037) *
                C153775) *
               C1279 +
           ((((C32061 + C32062 + C32063) * C154002 + C40345 * C153648) *
                 C154037 +
             ((C32064 + C32065 + C32066) * C154002 +
              (C32067 + C32068 + C32069) * C153648) *
                 C153897) *
                C153775 -
            ((C40346 * C153648 + (C32063 + C32062 + C32061) * C154002) *
                 C153897 +
             ((C24600 + C24601 + C24602) * C153648 +
              (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
               C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
               C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
               C24206 * C377) *
                  C154002) *
                 C154037) *
                C154022) *
               C153747) *
              C154013 +
          ((((C39372 * C154002 + C39956 * C153648) * C154037 +
             (C39374 * C154002 + (C24908 + C24909 + C24910) * C153648) *
                 C153897) *
                C153775 -
            ((C25383 * C153648 + C39373 * C154002) * C153897 +
             ((C24296 + C24295 + C24294) * C153648 +
              (C24293 + C24292 + C24291) * C154002) *
                 C154037) *
                C154022) *
               C1279 +
           ((((C24602 + C24601 + C24600) * C154002 +
              (C24599 + C24598 + C24597) * C153648) *
                 C154037 +
             (C40345 * C154002 + (C25722 + C25723 + C25724) * C153648) *
                 C153897) *
                C154022 -
            (((C24216 * C5034 - C24217 * C5031 - C24216 * C5035 +
               C154071 * C5040 + C24214 * C3515 - C24215 * C3509 -
               C24214 * C3516 + C24207 * C3521 + C24212 * C1522 -
               C24213 * C1515 - C24212 * C1523 + C24206 * C1530) *
                  C153648 +
              (C32069 + C32068 + C32067) * C154002) *
                 C153897 +
             ((C25724 + C25723 + C25722) * C153648 + C40346 * C154002) *
                 C154037) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[354] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C11433 +
             C205 * C11434 + C206 * C11435 + C207 * C154036) *
                C154037 +
            (C15647 + C15648 + C15649 + C15650) * C153897) *
               C153711 * C1279 -
           ((C16316 + C16315 + C16314 + C16313) * C153897 +
            (C435 * C154036 + C436 * C11435 + C437 * C11434 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C11433) *
                C154037) *
               C153711 * C153747) *
              C1281 +
          (((C437 * C11433 + C436 * C11434 + C435 * C11435 + C434 * C154036) *
                C154037 +
            (C16317 + C16318 + C16319 + C16320) * C153897) *
               C153711 * C153747 -
           ((C15658 + C15657 + C15656 + C15655) * C153897 +
            (C208 * C154036 + C207 * C11435 + C206 * C11434 + C205 * C11433) *
                C154037) *
               C153711 * C1279) *
              C1282 +
          (((C206 * C11433 + C207 * C11434 + C208 * C11435 + C209 * C154036) *
                C154037 +
            (C16051 + C16052 + C16053 + C16054) * C153897) *
               C153711 * C1279 -
           (((C134 * C1121 - C135 * C1110 - C134 * C1122 + C153792 * C1128) *
                 C154036 +
             C1157 * C11435 + C1156 * C11434 + C1155 * C11433) *
                C153897 +
            (C808 * C154036 + C434 * C11435 + C435 * C11434 + C436 * C11433) *
                C154037) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C11433 +
            C205 * C11434 + C206 * C11435 + C207 * C154036) *
               C154037 +
           (C15647 + C15648 + C15649 + C15650) * C153897) *
              C153711 * C1366 -
          ((C16316 + C16315 + C16314 + C16313) * C153897 +
           (C435 * C154036 + C436 * C11435 + C437 * C11434 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                C11433) *
               C154037) *
              C153711 * C1367 +
          (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                C11433 +
            C438 * C11434 + C439 * C11435 + C440 * C154036) *
               C154037 +
           (C9966 * C11433 + C7519 * C11434 + C7520 * C11435 +
            C15452 * C154036) *
               C153897) *
              C153711 * C1368 -
          (((C134 * C4389 - C135 * C4382 - C134 * C4390 + C153792 * C4394) *
                C154036 +
            (C134 * C4387 - C135 * C4381 - C134 * C4388 + C153792 * C4393) *
                C11435 +
            (C134 * C4385 - C135 * C4380 - C134 * C4386 + C153792 * C4392) *
                C11434 +
            (C134 * C4383 - C135 * C4379 - C134 * C4384 + C153792 * C4391) *
                C11433) *
               C153897 +
           ((C134 * C1378 - C135 * C1372 - C134 * C1379 + C153792 * C1387) *
                C154036 +
            (C134 * C1380 - C135 * C1373 - C134 * C1381 + C153792 * C1388) *
                C11435 +
            (C134 * C1382 - C135 * C1374 - C134 * C1383 + C153792 * C1389) *
                C11434 +
            (C134 * C1384 - C135 * C1375 - C134 * C1385 + C153792 * C1390) *
                C11433) *
               C154037) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154002 +
             (C24291 + C24292 + C24293) * C153648) *
                C154037 +
            ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
                C153897) *
               C153711 * C1279 -
           ((C40346 * C153648 + (C32063 + C32062 + C32061) * C154002) *
                C153897 +
            ((C24600 + C24601 + C24602) * C153648 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C154002) *
                C154037) *
               C153711 * C153747) *
              C1281 +
          ((((C24602 + C24601 + C24600) * C154002 +
             (C24599 + C24598 + C24597) * C153648) *
                C154037 +
            (C40345 * C154002 + (C25722 + C25723 + C25724) * C153648) *
                C153897) *
               C153711 * C153747 -
           ((C25383 * C153648 + C39373 * C154002) * C153897 +
            ((C24296 + C24295 + C24294) * C153648 +
             (C24293 + C24292 + C24291) * C154002) *
                C154037) *
               C153711 * C1279) *
              C1282 +
          (((C24305 * C154002 + (C24299 + C24298 + C24297) * C153648) *
                C154037 +
            (C39956 * C154002 + (C25390 + C25391 + C25392) * C153648) *
                C153897) *
               C153711 * C1279 -
           (((C24216 * C4389 - C24217 * C4382 - C24216 * C4390 +
              C154071 * C4394 + C24214 * C1951 - C24215 * C1945 -
              C24214 * C1952 + C24207 * C1960 + C24212 * C1117 -
              C24213 * C1108 - C24212 * C1118 + C24206 * C1126) *
                 C153648 +
             (C25724 + C25723 + C25722) * C154002) *
                C153897 +
            ((C25151 + C25150 + C25149) * C153648 + C25142 * C154002) *
                C154037) *
               C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154002 +
            (C24291 + C24292 + C24293) * C153648) *
               C154037 +
           ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
               C153897) *
              C153711 * C1366 -
          ((C40346 * C153648 + (C32063 + C32062 + C32061) * C154002) * C153897 +
           ((C24600 + C24601 + C24602) * C153648 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154002) *
               C154037) *
              C153711 * C1367 +
          (((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C154002 +
            (C24603 + C24604 + C24605) * C153648) *
               C154037 +
           ((C33442 + C33443 + C33444) * C154002 +
            (C39076 + C39077 + C39078) * C153648) *
               C153897) *
              C153711 * C1368 -
          (((C24216 * C29108 - C24217 * C29105 - C24216 * C29109 +
             C154071 * C29111 + C24214 * C5774 - C24215 * C5770 -
             C24214 * C5775 + C24207 * C5779 + C24212 * C4385 - C24213 * C4380 -
             C24212 * C4386 + C24206 * C4392) *
                C153648 +
            (C24216 * C29106 - C24217 * C29104 - C24216 * C29107 +
             C154071 * C29110 + C24214 * C5776 - C24215 * C5771 -
             C24214 * C5777 + C24207 * C5780 + C24212 * C4383 - C24213 * C4379 -
             C24212 * C4384 + C24206 * C4391) *
                C154002) *
               C153897 +
           ((C24216 * C4806 - C24217 * C4802 - C24216 * C4807 +
             C154071 * C4811 + C24214 * C3195 - C24215 * C3190 -
             C24214 * C3196 + C24207 * C3202 + C24212 * C1382 - C24213 * C1374 -
             C24212 * C1383 + C24206 * C1389) *
                C153648 +
            (C24216 * C4808 - C24217 * C4803 - C24216 * C4809 +
             C154071 * C4812 + C24214 * C3193 - C24215 * C3189 -
             C24214 * C3194 + C24207 * C3201 + C24212 * C1384 - C24213 * C1375 -
             C24212 * C1385 + C24206 * C1390) *
                C154002) *
               C154037) *
              C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[355] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                  C11433 +
              C205 * C11434 + C206 * C11435 + C207 * C154036) *
                 C154037 +
             (C15647 + C15648 + C15649 + C15650) * C153897) *
                C2086 -
            ((C15651 + C15652 + C15653 + C15654) * C153897 +
             (C15650 + C15649 + C15648 + C15647) * C154037) *
                C153775) *
               C154021 +
           (((C16313 + C16314 + C16315 + C16316) * C154037 +
             (C16839 + C16840 + C16841 + C16842) * C153897) *
                C153775 -
            ((C16316 + C16315 + C16314 + C16313) * C153897 +
             (C435 * C154036 + C436 * C11435 + C437 * C11434 +
              (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                  C11433) *
                 C154037) *
                C2086) *
               C153747) *
              C154013 +
          ((((C15655 + C15656 + C15657 + C15658) * C154037 +
             (C15659 + C15660 + C15661 + C15662) * C153897) *
                C153775 -
            ((C15658 + C15657 + C15656 + C15655) * C153897 +
             (C208 * C154036 + C207 * C11435 + C206 * C11434 + C205 * C11433) *
                 C154037) *
                C2086) *
               C154021 +
           (((C437 * C11433 + C436 * C11434 + C435 * C11435 + C434 * C154036) *
                 C154037 +
             (C16317 + C16318 + C16319 + C16320) * C153897) *
                C2086 -
            (((C134 * C1518 - C135 * C1513 - C134 * C1519 + C153792 * C1528) *
                  C154036 +
              C8059 * C11435 + C7517 * C11434 + C7518 * C11433) *
                 C153897 +
             (C16320 + C16319 + C16318 + C16317) * C154037) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
               C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
               C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                  C154002 +
              (C24291 + C24292 + C24293) * C153648) *
                 C154037 +
             ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
                 C153897) *
                C2086 -
            ((C31248 * C153648 + (C31267 + C31266 + C31265) * C154002) *
                 C153897 +
             (C39373 * C153648 + (C31264 + C31263 + C31262) * C154002) *
                 C154037) *
                C153775) *
               C154021 +
           ((((C32061 + C32062 + C32063) * C154002 + C40345 * C153648) *
                 C154037 +
             ((C32064 + C32065 + C32066) * C154002 +
              (C32067 + C32068 + C32069) * C153648) *
                 C153897) *
                C153775 -
            ((C40346 * C153648 + (C32063 + C32062 + C32061) * C154002) *
                 C153897 +
             ((C24600 + C24601 + C24602) * C153648 +
              (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
               C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
               C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
               C24206 * C377) *
                  C154002) *
                 C154037) *
                C2086) *
               C153747) *
              C154013 +
          ((((C39372 * C154002 + C39956 * C153648) * C154037 +
             (C39374 * C154002 + (C24908 + C24909 + C24910) * C153648) *
                 C153897) *
                C153775 -
            ((C25383 * C153648 + C39373 * C154002) * C153897 +
             ((C24296 + C24295 + C24294) * C153648 +
              (C24293 + C24292 + C24291) * C154002) *
                 C154037) *
                C2086) *
               C154021 +
           ((((C24602 + C24601 + C24600) * C154002 +
              (C24599 + C24598 + C24597) * C153648) *
                 C154037 +
             (C40345 * C154002 + (C25722 + C25723 + C25724) * C153648) *
                 C153897) *
                C2086 -
            (((C24216 * C5034 - C24217 * C5031 - C24216 * C5035 +
               C154071 * C5040 + C24214 * C3515 - C24215 * C3509 -
               C24214 * C3516 + C24207 * C3521 + C24212 * C1522 -
               C24213 * C1515 - C24212 * C1523 + C24206 * C1530) *
                  C153648 +
              (C32069 + C32068 + C32067) * C154002) *
                 C153897 +
             ((C25724 + C25723 + C25722) * C153648 + C40346 * C154002) *
                 C154037) *
                C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[356] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C11433 +
             C205 * C11434 + C206 * C11435 + C207 * C154036) *
                C154037 +
            (C15647 + C15648 + C15649 + C15650) * C153897) *
               C154094 -
           ((C15651 + C15652 + C15653 + C15654) * C153897 +
            (C15650 + C15649 + C15648 + C15647) * C154037) *
               C154095 +
           ((C15654 + C15653 + C15652 + C15651) * C154037 +
            (C18011 + C18012 + C18013 + C18014) * C153897) *
               C2602) *
              C154021 +
          (((C16313 + C16314 + C16315 + C16316) * C154037 +
            (C16839 + C16840 + C16841 + C16842) * C153897) *
               C154095 -
           ((C16316 + C16315 + C16314 + C16313) * C153897 +
            (C435 * C154036 + C436 * C11435 + C437 * C11434 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C11433) *
                C154037) *
               C154094 -
           (((C134 * C8574 - C135 * C8573 - C134 * C8575 + C153792 * C8576) *
                 C154036 +
             C8615 * C11435 + C8614 * C11434 + C9222 * C11433) *
                C153897 +
            (C16842 + C16841 + C16840 + C16839) * C154037) *
               C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154002 +
             (C24291 + C24292 + C24293) * C153648) *
                C154037 +
            ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
                C153897) *
               C154094 -
           ((C31248 * C153648 + (C31267 + C31266 + C31265) * C154002) *
                C153897 +
            (C39373 * C153648 + (C31264 + C31263 + C31262) * C154002) *
                C154037) *
               C154095 +
           ((C31275 * C154002 + C39374 * C153648) * C154037 +
            ((C31270 + C31269 + C31268) * C154002 +
             (C31271 + C31272 + C31273) * C153648) *
                C153897) *
               C2602) *
              C154021 +
          ((((C32061 + C32062 + C32063) * C154002 + C40345 * C153648) *
                C154037 +
            ((C32064 + C32065 + C32066) * C154002 +
             (C32067 + C32068 + C32069) * C153648) *
                C153897) *
               C154095 -
           ((C40346 * C153648 + (C32063 + C32062 + C32061) * C154002) *
                C153897 +
            ((C24600 + C24601 + C24602) * C153648 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C154002) *
                C154037) *
               C154094 -
           (((C24216 * C32003 - C24217 * C32002 - C24216 * C32004 +
              C154071 * C32005 + C24214 * C6373 - C24215 * C6365 -
              C24214 * C6374 + C24207 * C6383 + C24212 * C6375 -
              C24213 * C6366 - C24212 * C6376 + C24206 * C6384) *
                 C153648 +
             (C32679 + C32678 + C32677) * C154002) *
                C153897 +
            ((C32069 + C32068 + C32067) * C153648 + C32672 * C154002) *
                C154037) *
               C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[357] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C11433 +
             C205 * C11434 + C206 * C11435 + C207 * C154036) *
                C154037 +
            (C15647 + C15648 + C15649 + C15650) * C153897) *
               C2086 -
           ((C15651 + C15652 + C15653 + C15654) * C153897 +
            (C15650 + C15649 + C15648 + C15647) * C154037) *
               C153775) *
              C332 +
          (((C16313 + C16314 + C16315 + C16316) * C154037 +
            (C16839 + C16840 + C16841 + C16842) * C153897) *
               C153775 -
           ((C16316 + C16315 + C16314 + C16313) * C153897 +
            (C435 * C154036 + C436 * C11435 + C437 * C11434 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C11433) *
                C154037) *
               C2086) *
              C333 +
          ((((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C11433 +
             C438 * C11434 + C439 * C11435 + C440 * C154036) *
                C154037 +
            (C17489 + C17490 + C17491 + C17492) * C153897) *
               C2086 -
           (((C134 * C3517 - C135 * C3510 - C134 * C3518 + C153792 * C3522) *
                 C154036 +
             C7522 * C11435 + C7521 * C11434 + C9967 * C11433) *
                C153897 +
            (C17492 + C17491 + C17490 + C17489) * C154037) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C11433 +
             C205 * C11434 + C206 * C11435 + C207 * C154036) *
                C154037 +
            (C15647 + C15648 + C15649 + C15650) * C153897) *
               C2086 -
           ((C15651 + C15652 + C15653 + C15654) * C153897 +
            (C15650 + C15649 + C15648 + C15647) * C154037) *
               C153775) *
              C153695 * C1281 +
          (((C15655 + C15656 + C15657 + C15658) * C154037 +
            (C15659 + C15660 + C15661 + C15662) * C153897) *
               C153775 -
           ((C15658 + C15657 + C15656 + C15655) * C153897 +
            (C208 * C154036 + C207 * C11435 + C206 * C11434 + C205 * C11433) *
                C154037) *
               C2086) *
              C153695 * C1282 +
          (((C206 * C11433 + C207 * C11434 + C208 * C11435 + C209 * C154036) *
                C154037 +
            (C16051 + C16052 + C16053 + C16054) * C153897) *
               C2086 -
           (((C134 * C600 - C135 * C577 - C134 * C601 + C153792 * C613) *
                 C154036 +
             C670 * C11435 + C669 * C11434 + C668 * C11433) *
                C153897 +
            (C16054 + C16053 + C16052 + C16051) * C154037) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                C11433 +
            C205 * C11434 + C206 * C11435 + C207 * C154036) *
               C154037 +
           (C15647 + C15648 + C15649 + C15650) * C153897) *
              C2292 -
          ((C15651 + C15652 + C15653 + C15654) * C153897 +
           (C15650 + C15649 + C15648 + C15647) * C154037) *
              C2293 +
          ((C15654 + C15653 + C15652 + C15651) * C154037 +
           (C18011 + C18012 + C18013 + C18014) * C153897) *
              C2294 -
          (((C134 * C7750 - C135 * C7743 - C134 * C7751 + C153792 * C7755) *
                C154036 +
            C7823 * C11435 + C7822 * C11434 + C10574 * C11433) *
               C153897 +
           (C18014 + C18013 + C18012 + C18011) * C154037) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154002 +
             (C24291 + C24292 + C24293) * C153648) *
                C154037 +
            ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
                C153897) *
               C2086 -
           ((C31248 * C153648 + (C31267 + C31266 + C31265) * C154002) *
                C153897 +
            (C39373 * C153648 + (C31264 + C31263 + C31262) * C154002) *
                C154037) *
               C153775) *
              C153695 * C1281 +
          (((C39372 * C154002 + C39956 * C153648) * C154037 +
            (C39374 * C154002 + (C24908 + C24909 + C24910) * C153648) *
                C153897) *
               C153775 -
           ((C25383 * C153648 + C39373 * C154002) * C153897 +
            ((C24296 + C24295 + C24294) * C153648 +
             (C24293 + C24292 + C24291) * C154002) *
                C154037) *
               C2086) *
              C153695 * C1282 +
          (((C24305 * C154002 + (C24299 + C24298 + C24297) * C153648) *
                C154037 +
            (C39956 * C154002 + (C25390 + C25391 + C25392) * C153648) *
                C153897) *
               C2086 -
           (((C24216 * C3517 - C24217 * C3510 - C24216 * C3518 +
              C154071 * C3522 + C24214 * C1520 - C24215 * C1514 -
              C24214 * C1521 + C24207 * C1529 + C24212 * C594 - C24213 * C574 -
              C24212 * C595 + C24206 * C610) *
                 C153648 +
             (C24910 + C24909 + C24908) * C154002) *
                C153897 +
            ((C25392 + C25391 + C25390) * C153648 + C25383 * C154002) *
                C154037) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154002 +
             (C24291 + C24292 + C24293) * C153648) *
                C154037 +
            ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
                C153897) *
               C2086 -
           ((C31248 * C153648 + (C31267 + C31266 + C31265) * C154002) *
                C153897 +
            (C39373 * C153648 + (C31264 + C31263 + C31262) * C154002) *
                C154037) *
               C153775) *
              C332 +
          ((((C32061 + C32062 + C32063) * C154002 + C40345 * C153648) *
                C154037 +
            ((C32064 + C32065 + C32066) * C154002 +
             (C32067 + C32068 + C32069) * C153648) *
                C153897) *
               C153775 -
           ((C40346 * C153648 + (C32063 + C32062 + C32061) * C154002) *
                C153897 +
            ((C24600 + C24601 + C24602) * C153648 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C154002) *
                C154037) *
               C2086) *
              C333 +
          ((((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
              C24214 * C1384 - C24215 * C1375 - C24214 * C1385 +
              C24207 * C1390 + C24216 * C3193 - C24217 * C3189 -
              C24216 * C3194 + C154071 * C3201) *
                 C154002 +
             (C24603 + C24604 + C24605) * C153648) *
                C154037 +
            ((C33442 + C33443 + C33444) * C154002 +
             (C39076 + C39077 + C39078) * C153648) *
                C153897) *
               C2086 -
           (((C24216 * C28694 - C24217 * C28691 - C24216 * C28695 +
              C154071 * C28697 + C24214 * C5036 - C24215 * C5032 -
              C24214 * C5037 + C24207 * C5041 + C24212 * C3513 -
              C24213 * C3508 - C24212 * C3514 + C24206 * C3520) *
                 C153648 +
             (C33447 + C33446 + C33445) * C154002) *
                C153897 +
            ((C39078 + C39077 + C39076) * C153648 +
             (C33444 + C33443 + C33442) * C154002) *
                C154037) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154002 +
            (C24291 + C24292 + C24293) * C153648) *
               C154037 +
           ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
               C153897) *
              C2292 -
          ((C31248 * C153648 + (C31267 + C31266 + C31265) * C154002) * C153897 +
           (C39373 * C153648 + (C31264 + C31263 + C31262) * C154002) *
               C154037) *
              C2293 +
          ((C31275 * C154002 + C39374 * C153648) * C154037 +
           ((C31270 + C31269 + C31268) * C154002 +
            (C31271 + C31272 + C31273) * C153648) *
               C153897) *
              C2294 -
          (((C24216 * C31182 - C24217 * C31179 - C24216 * C31183 +
             C154071 * C31185 + C24214 * C9204 - C24215 * C9200 -
             C24214 * C9205 + C24207 * C9209 + C24212 * C7746 - C24213 * C7741 -
             C24212 * C7747 + C24206 * C7753) *
                C153648 +
            (C34061 + C34060 + C34059) * C154002) *
               C153897 +
           ((C31273 + C31272 + C31271) * C153648 + C34051 * C154002) *
               C154037) *
              C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[358] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C11433 +
             C205 * C11434 + C206 * C11435 + C207 * C154036) *
                C154037 +
            (C15647 + C15648 + C15649 + C15650) * C153897) *
               C154094 -
           ((C15651 + C15652 + C15653 + C15654) * C153897 +
            (C15650 + C15649 + C15648 + C15647) * C154037) *
               C154095 +
           ((C15654 + C15653 + C15652 + C15651) * C154037 +
            (C18011 + C18012 + C18013 + C18014) * C153897) *
               C2602) *
              C153695 * C154013 +
          (((C15655 + C15656 + C15657 + C15658) * C154037 +
            (C15659 + C15660 + C15661 + C15662) * C153897) *
               C154095 -
           ((C15658 + C15657 + C15656 + C15655) * C153897 +
            (C208 * C154036 + C207 * C11435 + C206 * C11434 + C205 * C11433) *
                C154037) *
               C154094 -
           (((C134 * C2301 - C135 * C2296 - C134 * C2302 + C153792 * C2311) *
                 C154036 +
             C7824 * C11435 + C7819 * C11434 + C7820 * C11433) *
                C153897 +
            (C15662 + C15661 + C15660 + C15659) * C154037) *
               C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154002 +
             (C24291 + C24292 + C24293) * C153648) *
                C154037 +
            ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
                C153897) *
               C154094 -
           ((C31248 * C153648 + (C31267 + C31266 + C31265) * C154002) *
                C153897 +
            (C39373 * C153648 + (C31264 + C31263 + C31262) * C154002) *
                C154037) *
               C154095 +
           ((C31275 * C154002 + C39374 * C153648) * C154037 +
            ((C31270 + C31269 + C31268) * C154002 +
             (C31271 + C31272 + C31273) * C153648) *
                C153897) *
               C2602) *
              C153695 * C154013 +
          (((C39372 * C154002 + C39956 * C153648) * C154037 +
            (C39374 * C154002 + (C24908 + C24909 + C24910) * C153648) *
                C153897) *
               C154095 -
           ((C25383 * C153648 + C39373 * C154002) * C153897 +
            ((C24296 + C24295 + C24294) * C153648 +
             (C24293 + C24292 + C24291) * C154002) *
                C154037) *
               C154094 -
           (((C24216 * C6369 - C24217 * C6363 - C24216 * C6370 +
              C154071 * C6381 + C24214 * C6371 - C24215 * C6364 -
              C24214 * C6372 + C24207 * C6382 + C24212 * C2305 -
              C24213 * C2298 - C24212 * C2306 + C24206 * C2313) *
                 C153648 +
             (C31273 + C31272 + C31271) * C154002) *
                C153897 +
            ((C24910 + C24909 + C24908) * C153648 + C31248 * C154002) *
                C154037) *
               C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[359] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C11433 +
             C205 * C11434 + C206 * C11435 + C207 * C154036) *
                C154037 +
            (C15647 + C15648 + C15649 + C15650) * C153897) *
               C2086 -
           ((C15651 + C15652 + C15653 + C15654) * C153897 +
            (C15650 + C15649 + C15648 + C15647) * C154037) *
               C153775) *
              C153695 * C1281 +
          (((C15655 + C15656 + C15657 + C15658) * C154037 +
            (C15659 + C15660 + C15661 + C15662) * C153897) *
               C153775 -
           ((C15658 + C15657 + C15656 + C15655) * C153897 +
            (C208 * C154036 + C207 * C11435 + C206 * C11434 + C205 * C11433) *
                C154037) *
               C2086) *
              C153695 * C1282 +
          (((C206 * C11433 + C207 * C11434 + C208 * C11435 + C209 * C154036) *
                C154037 +
            (C16051 + C16052 + C16053 + C16054) * C153897) *
               C2086 -
           (((C134 * C600 - C135 * C577 - C134 * C601 + C153792 * C613) *
                 C154036 +
             C670 * C11435 + C669 * C11434 + C668 * C11433) *
                C153897 +
            (C16054 + C16053 + C16052 + C16051) * C154037) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) *
                 C11433 +
             C205 * C11434 + C206 * C11435 + C207 * C154036) *
                C154037 +
            (C15647 + C15648 + C15649 + C15650) * C153897) *
               C2086 -
           ((C15651 + C15652 + C15653 + C15654) * C153897 +
            (C15650 + C15649 + C15648 + C15647) * C154037) *
               C153775) *
              C332 +
          (((C16313 + C16314 + C16315 + C16316) * C154037 +
            (C16839 + C16840 + C16841 + C16842) * C153897) *
               C153775 -
           ((C16316 + C16315 + C16314 + C16313) * C153897 +
            (C435 * C154036 + C436 * C11435 + C437 * C11434 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C11433) *
                C154037) *
               C2086) *
              C333 +
          ((((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) *
                 C11433 +
             C438 * C11434 + C439 * C11435 + C440 * C154036) *
                C154037 +
            (C17489 + C17490 + C17491 + C17492) * C153897) *
               C2086 -
           (((C134 * C3517 - C135 * C3510 - C134 * C3518 + C153792 * C3522) *
                 C154036 +
             C7522 * C11435 + C7521 * C11434 + C9967 * C11433) *
                C153897 +
            (C17492 + C17491 + C17490 + C17489) * C154037) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154002 +
             (C24291 + C24292 + C24293) * C153648) *
                C154037 +
            ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
                C153897) *
               C2086 -
           ((C31248 * C153648 + (C31267 + C31266 + C31265) * C154002) *
                C153897 +
            (C39373 * C153648 + (C31264 + C31263 + C31262) * C154002) *
                C154037) *
               C153775) *
              C153695 * C1281 +
          (((C39372 * C154002 + C39956 * C153648) * C154037 +
            (C39374 * C154002 + (C24908 + C24909 + C24910) * C153648) *
                C153897) *
               C153775 -
           ((C25383 * C153648 + C39373 * C154002) * C153897 +
            ((C24296 + C24295 + C24294) * C153648 +
             (C24293 + C24292 + C24291) * C154002) *
                C154037) *
               C2086) *
              C153695 * C1282 +
          (((C24305 * C154002 + (C24299 + C24298 + C24297) * C153648) *
                C154037 +
            (C39956 * C154002 + (C25390 + C25391 + C25392) * C153648) *
                C153897) *
               C2086 -
           (((C24216 * C3517 - C24217 * C3510 - C24216 * C3518 +
              C154071 * C3522 + C24214 * C1520 - C24215 * C1514 -
              C24214 * C1521 + C24207 * C1529 + C24212 * C594 - C24213 * C574 -
              C24212 * C595 + C24206 * C610) *
                 C153648 +
             (C24910 + C24909 + C24908) * C154002) *
                C153897 +
            ((C25392 + C25391 + C25390) * C153648 + C25383 * C154002) *
                C154037) *
               C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154002 +
             (C24291 + C24292 + C24293) * C153648) *
                C154037 +
            ((C31262 + C31263 + C31264) * C154002 + C39372 * C153648) *
                C153897) *
               C2086 -
           ((C31248 * C153648 + (C31267 + C31266 + C31265) * C154002) *
                C153897 +
            (C39373 * C153648 + (C31264 + C31263 + C31262) * C154002) *
                C154037) *
               C153775) *
              C332 +
          ((((C32061 + C32062 + C32063) * C154002 + C40345 * C153648) *
                C154037 +
            ((C32064 + C32065 + C32066) * C154002 +
             (C32067 + C32068 + C32069) * C153648) *
                C153897) *
               C153775 -
           ((C40346 * C153648 + (C32063 + C32062 + C32061) * C154002) *
                C153897 +
            ((C24600 + C24601 + C24602) * C153648 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C154002) *
                C154037) *
               C2086) *
              C333 +
          ((((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
              C24214 * C1384 - C24215 * C1375 - C24214 * C1385 +
              C24207 * C1390 + C24216 * C3193 - C24217 * C3189 -
              C24216 * C3194 + C154071 * C3201) *
                 C154002 +
             (C24603 + C24604 + C24605) * C153648) *
                C154037 +
            ((C33442 + C33443 + C33444) * C154002 +
             (C39076 + C39077 + C39078) * C153648) *
                C153897) *
               C2086 -
           (((C24216 * C28694 - C24217 * C28691 - C24216 * C28695 +
              C154071 * C28697 + C24214 * C5036 - C24215 * C5032 -
              C24214 * C5037 + C24207 * C5041 + C24212 * C3513 -
              C24213 * C3508 - C24212 * C3514 + C24206 * C3520) *
                 C153648 +
             (C33447 + C33446 + C33445) * C154002) *
                C153897 +
            ((C39078 + C39077 + C39076) * C153648 +
             (C33444 + C33443 + C33442) * C154002) *
                C154037) *
               C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[360] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C153711 * C154021 -
           (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) * C122) *
               C153810 * C153711 * C153747) *
              C154090 +
          ((C437 * C122 + C436 * C123 + C435 * C124 + C434 * C125 +
            C808 * C126) *
               C153810 * C153711 * C153747 -
           (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
            C205 * C122) *
               C153810 * C153711 * C154021) *
              C154091 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125 +
            C210 * C126) *
               C153810 * C153711 * C154021 -
           ((C134 * C798 - C135 * C797 - C134 * C799 + C153792 * C800) * C126 +
            C808 * C125 + C434 * C124 + C435 * C123 + C436 * C122) *
               C153810 * C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C153711 * C154021 -
           (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C2874) *
               C153810 * C153711 * C153747) *
              C154090 +
          (((C3283 + C3282 + C3281) * C2874 + (C3280 + C3279 + C3278) * C2875 +
            (C3846 + C3847 + C3848) * C154058) *
               C153810 * C153711 * C153747 -
           (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
            (C2958 + C2957 + C2956) * C2874) *
               C153810 * C153711 * C154021) *
              C154091 +
          ((C2970 * C2874 + (C2964 + C2963 + C2962) * C2875 +
            (C2965 + C2966 + C2967) * C154058) *
               C153810 * C153711 * C154021 -
           ((C2881 * C1376 - C2882 * C1371 - C2881 * C1377 + C154071 * C1386 +
             C2879 * C367 - C2880 * C346 - C2879 * C368 + C154097 * C382 +
             C2877 * C349 - C2878 * C337 - C2877 * C350 + C154109 * C373) *
                C154058 +
            (C3848 + C3847 + C3846) * C2875 + C3839 * C2874) *
               C153810 * C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C153711 * C154021 -
           (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C153711 * C153747) *
              C154090 +
          (((C24602 + C24601 + C24600) * C154106 +
            (C24599 + C24598 + C24597) * C154087 +
            (C25149 + C25150 + C25151) * C154058) *
               C153810 * C153711 * C153747 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C153711 * C154021) *
              C154091 +
          ((C24305 * C154106 + (C24299 + C24298 + C24297) * C154087 +
            (C24300 + C24301 + C24302) * C154058) *
               C153810 * C153711 * C154021 -
           ((C24216 * C1376 - C24217 * C1371 - C24216 * C1377 +
             C154071 * C1386 + C24214 * C367 - C24215 * C346 - C24214 * C368 +
             C24207 * C382 + C24212 * C349 - C24213 * C337 - C24212 * C350 +
             C24206 * C373) *
                C154058 +
            (C25151 + C25150 + C25149) * C154087 + C25142 * C154106) *
               C153810 * C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C153711 * C154021 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C153711 * C153747) *
              C154090 +
          ((C28428 * C355 - C28429 * C340 - C28428 * C356 + C28422 * C376 +
            C28430 * C361 - C28431 * C343 - C28430 * C362 + C28423 * C379 +
            C28432 * C1382 - C28433 * C1374 - C28432 * C1383 + C28424 * C1389 +
            C28434 * C3195 - C28435 * C3190 - C28434 * C3196 + C28425 * C3202 +
            C28436 * C4806 - C28437 * C4802 - C28436 * C4807 + C28426 * C4811) *
               C153638 * C153810 * C153711 * C153747 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C153711 * C154021) *
              C154091 +
          ((C28428 * C148 - C28429 * C138 - C28428 * C149 + C28422 * C162 +
            C28430 * C353 - C28431 * C339 - C28430 * C354 + C28423 * C375 +
            C28432 * C363 - C28433 * C344 - C28432 * C364 + C28424 * C380 +
            C28434 * C1380 - C28435 * C1373 - C28434 * C1381 + C28425 * C1388 +
            C28436 * C3197 - C28437 * C3191 - C28436 * C3198 + C28426 * C3203) *
               C153638 * C153810 * C153711 * C154021 -
           (C28436 * C4804 - C28437 * C4801 - C28436 * C4805 + C28426 * C4810 +
            C28434 * C3197 - C28435 * C3191 - C28434 * C3198 + C28425 * C3203 +
            C28432 * C1380 - C28433 * C1373 - C28432 * C1381 + C28424 * C1388 +
            C28430 * C363 - C28431 * C344 - C28430 * C364 + C28423 * C380 +
            C28428 * C353 - C28429 * C339 - C28428 * C354 + C28422 * C375) *
               C153638 * C153810 * C153711 * C153747) *
              C796)) /
            (p * q * std::sqrt(p + q));
    d2ee[361] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                C153810 * C154022 -
            (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
             (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) *
                 C122) *
                C153810 * C153775) *
               C154021 +
           (((C134 * C1111 - C135 * C1105 - C134 * C1112 + C153792 * C1123) *
                 C122 +
             C1154 * C123 + C1155 * C124 + C1156 * C125 + C1157 * C126) *
                C153810 * C153775 -
            (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C122) *
                C153810 * C154022) *
               C153747) *
              C335 +
          (((C666 * C122 + C665 * C123 + C664 * C124 + C663 * C125 +
             C943 * C126) *
                C153810 * C153775 -
            (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
             C205 * C122) *
                C153810 * C154022) *
               C154021 +
           ((C437 * C122 + C436 * C123 + C435 * C124 + C434 * C125 +
             C808 * C126) *
                C153810 * C154022 -
            ((C134 * C1121 - C135 * C1110 - C134 * C1122 + C153792 * C1128) *
                 C126 +
             C1157 * C125 + C1156 * C124 + C1155 * C123 + C1154 * C122) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C2874 +
             (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
                C153810 * C154022 -
            (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
             (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
              C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
              C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                 C2874) *
                C153810 * C153775) *
               C154021 +
           (((C2877 * C1111 - C2878 * C1105 - C2877 * C1112 + C154109 * C1123 +
              C2879 * C1957 - C2880 * C1948 - C2879 * C1958 + C154097 * C1963 +
              C2881 * C4383 - C2882 * C4379 - C2881 * C4384 + C154071 * C4391) *
                 C2874 +
             (C4432 + C4433 + C4434) * C2875 +
             (C4435 + C4436 + C4437) * C154058) *
                C153810 * C153775 -
            (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C2874) *
                C153810 * C154022) *
               C153747) *
              C335 +
          ((((C3601 + C3600 + C3599) * C2874 + (C3598 + C3597 + C3596) * C2875 +
             (C4087 + C4088 + C4089) * C154058) *
                C153810 * C153775 -
            (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
             (C2958 + C2957 + C2956) * C2874) *
                C153810 * C154022) *
               C154021 +
           (((C3283 + C3282 + C3281) * C2874 + (C3280 + C3279 + C3278) * C2875 +
             (C3846 + C3847 + C3848) * C154058) *
                C153810 * C154022 -
            ((C2881 * C4389 - C2882 * C4382 - C2881 * C4390 + C154071 * C4394 +
              C2879 * C1951 - C2880 * C1945 - C2879 * C1952 + C154097 * C1960 +
              C2877 * C1117 - C2878 * C1108 - C2877 * C1118 + C154109 * C1126) *
                 C154058 +
             (C4437 + C4436 + C4435) * C2875 +
             (C4434 + C4433 + C4432) * C2874) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154106 +
             (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
                C153810 * C154022 -
            (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
             (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
              C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
              C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
              C24212 * C587 + C24206 * C606) *
                 C154106) *
                C153810 * C153775) *
               C154021 +
           (((C24212 * C1111 - C24213 * C1105 - C24212 * C1112 +
              C24206 * C1123 + C24214 * C1957 - C24215 * C1948 -
              C24214 * C1958 + C24207 * C1963 + C24216 * C4383 -
              C24217 * C4379 - C24216 * C4384 + C154071 * C4391) *
                 C154106 +
             (C25719 + C25720 + C25721) * C154087 +
             (C25722 + C25723 + C25724) * C154058) *
                C153810 * C153775 -
            (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C154106) *
                C153810 * C154022) *
               C153747) *
              C335 +
          ((((C24904 + C24903 + C24902) * C154106 +
             (C24901 + C24900 + C24899) * C154087 +
             (C25390 + C25391 + C25392) * C154058) *
                C153810 * C153775 -
            (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
             (C24293 + C24292 + C24291) * C154106) *
                C153810 * C154022) *
               C154021 +
           (((C24602 + C24601 + C24600) * C154106 +
             (C24599 + C24598 + C24597) * C154087 +
             (C25149 + C25150 + C25151) * C154058) *
                C153810 * C154022 -
            ((C24216 * C4389 - C24217 * C4382 - C24216 * C4390 +
              C154071 * C4394 + C24214 * C1951 - C24215 * C1945 -
              C24214 * C1952 + C24207 * C1960 + C24212 * C1117 -
              C24213 * C1108 - C24212 * C1118 + C24206 * C1126) *
                 C154058 +
             (C25724 + C25723 + C25722) * C154087 +
             (C25721 + C25720 + C25719) * C154106) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
             C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
             C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
             C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
             C28436 * C3193 - C28437 * C3189 - C28436 * C3194 +
             C28426 * C3201) *
                C153638 * C153810 * C154022 -
            (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
             C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
             C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
             C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
             C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
                C153638 * C153810 * C153775) *
               C154021 +
           ((C28428 * C1111 - C28429 * C1105 - C28428 * C1112 + C28422 * C1123 +
             C28430 * C1957 - C28431 * C1948 - C28430 * C1958 + C28423 * C1963 +
             C28432 * C4383 - C28433 * C4379 - C28432 * C4384 + C28424 * C4391 +
             C28434 * C5776 - C28435 * C5771 - C28434 * C5777 + C28425 * C5780 +
             C28436 * C29106 - C28437 * C29104 - C28436 * C29107 +
             C28426 * C29110) *
                C153638 * C153810 * C153775 -
            (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
             C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
             C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
             C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
             C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
                C153638 * C153810 * C154022) *
               C153747) *
              C335 +
          (((C28428 * C584 - C28429 * C569 - C28428 * C585 + C28422 * C605 +
             C28430 * C1113 - C28431 * C1106 - C28430 * C1114 + C28423 * C1124 +
             C28432 * C1955 - C28433 * C1947 - C28432 * C1956 + C28424 * C1962 +
             C28434 * C4385 - C28435 * C4380 - C28434 * C4386 + C28425 * C4392 +
             C28436 * C5774 - C28437 * C5770 - C28436 * C5775 +
             C28426 * C5779) *
                C153638 * C153810 * C153775 -
            (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
             C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
             C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
             C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
             C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
                C153638 * C153810 * C154022) *
               C154021 +
           ((C28428 * C355 - C28429 * C340 - C28428 * C356 + C28422 * C376 +
             C28430 * C361 - C28431 * C343 - C28430 * C362 + C28423 * C379 +
             C28432 * C1382 - C28433 * C1374 - C28432 * C1383 + C28424 * C1389 +
             C28434 * C3195 - C28435 * C3190 - C28434 * C3196 + C28425 * C3202 +
             C28436 * C4806 - C28437 * C4802 - C28436 * C4807 +
             C28426 * C4811) *
                C153638 * C153810 * C154022 -
            (C28436 * C29108 - C28437 * C29105 - C28436 * C29109 +
             C28426 * C29111 + C28434 * C5774 - C28435 * C5770 -
             C28434 * C5775 + C28425 * C5779 + C28432 * C4385 - C28433 * C4380 -
             C28432 * C4386 + C28424 * C4392 + C28430 * C1955 - C28431 * C1947 -
             C28430 * C1956 + C28423 * C1962 + C28428 * C1113 - C28429 * C1106 -
             C28428 * C1114 + C28422 * C1124) *
                C153638 * C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[362] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C153711 * C332 -
           (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) * C122) *
               C153810 * C153711 * C333 +
           ((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) * C122 +
            C438 * C123 + C439 * C124 + C440 * C125 + C441 * C126) *
               C153810 * C153711 * C334) *
              C335 +
          ((C437 * C122 + C436 * C123 + C435 * C124 + C434 * C125 +
            (C134 * C369 - C135 * C347 - C134 * C370 + C153792 * C383) * C126) *
               C153810 * C153711 * C333 -
           (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
            C205 * C122) *
               C153810 * C153711 * C332 -
           ((C134 * C371 - C135 * C348 - C134 * C372 + C153792 * C384) * C126 +
            C441 * C125 + C440 * C124 + C439 * C123 + C438 * C122) *
               C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
           C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
              C153810 * C153711 * C153695 * C130 -
          (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
           C205 * C122) *
              C153810 * C153711 * C153695 * C131 +
          (C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125 +
           C210 * C126) *
              C153810 * C153711 * C153695 * C132 -
          ((C134 * C158 - C135 * C143 - C134 * C159 + C153792 * C167) * C126 +
           C210 * C125 + C209 * C124 + C208 * C123 + C207 * C122) *
              C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C563 -
           (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
            (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) * C122) *
               C153810 * C564 +
           ((C134 * C588 - C135 * C571 - C134 * C589 + C153792 * C607) * C122 +
            C667 * C123 + C668 * C124 + C669 * C125 + C670 * C126) *
               C153810 * C565) *
              C153695 * C335 +
          ((C666 * C122 + C665 * C123 + C664 * C124 + C663 * C125 +
            (C134 * C598 - C135 * C576 - C134 * C599 + C153792 * C612) * C126) *
               C153810 * C564 -
           (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
            C205 * C122) *
               C153810 * C563 -
           ((C134 * C600 - C135 * C577 - C134 * C601 + C153792 * C613) * C126 +
            C670 * C125 + C669 * C124 + C668 * C123 + C667 * C122) *
               C153810 * C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
            C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
            C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
               C2874 +
           (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
              C153810 * C153711 * C153695 * C130 -
          (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
           (C2958 + C2957 + C2956) * C2874) *
              C153810 * C153711 * C153695 * C131 +
          (C2970 * C2874 + (C2964 + C2963 + C2962) * C2875 +
           (C2965 + C2966 + C2967) * C154058) *
              C153810 * C153711 * C153695 * C132 -
          ((C2881 * C371 - C2882 * C348 - C2881 * C372 + C154071 * C384 +
            C2879 * C369 - C2880 * C347 - C2879 * C370 + C154097 * C383 +
            C2877 * C154 - C2878 * C141 - C2877 * C155 + C154109 * C165) *
               C154058 +
           (C2967 + C2966 + C2965) * C2875 + C2971 * C2874) *
              C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C153711 * C332 -
           ((C3278 + C3279 + C3280) * C154058 +
            (C3281 + C3282 + C3283) * C2875 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C2874) *
               C153810 * C153711 * C333 +
           ((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
             C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
             C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                C2874 +
            (C3284 + C3285 + C3286) * C2875 +
            (C3287 + C3288 + C3289) * C154058) *
               C153810 * C153711 * C334) *
              C335 +
          (((C3283 + C3282 + C3281) * C2874 + (C3280 + C3279 + C3278) * C2875 +
            (C2877 * C351 - C2878 * C338 - C2877 * C352 + C154109 * C374 +
             C2879 * C365 - C2880 * C345 - C2879 * C366 + C154097 * C381 +
             C2881 * C1378 - C2882 * C1372 - C2881 * C1379 + C154071 * C1387) *
                C154058) *
               C153810 * C153711 * C333 -
           (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
            (C2958 + C2957 + C2956) * C2874) *
               C153810 * C153711 * C332 -
           ((C2881 * C3199 - C2882 * C3192 - C2881 * C3200 + C154071 * C3204 +
             C2879 * C1378 - C2880 * C1372 - C2879 * C1379 + C154097 * C1387 +
             C2877 * C365 - C2878 * C345 - C2877 * C366 + C154109 * C381) *
                C154058 +
            (C3289 + C3288 + C3287) * C2875 + (C3286 + C3285 + C3284) * C2874) *
               C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C563 -
           ((C3596 + C3597 + C3598) * C154058 +
            (C3599 + C3600 + C3601) * C2875 +
            (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
             C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
             C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                C2874) *
               C153810 * C564 +
           ((C2877 * C588 - C2878 * C571 - C2877 * C589 + C154109 * C607 +
             C2879 * C1526 - C2880 * C1517 - C2879 * C1527 + C154097 * C1532 +
             C2881 * C3511 - C2882 * C3507 - C2881 * C3512 + C154071 * C3519) *
                C2874 +
            (C3602 + C3603 + C3604) * C2875 +
            (C3605 + C3606 + C3607) * C154058) *
               C153810 * C565) *
              C153695 * C335 +
          (((C3601 + C3600 + C3599) * C2874 + (C3598 + C3597 + C3596) * C2875 +
            (C2877 * C580 - C2878 * C567 - C2877 * C581 + C154109 * C603 +
             C2879 * C1117 - C2880 * C1108 - C2879 * C1118 + C154097 * C1126 +
             C2881 * C1951 - C2882 * C1945 - C2881 * C1952 + C154071 * C1960) *
                C154058) *
               C153810 * C564 -
           (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
            (C2958 + C2957 + C2956) * C2874) *
               C153810 * C563 -
           ((C2881 * C3517 - C2882 * C3510 - C2881 * C3518 + C154071 * C3522 +
             C2879 * C1520 - C2880 * C1514 - C2879 * C1521 + C154097 * C1529 +
             C2877 * C594 - C2878 * C574 - C2877 * C595 + C154109 * C610) *
                C154058 +
            (C3607 + C3606 + C3605) * C2875 + (C3604 + C3603 + C3602) * C2874) *
               C153810 * C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
            C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
            C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
               C154106 +
           (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
              C153810 * C153711 * C153695 * C130 -
          (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
           (C24293 + C24292 + C24291) * C154106) *
              C153810 * C153711 * C153695 * C131 +
          (C24305 * C154106 + (C24299 + C24298 + C24297) * C154087 +
           (C24300 + C24301 + C24302) * C154058) *
              C153810 * C153711 * C153695 * C132 -
          ((C24216 * C371 - C24217 * C348 - C24216 * C372 + C154071 * C384 +
            C24214 * C369 - C24215 * C347 - C24214 * C370 + C24207 * C383 +
            C24212 * C154 - C24213 * C141 - C24212 * C155 + C24206 * C165) *
               C154058 +
           (C24302 + C24301 + C24300) * C154087 + C24306 * C154106) *
              C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C153711 * C332 -
           ((C24597 + C24598 + C24599) * C154058 +
            (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C153711 * C333 +
           ((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C154106 +
            (C24603 + C24604 + C24605) * C154087 +
            (C24606 + C24607 + C24608) * C154058) *
               C153810 * C153711 * C334) *
              C335 +
          (((C24602 + C24601 + C24600) * C154106 +
            (C24599 + C24598 + C24597) * C154087 +
            (C24212 * C351 - C24213 * C338 - C24212 * C352 + C24206 * C374 +
             C24214 * C365 - C24215 * C345 - C24214 * C366 + C24207 * C381 +
             C24216 * C1378 - C24217 * C1372 - C24216 * C1379 +
             C154071 * C1387) *
                C154058) *
               C153810 * C153711 * C333 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C153711 * C332 -
           ((C24216 * C3199 - C24217 * C3192 - C24216 * C3200 +
             C154071 * C3204 + C24214 * C1378 - C24215 * C1372 -
             C24214 * C1379 + C24207 * C1387 + C24212 * C365 - C24213 * C345 -
             C24212 * C366 + C24206 * C381) *
                C154058 +
            (C24608 + C24607 + C24606) * C154087 +
            (C24605 + C24604 + C24603) * C154106) *
               C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C563 -
           ((C24899 + C24900 + C24901) * C154058 +
            (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C564 +
           ((C24212 * C588 - C24213 * C571 - C24212 * C589 + C24206 * C607 +
             C24214 * C1526 - C24215 * C1517 - C24214 * C1527 + C24207 * C1532 +
             C24216 * C3511 - C24217 * C3507 - C24216 * C3512 +
             C154071 * C3519) *
                C154106 +
            (C24905 + C24906 + C24907) * C154087 +
            (C24908 + C24909 + C24910) * C154058) *
               C153810 * C565) *
              C153695 * C335 +
          (((C24904 + C24903 + C24902) * C154106 +
            (C24901 + C24900 + C24899) * C154087 +
            (C24212 * C580 - C24213 * C567 - C24212 * C581 + C24206 * C603 +
             C24214 * C1117 - C24215 * C1108 - C24214 * C1118 + C24207 * C1126 +
             C24216 * C1951 - C24217 * C1945 - C24216 * C1952 +
             C154071 * C1960) *
                C154058) *
               C153810 * C564 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C563 -
           ((C24216 * C3517 - C24217 * C3510 - C24216 * C3518 +
             C154071 * C3522 + C24214 * C1520 - C24215 * C1514 -
             C24214 * C1521 + C24207 * C1529 + C24212 * C594 - C24213 * C574 -
             C24212 * C595 + C24206 * C610) *
                C154058 +
            (C24910 + C24909 + C24908) * C154087 +
            (C24907 + C24906 + C24905) * C154106) *
               C153810 * C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
           C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
           C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
           C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
           C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
              C153638 * C153810 * C153711 * C153695 * C130 -
          (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
           C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
           C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
           C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
           C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
              C153638 * C153810 * C153711 * C153695 * C131 +
          (C28428 * C148 - C28429 * C138 - C28428 * C149 + C28422 * C162 +
           C28430 * C353 - C28431 * C339 - C28430 * C354 + C28423 * C375 +
           C28432 * C363 - C28433 * C344 - C28432 * C364 + C28424 * C380 +
           C28434 * C1380 - C28435 * C1373 - C28434 * C1381 + C28425 * C1388 +
           C28436 * C3197 - C28437 * C3191 - C28436 * C3198 + C28426 * C3203) *
              C153638 * C153810 * C153711 * C153695 * C132 -
          (C28436 * C3199 - C28437 * C3192 - C28436 * C3200 + C28426 * C3204 +
           C28434 * C1378 - C28435 * C1372 - C28434 * C1379 + C28425 * C1387 +
           C28432 * C365 - C28433 * C345 - C28432 * C366 + C28424 * C381 +
           C28430 * C351 - C28431 * C338 - C28430 * C352 + C28423 * C374 +
           C28428 * C150 - C28429 * C139 - C28428 * C151 + C28422 * C163) *
              C153638 * C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C153711 * C332 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C153711 * C333 +
           (C28428 * C359 - C28429 * C342 - C28428 * C360 + C28422 * C378 +
            C28430 * C1384 - C28431 * C1375 - C28430 * C1385 + C28423 * C1390 +
            C28432 * C3193 - C28433 * C3189 - C28432 * C3194 + C28424 * C3201 +
            C28434 * C4808 - C28435 * C4803 - C28434 * C4809 + C28425 * C4812 +
            C28436 * C28562 - C28437 * C28560 - C28436 * C28563 +
            C28426 * C28566) *
               C153638 * C153810 * C153711 * C334) *
              C335 +
          ((C28428 * C355 - C28429 * C340 - C28428 * C356 + C28422 * C376 +
            C28430 * C361 - C28431 * C343 - C28430 * C362 + C28423 * C379 +
            C28432 * C1382 - C28433 * C1374 - C28432 * C1383 + C28424 * C1389 +
            C28434 * C3195 - C28435 * C3190 - C28434 * C3196 + C28425 * C3202 +
            C28436 * C4806 - C28437 * C4802 - C28436 * C4807 + C28426 * C4811) *
               C153638 * C153810 * C153711 * C333 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C153711 * C332 -
           (C28436 * C28564 - C28437 * C28561 - C28436 * C28565 +
            C28426 * C28567 + C28434 * C4806 - C28435 * C4802 - C28434 * C4807 +
            C28425 * C4811 + C28432 * C3195 - C28433 * C3190 - C28432 * C3196 +
            C28424 * C3202 + C28430 * C1382 - C28431 * C1374 - C28430 * C1383 +
            C28423 * C1389 + C28428 * C361 - C28429 * C343 - C28428 * C362 +
            C28422 * C379) *
               C153638 * C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C563 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C564 +
           (C28428 * C588 - C28429 * C571 - C28428 * C589 + C28422 * C607 +
            C28430 * C1526 - C28431 * C1517 - C28430 * C1527 + C28423 * C1532 +
            C28432 * C3511 - C28433 * C3507 - C28432 * C3512 + C28424 * C3519 +
            C28434 * C5038 - C28435 * C5033 - C28434 * C5039 + C28425 * C5042 +
            C28436 * C28692 - C28437 * C28690 - C28436 * C28693 +
            C28426 * C28696) *
               C153638 * C153810 * C565) *
              C153695 * C335 +
          ((C28428 * C584 - C28429 * C569 - C28428 * C585 + C28422 * C605 +
            C28430 * C1113 - C28431 * C1106 - C28430 * C1114 + C28423 * C1124 +
            C28432 * C1955 - C28433 * C1947 - C28432 * C1956 + C28424 * C1962 +
            C28434 * C4385 - C28435 * C4380 - C28434 * C4386 + C28425 * C4392 +
            C28436 * C5774 - C28437 * C5770 - C28436 * C5775 + C28426 * C5779) *
               C153638 * C153810 * C564 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C563 -
           (C28436 * C28694 - C28437 * C28691 - C28436 * C28695 +
            C28426 * C28697 + C28434 * C5036 - C28435 * C5032 - C28434 * C5037 +
            C28425 * C5041 + C28432 * C3513 - C28433 * C3508 - C28432 * C3514 +
            C28424 * C3520 + C28430 * C1524 - C28431 * C1516 - C28430 * C1525 +
            C28423 * C1531 + C28428 * C590 - C28429 * C572 - C28428 * C591 +
            C28422 * C608) *
               C153638 * C153810 * C565) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[363] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C154022 -
           (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
            (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) * C122) *
               C153810 * C153775) *
              C153695 * C154090 +
          ((C666 * C122 + C665 * C123 + C664 * C124 + C663 * C125 +
            C943 * C126) *
               C153810 * C153775 -
           (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
            C205 * C122) *
               C153810 * C154022) *
              C153695 * C154091 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125 +
            C210 * C126) *
               C153810 * C154022 -
           ((C134 * C933 - C135 * C932 - C134 * C934 + C153792 * C935) * C126 +
            C943 * C125 + C663 * C124 + C664 * C123 + C665 * C122) *
               C153810 * C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C154022 -
           (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
            (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
             C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
             C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                C2874) *
               C153810 * C153775) *
              C153695 * C154090 +
          (((C3601 + C3600 + C3599) * C2874 + (C3598 + C3597 + C3596) * C2875 +
            (C4087 + C4088 + C4089) * C154058) *
               C153810 * C153775 -
           (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
            (C2958 + C2957 + C2956) * C2874) *
               C153810 * C154022) *
              C153695 * C154091 +
          ((C2970 * C2874 + (C2964 + C2963 + C2962) * C2875 +
            (C2965 + C2966 + C2967) * C154058) *
               C153810 * C154022 -
           ((C2881 * C1949 - C2882 * C1944 - C2881 * C1950 + C154071 * C1959 +
             C2879 * C1119 - C2880 * C1109 - C2879 * C1120 + C154097 * C1127 +
             C2877 * C578 - C2878 * C566 - C2877 * C579 + C154109 * C602) *
                C154058 +
            (C4089 + C4088 + C4087) * C2875 + C4080 * C2874) *
               C153810 * C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C154022 -
           (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C153775) *
              C153695 * C154090 +
          (((C24904 + C24903 + C24902) * C154106 +
            (C24901 + C24900 + C24899) * C154087 +
            (C25390 + C25391 + C25392) * C154058) *
               C153810 * C153775 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C154022) *
              C153695 * C154091 +
          ((C24305 * C154106 + (C24299 + C24298 + C24297) * C154087 +
            (C24300 + C24301 + C24302) * C154058) *
               C153810 * C154022 -
           ((C24216 * C1949 - C24217 * C1944 - C24216 * C1950 +
             C154071 * C1959 + C24214 * C1119 - C24215 * C1109 -
             C24214 * C1120 + C24207 * C1127 + C24212 * C578 - C24213 * C566 -
             C24212 * C579 + C24206 * C602) *
                C154058 +
            (C25392 + C25391 + C25390) * C154087 + C25383 * C154106) *
               C153810 * C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C154022 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C153775) *
              C153695 * C154090 +
          ((C28428 * C584 - C28429 * C569 - C28428 * C585 + C28422 * C605 +
            C28430 * C1113 - C28431 * C1106 - C28430 * C1114 + C28423 * C1124 +
            C28432 * C1955 - C28433 * C1947 - C28432 * C1956 + C28424 * C1962 +
            C28434 * C4385 - C28435 * C4380 - C28434 * C4386 + C28425 * C4392 +
            C28436 * C5774 - C28437 * C5770 - C28436 * C5775 + C28426 * C5779) *
               C153638 * C153810 * C153775 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C154022) *
              C153695 * C154091 +
          ((C28428 * C148 - C28429 * C138 - C28428 * C149 + C28422 * C162 +
            C28430 * C353 - C28431 * C339 - C28430 * C354 + C28423 * C375 +
            C28432 * C363 - C28433 * C344 - C28432 * C364 + C28424 * C380 +
            C28434 * C1380 - C28435 * C1373 - C28434 * C1381 + C28425 * C1388 +
            C28436 * C3197 - C28437 * C3191 - C28436 * C3198 + C28426 * C3203) *
               C153638 * C153810 * C154022 -
           (C28436 * C5772 - C28437 * C5769 - C28436 * C5773 + C28426 * C5778 +
            C28434 * C4387 - C28435 * C4381 - C28434 * C4388 + C28425 * C4393 +
            C28432 * C1953 - C28433 * C1946 - C28432 * C1954 + C28424 * C1961 +
            C28430 * C1115 - C28431 * C1107 - C28430 * C1116 + C28423 * C1125 +
            C28428 * C582 - C28429 * C568 - C28428 * C583 + C28422 * C604) *
               C153638 * C153810 * C153775) *
              C153695 * C796)) /
            (p * q * std::sqrt(p + q));
    d2ee[364] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
           C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
              C153810 * C153711 * C153695 * C130 -
          (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
           C205 * C122) *
              C153810 * C153711 * C153695 * C131 +
          (C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125 +
           C210 * C126) *
              C153810 * C153711 * C153695 * C132 -
          ((C134 * C158 - C135 * C143 - C134 * C159 + C153792 * C167) * C126 +
           C210 * C125 + C209 * C124 + C208 * C123 + C207 * C122) *
              C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C153711 * C332 -
           (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) * C122) *
               C153810 * C153711 * C333 +
           ((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) * C122 +
            C438 * C123 + C439 * C124 + C440 * C125 + C441 * C126) *
               C153810 * C153711 * C334) *
              C335 +
          ((C437 * C122 + C436 * C123 + C435 * C124 + C434 * C125 +
            (C134 * C369 - C135 * C347 - C134 * C370 + C153792 * C383) * C126) *
               C153810 * C153711 * C333 -
           (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
            C205 * C122) *
               C153810 * C153711 * C332 -
           ((C134 * C371 - C135 * C348 - C134 * C372 + C153792 * C384) * C126 +
            C441 * C125 + C440 * C124 + C439 * C123 + C438 * C122) *
               C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
            C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
            C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
               C2874 +
           (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
              C153810 * C153711 * C153695 * C130 -
          (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
           (C2958 + C2957 + C2956) * C2874) *
              C153810 * C153711 * C153695 * C131 +
          (C2970 * C2874 + (C2964 + C2963 + C2962) * C2875 +
           (C2965 + C2966 + C2967) * C154058) *
              C153810 * C153711 * C153695 * C132 -
          ((C2881 * C371 - C2882 * C348 - C2881 * C372 + C154071 * C384 +
            C2879 * C369 - C2880 * C347 - C2879 * C370 + C154097 * C383 +
            C2877 * C154 - C2878 * C141 - C2877 * C155 + C154109 * C165) *
               C154058 +
           (C2967 + C2966 + C2965) * C2875 + C2971 * C2874) *
              C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C153711 * C332 -
           ((C3278 + C3279 + C3280) * C154058 +
            (C3281 + C3282 + C3283) * C2875 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C2874) *
               C153810 * C153711 * C333 +
           ((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
             C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
             C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                C2874 +
            (C3284 + C3285 + C3286) * C2875 +
            (C3287 + C3288 + C3289) * C154058) *
               C153810 * C153711 * C334) *
              C335 +
          (((C3283 + C3282 + C3281) * C2874 + (C3280 + C3279 + C3278) * C2875 +
            (C2877 * C351 - C2878 * C338 - C2877 * C352 + C154109 * C374 +
             C2879 * C365 - C2880 * C345 - C2879 * C366 + C154097 * C381 +
             C2881 * C1378 - C2882 * C1372 - C2881 * C1379 + C154071 * C1387) *
                C154058) *
               C153810 * C153711 * C333 -
           (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
            (C2958 + C2957 + C2956) * C2874) *
               C153810 * C153711 * C332 -
           ((C2881 * C3199 - C2882 * C3192 - C2881 * C3200 + C154071 * C3204 +
             C2879 * C1378 - C2880 * C1372 - C2879 * C1379 + C154097 * C1387 +
             C2877 * C365 - C2878 * C345 - C2877 * C366 + C154109 * C381) *
                C154058 +
            (C3289 + C3288 + C3287) * C2875 + (C3286 + C3285 + C3284) * C2874) *
               C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
            C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
            C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
               C154106 +
           (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
              C153810 * C153711 * C153695 * C130 -
          (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
           (C24293 + C24292 + C24291) * C154106) *
              C153810 * C153711 * C153695 * C131 +
          (C24305 * C154106 + (C24299 + C24298 + C24297) * C154087 +
           (C24300 + C24301 + C24302) * C154058) *
              C153810 * C153711 * C153695 * C132 -
          ((C24216 * C371 - C24217 * C348 - C24216 * C372 + C154071 * C384 +
            C24214 * C369 - C24215 * C347 - C24214 * C370 + C24207 * C383 +
            C24212 * C154 - C24213 * C141 - C24212 * C155 + C24206 * C165) *
               C154058 +
           (C24302 + C24301 + C24300) * C154087 + C24306 * C154106) *
              C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C153711 * C332 -
           ((C24597 + C24598 + C24599) * C154058 +
            (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C153711 * C333 +
           ((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C154106 +
            (C24603 + C24604 + C24605) * C154087 +
            (C24606 + C24607 + C24608) * C154058) *
               C153810 * C153711 * C334) *
              C335 +
          (((C24602 + C24601 + C24600) * C154106 +
            (C24599 + C24598 + C24597) * C154087 +
            (C24212 * C351 - C24213 * C338 - C24212 * C352 + C24206 * C374 +
             C24214 * C365 - C24215 * C345 - C24214 * C366 + C24207 * C381 +
             C24216 * C1378 - C24217 * C1372 - C24216 * C1379 +
             C154071 * C1387) *
                C154058) *
               C153810 * C153711 * C333 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C153711 * C332 -
           ((C24216 * C3199 - C24217 * C3192 - C24216 * C3200 +
             C154071 * C3204 + C24214 * C1378 - C24215 * C1372 -
             C24214 * C1379 + C24207 * C1387 + C24212 * C365 - C24213 * C345 -
             C24212 * C366 + C24206 * C381) *
                C154058 +
            (C24608 + C24607 + C24606) * C154087 +
            (C24605 + C24604 + C24603) * C154106) *
               C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
           C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
           C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
           C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
           C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
              C153638 * C153810 * C153711 * C153695 * C130 -
          (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
           C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
           C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
           C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
           C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
              C153638 * C153810 * C153711 * C153695 * C131 +
          (C28428 * C148 - C28429 * C138 - C28428 * C149 + C28422 * C162 +
           C28430 * C353 - C28431 * C339 - C28430 * C354 + C28423 * C375 +
           C28432 * C363 - C28433 * C344 - C28432 * C364 + C28424 * C380 +
           C28434 * C1380 - C28435 * C1373 - C28434 * C1381 + C28425 * C1388 +
           C28436 * C3197 - C28437 * C3191 - C28436 * C3198 + C28426 * C3203) *
              C153638 * C153810 * C153711 * C153695 * C132 -
          (C28436 * C3199 - C28437 * C3192 - C28436 * C3200 + C28426 * C3204 +
           C28434 * C1378 - C28435 * C1372 - C28434 * C1379 + C28425 * C1387 +
           C28432 * C365 - C28433 * C345 - C28432 * C366 + C28424 * C381 +
           C28430 * C351 - C28431 * C338 - C28430 * C352 + C28423 * C374 +
           C28428 * C150 - C28429 * C139 - C28428 * C151 + C28422 * C163) *
              C153638 * C153810 * C153711 * C153695 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C153711 * C332 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C153711 * C333 +
           (C28428 * C359 - C28429 * C342 - C28428 * C360 + C28422 * C378 +
            C28430 * C1384 - C28431 * C1375 - C28430 * C1385 + C28423 * C1390 +
            C28432 * C3193 - C28433 * C3189 - C28432 * C3194 + C28424 * C3201 +
            C28434 * C4808 - C28435 * C4803 - C28434 * C4809 + C28425 * C4812 +
            C28436 * C28562 - C28437 * C28560 - C28436 * C28563 +
            C28426 * C28566) *
               C153638 * C153810 * C153711 * C334) *
              C335 +
          ((C28428 * C355 - C28429 * C340 - C28428 * C356 + C28422 * C376 +
            C28430 * C361 - C28431 * C343 - C28430 * C362 + C28423 * C379 +
            C28432 * C1382 - C28433 * C1374 - C28432 * C1383 + C28424 * C1389 +
            C28434 * C3195 - C28435 * C3190 - C28434 * C3196 + C28425 * C3202 +
            C28436 * C4806 - C28437 * C4802 - C28436 * C4807 + C28426 * C4811) *
               C153638 * C153810 * C153711 * C333 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C153711 * C332 -
           (C28436 * C28564 - C28437 * C28561 - C28436 * C28565 +
            C28426 * C28567 + C28434 * C4806 - C28435 * C4802 - C28434 * C4807 +
            C28425 * C4811 + C28432 * C3195 - C28433 * C3190 - C28432 * C3196 +
            C28424 * C3202 + C28430 * C1382 - C28431 * C1374 - C28430 * C1383 +
            C28423 * C1389 + C28428 * C361 - C28429 * C343 - C28428 * C362 +
            C28422 * C379) *
               C153638 * C153810 * C153711 * C334) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[365] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C153711 * C154092 -
           (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) * C122) *
               C153810 * C153711 * C154093 +
           ((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) * C122 +
            C438 * C123 + C439 * C124 + C440 * C125 + C441 * C126) *
               C153810 * C153711 * C1657) *
              C154013 +
          ((C437 * C122 + C436 * C123 + C435 * C124 + C434 * C125 +
            C808 * C126) *
               C153810 * C153711 * C154093 -
           (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
            C205 * C122) *
               C153810 * C153711 * C154092 -
           ((C134 * C371 - C135 * C348 - C134 * C372 + C153792 * C384) * C126 +
            C441 * C125 + C440 * C124 + C439 * C123 + C438 * C122) *
               C153810 * C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C153711 * C154092 -
           (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C2874) *
               C153810 * C153711 * C154093 +
           ((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
             C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
             C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                C2874 +
            (C3284 + C3285 + C3286) * C2875 +
            (C3287 + C3288 + C3289) * C154058) *
               C153810 * C153711 * C1657) *
              C154013 +
          (((C3283 + C3282 + C3281) * C2874 + (C3280 + C3279 + C3278) * C2875 +
            (C3846 + C3847 + C3848) * C154058) *
               C153810 * C153711 * C154093 -
           (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
            (C2958 + C2957 + C2956) * C2874) *
               C153810 * C153711 * C154092 -
           ((C2881 * C3199 - C2882 * C3192 - C2881 * C3200 + C154071 * C3204 +
             C2879 * C1378 - C2880 * C1372 - C2879 * C1379 + C154097 * C1387 +
             C2877 * C365 - C2878 * C345 - C2877 * C366 + C154109 * C381) *
                C154058 +
            (C3289 + C3288 + C3287) * C2875 + (C3286 + C3285 + C3284) * C2874) *
               C153810 * C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C153711 * C154092 -
           (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C153711 * C154093 +
           ((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C154106 +
            (C24603 + C24604 + C24605) * C154087 +
            (C24606 + C24607 + C24608) * C154058) *
               C153810 * C153711 * C1657) *
              C154013 +
          (((C24602 + C24601 + C24600) * C154106 +
            (C24599 + C24598 + C24597) * C154087 +
            (C25149 + C25150 + C25151) * C154058) *
               C153810 * C153711 * C154093 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C153711 * C154092 -
           ((C24216 * C3199 - C24217 * C3192 - C24216 * C3200 +
             C154071 * C3204 + C24214 * C1378 - C24215 * C1372 -
             C24214 * C1379 + C24207 * C1387 + C24212 * C365 - C24213 * C345 -
             C24212 * C366 + C24206 * C381) *
                C154058 +
            (C24608 + C24607 + C24606) * C154087 +
            (C24605 + C24604 + C24603) * C154106) *
               C153810 * C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C153711 * C154092 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C153711 * C154093 +
           (C28428 * C359 - C28429 * C342 - C28428 * C360 + C28422 * C378 +
            C28430 * C1384 - C28431 * C1375 - C28430 * C1385 + C28423 * C1390 +
            C28432 * C3193 - C28433 * C3189 - C28432 * C3194 + C28424 * C3201 +
            C28434 * C4808 - C28435 * C4803 - C28434 * C4809 + C28425 * C4812 +
            C28436 * C28562 - C28437 * C28560 - C28436 * C28563 +
            C28426 * C28566) *
               C153638 * C153810 * C153711 * C1657) *
              C154013 +
          ((C28428 * C355 - C28429 * C340 - C28428 * C356 + C28422 * C376 +
            C28430 * C361 - C28431 * C343 - C28430 * C362 + C28423 * C379 +
            C28432 * C1382 - C28433 * C1374 - C28432 * C1383 + C28424 * C1389 +
            C28434 * C3195 - C28435 * C3190 - C28434 * C3196 + C28425 * C3202 +
            C28436 * C4806 - C28437 * C4802 - C28436 * C4807 + C28426 * C4811) *
               C153638 * C153810 * C153711 * C154093 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C153711 * C154092 -
           (C28436 * C28564 - C28437 * C28561 - C28436 * C28565 +
            C28426 * C28567 + C28434 * C4806 - C28435 * C4802 - C28434 * C4807 +
            C28425 * C4811 + C28432 * C3195 - C28433 * C3190 - C28432 * C3196 +
            C28424 * C3202 + C28430 * C1382 - C28431 * C1374 - C28430 * C1383 +
            C28423 * C1389 + C28428 * C361 - C28429 * C343 - C28428 * C362 +
            C28422 * C379) *
               C153638 * C153810 * C153711 * C1657) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[366] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C154022 -
           (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
            (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) * C122) *
               C153810 * C153775) *
              C154092 +
          (((C134 * C1111 - C135 * C1105 - C134 * C1112 + C153792 * C1123) *
                C122 +
            C1154 * C123 + C1155 * C124 + C1156 * C125 + C1157 * C126) *
               C153810 * C153775 -
           (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) * C122) *
               C153810 * C154022) *
              C154093 +
          (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) * C122 +
            C438 * C123 + C439 * C124 + C440 * C125 + C441 * C126) *
               C153810 * C154022 -
           ((C134 * C1949 - C135 * C1944 - C134 * C1950 + C153792 * C1959) *
                C126 +
            (C134 * C1951 - C135 * C1945 - C134 * C1952 + C153792 * C1960) *
                C125 +
            (C134 * C1953 - C135 * C1946 - C134 * C1954 + C153792 * C1961) *
                C124 +
            (C134 * C1955 - C135 * C1947 - C134 * C1956 + C153792 * C1962) *
                C123 +
            (C134 * C1957 - C135 * C1948 - C134 * C1958 + C153792 * C1963) *
                C122) *
               C153810 * C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C154022 -
           (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
            (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
             C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
             C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                C2874) *
               C153810 * C153775) *
              C154092 +
          (((C2877 * C1111 - C2878 * C1105 - C2877 * C1112 + C154109 * C1123 +
             C2879 * C1957 - C2880 * C1948 - C2879 * C1958 + C154097 * C1963 +
             C2881 * C4383 - C2882 * C4379 - C2881 * C4384 + C154071 * C4391) *
                C2874 +
            (C4432 + C4433 + C4434) * C2875 +
            (C4435 + C4436 + C4437) * C154058) *
               C153810 * C153775 -
           (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C2874) *
               C153810 * C154022) *
              C154093 +
          (((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
             C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
             C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                C2874 +
            (C3284 + C3285 + C3286) * C2875 +
            (C3287 + C3288 + C3289) * C154058) *
               C153810 * C154022 -
           ((C2881 * C5772 - C2882 * C5769 - C2881 * C5773 + C154071 * C5778 +
             C2879 * C4387 - C2880 * C4381 - C2879 * C4388 + C154097 * C4393 +
             C2877 * C1953 - C2878 * C1946 - C2877 * C1954 + C154109 * C1961) *
                C154058 +
            (C2881 * C5774 - C2882 * C5770 - C2881 * C5775 + C154071 * C5779 +
             C2879 * C4385 - C2880 * C4380 - C2879 * C4386 + C154097 * C4392 +
             C2877 * C1955 - C2878 * C1947 - C2877 * C1956 + C154109 * C1962) *
                C2875 +
            (C2881 * C5776 - C2882 * C5771 - C2881 * C5777 + C154071 * C5780 +
             C2879 * C4383 - C2880 * C4379 - C2879 * C4384 + C154097 * C4391 +
             C2877 * C1957 - C2878 * C1948 - C2877 * C1958 + C154109 * C1963) *
                C2874) *
               C153810 * C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C154022 -
           (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C153775) *
              C154092 +
          (((C24212 * C1111 - C24213 * C1105 - C24212 * C1112 + C24206 * C1123 +
             C24214 * C1957 - C24215 * C1948 - C24214 * C1958 + C24207 * C1963 +
             C24216 * C4383 - C24217 * C4379 - C24216 * C4384 +
             C154071 * C4391) *
                C154106 +
            (C25719 + C25720 + C25721) * C154087 +
            (C25722 + C25723 + C25724) * C154058) *
               C153810 * C153775 -
           (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C154022) *
              C154093 +
          (((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C154106 +
            (C24603 + C24604 + C24605) * C154087 +
            (C24606 + C24607 + C24608) * C154058) *
               C153810 * C154022 -
           ((C24216 * C5772 - C24217 * C5769 - C24216 * C5773 +
             C154071 * C5778 + C24214 * C4387 - C24215 * C4381 -
             C24214 * C4388 + C24207 * C4393 + C24212 * C1953 - C24213 * C1946 -
             C24212 * C1954 + C24206 * C1961) *
                C154058 +
            (C24216 * C5774 - C24217 * C5770 - C24216 * C5775 +
             C154071 * C5779 + C24214 * C4385 - C24215 * C4380 -
             C24214 * C4386 + C24207 * C4392 + C24212 * C1955 - C24213 * C1947 -
             C24212 * C1956 + C24206 * C1962) *
                C154087 +
            (C24216 * C5776 - C24217 * C5771 - C24216 * C5777 +
             C154071 * C5780 + C24214 * C4383 - C24215 * C4379 -
             C24214 * C4384 + C24207 * C4391 + C24212 * C1957 - C24213 * C1948 -
             C24212 * C1958 + C24206 * C1963) *
                C154106) *
               C153810 * C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C154022 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C153775) *
              C154092 +
          ((C28428 * C1111 - C28429 * C1105 - C28428 * C1112 + C28422 * C1123 +
            C28430 * C1957 - C28431 * C1948 - C28430 * C1958 + C28423 * C1963 +
            C28432 * C4383 - C28433 * C4379 - C28432 * C4384 + C28424 * C4391 +
            C28434 * C5776 - C28435 * C5771 - C28434 * C5777 + C28425 * C5780 +
            C28436 * C29106 - C28437 * C29104 - C28436 * C29107 +
            C28426 * C29110) *
               C153638 * C153810 * C153775 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C154022) *
              C154093 +
          ((C28428 * C359 - C28429 * C342 - C28428 * C360 + C28422 * C378 +
            C28430 * C1384 - C28431 * C1375 - C28430 * C1385 + C28423 * C1390 +
            C28432 * C3193 - C28433 * C3189 - C28432 * C3194 + C28424 * C3201 +
            C28434 * C4808 - C28435 * C4803 - C28434 * C4809 + C28425 * C4812 +
            C28436 * C28562 - C28437 * C28560 - C28436 * C28563 +
            C28426 * C28566) *
               C153638 * C153810 * C154022 -
           (C28436 * C29853 - C28437 * C29852 - C28436 * C29854 +
            C28426 * C29855 + C28434 * C29106 - C28435 * C29104 -
            C28434 * C29107 + C28425 * C29110 + C28432 * C5776 -
            C28433 * C5771 - C28432 * C5777 + C28424 * C5780 + C28430 * C4383 -
            C28431 * C4379 - C28430 * C4384 + C28423 * C4391 + C28428 * C1957 -
            C28429 * C1948 - C28428 * C1958 + C28422 * C1963) *
               C153638 * C153810 * C153775) *
              C1657) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[367] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
           C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
              C153810 * C153711 * C1366 -
          (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
           (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) * C122) *
              C153810 * C153711 * C1367 +
          ((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) * C122 +
           C438 * C123 + C439 * C124 + C440 * C125 + C441 * C126) *
              C153810 * C153711 * C1368 -
          ((C134 * C1376 - C135 * C1371 - C134 * C1377 + C153792 * C1386) *
               C126 +
           (C134 * C1378 - C135 * C1372 - C134 * C1379 + C153792 * C1387) *
               C125 +
           (C134 * C1380 - C135 * C1373 - C134 * C1381 + C153792 * C1388) *
               C124 +
           (C134 * C1382 - C135 * C1374 - C134 * C1383 + C153792 * C1389) *
               C123 +
           (C134 * C1384 - C135 * C1375 - C134 * C1385 + C153792 * C1390) *
               C122) *
              C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C153711 * C1279 -
           (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) * C122) *
               C153810 * C153711 * C153747) *
              C1281 +
          ((C437 * C122 + C436 * C123 + C435 * C124 + C434 * C125 +
            C808 * C126) *
               C153810 * C153711 * C153747 -
           (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
            C205 * C122) *
               C153810 * C153711 * C1279) *
              C1282 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125 +
            C210 * C126) *
               C153810 * C153711 * C1279 -
           ((C134 * C798 - C135 * C797 - C134 * C799 + C153792 * C800) * C126 +
            C808 * C125 + C434 * C124 + C435 * C123 + C436 * C122) *
               C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C563 -
           (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
            (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) * C122) *
               C153810 * C564 +
           ((C134 * C588 - C135 * C571 - C134 * C589 + C153792 * C607) * C122 +
            C667 * C123 + C668 * C124 + C669 * C125 + C670 * C126) *
               C153810 * C565) *
              C1279 +
          (((C134 * C1111 - C135 * C1105 - C134 * C1112 + C153792 * C1123) *
                C122 +
            C1154 * C123 + C1155 * C124 + C1156 * C125 + C1157 * C126) *
               C153810 * C564 -
           (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) * C122) *
               C153810 * C563 -
           ((C134 * C1518 - C135 * C1513 - C134 * C1519 + C153792 * C1528) *
                C126 +
            (C134 * C1520 - C135 * C1514 - C134 * C1521 + C153792 * C1529) *
                C125 +
            (C134 * C1522 - C135 * C1515 - C134 * C1523 + C153792 * C1530) *
                C124 +
            (C134 * C1524 - C135 * C1516 - C134 * C1525 + C153792 * C1531) *
                C123 +
            (C134 * C1526 - C135 * C1517 - C134 * C1527 + C153792 * C1532) *
                C122) *
               C153810 * C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C153711 * C1279 -
           (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C2874) *
               C153810 * C153711 * C153747) *
              C1281 +
          (((C3283 + C3282 + C3281) * C2874 + (C3280 + C3279 + C3278) * C2875 +
            (C3846 + C3847 + C3848) * C154058) *
               C153810 * C153711 * C153747 -
           (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
            (C2958 + C2957 + C2956) * C2874) *
               C153810 * C153711 * C1279) *
              C1282 +
          ((C2970 * C2874 + (C2964 + C2963 + C2962) * C2875 +
            (C2965 + C2966 + C2967) * C154058) *
               C153810 * C153711 * C1279 -
           ((C2881 * C1376 - C2882 * C1371 - C2881 * C1377 + C154071 * C1386 +
             C2879 * C367 - C2880 * C346 - C2879 * C368 + C154097 * C382 +
             C2877 * C349 - C2878 * C337 - C2877 * C350 + C154109 * C373) *
                C154058 +
            (C3848 + C3847 + C3846) * C2875 + C3839 * C2874) *
               C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
            C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
            C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
               C2874 +
           (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
              C153810 * C153711 * C1366 -
          (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
           (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
            C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
            C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
               C2874) *
              C153810 * C153711 * C1367 +
          ((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
            C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
            C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
               C2874 +
           (C3284 + C3285 + C3286) * C2875 +
           (C3287 + C3288 + C3289) * C154058) *
              C153810 * C153711 * C1368 -
          ((C2881 * C4804 - C2882 * C4801 - C2881 * C4805 + C154071 * C4810 +
            C2879 * C3197 - C2880 * C3191 - C2879 * C3198 + C154097 * C3203 +
            C2877 * C1380 - C2878 * C1373 - C2877 * C1381 + C154109 * C1388) *
               C154058 +
           (C2881 * C4806 - C2882 * C4802 - C2881 * C4807 + C154071 * C4811 +
            C2879 * C3195 - C2880 * C3190 - C2879 * C3196 + C154097 * C3202 +
            C2877 * C1382 - C2878 * C1374 - C2877 * C1383 + C154109 * C1389) *
               C2875 +
           (C2881 * C4808 - C2882 * C4803 - C2881 * C4809 + C154071 * C4812 +
            C2879 * C3193 - C2880 * C3189 - C2879 * C3194 + C154097 * C3201 +
            C2877 * C1384 - C2878 * C1375 - C2877 * C1385 + C154109 * C1390) *
               C2874) *
              C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C563 -
           (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
            (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
             C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
             C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                C2874) *
               C153810 * C564 +
           ((C2877 * C588 - C2878 * C571 - C2877 * C589 + C154109 * C607 +
             C2879 * C1526 - C2880 * C1517 - C2879 * C1527 + C154097 * C1532 +
             C2881 * C3511 - C2882 * C3507 - C2881 * C3512 + C154071 * C3519) *
                C2874 +
            (C3602 + C3603 + C3604) * C2875 +
            (C3605 + C3606 + C3607) * C154058) *
               C153810 * C565) *
              C1279 +
          (((C2877 * C1111 - C2878 * C1105 - C2877 * C1112 + C154109 * C1123 +
             C2879 * C1957 - C2880 * C1948 - C2879 * C1958 + C154097 * C1963 +
             C2881 * C4383 - C2882 * C4379 - C2881 * C4384 + C154071 * C4391) *
                C2874 +
            (C4432 + C4433 + C4434) * C2875 +
            (C4435 + C4436 + C4437) * C154058) *
               C153810 * C564 -
           (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C2874) *
               C153810 * C563 -
           ((C2881 * C5034 - C2882 * C5031 - C2881 * C5035 + C154071 * C5040 +
             C2879 * C3515 - C2880 * C3509 - C2879 * C3516 + C154097 * C3521 +
             C2877 * C1522 - C2878 * C1515 - C2877 * C1523 + C154109 * C1530) *
                C154058 +
            (C2881 * C5036 - C2882 * C5032 - C2881 * C5037 + C154071 * C5041 +
             C2879 * C3513 - C2880 * C3508 - C2879 * C3514 + C154097 * C3520 +
             C2877 * C1524 - C2878 * C1516 - C2877 * C1525 + C154109 * C1531) *
                C2875 +
            (C2881 * C5038 - C2882 * C5033 - C2881 * C5039 + C154071 * C5042 +
             C2879 * C3511 - C2880 * C3507 - C2879 * C3512 + C154097 * C3519 +
             C2877 * C1526 - C2878 * C1517 - C2877 * C1527 + C154109 * C1532) *
                C2874) *
               C153810 * C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C153711 * C1279 -
           (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C153711 * C153747) *
              C1281 +
          (((C24602 + C24601 + C24600) * C154106 +
            (C24599 + C24598 + C24597) * C154087 +
            (C25149 + C25150 + C25151) * C154058) *
               C153810 * C153711 * C153747 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C153711 * C1279) *
              C1282 +
          ((C24305 * C154106 + (C24299 + C24298 + C24297) * C154087 +
            (C24300 + C24301 + C24302) * C154058) *
               C153810 * C153711 * C1279 -
           ((C24216 * C1376 - C24217 * C1371 - C24216 * C1377 +
             C154071 * C1386 + C24214 * C367 - C24215 * C346 - C24214 * C368 +
             C24207 * C382 + C24212 * C349 - C24213 * C337 - C24212 * C350 +
             C24206 * C373) *
                C154058 +
            (C25151 + C25150 + C25149) * C154087 + C25142 * C154106) *
               C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
            C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
            C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
               C154106 +
           (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
              C153810 * C153711 * C1366 -
          (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
           (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 + C154071 * C1390 +
            C24214 * C359 - C24215 * C342 - C24214 * C360 + C24207 * C378 +
            C24212 * C357 - C24213 * C341 - C24212 * C358 + C24206 * C377) *
               C154106) *
              C153810 * C153711 * C1367 +
          ((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
            C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
            C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
            C154071 * C3201) *
               C154106 +
           (C24603 + C24604 + C24605) * C154087 +
           (C24606 + C24607 + C24608) * C154058) *
              C153810 * C153711 * C1368 -
          ((C24216 * C4804 - C24217 * C4801 - C24216 * C4805 + C154071 * C4810 +
            C24214 * C3197 - C24215 * C3191 - C24214 * C3198 + C24207 * C3203 +
            C24212 * C1380 - C24213 * C1373 - C24212 * C1381 + C24206 * C1388) *
               C154058 +
           (C24216 * C4806 - C24217 * C4802 - C24216 * C4807 + C154071 * C4811 +
            C24214 * C3195 - C24215 * C3190 - C24214 * C3196 + C24207 * C3202 +
            C24212 * C1382 - C24213 * C1374 - C24212 * C1383 + C24206 * C1389) *
               C154087 +
           (C24216 * C4808 - C24217 * C4803 - C24216 * C4809 + C154071 * C4812 +
            C24214 * C3193 - C24215 * C3189 - C24214 * C3194 + C24207 * C3201 +
            C24212 * C1384 - C24213 * C1375 - C24212 * C1385 + C24206 * C1390) *
               C154106) *
              C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C563 -
           (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C564 +
           ((C24212 * C588 - C24213 * C571 - C24212 * C589 + C24206 * C607 +
             C24214 * C1526 - C24215 * C1517 - C24214 * C1527 + C24207 * C1532 +
             C24216 * C3511 - C24217 * C3507 - C24216 * C3512 +
             C154071 * C3519) *
                C154106 +
            (C24905 + C24906 + C24907) * C154087 +
            (C24908 + C24909 + C24910) * C154058) *
               C153810 * C565) *
              C1279 +
          (((C24212 * C1111 - C24213 * C1105 - C24212 * C1112 + C24206 * C1123 +
             C24214 * C1957 - C24215 * C1948 - C24214 * C1958 + C24207 * C1963 +
             C24216 * C4383 - C24217 * C4379 - C24216 * C4384 +
             C154071 * C4391) *
                C154106 +
            (C25719 + C25720 + C25721) * C154087 +
            (C25722 + C25723 + C25724) * C154058) *
               C153810 * C564 -
           (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C563 -
           ((C24216 * C5034 - C24217 * C5031 - C24216 * C5035 +
             C154071 * C5040 + C24214 * C3515 - C24215 * C3509 -
             C24214 * C3516 + C24207 * C3521 + C24212 * C1522 - C24213 * C1515 -
             C24212 * C1523 + C24206 * C1530) *
                C154058 +
            (C24216 * C5036 - C24217 * C5032 - C24216 * C5037 +
             C154071 * C5041 + C24214 * C3513 - C24215 * C3508 -
             C24214 * C3514 + C24207 * C3520 + C24212 * C1524 - C24213 * C1516 -
             C24212 * C1525 + C24206 * C1531) *
                C154087 +
            (C24216 * C5038 - C24217 * C5033 - C24216 * C5039 +
             C154071 * C5042 + C24214 * C3511 - C24215 * C3507 -
             C24214 * C3512 + C24207 * C3519 + C24212 * C1526 - C24213 * C1517 -
             C24212 * C1527 + C24206 * C1532) *
                C154106) *
               C153810 * C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C153711 * C1279 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C153711 * C153747) *
              C1281 +
          ((C28428 * C355 - C28429 * C340 - C28428 * C356 + C28422 * C376 +
            C28430 * C361 - C28431 * C343 - C28430 * C362 + C28423 * C379 +
            C28432 * C1382 - C28433 * C1374 - C28432 * C1383 + C28424 * C1389 +
            C28434 * C3195 - C28435 * C3190 - C28434 * C3196 + C28425 * C3202 +
            C28436 * C4806 - C28437 * C4802 - C28436 * C4807 + C28426 * C4811) *
               C153638 * C153810 * C153711 * C153747 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C153711 * C1279) *
              C1282 +
          ((C28428 * C148 - C28429 * C138 - C28428 * C149 + C28422 * C162 +
            C28430 * C353 - C28431 * C339 - C28430 * C354 + C28423 * C375 +
            C28432 * C363 - C28433 * C344 - C28432 * C364 + C28424 * C380 +
            C28434 * C1380 - C28435 * C1373 - C28434 * C1381 + C28425 * C1388 +
            C28436 * C3197 - C28437 * C3191 - C28436 * C3198 + C28426 * C3203) *
               C153638 * C153810 * C153711 * C1279 -
           (C28436 * C4804 - C28437 * C4801 - C28436 * C4805 + C28426 * C4810 +
            C28434 * C3197 - C28435 * C3191 - C28434 * C3198 + C28425 * C3203 +
            C28432 * C1380 - C28433 * C1373 - C28432 * C1381 + C28424 * C1388 +
            C28430 * C363 - C28431 * C344 - C28430 * C364 + C28423 * C380 +
            C28428 * C353 - C28429 * C339 - C28428 * C354 + C28422 * C375) *
               C153638 * C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
           C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
           C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
           C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
           C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
              C153638 * C153810 * C153711 * C1366 -
          (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
           C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
           C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
           C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
           C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
              C153638 * C153810 * C153711 * C1367 +
          (C28428 * C359 - C28429 * C342 - C28428 * C360 + C28422 * C378 +
           C28430 * C1384 - C28431 * C1375 - C28430 * C1385 + C28423 * C1390 +
           C28432 * C3193 - C28433 * C3189 - C28432 * C3194 + C28424 * C3201 +
           C28434 * C4808 - C28435 * C4803 - C28434 * C4809 + C28425 * C4812 +
           C28436 * C28562 - C28437 * C28560 - C28436 * C28563 +
           C28426 * C28566) *
              C153638 * C153810 * C153711 * C1368 -
          (C28436 * C29317 - C28437 * C29316 - C28436 * C29318 +
           C28426 * C29319 + C28434 * C28562 - C28435 * C28560 -
           C28434 * C28563 + C28425 * C28566 + C28432 * C4808 - C28433 * C4803 -
           C28432 * C4809 + C28424 * C4812 + C28430 * C3193 - C28431 * C3189 -
           C28430 * C3194 + C28423 * C3201 + C28428 * C1384 - C28429 * C1375 -
           C28428 * C1385 + C28422 * C1390) *
              C153638 * C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C563 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C564 +
           (C28428 * C588 - C28429 * C571 - C28428 * C589 + C28422 * C607 +
            C28430 * C1526 - C28431 * C1517 - C28430 * C1527 + C28423 * C1532 +
            C28432 * C3511 - C28433 * C3507 - C28432 * C3512 + C28424 * C3519 +
            C28434 * C5038 - C28435 * C5033 - C28434 * C5039 + C28425 * C5042 +
            C28436 * C28692 - C28437 * C28690 - C28436 * C28693 +
            C28426 * C28696) *
               C153638 * C153810 * C565) *
              C1279 +
          ((C28428 * C1111 - C28429 * C1105 - C28428 * C1112 + C28422 * C1123 +
            C28430 * C1957 - C28431 * C1948 - C28430 * C1958 + C28423 * C1963 +
            C28432 * C4383 - C28433 * C4379 - C28432 * C4384 + C28424 * C4391 +
            C28434 * C5776 - C28435 * C5771 - C28434 * C5777 + C28425 * C5780 +
            C28436 * C29106 - C28437 * C29104 - C28436 * C29107 +
            C28426 * C29110) *
               C153638 * C153810 * C564 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C563 -
           (C28436 * C29443 - C28437 * C29442 - C28436 * C29444 +
            C28426 * C29445 + C28434 * C28692 - C28435 * C28690 -
            C28434 * C28693 + C28425 * C28696 + C28432 * C5038 -
            C28433 * C5033 - C28432 * C5039 + C28424 * C5042 + C28430 * C3511 -
            C28431 * C3507 - C28430 * C3512 + C28423 * C3519 + C28428 * C1526 -
            C28429 * C1517 - C28428 * C1527 + C28422 * C1532) *
               C153638 * C153810 * C565) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[368] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                C153810 * C154022 -
            (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
             (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) *
                 C122) *
                C153810 * C153775) *
               C1279 +
           (((C134 * C1111 - C135 * C1105 - C134 * C1112 + C153792 * C1123) *
                 C122 +
             C1154 * C123 + C1155 * C124 + C1156 * C125 + C1157 * C126) *
                C153810 * C153775 -
            (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C122) *
                C153810 * C154022) *
               C153747) *
              C154013 +
          (((C666 * C122 + C665 * C123 + C664 * C124 + C663 * C125 +
             C943 * C126) *
                C153810 * C153775 -
            (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
             C205 * C122) *
                C153810 * C154022) *
               C1279 +
           ((C437 * C122 + C436 * C123 + C435 * C124 + C434 * C125 +
             C808 * C126) *
                C153810 * C154022 -
            ((C134 * C1121 - C135 * C1110 - C134 * C1122 + C153792 * C1128) *
                 C126 +
             C1157 * C125 + C1156 * C124 + C1155 * C123 + C1154 * C122) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C2874 +
             (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
                C153810 * C154022 -
            (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
             (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
              C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
              C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                 C2874) *
                C153810 * C153775) *
               C1279 +
           (((C2877 * C1111 - C2878 * C1105 - C2877 * C1112 + C154109 * C1123 +
              C2879 * C1957 - C2880 * C1948 - C2879 * C1958 + C154097 * C1963 +
              C2881 * C4383 - C2882 * C4379 - C2881 * C4384 + C154071 * C4391) *
                 C2874 +
             (C4432 + C4433 + C4434) * C2875 +
             (C4435 + C4436 + C4437) * C154058) *
                C153810 * C153775 -
            (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C2874) *
                C153810 * C154022) *
               C153747) *
              C154013 +
          ((((C3601 + C3600 + C3599) * C2874 + (C3598 + C3597 + C3596) * C2875 +
             (C4087 + C4088 + C4089) * C154058) *
                C153810 * C153775 -
            (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
             (C2958 + C2957 + C2956) * C2874) *
                C153810 * C154022) *
               C1279 +
           (((C3283 + C3282 + C3281) * C2874 + (C3280 + C3279 + C3278) * C2875 +
             (C3846 + C3847 + C3848) * C154058) *
                C153810 * C154022 -
            ((C2881 * C4389 - C2882 * C4382 - C2881 * C4390 + C154071 * C4394 +
              C2879 * C1951 - C2880 * C1945 - C2879 * C1952 + C154097 * C1960 +
              C2877 * C1117 - C2878 * C1108 - C2877 * C1118 + C154109 * C1126) *
                 C154058 +
             (C4437 + C4436 + C4435) * C2875 +
             (C4434 + C4433 + C4432) * C2874) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154106 +
             (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
                C153810 * C154022 -
            (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
             (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
              C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
              C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
              C24212 * C587 + C24206 * C606) *
                 C154106) *
                C153810 * C153775) *
               C1279 +
           (((C24212 * C1111 - C24213 * C1105 - C24212 * C1112 +
              C24206 * C1123 + C24214 * C1957 - C24215 * C1948 -
              C24214 * C1958 + C24207 * C1963 + C24216 * C4383 -
              C24217 * C4379 - C24216 * C4384 + C154071 * C4391) *
                 C154106 +
             (C25719 + C25720 + C25721) * C154087 +
             (C25722 + C25723 + C25724) * C154058) *
                C153810 * C153775 -
            (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C154106) *
                C153810 * C154022) *
               C153747) *
              C154013 +
          ((((C24904 + C24903 + C24902) * C154106 +
             (C24901 + C24900 + C24899) * C154087 +
             (C25390 + C25391 + C25392) * C154058) *
                C153810 * C153775 -
            (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
             (C24293 + C24292 + C24291) * C154106) *
                C153810 * C154022) *
               C1279 +
           (((C24602 + C24601 + C24600) * C154106 +
             (C24599 + C24598 + C24597) * C154087 +
             (C25149 + C25150 + C25151) * C154058) *
                C153810 * C154022 -
            ((C24216 * C4389 - C24217 * C4382 - C24216 * C4390 +
              C154071 * C4394 + C24214 * C1951 - C24215 * C1945 -
              C24214 * C1952 + C24207 * C1960 + C24212 * C1117 -
              C24213 * C1108 - C24212 * C1118 + C24206 * C1126) *
                 C154058 +
             (C25724 + C25723 + C25722) * C154087 +
             (C25721 + C25720 + C25719) * C154106) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
             C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
             C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
             C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
             C28436 * C3193 - C28437 * C3189 - C28436 * C3194 +
             C28426 * C3201) *
                C153638 * C153810 * C154022 -
            (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
             C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
             C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
             C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
             C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
                C153638 * C153810 * C153775) *
               C1279 +
           ((C28428 * C1111 - C28429 * C1105 - C28428 * C1112 + C28422 * C1123 +
             C28430 * C1957 - C28431 * C1948 - C28430 * C1958 + C28423 * C1963 +
             C28432 * C4383 - C28433 * C4379 - C28432 * C4384 + C28424 * C4391 +
             C28434 * C5776 - C28435 * C5771 - C28434 * C5777 + C28425 * C5780 +
             C28436 * C29106 - C28437 * C29104 - C28436 * C29107 +
             C28426 * C29110) *
                C153638 * C153810 * C153775 -
            (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
             C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
             C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
             C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
             C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
                C153638 * C153810 * C154022) *
               C153747) *
              C154013 +
          (((C28428 * C584 - C28429 * C569 - C28428 * C585 + C28422 * C605 +
             C28430 * C1113 - C28431 * C1106 - C28430 * C1114 + C28423 * C1124 +
             C28432 * C1955 - C28433 * C1947 - C28432 * C1956 + C28424 * C1962 +
             C28434 * C4385 - C28435 * C4380 - C28434 * C4386 + C28425 * C4392 +
             C28436 * C5774 - C28437 * C5770 - C28436 * C5775 +
             C28426 * C5779) *
                C153638 * C153810 * C153775 -
            (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
             C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
             C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
             C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
             C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
                C153638 * C153810 * C154022) *
               C1279 +
           ((C28428 * C355 - C28429 * C340 - C28428 * C356 + C28422 * C376 +
             C28430 * C361 - C28431 * C343 - C28430 * C362 + C28423 * C379 +
             C28432 * C1382 - C28433 * C1374 - C28432 * C1383 + C28424 * C1389 +
             C28434 * C3195 - C28435 * C3190 - C28434 * C3196 + C28425 * C3202 +
             C28436 * C4806 - C28437 * C4802 - C28436 * C4807 +
             C28426 * C4811) *
                C153638 * C153810 * C154022 -
            (C28436 * C29108 - C28437 * C29105 - C28436 * C29109 +
             C28426 * C29111 + C28434 * C5774 - C28435 * C5770 -
             C28434 * C5775 + C28425 * C5779 + C28432 * C4385 - C28433 * C4380 -
             C28432 * C4386 + C28424 * C4392 + C28430 * C1955 - C28431 * C1947 -
             C28430 * C1956 + C28423 * C1962 + C28428 * C1113 - C28429 * C1106 -
             C28428 * C1114 + C28422 * C1124) *
                C153638 * C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[369] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C153711 * C1279 -
           (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) * C122) *
               C153810 * C153711 * C153747) *
              C1281 +
          ((C437 * C122 + C436 * C123 + C435 * C124 + C434 * C125 +
            C808 * C126) *
               C153810 * C153711 * C153747 -
           (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
            C205 * C122) *
               C153810 * C153711 * C1279) *
              C1282 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125 +
            C210 * C126) *
               C153810 * C153711 * C1279 -
           ((C134 * C798 - C135 * C797 - C134 * C799 + C153792 * C800) * C126 +
            C808 * C125 + C434 * C124 + C435 * C123 + C436 * C122) *
               C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
           C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
              C153810 * C153711 * C1366 -
          (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
           (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) * C122) *
              C153810 * C153711 * C1367 +
          ((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) * C122 +
           C438 * C123 + C439 * C124 + C440 * C125 + C441 * C126) *
              C153810 * C153711 * C1368 -
          ((C134 * C1376 - C135 * C1371 - C134 * C1377 + C153792 * C1386) *
               C126 +
           (C134 * C1378 - C135 * C1372 - C134 * C1379 + C153792 * C1387) *
               C125 +
           (C134 * C1380 - C135 * C1373 - C134 * C1381 + C153792 * C1388) *
               C124 +
           (C134 * C1382 - C135 * C1374 - C134 * C1383 + C153792 * C1389) *
               C123 +
           (C134 * C1384 - C135 * C1375 - C134 * C1385 + C153792 * C1390) *
               C122) *
              C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C153711 * C1279 -
           (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C2874) *
               C153810 * C153711 * C153747) *
              C1281 +
          (((C3283 + C3282 + C3281) * C2874 + (C3280 + C3279 + C3278) * C2875 +
            (C3846 + C3847 + C3848) * C154058) *
               C153810 * C153711 * C153747 -
           (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
            (C2958 + C2957 + C2956) * C2874) *
               C153810 * C153711 * C1279) *
              C1282 +
          ((C2970 * C2874 + (C2964 + C2963 + C2962) * C2875 +
            (C2965 + C2966 + C2967) * C154058) *
               C153810 * C153711 * C1279 -
           ((C2881 * C1376 - C2882 * C1371 - C2881 * C1377 + C154071 * C1386 +
             C2879 * C367 - C2880 * C346 - C2879 * C368 + C154097 * C382 +
             C2877 * C349 - C2878 * C337 - C2877 * C350 + C154109 * C373) *
                C154058 +
            (C3848 + C3847 + C3846) * C2875 + C3839 * C2874) *
               C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
            C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
            C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
               C2874 +
           (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
              C153810 * C153711 * C1366 -
          (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
           (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
            C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
            C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
               C2874) *
              C153810 * C153711 * C1367 +
          ((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
            C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
            C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
               C2874 +
           (C3284 + C3285 + C3286) * C2875 +
           (C3287 + C3288 + C3289) * C154058) *
              C153810 * C153711 * C1368 -
          ((C2881 * C4804 - C2882 * C4801 - C2881 * C4805 + C154071 * C4810 +
            C2879 * C3197 - C2880 * C3191 - C2879 * C3198 + C154097 * C3203 +
            C2877 * C1380 - C2878 * C1373 - C2877 * C1381 + C154109 * C1388) *
               C154058 +
           (C2881 * C4806 - C2882 * C4802 - C2881 * C4807 + C154071 * C4811 +
            C2879 * C3195 - C2880 * C3190 - C2879 * C3196 + C154097 * C3202 +
            C2877 * C1382 - C2878 * C1374 - C2877 * C1383 + C154109 * C1389) *
               C2875 +
           (C2881 * C4808 - C2882 * C4803 - C2881 * C4809 + C154071 * C4812 +
            C2879 * C3193 - C2880 * C3189 - C2879 * C3194 + C154097 * C3201 +
            C2877 * C1384 - C2878 * C1375 - C2877 * C1385 + C154109 * C1390) *
               C2874) *
              C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C153711 * C1279 -
           (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C153711 * C153747) *
              C1281 +
          (((C24602 + C24601 + C24600) * C154106 +
            (C24599 + C24598 + C24597) * C154087 +
            (C25149 + C25150 + C25151) * C154058) *
               C153810 * C153711 * C153747 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C153711 * C1279) *
              C1282 +
          ((C24305 * C154106 + (C24299 + C24298 + C24297) * C154087 +
            (C24300 + C24301 + C24302) * C154058) *
               C153810 * C153711 * C1279 -
           ((C24216 * C1376 - C24217 * C1371 - C24216 * C1377 +
             C154071 * C1386 + C24214 * C367 - C24215 * C346 - C24214 * C368 +
             C24207 * C382 + C24212 * C349 - C24213 * C337 - C24212 * C350 +
             C24206 * C373) *
                C154058 +
            (C25151 + C25150 + C25149) * C154087 + C25142 * C154106) *
               C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
            C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
            C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
               C154106 +
           (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
              C153810 * C153711 * C1366 -
          (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
           (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 + C154071 * C1390 +
            C24214 * C359 - C24215 * C342 - C24214 * C360 + C24207 * C378 +
            C24212 * C357 - C24213 * C341 - C24212 * C358 + C24206 * C377) *
               C154106) *
              C153810 * C153711 * C1367 +
          ((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
            C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
            C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
            C154071 * C3201) *
               C154106 +
           (C24603 + C24604 + C24605) * C154087 +
           (C24606 + C24607 + C24608) * C154058) *
              C153810 * C153711 * C1368 -
          ((C24216 * C4804 - C24217 * C4801 - C24216 * C4805 + C154071 * C4810 +
            C24214 * C3197 - C24215 * C3191 - C24214 * C3198 + C24207 * C3203 +
            C24212 * C1380 - C24213 * C1373 - C24212 * C1381 + C24206 * C1388) *
               C154058 +
           (C24216 * C4806 - C24217 * C4802 - C24216 * C4807 + C154071 * C4811 +
            C24214 * C3195 - C24215 * C3190 - C24214 * C3196 + C24207 * C3202 +
            C24212 * C1382 - C24213 * C1374 - C24212 * C1383 + C24206 * C1389) *
               C154087 +
           (C24216 * C4808 - C24217 * C4803 - C24216 * C4809 + C154071 * C4812 +
            C24214 * C3193 - C24215 * C3189 - C24214 * C3194 + C24207 * C3201 +
            C24212 * C1384 - C24213 * C1375 - C24212 * C1385 + C24206 * C1390) *
               C154106) *
              C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C153711 * C1279 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C153711 * C153747) *
              C1281 +
          ((C28428 * C355 - C28429 * C340 - C28428 * C356 + C28422 * C376 +
            C28430 * C361 - C28431 * C343 - C28430 * C362 + C28423 * C379 +
            C28432 * C1382 - C28433 * C1374 - C28432 * C1383 + C28424 * C1389 +
            C28434 * C3195 - C28435 * C3190 - C28434 * C3196 + C28425 * C3202 +
            C28436 * C4806 - C28437 * C4802 - C28436 * C4807 + C28426 * C4811) *
               C153638 * C153810 * C153711 * C153747 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C153711 * C1279) *
              C1282 +
          ((C28428 * C148 - C28429 * C138 - C28428 * C149 + C28422 * C162 +
            C28430 * C353 - C28431 * C339 - C28430 * C354 + C28423 * C375 +
            C28432 * C363 - C28433 * C344 - C28432 * C364 + C28424 * C380 +
            C28434 * C1380 - C28435 * C1373 - C28434 * C1381 + C28425 * C1388 +
            C28436 * C3197 - C28437 * C3191 - C28436 * C3198 + C28426 * C3203) *
               C153638 * C153810 * C153711 * C1279 -
           (C28436 * C4804 - C28437 * C4801 - C28436 * C4805 + C28426 * C4810 +
            C28434 * C3197 - C28435 * C3191 - C28434 * C3198 + C28425 * C3203 +
            C28432 * C1380 - C28433 * C1373 - C28432 * C1381 + C28424 * C1388 +
            C28430 * C363 - C28431 * C344 - C28430 * C364 + C28423 * C380 +
            C28428 * C353 - C28429 * C339 - C28428 * C354 + C28422 * C375) *
               C153638 * C153810 * C153711 * C153747) *
              C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
           C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
           C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
           C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
           C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
              C153638 * C153810 * C153711 * C1366 -
          (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
           C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
           C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
           C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
           C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
              C153638 * C153810 * C153711 * C1367 +
          (C28428 * C359 - C28429 * C342 - C28428 * C360 + C28422 * C378 +
           C28430 * C1384 - C28431 * C1375 - C28430 * C1385 + C28423 * C1390 +
           C28432 * C3193 - C28433 * C3189 - C28432 * C3194 + C28424 * C3201 +
           C28434 * C4808 - C28435 * C4803 - C28434 * C4809 + C28425 * C4812 +
           C28436 * C28562 - C28437 * C28560 - C28436 * C28563 +
           C28426 * C28566) *
              C153638 * C153810 * C153711 * C1368 -
          (C28436 * C29317 - C28437 * C29316 - C28436 * C29318 +
           C28426 * C29319 + C28434 * C28562 - C28435 * C28560 -
           C28434 * C28563 + C28425 * C28566 + C28432 * C4808 - C28433 * C4803 -
           C28432 * C4809 + C28424 * C4812 + C28430 * C3193 - C28431 * C3189 -
           C28430 * C3194 + C28423 * C3201 + C28428 * C1384 - C28429 * C1375 -
           C28428 * C1385 + C28422 * C1390) *
              C153638 * C153810 * C153711 * C1369) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[370] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
                C153810 * C2086 -
            (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
             (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) *
                 C122) *
                C153810 * C153775) *
               C154021 +
           (((C134 * C1111 - C135 * C1105 - C134 * C1112 + C153792 * C1123) *
                 C122 +
             C1154 * C123 + C1155 * C124 + C1156 * C125 + C1157 * C126) *
                C153810 * C153775 -
            (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
             (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) *
                 C122) *
                C153810 * C2086) *
               C153747) *
              C154013 +
          (((C666 * C122 + C665 * C123 + C664 * C124 + C663 * C125 +
             C943 * C126) *
                C153810 * C153775 -
            (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
             C205 * C122) *
                C153810 * C2086) *
               C154021 +
           ((C437 * C122 + C436 * C123 + C435 * C124 + C434 * C125 +
             C808 * C126) *
                C153810 * C2086 -
            ((C134 * C1121 - C135 * C1110 - C134 * C1122 + C153792 * C1128) *
                 C126 +
             C1157 * C125 + C1156 * C124 + C1155 * C123 + C1154 * C122) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
              C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
              C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                 C2874 +
             (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
                C153810 * C2086 -
            (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
             (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
              C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
              C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                 C2874) *
                C153810 * C153775) *
               C154021 +
           (((C2877 * C1111 - C2878 * C1105 - C2877 * C1112 + C154109 * C1123 +
              C2879 * C1957 - C2880 * C1948 - C2879 * C1958 + C154097 * C1963 +
              C2881 * C4383 - C2882 * C4379 - C2881 * C4384 + C154071 * C4391) *
                 C2874 +
             (C4432 + C4433 + C4434) * C2875 +
             (C4435 + C4436 + C4437) * C154058) *
                C153810 * C153775 -
            (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
             (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
              C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
              C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                 C2874) *
                C153810 * C2086) *
               C153747) *
              C154013 +
          ((((C3601 + C3600 + C3599) * C2874 + (C3598 + C3597 + C3596) * C2875 +
             (C4087 + C4088 + C4089) * C154058) *
                C153810 * C153775 -
            (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
             (C2958 + C2957 + C2956) * C2874) *
                C153810 * C2086) *
               C154021 +
           (((C3283 + C3282 + C3281) * C2874 + (C3280 + C3279 + C3278) * C2875 +
             (C3846 + C3847 + C3848) * C154058) *
                C153810 * C2086 -
            ((C2881 * C4389 - C2882 * C4382 - C2881 * C4390 + C154071 * C4394 +
              C2879 * C1951 - C2880 * C1945 - C2879 * C1952 + C154097 * C1960 +
              C2877 * C1117 - C2878 * C1108 - C2877 * C1118 + C154109 * C1126) *
                 C154058 +
             (C4437 + C4436 + C4435) * C2875 +
             (C4434 + C4433 + C4432) * C2874) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
              C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
              C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                 C154106 +
             (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
                C153810 * C2086 -
            (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
             (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
              C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
              C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
              C24212 * C587 + C24206 * C606) *
                 C154106) *
                C153810 * C153775) *
               C154021 +
           (((C24212 * C1111 - C24213 * C1105 - C24212 * C1112 +
              C24206 * C1123 + C24214 * C1957 - C24215 * C1948 -
              C24214 * C1958 + C24207 * C1963 + C24216 * C4383 -
              C24217 * C4379 - C24216 * C4384 + C154071 * C4391) *
                 C154106 +
             (C25719 + C25720 + C25721) * C154087 +
             (C25722 + C25723 + C25724) * C154058) *
                C153810 * C153775 -
            (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
             (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
              C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
              C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
              C24206 * C377) *
                 C154106) *
                C153810 * C2086) *
               C153747) *
              C154013 +
          ((((C24904 + C24903 + C24902) * C154106 +
             (C24901 + C24900 + C24899) * C154087 +
             (C25390 + C25391 + C25392) * C154058) *
                C153810 * C153775 -
            (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
             (C24293 + C24292 + C24291) * C154106) *
                C153810 * C2086) *
               C154021 +
           (((C24602 + C24601 + C24600) * C154106 +
             (C24599 + C24598 + C24597) * C154087 +
             (C25149 + C25150 + C25151) * C154058) *
                C153810 * C2086 -
            ((C24216 * C4389 - C24217 * C4382 - C24216 * C4390 +
              C154071 * C4394 + C24214 * C1951 - C24215 * C1945 -
              C24214 * C1952 + C24207 * C1960 + C24212 * C1117 -
              C24213 * C1108 - C24212 * C1118 + C24206 * C1126) *
                 C154058 +
             (C25724 + C25723 + C25722) * C154087 +
             (C25721 + C25720 + C25719) * C154106) *
                C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
             C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
             C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
             C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
             C28436 * C3193 - C28437 * C3189 - C28436 * C3194 +
             C28426 * C3201) *
                C153638 * C153810 * C2086 -
            (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
             C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
             C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
             C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
             C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
                C153638 * C153810 * C153775) *
               C154021 +
           ((C28428 * C1111 - C28429 * C1105 - C28428 * C1112 + C28422 * C1123 +
             C28430 * C1957 - C28431 * C1948 - C28430 * C1958 + C28423 * C1963 +
             C28432 * C4383 - C28433 * C4379 - C28432 * C4384 + C28424 * C4391 +
             C28434 * C5776 - C28435 * C5771 - C28434 * C5777 + C28425 * C5780 +
             C28436 * C29106 - C28437 * C29104 - C28436 * C29107 +
             C28426 * C29110) *
                C153638 * C153810 * C153775 -
            (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
             C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
             C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
             C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
             C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
                C153638 * C153810 * C2086) *
               C153747) *
              C154013 +
          (((C28428 * C584 - C28429 * C569 - C28428 * C585 + C28422 * C605 +
             C28430 * C1113 - C28431 * C1106 - C28430 * C1114 + C28423 * C1124 +
             C28432 * C1955 - C28433 * C1947 - C28432 * C1956 + C28424 * C1962 +
             C28434 * C4385 - C28435 * C4380 - C28434 * C4386 + C28425 * C4392 +
             C28436 * C5774 - C28437 * C5770 - C28436 * C5775 +
             C28426 * C5779) *
                C153638 * C153810 * C153775 -
            (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
             C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
             C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
             C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
             C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
                C153638 * C153810 * C2086) *
               C154021 +
           ((C28428 * C355 - C28429 * C340 - C28428 * C356 + C28422 * C376 +
             C28430 * C361 - C28431 * C343 - C28430 * C362 + C28423 * C379 +
             C28432 * C1382 - C28433 * C1374 - C28432 * C1383 + C28424 * C1389 +
             C28434 * C3195 - C28435 * C3190 - C28434 * C3196 + C28425 * C3202 +
             C28436 * C4806 - C28437 * C4802 - C28436 * C4807 +
             C28426 * C4811) *
                C153638 * C153810 * C2086 -
            (C28436 * C29108 - C28437 * C29105 - C28436 * C29109 +
             C28426 * C29111 + C28434 * C5774 - C28435 * C5770 -
             C28434 * C5775 + C28425 * C5779 + C28432 * C4385 - C28433 * C4380 -
             C28432 * C4386 + C28424 * C4392 + C28430 * C1955 - C28431 * C1947 -
             C28430 * C1956 + C28423 * C1962 + C28428 * C1113 - C28429 * C1106 -
             C28428 * C1114 + C28422 * C1124) *
                C153638 * C153810 * C153775) *
               C153747) *
              C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[371] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C154094 -
           (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
            (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) * C122) *
               C153810 * C154095 +
           ((C134 * C588 - C135 * C571 - C134 * C589 + C153792 * C607) * C122 +
            C667 * C123 + C668 * C124 + C669 * C125 + C670 * C126) *
               C153810 * C2602) *
              C154021 +
          (((C134 * C1111 - C135 * C1105 - C134 * C1112 + C153792 * C1123) *
                C122 +
            C1154 * C123 + C1155 * C124 + C1156 * C125 + C1157 * C126) *
               C153810 * C154095 -
           (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) * C122) *
               C153810 * C154094 -
           ((C134 * C1518 - C135 * C1513 - C134 * C1519 + C153792 * C1528) *
                C126 +
            (C134 * C1520 - C135 * C1514 - C134 * C1521 + C153792 * C1529) *
                C125 +
            (C134 * C1522 - C135 * C1515 - C134 * C1523 + C153792 * C1530) *
                C124 +
            (C134 * C1524 - C135 * C1516 - C134 * C1525 + C153792 * C1531) *
                C123 +
            (C134 * C1526 - C135 * C1517 - C134 * C1527 + C153792 * C1532) *
                C122) *
               C153810 * C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C154094 -
           (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
            (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
             C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
             C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                C2874) *
               C153810 * C154095 +
           ((C2877 * C588 - C2878 * C571 - C2877 * C589 + C154109 * C607 +
             C2879 * C1526 - C2880 * C1517 - C2879 * C1527 + C154097 * C1532 +
             C2881 * C3511 - C2882 * C3507 - C2881 * C3512 + C154071 * C3519) *
                C2874 +
            (C3602 + C3603 + C3604) * C2875 +
            (C3605 + C3606 + C3607) * C154058) *
               C153810 * C2602) *
              C154021 +
          (((C2877 * C1111 - C2878 * C1105 - C2877 * C1112 + C154109 * C1123 +
             C2879 * C1957 - C2880 * C1948 - C2879 * C1958 + C154097 * C1963 +
             C2881 * C4383 - C2882 * C4379 - C2881 * C4384 + C154071 * C4391) *
                C2874 +
            (C4432 + C4433 + C4434) * C2875 +
            (C4435 + C4436 + C4437) * C154058) *
               C153810 * C154095 -
           (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C2874) *
               C153810 * C154094 -
           ((C2881 * C5034 - C2882 * C5031 - C2881 * C5035 + C154071 * C5040 +
             C2879 * C3515 - C2880 * C3509 - C2879 * C3516 + C154097 * C3521 +
             C2877 * C1522 - C2878 * C1515 - C2877 * C1523 + C154109 * C1530) *
                C154058 +
            (C2881 * C5036 - C2882 * C5032 - C2881 * C5037 + C154071 * C5041 +
             C2879 * C3513 - C2880 * C3508 - C2879 * C3514 + C154097 * C3520 +
             C2877 * C1524 - C2878 * C1516 - C2877 * C1525 + C154109 * C1531) *
                C2875 +
            (C2881 * C5038 - C2882 * C5033 - C2881 * C5039 + C154071 * C5042 +
             C2879 * C3511 - C2880 * C3507 - C2879 * C3512 + C154097 * C3519 +
             C2877 * C1526 - C2878 * C1517 - C2877 * C1527 + C154109 * C1532) *
                C2874) *
               C153810 * C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C154094 -
           (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C154095 +
           ((C24212 * C588 - C24213 * C571 - C24212 * C589 + C24206 * C607 +
             C24214 * C1526 - C24215 * C1517 - C24214 * C1527 + C24207 * C1532 +
             C24216 * C3511 - C24217 * C3507 - C24216 * C3512 +
             C154071 * C3519) *
                C154106 +
            (C24905 + C24906 + C24907) * C154087 +
            (C24908 + C24909 + C24910) * C154058) *
               C153810 * C2602) *
              C154021 +
          (((C24212 * C1111 - C24213 * C1105 - C24212 * C1112 + C24206 * C1123 +
             C24214 * C1957 - C24215 * C1948 - C24214 * C1958 + C24207 * C1963 +
             C24216 * C4383 - C24217 * C4379 - C24216 * C4384 +
             C154071 * C4391) *
                C154106 +
            (C25719 + C25720 + C25721) * C154087 +
            (C25722 + C25723 + C25724) * C154058) *
               C153810 * C154095 -
           (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C154094 -
           ((C24216 * C5034 - C24217 * C5031 - C24216 * C5035 +
             C154071 * C5040 + C24214 * C3515 - C24215 * C3509 -
             C24214 * C3516 + C24207 * C3521 + C24212 * C1522 - C24213 * C1515 -
             C24212 * C1523 + C24206 * C1530) *
                C154058 +
            (C24216 * C5036 - C24217 * C5032 - C24216 * C5037 +
             C154071 * C5041 + C24214 * C3513 - C24215 * C3508 -
             C24214 * C3514 + C24207 * C3520 + C24212 * C1524 - C24213 * C1516 -
             C24212 * C1525 + C24206 * C1531) *
                C154087 +
            (C24216 * C5038 - C24217 * C5033 - C24216 * C5039 +
             C154071 * C5042 + C24214 * C3511 - C24215 * C3507 -
             C24214 * C3512 + C24207 * C3519 + C24212 * C1526 - C24213 * C1517 -
             C24212 * C1527 + C24206 * C1532) *
                C154106) *
               C153810 * C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C154094 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C154095 +
           (C28428 * C588 - C28429 * C571 - C28428 * C589 + C28422 * C607 +
            C28430 * C1526 - C28431 * C1517 - C28430 * C1527 + C28423 * C1532 +
            C28432 * C3511 - C28433 * C3507 - C28432 * C3512 + C28424 * C3519 +
            C28434 * C5038 - C28435 * C5033 - C28434 * C5039 + C28425 * C5042 +
            C28436 * C28692 - C28437 * C28690 - C28436 * C28693 +
            C28426 * C28696) *
               C153638 * C153810 * C2602) *
              C154021 +
          ((C28428 * C1111 - C28429 * C1105 - C28428 * C1112 + C28422 * C1123 +
            C28430 * C1957 - C28431 * C1948 - C28430 * C1958 + C28423 * C1963 +
            C28432 * C4383 - C28433 * C4379 - C28432 * C4384 + C28424 * C4391 +
            C28434 * C5776 - C28435 * C5771 - C28434 * C5777 + C28425 * C5780 +
            C28436 * C29106 - C28437 * C29104 - C28436 * C29107 +
            C28426 * C29110) *
               C153638 * C153810 * C154095 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C154094 -
           (C28436 * C29443 - C28437 * C29442 - C28436 * C29444 +
            C28426 * C29445 + C28434 * C28692 - C28435 * C28690 -
            C28434 * C28693 + C28425 * C28696 + C28432 * C5038 -
            C28433 * C5033 - C28432 * C5039 + C28424 * C5042 + C28430 * C3511 -
            C28431 * C3507 - C28430 * C3512 + C28423 * C3519 + C28428 * C1526 -
            C28429 * C1517 - C28428 * C1527 + C28422 * C1532) *
               C153638 * C153810 * C2602) *
              C153747) *
         C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[372] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C2086 -
           (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
            (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) * C122) *
               C153810 * C153775) *
              C332 +
          (((C134 * C1111 - C135 * C1105 - C134 * C1112 + C153792 * C1123) *
                C122 +
            C1154 * C123 + C1155 * C124 + C1156 * C125 + C1157 * C126) *
               C153810 * C153775 -
           (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) * C122) *
               C153810 * C2086) *
              C333 +
          (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) * C122 +
            C438 * C123 + C439 * C124 + C440 * C125 + C441 * C126) *
               C153810 * C2086 -
           ((C134 * C1949 - C135 * C1944 - C134 * C1950 + C153792 * C1959) *
                C126 +
            (C134 * C1951 - C135 * C1945 - C134 * C1952 + C153792 * C1960) *
                C125 +
            (C134 * C1953 - C135 * C1946 - C134 * C1954 + C153792 * C1961) *
                C124 +
            (C134 * C1955 - C135 * C1947 - C134 * C1956 + C153792 * C1962) *
                C123 +
            (C134 * C1957 - C135 * C1948 - C134 * C1958 + C153792 * C1963) *
                C122) *
               C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C2086 -
           (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
            (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) * C122) *
               C153810 * C153775) *
              C153695 * C1281 +
          ((C666 * C122 + C665 * C123 + C664 * C124 + C663 * C125 +
            C943 * C126) *
               C153810 * C153775 -
           (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
            C205 * C122) *
               C153810 * C2086) *
              C153695 * C1282 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125 +
            C210 * C126) *
               C153810 * C2086 -
           ((C134 * C933 - C135 * C932 - C134 * C934 + C153792 * C935) * C126 +
            C943 * C125 + C663 * C124 + C664 * C123 + C665 * C122) *
               C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
           C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
              C153810 * C2292 -
          (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
           (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) * C122) *
              C153810 * C2293 +
          ((C134 * C588 - C135 * C571 - C134 * C589 + C153792 * C607) * C122 +
           C667 * C123 + C668 * C124 + C669 * C125 + C670 * C126) *
              C153810 * C2294 -
          ((C134 * C2301 - C135 * C2296 - C134 * C2302 + C153792 * C2311) *
               C126 +
           (C134 * C2303 - C135 * C2297 - C134 * C2304 + C153792 * C2312) *
               C125 +
           (C134 * C2305 - C135 * C2298 - C134 * C2306 + C153792 * C2313) *
               C124 +
           (C134 * C2307 - C135 * C2299 - C134 * C2308 + C153792 * C2314) *
               C123 +
           (C134 * C2309 - C135 * C2300 - C134 * C2310 + C153792 * C2315) *
               C122) *
              C153810 * C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C2086 -
           (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
            (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
             C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
             C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                C2874) *
               C153810 * C153775) *
              C153695 * C1281 +
          (((C3601 + C3600 + C3599) * C2874 + (C3598 + C3597 + C3596) * C2875 +
            (C4087 + C4088 + C4089) * C154058) *
               C153810 * C153775 -
           (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
            (C2958 + C2957 + C2956) * C2874) *
               C153810 * C2086) *
              C153695 * C1282 +
          ((C2970 * C2874 + (C2964 + C2963 + C2962) * C2875 +
            (C2965 + C2966 + C2967) * C154058) *
               C153810 * C2086 -
           ((C2881 * C1949 - C2882 * C1944 - C2881 * C1950 + C154071 * C1959 +
             C2879 * C1119 - C2880 * C1109 - C2879 * C1120 + C154097 * C1127 +
             C2877 * C578 - C2878 * C566 - C2877 * C579 + C154109 * C602) *
                C154058 +
            (C4089 + C4088 + C4087) * C2875 + C4080 * C2874) *
               C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C2086 -
           (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
            (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
             C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
             C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                C2874) *
               C153810 * C153775) *
              C332 +
          (((C2877 * C1111 - C2878 * C1105 - C2877 * C1112 + C154109 * C1123 +
             C2879 * C1957 - C2880 * C1948 - C2879 * C1958 + C154097 * C1963 +
             C2881 * C4383 - C2882 * C4379 - C2881 * C4384 + C154071 * C4391) *
                C2874 +
            (C4432 + C4433 + C4434) * C2875 +
            (C4435 + C4436 + C4437) * C154058) *
               C153810 * C153775 -
           (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C2874) *
               C153810 * C2086) *
              C333 +
          (((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
             C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
             C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                C2874 +
            (C3284 + C3285 + C3286) * C2875 +
            (C3287 + C3288 + C3289) * C154058) *
               C153810 * C2086 -
           ((C2881 * C5772 - C2882 * C5769 - C2881 * C5773 + C154071 * C5778 +
             C2879 * C4387 - C2880 * C4381 - C2879 * C4388 + C154097 * C4393 +
             C2877 * C1953 - C2878 * C1946 - C2877 * C1954 + C154109 * C1961) *
                C154058 +
            (C2881 * C5774 - C2882 * C5770 - C2881 * C5775 + C154071 * C5779 +
             C2879 * C4385 - C2880 * C4380 - C2879 * C4386 + C154097 * C4392 +
             C2877 * C1955 - C2878 * C1947 - C2877 * C1956 + C154109 * C1962) *
                C2875 +
            (C2881 * C5776 - C2882 * C5771 - C2881 * C5777 + C154071 * C5780 +
             C2879 * C4383 - C2880 * C4379 - C2879 * C4384 + C154097 * C4391 +
             C2877 * C1957 - C2878 * C1948 - C2877 * C1958 + C154109 * C1963) *
                C2874) *
               C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
            C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
            C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
               C2874 +
           (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
              C153810 * C2292 -
          (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
           (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
            C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
            C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
               C2874) *
              C153810 * C2293 +
          ((C2877 * C588 - C2878 * C571 - C2877 * C589 + C154109 * C607 +
            C2879 * C1526 - C2880 * C1517 - C2879 * C1527 + C154097 * C1532 +
            C2881 * C3511 - C2882 * C3507 - C2881 * C3512 + C154071 * C3519) *
               C2874 +
           (C3602 + C3603 + C3604) * C2875 +
           (C3605 + C3606 + C3607) * C154058) *
              C153810 * C2294 -
          ((C2881 * C6369 - C2882 * C6363 - C2881 * C6370 + C154071 * C6381 +
            C2879 * C6371 - C2880 * C6364 - C2879 * C6372 + C154097 * C6382 +
            C2877 * C2305 - C2878 * C2298 - C2877 * C2306 + C154109 * C2313) *
               C154058 +
           (C2881 * C6373 - C2882 * C6365 - C2881 * C6374 + C154071 * C6383 +
            C2879 * C6375 - C2880 * C6366 - C2879 * C6376 + C154097 * C6384 +
            C2877 * C2307 - C2878 * C2299 - C2877 * C2308 + C154109 * C2314) *
               C2875 +
           (C2881 * C6377 - C2882 * C6367 - C2881 * C6378 + C154071 * C6385 +
            C2879 * C6379 - C2880 * C6368 - C2879 * C6380 + C154097 * C6386 +
            C2877 * C2309 - C2878 * C2300 - C2877 * C2310 + C154109 * C2315) *
               C2874) *
              C153810 * C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C2086 -
           (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C153775) *
              C153695 * C1281 +
          (((C24904 + C24903 + C24902) * C154106 +
            (C24901 + C24900 + C24899) * C154087 +
            (C25390 + C25391 + C25392) * C154058) *
               C153810 * C153775 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C2086) *
              C153695 * C1282 +
          ((C24305 * C154106 + (C24299 + C24298 + C24297) * C154087 +
            (C24300 + C24301 + C24302) * C154058) *
               C153810 * C2086 -
           ((C24216 * C1949 - C24217 * C1944 - C24216 * C1950 +
             C154071 * C1959 + C24214 * C1119 - C24215 * C1109 -
             C24214 * C1120 + C24207 * C1127 + C24212 * C578 - C24213 * C566 -
             C24212 * C579 + C24206 * C602) *
                C154058 +
            (C25392 + C25391 + C25390) * C154087 + C25383 * C154106) *
               C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C2086 -
           (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C153775) *
              C332 +
          (((C24212 * C1111 - C24213 * C1105 - C24212 * C1112 + C24206 * C1123 +
             C24214 * C1957 - C24215 * C1948 - C24214 * C1958 + C24207 * C1963 +
             C24216 * C4383 - C24217 * C4379 - C24216 * C4384 +
             C154071 * C4391) *
                C154106 +
            (C25719 + C25720 + C25721) * C154087 +
            (C25722 + C25723 + C25724) * C154058) *
               C153810 * C153775 -
           (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C2086) *
              C333 +
          (((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C154106 +
            (C24603 + C24604 + C24605) * C154087 +
            (C24606 + C24607 + C24608) * C154058) *
               C153810 * C2086 -
           ((C24216 * C5772 - C24217 * C5769 - C24216 * C5773 +
             C154071 * C5778 + C24214 * C4387 - C24215 * C4381 -
             C24214 * C4388 + C24207 * C4393 + C24212 * C1953 - C24213 * C1946 -
             C24212 * C1954 + C24206 * C1961) *
                C154058 +
            (C24216 * C5774 - C24217 * C5770 - C24216 * C5775 +
             C154071 * C5779 + C24214 * C4385 - C24215 * C4380 -
             C24214 * C4386 + C24207 * C4392 + C24212 * C1955 - C24213 * C1947 -
             C24212 * C1956 + C24206 * C1962) *
                C154087 +
            (C24216 * C5776 - C24217 * C5771 - C24216 * C5777 +
             C154071 * C5780 + C24214 * C4383 - C24215 * C4379 -
             C24214 * C4384 + C24207 * C4391 + C24212 * C1957 - C24213 * C1948 -
             C24212 * C1958 + C24206 * C1963) *
                C154106) *
               C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
            C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
            C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
               C154106 +
           (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
              C153810 * C2292 -
          (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
           (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 + C154071 * C1963 +
            C24214 * C1111 - C24215 * C1105 - C24214 * C1112 + C24207 * C1123 +
            C24212 * C586 - C24213 * C570 - C24212 * C587 + C24206 * C606) *
               C154106) *
              C153810 * C2293 +
          ((C24212 * C588 - C24213 * C571 - C24212 * C589 + C24206 * C607 +
            C24214 * C1526 - C24215 * C1517 - C24214 * C1527 + C24207 * C1532 +
            C24216 * C3511 - C24217 * C3507 - C24216 * C3512 +
            C154071 * C3519) *
               C154106 +
           (C24905 + C24906 + C24907) * C154087 +
           (C24908 + C24909 + C24910) * C154058) *
              C153810 * C2294 -
          ((C24216 * C6369 - C24217 * C6363 - C24216 * C6370 + C154071 * C6381 +
            C24214 * C6371 - C24215 * C6364 - C24214 * C6372 + C24207 * C6382 +
            C24212 * C2305 - C24213 * C2298 - C24212 * C2306 + C24206 * C2313) *
               C154058 +
           (C24216 * C6373 - C24217 * C6365 - C24216 * C6374 + C154071 * C6383 +
            C24214 * C6375 - C24215 * C6366 - C24214 * C6376 + C24207 * C6384 +
            C24212 * C2307 - C24213 * C2299 - C24212 * C2308 + C24206 * C2314) *
               C154087 +
           (C24216 * C6377 - C24217 * C6367 - C24216 * C6378 + C154071 * C6385 +
            C24214 * C6379 - C24215 * C6368 - C24214 * C6380 + C24207 * C6386 +
            C24212 * C2309 - C24213 * C2300 - C24212 * C2310 + C24206 * C2315) *
               C154106) *
              C153810 * C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C2086 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C153775) *
              C153695 * C1281 +
          ((C28428 * C584 - C28429 * C569 - C28428 * C585 + C28422 * C605 +
            C28430 * C1113 - C28431 * C1106 - C28430 * C1114 + C28423 * C1124 +
            C28432 * C1955 - C28433 * C1947 - C28432 * C1956 + C28424 * C1962 +
            C28434 * C4385 - C28435 * C4380 - C28434 * C4386 + C28425 * C4392 +
            C28436 * C5774 - C28437 * C5770 - C28436 * C5775 + C28426 * C5779) *
               C153638 * C153810 * C153775 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C2086) *
              C153695 * C1282 +
          ((C28428 * C148 - C28429 * C138 - C28428 * C149 + C28422 * C162 +
            C28430 * C353 - C28431 * C339 - C28430 * C354 + C28423 * C375 +
            C28432 * C363 - C28433 * C344 - C28432 * C364 + C28424 * C380 +
            C28434 * C1380 - C28435 * C1373 - C28434 * C1381 + C28425 * C1388 +
            C28436 * C3197 - C28437 * C3191 - C28436 * C3198 + C28426 * C3203) *
               C153638 * C153810 * C2086 -
           (C28436 * C5772 - C28437 * C5769 - C28436 * C5773 + C28426 * C5778 +
            C28434 * C4387 - C28435 * C4381 - C28434 * C4388 + C28425 * C4393 +
            C28432 * C1953 - C28433 * C1946 - C28432 * C1954 + C28424 * C1961 +
            C28430 * C1115 - C28431 * C1107 - C28430 * C1116 + C28423 * C1125 +
            C28428 * C582 - C28429 * C568 - C28428 * C583 + C28422 * C604) *
               C153638 * C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C2086 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C153775) *
              C332 +
          ((C28428 * C1111 - C28429 * C1105 - C28428 * C1112 + C28422 * C1123 +
            C28430 * C1957 - C28431 * C1948 - C28430 * C1958 + C28423 * C1963 +
            C28432 * C4383 - C28433 * C4379 - C28432 * C4384 + C28424 * C4391 +
            C28434 * C5776 - C28435 * C5771 - C28434 * C5777 + C28425 * C5780 +
            C28436 * C29106 - C28437 * C29104 - C28436 * C29107 +
            C28426 * C29110) *
               C153638 * C153810 * C153775 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C2086) *
              C333 +
          ((C28428 * C359 - C28429 * C342 - C28428 * C360 + C28422 * C378 +
            C28430 * C1384 - C28431 * C1375 - C28430 * C1385 + C28423 * C1390 +
            C28432 * C3193 - C28433 * C3189 - C28432 * C3194 + C28424 * C3201 +
            C28434 * C4808 - C28435 * C4803 - C28434 * C4809 + C28425 * C4812 +
            C28436 * C28562 - C28437 * C28560 - C28436 * C28563 +
            C28426 * C28566) *
               C153638 * C153810 * C2086 -
           (C28436 * C29853 - C28437 * C29852 - C28436 * C29854 +
            C28426 * C29855 + C28434 * C29106 - C28435 * C29104 -
            C28434 * C29107 + C28425 * C29110 + C28432 * C5776 -
            C28433 * C5771 - C28432 * C5777 + C28424 * C5780 + C28430 * C4383 -
            C28431 * C4379 - C28430 * C4384 + C28423 * C4391 + C28428 * C1957 -
            C28429 * C1948 - C28428 * C1958 + C28422 * C1963) *
               C153638 * C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
           C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
           C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
           C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
           C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
              C153638 * C153810 * C2292 -
          (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
           C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
           C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
           C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
           C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
              C153638 * C153810 * C2293 +
          (C28428 * C588 - C28429 * C571 - C28428 * C589 + C28422 * C607 +
           C28430 * C1526 - C28431 * C1517 - C28430 * C1527 + C28423 * C1532 +
           C28432 * C3511 - C28433 * C3507 - C28432 * C3512 + C28424 * C3519 +
           C28434 * C5038 - C28435 * C5033 - C28434 * C5039 + C28425 * C5042 +
           C28436 * C28692 - C28437 * C28690 - C28436 * C28693 +
           C28426 * C28696) *
              C153638 * C153810 * C2294 -
          (C28436 * C30184 - C28437 * C30182 - C28436 * C30185 +
           C28426 * C30188 + C28434 * C30186 - C28435 * C30183 -
           C28434 * C30187 + C28425 * C30189 + C28432 * C6377 - C28433 * C6367 -
           C28432 * C6378 + C28424 * C6385 + C28430 * C6379 - C28431 * C6368 -
           C28430 * C6380 + C28423 * C6386 + C28428 * C2309 - C28429 * C2300 -
           C28428 * C2310 + C28422 * C2315) *
              C153638 * C153810 * C2295) *
         C153695 * C153676) /
            (p * q * std::sqrt(p + q));
    d2ee[373] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C154094 -
           (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
            (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) * C122) *
               C153810 * C154095 +
           ((C134 * C588 - C135 * C571 - C134 * C589 + C153792 * C607) * C122 +
            C667 * C123 + C668 * C124 + C669 * C125 + C670 * C126) *
               C153810 * C2602) *
              C153695 * C154013 +
          ((C666 * C122 + C665 * C123 + C664 * C124 + C663 * C125 +
            C943 * C126) *
               C153810 * C154095 -
           (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
            C205 * C122) *
               C153810 * C154094 -
           ((C134 * C600 - C135 * C577 - C134 * C601 + C153792 * C613) * C126 +
            C670 * C125 + C669 * C124 + C668 * C123 + C667 * C122) *
               C153810 * C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C154094 -
           (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
            (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
             C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
             C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                C2874) *
               C153810 * C154095 +
           ((C2877 * C588 - C2878 * C571 - C2877 * C589 + C154109 * C607 +
             C2879 * C1526 - C2880 * C1517 - C2879 * C1527 + C154097 * C1532 +
             C2881 * C3511 - C2882 * C3507 - C2881 * C3512 + C154071 * C3519) *
                C2874 +
            (C3602 + C3603 + C3604) * C2875 +
            (C3605 + C3606 + C3607) * C154058) *
               C153810 * C2602) *
              C153695 * C154013 +
          (((C3601 + C3600 + C3599) * C2874 + (C3598 + C3597 + C3596) * C2875 +
            (C4087 + C4088 + C4089) * C154058) *
               C153810 * C154095 -
           (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
            (C2958 + C2957 + C2956) * C2874) *
               C153810 * C154094 -
           ((C2881 * C3517 - C2882 * C3510 - C2881 * C3518 + C154071 * C3522 +
             C2879 * C1520 - C2880 * C1514 - C2879 * C1521 + C154097 * C1529 +
             C2877 * C594 - C2878 * C574 - C2877 * C595 + C154109 * C610) *
                C154058 +
            (C3607 + C3606 + C3605) * C2875 + (C3604 + C3603 + C3602) * C2874) *
               C153810 * C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C154094 -
           (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C154095 +
           ((C24212 * C588 - C24213 * C571 - C24212 * C589 + C24206 * C607 +
             C24214 * C1526 - C24215 * C1517 - C24214 * C1527 + C24207 * C1532 +
             C24216 * C3511 - C24217 * C3507 - C24216 * C3512 +
             C154071 * C3519) *
                C154106 +
            (C24905 + C24906 + C24907) * C154087 +
            (C24908 + C24909 + C24910) * C154058) *
               C153810 * C2602) *
              C153695 * C154013 +
          (((C24904 + C24903 + C24902) * C154106 +
            (C24901 + C24900 + C24899) * C154087 +
            (C25390 + C25391 + C25392) * C154058) *
               C153810 * C154095 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C154094 -
           ((C24216 * C3517 - C24217 * C3510 - C24216 * C3518 +
             C154071 * C3522 + C24214 * C1520 - C24215 * C1514 -
             C24214 * C1521 + C24207 * C1529 + C24212 * C594 - C24213 * C574 -
             C24212 * C595 + C24206 * C610) *
                C154058 +
            (C24910 + C24909 + C24908) * C154087 +
            (C24907 + C24906 + C24905) * C154106) *
               C153810 * C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C154094 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C154095 +
           (C28428 * C588 - C28429 * C571 - C28428 * C589 + C28422 * C607 +
            C28430 * C1526 - C28431 * C1517 - C28430 * C1527 + C28423 * C1532 +
            C28432 * C3511 - C28433 * C3507 - C28432 * C3512 + C28424 * C3519 +
            C28434 * C5038 - C28435 * C5033 - C28434 * C5039 + C28425 * C5042 +
            C28436 * C28692 - C28437 * C28690 - C28436 * C28693 +
            C28426 * C28696) *
               C153638 * C153810 * C2602) *
              C153695 * C154013 +
          ((C28428 * C584 - C28429 * C569 - C28428 * C585 + C28422 * C605 +
            C28430 * C1113 - C28431 * C1106 - C28430 * C1114 + C28423 * C1124 +
            C28432 * C1955 - C28433 * C1947 - C28432 * C1956 + C28424 * C1962 +
            C28434 * C4385 - C28435 * C4380 - C28434 * C4386 + C28425 * C4392 +
            C28436 * C5774 - C28437 * C5770 - C28436 * C5775 + C28426 * C5779) *
               C153638 * C153810 * C154095 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C154094 -
           (C28436 * C28694 - C28437 * C28691 - C28436 * C28695 +
            C28426 * C28697 + C28434 * C5036 - C28435 * C5032 - C28434 * C5037 +
            C28425 * C5041 + C28432 * C3513 - C28433 * C3508 - C28432 * C3514 +
            C28424 * C3520 + C28430 * C1524 - C28431 * C1516 - C28430 * C1525 +
            C28423 * C1531 + C28428 * C590 - C28429 * C572 - C28428 * C591 +
            C28422 * C608) *
               C153638 * C153810 * C2602) *
              C153695 * C153682)) /
            (p * q * std::sqrt(p + q));
    d2ee[374] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C2086 -
           (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
            (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) * C122) *
               C153810 * C153775) *
              C153695 * C1281 +
          ((C666 * C122 + C665 * C123 + C664 * C124 + C663 * C125 +
            C943 * C126) *
               C153810 * C153775 -
           (C209 * C126 + C208 * C125 + C207 * C124 + C206 * C123 +
            C205 * C122) *
               C153810 * C2086) *
              C153695 * C1282 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125 +
            C210 * C126) *
               C153810 * C2086 -
           ((C134 * C933 - C135 * C932 - C134 * C934 + C153792 * C935) * C126 +
            C943 * C125 + C663 * C124 + C664 * C123 + C665 * C122) *
               C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C153792 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125 + C208 * C126) *
               C153810 * C2086 -
           (C663 * C126 + C664 * C125 + C665 * C124 + C666 * C123 +
            (C134 * C586 - C135 * C570 - C134 * C587 + C153792 * C606) * C122) *
               C153810 * C153775) *
              C332 +
          (((C134 * C1111 - C135 * C1105 - C134 * C1112 + C153792 * C1123) *
                C122 +
            C1154 * C123 + C1155 * C124 + C1156 * C125 + C1157 * C126) *
               C153810 * C153775 -
           (C434 * C126 + C435 * C125 + C436 * C124 + C437 * C123 +
            (C134 * C357 - C135 * C341 - C134 * C358 + C153792 * C377) * C122) *
               C153810 * C2086) *
              C333 +
          (((C134 * C359 - C135 * C342 - C134 * C360 + C153792 * C378) * C122 +
            C438 * C123 + C439 * C124 + C440 * C125 + C441 * C126) *
               C153810 * C2086 -
           ((C134 * C1949 - C135 * C1944 - C134 * C1950 + C153792 * C1959) *
                C126 +
            (C134 * C1951 - C135 * C1945 - C134 * C1952 + C153792 * C1960) *
                C125 +
            (C134 * C1953 - C135 * C1946 - C134 * C1954 + C153792 * C1961) *
                C124 +
            (C134 * C1955 - C135 * C1947 - C134 * C1956 + C153792 * C1962) *
                C123 +
            (C134 * C1957 - C135 * C1948 - C134 * C1958 + C153792 * C1963) *
                C122) *
               C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C2086 -
           (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
            (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
             C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
             C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                C2874) *
               C153810 * C153775) *
              C153695 * C1281 +
          (((C3601 + C3600 + C3599) * C2874 + (C3598 + C3597 + C3596) * C2875 +
            (C4087 + C4088 + C4089) * C154058) *
               C153810 * C153775 -
           (C2971 * C154058 + (C2961 + C2960 + C2959) * C2875 +
            (C2958 + C2957 + C2956) * C2874) *
               C153810 * C2086) *
              C153695 * C1282 +
          ((C2970 * C2874 + (C2964 + C2963 + C2962) * C2875 +
            (C2965 + C2966 + C2967) * C154058) *
               C153810 * C2086 -
           ((C2881 * C1949 - C2882 * C1944 - C2881 * C1950 + C154071 * C1959 +
             C2879 * C1119 - C2880 * C1109 - C2879 * C1120 + C154097 * C1127 +
             C2877 * C578 - C2878 * C566 - C2877 * C579 + C154109 * C602) *
                C154058 +
            (C4089 + C4088 + C4087) * C2875 + C4080 * C2874) *
               C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C2877 * C144 - C2878 * C136 - C2877 * C145 + C154109 * C160 +
             C2879 * C357 - C2880 * C341 - C2879 * C358 + C154097 * C377 +
             C2881 * C359 - C2882 * C342 - C2881 * C360 + C154071 * C378) *
                C2874 +
            (C2956 + C2957 + C2958) * C2875 + C2970 * C154058) *
               C153810 * C2086 -
           (C4080 * C154058 + (C3599 + C3600 + C3601) * C2875 +
            (C2881 * C1957 - C2882 * C1948 - C2881 * C1958 + C154071 * C1963 +
             C2879 * C1111 - C2880 * C1105 - C2879 * C1112 + C154097 * C1123 +
             C2877 * C586 - C2878 * C570 - C2877 * C587 + C154109 * C606) *
                C2874) *
               C153810 * C153775) *
              C332 +
          (((C2877 * C1111 - C2878 * C1105 - C2877 * C1112 + C154109 * C1123 +
             C2879 * C1957 - C2880 * C1948 - C2879 * C1958 + C154097 * C1963 +
             C2881 * C4383 - C2882 * C4379 - C2881 * C4384 + C154071 * C4391) *
                C2874 +
            (C4432 + C4433 + C4434) * C2875 +
            (C4435 + C4436 + C4437) * C154058) *
               C153810 * C153775 -
           (C3839 * C154058 + (C3281 + C3282 + C3283) * C2875 +
            (C2881 * C1384 - C2882 * C1375 - C2881 * C1385 + C154071 * C1390 +
             C2879 * C359 - C2880 * C342 - C2879 * C360 + C154097 * C378 +
             C2877 * C357 - C2878 * C341 - C2877 * C358 + C154109 * C377) *
                C2874) *
               C153810 * C2086) *
              C333 +
          (((C2877 * C359 - C2878 * C342 - C2877 * C360 + C154109 * C378 +
             C2879 * C1384 - C2880 * C1375 - C2879 * C1385 + C154097 * C1390 +
             C2881 * C3193 - C2882 * C3189 - C2881 * C3194 + C154071 * C3201) *
                C2874 +
            (C3284 + C3285 + C3286) * C2875 +
            (C3287 + C3288 + C3289) * C154058) *
               C153810 * C2086 -
           ((C2881 * C5772 - C2882 * C5769 - C2881 * C5773 + C154071 * C5778 +
             C2879 * C4387 - C2880 * C4381 - C2879 * C4388 + C154097 * C4393 +
             C2877 * C1953 - C2878 * C1946 - C2877 * C1954 + C154109 * C1961) *
                C154058 +
            (C2881 * C5774 - C2882 * C5770 - C2881 * C5775 + C154071 * C5779 +
             C2879 * C4385 - C2880 * C4380 - C2879 * C4386 + C154097 * C4392 +
             C2877 * C1955 - C2878 * C1947 - C2877 * C1956 + C154109 * C1962) *
                C2875 +
            (C2881 * C5776 - C2882 * C5771 - C2881 * C5777 + C154071 * C5780 +
             C2879 * C4383 - C2880 * C4379 - C2879 * C4384 + C154097 * C4391 +
             C2877 * C1957 - C2878 * C1948 - C2877 * C1958 + C154109 * C1963) *
                C2874) *
               C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C2086 -
           (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C153775) *
              C153695 * C1281 +
          (((C24904 + C24903 + C24902) * C154106 +
            (C24901 + C24900 + C24899) * C154087 +
            (C25390 + C25391 + C25392) * C154058) *
               C153810 * C153775 -
           (C24306 * C154058 + (C24296 + C24295 + C24294) * C154087 +
            (C24293 + C24292 + C24291) * C154106) *
               C153810 * C2086) *
              C153695 * C1282 +
          ((C24305 * C154106 + (C24299 + C24298 + C24297) * C154087 +
            (C24300 + C24301 + C24302) * C154058) *
               C153810 * C2086 -
           ((C24216 * C1949 - C24217 * C1944 - C24216 * C1950 +
             C154071 * C1959 + C24214 * C1119 - C24215 * C1109 -
             C24214 * C1120 + C24207 * C1127 + C24212 * C578 - C24213 * C566 -
             C24212 * C579 + C24206 * C602) *
                C154058 +
            (C25392 + C25391 + C25390) * C154087 + C25383 * C154106) *
               C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C24212 * C144 - C24213 * C136 - C24212 * C145 + C24206 * C160 +
             C24214 * C357 - C24215 * C341 - C24214 * C358 + C24207 * C377 +
             C24216 * C359 - C24217 * C342 - C24216 * C360 + C154071 * C378) *
                C154106 +
            (C24291 + C24292 + C24293) * C154087 + C24305 * C154058) *
               C153810 * C2086 -
           (C25383 * C154058 + (C24902 + C24903 + C24904) * C154087 +
            (C24216 * C1957 - C24217 * C1948 - C24216 * C1958 +
             C154071 * C1963 + C24214 * C1111 - C24215 * C1105 -
             C24214 * C1112 + C24207 * C1123 + C24212 * C586 - C24213 * C570 -
             C24212 * C587 + C24206 * C606) *
                C154106) *
               C153810 * C153775) *
              C332 +
          (((C24212 * C1111 - C24213 * C1105 - C24212 * C1112 + C24206 * C1123 +
             C24214 * C1957 - C24215 * C1948 - C24214 * C1958 + C24207 * C1963 +
             C24216 * C4383 - C24217 * C4379 - C24216 * C4384 +
             C154071 * C4391) *
                C154106 +
            (C25719 + C25720 + C25721) * C154087 +
            (C25722 + C25723 + C25724) * C154058) *
               C153810 * C153775 -
           (C25142 * C154058 + (C24600 + C24601 + C24602) * C154087 +
            (C24216 * C1384 - C24217 * C1375 - C24216 * C1385 +
             C154071 * C1390 + C24214 * C359 - C24215 * C342 - C24214 * C360 +
             C24207 * C378 + C24212 * C357 - C24213 * C341 - C24212 * C358 +
             C24206 * C377) *
                C154106) *
               C153810 * C2086) *
              C333 +
          (((C24212 * C359 - C24213 * C342 - C24212 * C360 + C24206 * C378 +
             C24214 * C1384 - C24215 * C1375 - C24214 * C1385 + C24207 * C1390 +
             C24216 * C3193 - C24217 * C3189 - C24216 * C3194 +
             C154071 * C3201) *
                C154106 +
            (C24603 + C24604 + C24605) * C154087 +
            (C24606 + C24607 + C24608) * C154058) *
               C153810 * C2086 -
           ((C24216 * C5772 - C24217 * C5769 - C24216 * C5773 +
             C154071 * C5778 + C24214 * C4387 - C24215 * C4381 -
             C24214 * C4388 + C24207 * C4393 + C24212 * C1953 - C24213 * C1946 -
             C24212 * C1954 + C24206 * C1961) *
                C154058 +
            (C24216 * C5774 - C24217 * C5770 - C24216 * C5775 +
             C154071 * C5779 + C24214 * C4385 - C24215 * C4380 -
             C24214 * C4386 + C24207 * C4392 + C24212 * C1955 - C24213 * C1947 -
             C24212 * C1956 + C24206 * C1962) *
                C154087 +
            (C24216 * C5776 - C24217 * C5771 - C24216 * C5777 +
             C154071 * C5780 + C24214 * C4383 - C24215 * C4379 -
             C24214 * C4384 + C24207 * C4391 + C24212 * C1957 - C24213 * C1948 -
             C24212 * C1958 + C24206 * C1963) *
                C154106) *
               C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C2086 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C153775) *
              C153695 * C1281 +
          ((C28428 * C584 - C28429 * C569 - C28428 * C585 + C28422 * C605 +
            C28430 * C1113 - C28431 * C1106 - C28430 * C1114 + C28423 * C1124 +
            C28432 * C1955 - C28433 * C1947 - C28432 * C1956 + C28424 * C1962 +
            C28434 * C4385 - C28435 * C4380 - C28434 * C4386 + C28425 * C4392 +
            C28436 * C5774 - C28437 * C5770 - C28436 * C5775 + C28426 * C5779) *
               C153638 * C153810 * C153775 -
           (C28436 * C3195 - C28437 * C3190 - C28436 * C3196 + C28426 * C3202 +
            C28434 * C1382 - C28435 * C1374 - C28434 * C1383 + C28425 * C1389 +
            C28432 * C361 - C28433 * C343 - C28432 * C362 + C28424 * C379 +
            C28430 * C355 - C28431 * C340 - C28430 * C356 + C28423 * C376 +
            C28428 * C146 - C28429 * C137 - C28428 * C147 + C28422 * C161) *
               C153638 * C153810 * C2086) *
              C153695 * C1282 +
          ((C28428 * C148 - C28429 * C138 - C28428 * C149 + C28422 * C162 +
            C28430 * C353 - C28431 * C339 - C28430 * C354 + C28423 * C375 +
            C28432 * C363 - C28433 * C344 - C28432 * C364 + C28424 * C380 +
            C28434 * C1380 - C28435 * C1373 - C28434 * C1381 + C28425 * C1388 +
            C28436 * C3197 - C28437 * C3191 - C28436 * C3198 + C28426 * C3203) *
               C153638 * C153810 * C2086 -
           (C28436 * C5772 - C28437 * C5769 - C28436 * C5773 + C28426 * C5778 +
            C28434 * C4387 - C28435 * C4381 - C28434 * C4388 + C28425 * C4393 +
            C28432 * C1953 - C28433 * C1946 - C28432 * C1954 + C28424 * C1961 +
            C28430 * C1115 - C28431 * C1107 - C28430 * C1116 + C28423 * C1125 +
            C28428 * C582 - C28429 * C568 - C28428 * C583 + C28422 * C604) *
               C153638 * C153810 * C153775) *
              C153695 * C1283)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C28428 * C144 - C28429 * C136 - C28428 * C145 + C28422 * C160 +
            C28430 * C357 - C28431 * C341 - C28430 * C358 + C28423 * C377 +
            C28432 * C359 - C28433 * C342 - C28432 * C360 + C28424 * C378 +
            C28434 * C1384 - C28435 * C1375 - C28434 * C1385 + C28425 * C1390 +
            C28436 * C3193 - C28437 * C3189 - C28436 * C3194 + C28426 * C3201) *
               C153638 * C153810 * C2086 -
           (C28436 * C5776 - C28437 * C5771 - C28436 * C5777 + C28426 * C5780 +
            C28434 * C4383 - C28435 * C4379 - C28434 * C4384 + C28425 * C4391 +
            C28432 * C1957 - C28433 * C1948 - C28432 * C1958 + C28424 * C1963 +
            C28430 * C1111 - C28431 * C1105 - C28430 * C1112 + C28423 * C1123 +
            C28428 * C586 - C28429 * C570 - C28428 * C587 + C28422 * C606) *
               C153638 * C153810 * C153775) *
              C332 +
          ((C28428 * C1111 - C28429 * C1105 - C28428 * C1112 + C28422 * C1123 +
            C28430 * C1957 - C28431 * C1948 - C28430 * C1958 + C28423 * C1963 +
            C28432 * C4383 - C28433 * C4379 - C28432 * C4384 + C28424 * C4391 +
            C28434 * C5776 - C28435 * C5771 - C28434 * C5777 + C28425 * C5780 +
            C28436 * C29106 - C28437 * C29104 - C28436 * C29107 +
            C28426 * C29110) *
               C153638 * C153810 * C153775 -
           (C28436 * C4808 - C28437 * C4803 - C28436 * C4809 + C28426 * C4812 +
            C28434 * C3193 - C28435 * C3189 - C28434 * C3194 + C28425 * C3201 +
            C28432 * C1384 - C28433 * C1375 - C28432 * C1385 + C28424 * C1390 +
            C28430 * C359 - C28431 * C342 - C28430 * C360 + C28423 * C378 +
            C28428 * C357 - C28429 * C341 - C28428 * C358 + C28422 * C377) *
               C153638 * C153810 * C2086) *
              C333 +
          ((C28428 * C359 - C28429 * C342 - C28428 * C360 + C28422 * C378 +
            C28430 * C1384 - C28431 * C1375 - C28430 * C1385 + C28423 * C1390 +
            C28432 * C3193 - C28433 * C3189 - C28432 * C3194 + C28424 * C3201 +
            C28434 * C4808 - C28435 * C4803 - C28434 * C4809 + C28425 * C4812 +
            C28436 * C28562 - C28437 * C28560 - C28436 * C28563 +
            C28426 * C28566) *
               C153638 * C153810 * C2086 -
           (C28436 * C29853 - C28437 * C29852 - C28436 * C29854 +
            C28426 * C29855 + C28434 * C29106 - C28435 * C29104 -
            C28434 * C29107 + C28425 * C29110 + C28432 * C5776 -
            C28433 * C5771 - C28432 * C5777 + C28424 * C5780 + C28430 * C4383 -
            C28431 * C4379 - C28430 * C4384 + C28423 * C4391 + C28428 * C1957 -
            C28429 * C1948 - C28428 * C1958 + C28422 * C1963) *
               C153638 * C153810 * C153775) *
              C334) *
         C153676) /
            (p * q * std::sqrt(p + q));
}
